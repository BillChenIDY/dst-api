{
    "Component.acidinfusible:SetOnInfuseFn:": {
        "prefix": "components.acidinfusible:SetOnInfuseFn",
        "body": "components.acidinfusible:SetOnInfuseFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.acidinfusible:KillFX:": {
        "prefix": "components.acidinfusible:KillFX",
        "body": "components.acidinfusible:KillFX()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.acidinfusible:OnUninfuse:": {
        "prefix": "components.acidinfusible:OnUninfuse",
        "body": "components.acidinfusible:OnUninfuse()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.acidinfusible:SpawnFX:": {
        "prefix": "components.acidinfusible:SpawnFX",
        "body": "components.acidinfusible:SpawnFX()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.acidinfusible:OnInfuse:": {
        "prefix": "components.acidinfusible:OnInfuse",
        "body": "components.acidinfusible:OnInfuse()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.acidinfusible:SetDamageTakenMultiplier:": {
        "prefix": "components.acidinfusible:SetDamageTakenMultiplier",
        "body": "components.acidinfusible:SetDamageTakenMultiplier(${1:n})",
        "description": " ※Params: \n   (n)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.acidinfusible:SetDamageMultiplier:": {
        "prefix": "components.acidinfusible:SetDamageMultiplier",
        "body": "components.acidinfusible:SetDamageMultiplier(${1:n})",
        "description": " ※Params: \n   (n)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.acidinfusible:SetMultipliers:": {
        "prefix": "components.acidinfusible:SetMultipliers",
        "body": "components.acidinfusible:SetMultipliers(${1:tuning})",
        "description": " ※Params: \n   (tuning)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.acidinfusible:SetUseRainImmunity:": {
        "prefix": "components.acidinfusible:SetUseRainImmunity",
        "body": "components.acidinfusible:SetUseRainImmunity(${1:userainimmunity})",
        "description": " ※Params: \n   (userainimmunity)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.acidinfusible:SetFXLevel:": {
        "prefix": "components.acidinfusible:SetFXLevel",
        "body": "components.acidinfusible:SetFXLevel(${1:level})",
        "description": " ※Params: \n   (level)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.acidinfusible:GetDebugString:": {
        "prefix": "components.acidinfusible:GetDebugString",
        "body": "components.acidinfusible:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.acidinfusible:IsInfused:": {
        "prefix": "components.acidinfusible:IsInfused",
        "body": "components.acidinfusible:IsInfused()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.acidinfusible:SetSpeedMultiplier:": {
        "prefix": "components.acidinfusible:SetSpeedMultiplier",
        "body": "components.acidinfusible:SetSpeedMultiplier(${1:n})",
        "description": " ※Params: \n   (n)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.acidinfusible:OnInfusedDirty:": {
        "prefix": "components.acidinfusible:OnInfusedDirty",
        "body": "components.acidinfusible:OnInfusedDirty(${1:acidraining},${2:hasrainimmunity})",
        "description": " ※Params: \n   (acidraining)<>[] \n   (hasrainimmunity)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.acidinfusible:SetOnUninfuseFn:": {
        "prefix": "components.acidinfusible:SetOnUninfuseFn",
        "body": "components.acidinfusible:SetOnUninfuseFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.acidinfusible:OnRemoveFromEntity:": {
        "prefix": "components.acidinfusible:OnRemoveFromEntity",
        "body": "components.acidinfusible:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.acidlevel:SetPercent:": {
        "prefix": "components.acidlevel:SetPercent",
        "body": "components.acidlevel:SetPercent(${1:percent})",
        "description": " ※Params: \n   (percent)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.acidlevel:OnIsRaining:": {
        "prefix": "components.acidlevel:OnIsRaining",
        "body": "components.acidlevel:OnIsRaining(${1:israining})",
        "description": " ※Params: \n   (israining)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.acidlevel:SetOverrideAcidRainTickFn:": {
        "prefix": "components.acidlevel:SetOverrideAcidRainTickFn",
        "body": "components.acidlevel:SetOverrideAcidRainTickFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.acidlevel:GetPercent:": {
        "prefix": "components.acidlevel:GetPercent",
        "body": "components.acidlevel:GetPercent()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.acidlevel:OnLoad:": {
        "prefix": "components.acidlevel:OnLoad",
        "body": "components.acidlevel:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.acidlevel:GetOverrideAcidRainTickFn:": {
        "prefix": "components.acidlevel:GetOverrideAcidRainTickFn",
        "body": "components.acidlevel:GetOverrideAcidRainTickFn()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.acidlevel:OnIsAcidRaining:": {
        "prefix": "components.acidlevel:OnIsAcidRaining",
        "body": "components.acidlevel:OnIsAcidRaining(${1:isacidraining})",
        "description": " ※Params: \n   (isacidraining)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.acidlevel:SetOnStopIsAcidRainingFn:": {
        "prefix": "components.acidlevel:SetOnStopIsAcidRainingFn",
        "body": "components.acidlevel:SetOnStopIsAcidRainingFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.acidlevel:SetIgnoreAcidRainTicks:": {
        "prefix": "components.acidlevel:SetIgnoreAcidRainTicks",
        "body": "components.acidlevel:SetIgnoreAcidRainTicks(${1:ignoreacidrainticks})",
        "description": " ※Params: \n   (ignoreacidrainticks)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.acidlevel:GetDebugString:": {
        "prefix": "components.acidlevel:GetDebugString",
        "body": "components.acidlevel:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.acidlevel:OnSave:": {
        "prefix": "components.acidlevel:OnSave",
        "body": "components.acidlevel:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.acidlevel:DoDelta:": {
        "prefix": "components.acidlevel:DoDelta",
        "body": "components.acidlevel:DoDelta(${1:delta})",
        "description": " ※Params: \n   (delta)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.acidlevel:SetOnStopIsRainingFn:": {
        "prefix": "components.acidlevel:SetOnStopIsRainingFn",
        "body": "components.acidlevel:SetOnStopIsRainingFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.acidlevel:SetOnStartIsRainingFn:": {
        "prefix": "components.acidlevel:SetOnStartIsRainingFn",
        "body": "components.acidlevel:SetOnStartIsRainingFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.acidlevel:SetOnStartIsAcidRainingFn:": {
        "prefix": "components.acidlevel:SetOnStartIsAcidRainingFn",
        "body": "components.acidlevel:SetOnStartIsAcidRainingFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.activatable:DoActivate:": {
        "prefix": "components.activatable:DoActivate",
        "body": "components.activatable:DoActivate(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.activatable:CanActivate:": {
        "prefix": "components.activatable:CanActivate",
        "body": "components.activatable:CanActivate(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.activatable:GetDebugString:": {
        "prefix": "components.activatable:GetDebugString",
        "body": "components.activatable:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.activatable:OnRemoveFromEntity:": {
        "prefix": "components.activatable:OnRemoveFromEntity",
        "body": "components.activatable:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.age:GetAgeInDays:": {
        "prefix": "components.age:GetAgeInDays",
        "body": "components.age:GetAgeInDays()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.age:ResumeAging:": {
        "prefix": "components.age:ResumeAging",
        "body": "components.age:ResumeAging()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.age:GetAge:": {
        "prefix": "components.age:GetAge",
        "body": "components.age:GetAge()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.age:CancelPeriodicSync:": {
        "prefix": "components.age:CancelPeriodicSync",
        "body": "components.age:CancelPeriodicSync()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.age:OnLoad:": {
        "prefix": "components.age:OnLoad",
        "body": "components.age:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.age:GetDebugString:": {
        "prefix": "components.age:GetDebugString",
        "body": "components.age:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.age:LongUpdate:": {
        "prefix": "components.age:LongUpdate",
        "body": "components.age:LongUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.age:OnSave:": {
        "prefix": "components.age:OnSave",
        "body": "components.age:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.age:RestartPeriodicSync:": {
        "prefix": "components.age:RestartPeriodicSync",
        "body": "components.age:RestartPeriodicSync()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.age:PauseAging:": {
        "prefix": "components.age:PauseAging",
        "body": "components.age:PauseAging()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.age:GetDisplayAgeInDays:": {
        "prefix": "components.age:GetDisplayAgeInDays",
        "body": "components.age:GetDisplayAgeInDays()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.amorphous:GetCurrentForm:": {
        "prefix": "components.amorphous:GetCurrentForm",
        "body": "components.amorphous:GetCurrentForm()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.amorphous:CheckForMorph:": {
        "prefix": "components.amorphous:CheckForMorph",
        "body": "components.amorphous:CheckForMorph()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.amorphous:OnLoad:": {
        "prefix": "components.amorphous:OnLoad",
        "body": "components.amorphous:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.amorphous:LoadPostPass:": {
        "prefix": "components.amorphous:LoadPostPass",
        "body": "components.amorphous:LoadPostPass()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.amorphous:MorphToForm:": {
        "prefix": "components.amorphous:MorphToForm",
        "body": "components.amorphous:MorphToForm(${1:form},${2:instant})",
        "description": " ※Params: \n   (form)<>[] \n   (instant)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.amorphous:AddForm:": {
        "prefix": "components.amorphous:AddForm",
        "body": "components.amorphous:AddForm(${1:form})",
        "description": " ※Params: \n   (form)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.amorphous:FindForm:": {
        "prefix": "components.amorphous:FindForm",
        "body": "components.amorphous:FindForm(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.amorphous:OnSave:": {
        "prefix": "components.amorphous:OnSave",
        "body": "components.amorphous:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.amorphous:OnRemoveFromEntity:": {
        "prefix": "components.amorphous:OnRemoveFromEntity",
        "body": "components.amorphous:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.amphibiouscreature:SetEnterWaterFn:": {
        "prefix": "components.amphibiouscreature:SetEnterWaterFn",
        "body": "components.amphibiouscreature:SetEnterWaterFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.amphibiouscreature:ShouldTransition:": {
        "prefix": "components.amphibiouscreature:ShouldTransition",
        "body": "components.amphibiouscreature:ShouldTransition(${1:x},${2:z})",
        "description": " ※Params: \n   (x)<>[] \n   (z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.amphibiouscreature:OnExitOcean:": {
        "prefix": "components.amphibiouscreature:OnExitOcean",
        "body": "components.amphibiouscreature:OnExitOcean()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.amphibiouscreature:GetDebugString:": {
        "prefix": "components.amphibiouscreature:GetDebugString",
        "body": "components.amphibiouscreature:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.amphibiouscreature:OnEntityWake:": {
        "prefix": "components.amphibiouscreature:OnEntityWake",
        "body": "components.amphibiouscreature:OnEntityWake()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.amphibiouscreature:SetExitWaterFn:": {
        "prefix": "components.amphibiouscreature:SetExitWaterFn",
        "body": "components.amphibiouscreature:SetExitWaterFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.amphibiouscreature:OnEnterOcean:": {
        "prefix": "components.amphibiouscreature:OnEnterOcean",
        "body": "components.amphibiouscreature:OnEnterOcean()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.amphibiouscreature:OnEntitySleep:": {
        "prefix": "components.amphibiouscreature:OnEntitySleep",
        "body": "components.amphibiouscreature:OnEntitySleep()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.amphibiouscreature:SetBanks:": {
        "prefix": "components.amphibiouscreature:SetBanks",
        "body": "components.amphibiouscreature:SetBanks(${1:land},${2:ocean})",
        "description": " ※Params: \n   (land)<>[] \n   (ocean)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.amphibiouscreature:OnUpdate:": {
        "prefix": "components.amphibiouscreature:OnUpdate",
        "body": "components.amphibiouscreature:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.anchor:AddAnchorRaiser:": {
        "prefix": "components.anchor:AddAnchorRaiser",
        "body": "components.anchor:AddAnchorRaiser(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.anchor:SetVelocityMod:": {
        "prefix": "components.anchor:SetVelocityMod",
        "body": "components.anchor:SetVelocityMod(${1:set})",
        "description": " ※Params: \n   (set)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.anchor:GetDebugString:": {
        "prefix": "components.anchor:GetDebugString",
        "body": "components.anchor:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.anchor:StartLoweringAnchor:": {
        "prefix": "components.anchor:StartLoweringAnchor",
        "body": "components.anchor:StartLoweringAnchor()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.anchor:OnUpdate:": {
        "prefix": "components.anchor:OnUpdate",
        "body": "components.anchor:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.anchor:SetIsAnchorLowered:": {
        "prefix": "components.anchor:SetIsAnchorLowered",
        "body": "components.anchor:SetIsAnchorLowered(${1:is_lowered})",
        "description": " ※Params: \n   (is_lowered)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.anchor:OnLoad:": {
        "prefix": "components.anchor:OnLoad",
        "body": "components.anchor:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.anchor:GetCurrentDepth:": {
        "prefix": "components.anchor:GetCurrentDepth",
        "body": "components.anchor:GetCurrentDepth()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.anchor:AnchorLowered:": {
        "prefix": "components.anchor:AnchorLowered",
        "body": "components.anchor:AnchorLowered()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.anchor:AnchorRaised:": {
        "prefix": "components.anchor:AnchorRaised",
        "body": "components.anchor:AnchorRaised()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.anchor:LoadPostPass:": {
        "prefix": "components.anchor:LoadPostPass",
        "body": "components.anchor:LoadPostPass()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.anchor:StartRaisingAnchor:": {
        "prefix": "components.anchor:StartRaisingAnchor",
        "body": "components.anchor:StartRaisingAnchor()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.anchor:GetBoat:": {
        "prefix": "components.anchor:GetBoat",
        "body": "components.anchor:GetBoat()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.anchor:OnSave:": {
        "prefix": "components.anchor:OnSave",
        "body": "components.anchor:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.anchor:RemoveAnchorRaiser:": {
        "prefix": "components.anchor:RemoveAnchorRaiser",
        "body": "components.anchor:RemoveAnchorRaiser(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.aoespell:CanCast:": {
        "prefix": "components.aoespell:CanCast",
        "body": "components.aoespell:CanCast(${1:doer},${2:pos})",
        "description": " ※Params: \n   (doer)<>[] \n   (pos)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.aoespell:SetSpellFn:": {
        "prefix": "components.aoespell:SetSpellFn",
        "body": "components.aoespell:SetSpellFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.aoespell:CastSpell:": {
        "prefix": "components.aoespell:CastSpell",
        "body": "components.aoespell:CastSpell(${1:doer},${2:pos})",
        "description": " ※Params: \n   (doer)<>[] \n   (pos)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.aoetargeting:SpawnTargetFXAt:": {
        "prefix": "components.aoetargeting:SpawnTargetFXAt",
        "body": "components.aoetargeting:SpawnTargetFXAt(${1:pos})",
        "description": " ※Params: \n   (pos)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.aoetargeting:SetShouldRepeatCastFn:": {
        "prefix": "components.aoetargeting:SetShouldRepeatCastFn",
        "body": "components.aoetargeting:SetShouldRepeatCastFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.aoetargeting:StopTargeting:": {
        "prefix": "components.aoetargeting:StopTargeting",
        "body": "components.aoetargeting:StopTargeting()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.aoetargeting:ShouldRepeatCast:": {
        "prefix": "components.aoetargeting:ShouldRepeatCast",
        "body": "components.aoetargeting:ShouldRepeatCast(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.aoetargeting:SetDeployRadius:": {
        "prefix": "components.aoetargeting:SetDeployRadius",
        "body": "components.aoetargeting:SetDeployRadius(${1:radius})",
        "description": " ※Params: \n   (radius)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.aoetargeting:StartTargeting:": {
        "prefix": "components.aoetargeting:StartTargeting",
        "body": "components.aoetargeting:StartTargeting()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.aoetargeting:SetAllowRiding:": {
        "prefix": "components.aoetargeting:SetAllowRiding",
        "body": "components.aoetargeting:SetAllowRiding(${1:val})",
        "description": " ※Params: \n   (val)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.aoetargeting:SetAlwaysValid:": {
        "prefix": "components.aoetargeting:SetAlwaysValid",
        "body": "components.aoetargeting:SetAlwaysValid(${1:val})",
        "description": " ※Params: \n   (val)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.aoetargeting:IsEnabled:": {
        "prefix": "components.aoetargeting:IsEnabled",
        "body": "components.aoetargeting:IsEnabled()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.aoetargeting:SetEnabled:": {
        "prefix": "components.aoetargeting:SetEnabled",
        "body": "components.aoetargeting:SetEnabled(${1:enabled})",
        "description": " ※Params: \n   (enabled)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.aoetargeting:GetRange:": {
        "prefix": "components.aoetargeting:GetRange",
        "body": "components.aoetargeting:GetRange()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.aoetargeting:CanRepeatCast:": {
        "prefix": "components.aoetargeting:CanRepeatCast",
        "body": "components.aoetargeting:CanRepeatCast()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.aoetargeting:SetAllowWater:": {
        "prefix": "components.aoetargeting:SetAllowWater",
        "body": "components.aoetargeting:SetAllowWater(${1:val})",
        "description": " ※Params: \n   (val)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.aoetargeting:SetTargetFX:": {
        "prefix": "components.aoetargeting:SetTargetFX",
        "body": "components.aoetargeting:SetTargetFX(${1:prefab})",
        "description": " ※Params: \n   (prefab)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.aoetargeting:SetRange:": {
        "prefix": "components.aoetargeting:SetRange",
        "body": "components.aoetargeting:SetRange(${1:range})",
        "description": " ※Params: \n   (range)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.aoeweapon_base:SetDamage:": {
        "prefix": "components.aoeweapon_base:SetDamage",
        "body": "components.aoeweapon_base:SetDamage(${1:dmg})",
        "description": " ※Params: \n   (dmg)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.aoeweapon_base:SetOnPreHitFn:": {
        "prefix": "components.aoeweapon_base:SetOnPreHitFn",
        "body": "components.aoeweapon_base:SetOnPreHitFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.aoeweapon_base:SetOnMissFn:": {
        "prefix": "components.aoeweapon_base:SetOnMissFn",
        "body": "components.aoeweapon_base:SetOnMissFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.aoeweapon_base:SetStimuli:": {
        "prefix": "components.aoeweapon_base:SetStimuli",
        "body": "components.aoeweapon_base:SetStimuli(${1:stimuli})",
        "description": " ※Params: \n   (stimuli)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.aoeweapon_base:SetTags:": {
        "prefix": "components.aoeweapon_base:SetTags",
        "body": "components.aoeweapon_base:SetTags(${1:...})",
        "description": " ※Params: \n   (...)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.aoeweapon_base:OnHit:": {
        "prefix": "components.aoeweapon_base:OnHit",
        "body": "components.aoeweapon_base:OnHit(${1:doer},${2:target})",
        "description": " ※Params: \n   (doer)<>[] \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.aoeweapon_base:SetWorkActions:": {
        "prefix": "components.aoeweapon_base:SetWorkActions",
        "body": "components.aoeweapon_base:SetWorkActions(${1:...})",
        "description": " ※Params: \n   (...)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.aoeweapon_base:SetNoTags:": {
        "prefix": "components.aoeweapon_base:SetNoTags",
        "body": "components.aoeweapon_base:SetNoTags(${1:...})",
        "description": " ※Params: \n   (...)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.aoeweapon_base:OnToss:": {
        "prefix": "components.aoeweapon_base:OnToss",
        "body": "components.aoeweapon_base:OnToss(${1:doer},${2:target},${3:sourceposition},${4:basespeed},${5:startradius})",
        "description": " ※Params: \n   (doer)<>[] \n   (target)<>[] \n   (sourceposition)<>[] \n   (basespeed)<>[] \n   (startradius)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.aoeweapon_base:SetOnHitFn:": {
        "prefix": "components.aoeweapon_base:SetOnHitFn",
        "body": "components.aoeweapon_base:SetOnHitFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.aoeweapon_base:_CombineTags:": {
        "prefix": "components.aoeweapon_base:_CombineTags",
        "body": "components.aoeweapon_base:_CombineTags()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.aoeweapon_leap:SetOnPreLeapFn:": {
        "prefix": "components.aoeweapon_leap:SetOnPreLeapFn",
        "body": "components.aoeweapon_leap:SetOnPreLeapFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.aoeweapon_leap:SetAOERadius:": {
        "prefix": "components.aoeweapon_leap:SetAOERadius",
        "body": "components.aoeweapon_leap:SetAOERadius(${1:radius})",
        "description": " ※Params: \n   (radius)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.aoeweapon_leap:DoLeap:": {
        "prefix": "components.aoeweapon_leap:DoLeap",
        "body": "components.aoeweapon_leap:DoLeap(${1:doer},${2:startingpos},${3:targetpos})",
        "description": " ※Params: \n   (doer)<>[] \n   (startingpos)<>[] \n   (targetpos)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.aoeweapon_leap:SetOnLeaptFn:": {
        "prefix": "components.aoeweapon_leap:SetOnLeaptFn",
        "body": "components.aoeweapon_leap:SetOnLeaptFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.aoeweapon_lunge:SetOnPreLungeFn:": {
        "prefix": "components.aoeweapon_lunge:SetOnPreLungeFn",
        "body": "components.aoeweapon_lunge:SetOnPreLungeFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.aoeweapon_lunge:SetSound:": {
        "prefix": "components.aoeweapon_lunge:SetSound",
        "body": "components.aoeweapon_lunge:SetSound(${1:path})",
        "description": " ※Params: \n   (path)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.aoeweapon_lunge:SetTrailFX:": {
        "prefix": "components.aoeweapon_lunge:SetTrailFX",
        "body": "components.aoeweapon_lunge:SetTrailFX(${1:prefab},${2:spacing})",
        "description": " ※Params: \n   (prefab)<>[] \n   (spacing)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.aoeweapon_lunge:SetOnLungedFn:": {
        "prefix": "components.aoeweapon_lunge:SetOnLungedFn",
        "body": "components.aoeweapon_lunge:SetOnLungedFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.aoeweapon_lunge:SetSideRange:": {
        "prefix": "components.aoeweapon_lunge:SetSideRange",
        "body": "components.aoeweapon_lunge:SetSideRange(${1:range})",
        "description": " ※Params: \n   (range)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.aoeweapon_lunge:DoLunge:": {
        "prefix": "components.aoeweapon_lunge:DoLunge",
        "body": "components.aoeweapon_lunge:DoLunge(${1:doer},${2:startingpos},${3:targetpos})",
        "description": " ※Params: \n   (doer)<>[] \n   (startingpos)<>[] \n   (targetpos)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.appraisable:CanAppraise:": {
        "prefix": "components.appraisable:CanAppraise",
        "body": "components.appraisable:CanAppraise(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.appraisable:Appraise:": {
        "prefix": "components.appraisable:Appraise",
        "body": "components.appraisable:Appraise(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.areaaware:CurrentlyInTag:": {
        "prefix": "components.areaaware:CurrentlyInTag",
        "body": "components.areaaware:CurrentlyInTag(${1:tag})",
        "description": " ※Params: \n   (tag)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.areaaware:StopWatchingTile:": {
        "prefix": "components.areaaware:StopWatchingTile",
        "body": "components.areaaware:StopWatchingTile(${1:tile_id})",
        "description": " ※Params: \n   (tile_id)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.areaaware:SetUpdateDist:": {
        "prefix": "components.areaaware:SetUpdateDist",
        "body": "components.areaaware:SetUpdateDist(${1:dist})",
        "description": " ※Params: \n   (dist)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.areaaware:StartWatchingTile:": {
        "prefix": "components.areaaware:StartWatchingTile",
        "body": "components.areaaware:StartWatchingTile(${1:tile_id})",
        "description": " ※Params: \n   (tile_id)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.areaaware:UpdatePosition:": {
        "prefix": "components.areaaware:UpdatePosition",
        "body": "components.areaaware:UpdatePosition(${1:x},${2:y},${3:z})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.areaaware:GetDebugString:": {
        "prefix": "components.areaaware:GetDebugString",
        "body": "components.areaaware:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.areaaware:StartCheckingPosition:": {
        "prefix": "components.areaaware:StartCheckingPosition",
        "body": "components.areaaware:StartCheckingPosition(${1:checkinterval})",
        "description": " ※Params: \n   (checkinterval)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.areaaware:_TestArea:": {
        "prefix": "components.areaaware:_TestArea",
        "body": "components.areaaware:_TestArea(${1:pt_x},${2:pt_z},${3:on_land},${4:r})",
        "description": " ※Params: \n   (pt_x)<>[] \n   (pt_z)<>[] \n   (on_land)<>[] \n   (r)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.areaaware:OnUpdate:": {
        "prefix": "components.areaaware:OnUpdate",
        "body": "components.areaaware:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.areaaware:GetCurrentArea:": {
        "prefix": "components.areaaware:GetCurrentArea",
        "body": "components.areaaware:GetCurrentArea()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.areaaware:OnRemoveFromEntity:": {
        "prefix": "components.areaaware:OnRemoveFromEntity",
        "body": "components.areaaware:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.armor:SetPercent:": {
        "prefix": "components.armor:SetPercent",
        "body": "components.armor:SetPercent(${1:amount})",
        "description": " ※Params: \n   (amount)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.armor:GetBonusDamage:": {
        "prefix": "components.armor:GetBonusDamage",
        "body": "components.armor:GetBonusDamage(${1:attacker},${2:weapon})",
        "description": " ※Params: \n   (attacker)<>[] \n   (weapon)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.armor:SetTags:": {
        "prefix": "components.armor:SetTags",
        "body": "components.armor:SetTags(${1:tags})",
        "description": " ※Params: \n   (tags)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.armor:OnLoad:": {
        "prefix": "components.armor:OnLoad",
        "body": "components.armor:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.armor:IsIndestructible:": {
        "prefix": "components.armor:IsIndestructible",
        "body": "components.armor:IsIndestructible()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.armor:AddWeakness:": {
        "prefix": "components.armor:AddWeakness",
        "body": "components.armor:AddWeakness(${1:tag},${2:bonus_damage})",
        "description": " ※Params: \n   (tag)<>[] \n   (bonus_damage)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.armor:InitIndestructible:": {
        "prefix": "components.armor:InitIndestructible",
        "body": "components.armor:InitIndestructible(${1:absorb_percent})",
        "description": " ※Params: \n   (absorb_percent)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.armor:IsDamaged:": {
        "prefix": "components.armor:IsDamaged",
        "body": "components.armor:IsDamaged()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.armor:SetKeepOnFinished:": {
        "prefix": "components.armor:SetKeepOnFinished",
        "body": "components.armor:SetKeepOnFinished(${1:keep})",
        "description": " ※Params: \n   (keep)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.armor:Repair:": {
        "prefix": "components.armor:Repair",
        "body": "components.armor:Repair(${1:amount})",
        "description": " ※Params: \n   (amount)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.armor:GetPercent:": {
        "prefix": "components.armor:GetPercent",
        "body": "components.armor:GetPercent()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.armor:GetAbsorption:": {
        "prefix": "components.armor:GetAbsorption",
        "body": "components.armor:GetAbsorption(${1:attacker},${2:weapon})",
        "description": " ※Params: \n   (attacker)<>[] \n   (weapon)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.armor:RemoveWeakness:": {
        "prefix": "components.armor:RemoveWeakness",
        "body": "components.armor:RemoveWeakness(${1:tag})",
        "description": " ※Params: \n   (tag)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.armor:GetDebugString:": {
        "prefix": "components.armor:GetDebugString",
        "body": "components.armor:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.armor:SetOnFinished:": {
        "prefix": "components.armor:SetOnFinished",
        "body": "components.armor:SetOnFinished(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.armor:SetAbsorption:": {
        "prefix": "components.armor:SetAbsorption",
        "body": "components.armor:SetAbsorption(${1:absorb_percent})",
        "description": " ※Params: \n   (absorb_percent)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.armor:TakeDamage:": {
        "prefix": "components.armor:TakeDamage",
        "body": "components.armor:TakeDamage(${1:damage_amount})",
        "description": " ※Params: \n   (damage_amount)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.armor:InitCondition:": {
        "prefix": "components.armor:InitCondition",
        "body": "components.armor:InitCondition(${1:amount},${2:absorb_percent})",
        "description": " ※Params: \n   (amount)<>[] \n   (absorb_percent)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.armor:CanResist:": {
        "prefix": "components.armor:CanResist",
        "body": "components.armor:CanResist(${1:attacker},${2:weapon})",
        "description": " ※Params: \n   (attacker)<>[] \n   (weapon)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.armor:OnSave:": {
        "prefix": "components.armor:OnSave",
        "body": "components.armor:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.armor:SetCondition:": {
        "prefix": "components.armor:SetCondition",
        "body": "components.armor:SetCondition(${1:amount})",
        "description": " ※Params: \n   (amount)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.attackdodger:SetCanDodgeFn:": {
        "prefix": "components.attackdodger:SetCanDodgeFn",
        "body": "components.attackdodger:SetCanDodgeFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.attackdodger:CanDodge:": {
        "prefix": "components.attackdodger:CanDodge",
        "body": "components.attackdodger:CanDodge(${1:attacker})",
        "description": " ※Params: \n   (attacker)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.attackdodger:Dodge:": {
        "prefix": "components.attackdodger:Dodge",
        "body": "components.attackdodger:Dodge(${1:attacker})",
        "description": " ※Params: \n   (attacker)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.attackdodger:OnRemoveFromEntity:": {
        "prefix": "components.attackdodger:OnRemoveFromEntity",
        "body": "components.attackdodger:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.attackdodger:SetCooldownTime:": {
        "prefix": "components.attackdodger:SetCooldownTime",
        "body": "components.attackdodger:SetCooldownTime(${1:n})",
        "description": " ※Params: \n   (n)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.attunable:GetAttunableTag:": {
        "prefix": "components.attunable:GetAttunableTag",
        "body": "components.attunable:GetAttunableTag()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.attunable:SetOnLinkFn:": {
        "prefix": "components.attunable:SetOnLinkFn",
        "body": "components.attunable:SetOnLinkFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.attunable:OnSave:": {
        "prefix": "components.attunable:OnSave",
        "body": "components.attunable:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.attunable:LinkToPlayer:": {
        "prefix": "components.attunable:LinkToPlayer",
        "body": "components.attunable:LinkToPlayer(${1:player},${2:isloading})",
        "description": " ※Params: \n   (player)<>[] \n   (isloading)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.attunable:SetOnAttuneCostFn:": {
        "prefix": "components.attunable:SetOnAttuneCostFn",
        "body": "components.attunable:SetOnAttuneCostFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.attunable:IsAttuned:": {
        "prefix": "components.attunable:IsAttuned",
        "body": "components.attunable:IsAttuned(${1:player})",
        "description": " ※Params: \n   (player)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.attunable:OnLoad:": {
        "prefix": "components.attunable:OnLoad",
        "body": "components.attunable:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.attunable:GetDebugString:": {
        "prefix": "components.attunable:GetDebugString",
        "body": "components.attunable:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.attunable:UnlinkFromPlayer:": {
        "prefix": "components.attunable:UnlinkFromPlayer",
        "body": "components.attunable:UnlinkFromPlayer(${1:player},${2:isloading})",
        "description": " ※Params: \n   (player)<>[] \n   (isloading)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.attunable:CanAttune:": {
        "prefix": "components.attunable:CanAttune",
        "body": "components.attunable:CanAttune(${1:player})",
        "description": " ※Params: \n   (player)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.attunable:SetAttunableTag:": {
        "prefix": "components.attunable:SetAttunableTag",
        "body": "components.attunable:SetAttunableTag(${1:tag})",
        "description": " ※Params: \n   (tag)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.attunable:SetOnUnlinkFn:": {
        "prefix": "components.attunable:SetOnUnlinkFn",
        "body": "components.attunable:SetOnUnlinkFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.attunable:OnRemoveEntity:": {
        "prefix": "components.attunable:OnRemoveEntity",
        "body": "components.attunable:OnRemoveEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.attuner:UnregisterAttunedSource:": {
        "prefix": "components.attuner:UnregisterAttunedSource",
        "body": "components.attuner:UnregisterAttunedSource(${1:proxy})",
        "description": " ※Params: \n   (proxy)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.attuner:RegisterAttunedSource:": {
        "prefix": "components.attuner:RegisterAttunedSource",
        "body": "components.attuner:RegisterAttunedSource(${1:proxy})",
        "description": " ※Params: \n   (proxy)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.attuner:IsAttunedTo:": {
        "prefix": "components.attuner:IsAttunedTo",
        "body": "components.attuner:IsAttunedTo(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.attuner:GetDebugString:": {
        "prefix": "components.attuner:GetDebugString",
        "body": "components.attuner:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.attuner:GetAttunedTarget:": {
        "prefix": "components.attuner:GetAttunedTarget",
        "body": "components.attuner:GetAttunedTarget(${1:tag})",
        "description": " ※Params: \n   (tag)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.attuner:TransferComponent:": {
        "prefix": "components.attuner:TransferComponent",
        "body": "components.attuner:TransferComponent(${1:newinst})",
        "description": " ※Params: \n   (newinst)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.attuner:HasAttunement:": {
        "prefix": "components.attuner:HasAttunement",
        "body": "components.attuner:HasAttunement(${1:tag})",
        "description": " ※Params: \n   (tag)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.aura:OnTick:": {
        "prefix": "components.aura:OnTick",
        "body": "components.aura:OnTick()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.aura:GetDebugString:": {
        "prefix": "components.aura:GetDebugString",
        "body": "components.aura:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.aura:Enable:": {
        "prefix": "components.aura:Enable",
        "body": "components.aura:Enable(${1:val})",
        "description": " ※Params: \n   (val)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.autoterraformer:FinishTerraforming:": {
        "prefix": "components.autoterraformer:FinishTerraforming",
        "body": "components.autoterraformer:FinishTerraforming(${1:x},${2:y},${3:z})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.autoterraformer:DoTerraform:": {
        "prefix": "components.autoterraformer:DoTerraform",
        "body": "components.autoterraformer:DoTerraform(${1:px},${2:py},${3:pz},${4:x},${5:y})",
        "description": " ※Params: \n   (px)<>[] \n   (py)<>[] \n   (pz)<>[] \n   (x)<>[] \n   (y)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.autoterraformer:StopTerraforming:": {
        "prefix": "components.autoterraformer:StopTerraforming",
        "body": "components.autoterraformer:StopTerraforming()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.autoterraformer:StartTerraforming:": {
        "prefix": "components.autoterraformer:StartTerraforming",
        "body": "components.autoterraformer:StartTerraforming()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.autoterraformer:OnUpdate:": {
        "prefix": "components.autoterraformer:OnUpdate",
        "body": "components.autoterraformer:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.bait:IsFree:": {
        "prefix": "components.bait:IsFree",
        "body": "components.bait:IsFree()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.bait:GetDebugString:": {
        "prefix": "components.bait:GetDebugString",
        "body": "components.bait:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.bait:OnRemoveFromEntity:": {
        "prefix": "components.bait:OnRemoveFromEntity",
        "body": "components.bait:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.balloonmaker:MakeBalloon:": {
        "prefix": "components.balloonmaker:MakeBalloon",
        "body": "components.balloonmaker:MakeBalloon(${1:x},${2:y},${3:z})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.bathbomb:OnRemoveFromEntity:": {
        "prefix": "components.bathbomb:OnRemoveFromEntity",
        "body": "components.bathbomb:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.bathbombable:SetOnBathBombedFn:": {
        "prefix": "components.bathbombable:SetOnBathBombedFn",
        "body": "components.bathbombable:SetOnBathBombedFn(${1:new_fn})",
        "description": " ※Params: \n   (new_fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.bathbombable:OnBathBombed:": {
        "prefix": "components.bathbombable:OnBathBombed",
        "body": "components.bathbombable:OnBathBombed(${1:item},${2:doer})",
        "description": " ※Params: \n   (item)<>[] \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.bathbombable:DisableBathBombing:": {
        "prefix": "components.bathbombable:DisableBathBombing",
        "body": "components.bathbombable:DisableBathBombing()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.bathbombable:Reset:": {
        "prefix": "components.bathbombable:Reset",
        "body": "components.bathbombable:Reset()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.bathbombable:OnRemoveFromEntity:": {
        "prefix": "components.bathbombable:OnRemoveFromEntity",
        "body": "components.bathbombable:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.batspawner:SetMaxBats:": {
        "prefix": "components.batspawner:SetMaxBats",
        "body": "components.batspawner:SetMaxBats(${1:max})",
        "description": " ※Params: \n   (max)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.batspawner:StartTracking:": {
        "prefix": "components.batspawner:StartTracking",
        "body": "components.batspawner:StartTracking(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.batspawner:GetDebugString:": {
        "prefix": "components.batspawner:GetDebugString",
        "body": "components.batspawner:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.batspawner:GetSpawnPoint:": {
        "prefix": "components.batspawner:GetSpawnPoint",
        "body": "components.batspawner:GetSpawnPoint(${1:pt})",
        "description": " ※Params: \n   (pt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.batspawner:SetSpawnTimes:": {
        "prefix": "components.batspawner:SetSpawnTimes",
        "body": "components.batspawner:SetSpawnTimes(${1:times})",
        "description": " ※Params: \n   (times)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.battery:CanBeUsed:": {
        "prefix": "components.battery:CanBeUsed",
        "body": "components.battery:CanBeUsed(${1:user})",
        "description": " ※Params: \n   (user)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.battery:OnUsed:": {
        "prefix": "components.battery:OnUsed",
        "body": "components.battery:OnUsed(${1:user})",
        "description": " ※Params: \n   (user)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.battery:OnRemoveFromEntity:": {
        "prefix": "components.battery:OnRemoveFromEntity",
        "body": "components.battery:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.batteryuser:ChargeFrom:": {
        "prefix": "components.batteryuser:ChargeFrom",
        "body": "components.batteryuser:ChargeFrom(${1:charge_target})",
        "description": " ※Params: \n   (charge_target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.batteryuser:OnRemoveFromEntity:": {
        "prefix": "components.batteryuser:OnRemoveFromEntity",
        "body": "components.batteryuser:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.battleborn:SetClampMin:": {
        "prefix": "components.battleborn:SetClampMin",
        "body": "components.battleborn:SetClampMin(${1:min})",
        "description": " ※Params: \n   (min)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.battleborn:SetSanityEnabled:": {
        "prefix": "components.battleborn:SetSanityEnabled",
        "body": "components.battleborn:SetSanityEnabled(${1:enabled})",
        "description": " ※Params: \n   (enabled)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.battleborn:SetStoreTime:": {
        "prefix": "components.battleborn:SetStoreTime",
        "body": "components.battleborn:SetStoreTime(${1:time})",
        "description": " ※Params: \n   (time)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.battleborn:SetHealthEnabled:": {
        "prefix": "components.battleborn:SetHealthEnabled",
        "body": "components.battleborn:SetHealthEnabled(${1:enabled})",
        "description": " ※Params: \n   (enabled)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.battleborn:SetTriggerThreshold:": {
        "prefix": "components.battleborn:SetTriggerThreshold",
        "body": "components.battleborn:SetTriggerThreshold(${1:threshold})",
        "description": " ※Params: \n   (threshold)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.battleborn:SetClampMax:": {
        "prefix": "components.battleborn:SetClampMax",
        "body": "components.battleborn:SetClampMax(${1:max})",
        "description": " ※Params: \n   (max)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.battleborn:SetOnTriggerFn:": {
        "prefix": "components.battleborn:SetOnTriggerFn",
        "body": "components.battleborn:SetOnTriggerFn(${1:ontriggerfn})",
        "description": " ※Params: \n   (ontriggerfn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.battleborn:OnDeath:": {
        "prefix": "components.battleborn:OnDeath",
        "body": "components.battleborn:OnDeath()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.battleborn:OnAttack:": {
        "prefix": "components.battleborn:OnAttack",
        "body": "components.battleborn:OnAttack(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.battleborn:SetValidVictimFn:": {
        "prefix": "components.battleborn:SetValidVictimFn",
        "body": "components.battleborn:SetValidVictimFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.battleborn:SetBattlebornBonus:": {
        "prefix": "components.battleborn:SetBattlebornBonus",
        "body": "components.battleborn:SetBattlebornBonus(${1:bonus})",
        "description": " ※Params: \n   (bonus)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.battleborn:SetDecayTime:": {
        "prefix": "components.battleborn:SetDecayTime",
        "body": "components.battleborn:SetDecayTime(${1:time})",
        "description": " ※Params: \n   (time)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.beard:GetBeardSkinAndLength:": {
        "prefix": "components.beard:GetBeardSkinAndLength",
        "body": "components.beard:GetBeardSkinAndLength()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.beard:Shave:": {
        "prefix": "components.beard:Shave",
        "body": "components.beard:Shave(${1:who},${2:withwhat})",
        "description": " ※Params: \n   (who)<>[] \n   (withwhat)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.beard:ShouldTryToShave:": {
        "prefix": "components.beard:ShouldTryToShave",
        "body": "components.beard:ShouldTryToShave(${1:who},${2:whithwhat})",
        "description": " ※Params: \n   (who)<>[] \n   (whithwhat)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.beard:UpdateBeardInventory:": {
        "prefix": "components.beard:UpdateBeardInventory",
        "body": "components.beard:UpdateBeardInventory()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.beard:GetInsulation:": {
        "prefix": "components.beard:GetInsulation",
        "body": "components.beard:GetInsulation()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.beard:Reset:": {
        "prefix": "components.beard:Reset",
        "body": "components.beard:Reset()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.beard:LoadPostPass:": {
        "prefix": "components.beard:LoadPostPass",
        "body": "components.beard:LoadPostPass(${1:newents},${2:data})",
        "description": " ※Params: \n   (newents)<>[] \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.beard:EnableGrowth:": {
        "prefix": "components.beard:EnableGrowth",
        "body": "components.beard:EnableGrowth(${1:enable})",
        "description": " ※Params: \n   (enable)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.beard:GetDebugString:": {
        "prefix": "components.beard:GetDebugString",
        "body": "components.beard:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.beard:SetSkin:": {
        "prefix": "components.beard:SetSkin",
        "body": "components.beard:SetSkin(${1:skinname})",
        "description": " ※Params: \n   (skinname)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.beard:OnLoad:": {
        "prefix": "components.beard:OnLoad",
        "body": "components.beard:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.beard:AddCallback:": {
        "prefix": "components.beard:AddCallback",
        "body": "components.beard:AddCallback(${1:day},${2:cb})",
        "description": " ※Params: \n   (day)<>[] \n   (cb)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.beard:OnSave:": {
        "prefix": "components.beard:OnSave",
        "body": "components.beard:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.beard:OnRemoveFromEntity:": {
        "prefix": "components.beard:OnRemoveFromEntity",
        "body": "components.beard:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.beaverness:SetPercent:": {
        "prefix": "components.beaverness:SetPercent",
        "body": "components.beaverness:SetPercent(${1:percent},${2:overtime})",
        "description": " ※Params: \n   (percent)<>[] \n   (overtime)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.beaverness:StopTimeEffect:": {
        "prefix": "components.beaverness:StopTimeEffect",
        "body": "components.beaverness:StopTimeEffect()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.beaverness:OnLoad:": {
        "prefix": "components.beaverness:OnLoad",
        "body": "components.beaverness:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.beaverness:IsStarving:": {
        "prefix": "components.beaverness:IsStarving",
        "body": "components.beaverness:IsStarving()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.beaverness:StartTimeEffect:": {
        "prefix": "components.beaverness:StartTimeEffect",
        "body": "components.beaverness:StartTimeEffect(${1:dt},${2:delta_b})",
        "description": " ※Params: \n   (dt)<>[] \n   (delta_b)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.beaverness:GetDebugString:": {
        "prefix": "components.beaverness:GetDebugString",
        "body": "components.beaverness:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.beaverness:DoDelta:": {
        "prefix": "components.beaverness:DoDelta",
        "body": "components.beaverness:DoDelta(${1:delta},${2:overtime})",
        "description": " ※Params: \n   (delta)<>[] \n   (overtime)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.beaverness:GetPercent:": {
        "prefix": "components.beaverness:GetPercent",
        "body": "components.beaverness:GetPercent()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.beaverness:OnSave:": {
        "prefix": "components.beaverness:OnSave",
        "body": "components.beaverness:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.beaverness:SetTimeEffectMultiplier:": {
        "prefix": "components.beaverness:SetTimeEffectMultiplier",
        "body": "components.beaverness:SetTimeEffectMultiplier(${1:multiplier})",
        "description": " ※Params: \n   (multiplier)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.bedazzlement:PacifySpiders:": {
        "prefix": "components.bedazzlement:PacifySpiders",
        "body": "components.bedazzlement:PacifySpiders()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.bedazzlement:OnSave:": {
        "prefix": "components.bedazzlement:OnSave",
        "body": "components.bedazzlement:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.bedazzlement:Start:": {
        "prefix": "components.bedazzlement:Start",
        "body": "components.bedazzlement:Start()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.bedazzlement:Stop:": {
        "prefix": "components.bedazzlement:Stop",
        "body": "components.bedazzlement:Stop()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.bedazzlement:OnLoad:": {
        "prefix": "components.bedazzlement:OnLoad",
        "body": "components.bedazzlement:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.bedazzler:Bedazzle:": {
        "prefix": "components.bedazzler:Bedazzle",
        "body": "components.bedazzler:Bedazzle(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.bedazzler:CanBedazzle:": {
        "prefix": "components.bedazzler:CanBedazzle",
        "body": "components.bedazzler:CanBedazzle(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.bedazzler:SetUseAmount:": {
        "prefix": "components.bedazzler:SetUseAmount",
        "body": "components.bedazzler:SetUseAmount(${1:use_amount})",
        "description": " ※Params: \n   (use_amount)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.beefalometrics:SetLastDomesticator:": {
        "prefix": "components.beefalometrics:SetLastDomesticator",
        "body": "components.beefalometrics:SetLastDomesticator(${1:player})",
        "description": " ※Params: \n   (player)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.beefalometrics:GetLastDomesticator:": {
        "prefix": "components.beefalometrics:GetLastDomesticator",
        "body": "components.beefalometrics:GetLastDomesticator()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.beefalometrics:OnSave:": {
        "prefix": "components.beefalometrics:OnSave",
        "body": "components.beefalometrics:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.beefalometrics:OnLoad:": {
        "prefix": "components.beefalometrics:OnLoad",
        "body": "components.beefalometrics:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.birdattractor:GetDebugString:": {
        "prefix": "components.birdattractor:GetDebugString",
        "body": "components.birdattractor:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.blinkstaff:SpawnEffect:": {
        "prefix": "components.blinkstaff:SpawnEffect",
        "body": "components.blinkstaff:SpawnEffect(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.blinkstaff:ResetSoundFX:": {
        "prefix": "components.blinkstaff:ResetSoundFX",
        "body": "components.blinkstaff:ResetSoundFX()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.blinkstaff:Blink:": {
        "prefix": "components.blinkstaff:Blink",
        "body": "components.blinkstaff:Blink(${1:pt},${2:caster})",
        "description": " ※Params: \n   (pt)<>[] \n   (caster)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.blinkstaff:SetSoundFX:": {
        "prefix": "components.blinkstaff:SetSoundFX",
        "body": "components.blinkstaff:SetSoundFX(${1:presound},${2:postsound})",
        "description": " ※Params: \n   (presound)<>[] \n   (postsound)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.blinkstaff:SetFX:": {
        "prefix": "components.blinkstaff:SetFX",
        "body": "components.blinkstaff:SetFX(${1:front},${2:back})",
        "description": " ※Params: \n   (front)<>[] \n   (back)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.bloomer:AttachChild:": {
        "prefix": "components.bloomer:AttachChild",
        "body": "components.bloomer:AttachChild(${1:child})",
        "description": " ※Params: \n   (child)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.bloomer:PushBloom:": {
        "prefix": "components.bloomer:PushBloom",
        "body": "components.bloomer:PushBloom(${1:source},${2:fx},${3:priority})",
        "description": " ※Params: \n   (source)<>[] \n   (fx)<>[] \n   (priority)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.bloomer:OnSetBloomEffectHandle:": {
        "prefix": "components.bloomer:OnSetBloomEffectHandle",
        "body": "components.bloomer:OnSetBloomEffectHandle(${1:fx},${2:priority})",
        "description": " ※Params: \n   (fx)<>[] \n   (priority)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.bloomer:GetCurrentFxAndPriority:": {
        "prefix": "components.bloomer:GetCurrentFxAndPriority",
        "body": "components.bloomer:GetCurrentFxAndPriority()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.bloomer:GetDebugString:": {
        "prefix": "components.bloomer:GetDebugString",
        "body": "components.bloomer:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.bloomer:PopBloom:": {
        "prefix": "components.bloomer:PopBloom",
        "body": "components.bloomer:PopBloom(${1:source})",
        "description": " ※Params: \n   (source)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.bloomer:DetachChild:": {
        "prefix": "components.bloomer:DetachChild",
        "body": "components.bloomer:DetachChild(${1:child})",
        "description": " ※Params: \n   (child)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.bloomer:OnClearBloomEffectHandle:": {
        "prefix": "components.bloomer:OnClearBloomEffectHandle",
        "body": "components.bloomer:OnClearBloomEffectHandle()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.bloomer:GetCurrentFX:": {
        "prefix": "components.bloomer:GetCurrentFX",
        "body": "components.bloomer:GetCurrentFX()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.bloomer:OnRemoveFromEntity:": {
        "prefix": "components.bloomer:OnRemoveFromEntity",
        "body": "components.bloomer:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.bloomness:GetLevel:": {
        "prefix": "components.bloomness:GetLevel",
        "body": "components.bloomness:GetLevel()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.bloomness:SetDurations:": {
        "prefix": "components.bloomness:SetDurations",
        "body": "components.bloomness:SetDurations(${1:stage},${2:full})",
        "description": " ※Params: \n   (stage)<>[] \n   (full)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.bloomness:OnLoad:": {
        "prefix": "components.bloomness:OnLoad",
        "body": "components.bloomness:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.bloomness:Fertilize:": {
        "prefix": "components.bloomness:Fertilize",
        "body": "components.bloomness:Fertilize(${1:value})",
        "description": " ※Params: \n   (value)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.bloomness:LongUpdate:": {
        "prefix": "components.bloomness:LongUpdate",
        "body": "components.bloomness:LongUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.bloomness:GetDebugString:": {
        "prefix": "components.bloomness:GetDebugString",
        "body": "components.bloomness:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.bloomness:SetLevel:": {
        "prefix": "components.bloomness:SetLevel",
        "body": "components.bloomness:SetLevel(${1:level})",
        "description": " ※Params: \n   (level)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.bloomness:OnSave:": {
        "prefix": "components.bloomness:OnSave",
        "body": "components.bloomness:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.bloomness:UpdateRate:": {
        "prefix": "components.bloomness:UpdateRate",
        "body": "components.bloomness:UpdateRate()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.bloomness:OnUpdate:": {
        "prefix": "components.bloomness:OnUpdate",
        "body": "components.bloomness:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.blowinwind:SetAverageSpeed:": {
        "prefix": "components.blowinwind:SetAverageSpeed",
        "body": "components.blowinwind:SetAverageSpeed(${1:spd})",
        "description": " ※Params: \n   (spd)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.blowinwind:StopSoundLoop:": {
        "prefix": "components.blowinwind:StopSoundLoop",
        "body": "components.blowinwind:StopSoundLoop()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.blowinwind:Start:": {
        "prefix": "components.blowinwind:Start",
        "body": "components.blowinwind:Start(${1:ang},${2:vel})",
        "description": " ※Params: \n   (ang)<>[] \n   (vel)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.blowinwind:Stop:": {
        "prefix": "components.blowinwind:Stop",
        "body": "components.blowinwind:Stop()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.blowinwind:StartSoundLoop:": {
        "prefix": "components.blowinwind:StartSoundLoop",
        "body": "components.blowinwind:StartSoundLoop()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.blowinwind:OnUpdate:": {
        "prefix": "components.blowinwind:OnUpdate",
        "body": "components.blowinwind:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.blowinwind:SetMinSpeedMult:": {
        "prefix": "components.blowinwind:SetMinSpeedMult",
        "body": "components.blowinwind:SetMinSpeedMult(${1:spd})",
        "description": " ※Params: \n   (spd)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.blowinwind:OnEntityWake:": {
        "prefix": "components.blowinwind:OnEntityWake",
        "body": "components.blowinwind:OnEntityWake()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.blowinwind:GetDebugString:": {
        "prefix": "components.blowinwind:GetDebugString",
        "body": "components.blowinwind:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.blowinwind:GetSpeed:": {
        "prefix": "components.blowinwind:GetSpeed",
        "body": "components.blowinwind:GetSpeed()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.blowinwind:OnEntitySleep:": {
        "prefix": "components.blowinwind:OnEntitySleep",
        "body": "components.blowinwind:OnEntitySleep()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.blowinwind:SetMaxSpeedMult:": {
        "prefix": "components.blowinwind:SetMaxSpeedMult",
        "body": "components.blowinwind:SetMaxSpeedMult(${1:spd})",
        "description": " ※Params: \n   (spd)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.blowinwind:ChangeDirection:": {
        "prefix": "components.blowinwind:ChangeDirection",
        "body": "components.blowinwind:ChangeDirection(${1:ang},${2:vel})",
        "description": " ※Params: \n   (ang)<>[] \n   (vel)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatai:OnUpdate:": {
        "prefix": "components.boatai:OnUpdate",
        "body": "components.boatai:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatcannon:SetOnStopAimingFn:": {
        "prefix": "components.boatcannon:SetOnStopAimingFn",
        "body": "components.boatcannon:SetOnStopAimingFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatcannon:Shoot:": {
        "prefix": "components.boatcannon:Shoot",
        "body": "components.boatcannon:Shoot()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatcannon:OnLoad:": {
        "prefix": "components.boatcannon:OnLoad",
        "body": "components.boatcannon:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatcannon:SetOnStartAimingFn:": {
        "prefix": "components.boatcannon:SetOnStartAimingFn",
        "body": "components.boatcannon:SetOnStartAimingFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatcannon:LoadAmmo:": {
        "prefix": "components.boatcannon:LoadAmmo",
        "body": "components.boatcannon:LoadAmmo(${1:projectileprefab})",
        "description": " ※Params: \n   (projectileprefab)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatcannon:IsAmmoLoaded:": {
        "prefix": "components.boatcannon:IsAmmoLoaded",
        "body": "components.boatcannon:IsAmmoLoaded()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatcannon:OnRemoveFromEntity:": {
        "prefix": "components.boatcannon:OnRemoveFromEntity",
        "body": "components.boatcannon:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatcannon:StopAiming:": {
        "prefix": "components.boatcannon:StopAiming",
        "body": "components.boatcannon:StopAiming()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatcannon:OnSave:": {
        "prefix": "components.boatcannon:OnSave",
        "body": "components.boatcannon:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatcannon:StartAiming:": {
        "prefix": "components.boatcannon:StartAiming",
        "body": "components.boatcannon:StartAiming(${1:operator})",
        "description": " ※Params: \n   (operator)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatcannonuser:SetCannon:": {
        "prefix": "components.boatcannonuser:SetCannon",
        "body": "components.boatcannonuser:SetCannon(${1:cannon})",
        "description": " ※Params: \n   (cannon)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatcannonuser:OnCannonChanged:": {
        "prefix": "components.boatcannonuser:OnCannonChanged",
        "body": "components.boatcannonuser:OnCannonChanged(${1:cannon})",
        "description": " ※Params: \n   (cannon)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatcannonuser:GetReticule:": {
        "prefix": "components.boatcannonuser:GetReticule",
        "body": "components.boatcannonuser:GetReticule()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatcannonuser:GetCannon:": {
        "prefix": "components.boatcannonuser:GetCannon",
        "body": "components.boatcannonuser:GetCannon()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatcannonuser:GetAimPos:": {
        "prefix": "components.boatcannonuser:GetAimPos",
        "body": "components.boatcannonuser:GetAimPos()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatcannonuser:SetClassified:": {
        "prefix": "components.boatcannonuser:SetClassified",
        "body": "components.boatcannonuser:SetClassified(${1:classified})",
        "description": " ※Params: \n   (classified)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatcannonuser:CancelAimingStateInternal:": {
        "prefix": "components.boatcannonuser:CancelAimingStateInternal",
        "body": "components.boatcannonuser:CancelAimingStateInternal()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatcannonuser:OnWallUpdate:": {
        "prefix": "components.boatcannonuser:OnWallUpdate",
        "body": "components.boatcannonuser:OnWallUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatcannonuser:DetachClassified:": {
        "prefix": "components.boatcannonuser:DetachClassified",
        "body": "components.boatcannonuser:DetachClassified()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatcannonuser:AttachClassified:": {
        "prefix": "components.boatcannonuser:AttachClassified",
        "body": "components.boatcannonuser:AttachClassified(${1:classified})",
        "description": " ※Params: \n   (classified)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatcrew:CrewCheer:": {
        "prefix": "components.boatcrew:CrewCheer",
        "body": "components.boatcrew:CrewCheer()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatcrew:RemoveMember:": {
        "prefix": "components.boatcrew:RemoveMember",
        "body": "components.boatcrew:RemoveMember(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatcrew:CountCrew:": {
        "prefix": "components.boatcrew:CountCrew",
        "body": "components.boatcrew:CountCrew()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatcrew:SetHeading:": {
        "prefix": "components.boatcrew:SetHeading",
        "body": "components.boatcrew:SetHeading(${1:heading})",
        "description": " ※Params: \n   (heading)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatcrew:GetHeadingNormal:": {
        "prefix": "components.boatcrew:GetHeadingNormal",
        "body": "components.boatcrew:GetHeadingNormal()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatcrew:LoadPostPass:": {
        "prefix": "components.boatcrew:LoadPostPass",
        "body": "components.boatcrew:LoadPostPass(${1:newents},${2:savedata})",
        "description": " ※Params: \n   (newents)<>[] \n   (savedata)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatcrew:SetTarget:": {
        "prefix": "components.boatcrew:SetTarget",
        "body": "components.boatcrew:SetTarget(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatcrew:CountPirateLoot:": {
        "prefix": "components.boatcrew:CountPirateLoot",
        "body": "components.boatcrew:CountPirateLoot()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatcrew:OnRemoveFromEntity:": {
        "prefix": "components.boatcrew:OnRemoveFromEntity",
        "body": "components.boatcrew:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatcrew:SetMemberTag:": {
        "prefix": "components.boatcrew:SetMemberTag",
        "body": "components.boatcrew:SetMemberTag(${1:tag})",
        "description": " ※Params: \n   (tag)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatcrew:SetRemoveMemberFn:": {
        "prefix": "components.boatcrew:SetRemoveMemberFn",
        "body": "components.boatcrew:SetRemoveMemberFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatcrew:SetCaptain:": {
        "prefix": "components.boatcrew:SetCaptain",
        "body": "components.boatcrew:SetCaptain(${1:captain})",
        "description": " ※Params: \n   (captain)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatcrew:OnRemoveEntity:": {
        "prefix": "components.boatcrew:OnRemoveEntity",
        "body": "components.boatcrew:OnRemoveEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatcrew:removeinkertarget:": {
        "prefix": "components.boatcrew:removeinkertarget",
        "body": "components.boatcrew:removeinkertarget(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatcrew:TestForVictory:": {
        "prefix": "components.boatcrew:TestForVictory",
        "body": "components.boatcrew:TestForVictory()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatcrew:IsCrewOnDeck:": {
        "prefix": "components.boatcrew:IsCrewOnDeck",
        "body": "components.boatcrew:IsCrewOnDeck()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatcrew:TestForLootToSteal:": {
        "prefix": "components.boatcrew:TestForLootToSteal",
        "body": "components.boatcrew:TestForLootToSteal()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatcrew:reserveinkertarget:": {
        "prefix": "components.boatcrew:reserveinkertarget",
        "body": "components.boatcrew:reserveinkertarget(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatcrew:checktinkertarget:": {
        "prefix": "components.boatcrew:checktinkertarget",
        "body": "components.boatcrew:checktinkertarget(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatcrew:AddMember:": {
        "prefix": "components.boatcrew:AddMember",
        "body": "components.boatcrew:AddMember(${1:inst},${2:setcaptain})",
        "description": " ※Params: \n   (inst)<>[] \n   (setcaptain)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatcrew:SetAddMemberFn:": {
        "prefix": "components.boatcrew:SetAddMemberFn",
        "body": "components.boatcrew:SetAddMemberFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatcrew:SetUpdateRange:": {
        "prefix": "components.boatcrew:SetUpdateRange",
        "body": "components.boatcrew:SetUpdateRange(${1:range})",
        "description": " ※Params: \n   (range)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatcrew:areAllCrewOnBoat:": {
        "prefix": "components.boatcrew:areAllCrewOnBoat",
        "body": "components.boatcrew:areAllCrewOnBoat()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatcrew:OnSave:": {
        "prefix": "components.boatcrew:OnSave",
        "body": "components.boatcrew:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatcrew:OnUpdate:": {
        "prefix": "components.boatcrew:OnUpdate",
        "body": "components.boatcrew:OnUpdate()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatdrag:GetDebugString:": {
        "prefix": "components.boatdrag:GetDebugString",
        "body": "components.boatdrag:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatdrifter:StopBoatPhysics:": {
        "prefix": "components.boatdrifter:StopBoatPhysics",
        "body": "components.boatdrifter:StopBoatPhysics()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatdrifter:StartBoatPhysics:": {
        "prefix": "components.boatdrifter:StartBoatPhysics",
        "body": "components.boatdrifter:StartBoatPhysics()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatdrifter:StartWakeTests:": {
        "prefix": "components.boatdrifter:StartWakeTests",
        "body": "components.boatdrifter:StartWakeTests()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatdrifter:OnStartMoving:": {
        "prefix": "components.boatdrifter:OnStartMoving",
        "body": "components.boatdrifter:OnStartMoving()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatdrifter:OnStopDrifting:": {
        "prefix": "components.boatdrifter:OnStopDrifting",
        "body": "components.boatdrifter:OnStopDrifting()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatdrifter:OnStopMoving:": {
        "prefix": "components.boatdrifter:OnStopMoving",
        "body": "components.boatdrifter:OnStopMoving()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatdrifter:OnEntitySleep:": {
        "prefix": "components.boatdrifter:OnEntitySleep",
        "body": "components.boatdrifter:OnEntitySleep()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatdrifter:OnEntityWake:": {
        "prefix": "components.boatdrifter:OnEntityWake",
        "body": "components.boatdrifter:OnEntityWake()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatdrifter:IsDrifting:": {
        "prefix": "components.boatdrifter:IsDrifting",
        "body": "components.boatdrifter:IsDrifting()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatdrifter:StopWakeTests:": {
        "prefix": "components.boatdrifter:StopWakeTests",
        "body": "components.boatdrifter:StopWakeTests()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatdrifter:IsMoving:": {
        "prefix": "components.boatdrifter:IsMoving",
        "body": "components.boatdrifter:IsMoving()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatdrifter:OnStartDrifting:": {
        "prefix": "components.boatdrifter:OnStartDrifting",
        "body": "components.boatdrifter:OnStartDrifting()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatdrifter:OnRemoveEntity:": {
        "prefix": "components.boatdrifter:OnRemoveEntity",
        "body": "components.boatdrifter:OnRemoveEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatleak:Repair:": {
        "prefix": "components.boatleak:Repair",
        "body": "components.boatleak:Repair(${1:doer},${2:patch_item})",
        "description": " ※Params: \n   (doer)<>[] \n   (patch_item)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatleak:ChangeToRepaired:": {
        "prefix": "components.boatleak:ChangeToRepaired",
        "body": "components.boatleak:ChangeToRepaired(${1:repair_build_name},${2:sndoverride})",
        "description": " ※Params: \n   (repair_build_name)<>[] \n   (sndoverride)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatleak:SetState:": {
        "prefix": "components.boatleak:SetState",
        "body": "components.boatleak:SetState(${1:state},${2:skip_open})",
        "description": " ※Params: \n   (state)<>[] \n   (skip_open)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatleak:OnLoad:": {
        "prefix": "components.boatleak:OnLoad",
        "body": "components.boatleak:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatleak:SetPlugged:": {
        "prefix": "components.boatleak:SetPlugged",
        "body": "components.boatleak:SetPlugged(${1:setting})",
        "description": " ※Params: \n   (setting)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatleak:LongUpdate:": {
        "prefix": "components.boatleak:LongUpdate",
        "body": "components.boatleak:LongUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatleak:OnSave:": {
        "prefix": "components.boatleak:OnSave",
        "body": "components.boatleak:OnSave(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatleak:IsFinishedSpawning:": {
        "prefix": "components.boatleak:IsFinishedSpawning",
        "body": "components.boatleak:IsFinishedSpawning()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatleak:SetRepairedTime:": {
        "prefix": "components.boatleak:SetRepairedTime",
        "body": "components.boatleak:SetRepairedTime(${1:time})",
        "description": " ※Params: \n   (time)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatleak:GetRemainingRepairedTime:": {
        "prefix": "components.boatleak:GetRemainingRepairedTime",
        "body": "components.boatleak:GetRemainingRepairedTime()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatleak:SetBoat:": {
        "prefix": "components.boatleak:SetBoat",
        "body": "components.boatleak:SetBoat(${1:boat})",
        "description": " ※Params: \n   (boat)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatmagnet:PairedBeacon:": {
        "prefix": "components.boatmagnet:PairedBeacon",
        "body": "components.boatmagnet:PairedBeacon()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatmagnet:SetBoat:": {
        "prefix": "components.boatmagnet:SetBoat",
        "body": "components.boatmagnet:SetBoat(${1:boat})",
        "description": " ※Params: \n   (boat)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatmagnet:UnpairWithBeacon:": {
        "prefix": "components.boatmagnet:UnpairWithBeacon",
        "body": "components.boatmagnet:UnpairWithBeacon()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatmagnet:OnLoad:": {
        "prefix": "components.boatmagnet:OnLoad",
        "body": "components.boatmagnet:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatmagnet:CalcMagnetDirection:": {
        "prefix": "components.boatmagnet:CalcMagnetDirection",
        "body": "components.boatmagnet:CalcMagnetDirection()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatmagnet:CalcMagnetForce:": {
        "prefix": "components.boatmagnet:CalcMagnetForce",
        "body": "components.boatmagnet:CalcMagnetForce()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatmagnet:OnRemoveFromEntity:": {
        "prefix": "components.boatmagnet:OnRemoveFromEntity",
        "body": "components.boatmagnet:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatmagnet:GetDebugString:": {
        "prefix": "components.boatmagnet:GetDebugString",
        "body": "components.boatmagnet:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatmagnet:OnUpdate:": {
        "prefix": "components.boatmagnet:OnUpdate",
        "body": "components.boatmagnet:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatmagnet:CalcMaxVelocity:": {
        "prefix": "components.boatmagnet:CalcMaxVelocity",
        "body": "components.boatmagnet:CalcMaxVelocity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatmagnet:GetFollowTarget:": {
        "prefix": "components.boatmagnet:GetFollowTarget",
        "body": "components.boatmagnet:GetFollowTarget()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatmagnet:IsBeaconOnSameBoat:": {
        "prefix": "components.boatmagnet:IsBeaconOnSameBoat",
        "body": "components.boatmagnet:IsBeaconOnSameBoat(${1:beacon})",
        "description": " ※Params: \n   (beacon)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatmagnet:OnRemoveEntity:": {
        "prefix": "components.boatmagnet:OnRemoveEntity",
        "body": "components.boatmagnet:OnRemoveEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatmagnet:IsActivated:": {
        "prefix": "components.boatmagnet:IsActivated",
        "body": "components.boatmagnet:IsActivated()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatmagnet:FindNearestBeacon:": {
        "prefix": "components.boatmagnet:FindNearestBeacon",
        "body": "components.boatmagnet:FindNearestBeacon()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatmagnet:OnSave:": {
        "prefix": "components.boatmagnet:OnSave",
        "body": "components.boatmagnet:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatmagnet:PairWithBeacon:": {
        "prefix": "components.boatmagnet:PairWithBeacon",
        "body": "components.boatmagnet:PairWithBeacon(${1:beacon})",
        "description": " ※Params: \n   (beacon)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatmagnetbeacon:UnpairWithMagnet:": {
        "prefix": "components.boatmagnetbeacon:UnpairWithMagnet",
        "body": "components.boatmagnetbeacon:UnpairWithMagnet()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatmagnetbeacon:SetBoat:": {
        "prefix": "components.boatmagnetbeacon:SetBoat",
        "body": "components.boatmagnetbeacon:SetBoat(${1:boat})",
        "description": " ※Params: \n   (boat)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatmagnetbeacon:GetDebugString:": {
        "prefix": "components.boatmagnetbeacon:GetDebugString",
        "body": "components.boatmagnetbeacon:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatmagnetbeacon:PairWithMagnet:": {
        "prefix": "components.boatmagnetbeacon:PairWithMagnet",
        "body": "components.boatmagnetbeacon:PairWithMagnet(${1:magnet})",
        "description": " ※Params: \n   (magnet)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatmagnetbeacon:PairedMagnet:": {
        "prefix": "components.boatmagnetbeacon:PairedMagnet",
        "body": "components.boatmagnetbeacon:PairedMagnet()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatmagnetbeacon:IsPickedUp:": {
        "prefix": "components.boatmagnetbeacon:IsPickedUp",
        "body": "components.boatmagnetbeacon:IsPickedUp()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatmagnetbeacon:TurnOffBeacon:": {
        "prefix": "components.boatmagnetbeacon:TurnOffBeacon",
        "body": "components.boatmagnetbeacon:TurnOffBeacon()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatmagnetbeacon:OnLoad:": {
        "prefix": "components.boatmagnetbeacon:OnLoad",
        "body": "components.boatmagnetbeacon:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatmagnetbeacon:IsTurnedOff:": {
        "prefix": "components.boatmagnetbeacon:IsTurnedOff",
        "body": "components.boatmagnetbeacon:IsTurnedOff()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatmagnetbeacon:OnRemoveEntity:": {
        "prefix": "components.boatmagnetbeacon:OnRemoveEntity",
        "body": "components.boatmagnetbeacon:OnRemoveEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatmagnetbeacon:SetIsPickedUp:": {
        "prefix": "components.boatmagnetbeacon:SetIsPickedUp",
        "body": "components.boatmagnetbeacon:SetIsPickedUp(${1:pickedup})",
        "description": " ※Params: \n   (pickedup)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatmagnetbeacon:OnDeath:": {
        "prefix": "components.boatmagnetbeacon:OnDeath",
        "body": "components.boatmagnetbeacon:OnDeath()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatmagnetbeacon:TurnOnBeacon:": {
        "prefix": "components.boatmagnetbeacon:TurnOnBeacon",
        "body": "components.boatmagnetbeacon:TurnOnBeacon()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatmagnetbeacon:GetBoat:": {
        "prefix": "components.boatmagnetbeacon:GetBoat",
        "body": "components.boatmagnetbeacon:GetBoat()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatmagnetbeacon:OnSave:": {
        "prefix": "components.boatmagnetbeacon:OnSave",
        "body": "components.boatmagnetbeacon:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatmagnetbeacon:OnRemoveFromEntity:": {
        "prefix": "components.boatmagnetbeacon:OnRemoveFromEntity",
        "body": "components.boatmagnetbeacon:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatpatch:GetPatchType:": {
        "prefix": "components.boatpatch:GetPatchType",
        "body": "components.boatpatch:GetPatchType()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatpatch:OnRemoveFromEntity:": {
        "prefix": "components.boatpatch:OnRemoveFromEntity",
        "body": "components.boatpatch:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatphysics:ApplySailForce:": {
        "prefix": "components.boatphysics:ApplySailForce",
        "body": "components.boatphysics:ApplySailForce(${1:dt},${2:sail_force},${3:cur_velocity},${4:max_velocity})",
        "description": " ※Params: \n   (dt)<>[] \n   (sail_force)<>[] \n   (cur_velocity)<>[] \n   (max_velocity)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatphysics:GetMoveDirection:": {
        "prefix": "components.boatphysics:GetMoveDirection",
        "body": "components.boatphysics:GetMoveDirection()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatphysics:GetMaxVelocity:": {
        "prefix": "components.boatphysics:GetMaxVelocity",
        "body": "components.boatphysics:GetMaxVelocity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatphysics:OnEntitySleep:": {
        "prefix": "components.boatphysics:OnEntitySleep",
        "body": "components.boatphysics:OnEntitySleep()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatphysics:AddBoatDrag:": {
        "prefix": "components.boatphysics:AddBoatDrag",
        "body": "components.boatphysics:AddBoatDrag(${1:boatdraginst})",
        "description": " ※Params: \n   (boatdraginst)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatphysics:RemoveAnchorCmp:": {
        "prefix": "components.boatphysics:RemoveAnchorCmp",
        "body": "components.boatphysics:RemoveAnchorCmp(${1:anchor})",
        "description": " ※Params: \n   (anchor)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatphysics:GetNormalizedVelocities:": {
        "prefix": "components.boatphysics:GetNormalizedVelocities",
        "body": "components.boatphysics:GetNormalizedVelocities()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatphysics:AddMagnet:": {
        "prefix": "components.boatphysics:AddMagnet",
        "body": "components.boatphysics:AddMagnet(${1:magnet})",
        "description": " ※Params: \n   (magnet)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatphysics:RemoveMast:": {
        "prefix": "components.boatphysics:RemoveMast",
        "body": "components.boatphysics:RemoveMast(${1:mast})",
        "description": " ※Params: \n   (mast)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatphysics:GetDebugString:": {
        "prefix": "components.boatphysics:GetDebugString",
        "body": "components.boatphysics:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatphysics:OnSave:": {
        "prefix": "components.boatphysics:OnSave",
        "body": "components.boatphysics:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatphysics:GetTotalAnchorDrag:": {
        "prefix": "components.boatphysics:GetTotalAnchorDrag",
        "body": "components.boatphysics:GetTotalAnchorDrag()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatphysics:StartUpdating:": {
        "prefix": "components.boatphysics:StartUpdating",
        "body": "components.boatphysics:StartUpdating()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatphysics:GetRudderDirection:": {
        "prefix": "components.boatphysics:GetRudderDirection",
        "body": "components.boatphysics:GetRudderDirection()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatphysics:ApplyRowForce:": {
        "prefix": "components.boatphysics:ApplyRowForce",
        "body": "components.boatphysics:ApplyRowForce(${1:dir_x},${2:dir_z},${3:force},${4:max_velocity})",
        "description": " ※Params: \n   (dir_x)<>[] \n   (dir_z)<>[] \n   (force)<>[] \n   (max_velocity)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatphysics:GetTargetRudderDirection:": {
        "prefix": "components.boatphysics:GetTargetRudderDirection",
        "body": "components.boatphysics:GetTargetRudderDirection()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatphysics:RemoveMagnet:": {
        "prefix": "components.boatphysics:RemoveMagnet",
        "body": "components.boatphysics:RemoveMagnet(${1:magnet})",
        "description": " ※Params: \n   (magnet)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatphysics:OnLoad:": {
        "prefix": "components.boatphysics:OnLoad",
        "body": "components.boatphysics:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatphysics:StopUpdating:": {
        "prefix": "components.boatphysics:StopUpdating",
        "body": "components.boatphysics:StopUpdating()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatphysics:SetTargetRudderDirection:": {
        "prefix": "components.boatphysics:SetTargetRudderDirection",
        "body": "components.boatphysics:SetTargetRudderDirection(${1:dir_x},${2:dir_z})",
        "description": " ※Params: \n   (dir_x)<>[] \n   (dir_z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatphysics:GetBoatDrag:": {
        "prefix": "components.boatphysics:GetBoatDrag",
        "body": "components.boatphysics:GetBoatDrag(${1:velocity},${2:total_anchor_drag})",
        "description": " ※Params: \n   (velocity)<>[] \n   (total_anchor_drag)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatphysics:CloseAllSails:": {
        "prefix": "components.boatphysics:CloseAllSails",
        "body": "components.boatphysics:CloseAllSails()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatphysics:AddMast:": {
        "prefix": "components.boatphysics:AddMast",
        "body": "components.boatphysics:AddMast(${1:mast})",
        "description": " ※Params: \n   (mast)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatphysics:SetHalting:": {
        "prefix": "components.boatphysics:SetHalting",
        "body": "components.boatphysics:SetHalting(${1:halt})",
        "description": " ※Params: \n   (halt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatphysics:GetForceDampening:": {
        "prefix": "components.boatphysics:GetForceDampening",
        "body": "components.boatphysics:GetForceDampening()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatphysics:AddEmergencyBrakeSource:": {
        "prefix": "components.boatphysics:AddEmergencyBrakeSource",
        "body": "components.boatphysics:AddEmergencyBrakeSource(${1:source})",
        "description": " ※Params: \n   (source)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatphysics:AddAnchorCmp:": {
        "prefix": "components.boatphysics:AddAnchorCmp",
        "body": "components.boatphysics:AddAnchorCmp(${1:anchor})",
        "description": " ※Params: \n   (anchor)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatphysics:OnDeath:": {
        "prefix": "components.boatphysics:OnDeath",
        "body": "components.boatphysics:OnDeath()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatphysics:ApplyMagnetForce:": {
        "prefix": "components.boatphysics:ApplyMagnetForce",
        "body": "components.boatphysics:ApplyMagnetForce(${1:dt},${2:magnet_force},${3:magnet_direction},${4:cur_velocity},${5:max_velocity})",
        "description": " ※Params: \n   (dt)<>[] \n   (magnet_force)<>[] \n   (magnet_direction)<>[] \n   (cur_velocity)<>[] \n   (max_velocity)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatphysics:ApplyDrag:": {
        "prefix": "components.boatphysics:ApplyDrag",
        "body": "components.boatphysics:ApplyDrag(${1:dt},${2:total_drag},${3:cur_velocity},${4:velocity_normal_x},${5:velocity_normal_z})",
        "description": " ※Params: \n   (dt)<>[] \n   (total_drag)<>[] \n   (cur_velocity)<>[] \n   (velocity_normal_x)<>[] \n   (velocity_normal_z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatphysics:GetAnchorSailForceModifier:": {
        "prefix": "components.boatphysics:GetAnchorSailForceModifier",
        "body": "components.boatphysics:GetAnchorSailForceModifier()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatphysics:GetRudderTurnSpeed:": {
        "prefix": "components.boatphysics:GetRudderTurnSpeed",
        "body": "components.boatphysics:GetRudderTurnSpeed()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatphysics:SetCanSteeringRotate:": {
        "prefix": "components.boatphysics:SetCanSteeringRotate",
        "body": "components.boatphysics:SetCanSteeringRotate(${1:can_rotate})",
        "description": " ※Params: \n   (can_rotate)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatphysics:RemoveBoatDrag:": {
        "prefix": "components.boatphysics:RemoveBoatDrag",
        "body": "components.boatphysics:RemoveBoatDrag(${1:boatdraginst})",
        "description": " ※Params: \n   (boatdraginst)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatphysics:GetVelocity:": {
        "prefix": "components.boatphysics:GetVelocity",
        "body": "components.boatphysics:GetVelocity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatphysics:ApplyForce:": {
        "prefix": "components.boatphysics:ApplyForce",
        "body": "components.boatphysics:ApplyForce(${1:dir_x},${2:dir_z},${3:force})",
        "description": " ※Params: \n   (dir_x)<>[] \n   (dir_z)<>[] \n   (force)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatphysics:DoApplyForce:": {
        "prefix": "components.boatphysics:DoApplyForce",
        "body": "components.boatphysics:DoApplyForce(${1:dir_x},${2:dir_z},${3:force})",
        "description": " ※Params: \n   (dir_x)<>[] \n   (dir_z)<>[] \n   (force)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatphysics:RemoveEmergencyBrakeSource:": {
        "prefix": "components.boatphysics:RemoveEmergencyBrakeSource",
        "body": "components.boatphysics:RemoveEmergencyBrakeSource(${1:source})",
        "description": " ※Params: \n   (source)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatphysics:OnUpdate:": {
        "prefix": "components.boatphysics:OnUpdate",
        "body": "components.boatphysics:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatracecrew:SetCaptain:": {
        "prefix": "components.boatracecrew:SetCaptain",
        "body": "components.boatracecrew:SetCaptain(${1:captain})",
        "description": " ※Params: \n   (captain)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatracecrew:RemoveMemberListeners:": {
        "prefix": "components.boatracecrew:RemoveMemberListeners",
        "body": "components.boatracecrew:RemoveMemberListeners(${1:member})",
        "description": " ※Params: \n   (member)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatracecrew:RemoveMember:": {
        "prefix": "components.boatracecrew:RemoveMember",
        "body": "components.boatracecrew:RemoveMember(${1:member})",
        "description": " ※Params: \n   (member)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatracecrew:GetHeadingNormal:": {
        "prefix": "components.boatracecrew:GetHeadingNormal",
        "body": "components.boatracecrew:GetHeadingNormal()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatracecrew:LoadPostPass:": {
        "prefix": "components.boatracecrew:LoadPostPass",
        "body": "components.boatracecrew:LoadPostPass(${1:newents},${2:data})",
        "description": " ※Params: \n   (newents)<>[] \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatracecrew:SetTarget:": {
        "prefix": "components.boatracecrew:SetTarget",
        "body": "components.boatracecrew:SetTarget(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatracecrew:OnRemoveEntity:": {
        "prefix": "components.boatracecrew:OnRemoveEntity",
        "body": "components.boatracecrew:OnRemoveEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatracecrew:OnRemoveFromEntity:": {
        "prefix": "components.boatracecrew:OnRemoveFromEntity",
        "body": "components.boatracecrew:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatracecrew:AddMemberListeners:": {
        "prefix": "components.boatracecrew:AddMemberListeners",
        "body": "components.boatracecrew:AddMemberListeners(${1:member})",
        "description": " ※Params: \n   (member)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatracecrew:OnUpdate:": {
        "prefix": "components.boatracecrew:OnUpdate",
        "body": "components.boatracecrew:OnUpdate()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatracecrew:OnSave:": {
        "prefix": "components.boatracecrew:OnSave",
        "body": "components.boatracecrew:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatracecrew:AddMember:": {
        "prefix": "components.boatracecrew:AddMember",
        "body": "components.boatracecrew:AddMember(${1:new_member},${2:is_captain})",
        "description": " ※Params: \n   (new_member)<>[] \n   (is_captain)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatrace_proximitybeacon:SetBoatraceStartedFn:": {
        "prefix": "components.boatrace_proximitybeacon:SetBoatraceStartedFn",
        "body": "components.boatrace_proximitybeacon:SetBoatraceStartedFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatrace_proximitybeacon:SetBoatraceFinishedFn:": {
        "prefix": "components.boatrace_proximitybeacon:SetBoatraceFinishedFn",
        "body": "components.boatrace_proximitybeacon:SetBoatraceFinishedFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatrace_proximitybeacon:OnRemoveFromEntity:": {
        "prefix": "components.boatrace_proximitybeacon:OnRemoveFromEntity",
        "body": "components.boatrace_proximitybeacon:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatrace_proximitychecker:OnStartRace:": {
        "prefix": "components.boatrace_proximitychecker:OnStartRace",
        "body": "components.boatrace_proximitychecker:OnStartRace()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatrace_proximitychecker:OnFinishRace:": {
        "prefix": "components.boatrace_proximitychecker:OnFinishRace",
        "body": "components.boatrace_proximitychecker:OnFinishRace()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatrace_proximitychecker:OnRemoveFromEntity:": {
        "prefix": "components.boatrace_proximitychecker:OnRemoveFromEntity",
        "body": "components.boatrace_proximitychecker:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatring:AddRotator:": {
        "prefix": "components.boatring:AddRotator",
        "body": "components.boatring:AddRotator(${1:rotator})",
        "description": " ※Params: \n   (rotator)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatring:AddBumper:": {
        "prefix": "components.boatring:AddBumper",
        "body": "components.boatring:AddBumper(${1:bumper})",
        "description": " ※Params: \n   (bumper)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatring:OnLoad:": {
        "prefix": "components.boatring:OnLoad",
        "body": "components.boatring:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatring:GetRadius:": {
        "prefix": "components.boatring:GetRadius",
        "body": "components.boatring:GetRadius()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatring:OnDeath:": {
        "prefix": "components.boatring:OnDeath",
        "body": "components.boatring:OnDeath()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatring:OnSave:": {
        "prefix": "components.boatring:OnSave",
        "body": "components.boatring:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatring:GetRotationDirection:": {
        "prefix": "components.boatring:GetRotationDirection",
        "body": "components.boatring:GetRotationDirection()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatring:RemoveRotator:": {
        "prefix": "components.boatring:RemoveRotator",
        "body": "components.boatring:RemoveRotator(${1:rotator})",
        "description": " ※Params: \n   (rotator)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatring:OnUpdate:": {
        "prefix": "components.boatring:OnUpdate",
        "body": "components.boatring:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatring:GetBumperAtPoint:": {
        "prefix": "components.boatring:GetBumperAtPoint",
        "body": "components.boatring:GetBumperAtPoint(${1:x},${2:z})",
        "description": " ※Params: \n   (x)<>[] \n   (z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatring:SetRotationDirection:": {
        "prefix": "components.boatring:SetRotationDirection",
        "body": "components.boatring:SetRotationDirection(${1:dir})",
        "description": " ※Params: \n   (dir)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatring:GetNumSegments:": {
        "prefix": "components.boatring:GetNumSegments",
        "body": "components.boatring:GetNumSegments()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatring:RemoveBumper:": {
        "prefix": "components.boatring:RemoveBumper",
        "body": "components.boatring:RemoveBumper(${1:bumper})",
        "description": " ※Params: \n   (bumper)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatringdata:SetIsRotating:": {
        "prefix": "components.boatringdata:SetIsRotating",
        "body": "components.boatringdata:SetIsRotating(${1:isrotating})",
        "description": " ※Params: \n   (isrotating)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatringdata:SetRadius:": {
        "prefix": "components.boatringdata:SetRadius",
        "body": "components.boatringdata:SetRadius(${1:radius})",
        "description": " ※Params: \n   (radius)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatringdata:IsRotating:": {
        "prefix": "components.boatringdata:IsRotating",
        "body": "components.boatringdata:IsRotating()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatringdata:SetNumSegments:": {
        "prefix": "components.boatringdata:SetNumSegments",
        "body": "components.boatringdata:SetNumSegments(${1:segments})",
        "description": " ※Params: \n   (segments)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatringdata:GetRadius:": {
        "prefix": "components.boatringdata:GetRadius",
        "body": "components.boatringdata:GetRadius()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatringdata:GetNumSegments:": {
        "prefix": "components.boatringdata:GetNumSegments",
        "body": "components.boatringdata:GetNumSegments()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatrotator:SetBoat:": {
        "prefix": "components.boatrotator:SetBoat",
        "body": "components.boatrotator:SetBoat(${1:boat})",
        "description": " ※Params: \n   (boat)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatrotator:OnDeath:": {
        "prefix": "components.boatrotator:OnDeath",
        "body": "components.boatrotator:OnDeath()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatrotator:SetRotationDirection:": {
        "prefix": "components.boatrotator:SetRotationDirection",
        "body": "components.boatrotator:SetRotationDirection(${1:dir})",
        "description": " ※Params: \n   (dir)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boatrotator:OnRemoveEntity:": {
        "prefix": "components.boatrotator:OnRemoveEntity",
        "body": "components.boatrotator:OnRemoveEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boatrotator:OnRemoveFromEntity:": {
        "prefix": "components.boatrotator:OnRemoveFromEntity",
        "body": "components.boatrotator:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.boattrail:OnUpdate:": {
        "prefix": "components.boattrail:OnUpdate",
        "body": "components.boattrail:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boattrail:SpawnEffectPrefab:": {
        "prefix": "components.boattrail:SpawnEffectPrefab",
        "body": "components.boattrail:SpawnEffectPrefab(${1:x},${2:y},${3:z},${4:dir_x},${5:dir_z})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n   (dir_x)<>[] \n   (dir_z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boattrailmover:OnUpdate:": {
        "prefix": "components.boattrailmover:OnUpdate",
        "body": "components.boattrailmover:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.boattrailmover:Setup:": {
        "prefix": "components.boattrailmover:Setup",
        "body": "components.boattrailmover:Setup(${1:dir_x},${2:dir_z},${3:velocity},${4:acceleration})",
        "description": " ※Params: \n   (dir_x)<>[] \n   (dir_z)<>[] \n   (velocity)<>[] \n   (acceleration)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.book:SetOnPeruse:": {
        "prefix": "components.book:SetOnPeruse",
        "body": "components.book:SetOnPeruse(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.book:SetOnRead:": {
        "prefix": "components.book:SetOnRead",
        "body": "components.book:SetOnRead(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.book:OnRead:": {
        "prefix": "components.book:OnRead",
        "body": "components.book:OnRead(${1:reader})",
        "description": " ※Params: \n   (reader)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.book:Interact:": {
        "prefix": "components.book:Interact",
        "body": "components.book:Interact(${1:fn},${2:reader})",
        "description": " ※Params: \n   (fn)<>[] \n   (reader)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.book:ConsumeUse:": {
        "prefix": "components.book:ConsumeUse",
        "body": "components.book:ConsumeUse()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.book:SetPeruseSanity:": {
        "prefix": "components.book:SetPeruseSanity",
        "body": "components.book:SetPeruseSanity(${1:sanity})",
        "description": " ※Params: \n   (sanity)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.book:SetFx:": {
        "prefix": "components.book:SetFx",
        "body": "components.book:SetFx(${1:fx},${2:fxmount})",
        "description": " ※Params: \n   (fx)<>[] \n   (fxmount)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.book:OnPeruse:": {
        "prefix": "components.book:OnPeruse",
        "body": "components.book:OnPeruse(${1:reader})",
        "description": " ※Params: \n   (reader)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.book:SetReadSanity:": {
        "prefix": "components.book:SetReadSanity",
        "body": "components.book:SetReadSanity(${1:sanity})",
        "description": " ※Params: \n   (sanity)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.brushable:Brush:": {
        "prefix": "components.brushable:Brush",
        "body": "components.brushable:Brush(${1:doer},${2:brush})",
        "description": " ※Params: \n   (doer)<>[] \n   (brush)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.brushable:GetDebugString:": {
        "prefix": "components.brushable:GetDebugString",
        "body": "components.brushable:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.brushable:SetOnBrushed:": {
        "prefix": "components.brushable:SetOnBrushed",
        "body": "components.brushable:SetOnBrushed(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.brushable:OnLoad:": {
        "prefix": "components.brushable:OnLoad",
        "body": "components.brushable:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.brushable:OnSave:": {
        "prefix": "components.brushable:OnSave",
        "body": "components.brushable:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.brushable:CalculateNumPrizes:": {
        "prefix": "components.brushable:CalculateNumPrizes",
        "body": "components.brushable:CalculateNumPrizes()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.brushable:SetBrushable:": {
        "prefix": "components.brushable:SetBrushable",
        "body": "components.brushable:SetBrushable(${1:brushable},${2:reset})",
        "description": " ※Params: \n   (brushable)<>[] \n   (reset)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.builder:GiveTempTechBonus:": {
        "prefix": "components.builder:GiveTempTechBonus",
        "body": "components.builder:GiveTempTechBonus(${1:tech})",
        "description": " ※Params: \n   (tech)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.builder:GetTechBonuses:": {
        "prefix": "components.builder:GetTechBonuses",
        "body": "components.builder:GetTechBonuses()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.builder:MakeRecipeFromMenu:": {
        "prefix": "components.builder:MakeRecipeFromMenu",
        "body": "components.builder:MakeRecipeFromMenu(${1:recipe},${2:skin})",
        "description": " ※Params: \n   (recipe)<>[] \n   (skin)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.builder:HasIngredients:": {
        "prefix": "components.builder:HasIngredients",
        "body": "components.builder:HasIngredients(${1:recipe})",
        "description": " ※Params: \n   (recipe)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.builder:OnLoad:": {
        "prefix": "components.builder:OnLoad",
        "body": "components.builder:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.builder:ActivateCurrentResearchMachine:": {
        "prefix": "components.builder:ActivateCurrentResearchMachine",
        "body": "components.builder:ActivateCurrentResearchMachine(${1:recipe})",
        "description": " ※Params: \n   (recipe)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.builder:UnlockRecipe:": {
        "prefix": "components.builder:UnlockRecipe",
        "body": "components.builder:UnlockRecipe(${1:recname})",
        "description": " ※Params: \n   (recname)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.builder:LongUpdate:": {
        "prefix": "components.builder:LongUpdate",
        "body": "components.builder:LongUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.builder:GetTempTechBonuses:": {
        "prefix": "components.builder:GetTempTechBonuses",
        "body": "components.builder:GetTempTechBonuses()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.builder:RemoveRecipe:": {
        "prefix": "components.builder:RemoveRecipe",
        "body": "components.builder:RemoveRecipe(${1:recname})",
        "description": " ※Params: \n   (recname)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.builder:GiveAllRecipes:": {
        "prefix": "components.builder:GiveAllRecipes",
        "body": "components.builder:GiveAllRecipes()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.builder:GetIngredientWetness:": {
        "prefix": "components.builder:GetIngredientWetness",
        "body": "components.builder:GetIngredientWetness(${1:ingredients})",
        "description": " ※Params: \n   (ingredients)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.builder:CanLearn:": {
        "prefix": "components.builder:CanLearn",
        "body": "components.builder:CanLearn(${1:recname})",
        "description": " ※Params: \n   (recname)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.builder:RemoveIngredients:": {
        "prefix": "components.builder:RemoveIngredients",
        "body": "components.builder:RemoveIngredients(${1:ingredients},${2:recname},${3:discounted})",
        "description": " ※Params: \n   (ingredients)<>[] \n   (recname)<>[] \n   (discounted)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.builder:GetIngredients:": {
        "prefix": "components.builder:GetIngredients",
        "body": "components.builder:GetIngredients(${1:recname})",
        "description": " ※Params: \n   (recname)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.builder:BufferBuild:": {
        "prefix": "components.builder:BufferBuild",
        "body": "components.builder:BufferBuild(${1:recname})",
        "description": " ※Params: \n   (recname)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.builder:KnowsRecipe:": {
        "prefix": "components.builder:KnowsRecipe",
        "body": "components.builder:KnowsRecipe(${1:recipe},${2:ignore_tempbonus})",
        "description": " ※Params: \n   (recipe)<>[] \n   (ignore_tempbonus)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.builder:DoBuild:": {
        "prefix": "components.builder:DoBuild",
        "body": "components.builder:DoBuild(${1:recname},${2:pt},${3:rotation},${4:skin})",
        "description": " ※Params: \n   (recname)<>[] \n   (pt)<>[] \n   (rotation)<>[] \n   (skin)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.builder:MakeRecipeAtPoint:": {
        "prefix": "components.builder:MakeRecipeAtPoint",
        "body": "components.builder:MakeRecipeAtPoint(${1:recipe},${2:pt},${3:rot},${4:skin})",
        "description": " ※Params: \n   (recipe)<>[] \n   (pt)<>[] \n   (rot)<>[] \n   (skin)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.builder:HasCharacterIngredient:": {
        "prefix": "components.builder:HasCharacterIngredient",
        "body": "components.builder:HasCharacterIngredient(${1:ingredient})",
        "description": " ※Params: \n   (ingredient)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.builder:HasTechIngredient:": {
        "prefix": "components.builder:HasTechIngredient",
        "body": "components.builder:HasTechIngredient(${1:ingredient})",
        "description": " ※Params: \n   (ingredient)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.builder:CanBuild:": {
        "prefix": "components.builder:CanBuild",
        "body": "components.builder:CanBuild(${1:recipe_name})",
        "description": " ※Params: \n   (recipe_name)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.builder:MakeRecipe:": {
        "prefix": "components.builder:MakeRecipe",
        "body": "components.builder:MakeRecipe(${1:recipe},${2:pt},${3:rot},${4:skin},${5:onsuccess})",
        "description": " ※Params: \n   (recipe)<>[] \n   (pt)<>[] \n   (rot)<>[] \n   (skin)<>[] \n   (onsuccess)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.builder:AddRecipe:": {
        "prefix": "components.builder:AddRecipe",
        "body": "components.builder:AddRecipe(${1:recname})",
        "description": " ※Params: \n   (recname)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.builder:UsePrototyper:": {
        "prefix": "components.builder:UsePrototyper",
        "body": "components.builder:UsePrototyper(${1:prototyper})",
        "description": " ※Params: \n   (prototyper)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.builder:IsBuildBuffered:": {
        "prefix": "components.builder:IsBuildBuffered",
        "body": "components.builder:IsBuildBuffered(${1:recname})",
        "description": " ※Params: \n   (recname)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.builder:ConsumeTempTechBonuses:": {
        "prefix": "components.builder:ConsumeTempTechBonuses",
        "body": "components.builder:ConsumeTempTechBonuses()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.builder:OnSave:": {
        "prefix": "components.builder:OnSave",
        "body": "components.builder:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.builder:OnUpdate:": {
        "prefix": "components.builder:OnUpdate",
        "body": "components.builder:OnUpdate()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.bundlemaker:SetBundlingPrefabs:": {
        "prefix": "components.bundlemaker:SetBundlingPrefabs",
        "body": "components.bundlemaker:SetBundlingPrefabs(${1:bundling},${2:bundled})",
        "description": " ※Params: \n   (bundling)<>[] \n   (bundled)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.bundlemaker:SetSkinData:": {
        "prefix": "components.bundlemaker:SetSkinData",
        "body": "components.bundlemaker:SetSkinData(${1:skinname},${2:skin_id})",
        "description": " ※Params: \n   (skinname)<>[] \n   (skin_id)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.bundlemaker:SetOnStartBundlingFn:": {
        "prefix": "components.bundlemaker:SetOnStartBundlingFn",
        "body": "components.bundlemaker:SetOnStartBundlingFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.bundlemaker:OnStartBundling:": {
        "prefix": "components.bundlemaker:OnStartBundling",
        "body": "components.bundlemaker:OnStartBundling(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.bundler:FinishBundling:": {
        "prefix": "components.bundler:FinishBundling",
        "body": "components.bundler:FinishBundling()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.bundler:IsBundling:": {
        "prefix": "components.bundler:IsBundling",
        "body": "components.bundler:IsBundling(${1:bundlinginst})",
        "description": " ※Params: \n   (bundlinginst)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.bundler:StopBundling:": {
        "prefix": "components.bundler:StopBundling",
        "body": "components.bundler:StopBundling()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.bundler:StartBundling:": {
        "prefix": "components.bundler:StartBundling",
        "body": "components.bundler:StartBundling(${1:item})",
        "description": " ※Params: \n   (item)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.bundler:CanStartBundling:": {
        "prefix": "components.bundler:CanStartBundling",
        "body": "components.bundler:CanStartBundling()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.bundler:OnFinishBundling:": {
        "prefix": "components.bundler:OnFinishBundling",
        "body": "components.bundler:OnFinishBundling()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.bundler:OnSave:": {
        "prefix": "components.bundler:OnSave",
        "body": "components.bundler:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.bundler:OnLoad:": {
        "prefix": "components.bundler:OnLoad",
        "body": "components.bundler:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.burnable:SetFXOffset:": {
        "prefix": "components.burnable:SetFXOffset",
        "body": "components.burnable:SetFXOffset(${1:x},${2:y},${3:z})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.burnable:OverrideBurnFXBuild:": {
        "prefix": "components.burnable:OverrideBurnFXBuild",
        "body": "components.burnable:OverrideBurnFXBuild(${1:build})",
        "description": " ※Params: \n   (build)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.burnable:OverrideBurnFXRadius:": {
        "prefix": "components.burnable:OverrideBurnFXRadius",
        "body": "components.burnable:OverrideBurnFXRadius(${1:radius_levels})",
        "description": " ※Params: \n   (radius_levels)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.burnable:OnRemoveFromEntity:": {
        "prefix": "components.burnable:OnRemoveFromEntity",
        "body": "components.burnable:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.burnable:Ignite:": {
        "prefix": "components.burnable:Ignite",
        "body": "components.burnable:Ignite(${1:immediate},${2:source},${3:doer})",
        "description": " ※Params: \n   (immediate)<>[] \n   (source)<>[] \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.burnable:HasExothermicHeat:": {
        "prefix": "components.burnable:HasExothermicHeat",
        "body": "components.burnable:HasExothermicHeat()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.burnable:HasEndothermicHeat:": {
        "prefix": "components.burnable:HasEndothermicHeat",
        "body": "components.burnable:HasEndothermicHeat()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.burnable:ExtendBurning:": {
        "prefix": "components.burnable:ExtendBurning",
        "body": "components.burnable:ExtendBurning()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.burnable:IsBurning:": {
        "prefix": "components.burnable:IsBurning",
        "body": "components.burnable:IsBurning()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.burnable:SmotherSmolder:": {
        "prefix": "components.burnable:SmotherSmolder",
        "body": "components.burnable:SmotherSmolder(${1:smotherer})",
        "description": " ※Params: \n   (smotherer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.burnable:FixFX:": {
        "prefix": "components.burnable:FixFX",
        "body": "components.burnable:FixFX()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.burnable:SetBurnTime:": {
        "prefix": "components.burnable:SetBurnTime",
        "body": "components.burnable:SetBurnTime(${1:time})",
        "description": " ※Params: \n   (time)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.burnable:OnRemoveEntity:": {
        "prefix": "components.burnable:OnRemoveEntity",
        "body": "components.burnable:OnRemoveEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.burnable:OverrideBurnFXFinalOffset:": {
        "prefix": "components.burnable:OverrideBurnFXFinalOffset",
        "body": "components.burnable:OverrideBurnFXFinalOffset(${1:offs})",
        "description": " ※Params: \n   (offs)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.burnable:SpawnFX:": {
        "prefix": "components.burnable:SpawnFX",
        "body": "components.burnable:SpawnFX(${1:immediate})",
        "description": " ※Params: \n   (immediate)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.burnable:CalculateControlledBurnDuration:": {
        "prefix": "components.burnable:CalculateControlledBurnDuration",
        "body": "components.burnable:CalculateControlledBurnDuration()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.burnable:Extinguish:": {
        "prefix": "components.burnable:Extinguish",
        "body": "components.burnable:Extinguish(${1:resetpropagator},${2:heatpct},${3:smotherer})",
        "description": " ※Params: \n   (resetpropagator)<>[] \n   (heatpct)<>[] \n   (smotherer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.burnable:GetControlledBurn:": {
        "prefix": "components.burnable:GetControlledBurn",
        "body": "components.burnable:GetControlledBurn()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.burnable:KillFX:": {
        "prefix": "components.burnable:KillFX",
        "body": "components.burnable:KillFX()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.burnable:LongUpdate:": {
        "prefix": "components.burnable:LongUpdate",
        "body": "components.burnable:LongUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.burnable:AddBurnFX:": {
        "prefix": "components.burnable:AddBurnFX",
        "body": "components.burnable:AddBurnFX(${1:prefab},${2:offset},${3:followsymbol},${4:followaschild},${5:scale},${6:followlayered})",
        "description": " ※Params: \n   (prefab)<>[] \n   (offset)<>[] \n   (followsymbol)<>[] \n   (followaschild)<>[] \n   (scale)<>[] \n   (followlayered)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.burnable:StopSmoldering:": {
        "prefix": "components.burnable:StopSmoldering",
        "body": "components.burnable:StopSmoldering(${1:heatpct})",
        "description": " ※Params: \n   (heatpct)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.burnable:SetFXLevel:": {
        "prefix": "components.burnable:SetFXLevel",
        "body": "components.burnable:SetFXLevel(${1:level},${2:percent})",
        "description": " ※Params: \n   (level)<>[] \n   (percent)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.burnable:GetDebugString:": {
        "prefix": "components.burnable:GetDebugString",
        "body": "components.burnable:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.burnable:GetLargestLightRadius:": {
        "prefix": "components.burnable:GetLargestLightRadius",
        "body": "components.burnable:GetLargestLightRadius()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.burnable:SetBurningFX:": {
        "prefix": "components.burnable:SetBurningFX",
        "body": "components.burnable:SetBurningFX(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.burnable:IsControlledBurn:": {
        "prefix": "components.burnable:IsControlledBurn",
        "body": "components.burnable:IsControlledBurn()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.burnable:IsSmoldering:": {
        "prefix": "components.burnable:IsSmoldering",
        "body": "components.burnable:IsSmoldering()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.burnable:StartWildfire:": {
        "prefix": "components.burnable:StartWildfire",
        "body": "components.burnable:StartWildfire()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.canopylightrays:SpawnLightrays:": {
        "prefix": "components.canopylightrays:SpawnLightrays",
        "body": "components.canopylightrays:SpawnLightrays()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.canopylightrays:DespawnLightrays:": {
        "prefix": "components.canopylightrays:DespawnLightrays",
        "body": "components.canopylightrays:DespawnLightrays()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.canopylightrays:OnRemoveEntity:": {
        "prefix": "components.canopylightrays:OnRemoveEntity",
        "body": "components.canopylightrays:OnRemoveEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.canopyshadows:DespawnShadows:": {
        "prefix": "components.canopyshadows:DespawnShadows",
        "body": "components.canopyshadows:DespawnShadows(${1:ignore_entity_sleep})",
        "description": " ※Params: \n   (ignore_entity_sleep)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.canopyshadows:GenerateCanopyShadowPositions:": {
        "prefix": "components.canopyshadows:GenerateCanopyShadowPositions",
        "body": "components.canopyshadows:GenerateCanopyShadowPositions()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.canopyshadows:RemoveCanopyShadowPositions:": {
        "prefix": "components.canopyshadows:RemoveCanopyShadowPositions",
        "body": "components.canopyshadows:RemoveCanopyShadowPositions()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.canopyshadows:SpawnShadows:": {
        "prefix": "components.canopyshadows:SpawnShadows",
        "body": "components.canopyshadows:SpawnShadows()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.canopyshadows:OnEntitySleep:": {
        "prefix": "components.canopyshadows:OnEntitySleep",
        "body": "components.canopyshadows:OnEntitySleep()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.canopyshadows:OnEntityWake:": {
        "prefix": "components.canopyshadows:OnEntityWake",
        "body": "components.canopyshadows:OnEntityWake()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.canopyshadows:OnRemoveEntity:": {
        "prefix": "components.canopyshadows:OnRemoveEntity",
        "body": "components.canopyshadows:OnRemoveEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.carefulwalker:SetCarefulWalkingSpeedMultiplier:": {
        "prefix": "components.carefulwalker:SetCarefulWalkingSpeedMultiplier",
        "body": "components.carefulwalker:SetCarefulWalkingSpeedMultiplier(${1:mult})",
        "description": " ※Params: \n   (mult)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.carefulwalker:IsCarefulWalking:": {
        "prefix": "components.carefulwalker:IsCarefulWalking",
        "body": "components.carefulwalker:IsCarefulWalking()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.carefulwalker:OnUpdate:": {
        "prefix": "components.carefulwalker:OnUpdate",
        "body": "components.carefulwalker:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.carefulwalker:ToggleCareful:": {
        "prefix": "components.carefulwalker:ToggleCareful",
        "body": "components.carefulwalker:ToggleCareful(${1:careful})",
        "description": " ※Params: \n   (careful)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.carefulwalker:TrackTarget:": {
        "prefix": "components.carefulwalker:TrackTarget",
        "body": "components.carefulwalker:TrackTarget(${1:target},${2:radius},${3:duration})",
        "description": " ※Params: \n   (target)<>[] \n   (radius)<>[] \n   (duration)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.carefulwalker:OnRemoveFromEntity:": {
        "prefix": "components.carefulwalker:OnRemoveFromEntity",
        "body": "components.carefulwalker:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.carnivaldecor:GetDecorValue:": {
        "prefix": "components.carnivaldecor:GetDecorValue",
        "body": "components.carnivaldecor:GetDecorValue()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.carnivaldecor:OnRemoveEntity:": {
        "prefix": "components.carnivaldecor:OnRemoveEntity",
        "body": "components.carnivaldecor:OnRemoveEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.carnivaldecor:OnRemoveFromEntity:": {
        "prefix": "components.carnivaldecor:OnRemoveFromEntity",
        "body": "components.carnivaldecor:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.carnivaldecorranker:AddDecor:": {
        "prefix": "components.carnivaldecorranker:AddDecor",
        "body": "components.carnivaldecorranker:AddDecor(${1:decor})",
        "description": " ※Params: \n   (decor)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.carnivaldecorranker:RemoveDecor:": {
        "prefix": "components.carnivaldecorranker:RemoveDecor",
        "body": "components.carnivaldecorranker:RemoveDecor(${1:decor})",
        "description": " ※Params: \n   (decor)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.carnivaldecorranker:GetDebugString:": {
        "prefix": "components.carnivaldecorranker:GetDebugString",
        "body": "components.carnivaldecorranker:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.carnivaldecorranker:UpdateDecorValue:": {
        "prefix": "components.carnivaldecorranker:UpdateDecorValue",
        "body": "components.carnivaldecorranker:UpdateDecorValue(${1:snap})",
        "description": " ※Params: \n   (snap)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.carnivalgamefeedable:DoFeed:": {
        "prefix": "components.carnivalgamefeedable:DoFeed",
        "body": "components.carnivalgamefeedable:DoFeed(${1:doer},${2:item})",
        "description": " ※Params: \n   (doer)<>[] \n   (item)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.carnivalgameshooter:Initialize:": {
        "prefix": "components.carnivalgameshooter:Initialize",
        "body": "components.carnivalgameshooter:Initialize()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.carnivalgameshooter:UpdateAiming:": {
        "prefix": "components.carnivalgameshooter:UpdateAiming",
        "body": "components.carnivalgameshooter:UpdateAiming(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.carnivalgameshooter:SetAim:": {
        "prefix": "components.carnivalgameshooter:SetAim",
        "body": "components.carnivalgameshooter:SetAim()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.carnivalgameshooter:Shoot:": {
        "prefix": "components.carnivalgameshooter:Shoot",
        "body": "components.carnivalgameshooter:Shoot()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.carnivalhostsummon:SetCanSummon:": {
        "prefix": "components.carnivalhostsummon:SetCanSummon",
        "body": "components.carnivalhostsummon:SetCanSummon(${1:cansummon})",
        "description": " ※Params: \n   (cansummon)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.catcher:OnUpdate:": {
        "prefix": "components.catcher:OnUpdate",
        "body": "components.catcher:OnUpdate()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.catcher:SetEnabled:": {
        "prefix": "components.catcher:SetEnabled",
        "body": "components.catcher:SetEnabled(${1:enable})",
        "description": " ※Params: \n   (enable)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.catcher:SetActionDistance:": {
        "prefix": "components.catcher:SetActionDistance",
        "body": "components.catcher:SetActionDistance(${1:dist})",
        "description": " ※Params: \n   (dist)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.catcher:StartWatching:": {
        "prefix": "components.catcher:StartWatching",
        "body": "components.catcher:StartWatching(${1:projectile})",
        "description": " ※Params: \n   (projectile)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.catcher:SetCatchDistance:": {
        "prefix": "components.catcher:SetCatchDistance",
        "body": "components.catcher:SetCatchDistance(${1:dist})",
        "description": " ※Params: \n   (dist)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.catcher:StopWatching:": {
        "prefix": "components.catcher:StopWatching",
        "body": "components.catcher:StopWatching(${1:projectile})",
        "description": " ※Params: \n   (projectile)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.catcher:CanCatch:": {
        "prefix": "components.catcher:CanCatch",
        "body": "components.catcher:CanCatch()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.catcher:OnRemoveFromEntity:": {
        "prefix": "components.catcher:OnRemoveFromEntity",
        "body": "components.catcher:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.cattoy:SetOnPlay:": {
        "prefix": "components.cattoy:SetOnPlay",
        "body": "components.cattoy:SetOnPlay(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.cattoy:Play:": {
        "prefix": "components.cattoy:Play",
        "body": "components.cattoy:Play(${1:doer},${2:is_airborne})",
        "description": " ※Params: \n   (doer)<>[] \n   (is_airborne)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.channelable:GetDebugString:": {
        "prefix": "components.channelable:GetDebugString",
        "body": "components.channelable:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.channelable:SetEnabled:": {
        "prefix": "components.channelable:SetEnabled",
        "body": "components.channelable:SetEnabled(${1:enabled})",
        "description": " ※Params: \n   (enabled)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.channelable:SetChannelingFn:": {
        "prefix": "components.channelable:SetChannelingFn",
        "body": "components.channelable:SetChannelingFn(${1:startfn},${2:stopfn})",
        "description": " ※Params: \n   (startfn)<>[] \n   (stopfn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.channelable:OnUpdate:": {
        "prefix": "components.channelable:OnUpdate",
        "body": "components.channelable:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.channelable:StopChanneling:": {
        "prefix": "components.channelable:StopChanneling",
        "body": "components.channelable:StopChanneling(${1:aborted})",
        "description": " ※Params: \n   (aborted)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.channelable:StartChanneling:": {
        "prefix": "components.channelable:StartChanneling",
        "body": "components.channelable:StartChanneling(${1:channeler})",
        "description": " ※Params: \n   (channeler)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.channelable:IsChanneling:": {
        "prefix": "components.channelable:IsChanneling",
        "body": "components.channelable:IsChanneling()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.channelable:OnRemoveFromEntity:": {
        "prefix": "components.channelable:OnRemoveFromEntity",
        "body": "components.channelable:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.channelcastable:SetOnStopChannelingFn:": {
        "prefix": "components.channelcastable:SetOnStopChannelingFn",
        "body": "components.channelcastable:SetOnStopChannelingFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.channelcastable:SetStrafing:": {
        "prefix": "components.channelcastable:SetStrafing",
        "body": "components.channelcastable:SetStrafing(${1:enable})",
        "description": " ※Params: \n   (enable)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.channelcastable:StopChanneling:": {
        "prefix": "components.channelcastable:StopChanneling",
        "body": "components.channelcastable:StopChanneling()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.channelcastable:OnStopChanneling:": {
        "prefix": "components.channelcastable:OnStopChanneling",
        "body": "components.channelcastable:OnStopChanneling(${1:user})",
        "description": " ※Params: \n   (user)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.channelcastable:GetDebugString:": {
        "prefix": "components.channelcastable:GetDebugString",
        "body": "components.channelcastable:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.channelcastable:SetOnStartChannelingFn:": {
        "prefix": "components.channelcastable:SetOnStartChannelingFn",
        "body": "components.channelcastable:SetOnStartChannelingFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.channelcastable:OnStartChanneling:": {
        "prefix": "components.channelcastable:OnStartChanneling",
        "body": "components.channelcastable:OnStartChanneling(${1:user})",
        "description": " ※Params: \n   (user)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.channelcastable:IsAnyUserChanneling:": {
        "prefix": "components.channelcastable:IsAnyUserChanneling",
        "body": "components.channelcastable:IsAnyUserChanneling()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.channelcastable:IsUserChanneling:": {
        "prefix": "components.channelcastable:IsUserChanneling",
        "body": "components.channelcastable:IsUserChanneling(${1:user})",
        "description": " ※Params: \n   (user)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.channelcaster:SetOnStopChannelingFn:": {
        "prefix": "components.channelcaster:SetOnStopChannelingFn",
        "body": "components.channelcaster:SetOnStopChannelingFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.channelcaster:IsChannelingItem:": {
        "prefix": "components.channelcaster:IsChannelingItem",
        "body": "components.channelcaster:IsChannelingItem(${1:item})",
        "description": " ※Params: \n   (item)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.channelcaster:GetDebugString:": {
        "prefix": "components.channelcaster:GetDebugString",
        "body": "components.channelcaster:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.channelcaster:SetOnStartChannelingFn:": {
        "prefix": "components.channelcaster:SetOnStartChannelingFn",
        "body": "components.channelcaster:SetOnStartChannelingFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.channelcaster:StartChanneling:": {
        "prefix": "components.channelcaster:StartChanneling",
        "body": "components.channelcaster:StartChanneling(${1:item})",
        "description": " ※Params: \n   (item)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.channelcaster:IsChanneling:": {
        "prefix": "components.channelcaster:IsChanneling",
        "body": "components.channelcaster:IsChanneling()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.channelcaster:StopChanneling:": {
        "prefix": "components.channelcaster:StopChanneling",
        "body": "components.channelcaster:StopChanneling()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.charliecutscene:ClientLockCamera:": {
        "prefix": "components.charliecutscene:ClientLockCamera",
        "body": "components.charliecutscene:ClientLockCamera()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.charliecutscene:FindCharlieHandSpawnPoint:": {
        "prefix": "components.charliecutscene:FindCharlieHandSpawnPoint",
        "body": "components.charliecutscene:FindCharlieHandSpawnPoint()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.charliecutscene:ClientUnlockCamera:": {
        "prefix": "components.charliecutscene:ClientUnlockCamera",
        "body": "components.charliecutscene:ClientUnlockCamera()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.charliecutscene:SpawnCharlieWithDelay:": {
        "prefix": "components.charliecutscene:SpawnCharlieWithDelay",
        "body": "components.charliecutscene:SpawnCharlieWithDelay(${1:delay})",
        "description": " ※Params: \n   (delay)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.charliecutscene:Start:": {
        "prefix": "components.charliecutscene:Start",
        "body": "components.charliecutscene:Start()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.charliecutscene:SpawnCharlieHand:": {
        "prefix": "components.charliecutscene:SpawnCharlieHand",
        "body": "components.charliecutscene:SpawnCharlieHand()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.charliecutscene:OnLoad:": {
        "prefix": "components.charliecutscene:OnLoad",
        "body": "components.charliecutscene:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.charliecutscene:Finish:": {
        "prefix": "components.charliecutscene:Finish",
        "body": "components.charliecutscene:Finish()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.charliecutscene:IsGateRepaired:": {
        "prefix": "components.charliecutscene:IsGateRepaired",
        "body": "components.charliecutscene:IsGateRepaired()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.charliecutscene:FindCharlieSpawnPoint:": {
        "prefix": "components.charliecutscene:FindCharlieSpawnPoint",
        "body": "components.charliecutscene:FindCharlieSpawnPoint()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.charliecutscene:StartRepairingGateWithDelay:": {
        "prefix": "components.charliecutscene:StartRepairingGateWithDelay",
        "body": "components.charliecutscene:StartRepairingGateWithDelay(${1:delay},${2:delay_to_fix})",
        "description": " ※Params: \n   (delay)<>[] \n   (delay_to_fix)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.charliecutscene:CollectAtriumPillarsData:": {
        "prefix": "components.charliecutscene:CollectAtriumPillarsData",
        "body": "components.charliecutscene:CollectAtriumPillarsData()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.charliecutscene:RepairGate:": {
        "prefix": "components.charliecutscene:RepairGate",
        "body": "components.charliecutscene:RepairGate()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.charliecutscene:OnSave:": {
        "prefix": "components.charliecutscene:OnSave",
        "body": "components.charliecutscene:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.charliecutscene:FindSceneCameraAngle:": {
        "prefix": "components.charliecutscene:FindSceneCameraAngle",
        "body": "components.charliecutscene:FindSceneCameraAngle()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:GoHome:": {
        "prefix": "components.childspawner:GoHome",
        "body": "components.childspawner:GoHome(${1:child})",
        "description": " ※Params: \n   (child)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:SetOccupiedFn:": {
        "prefix": "components.childspawner:SetOccupiedFn",
        "body": "components.childspawner:SetOccupiedFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:DoQueuedSpawn:": {
        "prefix": "components.childspawner:DoQueuedSpawn",
        "body": "components.childspawner:DoQueuedSpawn()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:SetOnAddChildFn:": {
        "prefix": "components.childspawner:SetOnAddChildFn",
        "body": "components.childspawner:SetOnAddChildFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:GetTimeToNextRegen:": {
        "prefix": "components.childspawner:GetTimeToNextRegen",
        "body": "components.childspawner:GetTimeToNextRegen()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:NumEmergencyChildren:": {
        "prefix": "components.childspawner:NumEmergencyChildren",
        "body": "components.childspawner:NumEmergencyChildren()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:SetSpawnedFn:": {
        "prefix": "components.childspawner:SetSpawnedFn",
        "body": "components.childspawner:SetSpawnedFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:LongUpdate:": {
        "prefix": "components.childspawner:LongUpdate",
        "body": "components.childspawner:LongUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:SetEmergencyRadius:": {
        "prefix": "components.childspawner:SetEmergencyRadius",
        "body": "components.childspawner:SetEmergencyRadius(${1:rad})",
        "description": " ※Params: \n   (rad)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:NumChildren:": {
        "prefix": "components.childspawner:NumChildren",
        "body": "components.childspawner:NumChildren()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:AddEmergencyChildrenInside:": {
        "prefix": "components.childspawner:AddEmergencyChildrenInside",
        "body": "components.childspawner:AddEmergencyChildrenInside(${1:count})",
        "description": " ※Params: \n   (count)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:SetOnChildKilledFn:": {
        "prefix": "components.childspawner:SetOnChildKilledFn",
        "body": "components.childspawner:SetOnChildKilledFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:SetRegenPeriod:": {
        "prefix": "components.childspawner:SetRegenPeriod",
        "body": "components.childspawner:SetRegenPeriod(${1:period},${2:variance})",
        "description": " ※Params: \n   (period)<>[] \n   (variance)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:IsFull:": {
        "prefix": "components.childspawner:IsFull",
        "body": "components.childspawner:IsFull()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:SpawnEmergencyChild:": {
        "prefix": "components.childspawner:SpawnEmergencyChild",
        "body": "components.childspawner:SpawnEmergencyChild(${1:target},${2:prefab},${3:radius})",
        "description": " ※Params: \n   (target)<>[] \n   (prefab)<>[] \n   (radius)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:AddChildrenInside:": {
        "prefix": "components.childspawner:AddChildrenInside",
        "body": "components.childspawner:AddChildrenInside(${1:count})",
        "description": " ※Params: \n   (count)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:SetVacateFn:": {
        "prefix": "components.childspawner:SetVacateFn",
        "body": "components.childspawner:SetVacateFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:ReleaseAllChildren:": {
        "prefix": "components.childspawner:ReleaseAllChildren",
        "body": "components.childspawner:ReleaseAllChildren(${1:target},${2:prefab},${3:radius})",
        "description": " ※Params: \n   (target)<>[] \n   (prefab)<>[] \n   (radius)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:SpawnChild:": {
        "prefix": "components.childspawner:SpawnChild",
        "body": "components.childspawner:SpawnChild(${1:target},${2:prefab},${3:radius})",
        "description": " ※Params: \n   (target)<>[] \n   (prefab)<>[] \n   (radius)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:OnChildKilled:": {
        "prefix": "components.childspawner:OnChildKilled",
        "body": "components.childspawner:OnChildKilled(${1:child})",
        "description": " ※Params: \n   (child)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:OnSave:": {
        "prefix": "components.childspawner:OnSave",
        "body": "components.childspawner:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:CanEmergencySpawn:": {
        "prefix": "components.childspawner:CanEmergencySpawn",
        "body": "components.childspawner:CanEmergencySpawn()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:SetMaxChildren:": {
        "prefix": "components.childspawner:SetMaxChildren",
        "body": "components.childspawner:SetMaxChildren(${1:max})",
        "description": " ※Params: \n   (max)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:CountChildrenOutside:": {
        "prefix": "components.childspawner:CountChildrenOutside",
        "body": "components.childspawner:CountChildrenOutside(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:CanSpawnOffscreenOrAwake:": {
        "prefix": "components.childspawner:CanSpawnOffscreenOrAwake",
        "body": "components.childspawner:CanSpawnOffscreenOrAwake()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:CanSpawn:": {
        "prefix": "components.childspawner:CanSpawn",
        "body": "components.childspawner:CanSpawn()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:DoTakeOwnership:": {
        "prefix": "components.childspawner:DoTakeOwnership",
        "body": "components.childspawner:DoTakeOwnership(${1:child})",
        "description": " ※Params: \n   (child)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:StartSpawning:": {
        "prefix": "components.childspawner:StartSpawning",
        "body": "components.childspawner:StartSpawning()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:GetTimeToNextSpawn:": {
        "prefix": "components.childspawner:GetTimeToNextSpawn",
        "body": "components.childspawner:GetTimeToNextSpawn()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:SetRareChild:": {
        "prefix": "components.childspawner:SetRareChild",
        "body": "components.childspawner:SetRareChild(${1:childname},${2:chance})",
        "description": " ※Params: \n   (childname)<>[] \n   (chance)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:LoadPostPass:": {
        "prefix": "components.childspawner:LoadPostPass",
        "body": "components.childspawner:LoadPostPass(${1:newents},${2:savedata})",
        "description": " ※Params: \n   (newents)<>[] \n   (savedata)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:UpdateMaxEmergencyCommit:": {
        "prefix": "components.childspawner:UpdateMaxEmergencyCommit",
        "body": "components.childspawner:UpdateMaxEmergencyCommit()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:StartUpdate:": {
        "prefix": "components.childspawner:StartUpdate",
        "body": "components.childspawner:StartUpdate()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:DoSpawnChild:": {
        "prefix": "components.childspawner:DoSpawnChild",
        "body": "components.childspawner:DoSpawnChild(${1:target},${2:prefab},${3:radius})",
        "description": " ※Params: \n   (target)<>[] \n   (prefab)<>[] \n   (radius)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:SetMaxEmergencyChildren:": {
        "prefix": "components.childspawner:SetMaxEmergencyChildren",
        "body": "components.childspawner:SetMaxEmergencyChildren(${1:max})",
        "description": " ※Params: \n   (max)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:StopSpawning:": {
        "prefix": "components.childspawner:StopSpawning",
        "body": "components.childspawner:StopSpawning()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:SetOnTakeOwnershipFn:": {
        "prefix": "components.childspawner:SetOnTakeOwnershipFn",
        "body": "components.childspawner:SetOnTakeOwnershipFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:OnRemoveFromEntity:": {
        "prefix": "components.childspawner:OnRemoveFromEntity",
        "body": "components.childspawner:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:SetSpawnPeriod:": {
        "prefix": "components.childspawner:SetSpawnPeriod",
        "body": "components.childspawner:SetSpawnPeriod(${1:period},${2:variance})",
        "description": " ※Params: \n   (period)<>[] \n   (variance)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:TryStopUpdate:": {
        "prefix": "components.childspawner:TryStopUpdate",
        "body": "components.childspawner:TryStopUpdate()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:QueueSpawnChild:": {
        "prefix": "components.childspawner:QueueSpawnChild",
        "body": "components.childspawner:QueueSpawnChild()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:TakeEmergencyOwnership:": {
        "prefix": "components.childspawner:TakeEmergencyOwnership",
        "body": "components.childspawner:TakeEmergencyOwnership(${1:child})",
        "description": " ※Params: \n   (child)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:StopRegen:": {
        "prefix": "components.childspawner:StopRegen",
        "body": "components.childspawner:StopRegen()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:TakeOwnership:": {
        "prefix": "components.childspawner:TakeOwnership",
        "body": "components.childspawner:TakeOwnership(${1:child})",
        "description": " ※Params: \n   (child)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:TrySpawnEmergencyChild:": {
        "prefix": "components.childspawner:TrySpawnEmergencyChild",
        "body": "components.childspawner:TrySpawnEmergencyChild()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:OnLoad:": {
        "prefix": "components.childspawner:OnLoad",
        "body": "components.childspawner:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:GetDebugString:": {
        "prefix": "components.childspawner:GetDebugString",
        "body": "components.childspawner:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:SetGoHomeFn:": {
        "prefix": "components.childspawner:SetGoHomeFn",
        "body": "components.childspawner:SetGoHomeFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:OnEntityWake:": {
        "prefix": "components.childspawner:OnEntityWake",
        "body": "components.childspawner:OnEntityWake()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:StartRegen:": {
        "prefix": "components.childspawner:StartRegen",
        "body": "components.childspawner:StartRegen()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:ShouldUpdate:": {
        "prefix": "components.childspawner:ShouldUpdate",
        "body": "components.childspawner:ShouldUpdate()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:IsEmergencyFull:": {
        "prefix": "components.childspawner:IsEmergencyFull",
        "body": "components.childspawner:IsEmergencyFull()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:DoRegen:": {
        "prefix": "components.childspawner:DoRegen",
        "body": "components.childspawner:DoRegen()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.childspawner:OnUpdate:": {
        "prefix": "components.childspawner:OnUpdate",
        "body": "components.childspawner:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.circler:GetMinSpeed:": {
        "prefix": "components.circler:GetMinSpeed",
        "body": "components.circler:GetMinSpeed()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.circler:GetDebugString:": {
        "prefix": "components.circler:GetDebugString",
        "body": "components.circler:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.circler:GetSpeed:": {
        "prefix": "components.circler:GetSpeed",
        "body": "components.circler:GetSpeed(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.circler:GetMinScale:": {
        "prefix": "components.circler:GetMinScale",
        "body": "components.circler:GetMinScale()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.circler:SetCircleTarget:": {
        "prefix": "components.circler:SetCircleTarget",
        "body": "components.circler:SetCircleTarget(${1:tar})",
        "description": " ※Params: \n   (tar)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.circler:Start:": {
        "prefix": "components.circler:Start",
        "body": "components.circler:Start()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.circler:Stop:": {
        "prefix": "components.circler:Stop",
        "body": "components.circler:Stop()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.circler:OnUpdate:": {
        "prefix": "components.circler:OnUpdate",
        "body": "components.circler:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.circuitnode:AddNode:": {
        "prefix": "components.circuitnode:AddNode",
        "body": "components.circuitnode:AddNode(${1:node})",
        "description": " ※Params: \n   (node)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.circuitnode:SetFootprint:": {
        "prefix": "components.circuitnode:SetFootprint",
        "body": "components.circuitnode:SetFootprint(${1:footprint})",
        "description": " ※Params: \n   (footprint)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.circuitnode:ForEachNode:": {
        "prefix": "components.circuitnode:ForEachNode",
        "body": "components.circuitnode:ForEachNode(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.circuitnode:NumConnectedNodes:": {
        "prefix": "components.circuitnode:NumConnectedNodes",
        "body": "components.circuitnode:NumConnectedNodes()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.circuitnode:SetOnDisconnectFn:": {
        "prefix": "components.circuitnode:SetOnDisconnectFn",
        "body": "components.circuitnode:SetOnDisconnectFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.circuitnode:IsConnected:": {
        "prefix": "components.circuitnode:IsConnected",
        "body": "components.circuitnode:IsConnected()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.circuitnode:IsEnabled:": {
        "prefix": "components.circuitnode:IsEnabled",
        "body": "components.circuitnode:IsEnabled()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.circuitnode:ConnectTo:": {
        "prefix": "components.circuitnode:ConnectTo",
        "body": "components.circuitnode:ConnectTo(${1:tag})",
        "description": " ※Params: \n   (tag)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.circuitnode:RemoveNode:": {
        "prefix": "components.circuitnode:RemoveNode",
        "body": "components.circuitnode:RemoveNode(${1:node})",
        "description": " ※Params: \n   (node)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.circuitnode:SetOnConnectFn:": {
        "prefix": "components.circuitnode:SetOnConnectFn",
        "body": "components.circuitnode:SetOnConnectFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.circuitnode:Disconnect:": {
        "prefix": "components.circuitnode:Disconnect",
        "body": "components.circuitnode:Disconnect()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.circuitnode:SetRange:": {
        "prefix": "components.circuitnode:SetRange",
        "body": "components.circuitnode:SetRange(${1:range})",
        "description": " ※Params: \n   (range)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.circuitnode:OnRemoveEntity:": {
        "prefix": "components.circuitnode:OnRemoveEntity",
        "body": "components.circuitnode:OnRemoveEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.closeinspector:CloseInspectPoint:": {
        "prefix": "components.closeinspector:CloseInspectPoint",
        "body": "components.closeinspector:CloseInspectPoint(${1:doer},${2:pt})",
        "description": " ※Params: \n   (doer)<>[] \n   (pt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.closeinspector:SetInspectTargetFn:": {
        "prefix": "components.closeinspector:SetInspectTargetFn",
        "body": "components.closeinspector:SetInspectTargetFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.closeinspector:SetInspectPointFn:": {
        "prefix": "components.closeinspector:SetInspectPointFn",
        "body": "components.closeinspector:SetInspectPointFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.closeinspector:CloseInspectTarget:": {
        "prefix": "components.closeinspector:CloseInspectTarget",
        "body": "components.closeinspector:CloseInspectTarget(${1:doer},${2:target})",
        "description": " ※Params: \n   (doer)<>[] \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.closeinspector:OnRemoveFromEntity:": {
        "prefix": "components.closeinspector:OnRemoveFromEntity",
        "body": "components.closeinspector:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.coach:StartInspiring:": {
        "prefix": "components.coach:StartInspiring",
        "body": "components.coach:StartInspiring()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.coach:StopInspiring:": {
        "prefix": "components.coach:StopInspiring",
        "body": "components.coach:StopInspiring()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.coach:Enable:": {
        "prefix": "components.coach:Enable",
        "body": "components.coach:Enable()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.coach:Disable:": {
        "prefix": "components.coach:Disable",
        "body": "components.coach:Disable()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.colouradder:GetCurrentColour:": {
        "prefix": "components.colouradder:GetCurrentColour",
        "body": "components.colouradder:GetCurrentColour()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.colouradder:PopColour:": {
        "prefix": "components.colouradder:PopColour",
        "body": "components.colouradder:PopColour(${1:source})",
        "description": " ※Params: \n   (source)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.colouradder:AttachChild:": {
        "prefix": "components.colouradder:AttachChild",
        "body": "components.colouradder:AttachChild(${1:child})",
        "description": " ※Params: \n   (child)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.colouradder:CalculateCurrentColour:": {
        "prefix": "components.colouradder:CalculateCurrentColour",
        "body": "components.colouradder:CalculateCurrentColour()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.colouradder:PushColour:": {
        "prefix": "components.colouradder:PushColour",
        "body": "components.colouradder:PushColour(${1:source},${2:r},${3:g},${4:b},${5:a})",
        "description": " ※Params: \n   (source)<>[] \n   (r)<>[] \n   (g)<>[] \n   (b)<>[] \n   (a)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.colouradder:GetDebugString:": {
        "prefix": "components.colouradder:GetDebugString",
        "body": "components.colouradder:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.colouradder:DetachChild:": {
        "prefix": "components.colouradder:DetachChild",
        "body": "components.colouradder:DetachChild(${1:child})",
        "description": " ※Params: \n   (child)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.colouradder:OnSetColour:": {
        "prefix": "components.colouradder:OnSetColour",
        "body": "components.colouradder:OnSetColour(${1:r},${2:g},${3:b},${4:a})",
        "description": " ※Params: \n   (r)<>[] \n   (g)<>[] \n   (b)<>[] \n   (a)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.colouradder:OnRemoveFromEntity:": {
        "prefix": "components.colouradder:OnRemoveFromEntity",
        "body": "components.colouradder:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.colouraddersync:SetColourChangedFn:": {
        "prefix": "components.colouraddersync:SetColourChangedFn",
        "body": "components.colouraddersync:SetColourChangedFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.colouraddersync:SyncColour:": {
        "prefix": "components.colouraddersync:SyncColour",
        "body": "components.colouraddersync:SyncColour(${1:r},${2:g},${3:b},${4:a})",
        "description": " ※Params: \n   (r)<>[] \n   (g)<>[] \n   (b)<>[] \n   (a)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.colourtweener:DoUpdate:": {
        "prefix": "components.colourtweener:DoUpdate",
        "body": "components.colourtweener:DoUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.colourtweener:EndTween:": {
        "prefix": "components.colourtweener:EndTween",
        "body": "components.colourtweener:EndTween()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.combat:ValidateTarget:": {
        "prefix": "components.combat:ValidateTarget",
        "body": "components.combat:ValidateTarget()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.combat:CalcReflectedDamage:": {
        "prefix": "components.combat:CalcReflectedDamage",
        "body": "components.combat:CalcReflectedDamage(${1:targ},${2:dmg},${3:weapon},${4:stimuli},${5:reflect_list},${6:spdmg})",
        "description": " ※Params: \n   (targ)<>[] \n   (dmg)<>[] \n   (weapon)<>[] \n   (stimuli)<>[] \n   (reflect_list)<>[] \n   (spdmg)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.combat:ShareTarget:": {
        "prefix": "components.combat:ShareTarget",
        "body": "components.combat:ShareTarget(${1:target},${2:range},${3:fn},${4:maxnum},${5:musttags})",
        "description": " ※Params: \n   (target)<>[] \n   (range)<>[] \n   (fn)<>[] \n   (maxnum)<>[] \n   (musttags)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.combat:CanTarget:": {
        "prefix": "components.combat:CanTarget",
        "body": "components.combat:CanTarget(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.combat:RemoveNoAggroTag:": {
        "prefix": "components.combat:RemoveNoAggroTag",
        "body": "components.combat:RemoveNoAggroTag(${1:tag})",
        "description": " ※Params: \n   (tag)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.combat:GetAttacked:": {
        "prefix": "components.combat:GetAttacked",
        "body": "components.combat:GetAttacked(${1:attacker},${2:damage},${3:weapon},${4:stimuli},${5:spdamage})",
        "description": " ※Params: \n   (attacker)<>[] \n   (damage)<>[] \n   (weapon)<>[] \n   (stimuli)<>[] \n   (spdamage)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.combat:EnableAreaDamage:": {
        "prefix": "components.combat:EnableAreaDamage",
        "body": "components.combat:EnableAreaDamage(${1:enable})",
        "description": " ※Params: \n   (enable)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.combat:CanExtinguishTarget:": {
        "prefix": "components.combat:CanExtinguishTarget",
        "body": "components.combat:CanExtinguishTarget(${1:target},${2:weapon})",
        "description": " ※Params: \n   (target)<>[] \n   (weapon)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.combat:CanBeAttacked:": {
        "prefix": "components.combat:CanBeAttacked",
        "body": "components.combat:CanBeAttacked(${1:attacker})",
        "description": " ※Params: \n   (attacker)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.combat:SetPlayerStunlock:": {
        "prefix": "components.combat:SetPlayerStunlock",
        "body": "components.combat:SetPlayerStunlock(${1:stunlock})",
        "description": " ※Params: \n   (stunlock)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.combat:SetShouldAvoidAggro:": {
        "prefix": "components.combat:SetShouldAvoidAggro",
        "body": "components.combat:SetShouldAvoidAggro(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.combat:GetDebugString:": {
        "prefix": "components.combat:GetDebugString",
        "body": "components.combat:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.combat:DoAreaAttack:": {
        "prefix": "components.combat:DoAreaAttack",
        "body": "components.combat:DoAreaAttack(${1:target},${2:range},${3:weapon},${4:validfn},${5:stimuli},${6:excludetags})",
        "description": " ※Params: \n   (target)<>[] \n   (range)<>[] \n   (weapon)<>[] \n   (validfn)<>[] \n   (stimuli)<>[] \n   (excludetags)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.combat:GetGiveUpString:": {
        "prefix": "components.combat:GetGiveUpString",
        "body": "components.combat:GetGiveUpString(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.combat:TryRetarget:": {
        "prefix": "components.combat:TryRetarget",
        "body": "components.combat:TryRetarget()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.combat:SetRange:": {
        "prefix": "components.combat:SetRange",
        "body": "components.combat:SetRange(${1:attack},${2:hit})",
        "description": " ※Params: \n   (attack)<>[] \n   (hit)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.combat:SetLastTarget:": {
        "prefix": "components.combat:SetLastTarget",
        "body": "components.combat:SetLastTarget(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.combat:SetAttackPeriod:": {
        "prefix": "components.combat:SetAttackPeriod",
        "body": "components.combat:SetAttackPeriod(${1:period})",
        "description": " ※Params: \n   (period)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.combat:SetOnHit:": {
        "prefix": "components.combat:SetOnHit",
        "body": "components.combat:SetOnHit(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.combat:StopTrackingTarget:": {
        "prefix": "components.combat:StopTrackingTarget",
        "body": "components.combat:StopTrackingTarget(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.combat:ForceAttack:": {
        "prefix": "components.combat:ForceAttack",
        "body": "components.combat:ForceAttack()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.combat:ResetBattleCryCooldown:": {
        "prefix": "components.combat:ResetBattleCryCooldown",
        "body": "components.combat:ResetBattleCryCooldown(${1:t})",
        "description": " ※Params: \n   (t)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.combat:OnRemoveFromEntity:": {
        "prefix": "components.combat:OnRemoveFromEntity",
        "body": "components.combat:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.combat:SetShouldAggroFn:": {
        "prefix": "components.combat:SetShouldAggroFn",
        "body": "components.combat:SetShouldAggroFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.combat:SetHurtSound:": {
        "prefix": "components.combat:SetHurtSound",
        "body": "components.combat:SetHurtSound(${1:sound})",
        "description": " ※Params: \n   (sound)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.combat:DropTarget:": {
        "prefix": "components.combat:DropTarget",
        "body": "components.combat:DropTarget(${1:hasnexttarget})",
        "description": " ※Params: \n   (hasnexttarget)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.combat:IsRecentTarget:": {
        "prefix": "components.combat:IsRecentTarget",
        "body": "components.combat:IsRecentTarget(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.combat:TargetIs:": {
        "prefix": "components.combat:TargetIs",
        "body": "components.combat:TargetIs(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.combat:OnEntityWake:": {
        "prefix": "components.combat:OnEntityWake",
        "body": "components.combat:OnEntityWake()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.combat:SetKeepTargetFunction:": {
        "prefix": "components.combat:SetKeepTargetFunction",
        "body": "components.combat:SetKeepTargetFunction(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.combat:GiveUp:": {
        "prefix": "components.combat:GiveUp",
        "body": "components.combat:GiveUp()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.combat:OnUpdate:": {
        "prefix": "components.combat:OnUpdate",
        "body": "components.combat:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.combat:SetAreaDamage:": {
        "prefix": "components.combat:SetAreaDamage",
        "body": "components.combat:SetAreaDamage(${1:range},${2:percent},${3:areahitcheck})",
        "description": " ※Params: \n   (range)<>[] \n   (percent)<>[] \n   (areahitcheck)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.combat:ShouldAggro:": {
        "prefix": "components.combat:ShouldAggro",
        "body": "components.combat:ShouldAggro(${1:target},${2:ignore_forbidden})",
        "description": " ※Params: \n   (target)<>[] \n   (ignore_forbidden)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.combat:TryAttack:": {
        "prefix": "components.combat:TryAttack",
        "body": "components.combat:TryAttack(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.combat:SetTarget:": {
        "prefix": "components.combat:SetTarget",
        "body": "components.combat:SetTarget(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.combat:RestartCooldown:": {
        "prefix": "components.combat:RestartCooldown",
        "body": "components.combat:RestartCooldown()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.combat:GetHitRange:": {
        "prefix": "components.combat:GetHitRange",
        "body": "components.combat:GetHitRange()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.combat:RemoveShouldAvoidAggro:": {
        "prefix": "components.combat:RemoveShouldAvoidAggro",
        "body": "components.combat:RemoveShouldAvoidAggro(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.combat:HasTarget:": {
        "prefix": "components.combat:HasTarget",
        "body": "components.combat:HasTarget()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.combat:CancelAttack:": {
        "prefix": "components.combat:CancelAttack",
        "body": "components.combat:CancelAttack()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.combat:TargetHasFriendlyLeader:": {
        "prefix": "components.combat:TargetHasFriendlyLeader",
        "body": "components.combat:TargetHasFriendlyLeader(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.combat:IsAlly:": {
        "prefix": "components.combat:IsAlly",
        "body": "components.combat:IsAlly(${1:guy})",
        "description": " ※Params: \n   (guy)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.combat:GetDamageReflect:": {
        "prefix": "components.combat:GetDamageReflect",
        "body": "components.combat:GetDamageReflect(${1:target},${2:damage},${3:weapon},${4:stimuli})",
        "description": " ※Params: \n   (target)<>[] \n   (damage)<>[] \n   (weapon)<>[] \n   (stimuli)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.combat:DoAttack:": {
        "prefix": "components.combat:DoAttack",
        "body": "components.combat:DoAttack(${1:targ},${2:weapon},${3:projectile},${4:stimuli},${5:instancemult},${6:instrangeoverride},${7:instpos})",
        "description": " ※Params: \n   (targ)<>[] \n   (weapon)<>[] \n   (projectile)<>[] \n   (stimuli)<>[] \n   (instancemult)<>[] \n   (instrangeoverride)<>[] \n   (instpos)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.combat:SetRetargetFunction:": {
        "prefix": "components.combat:SetRetargetFunction",
        "body": "components.combat:SetRetargetFunction(${1:period},${2:fn})",
        "description": " ※Params: \n   (period)<>[] \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.combat:ClearAttackTemps:": {
        "prefix": "components.combat:ClearAttackTemps",
        "body": "components.combat:ClearAttackTemps()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.combat:CalcDamage:": {
        "prefix": "components.combat:CalcDamage",
        "body": "components.combat:CalcDamage(${1:target},${2:weapon},${3:multiplier})",
        "description": " ※Params: \n   (target)<>[] \n   (weapon)<>[] \n   (multiplier)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.combat:CanHitTarget:": {
        "prefix": "components.combat:CanHitTarget",
        "body": "components.combat:CanHitTarget(${1:target},${2:weapon})",
        "description": " ※Params: \n   (target)<>[] \n   (weapon)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.combat:IsValidTarget:": {
        "prefix": "components.combat:IsValidTarget",
        "body": "components.combat:IsValidTarget(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.combat:CanLightTarget:": {
        "prefix": "components.combat:CanLightTarget",
        "body": "components.combat:CanLightTarget(${1:target},${2:weapon})",
        "description": " ※Params: \n   (target)<>[] \n   (weapon)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.combat:CalcHitRangeSq:": {
        "prefix": "components.combat:CalcHitRangeSq",
        "body": "components.combat:CalcHitRangeSq(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.combat:CalcAttackRangeSq:": {
        "prefix": "components.combat:CalcAttackRangeSq",
        "body": "components.combat:CalcAttackRangeSq(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.combat:GetAttackRange:": {
        "prefix": "components.combat:GetAttackRange",
        "body": "components.combat:GetAttackRange()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.combat:SetNoAggroTags:": {
        "prefix": "components.combat:SetNoAggroTags",
        "body": "components.combat:SetNoAggroTags(${1:tags})",
        "description": " ※Params: \n   (tags)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.combat:ResetCooldown:": {
        "prefix": "components.combat:ResetCooldown",
        "body": "components.combat:ResetCooldown()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.combat:GetWeapon:": {
        "prefix": "components.combat:GetWeapon",
        "body": "components.combat:GetWeapon()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.combat:OnEntitySleep:": {
        "prefix": "components.combat:OnEntitySleep",
        "body": "components.combat:OnEntitySleep()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.combat:CanAttack:": {
        "prefix": "components.combat:CanAttack",
        "body": "components.combat:CanAttack(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.combat:LocomotorCanAttack:": {
        "prefix": "components.combat:LocomotorCanAttack",
        "body": "components.combat:LocomotorCanAttack(${1:reached_dest},${2:target})",
        "description": " ※Params: \n   (reached_dest)<>[] \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.combat:StartTrackingTarget:": {
        "prefix": "components.combat:StartTrackingTarget",
        "body": "components.combat:StartTrackingTarget(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.combat:GetImpactSound:": {
        "prefix": "components.combat:GetImpactSound",
        "body": "components.combat:GetImpactSound(${1:target},${2:weapon})",
        "description": " ※Params: \n   (target)<>[] \n   (weapon)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.combat:OverrideCooldown:": {
        "prefix": "components.combat:OverrideCooldown",
        "body": "components.combat:OverrideCooldown(${1:cd})",
        "description": " ※Params: \n   (cd)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.combat:InCooldown:": {
        "prefix": "components.combat:InCooldown",
        "body": "components.combat:InCooldown()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.combat:BattleCry:": {
        "prefix": "components.combat:BattleCry",
        "body": "components.combat:BattleCry()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.combat:SetDefaultDamage:": {
        "prefix": "components.combat:SetDefaultDamage",
        "body": "components.combat:SetDefaultDamage(${1:damage})",
        "description": " ※Params: \n   (damage)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.combat:GetBattleCryString:": {
        "prefix": "components.combat:GetBattleCryString",
        "body": "components.combat:GetBattleCryString(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.combat:GetLastAttackedTime:": {
        "prefix": "components.combat:GetLastAttackedTime",
        "body": "components.combat:GetLastAttackedTime()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.combat:AddNoAggroTag:": {
        "prefix": "components.combat:AddNoAggroTag",
        "body": "components.combat:AddNoAggroTag(${1:tag})",
        "description": " ※Params: \n   (tag)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.combat:EngageTarget:": {
        "prefix": "components.combat:EngageTarget",
        "body": "components.combat:EngageTarget(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.combat:StartAttack:": {
        "prefix": "components.combat:StartAttack",
        "body": "components.combat:StartAttack()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.combat:GetCooldown:": {
        "prefix": "components.combat:GetCooldown",
        "body": "components.combat:GetCooldown()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.combat:SuggestTarget:": {
        "prefix": "components.combat:SuggestTarget",
        "body": "components.combat:SuggestTarget(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.commander:StartTrackingDistance:": {
        "prefix": "components.commander:StartTrackingDistance",
        "body": "components.commander:StartTrackingDistance()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.commander:GetDebugString:": {
        "prefix": "components.commander:GetDebugString",
        "body": "components.commander:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.commander:IsSoldier:": {
        "prefix": "components.commander:IsSoldier",
        "body": "components.commander:IsSoldier(${1:ent})",
        "description": " ※Params: \n   (ent)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.commander:GetAllSoldiers:": {
        "prefix": "components.commander:GetAllSoldiers",
        "body": "components.commander:GetAllSoldiers(${1:prefab})",
        "description": " ※Params: \n   (prefab)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.commander:StopTrackingDistance:": {
        "prefix": "components.commander:StopTrackingDistance",
        "body": "components.commander:StopTrackingDistance()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.commander:SetTrackingDistance:": {
        "prefix": "components.commander:SetTrackingDistance",
        "body": "components.commander:SetTrackingDistance(${1:dist})",
        "description": " ※Params: \n   (dist)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.commander:AddSoldier:": {
        "prefix": "components.commander:AddSoldier",
        "body": "components.commander:AddSoldier(${1:ent})",
        "description": " ※Params: \n   (ent)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.commander:RemoveSoldier:": {
        "prefix": "components.commander:RemoveSoldier",
        "body": "components.commander:RemoveSoldier(${1:ent})",
        "description": " ※Params: \n   (ent)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.commander:IsAnySoldierNotAlert:": {
        "prefix": "components.commander:IsAnySoldierNotAlert",
        "body": "components.commander:IsAnySoldierNotAlert()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.commander:ShareTargetToAllSoldiers:": {
        "prefix": "components.commander:ShareTargetToAllSoldiers",
        "body": "components.commander:ShareTargetToAllSoldiers(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.commander:PushEventToAllSoldiers:": {
        "prefix": "components.commander:PushEventToAllSoldiers",
        "body": "components.commander:PushEventToAllSoldiers(${1:ev},${2:data})",
        "description": " ※Params: \n   (ev)<>[] \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.commander:AlertAllSoldiers:": {
        "prefix": "components.commander:AlertAllSoldiers",
        "body": "components.commander:AlertAllSoldiers()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.commander:DropAllSoldierTargets:": {
        "prefix": "components.commander:DropAllSoldierTargets",
        "body": "components.commander:DropAllSoldierTargets()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.commander:GetNumSoldiers:": {
        "prefix": "components.commander:GetNumSoldiers",
        "body": "components.commander:GetNumSoldiers(${1:prefab})",
        "description": " ※Params: \n   (prefab)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.commander:OnRemoveFromEntity:": {
        "prefix": "components.commander:OnRemoveFromEntity",
        "body": "components.commander:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.complexprojectile:SetHorizontalSpeed:": {
        "prefix": "components.complexprojectile:SetHorizontalSpeed",
        "body": "components.complexprojectile:SetHorizontalSpeed(${1:speed})",
        "description": " ※Params: \n   (speed)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.complexprojectile:CalculateMinimumSpeedForDistance:": {
        "prefix": "components.complexprojectile:CalculateMinimumSpeedForDistance",
        "body": "components.complexprojectile:CalculateMinimumSpeedForDistance(${1:desired_horizontal_distance})",
        "description": " ※Params: \n   (desired_horizontal_distance)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.complexprojectile:OnUpdate:": {
        "prefix": "components.complexprojectile:OnUpdate",
        "body": "components.complexprojectile:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.complexprojectile:SetLaunchOffset:": {
        "prefix": "components.complexprojectile:SetLaunchOffset",
        "body": "components.complexprojectile:SetLaunchOffset(${1:offset})",
        "description": " ※Params: \n   (offset)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.complexprojectile:Hit:": {
        "prefix": "components.complexprojectile:Hit",
        "body": "components.complexprojectile:Hit(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.complexprojectile:Cancel:": {
        "prefix": "components.complexprojectile:Cancel",
        "body": "components.complexprojectile:Cancel()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.complexprojectile:SetOnLaunch:": {
        "prefix": "components.complexprojectile:SetOnLaunch",
        "body": "components.complexprojectile:SetOnLaunch(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.complexprojectile:SetGravity:": {
        "prefix": "components.complexprojectile:SetGravity",
        "body": "components.complexprojectile:SetGravity(${1:g})",
        "description": " ※Params: \n   (g)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.complexprojectile:SetTargetOffset:": {
        "prefix": "components.complexprojectile:SetTargetOffset",
        "body": "components.complexprojectile:SetTargetOffset(${1:offset})",
        "description": " ※Params: \n   (offset)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.complexprojectile:Launch:": {
        "prefix": "components.complexprojectile:Launch",
        "body": "components.complexprojectile:Launch(${1:targetPos},${2:attacker},${3:owningweapon})",
        "description": " ※Params: \n   (targetPos)<>[] \n   (attacker)<>[] \n   (owningweapon)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.complexprojectile:GetDebugString:": {
        "prefix": "components.complexprojectile:GetDebugString",
        "body": "components.complexprojectile:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.complexprojectile:SetOnUpdate:": {
        "prefix": "components.complexprojectile:SetOnUpdate",
        "body": "components.complexprojectile:SetOnUpdate(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.complexprojectile:CalculateTrajectory:": {
        "prefix": "components.complexprojectile:CalculateTrajectory",
        "body": "components.complexprojectile:CalculateTrajectory(${1:startPos},${2:endPos},${3:speed})",
        "description": " ※Params: \n   (startPos)<>[] \n   (endPos)<>[] \n   (speed)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.complexprojectile:SetHorizontalSpeedForDistance:": {
        "prefix": "components.complexprojectile:SetHorizontalSpeedForDistance",
        "body": "components.complexprojectile:SetHorizontalSpeedForDistance(${1:desired_horizontal_distance},${2:fallback})",
        "description": " ※Params: \n   (desired_horizontal_distance)<>[] \n   (fallback)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.complexprojectile:SetOnHit:": {
        "prefix": "components.complexprojectile:SetOnHit",
        "body": "components.complexprojectile:SetOnHit(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.complexprojectile:OnRemoveFromEntity:": {
        "prefix": "components.complexprojectile:OnRemoveFromEntity",
        "body": "components.complexprojectile:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.compostingbin:GetMaterialTotal:": {
        "prefix": "components.compostingbin:GetMaterialTotal",
        "body": "components.compostingbin:GetMaterialTotal()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.compostingbin:Refresh:": {
        "prefix": "components.compostingbin:Refresh",
        "body": "components.compostingbin:Refresh(${1:cycle_completed})",
        "description": " ※Params: \n   (cycle_completed)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.compostingbin:AddMaterials:": {
        "prefix": "components.compostingbin:AddMaterials",
        "body": "components.compostingbin:AddMaterials(${1:greens},${2:browns})",
        "description": " ※Params: \n   (greens)<>[] \n   (browns)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.compostingbin:IsFull:": {
        "prefix": "components.compostingbin:IsFull",
        "body": "components.compostingbin:IsFull()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.compostingbin:IsComposting:": {
        "prefix": "components.compostingbin:IsComposting",
        "body": "components.compostingbin:IsComposting()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.compostingbin:OnLoad:": {
        "prefix": "components.compostingbin:OnLoad",
        "body": "components.compostingbin:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.compostingbin:AddCompostable:": {
        "prefix": "components.compostingbin:AddCompostable",
        "body": "components.compostingbin:AddCompostable(${1:item})",
        "description": " ※Params: \n   (item)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.compostingbin:OnSave:": {
        "prefix": "components.compostingbin:OnSave",
        "body": "components.compostingbin:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.compostingbin:OnRemoveFromEntity:": {
        "prefix": "components.compostingbin:OnRemoveFromEntity",
        "body": "components.compostingbin:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.constructionbuilder:OnFinishConstruction:": {
        "prefix": "components.constructionbuilder:OnFinishConstruction",
        "body": "components.constructionbuilder:OnFinishConstruction()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.constructionbuilder:FinishConstruction:": {
        "prefix": "components.constructionbuilder:FinishConstruction",
        "body": "components.constructionbuilder:FinishConstruction()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.constructionbuilder:StopConstruction:": {
        "prefix": "components.constructionbuilder:StopConstruction",
        "body": "components.constructionbuilder:StopConstruction()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.constructionbuilder:IsConstructingAny:": {
        "prefix": "components.constructionbuilder:IsConstructingAny",
        "body": "components.constructionbuilder:IsConstructingAny()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.constructionbuilder:OnLoad:": {
        "prefix": "components.constructionbuilder:OnLoad",
        "body": "components.constructionbuilder:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.constructionbuilder:OnSave:": {
        "prefix": "components.constructionbuilder:OnSave",
        "body": "components.constructionbuilder:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.constructionbuilder:CanStartConstruction:": {
        "prefix": "components.constructionbuilder:CanStartConstruction",
        "body": "components.constructionbuilder:CanStartConstruction()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.constructionbuilder:StartConstruction:": {
        "prefix": "components.constructionbuilder:StartConstruction",
        "body": "components.constructionbuilder:StartConstruction(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.constructionbuilder:IsConstructing:": {
        "prefix": "components.constructionbuilder:IsConstructing",
        "body": "components.constructionbuilder:IsConstructing(${1:constructioninst})",
        "description": " ※Params: \n   (constructioninst)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.constructionbuilderuidata:SetTarget:": {
        "prefix": "components.constructionbuilderuidata:SetTarget",
        "body": "components.constructionbuilderuidata:SetTarget(${1:targetinst})",
        "description": " ※Params: \n   (targetinst)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.constructionbuilderuidata:GetSlotForIngredient:": {
        "prefix": "components.constructionbuilderuidata:GetSlotForIngredient",
        "body": "components.constructionbuilderuidata:GetSlotForIngredient(${1:prefab})",
        "description": " ※Params: \n   (prefab)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.constructionbuilderuidata:GetContainer:": {
        "prefix": "components.constructionbuilderuidata:GetContainer",
        "body": "components.constructionbuilderuidata:GetContainer()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.constructionbuilderuidata:GetIngredientForSlot:": {
        "prefix": "components.constructionbuilderuidata:GetIngredientForSlot",
        "body": "components.constructionbuilderuidata:GetIngredientForSlot(${1:slot})",
        "description": " ※Params: \n   (slot)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.constructionbuilderuidata:GetTarget:": {
        "prefix": "components.constructionbuilderuidata:GetTarget",
        "body": "components.constructionbuilderuidata:GetTarget()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.constructionbuilderuidata:GetConstructionSite:": {
        "prefix": "components.constructionbuilderuidata:GetConstructionSite",
        "body": "components.constructionbuilderuidata:GetConstructionSite()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.constructionbuilderuidata:SetContainer:": {
        "prefix": "components.constructionbuilderuidata:SetContainer",
        "body": "components.constructionbuilderuidata:SetContainer(${1:containerinst})",
        "description": " ※Params: \n   (containerinst)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.constructionplans:AddTargetPrefab:": {
        "prefix": "components.constructionplans:AddTargetPrefab",
        "body": "components.constructionplans:AddTargetPrefab(${1:prefab},${2:constructionprefab})",
        "description": " ※Params: \n   (prefab)<>[] \n   (constructionprefab)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.constructionplans:RemoveTargetPrefab:": {
        "prefix": "components.constructionplans:RemoveTargetPrefab",
        "body": "components.constructionplans:RemoveTargetPrefab(${1:prefab})",
        "description": " ※Params: \n   (prefab)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.constructionplans:StartConstruction:": {
        "prefix": "components.constructionplans:StartConstruction",
        "body": "components.constructionplans:StartConstruction(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.constructionplans:OnRemoveFromEntity:": {
        "prefix": "components.constructionplans:OnRemoveFromEntity",
        "body": "components.constructionplans:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.constructionsite:GetMaterialCount:": {
        "prefix": "components.constructionsite:GetMaterialCount",
        "body": "components.constructionsite:GetMaterialCount(${1:prefab})",
        "description": " ※Params: \n   (prefab)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.constructionsite:GetSlotCount:": {
        "prefix": "components.constructionsite:GetSlotCount",
        "body": "components.constructionsite:GetSlotCount(${1:slot})",
        "description": " ※Params: \n   (slot)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.constructionsite:IsBuilder:": {
        "prefix": "components.constructionsite:IsBuilder",
        "body": "components.constructionsite:IsBuilder(${1:guy})",
        "description": " ※Params: \n   (guy)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.constructionsite:OnConstruct:": {
        "prefix": "components.constructionsite:OnConstruct",
        "body": "components.constructionsite:OnConstruct(${1:doer},${2:items})",
        "description": " ※Params: \n   (doer)<>[] \n   (items)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.constructionsite:OnLoad:": {
        "prefix": "components.constructionsite:OnLoad",
        "body": "components.constructionsite:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.constructionsite:ForceStopConstruction:": {
        "prefix": "components.constructionsite:ForceStopConstruction",
        "body": "components.constructionsite:ForceStopConstruction()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.constructionsite:IsEnabled:": {
        "prefix": "components.constructionsite:IsEnabled",
        "body": "components.constructionsite:IsEnabled()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.constructionsite:SetConstructionPrefab:": {
        "prefix": "components.constructionsite:SetConstructionPrefab",
        "body": "components.constructionsite:SetConstructionPrefab(${1:prefab})",
        "description": " ※Params: \n   (prefab)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.constructionsite:RemoveMaterial:": {
        "prefix": "components.constructionsite:RemoveMaterial",
        "body": "components.constructionsite:RemoveMaterial(${1:prefab},${2:num})",
        "description": " ※Params: \n   (prefab)<>[] \n   (num)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.constructionsite:AddMaterial:": {
        "prefix": "components.constructionsite:AddMaterial",
        "body": "components.constructionsite:AddMaterial(${1:prefab},${2:num})",
        "description": " ※Params: \n   (prefab)<>[] \n   (num)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.constructionsite:OnStopConstruction:": {
        "prefix": "components.constructionsite:OnStopConstruction",
        "body": "components.constructionsite:OnStopConstruction(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.constructionsite:HasBuilder:": {
        "prefix": "components.constructionsite:HasBuilder",
        "body": "components.constructionsite:HasBuilder()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.constructionsite:Enable:": {
        "prefix": "components.constructionsite:Enable",
        "body": "components.constructionsite:Enable()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.constructionsite:OnSave:": {
        "prefix": "components.constructionsite:OnSave",
        "body": "components.constructionsite:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.constructionsite:IsComplete:": {
        "prefix": "components.constructionsite:IsComplete",
        "body": "components.constructionsite:IsComplete()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.constructionsite:SetOnStartConstructionFn:": {
        "prefix": "components.constructionsite:SetOnStartConstructionFn",
        "body": "components.constructionsite:SetOnStartConstructionFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.constructionsite:GetDebugString:": {
        "prefix": "components.constructionsite:GetDebugString",
        "body": "components.constructionsite:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.constructionsite:SetOnStopConstructionFn:": {
        "prefix": "components.constructionsite:SetOnStopConstructionFn",
        "body": "components.constructionsite:SetOnStopConstructionFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.constructionsite:DropAllMaterials:": {
        "prefix": "components.constructionsite:DropAllMaterials",
        "body": "components.constructionsite:DropAllMaterials(${1:drop_pos})",
        "description": " ※Params: \n   (drop_pos)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.constructionsite:OnStartConstruction:": {
        "prefix": "components.constructionsite:OnStartConstruction",
        "body": "components.constructionsite:OnStartConstruction(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.constructionsite:SetOnConstructedFn:": {
        "prefix": "components.constructionsite:SetOnConstructedFn",
        "body": "components.constructionsite:SetOnConstructedFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.constructionsite:Disable:": {
        "prefix": "components.constructionsite:Disable",
        "body": "components.constructionsite:Disable()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.container:SetNumSlots:": {
        "prefix": "components.container:SetNumSlots",
        "body": "components.container:SetNumSlots(${1:numslots})",
        "description": " ※Params: \n   (numslots)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.container:GetSpecificSlotForItem:在【特定栏位指定物品】容器中寻找可放入指定物品的栏序号": {
        "prefix": "components.container:GetSpecificSlotForItem",
        "body": "components.container:GetSpecificSlotForItem(${1:item})",
        "description": " ※Params: \n   (item)<table>[要放入的物品] \n ※Returns: <number>[可放入的栏序号] \n ※Description: 在【特定栏位指定物品】容器中寻找可放入指定物品的栏序号\n ※Contributor: @Runar"
    },
    "Component.container:EnableInfiniteStackSize:启用或关闭容器无限堆叠": {
        "prefix": "components.container:EnableInfiniteStackSize",
        "body": "components.container:EnableInfiniteStackSize(${1:enable})",
        "description": " ※Params: \n   (enable)<boolean>[启用无限堆叠] \n ※Description: 启用或关闭容器无限堆叠\n ※Contributor: @Runar"
    },
    "Component.container:RemoveItemBySlot:": {
        "prefix": "components.container:RemoveItemBySlot",
        "body": "components.container:RemoveItemBySlot(${1:slot},${2:keepoverstacked})",
        "description": " ※Params: \n   (slot)<>[] \n   (keepoverstacked)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.container:DropItem:原地抛出指定物品": {
        "prefix": "components.container:DropItem",
        "body": "components.container:DropItem(${1:itemtodrop})",
        "description": " ※Params: \n   (itemtodrop)<table>[要抛出的物品] \n ※Description: 原地抛出指定物品\n ※Contributor: @Runar"
    },
    "Component.container:ReferenceAllItems:": {
        "prefix": "components.container:ReferenceAllItems",
        "body": "components.container:ReferenceAllItems()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.container:DropItemAt:指定坐标抛出指定物品": {
        "prefix": "components.container:DropItemAt",
        "body": "components.container:DropItemAt(${1:itemtodrop},${2:x},${3:y},${4:z})",
        "description": " ※Params: \n   (itemtodrop)<table>[要抛出的物品] \n   (x)<number>[] \n   (y)<number>[] \n   (z)<number>[] \n ※Description: 指定坐标抛出指定物品\n ※Contributor: @Runar"
    },
    "Component.container:RemoveItem_Internal:": {
        "prefix": "components.container:RemoveItem_Internal",
        "body": "components.container:RemoveItem_Internal(${1:item},${2:slot},${3:wholestack},${4:keepoverstacked})",
        "description": " ※Params: \n   (item)<>[] \n   (slot)<>[] \n   (wholestack)<>[] \n   (keepoverstacked)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.container:MoveItemFromAllOfSlot:": {
        "prefix": "components.container:MoveItemFromAllOfSlot",
        "body": "components.container:MoveItemFromAllOfSlot(${1:slot},${2:container},${3:opener})",
        "description": " ※Params: \n   (slot)<>[] \n   (container)<>[] \n   (opener)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.container:SwapOneOfActiveItemWithSlot:": {
        "prefix": "components.container:SwapOneOfActiveItemWithSlot",
        "body": "components.container:SwapOneOfActiveItemWithSlot(${1:slot},${2:opener})",
        "description": " ※Params: \n   (slot)<>[] \n   (opener)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.container:AcceptsStacks:容器是否接受放入物品产生堆叠": {
        "prefix": "components.container:AcceptsStacks",
        "body": "components.container:AcceptsStacks()",
        "description": "\n ※Returns: <boolean>[接受物品堆叠] \n ※Description: 容器是否接受放入物品产生堆叠\n ※Contributor: @Runar"
    },
    "Component.container:AddOneOfActiveItemToSlot:": {
        "prefix": "components.container:AddOneOfActiveItemToSlot",
        "body": "components.container:AddOneOfActiveItemToSlot(${1:slot},${2:opener})",
        "description": " ※Params: \n   (slot)<>[] \n   (opener)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.container:RemoveAllItems:移除容器内所有物品": {
        "prefix": "components.container:RemoveAllItems",
        "body": "components.container:RemoveAllItems()",
        "description": "\n ※Returns: <table>[容器内所有物品] \n ※Description: 移除容器内所有物品\n ※Contributor: @Runar"
    },
    "Component.container:GetAllItems:获取容器内所有物品的表": {
        "prefix": "components.container:GetAllItems",
        "body": "components.container:GetAllItems()",
        "description": "\n ※Returns: <table>[容器内所有物品] \n ※Description: 获取容器内所有物品的表\n ※Contributor: @Runar"
    },
    "Component.container:AddAllOfActiveItemToSlot:": {
        "prefix": "components.container:AddAllOfActiveItemToSlot",
        "body": "components.container:AddAllOfActiveItemToSlot(${1:slot},${2:opener})",
        "description": " ※Params: \n   (slot)<>[] \n   (opener)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.container:GetItemByName:获取容器内指名物品列表": {
        "prefix": "components.container:GetItemByName",
        "body": "components.container:GetItemByName(${1:item},${2:amount})",
        "description": " ※Params: \n   (item)<string>[物品prefab名] \n   (amount)<number>[所需库存数量] \n ※Returns: <table>[物品inst为键, 值为获取数量的表] \n ※Description: 获取容器内指名物品列表\n ※Contributor: @Runar"
    },
    "Component.container:SwapActiveItemWithSlot:": {
        "prefix": "components.container:SwapActiveItemWithSlot",
        "body": "components.container:SwapActiveItemWithSlot(${1:slot},${2:opener})",
        "description": " ※Params: \n   (slot)<>[] \n   (opener)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.container:RemoveItem:": {
        "prefix": "components.container:RemoveItem",
        "body": "components.container:RemoveItem(${1:item},${2:wholestack},${3:_checkallcontainers_},${4:keepoverstacked})",
        "description": " ※Params: \n   (item)<>[] \n   (wholestack)<>[] \n   (_checkallcontainers_)<>[] \n   (keepoverstacked)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.container:DropOverstackedExcess:将超过最大堆叠数量的超出部分丢弃": {
        "prefix": "components.container:DropOverstackedExcess",
        "body": "components.container:DropOverstackedExcess(${1:item})",
        "description": " ※Params: \n   (item)<table>[指定物品] \n ※Description: 将超过最大堆叠数量的超出部分丢弃\n ※Contributor: @lan"
    },
    "Component.container:HasItemThatMatches:容器内是否有指定数量的指定物品及其数目": {
        "prefix": "components.container:HasItemThatMatches",
        "body": "components.container:HasItemThatMatches(${1:fn},${2:amount})",
        "description": " ※Params: \n   (fn)<function>[物品测试函数]\n      {Params:\n         (item)<table>[物品] \n      Returns:\n         <boolean>[符合条件]} \n   (amount)<number>[最低累计数量] \n ※Returns: <boolean>[容器内有指定数量的指定物品] <number>[库存数量] \n ※Description: 容器内是否有指定数量的指定物品及其数目\n ※Contributor: @Runar"
    },
    "Component.container:PutAllOfActiveItemInSlot:": {
        "prefix": "components.container:PutAllOfActiveItemInSlot",
        "body": "components.container:PutAllOfActiveItemInSlot(${1:slot},${2:opener})",
        "description": " ※Params: \n   (slot)<>[] \n   (opener)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.container:IsFull:返回容器是否为满": {
        "prefix": "components.container:IsFull",
        "body": "components.container:IsFull()",
        "description": "\n ※Returns: <boolean>[容器为满] \n ※Description: 返回容器是否为满\n ※Contributor: @Runar"
    },
    "Component.container:DestroyContentsConditionally:销毁容器内满足条件的所有物品": {
        "prefix": "components.container:DestroyContentsConditionally",
        "body": "components.container:DestroyContentsConditionally(${1:filterfn},${2:onpredestroyitemcallbackfn})",
        "description": " ※Params: \n   (filterfn)<function|nil>[销毁条件]\n      {Params:\n         (inst)<table>[容器] \n         (item)<table>[要测试的物品] \n      Returns:} \n   (onpredestroyitemcallbackfn)<function|nil>[物品销毁预回调函数]\n      {Params:\n         (inst)<table>[容器] \n         (item)<table>[要销毁的物品] \n      Returns:} \n ※Description: 销毁容器内满足条件的所有物品\n ※Contributor: @Runar"
    },
    "Component.container:PutOneOfActiveItemInSlot:": {
        "prefix": "components.container:PutOneOfActiveItemInSlot",
        "body": "components.container:PutOneOfActiveItemInSlot(${1:slot},${2:opener})",
        "description": " ※Params: \n   (slot)<>[] \n   (opener)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.container:IsEmpty:返回容器是否为空": {
        "prefix": "components.container:IsEmpty",
        "body": "components.container:IsEmpty()",
        "description": "\n ※Returns: <boolean>[容器为空] \n ※Description: 返回容器是否为空\n ※Contributor: @Runar"
    },
    "Component.container:TakeActiveItemFromAllOfSlot:": {
        "prefix": "components.container:TakeActiveItemFromAllOfSlot",
        "body": "components.container:TakeActiveItemFromAllOfSlot(${1:slot},${2:opener})",
        "description": " ※Params: \n   (slot)<>[] \n   (opener)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.container:CanTakeItemInSlot:检测物品能否放入指定序号的栏位": {
        "prefix": "components.container:CanTakeItemInSlot",
        "body": "components.container:CanTakeItemInSlot(${1:item},${2:slot})",
        "description": " ※Params: \n   (item)<table>[要放入的物品] \n   (slot)<number>[栏序号] \n ※Returns: <boolean>[可放入] \n ※Description: 检测物品能否放入指定序号的栏位\n ※Contributor: @Runar"
    },
    "Component.container:IsOpenedBy:容器是否由指定目标打开": {
        "prefix": "components.container:IsOpenedBy",
        "body": "components.container:IsOpenedBy(${1:guy})",
        "description": " ※Params: \n   (guy)<table>[指定目标] \n ※Returns: <boolean>[容器由指定目标打开] \n ※Description: 容器是否由指定目标打开\n ※Contributor: @Runar"
    },
    "Component.container:CanOpen:容器可被打开": {
        "prefix": "components.container:CanOpen",
        "body": "components.container:CanOpen()",
        "description": "\n ※Returns: <boolean>[可打开] \n ※Description: 容器可被打开\n ※Contributor: @Runar"
    },
    "Component.container:WidgetSetup:绑定容器UI": {
        "prefix": "components.container:WidgetSetup",
        "body": "components.container:WidgetSetup(${1:prefab},${2:data})",
        "description": " ※Params: \n   (prefab)<string>[需要绑定的容器UI] \n   (data)<table>[不用填(容器UI信息,不填则在params[prefab]里找)] \n ※Description: 绑定容器UI\n ※Contributor: @lan"
    },
    "Component.container:IsOpenedByOthers:容器是否由非指定目标打开": {
        "prefix": "components.container:IsOpenedByOthers",
        "body": "components.container:IsOpenedByOthers(${1:guy})",
        "description": " ※Params: \n   (guy)<table>[指定目标] \n ※Returns: <boolean>[容器由非指定目标打开] \n ※Description: 容器是否由非指定目标打开\n ※Contributor: @Runar"
    },
    "Component.container:OnLoad:": {
        "prefix": "components.container:OnLoad",
        "body": "components.container:OnLoad(${1:data},${2:newents})",
        "description": " ※Params: \n   (data)<>[] \n   (newents)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.container:FindItem:寻找容器内满足条件的一格物品": {
        "prefix": "components.container:FindItem",
        "body": "components.container:FindItem(${1:fn})",
        "description": " ※Params: \n   (fn)<function>[测试函数]\n      {Params:\n         (item)<table>[容器内物品] \n      Returns:\n         <boolean>[满足条件]} \n ※Returns: <table>[满足条件的第一个物品] \n ※Description: 寻找容器内满足条件的一格物品\n ※Contributor: @Runar"
    },
    "Component.container:OnSave:": {
        "prefix": "components.container:OnSave",
        "body": "components.container:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.container:CanAcceptCount:容器可以从某个物品堆中接收多少数量": {
        "prefix": "components.container:CanAcceptCount",
        "body": "components.container:CanAcceptCount(${1:item},${2:maxcount})",
        "description": " ※Params: \n   (item)<table>[要放入的物品] \n   (maxcount)<number|nil>[最大接受数量] \n ※Returns: <number>[接受数量] \n ※Description: 容器可以从某个物品堆中接收多少数量\n ※Contributor: @Runar"
    },
    "Component.container:DropEverythingUpToMaxStacks:从容器中丢弃物品直到达到指定的最大堆数": {
        "prefix": "components.container:DropEverythingUpToMaxStacks",
        "body": "components.container:DropEverythingUpToMaxStacks(${1:maxstacks},${2:drop_pos})",
        "description": " ※Params: \n   (maxstacks)<number>[最大堆数] \n   (drop_pos)<V3>[掉落位置] \n ※Description: 从容器中丢弃物品直到达到指定的最大堆数\n ※Contributor: @lan"
    },
    "Component.container:ShouldPrioritizeContainer:": {
        "prefix": "components.container:ShouldPrioritizeContainer",
        "body": "components.container:ShouldPrioritizeContainer(${1:item})",
        "description": " ※Params: \n   (item)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.container:GiveItem:把指定物品添加到容器中": {
        "prefix": "components.container:GiveItem",
        "body": "components.container:GiveItem(${1:item},${2:slot},${3:src_pos},${4:drop_on_fail})",
        "description": " ※Params: \n   (item)<table>[要放入的物品] \n   (slot)<number|nil>[栏序号] \n   (src_pos)<table|nil>[物品来源坐标] \n   (drop_on_fail)<boolean|nil>[不为false时失败掉落] \n ※Returns: <boolean>[成功] \n ※Description: 把指定物品添加到容器中\n ※Contributor: @Runar"
    },
    "Component.container:ConsumeByName:按数量扣除指名物品": {
        "prefix": "components.container:ConsumeByName",
        "body": "components.container:ConsumeByName(${1:item},${2:amount})",
        "description": " ※Params: \n   (item)<string>[物品prefab名] \n   (amount)<number>[扣除数量] \n ※Description: 按数量扣除指名物品\n ※Contributor: @Runar"
    },
    "Component.container:GetItemsWithTag:获取容器内指定标签的物品列表": {
        "prefix": "components.container:GetItemsWithTag",
        "body": "components.container:GetItemsWithTag(${1:tag})",
        "description": " ※Params: \n   (tag)<string>[标签] \n ※Returns: <table>[符合条件的物品列表] \n ※Description: 获取容器内指定标签的物品列表\n ※Contributor: @Runar"
    },
    "Component.container:HasItemWithTag:容器内是否有指定数量的指定物品及其数目": {
        "prefix": "components.container:HasItemWithTag",
        "body": "components.container:HasItemWithTag(${1:tag},${2:amount})",
        "description": " ※Params: \n   (tag)<string>[标签] \n   (amount)<number>[最低累计数量] \n ※Returns: <boolean>[容器内有指定数量的指定物品] <number>[库存数量] \n ※Description: 容器内是否有指定数量的指定物品及其数目\n ※Contributor: @Runar"
    },
    "Component.container:TakeActiveItemFromHalfOfSlot:": {
        "prefix": "components.container:TakeActiveItemFromHalfOfSlot",
        "body": "components.container:TakeActiveItemFromHalfOfSlot(${1:slot},${2:opener})",
        "description": " ※Params: \n   (slot)<>[] \n   (opener)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.container:GetWidget:获取容器UI": {
        "prefix": "components.container:GetWidget",
        "body": "components.container:GetWidget()",
        "description": "\n ※Returns: <table>[容器UI] \n ※Description: 获取容器UI\n ※Contributor: @lan"
    },
    "Component.container:Has:容器内是否有指定数量的指定物品及其数目": {
        "prefix": "components.container:Has",
        "body": "components.container:Has(${1:item},${2:amount},${3:iscrafting})",
        "description": " ※Params: \n   (item)<string>[物品prefab名] \n   (amount)<number>[最低数量] \n   (iscrafting)<boolean|nil>[区分标签nocrafting] \n ※Returns: <boolean>[容器内有指定数量的指定物品] <number>[库存数量] \n ※Description: 容器内是否有指定数量的指定物品及其数目\n ※Contributor: @Runar"
    },
    "Component.container:NumItems:返回容器中装有物品的格子数": {
        "prefix": "components.container:NumItems",
        "body": "components.container:NumItems()",
        "description": "\n ※Returns: <number>[容器中装有物品的格子数] \n ※Description: 返回容器中装有物品的格子数\n ※Contributor: @Runar"
    },
    "Component.container:ForEachItem:对容器内所有物品执行fn, 传递可变参数": {
        "prefix": "components.container:ForEachItem",
        "body": "components.container:ForEachItem(${1:fn},${2:...})",
        "description": " ※Params: \n   (fn)<function>[操作函数fn(item, ...)]\n      {Params:\n         (item)<table>[容器内物品] \n         (...)<any|nil>[可变参数] \n      Returns:} \n   (...)<any|nil>[可变参数] \n ※Description: 对容器内所有物品执行fn, 传递可变参数\n ※Contributor: @Runar"
    },
    "Component.container:IsHolding:容器是否持有指定物品": {
        "prefix": "components.container:IsHolding",
        "body": "components.container:IsHolding(${1:item},${2:checkcontainer})",
        "description": " ※Params: \n   (item)<table>[指定物品] \n   (checkcontainer)<boolean>[检测容器内容器] \n ※Returns: <boolean>[容器持有指定物品] \n ※Description: 容器是否持有指定物品\n ※Contributor: @Runar"
    },
    "Component.container:DropEverything:丢出所有物品": {
        "prefix": "components.container:DropEverything",
        "body": "components.container:DropEverything(${1:drop_pos},${2:keepoverstacked})",
        "description": " ※Params: \n   (drop_pos)<V3>[掉落位置] \n   (keepoverstacked)<boolean>[保持物品堆叠状态] \n ※Description: 丢出所有物品\n ※Contributor: @lan(多在容器被摧毁时调用)"
    },
    "Component.container:FindItems:寻找容器内满足条件的所有物品": {
        "prefix": "components.container:FindItems",
        "body": "components.container:FindItems(${1:fn})",
        "description": " ※Params: \n   (fn)<function>[测试函数]\n      {Params:\n         (item)<table>[容器内物品] \n      Returns:\n         <boolean>[满足条件]} \n ※Returns: <table>[满足条件的所有物品] \n ※Description: 寻找容器内满足条件的所有物品\n ※Contributor: @Runar"
    },
    "Component.container:GetOpeners:获取容器打开者列表": {
        "prefix": "components.container:GetOpeners",
        "body": "components.container:GetOpeners()",
        "description": "\n ※Returns: <table>[打开者列表] \n ※Description: 获取容器打开者列表\n ※Contributor: @Runar"
    },
    "Component.container:GetNumSlots:": {
        "prefix": "components.container:GetNumSlots",
        "body": "components.container:GetNumSlots()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.container:IsOpen:容器是否打开": {
        "prefix": "components.container:IsOpen",
        "body": "components.container:IsOpen()",
        "description": "\n ※Returns: <boolean>[容器打开中] \n ※Description: 容器是否打开\n ※Contributor: @Runar"
    },
    "Component.container:Open:为doer打开容器": {
        "prefix": "components.container:Open",
        "body": "components.container:Open(${1:doer})",
        "description": " ※Params: \n   (doer)<table>[执行者] \n ※Description: 为doer打开容器\n ※Contributor: @Runar"
    },
    "Component.container:Close:由doer关闭容器": {
        "prefix": "components.container:Close",
        "body": "components.container:Close(${1:doer})",
        "description": " ※Params: \n   (doer)<table>[执行者] \n ※Description: 由doer关闭容器\n ※Contributor: @Runar"
    },
    "Component.container:DropEverythingWithTag:丢出所有具有指定tag的物品": {
        "prefix": "components.container:DropEverythingWithTag",
        "body": "components.container:DropEverythingWithTag(${1:tag},${2:drop_pos},${3:keepoverstacked})",
        "description": " ※Params: \n   (tag)<string>[物品拥有的tag] \n   (drop_pos)<V3>[掉落位置] \n   (keepoverstacked)<boolean>[保持物品堆叠状态] \n ※Description: 丢出所有具有指定tag的物品\n ※Contributor: @lan"
    },
    "Component.container:IsSideWidget:容器是否为侧边栏容器": {
        "prefix": "components.container:IsSideWidget",
        "body": "components.container:IsSideWidget()",
        "description": "\n ※Returns: <boolean>[是侧边栏] \n ※Description: 容器是否为侧边栏容器\n ※Contributor: @Runar"
    },
    "Component.container:GetItemSlot:获取指定物品所在的栏号": {
        "prefix": "components.container:GetItemSlot",
        "body": "components.container:GetItemSlot(${1:item})",
        "description": " ※Params: \n   (item)<table>[指定物品] \n ※Returns: <number>[栏序号] \n ※Description: 获取指定物品所在的栏号\n ※Contributor: @Runar"
    },
    "Component.container:DestroyContents:无条件销毁容器内所有物品": {
        "prefix": "components.container:DestroyContents",
        "body": "components.container:DestroyContents(${1:onpredestroyitemcallbackfn})",
        "description": " ※Params: \n   (onpredestroyitemcallbackfn)<function|nil>[物品销毁预回调函数]\n      {Params:\n         (inst)<table>[容器] \n         (item)<table>[要销毁的物品] \n      Returns:} \n ※Description: 无条件销毁容器内所有物品\n ※Contributor: @Runar"
    },
    "Component.container:GetItemInSlot:根据栏号获取物品": {
        "prefix": "components.container:GetItemInSlot",
        "body": "components.container:GetItemInSlot(${1:slot})",
        "description": " ※Params: \n   (slot)<number>[栏序号] \n ※Returns: <table>[物品] \n ※Description: 根据栏号获取物品\n ※Contributor: @Runar"
    },
    "Component.container:MoveItemFromHalfOfSlot:": {
        "prefix": "components.container:MoveItemFromHalfOfSlot",
        "body": "components.container:MoveItemFromHalfOfSlot(${1:slot},${2:container},${3:opener})",
        "description": " ※Params: \n   (slot)<>[] \n   (container)<>[] \n   (opener)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.container:DropItemBySlot:": {
        "prefix": "components.container:DropItemBySlot",
        "body": "components.container:DropItemBySlot(${1:slot},${2:drop_pos},${3:keepoverstacked})",
        "description": " ※Params: \n   (slot)<>[] \n   (drop_pos)<>[] \n   (keepoverstacked)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.container:OnUpdate:": {
        "prefix": "components.container:OnUpdate",
        "body": "components.container:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.cookable:Cook:": {
        "prefix": "components.cookable:Cook",
        "body": "components.cookable:Cook(${1:cooker},${2:chef})",
        "description": " ※Params: \n   (cooker)<>[] \n   (chef)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.cookable:SetOnCookedFn:": {
        "prefix": "components.cookable:SetOnCookedFn",
        "body": "components.cookable:SetOnCookedFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.cookable:OnRemoveFromEntity:": {
        "prefix": "components.cookable:OnRemoveFromEntity",
        "body": "components.cookable:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.cookbookupdater:LearnRecipe:": {
        "prefix": "components.cookbookupdater:LearnRecipe",
        "body": "components.cookbookupdater:LearnRecipe(${1:product},${2:ingredients})",
        "description": " ※Params: \n   (product)<>[] \n   (ingredients)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.cookbookupdater:LearnFoodStats:": {
        "prefix": "components.cookbookupdater:LearnFoodStats",
        "body": "components.cookbookupdater:LearnFoodStats(${1:product})",
        "description": " ※Params: \n   (product)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.cooker:CanCook:": {
        "prefix": "components.cooker:CanCook",
        "body": "components.cooker:CanCook(${1:item},${2:chef})",
        "description": " ※Params: \n   (item)<>[] \n   (chef)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.cooker:CookItem:": {
        "prefix": "components.cooker:CookItem",
        "body": "components.cooker:CookItem(${1:item},${2:chef})",
        "description": " ※Params: \n   (item)<>[] \n   (chef)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.cooker:OnRemoveFromEntity:": {
        "prefix": "components.cooker:OnRemoveFromEntity",
        "body": "components.cooker:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.cookiecutterdrill:ResumeDrilling:": {
        "prefix": "components.cookiecutterdrill:ResumeDrilling",
        "body": "components.cookiecutterdrill:ResumeDrilling()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.cookiecutterdrill:ResetDrilling:": {
        "prefix": "components.cookiecutterdrill:ResetDrilling",
        "body": "components.cookiecutterdrill:ResetDrilling()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.cookiecutterdrill:GetIsDoneDrilling:": {
        "prefix": "components.cookiecutterdrill:GetIsDoneDrilling",
        "body": "components.cookiecutterdrill:GetIsDoneDrilling()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.cookiecutterdrill:FinishDrilling:": {
        "prefix": "components.cookiecutterdrill:FinishDrilling",
        "body": "components.cookiecutterdrill:FinishDrilling()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.cookiecutterdrill:OnEntitySleep:": {
        "prefix": "components.cookiecutterdrill:OnEntitySleep",
        "body": "components.cookiecutterdrill:OnEntitySleep()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.cookiecutterdrill:PauseDrilling:": {
        "prefix": "components.cookiecutterdrill:PauseDrilling",
        "body": "components.cookiecutterdrill:PauseDrilling()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.cookiecutterdrill:OnUpdate:": {
        "prefix": "components.cookiecutterdrill:OnUpdate",
        "body": "components.cookiecutterdrill:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.cooldown:GetTimeToCharged:": {
        "prefix": "components.cooldown:GetTimeToCharged",
        "body": "components.cooldown:GetTimeToCharged()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.cooldown:IsCharged:": {
        "prefix": "components.cooldown:IsCharged",
        "body": "components.cooldown:IsCharged()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.cooldown:OnLoad:": {
        "prefix": "components.cooldown:OnLoad",
        "body": "components.cooldown:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.cooldown:LongUpdate:": {
        "prefix": "components.cooldown:LongUpdate",
        "body": "components.cooldown:LongUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.cooldown:GetDebugString:": {
        "prefix": "components.cooldown:GetDebugString",
        "body": "components.cooldown:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.cooldown:FinishCharging:": {
        "prefix": "components.cooldown:FinishCharging",
        "body": "components.cooldown:FinishCharging()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.cooldown:IsCharging:": {
        "prefix": "components.cooldown:IsCharging",
        "body": "components.cooldown:IsCharging()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.cooldown:StartCharging:": {
        "prefix": "components.cooldown:StartCharging",
        "body": "components.cooldown:StartCharging(${1:time})",
        "description": " ※Params: \n   (time)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.cooldown:OnSave:": {
        "prefix": "components.cooldown:OnSave",
        "body": "components.cooldown:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.cooldown:OnRemoveFromEntity:": {
        "prefix": "components.cooldown:OnRemoveFromEntity",
        "body": "components.cooldown:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.craftingstation:ForgetAllItems:": {
        "prefix": "components.craftingstation:ForgetAllItems",
        "body": "components.craftingstation:ForgetAllItems()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.craftingstation:OnLoad:": {
        "prefix": "components.craftingstation:OnLoad",
        "body": "components.craftingstation:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.craftingstation:KnowsItem:": {
        "prefix": "components.craftingstation:KnowsItem",
        "body": "components.craftingstation:KnowsItem(${1:itemname})",
        "description": " ※Params: \n   (itemname)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.craftingstation:GetItems:": {
        "prefix": "components.craftingstation:GetItems",
        "body": "components.craftingstation:GetItems()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.craftingstation:LearnItem:": {
        "prefix": "components.craftingstation:LearnItem",
        "body": "components.craftingstation:LearnItem(${1:itemname},${2:recipetouse})",
        "description": " ※Params: \n   (itemname)<>[] \n   (recipetouse)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.craftingstation:ForgetItem:": {
        "prefix": "components.craftingstation:ForgetItem",
        "body": "components.craftingstation:ForgetItem(${1:itemname})",
        "description": " ※Params: \n   (itemname)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.craftingstation:OnSave:": {
        "prefix": "components.craftingstation:OnSave",
        "body": "components.craftingstation:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.craftingstation:GetRecipes:": {
        "prefix": "components.craftingstation:GetRecipes",
        "body": "components.craftingstation:GetRecipes()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.crewmember:Leave:": {
        "prefix": "components.crewmember:Leave",
        "body": "components.crewmember:Leave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.crewmember:SetBoat:": {
        "prefix": "components.crewmember:SetBoat",
        "body": "components.crewmember:SetBoat(${1:boat})",
        "description": " ※Params: \n   (boat)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.crewmember:Shouldrow:": {
        "prefix": "components.crewmember:Shouldrow",
        "body": "components.crewmember:Shouldrow()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.crewmember:OnLeftCrew:": {
        "prefix": "components.crewmember:OnLeftCrew",
        "body": "components.crewmember:OnLeftCrew()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.crewmember:Row:": {
        "prefix": "components.crewmember:Row",
        "body": "components.crewmember:Row()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.crewmember:GetDebugString:": {
        "prefix": "components.crewmember:GetDebugString",
        "body": "components.crewmember:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.crewmember:GetBoat:": {
        "prefix": "components.crewmember:GetBoat",
        "body": "components.crewmember:GetBoat()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.crewmember:Enable:": {
        "prefix": "components.crewmember:Enable",
        "body": "components.crewmember:Enable(${1:enabled})",
        "description": " ※Params: \n   (enabled)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.crewmember:OnRemoveFromEntity:": {
        "prefix": "components.crewmember:OnRemoveFromEntity",
        "body": "components.crewmember:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.crittertraits:IsDominantTrait:": {
        "prefix": "components.crittertraits:IsDominantTrait",
        "body": "components.crittertraits:IsDominantTrait(${1:trait})",
        "description": " ※Params: \n   (trait)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.crittertraits:SetDominantTrait:": {
        "prefix": "components.crittertraits:SetDominantTrait",
        "body": "components.crittertraits:SetDominantTrait(${1:trait})",
        "description": " ※Params: \n   (trait)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.crittertraits:OnLoad:": {
        "prefix": "components.crittertraits:OnLoad",
        "body": "components.crittertraits:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.crittertraits:StartTracking:": {
        "prefix": "components.crittertraits:StartTracking",
        "body": "components.crittertraits:StartTracking()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.crittertraits:RefreshDominantTrait:": {
        "prefix": "components.crittertraits:RefreshDominantTrait",
        "body": "components.crittertraits:RefreshDominantTrait()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.crittertraits:DecayTraits:": {
        "prefix": "components.crittertraits:DecayTraits",
        "body": "components.crittertraits:DecayTraits()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.crittertraits:OnPet:": {
        "prefix": "components.crittertraits:OnPet",
        "body": "components.crittertraits:OnPet(${1:petter})",
        "description": " ※Params: \n   (petter)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.crittertraits:GetDebugString:": {
        "prefix": "components.crittertraits:GetDebugString",
        "body": "components.crittertraits:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.crittertraits:OnSave:": {
        "prefix": "components.crittertraits:OnSave",
        "body": "components.crittertraits:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.crittertraits:IncTracker:": {
        "prefix": "components.crittertraits:IncTracker",
        "body": "components.crittertraits:IncTracker(${1:name},${2:multiplier})",
        "description": " ※Params: \n   (name)<>[] \n   (multiplier)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.crop:DoGrow:": {
        "prefix": "components.crop:DoGrow",
        "body": "components.crop:DoGrow(${1:dt},${2:nowither})",
        "description": " ※Params: \n   (dt)<>[] \n   (nowither)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.crop:StartGrowing:": {
        "prefix": "components.crop:StartGrowing",
        "body": "components.crop:StartGrowing(${1:prod},${2:grow_time},${3:grower},${4:percent})",
        "description": " ※Params: \n   (prod)<>[] \n   (grow_time)<>[] \n   (grower)<>[] \n   (percent)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.crop:OnLoad:": {
        "prefix": "components.crop:OnLoad",
        "body": "components.crop:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.crop:SetOnMatureFn:": {
        "prefix": "components.crop:SetOnMatureFn",
        "body": "components.crop:SetOnMatureFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.crop:IsReadyForHarvest:": {
        "prefix": "components.crop:IsReadyForHarvest",
        "body": "components.crop:IsReadyForHarvest()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.crop:OnRemoveFromEntity:": {
        "prefix": "components.crop:OnRemoveFromEntity",
        "body": "components.crop:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.crop:LongUpdate:": {
        "prefix": "components.crop:LongUpdate",
        "body": "components.crop:LongUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.crop:MakeWithered:": {
        "prefix": "components.crop:MakeWithered",
        "body": "components.crop:MakeWithered()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.crop:Resume:": {
        "prefix": "components.crop:Resume",
        "body": "components.crop:Resume()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.crop:Harvest:": {
        "prefix": "components.crop:Harvest",
        "body": "components.crop:Harvest(${1:harvester})",
        "description": " ※Params: \n   (harvester)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.crop:Fertilize:": {
        "prefix": "components.crop:Fertilize",
        "body": "components.crop:Fertilize(${1:fertilizer},${2:doer})",
        "description": " ※Params: \n   (fertilizer)<>[] \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.crop:GetWorldGrowthRateMultiplier:": {
        "prefix": "components.crop:GetWorldGrowthRateMultiplier",
        "body": "components.crop:GetWorldGrowthRateMultiplier()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.crop:GetDebugString:": {
        "prefix": "components.crop:GetDebugString",
        "body": "components.crop:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.crop:Mature:": {
        "prefix": "components.crop:Mature",
        "body": "components.crop:Mature()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.crop:LoadPostPass:": {
        "prefix": "components.crop:LoadPostPass",
        "body": "components.crop:LoadPostPass()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.crop:SetOnWitheredFn:": {
        "prefix": "components.crop:SetOnWitheredFn",
        "body": "components.crop:SetOnWitheredFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.crop:OnSave:": {
        "prefix": "components.crop:OnSave",
        "body": "components.crop:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.crop:SetOnHarvestFn:": {
        "prefix": "components.crop:SetOnHarvestFn",
        "body": "components.crop:SetOnHarvestFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.cursable:IsCursable:": {
        "prefix": "components.cursable:IsCursable",
        "body": "components.cursable:IsCursable(${1:item})",
        "description": " ※Params: \n   (item)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.cursable:OnLoad:": {
        "prefix": "components.cursable:OnLoad",
        "body": "components.cursable:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.cursable:ApplyCurse:": {
        "prefix": "components.cursable:ApplyCurse",
        "body": "components.cursable:ApplyCurse(${1:item},${2:curse})",
        "description": " ※Params: \n   (item)<>[] \n   (curse)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.cursable:OnSave:": {
        "prefix": "components.cursable:OnSave",
        "body": "components.cursable:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.cursable:RemoveCurse:": {
        "prefix": "components.cursable:RemoveCurse",
        "body": "components.cursable:RemoveCurse(${1:curse},${2:numofitems},${3:dropitems})",
        "description": " ※Params: \n   (curse)<>[] \n   (numofitems)<>[] \n   (dropitems)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.cursable:ForceOntoOwner:": {
        "prefix": "components.cursable:ForceOntoOwner",
        "body": "components.cursable:ForceOntoOwner(${1:item})",
        "description": " ※Params: \n   (item)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.cursable:Died:": {
        "prefix": "components.cursable:Died",
        "body": "components.cursable:Died()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.curseditem:CheckForOwner:": {
        "prefix": "components.curseditem:CheckForOwner",
        "body": "components.curseditem:CheckForOwner()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.curseditem:Given:": {
        "prefix": "components.curseditem:Given",
        "body": "components.curseditem:Given(${1:item},${2:data})",
        "description": " ※Params: \n   (item)<>[] \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.curseditem:OnUpdate:": {
        "prefix": "components.curseditem:OnUpdate",
        "body": "components.curseditem:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.curseditem:lookforplayer:": {
        "prefix": "components.curseditem:lookforplayer",
        "body": "components.curseditem:lookforplayer()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.curseditem:checkplayersinventoryforspace:": {
        "prefix": "components.curseditem:checkplayersinventoryforspace",
        "body": "components.curseditem:checkplayersinventoryforspace(${1:player})",
        "description": " ※Params: \n   (player)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.custombuildmanager:refreshart:": {
        "prefix": "components.custombuildmanager:refreshart",
        "body": "components.custombuildmanager:refreshart()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.custombuildmanager:SetGroups:": {
        "prefix": "components.custombuildmanager:SetGroups",
        "body": "components.custombuildmanager:SetGroups(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.custombuildmanager:ChangeGroup:": {
        "prefix": "components.custombuildmanager:ChangeGroup",
        "body": "components.custombuildmanager:ChangeGroup(${1:group},${2:build})",
        "description": " ※Params: \n   (group)<>[] \n   (build)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.custombuildmanager:SetCanSwapSymbol:": {
        "prefix": "components.custombuildmanager:SetCanSwapSymbol",
        "body": "components.custombuildmanager:SetCanSwapSymbol(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.custombuildmanager:OnSave:": {
        "prefix": "components.custombuildmanager:OnSave",
        "body": "components.custombuildmanager:OnSave(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.custombuildmanager:OnLoad:": {
        "prefix": "components.custombuildmanager:OnLoad",
        "body": "components.custombuildmanager:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.cyclable:SetOnCycleFn:": {
        "prefix": "components.cyclable:SetOnCycleFn",
        "body": "components.cyclable:SetOnCycleFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.cyclable:SetStep:": {
        "prefix": "components.cyclable:SetStep",
        "body": "components.cyclable:SetStep(${1:step},${2:doer},${3:ignore_callback})",
        "description": " ※Params: \n   (step)<>[] \n   (doer)<>[] \n   (ignore_callback)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.cyclable:Cycle:": {
        "prefix": "components.cyclable:Cycle",
        "body": "components.cyclable:Cycle(${1:doer},${2:negative})",
        "description": " ※Params: \n   (doer)<>[] \n   (negative)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.cyclable:OnSave:": {
        "prefix": "components.cyclable:OnSave",
        "body": "components.cyclable:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.cyclable:OnLoad:": {
        "prefix": "components.cyclable:OnLoad",
        "body": "components.cyclable:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.damagereflect:SetReflectDamageFn:": {
        "prefix": "components.damagereflect:SetReflectDamageFn",
        "body": "components.damagereflect:SetReflectDamageFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.damagereflect:GetReflectedDamage:": {
        "prefix": "components.damagereflect:GetReflectedDamage",
        "body": "components.damagereflect:GetReflectedDamage(${1:attacker},${2:damage},${3:weapon},${4:stimuli},${5:spdamage})",
        "description": " ※Params: \n   (attacker)<>[] \n   (damage)<>[] \n   (weapon)<>[] \n   (stimuli)<>[] \n   (spdamage)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.damagereflect:SetDefaultDamage:": {
        "prefix": "components.damagereflect:SetDefaultDamage",
        "body": "components.damagereflect:SetDefaultDamage(${1:value})",
        "description": " ※Params: \n   (value)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.damagetracker:OnHealthDelta:": {
        "prefix": "components.damagetracker:OnHealthDelta",
        "body": "components.damagetracker:OnHealthDelta(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.damagetracker:Start:": {
        "prefix": "components.damagetracker:Start",
        "body": "components.damagetracker:Start()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.damagetracker:Stop:": {
        "prefix": "components.damagetracker:Stop",
        "body": "components.damagetracker:Stop()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.damagetypebonus:GetBonus:": {
        "prefix": "components.damagetypebonus:GetBonus",
        "body": "components.damagetypebonus:GetBonus(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.damagetypebonus:GetDebugString:": {
        "prefix": "components.damagetypebonus:GetDebugString",
        "body": "components.damagetypebonus:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.damagetypebonus:AddBonus:": {
        "prefix": "components.damagetypebonus:AddBonus",
        "body": "components.damagetypebonus:AddBonus(${1:tag},${2:src},${3:pct},${4:key})",
        "description": " ※Params: \n   (tag)<>[] \n   (src)<>[] \n   (pct)<>[] \n   (key)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.damagetypebonus:RemoveBonus:": {
        "prefix": "components.damagetypebonus:RemoveBonus",
        "body": "components.damagetypebonus:RemoveBonus(${1:tag},${2:src},${3:key})",
        "description": " ※Params: \n   (tag)<>[] \n   (src)<>[] \n   (key)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.damagetyperesist:RemoveResist:": {
        "prefix": "components.damagetyperesist:RemoveResist",
        "body": "components.damagetyperesist:RemoveResist(${1:tag},${2:src},${3:key})",
        "description": " ※Params: \n   (tag)<>[] \n   (src)<>[] \n   (key)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.damagetyperesist:GetDebugString:": {
        "prefix": "components.damagetyperesist:GetDebugString",
        "body": "components.damagetyperesist:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.damagetyperesist:AddResist:": {
        "prefix": "components.damagetyperesist:AddResist",
        "body": "components.damagetyperesist:AddResist(${1:tag},${2:src},${3:pct},${4:key})",
        "description": " ※Params: \n   (tag)<>[] \n   (src)<>[] \n   (pct)<>[] \n   (key)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.damagetyperesist:GetResist:": {
        "prefix": "components.damagetyperesist:GetResist",
        "body": "components.damagetyperesist:GetResist(${1:attacker},${2:weapon})",
        "description": " ※Params: \n   (attacker)<>[] \n   (weapon)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.dataanalyzer:GetData:": {
        "prefix": "components.dataanalyzer:GetData",
        "body": "components.dataanalyzer:GetData(${1:prefab})",
        "description": " ※Params: \n   (prefab)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.dataanalyzer:OnSave:": {
        "prefix": "components.dataanalyzer:OnSave",
        "body": "components.dataanalyzer:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.dataanalyzer:StopDataRegen:": {
        "prefix": "components.dataanalyzer:StopDataRegen",
        "body": "components.dataanalyzer:StopDataRegen()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.dataanalyzer:SpendData:": {
        "prefix": "components.dataanalyzer:SpendData",
        "body": "components.dataanalyzer:SpendData(${1:prefab})",
        "description": " ※Params: \n   (prefab)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.dataanalyzer:OnLoad:": {
        "prefix": "components.dataanalyzer:OnLoad",
        "body": "components.dataanalyzer:OnLoad(${1:data},${2:newents})",
        "description": " ※Params: \n   (data)<>[] \n   (newents)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.daywalkerspawner:WatchDaywalker:": {
        "prefix": "components.daywalkerspawner:WatchDaywalker",
        "body": "components.daywalkerspawner:WatchDaywalker(${1:daywalker})",
        "description": " ※Params: \n   (daywalker)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.daywalkerspawner:OnDayChange:": {
        "prefix": "components.daywalkerspawner:OnDayChange",
        "body": "components.daywalkerspawner:OnDayChange()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.daywalkerspawner:GetPowerLevel:": {
        "prefix": "components.daywalkerspawner:GetPowerLevel",
        "body": "components.daywalkerspawner:GetPowerLevel()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.daywalkerspawner:RegisterDayWalkerSpawningPoint:": {
        "prefix": "components.daywalkerspawner:RegisterDayWalkerSpawningPoint",
        "body": "components.daywalkerspawner:RegisterDayWalkerSpawningPoint(${1:spawnpoint})",
        "description": " ※Params: \n   (spawnpoint)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.daywalkerspawner:UnregisterDayWalkerSpawningPoint:": {
        "prefix": "components.daywalkerspawner:UnregisterDayWalkerSpawningPoint",
        "body": "components.daywalkerspawner:UnregisterDayWalkerSpawningPoint(${1:spawnpoint})",
        "description": " ※Params: \n   (spawnpoint)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.daywalkerspawner:FindBestSpawningPoint:": {
        "prefix": "components.daywalkerspawner:FindBestSpawningPoint",
        "body": "components.daywalkerspawner:FindBestSpawningPoint()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.daywalkerspawner:OnLoad:": {
        "prefix": "components.daywalkerspawner:OnLoad",
        "body": "components.daywalkerspawner:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.daywalkerspawner:LoadPostPass:": {
        "prefix": "components.daywalkerspawner:LoadPostPass",
        "body": "components.daywalkerspawner:LoadPostPass(${1:ents},${2:data})",
        "description": " ※Params: \n   (ents)<>[] \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.daywalkerspawner:OnPostInit:": {
        "prefix": "components.daywalkerspawner:OnPostInit",
        "body": "components.daywalkerspawner:OnPostInit()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.daywalkerspawner:TryToSpawnDayWalkerArena:": {
        "prefix": "components.daywalkerspawner:TryToSpawnDayWalkerArena",
        "body": "components.daywalkerspawner:TryToSpawnDayWalkerArena()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.daywalkerspawner:SpawnDayWalkerArena:": {
        "prefix": "components.daywalkerspawner:SpawnDayWalkerArena",
        "body": "components.daywalkerspawner:SpawnDayWalkerArena(${1:x},${2:y},${3:z})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.daywalkerspawner:IncrementPowerLevel:": {
        "prefix": "components.daywalkerspawner:IncrementPowerLevel",
        "body": "components.daywalkerspawner:IncrementPowerLevel()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.daywalkerspawner:IsValidSpawningPoint:": {
        "prefix": "components.daywalkerspawner:IsValidSpawningPoint",
        "body": "components.daywalkerspawner:IsValidSpawningPoint(${1:x},${2:y},${3:z})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.daywalkerspawner:OnSave:": {
        "prefix": "components.daywalkerspawner:OnSave",
        "body": "components.daywalkerspawner:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.daywalkerspawner:TryToRegisterSpawningPoint:": {
        "prefix": "components.daywalkerspawner:TryToRegisterSpawningPoint",
        "body": "components.daywalkerspawner:TryToRegisterSpawningPoint(${1:spawnpoint})",
        "description": " ※Params: \n   (spawnpoint)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.debuff:OnDetach:": {
        "prefix": "components.debuff:OnDetach",
        "body": "components.debuff:OnDetach()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.debuff:AttachTo:": {
        "prefix": "components.debuff:AttachTo",
        "body": "components.debuff:AttachTo(${1:name},${2:target},${3:followsymbol},${4:followoffset},${5:data})",
        "description": " ※Params: \n   (name)<>[] \n   (target)<>[] \n   (followsymbol)<>[] \n   (followoffset)<>[] \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.debuff:Stop:": {
        "prefix": "components.debuff:Stop",
        "body": "components.debuff:Stop()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.debuff:SetDetachedFn:": {
        "prefix": "components.debuff:SetDetachedFn",
        "body": "components.debuff:SetDetachedFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.debuff:ChangeFollowSymbol:": {
        "prefix": "components.debuff:ChangeFollowSymbol",
        "body": "components.debuff:ChangeFollowSymbol(${1:followsymbol},${2:followoffset})",
        "description": " ※Params: \n   (followsymbol)<>[] \n   (followoffset)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.debuff:Extend:": {
        "prefix": "components.debuff:Extend",
        "body": "components.debuff:Extend(${1:followsymbol},${2:followoffset},${3:data})",
        "description": " ※Params: \n   (followsymbol)<>[] \n   (followoffset)<>[] \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.debuff:SetExtendedFn:": {
        "prefix": "components.debuff:SetExtendedFn",
        "body": "components.debuff:SetExtendedFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.debuff:SetAttachedFn:": {
        "prefix": "components.debuff:SetAttachedFn",
        "body": "components.debuff:SetAttachedFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.debuff:SetChangeFollowSymbolFn:": {
        "prefix": "components.debuff:SetChangeFollowSymbolFn",
        "body": "components.debuff:SetChangeFollowSymbolFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.debuffable:GetDebuff:": {
        "prefix": "components.debuffable:GetDebuff",
        "body": "components.debuffable:GetDebuff(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.debuffable:OnSave:": {
        "prefix": "components.debuffable:OnSave",
        "body": "components.debuffable:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.debuffable:Enable:": {
        "prefix": "components.debuffable:Enable",
        "body": "components.debuffable:Enable(${1:enable})",
        "description": " ※Params: \n   (enable)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.debuffable:OnLoad:": {
        "prefix": "components.debuffable:OnLoad",
        "body": "components.debuffable:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.debuffable:TransferComponent:": {
        "prefix": "components.debuffable:TransferComponent",
        "body": "components.debuffable:TransferComponent(${1:newinst})",
        "description": " ※Params: \n   (newinst)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.debuffable:IsEnabled:": {
        "prefix": "components.debuffable:IsEnabled",
        "body": "components.debuffable:IsEnabled()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.debuffable:GetDebugString:": {
        "prefix": "components.debuffable:GetDebugString",
        "body": "components.debuffable:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.debuffable:RemoveOnDespawn:": {
        "prefix": "components.debuffable:RemoveOnDespawn",
        "body": "components.debuffable:RemoveOnDespawn()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.debuffable:HasDebuff:": {
        "prefix": "components.debuffable:HasDebuff",
        "body": "components.debuffable:HasDebuff(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.debuffable:SetFollowSymbol:": {
        "prefix": "components.debuffable:SetFollowSymbol",
        "body": "components.debuffable:SetFollowSymbol(${1:symbol},${2:x},${3:y},${4:z})",
        "description": " ※Params: \n   (symbol)<>[] \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.debuffable:AddDebuff:": {
        "prefix": "components.debuffable:AddDebuff",
        "body": "components.debuffable:AddDebuff(${1:name},${2:prefab},${3:data})",
        "description": " ※Params: \n   (name)<>[] \n   (prefab)<>[] \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.debuffable:RemoveDebuff:": {
        "prefix": "components.debuffable:RemoveDebuff",
        "body": "components.debuffable:RemoveDebuff(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.debugger:SetZ:": {
        "prefix": "components.debugger:SetZ",
        "body": "components.debugger:SetZ(${1:val})",
        "description": " ※Params: \n   (val)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.debugger:SetTarget:": {
        "prefix": "components.debugger:SetTarget",
        "body": "components.debugger:SetTarget(${1:key},${2:x},${3:y})",
        "description": " ※Params: \n   (key)<>[] \n   (x)<>[] \n   (y)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.debugger:SetColour:": {
        "prefix": "components.debugger:SetColour",
        "body": "components.debugger:SetColour(${1:key},${2:r},${3:g},${4:b},${5:a})",
        "description": " ※Params: \n   (key)<>[] \n   (r)<>[] \n   (g)<>[] \n   (b)<>[] \n   (a)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.debugger:SetAll:": {
        "prefix": "components.debugger:SetAll",
        "body": "components.debugger:SetAll(${1:key},${2:origin},${3:tar},${4:colour})",
        "description": " ※Params: \n   (key)<>[] \n   (origin)<>[] \n   (tar)<>[] \n   (colour)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.debugger:SetOrigin:": {
        "prefix": "components.debugger:SetOrigin",
        "body": "components.debugger:SetOrigin(${1:key},${2:x},${3:y})",
        "description": " ※Params: \n   (key)<>[] \n   (x)<>[] \n   (y)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.debugger:OnUpdate:": {
        "prefix": "components.debugger:OnUpdate",
        "body": "components.debugger:OnUpdate()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.decay:DoDelta:": {
        "prefix": "components.decay:DoDelta",
        "body": "components.decay:DoDelta(${1:amount})",
        "description": " ※Params: \n   (amount)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.decay:SetTimeDelta:": {
        "prefix": "components.decay:SetTimeDelta",
        "body": "components.decay:SetTimeDelta(${1:amount},${2:pause},${3:num})",
        "description": " ※Params: \n   (amount)<>[] \n   (pause)<>[] \n   (num)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.deciduoustreeupdater:StopMonster:": {
        "prefix": "components.deciduoustreeupdater:StopMonster",
        "body": "components.deciduoustreeupdater:StopMonster()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.deciduoustreeupdater:OnEntityWake:": {
        "prefix": "components.deciduoustreeupdater:OnEntityWake",
        "body": "components.deciduoustreeupdater:OnEntityWake()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.deciduoustreeupdater:SpawnIgniteWave:": {
        "prefix": "components.deciduoustreeupdater:SpawnIgniteWave",
        "body": "components.deciduoustreeupdater:SpawnIgniteWave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.deciduoustreeupdater:OnEntitySleep:": {
        "prefix": "components.deciduoustreeupdater:OnEntitySleep",
        "body": "components.deciduoustreeupdater:OnEntitySleep()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.deciduoustreeupdater:StartMonster:": {
        "prefix": "components.deciduoustreeupdater:StartMonster",
        "body": "components.deciduoustreeupdater:StartMonster(${1:starttime})",
        "description": " ※Params: \n   (starttime)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.deciduoustreeupdater:OnUpdate:": {
        "prefix": "components.deciduoustreeupdater:OnUpdate",
        "body": "components.deciduoustreeupdater:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.deerherding:CalcIsHerdSpooked:": {
        "prefix": "components.deerherding:CalcIsHerdSpooked",
        "body": "components.deerherding:CalcIsHerdSpooked()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.deerherding:IsActiveInHerd:": {
        "prefix": "components.deerherding:IsActiveInHerd",
        "body": "components.deerherding:IsActiveInHerd(${1:deer})",
        "description": " ※Params: \n   (deer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.deerherding:OnLoad:": {
        "prefix": "components.deerherding:OnLoad",
        "body": "components.deerherding:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.deerherding:SetValidAareaCheckFn:": {
        "prefix": "components.deerherding:SetValidAareaCheckFn",
        "body": "components.deerherding:SetValidAareaCheckFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.deerherding:UpdateHerdLocation:": {
        "prefix": "components.deerherding:UpdateHerdLocation",
        "body": "components.deerherding:UpdateHerdLocation(${1:radius})",
        "description": " ※Params: \n   (radius)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.deerherding:CalcHerdCenterPoint:": {
        "prefix": "components.deerherding:CalcHerdCenterPoint",
        "body": "components.deerherding:CalcHerdCenterPoint(${1:detailedinfo})",
        "description": " ※Params: \n   (detailedinfo)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.deerherding:UpdateDeerHerdingStatus:": {
        "prefix": "components.deerherding:UpdateDeerHerdingStatus",
        "body": "components.deerherding:UpdateDeerHerdingStatus()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.deerherding:HerdHasAlertTarget:": {
        "prefix": "components.deerherding:HerdHasAlertTarget",
        "body": "components.deerherding:HerdHasAlertTarget()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.deerherding:IsAHerdAlertTarget:": {
        "prefix": "components.deerherding:IsAHerdAlertTarget",
        "body": "components.deerherding:IsAHerdAlertTarget(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.deerherding:LoadPostPass:": {
        "prefix": "components.deerherding:LoadPostPass",
        "body": "components.deerherding:LoadPostPass(${1:newents},${2:data})",
        "description": " ※Params: \n   (newents)<>[] \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.deerherding:OnSave:": {
        "prefix": "components.deerherding:OnSave",
        "body": "components.deerherding:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.deerherding:GetDebugString:": {
        "prefix": "components.deerherding:GetDebugString",
        "body": "components.deerherding:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.deerherding:GetClosestHerdAlertTarget:": {
        "prefix": "components.deerherding:GetClosestHerdAlertTarget",
        "body": "components.deerherding:GetClosestHerdAlertTarget(${1:deer})",
        "description": " ※Params: \n   (deer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.deerherding:IsAnyEntityAsleep:": {
        "prefix": "components.deerherding:IsAnyEntityAsleep",
        "body": "components.deerherding:IsAnyEntityAsleep()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.deerherding:IsGrazing:": {
        "prefix": "components.deerherding:IsGrazing",
        "body": "components.deerherding:IsGrazing()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.deerherding:SetHerdAlertTarget:": {
        "prefix": "components.deerherding:SetHerdAlertTarget",
        "body": "components.deerherding:SetHerdAlertTarget(${1:deer},${2:target})",
        "description": " ※Params: \n   (deer)<>[] \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.deerherding:OnUpdate:": {
        "prefix": "components.deerherding:OnUpdate",
        "body": "components.deerherding:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.deployable:SetUseGridPlacer:": {
        "prefix": "components.deployable:SetUseGridPlacer",
        "body": "components.deployable:SetUseGridPlacer(${1:usegridplacer})",
        "description": " ※Params: \n   (usegridplacer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.deployable:Deploy:": {
        "prefix": "components.deployable:Deploy",
        "body": "components.deployable:Deploy(${1:pt},${2:deployer},${3:rot})",
        "description": " ※Params: \n   (pt)<>[] \n   (deployer)<>[] \n   (rot)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.deployable:SetDeployMode:": {
        "prefix": "components.deployable:SetDeployMode",
        "body": "components.deployable:SetDeployMode(${1:mode})",
        "description": " ※Params: \n   (mode)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.deployable:SetDeploySpacing:": {
        "prefix": "components.deployable:SetDeploySpacing",
        "body": "components.deployable:SetDeploySpacing(${1:spacing})",
        "description": " ※Params: \n   (spacing)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.deployable:SetDeployTossSymbolOverride:": {
        "prefix": "components.deployable:SetDeployTossSymbolOverride",
        "body": "components.deployable:SetDeployTossSymbolOverride(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.deployable:CanDeploy:": {
        "prefix": "components.deployable:CanDeploy",
        "body": "components.deployable:CanDeploy(${1:pt},${2:mouseover},${3:deployer},${4:rot})",
        "description": " ※Params: \n   (pt)<>[] \n   (mouseover)<>[] \n   (deployer)<>[] \n   (rot)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.deployable:IsDeployable:": {
        "prefix": "components.deployable:IsDeployable",
        "body": "components.deployable:IsDeployable(${1:deployer})",
        "description": " ※Params: \n   (deployer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.deployable:DeploySpacingRadius:": {
        "prefix": "components.deployable:DeploySpacingRadius",
        "body": "components.deployable:DeploySpacingRadius()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.deployable:OnRemoveFromEntity:": {
        "prefix": "components.deployable:OnRemoveFromEntity",
        "body": "components.deployable:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.deployhelper:AddKeyFilter:": {
        "prefix": "components.deployhelper:AddKeyFilter",
        "body": "components.deployhelper:AddKeyFilter(${1:key})",
        "description": " ※Params: \n   (key)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.deployhelper:OnEntityWake:": {
        "prefix": "components.deployhelper:OnEntityWake",
        "body": "components.deployhelper:OnEntityWake()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.deployhelper:StopHelper:": {
        "prefix": "components.deployhelper:StopHelper",
        "body": "components.deployhelper:StopHelper()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.deployhelper:OnWallUpdate:": {
        "prefix": "components.deployhelper:OnWallUpdate",
        "body": "components.deployhelper:OnWallUpdate()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.deployhelper:OnEntitySleep:": {
        "prefix": "components.deployhelper:OnEntitySleep",
        "body": "components.deployhelper:OnEntitySleep()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.deployhelper:AddRecipeFilter:": {
        "prefix": "components.deployhelper:AddRecipeFilter",
        "body": "components.deployhelper:AddRecipeFilter(${1:recipename})",
        "description": " ※Params: \n   (recipename)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.deployhelper:StartHelper:": {
        "prefix": "components.deployhelper:StartHelper",
        "body": "components.deployhelper:StartHelper(${1:recipename},${2:placerinst})",
        "description": " ※Params: \n   (recipename)<>[] \n   (placerinst)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.despawnfader:OnUpdate:": {
        "prefix": "components.despawnfader:OnUpdate",
        "body": "components.despawnfader:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.despawnfader:FadeOut:": {
        "prefix": "components.despawnfader:FadeOut",
        "body": "components.despawnfader:FadeOut()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.despawnfader:OnRemoveFromEntity:": {
        "prefix": "components.despawnfader:OnRemoveFromEntity",
        "body": "components.despawnfader:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.digester:TryDigest:": {
        "prefix": "components.digester:TryDigest",
        "body": "components.digester:TryDigest()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.disappears:GetDebugString:": {
        "prefix": "components.disappears:GetDebugString",
        "body": "components.disappears:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.disappears:PrepareDisappear:": {
        "prefix": "components.disappears:PrepareDisappear",
        "body": "components.disappears:PrepareDisappear()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.disappears:StopDisappear:": {
        "prefix": "components.disappears:StopDisappear",
        "body": "components.disappears:StopDisappear()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.disappears:Disappear:": {
        "prefix": "components.disappears:Disappear",
        "body": "components.disappears:Disappear()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.discoverable:Discover:": {
        "prefix": "components.discoverable:Discover",
        "body": "components.discoverable:Discover()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.discoverable:SetIcons:": {
        "prefix": "components.discoverable:SetIcons",
        "body": "components.discoverable:SetIcons(${1:undiscovered},${2:discovered})",
        "description": " ※Params: \n   (undiscovered)<>[] \n   (discovered)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.discoverable:Hide:": {
        "prefix": "components.discoverable:Hide",
        "body": "components.discoverable:Hide()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.discoverable:OnSave:": {
        "prefix": "components.discoverable:OnSave",
        "body": "components.discoverable:OnSave(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.discoverable:OnLoad:": {
        "prefix": "components.discoverable:OnLoad",
        "body": "components.discoverable:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.diseaseable:RestartNearbySpread:": {
        "prefix": "components.diseaseable:RestartNearbySpread",
        "body": "components.diseaseable:RestartNearbySpread()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.diseaseable:IsDiseased:": {
        "prefix": "components.diseaseable:IsDiseased",
        "body": "components.diseaseable:IsDiseased()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.diseaseable:Spread:": {
        "prefix": "components.diseaseable:Spread",
        "body": "components.diseaseable:Spread()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.diseaseable:OnLoad:": {
        "prefix": "components.diseaseable:OnLoad",
        "body": "components.diseaseable:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.diseaseable:GetDebugString:": {
        "prefix": "components.diseaseable:GetDebugString",
        "body": "components.diseaseable:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.diseaseable:IsBecomingDiseased:": {
        "prefix": "components.diseaseable:IsBecomingDiseased",
        "body": "components.diseaseable:IsBecomingDiseased()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.diseaseable:OnSave:": {
        "prefix": "components.diseaseable:OnSave",
        "body": "components.diseaseable:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.diseaseable:SetDiseasedFn:": {
        "prefix": "components.diseaseable:SetDiseasedFn",
        "body": "components.diseaseable:SetDiseasedFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.diseaseable:Disease:": {
        "prefix": "components.diseaseable:Disease",
        "body": "components.diseaseable:Disease()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.diseaseable:OnRemoveFromEntity:": {
        "prefix": "components.diseaseable:OnRemoveFromEntity",
        "body": "components.diseaseable:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.distancefade:SetExtraFn:": {
        "prefix": "components.distancefade:SetExtraFn",
        "body": "components.distancefade:SetExtraFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.distancefade:OnEntityWake:": {
        "prefix": "components.distancefade:OnEntityWake",
        "body": "components.distancefade:OnEntityWake()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.distancefade:Setup:": {
        "prefix": "components.distancefade:Setup",
        "body": "components.distancefade:Setup(${1:range},${2:fadedist})",
        "description": " ※Params: \n   (range)<>[] \n   (fadedist)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.distancefade:OnEntitySleep:": {
        "prefix": "components.distancefade:OnEntitySleep",
        "body": "components.distancefade:OnEntitySleep()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.distancefade:OnUpdate:": {
        "prefix": "components.distancefade:OnUpdate",
        "body": "components.distancefade:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.distancetracker:OnUpdate:": {
        "prefix": "components.distancetracker:OnUpdate",
        "body": "components.distancetracker:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.domesticatable:IsDomesticated:": {
        "prefix": "components.domesticatable:IsDomesticated",
        "body": "components.domesticatable:IsDomesticated()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.domesticatable:DeltaDomestication:": {
        "prefix": "components.domesticatable:DeltaDomestication",
        "body": "components.domesticatable:DeltaDomestication(${1:delta},${2:doer})",
        "description": " ※Params: \n   (delta)<>[] \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.domesticatable:CheckAndStartTask:": {
        "prefix": "components.domesticatable:CheckAndStartTask",
        "body": "components.domesticatable:CheckAndStartTask()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.domesticatable:CheckForChanges:": {
        "prefix": "components.domesticatable:CheckForChanges",
        "body": "components.domesticatable:CheckForChanges()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.domesticatable:BecomeDomesticated:": {
        "prefix": "components.domesticatable:BecomeDomesticated",
        "body": "components.domesticatable:BecomeDomesticated()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.domesticatable:DeltaTendency:": {
        "prefix": "components.domesticatable:DeltaTendency",
        "body": "components.domesticatable:DeltaTendency(${1:tendency},${2:delta})",
        "description": " ※Params: \n   (tendency)<>[] \n   (delta)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.domesticatable:GetDomestication:": {
        "prefix": "components.domesticatable:GetDomestication",
        "body": "components.domesticatable:GetDomestication()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.domesticatable:OnRemoveFromEntity:": {
        "prefix": "components.domesticatable:OnRemoveFromEntity",
        "body": "components.domesticatable:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.domesticatable:SetDomesticationTrigger:": {
        "prefix": "components.domesticatable:SetDomesticationTrigger",
        "body": "components.domesticatable:SetDomesticationTrigger(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.domesticatable:GetObedience:": {
        "prefix": "components.domesticatable:GetObedience",
        "body": "components.domesticatable:GetObedience()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.domesticatable:CancelTask:": {
        "prefix": "components.domesticatable:CancelTask",
        "body": "components.domesticatable:CancelTask()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.domesticatable:GetDebugString:": {
        "prefix": "components.domesticatable:GetDebugString",
        "body": "components.domesticatable:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.domesticatable:OnLoad:": {
        "prefix": "components.domesticatable:OnLoad",
        "body": "components.domesticatable:OnLoad(${1:data},${2:newents})",
        "description": " ※Params: \n   (data)<>[] \n   (newents)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.domesticatable:Validate:": {
        "prefix": "components.domesticatable:Validate",
        "body": "components.domesticatable:Validate()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.domesticatable:SetDomesticated:": {
        "prefix": "components.domesticatable:SetDomesticated",
        "body": "components.domesticatable:SetDomesticated(${1:domesticated})",
        "description": " ※Params: \n   (domesticated)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.domesticatable:PauseDomesticationDecay:": {
        "prefix": "components.domesticatable:PauseDomesticationDecay",
        "body": "components.domesticatable:PauseDomesticationDecay(${1:pause})",
        "description": " ※Params: \n   (pause)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.domesticatable:OnSave:": {
        "prefix": "components.domesticatable:OnSave",
        "body": "components.domesticatable:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.domesticatable:TryBecomeDomesticated:": {
        "prefix": "components.domesticatable:TryBecomeDomesticated",
        "body": "components.domesticatable:TryBecomeDomesticated()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.domesticatable:DeltaObedience:": {
        "prefix": "components.domesticatable:DeltaObedience",
        "body": "components.domesticatable:DeltaObedience(${1:delta})",
        "description": " ※Params: \n   (delta)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.domesticatable:SetMinObedience:": {
        "prefix": "components.domesticatable:SetMinObedience",
        "body": "components.domesticatable:SetMinObedience(${1:min})",
        "description": " ※Params: \n   (min)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.drawable:SetCanDraw:": {
        "prefix": "components.drawable:SetCanDraw",
        "body": "components.drawable:SetCanDraw(${1:candraw})",
        "description": " ※Params: \n   (candraw)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.drawable:GetAtlas:": {
        "prefix": "components.drawable:GetAtlas",
        "body": "components.drawable:GetAtlas()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.drawable:OnDrawn:": {
        "prefix": "components.drawable:OnDrawn",
        "body": "components.drawable:OnDrawn(${1:imagename},${2:imagesource},${3:atlasname},${4:bgimagename},${5:bgatlasname})",
        "description": " ※Params: \n   (imagename)<>[] \n   (imagesource)<>[] \n   (atlasname)<>[] \n   (bgimagename)<>[] \n   (bgatlasname)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.drawable:GetBGAtlas:": {
        "prefix": "components.drawable:GetBGAtlas",
        "body": "components.drawable:GetBGAtlas()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.drawable:SetOnDrawnFn:": {
        "prefix": "components.drawable:SetOnDrawnFn",
        "body": "components.drawable:SetOnDrawnFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.drawable:OnLoad:": {
        "prefix": "components.drawable:OnLoad",
        "body": "components.drawable:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.drawable:OnSave:": {
        "prefix": "components.drawable:OnSave",
        "body": "components.drawable:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.drawable:GetBGImage:": {
        "prefix": "components.drawable:GetBGImage",
        "body": "components.drawable:GetBGImage()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.drawable:CanDraw:": {
        "prefix": "components.drawable:CanDraw",
        "body": "components.drawable:CanDraw()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.drawable:GetImage:": {
        "prefix": "components.drawable:GetImage",
        "body": "components.drawable:GetImage()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.drawable:OnRemoveFromEntity:": {
        "prefix": "components.drawable:OnRemoveFromEntity",
        "body": "components.drawable:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.drawingtool:SetOnDrawFn:": {
        "prefix": "components.drawingtool:SetOnDrawFn",
        "body": "components.drawingtool:SetOnDrawFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.drawingtool:Draw:": {
        "prefix": "components.drawingtool:Draw",
        "body": "components.drawingtool:Draw(${1:target},${2:image},${3:src},${4:atlas},${5:bgimage},${6:bgatlas})",
        "description": " ※Params: \n   (target)<>[] \n   (image)<>[] \n   (src)<>[] \n   (atlas)<>[] \n   (bgimage)<>[] \n   (bgatlas)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.drawingtool:GetImageToDraw:": {
        "prefix": "components.drawingtool:GetImageToDraw",
        "body": "components.drawingtool:GetImageToDraw(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.drownable:ShouldDropItems:": {
        "prefix": "components.drownable:ShouldDropItems",
        "body": "components.drownable:ShouldDropItems()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.drownable:SetCustomTuningsFn:": {
        "prefix": "components.drownable:SetCustomTuningsFn",
        "body": "components.drownable:SetCustomTuningsFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.drownable:SetOnTakeDrowningDamageFn:": {
        "prefix": "components.drownable:SetOnTakeDrowningDamageFn",
        "body": "components.drownable:SetOnTakeDrowningDamageFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.drownable:IsOverWater:": {
        "prefix": "components.drownable:IsOverWater",
        "body": "components.drownable:IsOverWater()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.drownable:WashAshore:": {
        "prefix": "components.drownable:WashAshore",
        "body": "components.drownable:WashAshore()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.drownable:DropInventory:": {
        "prefix": "components.drownable:DropInventory",
        "body": "components.drownable:DropInventory()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.drownable:TakeDrowningDamage:": {
        "prefix": "components.drownable:TakeDrowningDamage",
        "body": "components.drownable:TakeDrowningDamage()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.drownable:OnFallInOcean:": {
        "prefix": "components.drownable:OnFallInOcean",
        "body": "components.drownable:OnFallInOcean(${1:shore_x},${2:shore_y},${3:shore_z})",
        "description": " ※Params: \n   (shore_x)<>[] \n   (shore_y)<>[] \n   (shore_z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.drownable:GetWashingAshoreTeleportSpot:": {
        "prefix": "components.drownable:GetWashingAshoreTeleportSpot",
        "body": "components.drownable:GetWashingAshoreTeleportSpot(${1:excludeclosest})",
        "description": " ※Params: \n   (excludeclosest)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.drownable:Teleport:": {
        "prefix": "components.drownable:Teleport",
        "body": "components.drownable:Teleport()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.drownable:ShouldDrown:": {
        "prefix": "components.drownable:ShouldDrown",
        "body": "components.drownable:ShouldDrown()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.dryable:SetDryTime:": {
        "prefix": "components.dryable:SetDryTime",
        "body": "components.dryable:SetDryTime(${1:time})",
        "description": " ※Params: \n   (time)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.dryable:GetBuildFile:": {
        "prefix": "components.dryable:GetBuildFile",
        "body": "components.dryable:GetBuildFile()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.dryable:SetDriedBuildFile:": {
        "prefix": "components.dryable:SetDriedBuildFile",
        "body": "components.dryable:SetDriedBuildFile(${1:dried_buildfile})",
        "description": " ※Params: \n   (dried_buildfile)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.dryable:GetProduct:": {
        "prefix": "components.dryable:GetProduct",
        "body": "components.dryable:GetProduct()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.dryable:GetDriedBuildFile:": {
        "prefix": "components.dryable:GetDriedBuildFile",
        "body": "components.dryable:GetDriedBuildFile()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.dryable:SetProduct:": {
        "prefix": "components.dryable:SetProduct",
        "body": "components.dryable:SetProduct(${1:product})",
        "description": " ※Params: \n   (product)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.dryable:SetBuildFile:": {
        "prefix": "components.dryable:SetBuildFile",
        "body": "components.dryable:SetBuildFile(${1:buildfile})",
        "description": " ※Params: \n   (buildfile)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.dryable:GetDryTime:": {
        "prefix": "components.dryable:GetDryTime",
        "body": "components.dryable:GetDryTime()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.dryable:OnRemoveFromEntity:": {
        "prefix": "components.dryable:OnRemoveFromEntity",
        "body": "components.dryable:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.dryer:GetTimeToSpoil:": {
        "prefix": "components.dryer:GetTimeToSpoil",
        "body": "components.dryer:GetTimeToSpoil()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.dryer:SetDoneDryingFn:": {
        "prefix": "components.dryer:SetDoneDryingFn",
        "body": "components.dryer:SetDoneDryingFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.dryer:DropItem:": {
        "prefix": "components.dryer:DropItem",
        "body": "components.dryer:DropItem()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.dryer:OnLoad:": {
        "prefix": "components.dryer:OnLoad",
        "body": "components.dryer:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.dryer:LongUpdate:": {
        "prefix": "components.dryer:LongUpdate",
        "body": "components.dryer:LongUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.dryer:OnRemoveFromEntity:": {
        "prefix": "components.dryer:OnRemoveFromEntity",
        "body": "components.dryer:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.dryer:IsDrying:": {
        "prefix": "components.dryer:IsDrying",
        "body": "components.dryer:IsDrying()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.dryer:SetStartDryingFn:": {
        "prefix": "components.dryer:SetStartDryingFn",
        "body": "components.dryer:SetStartDryingFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.dryer:OnSave:": {
        "prefix": "components.dryer:OnSave",
        "body": "components.dryer:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.dryer:Harvest:": {
        "prefix": "components.dryer:Harvest",
        "body": "components.dryer:Harvest(${1:harvester})",
        "description": " ※Params: \n   (harvester)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.dryer:Resume:": {
        "prefix": "components.dryer:Resume",
        "body": "components.dryer:Resume()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.dryer:StopDrying:": {
        "prefix": "components.dryer:StopDrying",
        "body": "components.dryer:StopDrying(${1:reason})",
        "description": " ※Params: \n   (reason)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.dryer:GetTimeToDry:": {
        "prefix": "components.dryer:GetTimeToDry",
        "body": "components.dryer:GetTimeToDry()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.dryer:StartDrying:": {
        "prefix": "components.dryer:StartDrying",
        "body": "components.dryer:StartDrying(${1:dryable})",
        "description": " ※Params: \n   (dryable)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.dryer:GetDebugString:": {
        "prefix": "components.dryer:GetDebugString",
        "body": "components.dryer:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.dryer:Pause:": {
        "prefix": "components.dryer:Pause",
        "body": "components.dryer:Pause()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.dryer:CanDry:": {
        "prefix": "components.dryer:CanDry",
        "body": "components.dryer:CanDry(${1:dryable})",
        "description": " ※Params: \n   (dryable)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.dryer:IsDone:": {
        "prefix": "components.dryer:IsDone",
        "body": "components.dryer:IsDone()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.dryer:IsPaused:": {
        "prefix": "components.dryer:IsPaused",
        "body": "components.dryer:IsPaused()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.dryer:SetOnHarvestFn:": {
        "prefix": "components.dryer:SetOnHarvestFn",
        "body": "components.dryer:SetOnHarvestFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.dumbbelllifter:Lift:": {
        "prefix": "components.dumbbelllifter:Lift",
        "body": "components.dumbbelllifter:Lift()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.dumbbelllifter:CanLift:": {
        "prefix": "components.dumbbelllifter:CanLift",
        "body": "components.dumbbelllifter:CanLift(${1:dumbbell})",
        "description": " ※Params: \n   (dumbbell)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.dumbbelllifter:IsLiftingAny:": {
        "prefix": "components.dumbbelllifter:IsLiftingAny",
        "body": "components.dumbbelllifter:IsLiftingAny()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.dumbbelllifter:IsLifting:": {
        "prefix": "components.dumbbelllifter:IsLifting",
        "body": "components.dumbbelllifter:IsLifting(${1:dumbbell})",
        "description": " ※Params: \n   (dumbbell)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.dumbbelllifter:StopLifting:": {
        "prefix": "components.dumbbelllifter:StopLifting",
        "body": "components.dumbbelllifter:StopLifting()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.dumbbelllifter:StartLifting:": {
        "prefix": "components.dumbbelllifter:StartLifting",
        "body": "components.dumbbelllifter:StartLifting(${1:dumbbell})",
        "description": " ※Params: \n   (dumbbell)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.eater:SetPrefersEatingTag:设置实体优先食用指定标签的食物": {
        "prefix": "components.eater:SetPrefersEatingTag",
        "body": "components.eater:SetPrefersEatingTag(${1:tag})",
        "description": " ※Params: \n   (tag)<string>[优先食用的标签] \n ※Description: 设置实体优先食用指定标签的食物\n ※Contributor: @764不是西红柿"
    },
    "Component.eater:HasBeen:检查是否已经经过指定时间": {
        "prefix": "components.eater:HasBeen",
        "body": "components.eater:HasBeen(${1:time})",
        "description": " ※Params: \n   (time)<number>[时间间隔] \n ※Returns: <boolean>[是否经过指定时间] \n ※Description: 检查是否已经经过指定时间\n ※Contributor: @764不是西红柿"
    },
    "Component.eater:SetCanEatGears:设置实体可以食用齿轮": {
        "prefix": "components.eater:SetCanEatGears",
        "body": "components.eater:SetCanEatGears()",
        "description": "\n ※Description: 设置实体可以食用齿轮\n ※Contributor: @764不是西红柿"
    },
    "Component.eater:SetAbsorptionModifiers:设置食物对健康、饥饿和理智的吸收倍率": {
        "prefix": "components.eater:SetAbsorptionModifiers",
        "body": "components.eater:SetAbsorptionModifiers(${1:health},${2:hunger},${3:sanity})",
        "description": " ※Params: \n   (health)<number>[健康吸收倍率] \n   (hunger)<number>[饥饿吸收倍率] \n   (sanity)<number>[理智吸收倍率] \n ※Description: 设置食物对健康、饥饿和理智的吸收倍率\n ※Contributor: @764不是西红柿"
    },
    "Component.eater:CanEat:检查实体是否可以吃指定食物": {
        "prefix": "components.eater:CanEat",
        "body": "components.eater:CanEat(${1:food})",
        "description": " ※Params: \n   (food)<table>[食物对象] \n ※Returns: <boolean>[实体是否可以吃该食物] \n ※Description: 检查实体是否可以吃指定食物\n ※Contributor: @764不是西红柿"
    },
    "Component.eater:OnLoad:从保存数据中加载实体的状态信息": {
        "prefix": "components.eater:OnLoad",
        "body": "components.eater:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<table>[加载的保存数据] \n ※Description: 从保存数据中加载实体的状态信息\n ※Contributor: @764不是西红柿"
    },
    "Component.eater:TimeSinceLastEating:获取自上次进食以来的时间": {
        "prefix": "components.eater:TimeSinceLastEating",
        "body": "components.eater:TimeSinceLastEating()",
        "description": "\n ※Returns: <number>[返回自上次进食以来的时间] \n ※Description: 获取自上次进食以来的时间\n ※Contributor: @764不是西红柿"
    },
    "Component.eater:SetStrongStomach:设置实体是否拥有强胃（更耐腐烂食物）": {
        "prefix": "components.eater:SetStrongStomach",
        "body": "components.eater:SetStrongStomach(${1:is_strong})",
        "description": " ※Params: \n   (is_strong)<boolean>[是否拥有强胃] \n ※Description: 设置实体是否拥有强胃（更耐腐烂食物）\n ※Contributor: @764不是西红柿"
    },
    "Component.eater:SetCanEatNitre:设置实体是否可以食用硝石": {
        "prefix": "components.eater:SetCanEatNitre",
        "body": "components.eater:SetCanEatNitre(${1:can_eat})",
        "description": " ※Params: \n   (can_eat)<boolean>[是否可以食用硝石] \n ※Description: 设置实体是否可以食用硝石\n ※Contributor: @764不是西红柿"
    },
    "Component.eater:SetCanEatRaw:设置实体可以生吃食物": {
        "prefix": "components.eater:SetCanEatRaw",
        "body": "components.eater:SetCanEatRaw()",
        "description": "\n ※Description: 设置实体可以生吃食物\n ※Contributor: @764不是西红柿"
    },
    "Component.eater:OnRemoveFromEntity:当组件从实体中移除时调用的函数": {
        "prefix": "components.eater:OnRemoveFromEntity",
        "body": "components.eater:OnRemoveFromEntity()",
        "description": "\n ※Description: 当组件从实体中移除时调用的函数\n ※Contributor: @764不是西红柿"
    },
    "Component.eater:SetOnEatFn:设置当实体吃掉食物时调用的函数": {
        "prefix": "components.eater:SetOnEatFn",
        "body": "components.eater:SetOnEatFn(${1:fn})",
        "description": " ※Params: \n   (fn)<function>[吃掉食物时的回调函数] \n ※Description: 设置当实体吃掉食物时调用的函数\n ※Contributor: @764不是西红柿"
    },
    "Component.eater:PrefersToEat:检查实体是否优先选择吃该食物": {
        "prefix": "components.eater:PrefersToEat",
        "body": "components.eater:PrefersToEat(${1:food})",
        "description": " ※Params: \n   (food)<table>[食物对象] \n ※Returns: <boolean>[是否优先食用] \n ※Description: 检查实体是否优先选择吃该食物\n ※Contributor: @764不是西红柿"
    },
    "Component.eater:SetDiet:设置食物种类和优先食用的类别": {
        "prefix": "components.eater:SetDiet",
        "body": "components.eater:SetDiet(${1:caneat},${2:preferseating})",
        "description": " ※Params: \n   (caneat)<table>[可以食用的食物类别] \n   (preferseating)<table>[优先食用的食物类别] \n ※Description: 设置食物种类和优先食用的类别\n ※Contributor: @764不是西红柿"
    },
    "Component.eater:SetCanEatRawMeat:设置实体是否可以食用生肉": {
        "prefix": "components.eater:SetCanEatRawMeat",
        "body": "components.eater:SetCanEatRawMeat(${1:can_eat})",
        "description": " ※Params: \n   (can_eat)<boolean>[是否可以食用生肉] \n ※Description: 设置实体是否可以食用生肉\n ※Contributor: @764不是西红柿"
    },
    "Component.eater:TestFood:测试食物是否符合某些条件": {
        "prefix": "components.eater:TestFood",
        "body": "components.eater:TestFood(${1:food},${2:testvalues})",
        "description": " ※Params: \n   (food)<table>[食物对象] \n   (testvalues)<table>[测试值] \n ※Returns: <boolean>[测试结果] \n ※Description: 测试食物是否符合某些条件\n ※Contributor: @764不是西红柿"
    },
    "Component.eater:Eat:实体吃掉指定的食物": {
        "prefix": "components.eater:Eat",
        "body": "components.eater:Eat(${1:food},${2:feeder})",
        "description": " ※Params: \n   (food)<table>[食物对象] \n   (feeder)<table>[喂食者对象] \n ※Description: 实体吃掉指定的食物\n ※Contributor: @764不是西红柿"
    },
    "Component.eater:GetEdibleTags:获取实体可食用的食物标签列表": {
        "prefix": "components.eater:GetEdibleTags",
        "body": "components.eater:GetEdibleTags()",
        "description": "\n ※Returns: <table>[返回可食用的标签列表] \n ※Description: 获取实体可食用的食物标签列表\n ※Contributor: @764不是西红柿"
    },
    "Component.eater:DoFoodEffects:应用食物的效果到实体": {
        "prefix": "components.eater:DoFoodEffects",
        "body": "components.eater:DoFoodEffects(${1:food})",
        "description": " ※Params: \n   (food)<table>[食物对象] \n ※Description: 应用食物的效果到实体\n ※Contributor: @764不是西红柿"
    },
    "Component.eater:SetRefusesSpoiledFood:设置实体是否拒绝腐烂的食物": {
        "prefix": "components.eater:SetRefusesSpoiledFood",
        "body": "components.eater:SetRefusesSpoiledFood(${1:refuses})",
        "description": " ※Params: \n   (refuses)<boolean>[是否拒绝腐烂食物] \n ※Description: 设置实体是否拒绝腐烂的食物\n ※Contributor: @764不是西红柿"
    },
    "Component.eater:SetIgnoresSpoilage:设置实体是否忽略食物的腐烂状态": {
        "prefix": "components.eater:SetIgnoresSpoilage",
        "body": "components.eater:SetIgnoresSpoilage(${1:ignores})",
        "description": " ※Params: \n   (ignores)<boolean>[是否忽略食物腐烂] \n ※Description: 设置实体是否忽略食物的腐烂状态\n ※Contributor: @764不是西红柿"
    },
    "Component.eater:OnSave:保存实体的状态信息": {
        "prefix": "components.eater:OnSave",
        "body": "components.eater:OnSave()",
        "description": "\n ※Returns: <table>[保存的数据表] \n ※Description: 保存实体的状态信息\n ※Contributor: @764不是西红柿"
    },
    "Component.eater:SetCanEatHorrible:设置实体可以食用腐烂食物": {
        "prefix": "components.eater:SetCanEatHorrible",
        "body": "components.eater:SetCanEatHorrible()",
        "description": "\n ※Description: 设置实体可以食用腐烂食物\n ※Contributor: @764不是西红柿"
    },
    "Component.edible:SetOnEatenFn:": {
        "prefix": "components.edible:SetOnEatenFn",
        "body": "components.edible:SetOnEatenFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.edible:SetGetHealthFn:": {
        "prefix": "components.edible:SetGetHealthFn",
        "body": "components.edible:SetGetHealthFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.edible:SetGetSanityFn:": {
        "prefix": "components.edible:SetGetSanityFn",
        "body": "components.edible:SetGetSanityFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.edible:GetSanity:": {
        "prefix": "components.edible:GetSanity",
        "body": "components.edible:GetSanity(${1:eater})",
        "description": " ※Params: \n   (eater)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.edible:OnEaten:": {
        "prefix": "components.edible:OnEaten",
        "body": "components.edible:OnEaten(${1:eater})",
        "description": " ※Params: \n   (eater)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.edible:GetHunger:": {
        "prefix": "components.edible:GetHunger",
        "body": "components.edible:GetHunger(${1:eater})",
        "description": " ※Params: \n   (eater)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.edible:GetWoodiness:": {
        "prefix": "components.edible:GetWoodiness",
        "body": "components.edible:GetWoodiness(${1:eater})",
        "description": " ※Params: \n   (eater)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.edible:AddChill:": {
        "prefix": "components.edible:AddChill",
        "body": "components.edible:AddChill(${1:delta})",
        "description": " ※Params: \n   (delta)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.edible:GetDebugString:": {
        "prefix": "components.edible:GetDebugString",
        "body": "components.edible:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.edible:OnLoad:": {
        "prefix": "components.edible:OnLoad",
        "body": "components.edible:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.edible:GetHealth:": {
        "prefix": "components.edible:GetHealth",
        "body": "components.edible:GetHealth(${1:eater})",
        "description": " ※Params: \n   (eater)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.edible:DiluteChill:": {
        "prefix": "components.edible:DiluteChill",
        "body": "components.edible:DiluteChill(${1:item},${2:count})",
        "description": " ※Params: \n   (item)<>[] \n   (count)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.edible:OnSave:": {
        "prefix": "components.edible:OnSave",
        "body": "components.edible:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.edible:OnRemoveFromEntity:": {
        "prefix": "components.edible:OnRemoveFromEntity",
        "body": "components.edible:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.efficientuser:GetMultiplier:": {
        "prefix": "components.efficientuser:GetMultiplier",
        "body": "components.efficientuser:GetMultiplier(${1:action})",
        "description": " ※Params: \n   (action)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.efficientuser:RemoveMultiplier:": {
        "prefix": "components.efficientuser:RemoveMultiplier",
        "body": "components.efficientuser:RemoveMultiplier(${1:action},${2:source})",
        "description": " ※Params: \n   (action)<>[] \n   (source)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.efficientuser:AddMultiplier:": {
        "prefix": "components.efficientuser:AddMultiplier",
        "body": "components.efficientuser:AddMultiplier(${1:action},${2:multiplier},${3:source})",
        "description": " ※Params: \n   (action)<>[] \n   (multiplier)<>[] \n   (source)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.electricattacks:AddSource:": {
        "prefix": "components.electricattacks:AddSource",
        "body": "components.electricattacks:AddSource(${1:source})",
        "description": " ※Params: \n   (source)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.electricattacks:RemoveSource:": {
        "prefix": "components.electricattacks:RemoveSource",
        "body": "components.electricattacks:RemoveSource(${1:source})",
        "description": " ※Params: \n   (source)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.embarker:SetEmbarkable:": {
        "prefix": "components.embarker:SetEmbarkable",
        "body": "components.embarker:SetEmbarkable(${1:embarkable})",
        "description": " ※Params: \n   (embarkable)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.embarker:SetDisembarkActionPos:": {
        "prefix": "components.embarker:SetDisembarkActionPos",
        "body": "components.embarker:SetDisembarkActionPos(${1:pos_x},${2:pos_z})",
        "description": " ※Params: \n   (pos_x)<>[] \n   (pos_z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.embarker:GetEmbarkPosition:": {
        "prefix": "components.embarker:GetEmbarkPosition",
        "body": "components.embarker:GetEmbarkPosition()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.embarker:Embark:": {
        "prefix": "components.embarker:Embark",
        "body": "components.embarker:Embark()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.embarker:UpdateEmbarkingPos:": {
        "prefix": "components.embarker:UpdateEmbarkingPos",
        "body": "components.embarker:UpdateEmbarkingPos(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.embarker:StartMoving:": {
        "prefix": "components.embarker:StartMoving",
        "body": "components.embarker:StartMoving()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.embarker:Cancel:": {
        "prefix": "components.embarker:Cancel",
        "body": "components.embarker:Cancel()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.embarker:HasDestination:": {
        "prefix": "components.embarker:HasDestination",
        "body": "components.embarker:HasDestination()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.embarker:SetDisembarkPos:": {
        "prefix": "components.embarker:SetDisembarkPos",
        "body": "components.embarker:SetDisembarkPos(${1:pos_x},${2:pos_z})",
        "description": " ※Params: \n   (pos_x)<>[] \n   (pos_z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.embarker:OnUpdate:": {
        "prefix": "components.embarker:OnUpdate",
        "body": "components.embarker:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.emitter:Emit:": {
        "prefix": "components.emitter:Emit",
        "body": "components.emitter:Emit()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.entitytracker:TrackEntity:": {
        "prefix": "components.entitytracker:TrackEntity",
        "body": "components.entitytracker:TrackEntity(${1:name},${2:inst})",
        "description": " ※Params: \n   (name)<>[] \n   (inst)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.entitytracker:GetDebugString:": {
        "prefix": "components.entitytracker:GetDebugString",
        "body": "components.entitytracker:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.entitytracker:LoadPostPass:": {
        "prefix": "components.entitytracker:LoadPostPass",
        "body": "components.entitytracker:LoadPostPass(${1:ents},${2:data})",
        "description": " ※Params: \n   (ents)<>[] \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.entitytracker:ForgetEntity:": {
        "prefix": "components.entitytracker:ForgetEntity",
        "body": "components.entitytracker:ForgetEntity(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.entitytracker:GetEntity:": {
        "prefix": "components.entitytracker:GetEntity",
        "body": "components.entitytracker:GetEntity(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.entitytracker:OnSave:": {
        "prefix": "components.entitytracker:OnSave",
        "body": "components.entitytracker:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.entitytracker:OnRemoveFromEntity:": {
        "prefix": "components.entitytracker:OnRemoveFromEntity",
        "body": "components.entitytracker:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.epicscare:SetDefaultDuration:": {
        "prefix": "components.epicscare:SetDefaultDuration",
        "body": "components.epicscare:SetDefaultDuration(${1:duration})",
        "description": " ※Params: \n   (duration)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.epicscare:Scare:": {
        "prefix": "components.epicscare:Scare",
        "body": "components.epicscare:Scare(${1:duration})",
        "description": " ※Params: \n   (duration)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.epicscare:SetRange:": {
        "prefix": "components.epicscare:SetRange",
        "body": "components.epicscare:SetRange(${1:range})",
        "description": " ※Params: \n   (range)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.equippable:IsInsulated:": {
        "prefix": "components.equippable:IsInsulated",
        "body": "components.equippable:IsInsulated()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.equippable:SetOnUnequip:": {
        "prefix": "components.equippable:SetOnUnequip",
        "body": "components.equippable:SetOnUnequip(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.equippable:ShouldPreventUnequipping:": {
        "prefix": "components.equippable:ShouldPreventUnequipping",
        "body": "components.equippable:ShouldPreventUnequipping()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.equippable:SetDappernessFn:": {
        "prefix": "components.equippable:SetDappernessFn",
        "body": "components.equippable:SetDappernessFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.equippable:IsRestricted:": {
        "prefix": "components.equippable:IsRestricted",
        "body": "components.equippable:IsRestricted(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.equippable:GetDapperness:": {
        "prefix": "components.equippable:GetDapperness",
        "body": "components.equippable:GetDapperness(${1:owner},${2:ignore_wetness})",
        "description": " ※Params: \n   (owner)<>[] \n   (ignore_wetness)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.equippable:SetOnPocket:": {
        "prefix": "components.equippable:SetOnPocket",
        "body": "components.equippable:SetOnPocket(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.equippable:OnRemoveFromEntity:": {
        "prefix": "components.equippable:OnRemoveFromEntity",
        "body": "components.equippable:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.equippable:SetOnEquip:": {
        "prefix": "components.equippable:SetOnEquip",
        "body": "components.equippable:SetOnEquip(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.equippable:Equip:": {
        "prefix": "components.equippable:Equip",
        "body": "components.equippable:Equip(${1:owner},${2:from_ground})",
        "description": " ※Params: \n   (owner)<>[] \n   (from_ground)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.equippable:Unequip:": {
        "prefix": "components.equippable:Unequip",
        "body": "components.equippable:Unequip(${1:owner})",
        "description": " ※Params: \n   (owner)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.equippable:GetEquippedMoisture:": {
        "prefix": "components.equippable:GetEquippedMoisture",
        "body": "components.equippable:GetEquippedMoisture()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.equippable:GetWalkSpeedMult:": {
        "prefix": "components.equippable:GetWalkSpeedMult",
        "body": "components.equippable:GetWalkSpeedMult()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.equippable:SetPreventUnequipping:": {
        "prefix": "components.equippable:SetPreventUnequipping",
        "body": "components.equippable:SetPreventUnequipping(${1:shouldprevent})",
        "description": " ※Params: \n   (shouldprevent)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.equippable:IsRestricted_FromLoad:": {
        "prefix": "components.equippable:IsRestricted_FromLoad",
        "body": "components.equippable:IsRestricted_FromLoad(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.equippable:IsEquipped:": {
        "prefix": "components.equippable:IsEquipped",
        "body": "components.equippable:IsEquipped()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.equippable:SetOnEquipToModel:": {
        "prefix": "components.equippable:SetOnEquipToModel",
        "body": "components.equippable:SetOnEquipToModel(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.equippable:ToPocket:": {
        "prefix": "components.equippable:ToPocket",
        "body": "components.equippable:ToPocket(${1:owner})",
        "description": " ※Params: \n   (owner)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.erasablepaper:DoErase:": {
        "prefix": "components.erasablepaper:DoErase",
        "body": "components.erasablepaper:DoErase(${1:eraser},${2:doer})",
        "description": " ※Params: \n   (eraser)<>[] \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.erasablepaper:SetStackSize:": {
        "prefix": "components.erasablepaper:SetStackSize",
        "body": "components.erasablepaper:SetStackSize(${1:size})",
        "description": " ※Params: \n   (size)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.erasablepaper:SetErasedPrefab:": {
        "prefix": "components.erasablepaper:SetErasedPrefab",
        "body": "components.erasablepaper:SetErasedPrefab(${1:prefab})",
        "description": " ※Params: \n   (prefab)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.experiencecollector:UpdateXp:": {
        "prefix": "components.experiencecollector:UpdateXp",
        "body": "components.experiencecollector:UpdateXp()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.experiencecollector:LongUpdate:": {
        "prefix": "components.experiencecollector:LongUpdate",
        "body": "components.experiencecollector:LongUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.experiencecollector:SetTask:": {
        "prefix": "components.experiencecollector:SetTask",
        "body": "components.experiencecollector:SetTask(${1:time})",
        "description": " ※Params: \n   (time)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.experiencecollector:OnSave:": {
        "prefix": "components.experiencecollector:OnSave",
        "body": "components.experiencecollector:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.experiencecollector:OnLoad:": {
        "prefix": "components.experiencecollector:OnLoad",
        "body": "components.experiencecollector:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.expertsailor:GetAnchorRaisingSpeed:": {
        "prefix": "components.expertsailor:GetAnchorRaisingSpeed",
        "body": "components.expertsailor:GetAnchorRaisingSpeed()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.expertsailor:GetRowForceMultiplier:": {
        "prefix": "components.expertsailor:GetRowForceMultiplier",
        "body": "components.expertsailor:GetRowForceMultiplier()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.expertsailor:SetLowerSailStrength:": {
        "prefix": "components.expertsailor:SetLowerSailStrength",
        "body": "components.expertsailor:SetLowerSailStrength(${1:strength})",
        "description": " ※Params: \n   (strength)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.expertsailor:SetRowExtraMaxVelocity:": {
        "prefix": "components.expertsailor:SetRowExtraMaxVelocity",
        "body": "components.expertsailor:SetRowExtraMaxVelocity(${1:vel})",
        "description": " ※Params: \n   (vel)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.expertsailor:SetAnchorRaisingSpeed:": {
        "prefix": "components.expertsailor:SetAnchorRaisingSpeed",
        "body": "components.expertsailor:SetAnchorRaisingSpeed(${1:speed})",
        "description": " ※Params: \n   (speed)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.expertsailor:SetRowForceMultiplier:": {
        "prefix": "components.expertsailor:SetRowForceMultiplier",
        "body": "components.expertsailor:SetRowForceMultiplier(${1:force})",
        "description": " ※Params: \n   (force)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.expertsailor:GetLowerSailStrength:": {
        "prefix": "components.expertsailor:GetLowerSailStrength",
        "body": "components.expertsailor:GetLowerSailStrength()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.expertsailor:GetRowExtraMaxVelocity:": {
        "prefix": "components.expertsailor:GetRowExtraMaxVelocity",
        "body": "components.expertsailor:GetRowExtraMaxVelocity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.explosive:SetPvpAttacker:": {
        "prefix": "components.explosive:SetPvpAttacker",
        "body": "components.explosive:SetPvpAttacker(${1:attacker})",
        "description": " ※Params: \n   (attacker)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.explosive:SetAttacker:": {
        "prefix": "components.explosive:SetAttacker",
        "body": "components.explosive:SetAttacker(${1:attacker})",
        "description": " ※Params: \n   (attacker)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.explosive:SetOnExplodeFn:": {
        "prefix": "components.explosive:SetOnExplodeFn",
        "body": "components.explosive:SetOnExplodeFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.explosive:OnBurnt:": {
        "prefix": "components.explosive:OnBurnt",
        "body": "components.explosive:OnBurnt()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.explosiveresist:OnExplosiveDamage:": {
        "prefix": "components.explosiveresist:OnExplosiveDamage",
        "body": "components.explosiveresist:OnExplosiveDamage(${1:damage},${2:src})",
        "description": " ※Params: \n   (damage)<>[] \n   (src)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.explosiveresist:GetResistance:": {
        "prefix": "components.explosiveresist:GetResistance",
        "body": "components.explosiveresist:GetResistance()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.explosiveresist:GetDebugString:": {
        "prefix": "components.explosiveresist:GetDebugString",
        "body": "components.explosiveresist:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.explosiveresist:OnLoad:": {
        "prefix": "components.explosiveresist:OnLoad",
        "body": "components.explosiveresist:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.explosiveresist:DoDelta:": {
        "prefix": "components.explosiveresist:DoDelta",
        "body": "components.explosiveresist:DoDelta(${1:delta})",
        "description": " ※Params: \n   (delta)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.explosiveresist:SetResistance:": {
        "prefix": "components.explosiveresist:SetResistance",
        "body": "components.explosiveresist:SetResistance(${1:resistance})",
        "description": " ※Params: \n   (resistance)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.explosiveresist:OnSave:": {
        "prefix": "components.explosiveresist:OnSave",
        "body": "components.explosiveresist:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.explosiveresist:OnUpdate:": {
        "prefix": "components.explosiveresist:OnUpdate",
        "body": "components.explosiveresist:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fader:Fade:": {
        "prefix": "components.fader:Fade",
        "body": "components.fader:Fade(${1:startval},${2:endval},${3:time},${4:setter},${5:atend},${6:id})",
        "description": " ※Params: \n   (startval)<>[] \n   (endval)<>[] \n   (time)<>[] \n   (setter)<>[] \n   (atend)<>[] \n   (id)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fader:StopAll:": {
        "prefix": "components.fader:StopAll",
        "body": "components.fader:StopAll()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.fader:OnUpdate:": {
        "prefix": "components.fader:OnUpdate",
        "body": "components.fader:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fan:Fan:": {
        "prefix": "components.fan:Fan",
        "body": "components.fan:Fan(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fan:SetCanUseFn:": {
        "prefix": "components.fan:SetCanUseFn",
        "body": "components.fan:SetCanUseFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fan:SetOnChannelingFn:": {
        "prefix": "components.fan:SetOnChannelingFn",
        "body": "components.fan:SetOnChannelingFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fan:SetOverrideSymbol:": {
        "prefix": "components.fan:SetOverrideSymbol",
        "body": "components.fan:SetOverrideSymbol(${1:symbol})",
        "description": " ※Params: \n   (symbol)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fan:SetOnUseFn:": {
        "prefix": "components.fan:SetOnUseFn",
        "body": "components.fan:SetOnUseFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fan:Channel:": {
        "prefix": "components.fan:Channel",
        "body": "components.fan:Channel(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fan:IsChanneling:": {
        "prefix": "components.fan:IsChanneling",
        "body": "components.fan:IsChanneling()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.fan:OnRemoveFromEntity:": {
        "prefix": "components.fan:OnRemoveFromEntity",
        "body": "components.fan:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.farmplantable:Plant:": {
        "prefix": "components.farmplantable:Plant",
        "body": "components.farmplantable:Plant(${1:target},${2:planter})",
        "description": " ※Params: \n   (target)<>[] \n   (planter)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.farmplantstress:GetFinalStressState:": {
        "prefix": "components.farmplantstress:GetFinalStressState",
        "body": "components.farmplantstress:GetFinalStressState()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.farmplantstress:GetDebugString:": {
        "prefix": "components.farmplantstress:GetDebugString",
        "body": "components.farmplantstress:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.farmplantstress:OnLoad:": {
        "prefix": "components.farmplantstress:OnLoad",
        "body": "components.farmplantstress:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.farmplantstress:AddStressCategory:": {
        "prefix": "components.farmplantstress:AddStressCategory",
        "body": "components.farmplantstress:AddStressCategory(${1:name},${2:testfn},${3:onchangefn})",
        "description": " ※Params: \n   (name)<>[] \n   (testfn)<>[] \n   (onchangefn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.farmplantstress:SetStressed:": {
        "prefix": "components.farmplantstress:SetStressed",
        "body": "components.farmplantstress:SetStressed(${1:name},${2:stressed},${3:doer})",
        "description": " ※Params: \n   (name)<>[] \n   (stressed)<>[] \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.farmplantstress:OnInteractWith:": {
        "prefix": "components.farmplantstress:OnInteractWith",
        "body": "components.farmplantstress:OnInteractWith(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.farmplantstress:CopyFrom:": {
        "prefix": "components.farmplantstress:CopyFrom",
        "body": "components.farmplantstress:CopyFrom(${1:rhs})",
        "description": " ※Params: \n   (rhs)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.farmplantstress:GetStressDescription:": {
        "prefix": "components.farmplantstress:GetStressDescription",
        "body": "components.farmplantstress:GetStressDescription(${1:viewer})",
        "description": " ※Params: \n   (viewer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.farmplantstress:CalcFinalStressState:": {
        "prefix": "components.farmplantstress:CalcFinalStressState",
        "body": "components.farmplantstress:CalcFinalStressState()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.farmplantstress:MakeCheckpoint:": {
        "prefix": "components.farmplantstress:MakeCheckpoint",
        "body": "components.farmplantstress:MakeCheckpoint()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.farmplantstress:OnSave:": {
        "prefix": "components.farmplantstress:OnSave",
        "body": "components.farmplantstress:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.farmplantstress:Reset:": {
        "prefix": "components.farmplantstress:Reset",
        "body": "components.farmplantstress:Reset()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.farmplanttendable:OnLoad:": {
        "prefix": "components.farmplanttendable:OnLoad",
        "body": "components.farmplanttendable:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.farmplanttendable:TendTo:": {
        "prefix": "components.farmplanttendable:TendTo",
        "body": "components.farmplanttendable:TendTo(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.farmplanttendable:OnSave:": {
        "prefix": "components.farmplanttendable:OnSave",
        "body": "components.farmplanttendable:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.farmplanttendable:SetTendable:": {
        "prefix": "components.farmplanttendable:SetTendable",
        "body": "components.farmplanttendable:SetTendable(${1:tendable})",
        "description": " ※Params: \n   (tendable)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.farmsoildrinker:CalcPercentTimeHydrated:": {
        "prefix": "components.farmsoildrinker:CalcPercentTimeHydrated",
        "body": "components.farmsoildrinker:CalcPercentTimeHydrated()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.farmsoildrinker:Reset:": {
        "prefix": "components.farmsoildrinker:Reset",
        "body": "components.farmsoildrinker:Reset()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.farmsoildrinker:OnSoilMoistureStateChange:": {
        "prefix": "components.farmsoildrinker:OnSoilMoistureStateChange",
        "body": "components.farmsoildrinker:OnSoilMoistureStateChange(${1:cur_state},${2:prev_state})",
        "description": " ※Params: \n   (cur_state)<>[] \n   (prev_state)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.farmsoildrinker:GetDebugString:": {
        "prefix": "components.farmsoildrinker:GetDebugString",
        "body": "components.farmsoildrinker:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.farmsoildrinker:CopyFrom:": {
        "prefix": "components.farmsoildrinker:CopyFrom",
        "body": "components.farmsoildrinker:CopyFrom(${1:rhs})",
        "description": " ※Params: \n   (rhs)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.farmsoildrinker:OnLoad:": {
        "prefix": "components.farmsoildrinker:OnLoad",
        "body": "components.farmsoildrinker:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.farmsoildrinker:GetMoistureRate:": {
        "prefix": "components.farmsoildrinker:GetMoistureRate",
        "body": "components.farmsoildrinker:GetMoistureRate()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.farmsoildrinker:UpdateMoistureTime:": {
        "prefix": "components.farmsoildrinker:UpdateMoistureTime",
        "body": "components.farmsoildrinker:UpdateMoistureTime(${1:is_soil_moist},${2:was_soil_moist})",
        "description": " ※Params: \n   (is_soil_moist)<>[] \n   (was_soil_moist)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.farmsoildrinker:OnSave:": {
        "prefix": "components.farmsoildrinker:OnSave",
        "body": "components.farmsoildrinker:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.farmsoildrinker:OnRemoveFromEntity:": {
        "prefix": "components.farmsoildrinker:OnRemoveFromEntity",
        "body": "components.farmsoildrinker:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.farmtiller:Till:": {
        "prefix": "components.farmtiller:Till",
        "body": "components.farmtiller:Till(${1:pt},${2:doer})",
        "description": " ※Params: \n   (pt)<>[] \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fencerotator:Rotate:": {
        "prefix": "components.fencerotator:Rotate",
        "body": "components.fencerotator:Rotate(${1:target},${2:delta})",
        "description": " ※Params: \n   (target)<>[] \n   (delta)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fertilizable:Fertilize:": {
        "prefix": "components.fertilizable:Fertilize",
        "body": "components.fertilizable:Fertilize(${1:fertilizer})",
        "description": " ※Params: \n   (fertilizer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fertilizer:SetNutrients:": {
        "prefix": "components.fertilizer:SetNutrients",
        "body": "components.fertilizer:SetNutrients(${1:nutrient1},${2:nutrient2},${3:nutrient3})",
        "description": " ※Params: \n   (nutrient1)<>[] \n   (nutrient2)<>[] \n   (nutrient3)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fertilizer:OnApplied:": {
        "prefix": "components.fertilizer:OnApplied",
        "body": "components.fertilizer:OnApplied(${1:doer},${2:target})",
        "description": " ※Params: \n   (doer)<>[] \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fertilizer:Heal:": {
        "prefix": "components.fertilizer:Heal",
        "body": "components.fertilizer:Heal(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fertilizer:SetHealingAmount:": {
        "prefix": "components.fertilizer:SetHealingAmount",
        "body": "components.fertilizer:SetHealingAmount(${1:health})",
        "description": " ※Params: \n   (health)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fertilizer:OnRemoveFromEntity:": {
        "prefix": "components.fertilizer:OnRemoveFromEntity",
        "body": "components.fertilizer:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.fertilizerresearchable:SetResearchFn:": {
        "prefix": "components.fertilizerresearchable:SetResearchFn",
        "body": "components.fertilizerresearchable:SetResearchFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fertilizerresearchable:GetResearchInfo:": {
        "prefix": "components.fertilizerresearchable:GetResearchInfo",
        "body": "components.fertilizerresearchable:GetResearchInfo()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.fertilizerresearchable:LearnFertilizer:": {
        "prefix": "components.fertilizerresearchable:LearnFertilizer",
        "body": "components.fertilizerresearchable:LearnFertilizer(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fillable:Fill:": {
        "prefix": "components.fillable:Fill",
        "body": "components.fillable:Fill(${1:from_object})",
        "description": " ※Params: \n   (from_object)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.finiteuses:SetPercent:": {
        "prefix": "components.finiteuses:SetPercent",
        "body": "components.finiteuses:SetPercent(${1:amount})",
        "description": " ※Params: \n   (amount)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.finiteuses:SetConsumption:": {
        "prefix": "components.finiteuses:SetConsumption",
        "body": "components.finiteuses:SetConsumption(${1:action},${2:uses})",
        "description": " ※Params: \n   (action)<>[] \n   (uses)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.finiteuses:SetMaxUses:": {
        "prefix": "components.finiteuses:SetMaxUses",
        "body": "components.finiteuses:SetMaxUses(${1:val})",
        "description": " ※Params: \n   (val)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.finiteuses:OnLoad:": {
        "prefix": "components.finiteuses:OnLoad",
        "body": "components.finiteuses:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.finiteuses:SetDoesNotStartFull:": {
        "prefix": "components.finiteuses:SetDoesNotStartFull",
        "body": "components.finiteuses:SetDoesNotStartFull(${1:enabled})",
        "description": " ※Params: \n   (enabled)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.finiteuses:SetIgnoreCombatDurabilityLoss:": {
        "prefix": "components.finiteuses:SetIgnoreCombatDurabilityLoss",
        "body": "components.finiteuses:SetIgnoreCombatDurabilityLoss(${1:value})",
        "description": " ※Params: \n   (value)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.finiteuses:OnRemoveFromEntity:": {
        "prefix": "components.finiteuses:OnRemoveFromEntity",
        "body": "components.finiteuses:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.finiteuses:Repair:": {
        "prefix": "components.finiteuses:Repair",
        "body": "components.finiteuses:Repair(${1:repairvalue})",
        "description": " ※Params: \n   (repairvalue)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.finiteuses:GetPercent:": {
        "prefix": "components.finiteuses:GetPercent",
        "body": "components.finiteuses:GetPercent()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.finiteuses:IgnoresCombatDurabilityLoss:": {
        "prefix": "components.finiteuses:IgnoresCombatDurabilityLoss",
        "body": "components.finiteuses:IgnoresCombatDurabilityLoss()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.finiteuses:SetOnFinished:": {
        "prefix": "components.finiteuses:SetOnFinished",
        "body": "components.finiteuses:SetOnFinished(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.finiteuses:GetDebugString:": {
        "prefix": "components.finiteuses:GetDebugString",
        "body": "components.finiteuses:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.finiteuses:GetUses:": {
        "prefix": "components.finiteuses:GetUses",
        "body": "components.finiteuses:GetUses()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.finiteuses:OnUsedAsItem:": {
        "prefix": "components.finiteuses:OnUsedAsItem",
        "body": "components.finiteuses:OnUsedAsItem(${1:action},${2:doer},${3:target})",
        "description": " ※Params: \n   (action)<>[] \n   (doer)<>[] \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.finiteuses:Use:": {
        "prefix": "components.finiteuses:Use",
        "body": "components.finiteuses:Use(${1:num})",
        "description": " ※Params: \n   (num)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.finiteuses:OnSave:": {
        "prefix": "components.finiteuses:OnSave",
        "body": "components.finiteuses:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.finiteuses:SetUses:": {
        "prefix": "components.finiteuses:SetUses",
        "body": "components.finiteuses:SetUses(${1:val})",
        "description": " ※Params: \n   (val)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.firebug:GetDebugString:": {
        "prefix": "components.firebug:GetDebugString",
        "body": "components.firebug:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.firebug:OnUpdate:": {
        "prefix": "components.firebug:OnUpdate",
        "body": "components.firebug:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.firebug:Enable:": {
        "prefix": "components.firebug:Enable",
        "body": "components.firebug:Enable(${1:enable})",
        "description": " ※Params: \n   (enable)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.firebug:Disable:": {
        "prefix": "components.firebug:Disable",
        "body": "components.firebug:Disable()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.firedetector:Activate:": {
        "prefix": "components.firedetector:Activate",
        "body": "components.firedetector:Activate(${1:randomizedStartTime})",
        "description": " ※Params: \n   (randomizedStartTime)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.firedetector:SetOnBeginEmergencyFn:": {
        "prefix": "components.firedetector:SetOnBeginEmergencyFn",
        "body": "components.firedetector:SetOnBeginEmergencyFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.firedetector:IsEmergency:": {
        "prefix": "components.firedetector:IsEmergency",
        "body": "components.firedetector:IsEmergency()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.firedetector:SetOnEndEmergencyFn:": {
        "prefix": "components.firedetector:SetOnEndEmergencyFn",
        "body": "components.firedetector:SetOnEndEmergencyFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.firedetector:GetEmergencyLevel:": {
        "prefix": "components.firedetector:GetEmergencyLevel",
        "body": "components.firedetector:GetEmergencyLevel()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.firedetector:DetectFire:": {
        "prefix": "components.firedetector:DetectFire",
        "body": "components.firedetector:DetectFire()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.firedetector:SetOnBeginWarningFn:": {
        "prefix": "components.firedetector:SetOnBeginWarningFn",
        "body": "components.firedetector:SetOnBeginWarningFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.firedetector:OnRemoveFromEntity:": {
        "prefix": "components.firedetector:OnRemoveFromEntity",
        "body": "components.firedetector:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.firedetector:RaiseEmergencyLevel:": {
        "prefix": "components.firedetector:RaiseEmergencyLevel",
        "body": "components.firedetector:RaiseEmergencyLevel(${1:numlevels})",
        "description": " ※Params: \n   (numlevels)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.firedetector:SetOnEndWarningFn:": {
        "prefix": "components.firedetector:SetOnEndWarningFn",
        "body": "components.firedetector:SetOnEndWarningFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.firedetector:SetOnFindFireFn:": {
        "prefix": "components.firedetector:SetOnFindFireFn",
        "body": "components.firedetector:SetOnFindFireFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.firedetector:LowerEmergencyLevel:": {
        "prefix": "components.firedetector:LowerEmergencyLevel",
        "body": "components.firedetector:LowerEmergencyLevel(${1:numlevels})",
        "description": " ※Params: \n   (numlevels)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.firedetector:SetOnUpdateWarningFn:": {
        "prefix": "components.firedetector:SetOnUpdateWarningFn",
        "body": "components.firedetector:SetOnUpdateWarningFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.firedetector:GetDebugString:": {
        "prefix": "components.firedetector:GetDebugString",
        "body": "components.firedetector:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.firedetector:Deactivate:": {
        "prefix": "components.firedetector:Deactivate",
        "body": "components.firedetector:Deactivate()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.firedetector:ActivateEmergencyMode:": {
        "prefix": "components.firedetector:ActivateEmergencyMode",
        "body": "components.firedetector:ActivateEmergencyMode(${1:randomizedStartTime})",
        "description": " ※Params: \n   (randomizedStartTime)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.firedetector:GetMaxEmergencyLevel:": {
        "prefix": "components.firedetector:GetMaxEmergencyLevel",
        "body": "components.firedetector:GetMaxEmergencyLevel()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.firedetector:ResetEmergencyCooldown:": {
        "prefix": "components.firedetector:ResetEmergencyCooldown",
        "body": "components.firedetector:ResetEmergencyCooldown()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.firefx:Extinguish:": {
        "prefix": "components.firefx:Extinguish",
        "body": "components.firefx:Extinguish(${1:fast})",
        "description": " ※Params: \n   (fast)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.firefx:UpdateRadius:": {
        "prefix": "components.firefx:UpdateRadius",
        "body": "components.firefx:UpdateRadius()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.firefx:AttachLightTo:": {
        "prefix": "components.firefx:AttachLightTo",
        "body": "components.firefx:AttachLightTo(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.firefx:GetLevelRadius:": {
        "prefix": "components.firefx:GetLevelRadius",
        "body": "components.firefx:GetLevelRadius(${1:level})",
        "description": " ※Params: \n   (level)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.firefx:OnEntityWake:": {
        "prefix": "components.firefx:OnEntityWake",
        "body": "components.firefx:OnEntityWake()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.firefx:SetPercentInLevel:": {
        "prefix": "components.firefx:SetPercentInLevel",
        "body": "components.firefx:SetPercentInLevel(${1:percent})",
        "description": " ※Params: \n   (percent)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.firefx:SetLevel:": {
        "prefix": "components.firefx:SetLevel",
        "body": "components.firefx:SetLevel(${1:lev},${2:immediate},${3:controlled_burn})",
        "description": " ※Params: \n   (lev)<>[] \n   (immediate)<>[] \n   (controlled_burn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.firefx:OnEntitySleep:": {
        "prefix": "components.firefx:OnEntitySleep",
        "body": "components.firefx:OnEntitySleep()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.firefx:OnUpdate:": {
        "prefix": "components.firefx:OnUpdate",
        "body": "components.firefx:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.firefx:OnRemoveEntity:": {
        "prefix": "components.firefx:OnRemoveEntity",
        "body": "components.firefx:OnRemoveEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.fishable:HookFish:": {
        "prefix": "components.fishable:HookFish",
        "body": "components.fishable:HookFish(${1:fisherman})",
        "description": " ※Params: \n   (fisherman)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fishable:IsFrozenOver:": {
        "prefix": "components.fishable:IsFrozenOver",
        "body": "components.fishable:IsFrozenOver()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.fishable:RefreshFish:": {
        "prefix": "components.fishable:RefreshFish",
        "body": "components.fishable:RefreshFish()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.fishable:AddFish:": {
        "prefix": "components.fishable:AddFish",
        "body": "components.fishable:AddFish(${1:prefab})",
        "description": " ※Params: \n   (prefab)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fishable:GetFishPercent:": {
        "prefix": "components.fishable:GetFishPercent",
        "body": "components.fishable:GetFishPercent()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.fishable:SetGetFishFn:": {
        "prefix": "components.fishable:SetGetFishFn",
        "body": "components.fishable:SetGetFishFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fishable:OnLoad:": {
        "prefix": "components.fishable:OnLoad",
        "body": "components.fishable:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fishable:RemoveFish:": {
        "prefix": "components.fishable:RemoveFish",
        "body": "components.fishable:RemoveFish(${1:fish})",
        "description": " ※Params: \n   (fish)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fishable:SetRespawnTime:": {
        "prefix": "components.fishable:SetRespawnTime",
        "body": "components.fishable:SetRespawnTime(${1:time})",
        "description": " ※Params: \n   (time)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fishable:GetDebugString:": {
        "prefix": "components.fishable:GetDebugString",
        "body": "components.fishable:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.fishable:Unfreeze:": {
        "prefix": "components.fishable:Unfreeze",
        "body": "components.fishable:Unfreeze()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.fishable:ReleaseFish:": {
        "prefix": "components.fishable:ReleaseFish",
        "body": "components.fishable:ReleaseFish(${1:fish})",
        "description": " ※Params: \n   (fish)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fishable:Freeze:": {
        "prefix": "components.fishable:Freeze",
        "body": "components.fishable:Freeze()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.fishable:OnSave:": {
        "prefix": "components.fishable:OnSave",
        "body": "components.fishable:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.fishable:OnRemoveFromEntity:": {
        "prefix": "components.fishable:OnRemoveFromEntity",
        "body": "components.fishable:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.fishingnet:CastNet:": {
        "prefix": "components.fishingnet:CastNet",
        "body": "components.fishingnet:CastNet(${1:pos_x},${2:pos_z},${3:doer})",
        "description": " ※Params: \n   (pos_x)<>[] \n   (pos_z)<>[] \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fishingnetvisualizer:BeginOpening:": {
        "prefix": "components.fishingnetvisualizer:BeginOpening",
        "body": "components.fishingnetvisualizer:BeginOpening()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.fishingnetvisualizer:UpdateWhenMovingToTarget:": {
        "prefix": "components.fishingnetvisualizer:UpdateWhenMovingToTarget",
        "body": "components.fishingnetvisualizer:UpdateWhenMovingToTarget(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fishingnetvisualizer:BeginCast:": {
        "prefix": "components.fishingnetvisualizer:BeginCast",
        "body": "components.fishingnetvisualizer:BeginCast(${1:thrower},${2:target_x},${3:target_z})",
        "description": " ※Params: \n   (thrower)<>[] \n   (target_x)<>[] \n   (target_z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fishingnetvisualizer:CalculateY:": {
        "prefix": "components.fishingnetvisualizer:CalculateY",
        "body": "components.fishingnetvisualizer:CalculateY(${1:x},${2:x_span},${3:scale})",
        "description": " ※Params: \n   (x)<>[] \n   (x_span)<>[] \n   (scale)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fishingnetvisualizer:BeginRetrieving:": {
        "prefix": "components.fishingnetvisualizer:BeginRetrieving",
        "body": "components.fishingnetvisualizer:BeginRetrieving()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.fishingnetvisualizer:BeginFinalPickup:": {
        "prefix": "components.fishingnetvisualizer:BeginFinalPickup",
        "body": "components.fishingnetvisualizer:BeginFinalPickup()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.fishingnetvisualizer:UpdateWhenRetrieving:": {
        "prefix": "components.fishingnetvisualizer:UpdateWhenRetrieving",
        "body": "components.fishingnetvisualizer:UpdateWhenRetrieving(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fishingnetvisualizer:UpdateWhenOpening:": {
        "prefix": "components.fishingnetvisualizer:UpdateWhenOpening",
        "body": "components.fishingnetvisualizer:UpdateWhenOpening(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fishingnetvisualizer:DropItem:": {
        "prefix": "components.fishingnetvisualizer:DropItem",
        "body": "components.fishingnetvisualizer:DropItem(${1:item},${2:last_dir_x},${3:last_dir_z},${4:idx})",
        "description": " ※Params: \n   (item)<>[] \n   (last_dir_x)<>[] \n   (last_dir_z)<>[] \n   (idx)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fishingrod:FishIsBiting:": {
        "prefix": "components.fishingrod:FishIsBiting",
        "body": "components.fishingrod:FishIsBiting()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.fishingrod:CancelFishTask:": {
        "prefix": "components.fishingrod:CancelFishTask",
        "body": "components.fishingrod:CancelFishTask()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.fishingrod:Reel:": {
        "prefix": "components.fishingrod:Reel",
        "body": "components.fishingrod:Reel()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.fishingrod:SetStrainTimes:": {
        "prefix": "components.fishingrod:SetStrainTimes",
        "body": "components.fishingrod:SetStrainTimes(${1:min},${2:max})",
        "description": " ※Params: \n   (min)<>[] \n   (max)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fishingrod:Collect:": {
        "prefix": "components.fishingrod:Collect",
        "body": "components.fishingrod:Collect()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.fishingrod:Release:": {
        "prefix": "components.fishingrod:Release",
        "body": "components.fishingrod:Release()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.fishingrod:WaitForFish:": {
        "prefix": "components.fishingrod:WaitForFish",
        "body": "components.fishingrod:WaitForFish()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.fishingrod:StopFishing:": {
        "prefix": "components.fishingrod:StopFishing",
        "body": "components.fishingrod:StopFishing()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.fishingrod:Hook:": {
        "prefix": "components.fishingrod:Hook",
        "body": "components.fishingrod:Hook()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.fishingrod:HasCaughtFish:": {
        "prefix": "components.fishingrod:HasCaughtFish",
        "body": "components.fishingrod:HasCaughtFish()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.fishingrod:GetDebugString:": {
        "prefix": "components.fishingrod:GetDebugString",
        "body": "components.fishingrod:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.fishingrod:SetWaitTimes:": {
        "prefix": "components.fishingrod:SetWaitTimes",
        "body": "components.fishingrod:SetWaitTimes(${1:min},${2:max})",
        "description": " ※Params: \n   (min)<>[] \n   (max)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fishingrod:StartFishing:": {
        "prefix": "components.fishingrod:StartFishing",
        "body": "components.fishingrod:StartFishing(${1:target},${2:fisherman})",
        "description": " ※Params: \n   (target)<>[] \n   (fisherman)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fishingrod:IsFishing:": {
        "prefix": "components.fishingrod:IsFishing",
        "body": "components.fishingrod:IsFishing()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.fishingrod:HasHookedFish:": {
        "prefix": "components.fishingrod:HasHookedFish",
        "body": "components.fishingrod:HasHookedFish()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.fishingrod:OnUpdate:": {
        "prefix": "components.fishingrod:OnUpdate",
        "body": "components.fishingrod:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fishschool:StopReplenish:": {
        "prefix": "components.fishschool:StopReplenish",
        "body": "components.fishschool:StopReplenish()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.fishschool:OnPreNet:": {
        "prefix": "components.fishschool:OnPreNet",
        "body": "components.fishschool:OnPreNet(${1:net})",
        "description": " ※Params: \n   (net)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fishschool:StartReplenish:": {
        "prefix": "components.fishschool:StartReplenish",
        "body": "components.fishschool:StartReplenish(${1:replenish_rate})",
        "description": " ※Params: \n   (replenish_rate)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fishschool:SetNettedPrefab:": {
        "prefix": "components.fishschool:SetNettedPrefab",
        "body": "components.fishschool:SetNettedPrefab(${1:fishing_net_prefab})",
        "description": " ※Params: \n   (fishing_net_prefab)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fishschool:Replenish:": {
        "prefix": "components.fishschool:Replenish",
        "body": "components.fishschool:Replenish()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.floater:IsFloating:": {
        "prefix": "components.floater:IsFloating",
        "body": "components.floater:IsFloating()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.floater:AttachEffect:": {
        "prefix": "components.floater:AttachEffect",
        "body": "components.floater:AttachEffect(${1:effect})",
        "description": " ※Params: \n   (effect)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.floater:SetSize:": {
        "prefix": "components.floater:SetSize",
        "body": "components.floater:SetSize(${1:size})",
        "description": " ※Params: \n   (size)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.floater:SetSwapData:": {
        "prefix": "components.floater:SetSwapData",
        "body": "components.floater:SetSwapData(${1:swap_data})",
        "description": " ※Params: \n   (swap_data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.floater:Erode:": {
        "prefix": "components.floater:Erode",
        "body": "components.floater:Erode(${1:erode_time})",
        "description": " ※Params: \n   (erode_time)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.floater:OnNoLongerLandedServer:": {
        "prefix": "components.floater:OnNoLongerLandedServer",
        "body": "components.floater:OnNoLongerLandedServer()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.floater:OnNoLongerLandedClient:": {
        "prefix": "components.floater:OnNoLongerLandedClient",
        "body": "components.floater:OnNoLongerLandedClient()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.floater:OnLandedClient:": {
        "prefix": "components.floater:OnLandedClient",
        "body": "components.floater:OnLandedClient()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.floater:SwitchToDefaultAnim:": {
        "prefix": "components.floater:SwitchToDefaultAnim",
        "body": "components.floater:SwitchToDefaultAnim(${1:force_switch})",
        "description": " ※Params: \n   (force_switch)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.floater:SetBankSwapOnFloat:": {
        "prefix": "components.floater:SetBankSwapOnFloat",
        "body": "components.floater:SetBankSwapOnFloat(${1:should_bank_swap},${2:float_index},${3:swap_data})",
        "description": " ※Params: \n   (should_bank_swap)<>[] \n   (float_index)<>[] \n   (swap_data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.floater:SetVerticalOffset:": {
        "prefix": "components.floater:SetVerticalOffset",
        "body": "components.floater:SetVerticalOffset(${1:offset})",
        "description": " ※Params: \n   (offset)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.floater:OnLandedServer:": {
        "prefix": "components.floater:OnLandedServer",
        "body": "components.floater:OnLandedServer()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.floater:SetIsObstacle:": {
        "prefix": "components.floater:SetIsObstacle",
        "body": "components.floater:SetIsObstacle(${1:bool})",
        "description": " ※Params: \n   (bool)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.floater:SwitchToFloatAnim:": {
        "prefix": "components.floater:SwitchToFloatAnim",
        "body": "components.floater:SwitchToFloatAnim()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.floater:ShouldShowEffect:": {
        "prefix": "components.floater:ShouldShowEffect",
        "body": "components.floater:ShouldShowEffect()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.floater:SetScale:": {
        "prefix": "components.floater:SetScale",
        "body": "components.floater:SetScale(${1:scale})",
        "description": " ※Params: \n   (scale)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.flotationdevice:OnPreventDrowningDamage:": {
        "prefix": "components.flotationdevice:OnPreventDrowningDamage",
        "body": "components.flotationdevice:OnPreventDrowningDamage()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.flotationdevice:IsEnabled:": {
        "prefix": "components.flotationdevice:IsEnabled",
        "body": "components.flotationdevice:IsEnabled()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.focalpoint:PushTempFocus:": {
        "prefix": "components.focalpoint:PushTempFocus",
        "body": "components.focalpoint:PushTempFocus(${1:target},${2:minrange},${3:maxrange},${4:priority})",
        "description": " ※Params: \n   (target)<>[] \n   (minrange)<>[] \n   (maxrange)<>[] \n   (priority)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.focalpoint:GetDebugString:": {
        "prefix": "components.focalpoint:GetDebugString",
        "body": "components.focalpoint:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.focalpoint:RemoveAllFocusSources:": {
        "prefix": "components.focalpoint:RemoveAllFocusSources",
        "body": "components.focalpoint:RemoveAllFocusSources(${1:no_snap})",
        "description": " ※Params: \n   (no_snap)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.focalpoint:CameraUpdate:": {
        "prefix": "components.focalpoint:CameraUpdate",
        "body": "components.focalpoint:CameraUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.focalpoint:StopFocusSource:": {
        "prefix": "components.focalpoint:StopFocusSource",
        "body": "components.focalpoint:StopFocusSource(${1:source},${2:id})",
        "description": " ※Params: \n   (source)<>[] \n   (id)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.focalpoint:StartFocusSource:": {
        "prefix": "components.focalpoint:StartFocusSource",
        "body": "components.focalpoint:StartFocusSource(${1:source},${2:id},${3:target},${4:minrange},${5:maxrange},${6:priority},${7:updater})",
        "description": " ※Params: \n   (source)<>[] \n   (id)<>[] \n   (target)<>[] \n   (minrange)<>[] \n   (maxrange)<>[] \n   (priority)<>[] \n   (updater)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.focalpoint:Reset:": {
        "prefix": "components.focalpoint:Reset",
        "body": "components.focalpoint:Reset(${1:no_snap})",
        "description": " ※Params: \n   (no_snap)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.follower:GetLeader:": {
        "prefix": "components.follower:GetLeader",
        "body": "components.follower:GetLeader()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.follower:KeepLeaderOnAttacked:": {
        "prefix": "components.follower:KeepLeaderOnAttacked",
        "body": "components.follower:KeepLeaderOnAttacked()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.follower:AddLoyaltyTime:": {
        "prefix": "components.follower:AddLoyaltyTime",
        "body": "components.follower:AddLoyaltyTime(${1:time})",
        "description": " ※Params: \n   (time)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.follower:OnLoad:": {
        "prefix": "components.follower:OnLoad",
        "body": "components.follower:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.follower:IsLeaderSame:": {
        "prefix": "components.follower:IsLeaderSame",
        "body": "components.follower:IsLeaderSame(${1:otherfollower})",
        "description": " ※Params: \n   (otherfollower)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.follower:CachePlayerLeader:": {
        "prefix": "components.follower:CachePlayerLeader",
        "body": "components.follower:CachePlayerLeader(${1:userid},${2:timeleft})",
        "description": " ※Params: \n   (userid)<>[] \n   (timeleft)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.follower:LoseLeaderOnAttacked:": {
        "prefix": "components.follower:LoseLeaderOnAttacked",
        "body": "components.follower:LoseLeaderOnAttacked()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.follower:StopFollowing:": {
        "prefix": "components.follower:StopFollowing",
        "body": "components.follower:StopFollowing()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.follower:OnRemoveFromEntity:": {
        "prefix": "components.follower:OnRemoveFromEntity",
        "body": "components.follower:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.follower:ClearCachedPlayerLeader:": {
        "prefix": "components.follower:ClearCachedPlayerLeader",
        "body": "components.follower:ClearCachedPlayerLeader()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.follower:SetLeader:": {
        "prefix": "components.follower:SetLeader",
        "body": "components.follower:SetLeader(${1:new_leader})",
        "description": " ※Params: \n   (new_leader)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.follower:StartLeashing:": {
        "prefix": "components.follower:StartLeashing",
        "body": "components.follower:StartLeashing()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.follower:LongUpdate:": {
        "prefix": "components.follower:LongUpdate",
        "body": "components.follower:LongUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.follower:GetDebugString:": {
        "prefix": "components.follower:GetDebugString",
        "body": "components.follower:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.follower:GetLoyaltyPercent:": {
        "prefix": "components.follower:GetLoyaltyPercent",
        "body": "components.follower:GetLoyaltyPercent()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.follower:CancelLoyaltyTask:": {
        "prefix": "components.follower:CancelLoyaltyTask",
        "body": "components.follower:CancelLoyaltyTask()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.follower:IsNearLeader:": {
        "prefix": "components.follower:IsNearLeader",
        "body": "components.follower:IsNearLeader(${1:dist})",
        "description": " ※Params: \n   (dist)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.follower:OnSave:": {
        "prefix": "components.follower:OnSave",
        "body": "components.follower:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.follower:StopLeashing:": {
        "prefix": "components.follower:StopLeashing",
        "body": "components.follower:StopLeashing()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.followerherder:CanHerd:": {
        "prefix": "components.followerherder:CanHerd",
        "body": "components.followerherder:CanHerd(${1:leader})",
        "description": " ※Params: \n   (leader)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.followerherder:Herd:": {
        "prefix": "components.followerherder:Herd",
        "body": "components.followerherder:Herd(${1:leader})",
        "description": " ※Params: \n   (leader)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.followerherder:SetUseAmount:": {
        "prefix": "components.followerherder:SetUseAmount",
        "body": "components.followerherder:SetUseAmount(${1:use_amount})",
        "description": " ※Params: \n   (use_amount)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.followerherder:SetOnHerdFn:": {
        "prefix": "components.followerherder:SetOnHerdFn",
        "body": "components.followerherder:SetOnHerdFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.followerherder:SetCanHerdFn:": {
        "prefix": "components.followerherder:SetCanHerdFn",
        "body": "components.followerherder:SetCanHerdFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.foodaffinity:AddFoodtypeAffinity:": {
        "prefix": "components.foodaffinity:AddFoodtypeAffinity",
        "body": "components.foodaffinity:AddFoodtypeAffinity(${1:foodtype},${2:bonus})",
        "description": " ※Params: \n   (foodtype)<>[] \n   (bonus)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.foodaffinity:GetAffinity:": {
        "prefix": "components.foodaffinity:GetAffinity",
        "body": "components.foodaffinity:GetAffinity(${1:food})",
        "description": " ※Params: \n   (food)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.foodaffinity:RemoveFoodtypeAffinity:": {
        "prefix": "components.foodaffinity:RemoveFoodtypeAffinity",
        "body": "components.foodaffinity:RemoveFoodtypeAffinity(${1:foodtype})",
        "description": " ※Params: \n   (foodtype)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.foodaffinity:AddPrefabAffinity:": {
        "prefix": "components.foodaffinity:AddPrefabAffinity",
        "body": "components.foodaffinity:AddPrefabAffinity(${1:prefab},${2:bonus})",
        "description": " ※Params: \n   (prefab)<>[] \n   (bonus)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.foodaffinity:SortAffinitiesByBonus:": {
        "prefix": "components.foodaffinity:SortAffinitiesByBonus",
        "body": "components.foodaffinity:SortAffinitiesByBonus(${1:affinities})",
        "description": " ※Params: \n   (affinities)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.foodaffinity:HasPrefabAffinity:": {
        "prefix": "components.foodaffinity:HasPrefabAffinity",
        "body": "components.foodaffinity:HasPrefabAffinity(${1:food})",
        "description": " ※Params: \n   (food)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.foodaffinity:GetFoodBasePrefab:": {
        "prefix": "components.foodaffinity:GetFoodBasePrefab",
        "body": "components.foodaffinity:GetFoodBasePrefab(${1:food})",
        "description": " ※Params: \n   (food)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.foodaffinity:RemoveTagAffinity:": {
        "prefix": "components.foodaffinity:RemoveTagAffinity",
        "body": "components.foodaffinity:RemoveTagAffinity(${1:tag})",
        "description": " ※Params: \n   (tag)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.foodaffinity:AddTagAffinity:": {
        "prefix": "components.foodaffinity:AddTagAffinity",
        "body": "components.foodaffinity:AddTagAffinity(${1:tag},${2:bonus})",
        "description": " ※Params: \n   (tag)<>[] \n   (bonus)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.foodaffinity:RemovePrefabAffinity:": {
        "prefix": "components.foodaffinity:RemovePrefabAffinity",
        "body": "components.foodaffinity:RemovePrefabAffinity(${1:prefab})",
        "description": " ※Params: \n   (prefab)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.foodaffinity:HasAffinity:": {
        "prefix": "components.foodaffinity:HasAffinity",
        "body": "components.foodaffinity:HasAffinity(${1:food})",
        "description": " ※Params: \n   (food)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.foodmemory:OnLoad:": {
        "prefix": "components.foodmemory:OnLoad",
        "body": "components.foodmemory:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.foodmemory:RememberFood:": {
        "prefix": "components.foodmemory:RememberFood",
        "body": "components.foodmemory:RememberFood(${1:prefab})",
        "description": " ※Params: \n   (prefab)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.foodmemory:SetDuration:": {
        "prefix": "components.foodmemory:SetDuration",
        "body": "components.foodmemory:SetDuration(${1:duration})",
        "description": " ※Params: \n   (duration)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.foodmemory:GetFoodMultiplier:": {
        "prefix": "components.foodmemory:GetFoodMultiplier",
        "body": "components.foodmemory:GetFoodMultiplier(${1:prefab})",
        "description": " ※Params: \n   (prefab)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.foodmemory:OnSave:": {
        "prefix": "components.foodmemory:OnSave",
        "body": "components.foodmemory:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.foodmemory:SetMultipliers:": {
        "prefix": "components.foodmemory:SetMultipliers",
        "body": "components.foodmemory:SetMultipliers(${1:mults})",
        "description": " ※Params: \n   (mults)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.foodmemory:GetMemoryCount:": {
        "prefix": "components.foodmemory:GetMemoryCount",
        "body": "components.foodmemory:GetMemoryCount(${1:prefab})",
        "description": " ※Params: \n   (prefab)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.foodmemory:OnRemoveFromEntity:": {
        "prefix": "components.foodmemory:OnRemoveFromEntity",
        "body": "components.foodmemory:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.forestdaywalkerspawner:GetPowerLevel:": {
        "prefix": "components.forestdaywalkerspawner:GetPowerLevel",
        "body": "components.forestdaywalkerspawner:GetPowerLevel()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.forestdaywalkerspawner:ShouldShakeJunk:": {
        "prefix": "components.forestdaywalkerspawner:ShouldShakeJunk",
        "body": "components.forestdaywalkerspawner:ShouldShakeJunk()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.forestdaywalkerspawner:WatchDaywalker:": {
        "prefix": "components.forestdaywalkerspawner:WatchDaywalker",
        "body": "components.forestdaywalkerspawner:WatchDaywalker(${1:daywalker})",
        "description": " ※Params: \n   (daywalker)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.forestdaywalkerspawner:TryToSetDayWalkerJunkPile:": {
        "prefix": "components.forestdaywalkerspawner:TryToSetDayWalkerJunkPile",
        "body": "components.forestdaywalkerspawner:TryToSetDayWalkerJunkPile()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.forestdaywalkerspawner:LoadPostPass:": {
        "prefix": "components.forestdaywalkerspawner:LoadPostPass",
        "body": "components.forestdaywalkerspawner:LoadPostPass(${1:ents},${2:data})",
        "description": " ※Params: \n   (ents)<>[] \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.forestdaywalkerspawner:OnPostInit:": {
        "prefix": "components.forestdaywalkerspawner:OnPostInit",
        "body": "components.forestdaywalkerspawner:OnPostInit()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.forestdaywalkerspawner:OnLoad:": {
        "prefix": "components.forestdaywalkerspawner:OnLoad",
        "body": "components.forestdaywalkerspawner:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.forestdaywalkerspawner:OnDayChange:": {
        "prefix": "components.forestdaywalkerspawner:OnDayChange",
        "body": "components.forestdaywalkerspawner:OnDayChange()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.forestdaywalkerspawner:IncrementPowerLevel:": {
        "prefix": "components.forestdaywalkerspawner:IncrementPowerLevel",
        "body": "components.forestdaywalkerspawner:IncrementPowerLevel()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.forestdaywalkerspawner:HasDaywalker:": {
        "prefix": "components.forestdaywalkerspawner:HasDaywalker",
        "body": "components.forestdaywalkerspawner:HasDaywalker()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.forestdaywalkerspawner:OnSave:": {
        "prefix": "components.forestdaywalkerspawner:OnSave",
        "body": "components.forestdaywalkerspawner:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.forestdaywalkerspawner:CanSpawnFromJunk:": {
        "prefix": "components.forestdaywalkerspawner:CanSpawnFromJunk",
        "body": "components.forestdaywalkerspawner:CanSpawnFromJunk()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.forgerepair:OnRepair:": {
        "prefix": "components.forgerepair:OnRepair",
        "body": "components.forgerepair:OnRepair(${1:target},${2:doer})",
        "description": " ※Params: \n   (target)<>[] \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.forgerepair:SetRepairMaterial:": {
        "prefix": "components.forgerepair:SetRepairMaterial",
        "body": "components.forgerepair:SetRepairMaterial(${1:material})",
        "description": " ※Params: \n   (material)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.forgerepair:SetOnRepaired:": {
        "prefix": "components.forgerepair:SetOnRepaired",
        "body": "components.forgerepair:SetOnRepaired(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.forgerepairable:Repair:": {
        "prefix": "components.forgerepairable:Repair",
        "body": "components.forgerepairable:Repair(${1:doer},${2:repair_item})",
        "description": " ※Params: \n   (doer)<>[] \n   (repair_item)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.forgerepairable:SetOnRepaired:": {
        "prefix": "components.forgerepairable:SetOnRepaired",
        "body": "components.forgerepairable:SetOnRepaired(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.forgerepairable:SetRepairable:": {
        "prefix": "components.forgerepairable:SetRepairable",
        "body": "components.forgerepairable:SetRepairable(${1:repairable})",
        "description": " ※Params: \n   (repairable)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.forgerepairable:SetRepairMaterial:": {
        "prefix": "components.forgerepairable:SetRepairMaterial",
        "body": "components.forgerepairable:SetRepairMaterial(${1:material})",
        "description": " ※Params: \n   (material)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.forgerepairable:OnRemoveFromEntity:": {
        "prefix": "components.forgerepairable:OnRemoveFromEntity",
        "body": "components.forgerepairable:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.formationfollower:StartUpdating:": {
        "prefix": "components.formationfollower:StartUpdating",
        "body": "components.formationfollower:StartUpdating()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.formationfollower:LeaveFormation:": {
        "prefix": "components.formationfollower:LeaveFormation",
        "body": "components.formationfollower:LeaveFormation()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.formationfollower:GetDebugString:": {
        "prefix": "components.formationfollower:GetDebugString",
        "body": "components.formationfollower:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.formationfollower:StopUpdating:": {
        "prefix": "components.formationfollower:StopUpdating",
        "body": "components.formationfollower:StopUpdating()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.formationfollower:OnEntityWake:": {
        "prefix": "components.formationfollower:OnEntityWake",
        "body": "components.formationfollower:OnEntityWake()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.formationfollower:OnEntitySleep:": {
        "prefix": "components.formationfollower:OnEntitySleep",
        "body": "components.formationfollower:OnEntitySleep()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.formationfollower:SearchForFormation:": {
        "prefix": "components.formationfollower:SearchForFormation",
        "body": "components.formationfollower:SearchForFormation(${1:override_find_entities})",
        "description": " ※Params: \n   (override_find_entities)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.formationfollower:OnUpdate:": {
        "prefix": "components.formationfollower:OnUpdate",
        "body": "components.formationfollower:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.formationleader:OrganizeFormations:": {
        "prefix": "components.formationleader:OrganizeFormations",
        "body": "components.formationleader:OrganizeFormations()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.formationleader:NewFormationMember:": {
        "prefix": "components.formationleader:NewFormationMember",
        "body": "components.formationleader:NewFormationMember(${1:member})",
        "description": " ※Params: \n   (member)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.formationleader:ValidMember:": {
        "prefix": "components.formationleader:ValidMember",
        "body": "components.formationleader:ValidMember(${1:member})",
        "description": " ※Params: \n   (member)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.formationleader:DisbandFormation:": {
        "prefix": "components.formationleader:DisbandFormation",
        "body": "components.formationleader:DisbandFormation()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.formationleader:ValidateFormation:": {
        "prefix": "components.formationleader:ValidateFormation",
        "body": "components.formationleader:ValidateFormation()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.formationleader:GetTheta:": {
        "prefix": "components.formationleader:GetTheta",
        "body": "components.formationleader:GetTheta(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.formationleader:IsFormationEmpty:": {
        "prefix": "components.formationleader:IsFormationEmpty",
        "body": "components.formationleader:IsFormationEmpty()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.formationleader:GetFormationSize:": {
        "prefix": "components.formationleader:GetFormationSize",
        "body": "components.formationleader:GetFormationSize()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.formationleader:FormationSizeControl:": {
        "prefix": "components.formationleader:FormationSizeControl",
        "body": "components.formationleader:FormationSizeControl()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.formationleader:GetFormationPositions:": {
        "prefix": "components.formationleader:GetFormationPositions",
        "body": "components.formationleader:GetFormationPositions()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.formationleader:SetUp:": {
        "prefix": "components.formationleader:SetUp",
        "body": "components.formationleader:SetUp(${1:target},${2:first_member})",
        "description": " ※Params: \n   (target)<>[] \n   (first_member)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.formationleader:IsFormationFull:": {
        "prefix": "components.formationleader:IsFormationFull",
        "body": "components.formationleader:IsFormationFull()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.formationleader:OnLostFormationMember:": {
        "prefix": "components.formationleader:OnLostFormationMember",
        "body": "components.formationleader:OnLostFormationMember(${1:member})",
        "description": " ※Params: \n   (member)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.formationleader:OnUpdate:": {
        "prefix": "components.formationleader:OnUpdate",
        "body": "components.formationleader:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.freezable:SetExtraResist:": {
        "prefix": "components.freezable:SetExtraResist",
        "body": "components.freezable:SetExtraResist(${1:resist})",
        "description": " ※Params: \n   (resist)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.freezable:IsThawing:": {
        "prefix": "components.freezable:IsThawing",
        "body": "components.freezable:IsThawing()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.freezable:Freeze:": {
        "prefix": "components.freezable:Freeze",
        "body": "components.freezable:Freeze(${1:freezetime})",
        "description": " ※Params: \n   (freezetime)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.freezable:GetTimeToWearOff:": {
        "prefix": "components.freezable:GetTimeToWearOff",
        "body": "components.freezable:GetTimeToWearOff()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.freezable:IsFrozen:": {
        "prefix": "components.freezable:IsFrozen",
        "body": "components.freezable:IsFrozen()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.freezable:StartWearingOff:": {
        "prefix": "components.freezable:StartWearingOff",
        "body": "components.freezable:StartWearingOff(${1:wearofftime})",
        "description": " ※Params: \n   (wearofftime)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.freezable:SetShatterFXLevel:": {
        "prefix": "components.freezable:SetShatterFXLevel",
        "body": "components.freezable:SetShatterFXLevel(${1:level},${2:percent})",
        "description": " ※Params: \n   (level)<>[] \n   (percent)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.freezable:AddShatterFX:": {
        "prefix": "components.freezable:AddShatterFX",
        "body": "components.freezable:AddShatterFX(${1:prefab},${2:offset},${3:followsymbol})",
        "description": " ※Params: \n   (prefab)<>[] \n   (offset)<>[] \n   (followsymbol)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.freezable:SetRedirectFn:": {
        "prefix": "components.freezable:SetRedirectFn",
        "body": "components.freezable:SetRedirectFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.freezable:OnRemoveFromEntity:": {
        "prefix": "components.freezable:OnRemoveFromEntity",
        "body": "components.freezable:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.freezable:OnLoad:": {
        "prefix": "components.freezable:OnLoad",
        "body": "components.freezable:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.freezable:SetDefaultWearOffTime:": {
        "prefix": "components.freezable:SetDefaultWearOffTime",
        "body": "components.freezable:SetDefaultWearOffTime(${1:wearofftime})",
        "description": " ※Params: \n   (wearofftime)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.freezable:Reset:": {
        "prefix": "components.freezable:Reset",
        "body": "components.freezable:Reset()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.freezable:ResolveWearOffTime:": {
        "prefix": "components.freezable:ResolveWearOffTime",
        "body": "components.freezable:ResolveWearOffTime(${1:t})",
        "description": " ※Params: \n   (t)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.freezable:Thaw:": {
        "prefix": "components.freezable:Thaw",
        "body": "components.freezable:Thaw(${1:thawtime})",
        "description": " ※Params: \n   (thawtime)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.freezable:SpawnShatterFX:": {
        "prefix": "components.freezable:SpawnShatterFX",
        "body": "components.freezable:SpawnShatterFX()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.freezable:UpdateTint:": {
        "prefix": "components.freezable:UpdateTint",
        "body": "components.freezable:UpdateTint()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.freezable:GetDebugString:": {
        "prefix": "components.freezable:GetDebugString",
        "body": "components.freezable:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.freezable:ResolveResistance:": {
        "prefix": "components.freezable:ResolveResistance",
        "body": "components.freezable:ResolveResistance()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.freezable:Unfreeze:": {
        "prefix": "components.freezable:Unfreeze",
        "body": "components.freezable:Unfreeze()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.freezable:SetResistance:": {
        "prefix": "components.freezable:SetResistance",
        "body": "components.freezable:SetResistance(${1:resist})",
        "description": " ※Params: \n   (resist)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.freezable:OnSave:": {
        "prefix": "components.freezable:OnSave",
        "body": "components.freezable:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.freezable:AddColdness:": {
        "prefix": "components.freezable:AddColdness",
        "body": "components.freezable:AddColdness(${1:coldness},${2:freezetime},${3:nofreeze})",
        "description": " ※Params: \n   (coldness)<>[] \n   (freezetime)<>[] \n   (nofreeze)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.friendlevels:GetLevel:": {
        "prefix": "components.friendlevels:GetLevel",
        "body": "components.friendlevels:GetLevel()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.friendlevels:CompleteTask:": {
        "prefix": "components.friendlevels:CompleteTask",
        "body": "components.friendlevels:CompleteTask(${1:task},${2:doer})",
        "description": " ※Params: \n   (task)<>[] \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.friendlevels:SetDefaultRewards:": {
        "prefix": "components.friendlevels:SetDefaultRewards",
        "body": "components.friendlevels:SetDefaultRewards(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.friendlevels:Enable:": {
        "prefix": "components.friendlevels:Enable",
        "body": "components.friendlevels:Enable(${1:enabled})",
        "description": " ※Params: \n   (enabled)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.friendlevels:OnLoad:": {
        "prefix": "components.friendlevels:OnLoad",
        "body": "components.friendlevels:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.friendlevels:LoadPostPass:": {
        "prefix": "components.friendlevels:LoadPostPass",
        "body": "components.friendlevels:LoadPostPass(${1:newents},${2:data})",
        "description": " ※Params: \n   (newents)<>[] \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.friendlevels:GetDebugString:": {
        "prefix": "components.friendlevels:GetDebugString",
        "body": "components.friendlevels:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.friendlevels:OnSave:": {
        "prefix": "components.friendlevels:OnSave",
        "body": "components.friendlevels:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.friendlevels:GetMaxLevel:": {
        "prefix": "components.friendlevels:GetMaxLevel",
        "body": "components.friendlevels:GetMaxLevel()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.friendlevels:SetFriendlyTasks:": {
        "prefix": "components.friendlevels:SetFriendlyTasks",
        "body": "components.friendlevels:SetFriendlyTasks(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.friendlevels:SetLevelRewards:": {
        "prefix": "components.friendlevels:SetLevelRewards",
        "body": "components.friendlevels:SetLevelRewards(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.friendlevels:DoRewards:": {
        "prefix": "components.friendlevels:DoRewards",
        "body": "components.friendlevels:DoRewards(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.frostybreather:StartBreath:": {
        "prefix": "components.frostybreather:StartBreath",
        "body": "components.frostybreather:StartBreath()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.frostybreather:ForceBreathOn:": {
        "prefix": "components.frostybreather:ForceBreathOn",
        "body": "components.frostybreather:ForceBreathOn()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.frostybreather:Enable:": {
        "prefix": "components.frostybreather:Enable",
        "body": "components.frostybreather:Enable()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.frostybreather:EmitOnce:": {
        "prefix": "components.frostybreather:EmitOnce",
        "body": "components.frostybreather:EmitOnce()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.frostybreather:OnTemperatureChanged:": {
        "prefix": "components.frostybreather:OnTemperatureChanged",
        "body": "components.frostybreather:OnTemperatureChanged(${1:temperature})",
        "description": " ※Params: \n   (temperature)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.frostybreather:SetOffsetFn:": {
        "prefix": "components.frostybreather:SetOffsetFn",
        "body": "components.frostybreather:SetOffsetFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.frostybreather:ForceBreathOff:": {
        "prefix": "components.frostybreather:ForceBreathOff",
        "body": "components.frostybreather:ForceBreathOff()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.frostybreather:SetOffset:": {
        "prefix": "components.frostybreather:SetOffset",
        "body": "components.frostybreather:SetOffset(${1:x},${2:y},${3:z})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.frostybreather:GetOffset:": {
        "prefix": "components.frostybreather:GetOffset",
        "body": "components.frostybreather:GetOffset()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.frostybreather:Disable:": {
        "prefix": "components.frostybreather:Disable",
        "body": "components.frostybreather:Disable()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.frostybreather:StopBreath:": {
        "prefix": "components.frostybreather:StopBreath",
        "body": "components.frostybreather:StopBreath()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.frostybreather:OnRemoveFromEntity:": {
        "prefix": "components.frostybreather:OnRemoveFromEntity",
        "body": "components.frostybreather:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.fuel:Taken:": {
        "prefix": "components.fuel:Taken",
        "body": "components.fuel:Taken(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fuel:SetOnTakenFn:": {
        "prefix": "components.fuel:SetOnTakenFn",
        "body": "components.fuel:SetOnTakenFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fuel:OnRemoveFromEntity:": {
        "prefix": "components.fuel:OnRemoveFromEntity",
        "body": "components.fuel:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.fueled:SetPercent:": {
        "prefix": "components.fueled:SetPercent",
        "body": "components.fueled:SetPercent(${1:amount})",
        "description": " ※Params: \n   (amount)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fueled:DoUpdate:": {
        "prefix": "components.fueled:DoUpdate",
        "body": "components.fueled:DoUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fueled:SetTakeFuelFn:": {
        "prefix": "components.fueled:SetTakeFuelFn",
        "body": "components.fueled:SetTakeFuelFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fueled:SetFirstPeriod:": {
        "prefix": "components.fueled:SetFirstPeriod",
        "body": "components.fueled:SetFirstPeriod(${1:firstperiod},${2:firstperiodfull})",
        "description": " ※Params: \n   (firstperiod)<>[] \n   (firstperiodfull)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fueled:InitializeFuelLevel:": {
        "prefix": "components.fueled:InitializeFuelLevel",
        "body": "components.fueled:InitializeFuelLevel(${1:fuel})",
        "description": " ※Params: \n   (fuel)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fueled:OnLoad:": {
        "prefix": "components.fueled:OnLoad",
        "body": "components.fueled:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fueled:SetSectionCallback:": {
        "prefix": "components.fueled:SetSectionCallback",
        "body": "components.fueled:SetSectionCallback(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fueled:MakeEmpty:": {
        "prefix": "components.fueled:MakeEmpty",
        "body": "components.fueled:MakeEmpty()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.fueled:StopConsuming:": {
        "prefix": "components.fueled:StopConsuming",
        "body": "components.fueled:StopConsuming()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.fueled:DoDelta:": {
        "prefix": "components.fueled:DoDelta",
        "body": "components.fueled:DoDelta(${1:amount},${2:doer})",
        "description": " ※Params: \n   (amount)<>[] \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fueled:OnWallUpdate:": {
        "prefix": "components.fueled:OnWallUpdate",
        "body": "components.fueled:OnWallUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fueled:SetMultiplierFn:": {
        "prefix": "components.fueled:SetMultiplierFn",
        "body": "components.fueled:SetMultiplierFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fueled:IsEmpty:": {
        "prefix": "components.fueled:IsEmpty",
        "body": "components.fueled:IsEmpty()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.fueled:OnRemoveFromEntity:": {
        "prefix": "components.fueled:OnRemoveFromEntity",
        "body": "components.fueled:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.fueled:ChangeSection:": {
        "prefix": "components.fueled:ChangeSection",
        "body": "components.fueled:ChangeSection(${1:amount})",
        "description": " ※Params: \n   (amount)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fueled:StartConsuming:": {
        "prefix": "components.fueled:StartConsuming",
        "body": "components.fueled:StartConsuming()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.fueled:AddThreshold:": {
        "prefix": "components.fueled:AddThreshold",
        "body": "components.fueled:AddThreshold(${1:percent},${2:fn})",
        "description": " ※Params: \n   (percent)<>[] \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fueled:GetSectionPercent:": {
        "prefix": "components.fueled:GetSectionPercent",
        "body": "components.fueled:GetSectionPercent()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.fueled:GetPercent:": {
        "prefix": "components.fueled:GetPercent",
        "body": "components.fueled:GetPercent()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.fueled:SetCanTakeFuelItemFn:": {
        "prefix": "components.fueled:SetCanTakeFuelItemFn",
        "body": "components.fueled:SetCanTakeFuelItemFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fueled:SetUpdateFn:": {
        "prefix": "components.fueled:SetUpdateFn",
        "body": "components.fueled:SetUpdateFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fueled:IsFull:": {
        "prefix": "components.fueled:IsFull",
        "body": "components.fueled:IsFull()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.fueled:GetCurrentSection:": {
        "prefix": "components.fueled:GetCurrentSection",
        "body": "components.fueled:GetCurrentSection()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.fueled:SetTakeFuelItemFn:": {
        "prefix": "components.fueled:SetTakeFuelItemFn",
        "body": "components.fueled:SetTakeFuelItemFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fueled:GetDebugString:": {
        "prefix": "components.fueled:GetDebugString",
        "body": "components.fueled:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.fueled:SetDepletedFn:": {
        "prefix": "components.fueled:SetDepletedFn",
        "body": "components.fueled:SetDepletedFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fueled:TakeFuelItem:": {
        "prefix": "components.fueled:TakeFuelItem",
        "body": "components.fueled:TakeFuelItem(${1:item},${2:doer})",
        "description": " ※Params: \n   (item)<>[] \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fueled:CanAcceptFuelItem:": {
        "prefix": "components.fueled:CanAcceptFuelItem",
        "body": "components.fueled:CanAcceptFuelItem(${1:item})",
        "description": " ※Params: \n   (item)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fueled:OnSave:": {
        "prefix": "components.fueled:OnSave",
        "body": "components.fueled:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.fueled:SetSections:": {
        "prefix": "components.fueled:SetSections",
        "body": "components.fueled:SetSections(${1:num})",
        "description": " ※Params: \n   (num)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fueler:Taken:": {
        "prefix": "components.fueler:Taken",
        "body": "components.fueler:Taken(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fueler:SetOnTakenFn:": {
        "prefix": "components.fueler:SetOnTakenFn",
        "body": "components.fueler:SetOnTakenFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fueler:OnRemoveFromEntity:": {
        "prefix": "components.fueler:OnRemoveFromEntity",
        "body": "components.fueler:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.fuelmaster:GetBonusMult:": {
        "prefix": "components.fuelmaster:GetBonusMult",
        "body": "components.fuelmaster:GetBonusMult(${1:item},${2:target})",
        "description": " ※Params: \n   (item)<>[] \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fuelmaster:SetBonusFn:": {
        "prefix": "components.fuelmaster:SetBonusFn",
        "body": "components.fuelmaster:SetBonusFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.fuelmaster:SetBonusMult:": {
        "prefix": "components.fuelmaster:SetBonusMult",
        "body": "components.fuelmaster:SetBonusMult(${1:mult})",
        "description": " ※Params: \n   (mult)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.furnituredecor:SetEnabled:": {
        "prefix": "components.furnituredecor:SetEnabled",
        "body": "components.furnituredecor:SetEnabled(${1:enabled})",
        "description": " ※Params: \n   (enabled)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.furnituredecor:PutOnFurniture:": {
        "prefix": "components.furnituredecor:PutOnFurniture",
        "body": "components.furnituredecor:PutOnFurniture(${1:furniture})",
        "description": " ※Params: \n   (furniture)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.furnituredecor:OnRemoveFromEntity:": {
        "prefix": "components.furnituredecor:OnRemoveFromEntity",
        "body": "components.furnituredecor:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.furnituredecortaker:LoadPostPass:": {
        "prefix": "components.furnituredecortaker:LoadPostPass",
        "body": "components.furnituredecortaker:LoadPostPass(${1:ents},${2:data})",
        "description": " ※Params: \n   (ents)<>[] \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.furnituredecortaker:SetEnabled:": {
        "prefix": "components.furnituredecortaker:SetEnabled",
        "body": "components.furnituredecortaker:SetEnabled(${1:enabled})",
        "description": " ※Params: \n   (enabled)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.furnituredecortaker:GetDebugString:": {
        "prefix": "components.furnituredecortaker:GetDebugString",
        "body": "components.furnituredecortaker:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.furnituredecortaker:OnSave:": {
        "prefix": "components.furnituredecortaker:OnSave",
        "body": "components.furnituredecortaker:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.furnituredecortaker:TakeItem:": {
        "prefix": "components.furnituredecortaker:TakeItem",
        "body": "components.furnituredecortaker:TakeItem()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.furnituredecortaker:AbleToAcceptDecor:": {
        "prefix": "components.furnituredecortaker:AbleToAcceptDecor",
        "body": "components.furnituredecortaker:AbleToAcceptDecor(${1:item},${2:giver})",
        "description": " ※Params: \n   (item)<>[] \n   (giver)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.furnituredecortaker:AcceptDecor:": {
        "prefix": "components.furnituredecortaker:AcceptDecor",
        "body": "components.furnituredecortaker:AcceptDecor(${1:item},${2:giver})",
        "description": " ※Params: \n   (item)<>[] \n   (giver)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.furnituredecortaker:OnRemoveFromEntity:": {
        "prefix": "components.furnituredecortaker:OnRemoveFromEntity",
        "body": "components.furnituredecortaker:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.ghostlybond:ResumeBonding:": {
        "prefix": "components.ghostlybond:ResumeBonding",
        "body": "components.ghostlybond:ResumeBonding()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.ghostlybond:SetBondLevel:": {
        "prefix": "components.ghostlybond:SetBondLevel",
        "body": "components.ghostlybond:SetBondLevel(${1:level},${2:time},${3:isloading})",
        "description": " ※Params: \n   (level)<>[] \n   (time)<>[] \n   (isloading)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.ghostlybond:OnLoad:": {
        "prefix": "components.ghostlybond:OnLoad",
        "body": "components.ghostlybond:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.ghostlybond:LoadPostPass:": {
        "prefix": "components.ghostlybond:LoadPostPass",
        "body": "components.ghostlybond:LoadPostPass(${1:newents},${2:data})",
        "description": " ※Params: \n   (newents)<>[] \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.ghostlybond:LongUpdate:": {
        "prefix": "components.ghostlybond:LongUpdate",
        "body": "components.ghostlybond:LongUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.ghostlybond:OnRemoveEntity:": {
        "prefix": "components.ghostlybond:OnRemoveEntity",
        "body": "components.ghostlybond:OnRemoveEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.ghostlybond:Recall:": {
        "prefix": "components.ghostlybond:Recall",
        "body": "components.ghostlybond:Recall(${1:was_killed})",
        "description": " ※Params: \n   (was_killed)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.ghostlybond:Init:": {
        "prefix": "components.ghostlybond:Init",
        "body": "components.ghostlybond:Init(${1:ghost_prefab},${2:bond_levelup_time})",
        "description": " ※Params: \n   (ghost_prefab)<>[] \n   (bond_levelup_time)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.ghostlybond:ChangeBehaviour:": {
        "prefix": "components.ghostlybond:ChangeBehaviour",
        "body": "components.ghostlybond:ChangeBehaviour()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.ghostlybond:RecallComplete:": {
        "prefix": "components.ghostlybond:RecallComplete",
        "body": "components.ghostlybond:RecallComplete()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.ghostlybond:SummonComplete:": {
        "prefix": "components.ghostlybond:SummonComplete",
        "body": "components.ghostlybond:SummonComplete()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.ghostlybond:Summon:": {
        "prefix": "components.ghostlybond:Summon",
        "body": "components.ghostlybond:Summon(${1:summoningitem})",
        "description": " ※Params: \n   (summoningitem)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.ghostlybond:GetDebugString:": {
        "prefix": "components.ghostlybond:GetDebugString",
        "body": "components.ghostlybond:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.ghostlybond:SpawnGhost:": {
        "prefix": "components.ghostlybond:SpawnGhost",
        "body": "components.ghostlybond:SpawnGhost()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.ghostlybond:PauseBonding:": {
        "prefix": "components.ghostlybond:PauseBonding",
        "body": "components.ghostlybond:PauseBonding()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.ghostlybond:SetBondTimeMultiplier:": {
        "prefix": "components.ghostlybond:SetBondTimeMultiplier",
        "body": "components.ghostlybond:SetBondTimeMultiplier(${1:src},${2:mult},${3:key})",
        "description": " ※Params: \n   (src)<>[] \n   (mult)<>[] \n   (key)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.ghostlybond:OnSave:": {
        "prefix": "components.ghostlybond:OnSave",
        "body": "components.ghostlybond:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.ghostlybond:OnUpdate:": {
        "prefix": "components.ghostlybond:OnUpdate",
        "body": "components.ghostlybond:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.ghostlyelixir:Apply:": {
        "prefix": "components.ghostlyelixir:Apply",
        "body": "components.ghostlyelixir:Apply(${1:doer},${2:target})",
        "description": " ※Params: \n   (doer)<>[] \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.ghostlyelixir:OnRemoveFromEntity:": {
        "prefix": "components.ghostlyelixir:OnRemoveFromEntity",
        "body": "components.ghostlyelixir:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.ghostlyelixirable:OnRemoveFromEntity:": {
        "prefix": "components.ghostlyelixirable:OnRemoveFromEntity",
        "body": "components.ghostlyelixirable:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.ghostlyelixirable:GetApplyToTarget:": {
        "prefix": "components.ghostlyelixirable:GetApplyToTarget",
        "body": "components.ghostlyelixirable:GetApplyToTarget(${1:doer},${2:elixir})",
        "description": " ※Params: \n   (doer)<>[] \n   (elixir)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.giftreceiver:HasGift:": {
        "prefix": "components.giftreceiver:HasGift",
        "body": "components.giftreceiver:HasGift()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.giftreceiver:OpenNextGift:": {
        "prefix": "components.giftreceiver:OpenNextGift",
        "body": "components.giftreceiver:OpenNextGift()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.giftreceiver:OnStopOpenGift:": {
        "prefix": "components.giftreceiver:OnStopOpenGift",
        "body": "components.giftreceiver:OnStopOpenGift(${1:usewardrobe})",
        "description": " ※Params: \n   (usewardrobe)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.giftreceiver:OnStartOpenGift:": {
        "prefix": "components.giftreceiver:OnStartOpenGift",
        "body": "components.giftreceiver:OnStartOpenGift()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.giftreceiver:SetGiftMachine:": {
        "prefix": "components.giftreceiver:SetGiftMachine",
        "body": "components.giftreceiver:SetGiftMachine(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.giftreceiver:RefreshGiftCount:": {
        "prefix": "components.giftreceiver:RefreshGiftCount",
        "body": "components.giftreceiver:RefreshGiftCount()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.giftreceiver:OnRemoveFromEntity:": {
        "prefix": "components.giftreceiver:OnRemoveFromEntity",
        "body": "components.giftreceiver:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.gingerbreadhunter:OnPlayerJoined:": {
        "prefix": "components.gingerbreadhunter:OnPlayerJoined",
        "body": "components.gingerbreadhunter:OnPlayerJoined(${1:player})",
        "description": " ※Params: \n   (player)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.gingerbreadhunter:Load:": {
        "prefix": "components.gingerbreadhunter:Load",
        "body": "components.gingerbreadhunter:Load(${1:data},${2:ents})",
        "description": " ※Params: \n   (data)<>[] \n   (ents)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.gingerbreadhunter:LoadPostPass:": {
        "prefix": "components.gingerbreadhunter:LoadPostPass",
        "body": "components.gingerbreadhunter:LoadPostPass(${1:newents},${2:savedata})",
        "description": " ※Params: \n   (newents)<>[] \n   (savedata)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.gingerbreadhunter:OnSave:": {
        "prefix": "components.gingerbreadhunter:OnSave",
        "body": "components.gingerbreadhunter:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.gingerbreadhunter:GenerateCrumbPoints:": {
        "prefix": "components.gingerbreadhunter:GenerateCrumbPoints",
        "body": "components.gingerbreadhunter:GenerateCrumbPoints(${1:origin_pt},${2:amount})",
        "description": " ※Params: \n   (origin_pt)<>[] \n   (amount)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.gingerbreadhunter:OnPlayerLeft:": {
        "prefix": "components.gingerbreadhunter:OnPlayerLeft",
        "body": "components.gingerbreadhunter:OnPlayerLeft(${1:player})",
        "description": " ※Params: \n   (player)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.gingerbreadhunter:OnIsDay:": {
        "prefix": "components.gingerbreadhunter:OnIsDay",
        "body": "components.gingerbreadhunter:OnIsDay()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.gingerbreadhunter:SpawnCrumbTrail:": {
        "prefix": "components.gingerbreadhunter:SpawnCrumbTrail",
        "body": "components.gingerbreadhunter:SpawnCrumbTrail(${1:killtime})",
        "description": " ※Params: \n   (killtime)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.grabbable:CanGrab:": {
        "prefix": "components.grabbable:CanGrab",
        "body": "components.grabbable:CanGrab(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.grabbable:SetCanGrabFn:": {
        "prefix": "components.grabbable:SetCanGrabFn",
        "body": "components.grabbable:SetCanGrabFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.grabbable:OnRemoveFromEntity:": {
        "prefix": "components.grabbable:OnRemoveFromEntity",
        "body": "components.grabbable:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.grogginess:SetDefaultTests:": {
        "prefix": "components.grogginess:SetDefaultTests",
        "body": "components.grogginess:SetDefaultTests()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.grogginess:TransferComponent:": {
        "prefix": "components.grogginess:TransferComponent",
        "body": "components.grogginess:TransferComponent(${1:newinst})",
        "description": " ※Params: \n   (newinst)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.grogginess:OnUpdate:": {
        "prefix": "components.grogginess:OnUpdate",
        "body": "components.grogginess:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.grogginess:RemoveResistanceSource:": {
        "prefix": "components.grogginess:RemoveResistanceSource",
        "body": "components.grogginess:RemoveResistanceSource(${1:source})",
        "description": " ※Params: \n   (source)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.grogginess:SetEnableSpeedMod:": {
        "prefix": "components.grogginess:SetEnableSpeedMod",
        "body": "components.grogginess:SetEnableSpeedMod(${1:enable})",
        "description": " ※Params: \n   (enable)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.grogginess:ComeTo:": {
        "prefix": "components.grogginess:ComeTo",
        "body": "components.grogginess:ComeTo()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.grogginess:HasGrogginess:": {
        "prefix": "components.grogginess:HasGrogginess",
        "body": "components.grogginess:HasGrogginess()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.grogginess:SetResistance:": {
        "prefix": "components.grogginess:SetResistance",
        "body": "components.grogginess:SetResistance(${1:resist})",
        "description": " ※Params: \n   (resist)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.grogginess:ExtendKnockout:": {
        "prefix": "components.grogginess:ExtendKnockout",
        "body": "components.grogginess:ExtendKnockout(${1:knockoutduration})",
        "description": " ※Params: \n   (knockoutduration)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.grogginess:AddGrogginess:": {
        "prefix": "components.grogginess:AddGrogginess",
        "body": "components.grogginess:AddGrogginess(${1:grogginess},${2:knockoutduration})",
        "description": " ※Params: \n   (grogginess)<>[] \n   (knockoutduration)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.grogginess:SetKnockOutTest:": {
        "prefix": "components.grogginess:SetKnockOutTest",
        "body": "components.grogginess:SetKnockOutTest(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.grogginess:OnRemoveFromEntity:": {
        "prefix": "components.grogginess:OnRemoveFromEntity",
        "body": "components.grogginess:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.grogginess:CapToResistance:": {
        "prefix": "components.grogginess:CapToResistance",
        "body": "components.grogginess:CapToResistance()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.grogginess:GetResistance:": {
        "prefix": "components.grogginess:GetResistance",
        "body": "components.grogginess:GetResistance()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.grogginess:SetSpeedModMultiplier:": {
        "prefix": "components.grogginess:SetSpeedModMultiplier",
        "body": "components.grogginess:SetSpeedModMultiplier(${1:mult})",
        "description": " ※Params: \n   (mult)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.grogginess:GetDebugString:": {
        "prefix": "components.grogginess:GetDebugString",
        "body": "components.grogginess:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.grogginess:AddResistanceSource:": {
        "prefix": "components.grogginess:AddResistanceSource",
        "body": "components.grogginess:AddResistanceSource(${1:source},${2:resistance})",
        "description": " ※Params: \n   (source)<>[] \n   (resistance)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.grogginess:MakeGrogginessAtLeast:": {
        "prefix": "components.grogginess:MakeGrogginessAtLeast",
        "body": "components.grogginess:MakeGrogginessAtLeast(${1:min})",
        "description": " ※Params: \n   (min)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.grogginess:SetPercent:": {
        "prefix": "components.grogginess:SetPercent",
        "body": "components.grogginess:SetPercent(${1:percent})",
        "description": " ※Params: \n   (percent)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.grogginess:KnockOut:": {
        "prefix": "components.grogginess:KnockOut",
        "body": "components.grogginess:KnockOut()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.grogginess:ResetGrogginess:": {
        "prefix": "components.grogginess:ResetGrogginess",
        "body": "components.grogginess:ResetGrogginess()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.grogginess:IsGroggy:": {
        "prefix": "components.grogginess:IsGroggy",
        "body": "components.grogginess:IsGroggy()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.grogginess:IsKnockedOut:": {
        "prefix": "components.grogginess:IsKnockedOut",
        "body": "components.grogginess:IsKnockedOut()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.grogginess:SetDecayRate:": {
        "prefix": "components.grogginess:SetDecayRate",
        "body": "components.grogginess:SetDecayRate(${1:rate})",
        "description": " ※Params: \n   (rate)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.grogginess:SetWearOffDuration:": {
        "prefix": "components.grogginess:SetWearOffDuration",
        "body": "components.grogginess:SetWearOffDuration(${1:duration})",
        "description": " ※Params: \n   (duration)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.grogginess:SetComeToTest:": {
        "prefix": "components.grogginess:SetComeToTest",
        "body": "components.grogginess:SetComeToTest(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.grogginess:SubtractGrogginess:": {
        "prefix": "components.grogginess:SubtractGrogginess",
        "body": "components.grogginess:SubtractGrogginess(${1:grogginess})",
        "description": " ※Params: \n   (grogginess)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.grogginess:MaximizeGrogginess:": {
        "prefix": "components.grogginess:MaximizeGrogginess",
        "body": "components.grogginess:MaximizeGrogginess()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.groomer:SetOccupant:": {
        "prefix": "components.groomer:SetOccupant",
        "body": "components.groomer:SetOccupant(${1:occupant})",
        "description": " ※Params: \n   (occupant)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.groomer:SetCanBeShared:": {
        "prefix": "components.groomer:SetCanBeShared",
        "body": "components.groomer:SetCanBeShared(${1:canbeshared})",
        "description": " ※Params: \n   (canbeshared)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.groomer:SetCanBeDressed:": {
        "prefix": "components.groomer:SetCanBeDressed",
        "body": "components.groomer:SetCanBeDressed(${1:canbedressed})",
        "description": " ※Params: \n   (canbedressed)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.groomer:ActivateChanging:": {
        "prefix": "components.groomer:ActivateChanging",
        "body": "components.groomer:ActivateChanging(${1:doer},${2:skins})",
        "description": " ※Params: \n   (doer)<>[] \n   (skins)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.groomer:ApplySkins:": {
        "prefix": "components.groomer:ApplySkins",
        "body": "components.groomer:ApplySkins(${1:doer},${2:diff})",
        "description": " ※Params: \n   (doer)<>[] \n   (diff)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.groomer:CanBeginChanging:": {
        "prefix": "components.groomer:CanBeginChanging",
        "body": "components.groomer:CanBeginChanging(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.groomer:SetCanUseAction:": {
        "prefix": "components.groomer:SetCanUseAction",
        "body": "components.groomer:SetCanUseAction(${1:canuseaction})",
        "description": " ※Params: \n   (canuseaction)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.groomer:OnRemoveFromEntity:": {
        "prefix": "components.groomer:OnRemoveFromEntity",
        "body": "components.groomer:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.groomer:SetChangeInDelay:": {
        "prefix": "components.groomer:SetChangeInDelay",
        "body": "components.groomer:SetChangeInDelay(${1:delay})",
        "description": " ※Params: \n   (delay)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.groomer:Enable:": {
        "prefix": "components.groomer:Enable",
        "body": "components.groomer:Enable(${1:enable})",
        "description": " ※Params: \n   (enable)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.groomer:OnUpdate:": {
        "prefix": "components.groomer:OnUpdate",
        "body": "components.groomer:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.groomer:OnLoad:": {
        "prefix": "components.groomer:OnLoad",
        "body": "components.groomer:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.groomer:BeginChanging:": {
        "prefix": "components.groomer:BeginChanging",
        "body": "components.groomer:BeginChanging(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.groomer:OnSave:": {
        "prefix": "components.groomer:OnSave",
        "body": "components.groomer:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.groomer:EndChanging:": {
        "prefix": "components.groomer:EndChanging",
        "body": "components.groomer:EndChanging(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.groomer:ApplyTargetSkins:": {
        "prefix": "components.groomer:ApplyTargetSkins",
        "body": "components.groomer:ApplyTargetSkins(${1:target},${2:doer},${3:skins})",
        "description": " ※Params: \n   (target)<>[] \n   (doer)<>[] \n   (skins)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.groomer:EndAllChanging:": {
        "prefix": "components.groomer:EndAllChanging",
        "body": "components.groomer:EndAllChanging()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.groomer:GetSkinCategory:": {
        "prefix": "components.groomer:GetSkinCategory",
        "body": "components.groomer:GetSkinCategory(${1:skin})",
        "description": " ※Params: \n   (skin)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.groomer:SetRange:": {
        "prefix": "components.groomer:SetRange",
        "body": "components.groomer:SetRange(${1:range})",
        "description": " ※Params: \n   (range)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.groundpounder:DestroyPoints:": {
        "prefix": "components.groundpounder:DestroyPoints",
        "body": "components.groundpounder:DestroyPoints(${1:points},${2:breakobjects},${3:dodamage},${4:pushplatforms},${5:pushinventoryitems},${6:spawnfx})",
        "description": " ※Params: \n   (points)<>[] \n   (breakobjects)<>[] \n   (dodamage)<>[] \n   (pushplatforms)<>[] \n   (pushinventoryitems)<>[] \n   (spawnfx)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.groundpounder:GetDebugString:": {
        "prefix": "components.groundpounder:GetDebugString",
        "body": "components.groundpounder:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.groundpounder:GroundPound:": {
        "prefix": "components.groundpounder:GroundPound",
        "body": "components.groundpounder:GroundPound(${1:pt},${2:ents_hit})",
        "description": " ※Params: \n   (pt)<>[] \n   (ents_hit)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.groundpounder:DestroyRing:": {
        "prefix": "components.groundpounder:DestroyRing",
        "body": "components.groundpounder:DestroyRing(${1:pt},${2:radius},${3:points},${4:breakobjects},${5:dodamage},${6:pushplatforms},${7:pushinventoryitems},${8:spawnfx},${9:ents_hit},${10:platforms_hit})",
        "description": " ※Params: \n   (pt)<>[] \n   (radius)<>[] \n   (points)<>[] \n   (breakobjects)<>[] \n   (dodamage)<>[] \n   (pushplatforms)<>[] \n   (pushinventoryitems)<>[] \n   (spawnfx)<>[] \n   (ents_hit)<>[] \n   (platforms_hit)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.groundpounder:UseRingMode:": {
        "prefix": "components.groundpounder:UseRingMode",
        "body": "components.groundpounder:UseRingMode()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.groundpounder:GetPoints:": {
        "prefix": "components.groundpounder:GetPoints",
        "body": "components.groundpounder:GetPoints(${1:pt})",
        "description": " ※Params: \n   (pt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.groundpounder:GroundPound_Offscreen:": {
        "prefix": "components.groundpounder:GroundPound_Offscreen",
        "body": "components.groundpounder:GroundPound_Offscreen(${1:position})",
        "description": " ※Params: \n   (position)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.groundshadowhandler:OnUpdate:": {
        "prefix": "components.groundshadowhandler:OnUpdate",
        "body": "components.groundshadowhandler:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.groundshadowhandler:SetSize:": {
        "prefix": "components.groundshadowhandler:SetSize",
        "body": "components.groundshadowhandler:SetSize(${1:width},${2:height})",
        "description": " ※Params: \n   (width)<>[] \n   (height)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.groundshadowhandler:OnRemoveEntity:": {
        "prefix": "components.groundshadowhandler:OnRemoveEntity",
        "body": "components.groundshadowhandler:OnRemoveEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.grouptargeter:StopTracking:": {
        "prefix": "components.grouptargeter:StopTracking",
        "body": "components.grouptargeter:StopTracking(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.grouptargeter:IsTargeting:": {
        "prefix": "components.grouptargeter:IsTargeting",
        "body": "components.grouptargeter:IsTargeting(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.grouptargeter:SelectTarget:": {
        "prefix": "components.grouptargeter:SelectTarget",
        "body": "components.grouptargeter:SelectTarget()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.grouptargeter:AddTarget:": {
        "prefix": "components.grouptargeter:AddTarget",
        "body": "components.grouptargeter:AddTarget(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.grouptargeter:OnPickTarget:": {
        "prefix": "components.grouptargeter:OnPickTarget",
        "body": "components.grouptargeter:OnPickTarget(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.grouptargeter:StartTracking:": {
        "prefix": "components.grouptargeter:StartTracking",
        "body": "components.grouptargeter:StartTracking(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.grouptargeter:RemoveTarget:": {
        "prefix": "components.grouptargeter:RemoveTarget",
        "body": "components.grouptargeter:RemoveTarget(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.grouptargeter:GetTargets:": {
        "prefix": "components.grouptargeter:GetTargets",
        "body": "components.grouptargeter:GetTargets()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.grouptargeter:GetTotalWeight:": {
        "prefix": "components.grouptargeter:GetTotalWeight",
        "body": "components.grouptargeter:GetTotalWeight()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.grouptargeter:TryGetNewTarget:": {
        "prefix": "components.grouptargeter:TryGetNewTarget",
        "body": "components.grouptargeter:TryGetNewTarget()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.grouptargeter:OnRemoveFromEntity:": {
        "prefix": "components.grouptargeter:OnRemoveFromEntity",
        "body": "components.grouptargeter:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.growable:StartGrowing:": {
        "prefix": "components.growable:StartGrowing",
        "body": "components.growable:StartGrowing(${1:time})",
        "description": " ※Params: \n   (time)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.growable:OnLoad:": {
        "prefix": "components.growable:OnLoad",
        "body": "components.growable:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.growable:StopGrowing:": {
        "prefix": "components.growable:StopGrowing",
        "body": "components.growable:StopGrowing()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.growable:LongUpdate:": {
        "prefix": "components.growable:LongUpdate",
        "body": "components.growable:LongUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.growable:DoMagicGrowth:": {
        "prefix": "components.growable:DoMagicGrowth",
        "body": "components.growable:DoMagicGrowth(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.growable:ExtendGrowTime:": {
        "prefix": "components.growable:ExtendGrowTime",
        "body": "components.growable:ExtendGrowTime(${1:extra_time})",
        "description": " ※Params: \n   (extra_time)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.growable:GetCurrentStageData:": {
        "prefix": "components.growable:GetCurrentStageData",
        "body": "components.growable:GetCurrentStageData()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.growable:IsGrowing:": {
        "prefix": "components.growable:IsGrowing",
        "body": "components.growable:IsGrowing()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.growable:Resume:": {
        "prefix": "components.growable:Resume",
        "body": "components.growable:Resume(${1:reason})",
        "description": " ※Params: \n   (reason)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.growable:GetStage:": {
        "prefix": "components.growable:GetStage",
        "body": "components.growable:GetStage()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.growable:OnEntityWake:": {
        "prefix": "components.growable:OnEntityWake",
        "body": "components.growable:OnEntityWake()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.growable:GetDebugString:": {
        "prefix": "components.growable:GetDebugString",
        "body": "components.growable:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.growable:DoGrowth:": {
        "prefix": "components.growable:DoGrowth",
        "body": "components.growable:DoGrowth()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.growable:OnEntitySleep:": {
        "prefix": "components.growable:OnEntitySleep",
        "body": "components.growable:OnEntitySleep()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.growable:SetStage:": {
        "prefix": "components.growable:SetStage",
        "body": "components.growable:SetStage(${1:stage})",
        "description": " ※Params: \n   (stage)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.growable:Pause:": {
        "prefix": "components.growable:Pause",
        "body": "components.growable:Pause(${1:reason})",
        "description": " ※Params: \n   (reason)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.growable:GetNextStage:": {
        "prefix": "components.growable:GetNextStage",
        "body": "components.growable:GetNextStage()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.grower:IsFertile:": {
        "prefix": "components.grower:IsFertile",
        "body": "components.grower:IsFertile()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.grower:GetFertilePercent:": {
        "prefix": "components.grower:GetFertilePercent",
        "body": "components.grower:GetFertilePercent()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.grower:IsFullFertile:": {
        "prefix": "components.grower:IsFullFertile",
        "body": "components.grower:IsFullFertile()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.grower:OnLoad:": {
        "prefix": "components.grower:OnLoad",
        "body": "components.grower:OnLoad(${1:data},${2:newents})",
        "description": " ※Params: \n   (data)<>[] \n   (newents)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.grower:Fertilize:": {
        "prefix": "components.grower:Fertilize",
        "body": "components.grower:Fertilize(${1:obj},${2:doer})",
        "description": " ※Params: \n   (obj)<>[] \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.grower:Reset:": {
        "prefix": "components.grower:Reset",
        "body": "components.grower:Reset(${1:reason})",
        "description": " ※Params: \n   (reason)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.grower:GetDebugString:": {
        "prefix": "components.grower:GetDebugString",
        "body": "components.grower:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.grower:RemoveCrop:": {
        "prefix": "components.grower:RemoveCrop",
        "body": "components.grower:RemoveCrop(${1:crop})",
        "description": " ※Params: \n   (crop)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.grower:PlantItem:": {
        "prefix": "components.grower:PlantItem",
        "body": "components.grower:PlantItem(${1:item},${2:doer})",
        "description": " ※Params: \n   (item)<>[] \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.grower:OnSave:": {
        "prefix": "components.grower:OnSave",
        "body": "components.grower:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.grower:IsEmpty:": {
        "prefix": "components.grower:IsEmpty",
        "body": "components.grower:IsEmpty()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.grower:OnRemoveFromEntity:": {
        "prefix": "components.grower:OnRemoveFromEntity",
        "body": "components.grower:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.grue:SetSleeping:": {
        "prefix": "components.grue:SetSleeping",
        "body": "components.grue:SetSleeping(${1:asleep})",
        "description": " ※Params: \n   (asleep)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.grue:Start:": {
        "prefix": "components.grue:Start",
        "body": "components.grue:Start()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.grue:Stop:": {
        "prefix": "components.grue:Stop",
        "body": "components.grue:Stop()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.grue:SetSounds:": {
        "prefix": "components.grue:SetSounds",
        "body": "components.grue:SetSounds(${1:warn},${2:attack})",
        "description": " ※Params: \n   (warn)<>[] \n   (attack)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.grue:OnUpdate:": {
        "prefix": "components.grue:OnUpdate",
        "body": "components.grue:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.grue:AddImmunity:": {
        "prefix": "components.grue:AddImmunity",
        "body": "components.grue:AddImmunity(${1:source})",
        "description": " ※Params: \n   (source)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.grue:RemoveImmunity:": {
        "prefix": "components.grue:RemoveImmunity",
        "body": "components.grue:RemoveImmunity(${1:source})",
        "description": " ※Params: \n   (source)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.grue:Attack:": {
        "prefix": "components.grue:Attack",
        "body": "components.grue:Attack()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.grue:SetResistance:": {
        "prefix": "components.grue:SetResistance",
        "body": "components.grue:SetResistance(${1:resistance})",
        "description": " ※Params: \n   (resistance)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.grue:OnRemoveFromEntity:": {
        "prefix": "components.grue:OnRemoveFromEntity",
        "body": "components.grue:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.grue:OnRemoveEntity:": {
        "prefix": "components.grue:OnRemoveEntity",
        "body": "components.grue:OnRemoveEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.guardian:LoadPostPass:": {
        "prefix": "components.guardian:LoadPostPass",
        "body": "components.guardian:LoadPostPass(${1:ents},${2:data})",
        "description": " ※Params: \n   (ents)<>[] \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.guardian:OnLoad:": {
        "prefix": "components.guardian:OnLoad",
        "body": "components.guardian:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.guardian:OnSave:": {
        "prefix": "components.guardian:OnSave",
        "body": "components.guardian:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.guardian:HasGuardian:": {
        "prefix": "components.guardian:HasGuardian",
        "body": "components.guardian:HasGuardian()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.guardian:Decay:": {
        "prefix": "components.guardian:Decay",
        "body": "components.guardian:Decay(${1:d})",
        "description": " ※Params: \n   (d)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.guardian:DismissGuardian:": {
        "prefix": "components.guardian:DismissGuardian",
        "body": "components.guardian:DismissGuardian()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.guardian:SummonsAtMax:": {
        "prefix": "components.guardian:SummonsAtMax",
        "body": "components.guardian:SummonsAtMax()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.guardian:SetGuardian:": {
        "prefix": "components.guardian:SetGuardian",
        "body": "components.guardian:SetGuardian(${1:guardian})",
        "description": " ※Params: \n   (guardian)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.guardian:SummonsAtMin:": {
        "prefix": "components.guardian:SummonsAtMin",
        "body": "components.guardian:SummonsAtMin()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.guardian:SummonGuardian:": {
        "prefix": "components.guardian:SummonGuardian",
        "body": "components.guardian:SummonGuardian(${1:override})",
        "description": " ※Params: \n   (override)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.guardian:StartDecay:": {
        "prefix": "components.guardian:StartDecay",
        "body": "components.guardian:StartDecay()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.guardian:DoDelta:": {
        "prefix": "components.guardian:DoDelta",
        "body": "components.guardian:DoDelta(${1:d})",
        "description": " ※Params: \n   (d)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.guardian:OnGuardianDeath:": {
        "prefix": "components.guardian:OnGuardianDeath",
        "body": "components.guardian:OnGuardianDeath(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.guardian:Call:": {
        "prefix": "components.guardian:Call",
        "body": "components.guardian:Call(${1:d})",
        "description": " ※Params: \n   (d)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.guardian:OnRemoveFromEntity:": {
        "prefix": "components.guardian:OnRemoveFromEntity",
        "body": "components.guardian:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.gym:Train:": {
        "prefix": "components.gym:Train",
        "body": "components.gym:Train()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.gym:OnTimerDone:": {
        "prefix": "components.gym:OnTimerDone",
        "body": "components.gym:OnTimerDone(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.gym:PushMontage:": {
        "prefix": "components.gym:PushMontage",
        "body": "components.gym:PushMontage()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.gym:LoadPostPass:": {
        "prefix": "components.gym:LoadPostPass",
        "body": "components.gym:LoadPostPass(${1:newents},${2:data})",
        "description": " ※Params: \n   (newents)<>[] \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.gym:SetOnRemoveTraineeFn:": {
        "prefix": "components.gym:SetOnRemoveTraineeFn",
        "body": "components.gym:SetOnRemoveTraineeFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.gym:checktraineesleep:": {
        "prefix": "components.gym:checktraineesleep",
        "body": "components.gym:checktraineesleep(${1:phase})",
        "description": " ※Params: \n   (phase)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.gym:RemoveTrainee:": {
        "prefix": "components.gym:RemoveTrainee",
        "body": "components.gym:RemoveTrainee()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.gym:StopTraining:": {
        "prefix": "components.gym:StopTraining",
        "body": "components.gym:StopTraining()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.gym:GetDebugString:": {
        "prefix": "components.gym:GetDebugString",
        "body": "components.gym:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.gym:SetTrainFn:": {
        "prefix": "components.gym:SetTrainFn",
        "body": "components.gym:SetTrainFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.gym:StartTraining:": {
        "prefix": "components.gym:StartTraining",
        "body": "components.gym:StartTraining(${1:inst},${2:time})",
        "description": " ※Params: \n   (inst)<>[] \n   (time)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.gym:SetTrainee:": {
        "prefix": "components.gym:SetTrainee",
        "body": "components.gym:SetTrainee(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.gym:OnSave:": {
        "prefix": "components.gym:OnSave",
        "body": "components.gym:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.gym:CheckPerish:": {
        "prefix": "components.gym:CheckPerish",
        "body": "components.gym:CheckPerish()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.halloweenmoonmutable:SetPrefabMutated:": {
        "prefix": "components.halloweenmoonmutable:SetPrefabMutated",
        "body": "components.halloweenmoonmutable:SetPrefabMutated(${1:prefab})",
        "description": " ※Params: \n   (prefab)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.halloweenmoonmutable:SetConversionOverrideFn:": {
        "prefix": "components.halloweenmoonmutable:SetConversionOverrideFn",
        "body": "components.halloweenmoonmutable:SetConversionOverrideFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.halloweenmoonmutable:Mutate:": {
        "prefix": "components.halloweenmoonmutable:Mutate",
        "body": "components.halloweenmoonmutable:Mutate(${1:overrideprefab})",
        "description": " ※Params: \n   (overrideprefab)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.halloweenmoonmutable:SetOnMutateFn:": {
        "prefix": "components.halloweenmoonmutable:SetOnMutateFn",
        "body": "components.halloweenmoonmutable:SetOnMutateFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.halloweenmoonmutable:OnRemoveFromEntity:": {
        "prefix": "components.halloweenmoonmutable:OnRemoveFromEntity",
        "body": "components.halloweenmoonmutable:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.halloweenpotionmoon:Use:": {
        "prefix": "components.halloweenpotionmoon:Use",
        "body": "components.halloweenpotionmoon:Use(${1:doer},${2:target})",
        "description": " ※Params: \n   (doer)<>[] \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.halloweenpotionmoon:SetOnUseFn:": {
        "prefix": "components.halloweenpotionmoon:SetOnUseFn",
        "body": "components.halloweenpotionmoon:SetOnUseFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.harvestable:StartGrowing:": {
        "prefix": "components.harvestable:StartGrowing",
        "body": "components.harvestable:StartGrowing(${1:time})",
        "description": " ※Params: \n   (time)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.harvestable:OnLoad:": {
        "prefix": "components.harvestable:OnLoad",
        "body": "components.harvestable:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.harvestable:SetGrowTime:": {
        "prefix": "components.harvestable:SetGrowTime",
        "body": "components.harvestable:SetGrowTime(${1:time})",
        "description": " ※Params: \n   (time)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.harvestable:DoMagicGrowth:": {
        "prefix": "components.harvestable:DoMagicGrowth",
        "body": "components.harvestable:DoMagicGrowth(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.harvestable:SetCanHarvestFn:": {
        "prefix": "components.harvestable:SetCanHarvestFn",
        "body": "components.harvestable:SetCanHarvestFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.harvestable:OnRemoveFromEntity:": {
        "prefix": "components.harvestable:OnRemoveFromEntity",
        "body": "components.harvestable:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.harvestable:OnSave:": {
        "prefix": "components.harvestable:OnSave",
        "body": "components.harvestable:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.harvestable:StopGrowing:": {
        "prefix": "components.harvestable:StopGrowing",
        "body": "components.harvestable:StopGrowing()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.harvestable:PauseGrowing:": {
        "prefix": "components.harvestable:PauseGrowing",
        "body": "components.harvestable:PauseGrowing()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.harvestable:Disable:": {
        "prefix": "components.harvestable:Disable",
        "body": "components.harvestable:Disable()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.harvestable:SetOnGrowFn:": {
        "prefix": "components.harvestable:SetOnGrowFn",
        "body": "components.harvestable:SetOnGrowFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.harvestable:Enable:": {
        "prefix": "components.harvestable:Enable",
        "body": "components.harvestable:Enable()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.harvestable:Harvest:": {
        "prefix": "components.harvestable:Harvest",
        "body": "components.harvestable:Harvest(${1:picker})",
        "description": " ※Params: \n   (picker)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.harvestable:SetDoMagicGrowthFn:": {
        "prefix": "components.harvestable:SetDoMagicGrowthFn",
        "body": "components.harvestable:SetDoMagicGrowthFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.harvestable:Grow:": {
        "prefix": "components.harvestable:Grow",
        "body": "components.harvestable:Grow()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.harvestable:GetDebugString:": {
        "prefix": "components.harvestable:GetDebugString",
        "body": "components.harvestable:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.harvestable:SetProduct:": {
        "prefix": "components.harvestable:SetProduct",
        "body": "components.harvestable:SetProduct(${1:product},${2:max})",
        "description": " ※Params: \n   (product)<>[] \n   (max)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.harvestable:SetUp:": {
        "prefix": "components.harvestable:SetUp",
        "body": "components.harvestable:SetUp(${1:product},${2:max},${3:time},${4:onharvest},${5:ongrow})",
        "description": " ※Params: \n   (product)<>[] \n   (max)<>[] \n   (time)<>[] \n   (onharvest)<>[] \n   (ongrow)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.harvestable:SetOnHarvestFn:": {
        "prefix": "components.harvestable:SetOnHarvestFn",
        "body": "components.harvestable:SetOnHarvestFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.harvestable:CanBeHarvested:": {
        "prefix": "components.harvestable:CanBeHarvested",
        "body": "components.harvestable:CanBeHarvested()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.harvestable:IsMagicGrowable:": {
        "prefix": "components.harvestable:IsMagicGrowable",
        "body": "components.harvestable:IsMagicGrowable()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hatchable:SetCrackTime:": {
        "prefix": "components.hatchable:SetCrackTime",
        "body": "components.hatchable:SetCrackTime(${1:t})",
        "description": " ※Params: \n   (t)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hatchable:OnLoad:": {
        "prefix": "components.hatchable:OnLoad",
        "body": "components.hatchable:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hatchable:OnState:": {
        "prefix": "components.hatchable:OnState",
        "body": "components.hatchable:OnState(${1:state},${2:forcestateupdate})",
        "description": " ※Params: \n   (state)<>[] \n   (forcestateupdate)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hatchable:SetHatchFailTime:": {
        "prefix": "components.hatchable:SetHatchFailTime",
        "body": "components.hatchable:SetHatchFailTime(${1:t})",
        "description": " ※Params: \n   (t)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hatchable:OnSave:": {
        "prefix": "components.hatchable:OnSave",
        "body": "components.hatchable:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hatchable:SetHeaterPrefs:": {
        "prefix": "components.hatchable:SetHeaterPrefs",
        "body": "components.hatchable:SetHeaterPrefs(${1:day},${2:dusk},${3:night})",
        "description": " ※Params: \n   (day)<>[] \n   (dusk)<>[] \n   (night)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hatchable:GetHeaterPref:": {
        "prefix": "components.hatchable:GetHeaterPref",
        "body": "components.hatchable:GetHeaterPref(${1:phase})",
        "description": " ※Params: \n   (phase)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hatchable:SetChillerPrefs:": {
        "prefix": "components.hatchable:SetChillerPrefs",
        "body": "components.hatchable:SetChillerPrefs(${1:day},${2:dusk},${3:night})",
        "description": " ※Params: \n   (day)<>[] \n   (dusk)<>[] \n   (night)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hatchable:StopUpdating:": {
        "prefix": "components.hatchable:StopUpdating",
        "body": "components.hatchable:StopUpdating()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hatchable:GetChillerPref:": {
        "prefix": "components.hatchable:GetChillerPref",
        "body": "components.hatchable:GetChillerPref(${1:phase})",
        "description": " ※Params: \n   (phase)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hatchable:GetDebugString:": {
        "prefix": "components.hatchable:GetDebugString",
        "body": "components.hatchable:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hatchable:SetOnState:": {
        "prefix": "components.hatchable:SetOnState",
        "body": "components.hatchable:SetOnState(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hatchable:Delay:": {
        "prefix": "components.hatchable:Delay",
        "body": "components.hatchable:Delay(${1:time})",
        "description": " ※Params: \n   (time)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hatchable:StartUpdating:": {
        "prefix": "components.hatchable:StartUpdating",
        "body": "components.hatchable:StartUpdating()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hatchable:SetHatchTime:": {
        "prefix": "components.hatchable:SetHatchTime",
        "body": "components.hatchable:SetHatchTime(${1:t})",
        "description": " ※Params: \n   (t)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hatchable:OnUpdate:": {
        "prefix": "components.hatchable:OnUpdate",
        "body": "components.hatchable:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hauntable:SetOnHauntFn:": {
        "prefix": "components.hauntable:SetOnHauntFn",
        "body": "components.hauntable:SetOnHauntFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hauntable:StartShaderFx:": {
        "prefix": "components.hauntable:StartShaderFx",
        "body": "components.hauntable:StartShaderFx()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hauntable:OnRemoveFromEntity:": {
        "prefix": "components.hauntable:OnRemoveFromEntity",
        "body": "components.hauntable:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hauntable:OnUpdate:": {
        "prefix": "components.hauntable:OnUpdate",
        "body": "components.hauntable:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hauntable:StopShaderFX:": {
        "prefix": "components.hauntable:StopShaderFX",
        "body": "components.hauntable:StopShaderFX()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hauntable:StopFX:": {
        "prefix": "components.hauntable:StopFX",
        "body": "components.hauntable:StopFX()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hauntable:Panic:": {
        "prefix": "components.hauntable:Panic",
        "body": "components.hauntable:Panic(${1:panictime})",
        "description": " ※Params: \n   (panictime)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hauntable:DoHaunt:": {
        "prefix": "components.hauntable:DoHaunt",
        "body": "components.hauntable:DoHaunt(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hauntable:SetOnUnHauntFn:": {
        "prefix": "components.hauntable:SetOnUnHauntFn",
        "body": "components.hauntable:SetOnUnHauntFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hauntable:AdvanceFlickerState:": {
        "prefix": "components.hauntable:AdvanceFlickerState",
        "body": "components.hauntable:AdvanceFlickerState()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hauntable:SetHauntValue:": {
        "prefix": "components.hauntable:SetHauntValue",
        "body": "components.hauntable:SetHauntValue(${1:val})",
        "description": " ※Params: \n   (val)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hauntable:StartFX:": {
        "prefix": "components.hauntable:StartFX",
        "body": "components.hauntable:StartFX(${1:noflicker})",
        "description": " ※Params: \n   (noflicker)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.healer:SetHealthAmount:设置一个治疗量x，在触发治疗后，恢复玩家血量x 治疗量默认值为 TUNING.HEALING_SMALL = 3": {
        "prefix": "components.healer:SetHealthAmount",
        "body": "components.healer:SetHealthAmount(${1:health})",
        "description": " ※Params: \n   (health)<number>[治疗量] \n ※Description: 设置一个治疗量x，在触发治疗后，恢复玩家血量x 治疗量默认值为 TUNING.HEALING_SMALL = 3\n ※Contributor: @御坂十七号"
    },
    "Component.healer:Heal:该方法在触发治疗时调用，该方法内会依次触发SetCanHealFn设置的判断和SetOnHealFn设置的触发方法，还会判断治疗目标本身的target.components.health.canheal，如果canheal=false,则依然会触发整个治疗流程并扣除治疗预制物，但目标不会加血。": {
        "prefix": "components.healer:Heal",
        "body": "components.healer:Heal(${1:target},${2:doer})",
        "description": " ※Params: \n   (target)<实体对象>[治疗目标] \n   (doer)<触发治疗的对象，一般是玩家。>[使用者] \n ※Description: 该方法在触发治疗时调用，该方法内会依次触发SetCanHealFn设置的判断和SetOnHealFn设置的触发方法，还会判断治疗目标本身的target.components.health.canheal，如果canheal=false,则依然会触发整个治疗流程并扣除治疗预制物，但目标不会加血。\n ※Contributor: @御坂十七号"
    },
    "Component.healer:SetCanHealFn:传入一个方法，用于判断是否可以触发治疗。例如：SetCanHealFn(function (inst, target, doer) return false,'不准治疗他') inst是有该组件的预制物，target是治疗目标,doer是使用者": {
        "prefix": "components.healer:SetCanHealFn",
        "body": "components.healer:SetCanHealFn(${1:fn})",
        "description": " ※Params: \n   (fn)<function>[方法] \n ※Description: 传入一个方法，用于判断是否可以触发治疗。例如：SetCanHealFn(function (inst, target, doer) return false,'不准治疗他') inst是有该组件的预制物，target是治疗目标,doer是使用者\n ※Contributor: @御坂十七号"
    },
    "Component.healer:SetOnHealFn:设置一个方法，在触发治疗时，会触发该方法，例如：SetOnHealFn(function (inst, target,doer)  end)，inst是有该组件的预制物，target是治疗目标,doer是使用者": {
        "prefix": "components.healer:SetOnHealFn",
        "body": "components.healer:SetOnHealFn(${1:fn})",
        "description": " ※Params: \n   (fn)<function>[方法] \n ※Description: 设置一个方法，在触发治疗时，会触发该方法，例如：SetOnHealFn(function (inst, target,doer)  end)，inst是有该组件的预制物，target是治疗目标,doer是使用者\n ※Contributor: @御坂十七号"
    },
    "Component.health:IsHurt:": {
        "prefix": "components.health:IsHurt",
        "body": "components.health:IsHurt()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.health:ForceUpdateHUD:": {
        "prefix": "components.health:ForceUpdateHUD",
        "body": "components.health:ForceUpdateHUD(${1:overtime})",
        "description": " ※Params: \n   (overtime)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.health:RemoveRegenSource:": {
        "prefix": "components.health:RemoveRegenSource",
        "body": "components.health:RemoveRegenSource(${1:source},${2:key})",
        "description": " ※Params: \n   (source)<>[] \n   (key)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.health:GetPercent:": {
        "prefix": "components.health:GetPercent",
        "body": "components.health:GetPercent()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.health:GetFireDamageScale:": {
        "prefix": "components.health:GetFireDamageScale",
        "body": "components.health:GetFireDamageScale()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.health:SetMinHealth:": {
        "prefix": "components.health:SetMinHealth",
        "body": "components.health:SetMinHealth(${1:amount})",
        "description": " ※Params: \n   (amount)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.health:SetAbsorptionAmountFromPlayer:": {
        "prefix": "components.health:SetAbsorptionAmountFromPlayer",
        "body": "components.health:SetAbsorptionAmountFromPlayer(${1:amount})",
        "description": " ※Params: \n   (amount)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.health:GetDebugString:": {
        "prefix": "components.health:GetDebugString",
        "body": "components.health:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.health:Kill:": {
        "prefix": "components.health:Kill",
        "body": "components.health:Kill()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.health:OnSave:": {
        "prefix": "components.health:OnSave",
        "body": "components.health:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.health:DoFireDamage:": {
        "prefix": "components.health:DoFireDamage",
        "body": "components.health:DoFireDamage(${1:amount},${2:doer},${3:instant})",
        "description": " ※Params: \n   (amount)<>[] \n   (doer)<>[] \n   (instant)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.health:SetPercent:": {
        "prefix": "components.health:SetPercent",
        "body": "components.health:SetPercent(${1:percent},${2:overtime},${3:cause})",
        "description": " ※Params: \n   (percent)<>[] \n   (overtime)<>[] \n   (cause)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.health:AddRegenSource:": {
        "prefix": "components.health:AddRegenSource",
        "body": "components.health:AddRegenSource(${1:source},${2:amount},${3:period},${4:key})",
        "description": " ※Params: \n   (source)<>[] \n   (amount)<>[] \n   (period)<>[] \n   (key)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.health:OnLoad:": {
        "prefix": "components.health:OnLoad",
        "body": "components.health:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.health:GetPenaltyPercent:": {
        "prefix": "components.health:GetPenaltyPercent",
        "body": "components.health:GetPenaltyPercent()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.health:TransferComponent:": {
        "prefix": "components.health:TransferComponent",
        "body": "components.health:TransferComponent(${1:newinst})",
        "description": " ※Params: \n   (newinst)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.health:OnRemoveFromEntity:": {
        "prefix": "components.health:OnRemoveFromEntity",
        "body": "components.health:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.health:GetPercentWithPenalty:": {
        "prefix": "components.health:GetPercentWithPenalty",
        "body": "components.health:GetPercentWithPenalty()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.health:DeltaPenalty:": {
        "prefix": "components.health:DeltaPenalty",
        "body": "components.health:DeltaPenalty(${1:delta})",
        "description": " ※Params: \n   (delta)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.health:DoDelta:": {
        "prefix": "components.health:DoDelta",
        "body": "components.health:DoDelta(${1:amount},${2:overtime},${3:cause},${4:ignore_invincible},${5:afflicter},${6:ignore_absorb})",
        "description": " ※Params: \n   (amount)<>[] \n   (overtime)<>[] \n   (cause)<>[] \n   (ignore_invincible)<>[] \n   (afflicter)<>[] \n   (ignore_absorb)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.health:RecalculatePenalty:": {
        "prefix": "components.health:RecalculatePenalty",
        "body": "components.health:RecalculatePenalty()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.health:StopRegen:": {
        "prefix": "components.health:StopRegen",
        "body": "components.health:StopRegen()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.health:SetVal:": {
        "prefix": "components.health:SetVal",
        "body": "components.health:SetVal(${1:val},${2:cause},${3:afflicter})",
        "description": " ※Params: \n   (val)<>[] \n   (cause)<>[] \n   (afflicter)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.health:IsDead:": {
        "prefix": "components.health:IsDead",
        "body": "components.health:IsDead()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.health:SetMaxDamageTakenPerHit:": {
        "prefix": "components.health:SetMaxDamageTakenPerHit",
        "body": "components.health:SetMaxDamageTakenPerHit(${1:maxdamagetakenperhit})",
        "description": " ※Params: \n   (maxdamagetakenperhit)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.health:GetMaxWithPenalty:": {
        "prefix": "components.health:GetMaxWithPenalty",
        "body": "components.health:GetMaxWithPenalty()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.health:SetMaxHealth:": {
        "prefix": "components.health:SetMaxHealth",
        "body": "components.health:SetMaxHealth(${1:amount})",
        "description": " ※Params: \n   (amount)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.health:SetAbsorptionAmount:": {
        "prefix": "components.health:SetAbsorptionAmount",
        "body": "components.health:SetAbsorptionAmount(${1:amount})",
        "description": " ※Params: \n   (amount)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.health:StartRegen:": {
        "prefix": "components.health:StartRegen",
        "body": "components.health:StartRegen(${1:amount},${2:period},${3:interruptcurrentregen})",
        "description": " ※Params: \n   (amount)<>[] \n   (period)<>[] \n   (interruptcurrentregen)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.health:SetPenalty:": {
        "prefix": "components.health:SetPenalty",
        "body": "components.health:SetPenalty(${1:penalty})",
        "description": " ※Params: \n   (penalty)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.health:IsInvincible:": {
        "prefix": "components.health:IsInvincible",
        "body": "components.health:IsInvincible()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.health:SetCurrentHealth:": {
        "prefix": "components.health:SetCurrentHealth",
        "body": "components.health:SetCurrentHealth(${1:amount})",
        "description": " ※Params: \n   (amount)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.health:OnUpdate:": {
        "prefix": "components.health:OnUpdate",
        "body": "components.health:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.healthbar:Enable:": {
        "prefix": "components.healthbar:Enable",
        "body": "components.healthbar:Enable(${1:enable})",
        "description": " ※Params: \n   (enable)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.healthbar:SetValue:": {
        "prefix": "components.healthbar:SetValue",
        "body": "components.healthbar:SetValue(${1:percent})",
        "description": " ※Params: \n   (percent)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.healthsyncer:GetPercent:": {
        "prefix": "components.healthsyncer:GetPercent",
        "body": "components.healthsyncer:GetPercent()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.healthsyncer:GetOverTime:": {
        "prefix": "components.healthsyncer:GetOverTime",
        "body": "components.healthsyncer:GetOverTime()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.healthsyncer:OnUpdate:": {
        "prefix": "components.healthsyncer:OnUpdate",
        "body": "components.healthsyncer:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.healthtrigger:AddTrigger:": {
        "prefix": "components.healthtrigger:AddTrigger",
        "body": "components.healthtrigger:AddTrigger(${1:amount},${2:fn})",
        "description": " ※Params: \n   (amount)<>[] \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.healthtrigger:OnRemoveFromEntity:": {
        "prefix": "components.healthtrigger:OnRemoveFromEntity",
        "body": "components.healthtrigger:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.heater:SetShouldFalloff:": {
        "prefix": "components.heater:SetShouldFalloff",
        "body": "components.heater:SetShouldFalloff(${1:should_falloff})",
        "description": " ※Params: \n   (should_falloff)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.heater:IsExothermic:": {
        "prefix": "components.heater:IsExothermic",
        "body": "components.heater:IsExothermic()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.heater:ShouldFalloff:": {
        "prefix": "components.heater:ShouldFalloff",
        "body": "components.heater:ShouldFalloff()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.heater:SetThermics:": {
        "prefix": "components.heater:SetThermics",
        "body": "components.heater:SetThermics(${1:exo},${2:endo})",
        "description": " ※Params: \n   (exo)<>[] \n   (endo)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.heater:GetHeat:": {
        "prefix": "components.heater:GetHeat",
        "body": "components.heater:GetHeat(${1:observer})",
        "description": " ※Params: \n   (observer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.heater:GetDebugString:": {
        "prefix": "components.heater:GetDebugString",
        "body": "components.heater:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.heater:GetHeatRadiusCutoff:": {
        "prefix": "components.heater:GetHeatRadiusCutoff",
        "body": "components.heater:GetHeatRadiusCutoff()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.heater:GetCarriedHeat:": {
        "prefix": "components.heater:GetCarriedHeat",
        "body": "components.heater:GetCarriedHeat(${1:observer})",
        "description": " ※Params: \n   (observer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.heater:IsEndothermic:": {
        "prefix": "components.heater:IsEndothermic",
        "body": "components.heater:IsEndothermic()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.heater:GetEquippedHeat:": {
        "prefix": "components.heater:GetEquippedHeat",
        "body": "components.heater:GetEquippedHeat(${1:observer})",
        "description": " ※Params: \n   (observer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.heater:SetHeatRadiusCutoff:": {
        "prefix": "components.heater:SetHeatRadiusCutoff",
        "body": "components.heater:SetHeatRadiusCutoff(${1:radius_cutoff})",
        "description": " ※Params: \n   (radius_cutoff)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.heater:OnRemoveFromEntity:": {
        "prefix": "components.heater:OnRemoveFromEntity",
        "body": "components.heater:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.heavyobstaclephysics:IsObstacle:": {
        "prefix": "components.heavyobstaclephysics:IsObstacle",
        "body": "components.heavyobstaclephysics:IsObstacle()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.heavyobstaclephysics:SetOnPhysicsStateChangedFn:": {
        "prefix": "components.heavyobstaclephysics:SetOnPhysicsStateChangedFn",
        "body": "components.heavyobstaclephysics:SetOnPhysicsStateChangedFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.heavyobstaclephysics:IsItem:": {
        "prefix": "components.heavyobstaclephysics:IsItem",
        "body": "components.heavyobstaclephysics:IsItem()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.heavyobstaclephysics:SetOnStartFallingFn:": {
        "prefix": "components.heavyobstaclephysics:SetOnStartFallingFn",
        "body": "components.heavyobstaclephysics:SetOnStartFallingFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.heavyobstaclephysics:SetOnStopFallingFn:": {
        "prefix": "components.heavyobstaclephysics:SetOnStopFallingFn",
        "body": "components.heavyobstaclephysics:SetOnStopFallingFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.heavyobstaclephysics:GetPhysicsState:": {
        "prefix": "components.heavyobstaclephysics:GetPhysicsState",
        "body": "components.heavyobstaclephysics:GetPhysicsState()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.heavyobstaclephysics:MakeSmallObstacle:": {
        "prefix": "components.heavyobstaclephysics:MakeSmallObstacle",
        "body": "components.heavyobstaclephysics:MakeSmallObstacle()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.heavyobstaclephysics:SetRadius:": {
        "prefix": "components.heavyobstaclephysics:SetRadius",
        "body": "components.heavyobstaclephysics:SetRadius(${1:radius})",
        "description": " ※Params: \n   (radius)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.heavyobstaclephysics:SetOnChangeToItemFn:": {
        "prefix": "components.heavyobstaclephysics:SetOnChangeToItemFn",
        "body": "components.heavyobstaclephysics:SetOnChangeToItemFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.heavyobstaclephysics:SetOnChangeToObstacleFn:": {
        "prefix": "components.heavyobstaclephysics:SetOnChangeToObstacleFn",
        "body": "components.heavyobstaclephysics:SetOnChangeToObstacleFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.heavyobstaclephysics:IsFalling:": {
        "prefix": "components.heavyobstaclephysics:IsFalling",
        "body": "components.heavyobstaclephysics:IsFalling()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.heavyobstaclephysics:AddFallingStates:": {
        "prefix": "components.heavyobstaclephysics:AddFallingStates",
        "body": "components.heavyobstaclephysics:AddFallingStates()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.heavyobstaclephysics:OnRemoveFromEntity:": {
        "prefix": "components.heavyobstaclephysics:OnRemoveFromEntity",
        "body": "components.heavyobstaclephysics:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.heavyobstacleusetarget:UseHeavyObstacle:": {
        "prefix": "components.heavyobstacleusetarget:UseHeavyObstacle",
        "body": "components.heavyobstacleusetarget:UseHeavyObstacle(${1:doer},${2:heavy_obstacle})",
        "description": " ※Params: \n   (doer)<>[] \n   (heavy_obstacle)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.herd:SetGatherRange:": {
        "prefix": "components.herd:SetGatherRange",
        "body": "components.herd:SetGatherRange(${1:range})",
        "description": " ※Params: \n   (range)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.herd:SetOnEmptyFn:": {
        "prefix": "components.herd:SetOnEmptyFn",
        "body": "components.herd:SetOnEmptyFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.herd:RemoveMember:": {
        "prefix": "components.herd:RemoveMember",
        "body": "components.herd:RemoveMember(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.herd:SetOnFullFn:": {
        "prefix": "components.herd:SetOnFullFn",
        "body": "components.herd:SetOnFullFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.herd:SetMaxSize:": {
        "prefix": "components.herd:SetMaxSize",
        "body": "components.herd:SetMaxSize(${1:size})",
        "description": " ※Params: \n   (size)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.herd:GatherNearbyMembers:": {
        "prefix": "components.herd:GatherNearbyMembers",
        "body": "components.herd:GatherNearbyMembers()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.herd:LoadPostPass:": {
        "prefix": "components.herd:LoadPostPass",
        "body": "components.herd:LoadPostPass(${1:newents},${2:savedata})",
        "description": " ※Params: \n   (newents)<>[] \n   (savedata)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.herd:SetAddMemberFn:": {
        "prefix": "components.herd:SetAddMemberFn",
        "body": "components.herd:SetAddMemberFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.herd:OnRemoveFromEntity:": {
        "prefix": "components.herd:OnRemoveFromEntity",
        "body": "components.herd:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.herd:SetRemoveMemberFn:": {
        "prefix": "components.herd:SetRemoveMemberFn",
        "body": "components.herd:SetRemoveMemberFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.herd:MergeNearbyHerds:": {
        "prefix": "components.herd:MergeNearbyHerds",
        "body": "components.herd:MergeNearbyHerds()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.herd:SetUpdateRange:": {
        "prefix": "components.herd:SetUpdateRange",
        "body": "components.herd:SetUpdateRange(${1:range})",
        "description": " ※Params: \n   (range)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.herd:SetMemberTag:": {
        "prefix": "components.herd:SetMemberTag",
        "body": "components.herd:SetMemberTag(${1:tag})",
        "description": " ※Params: \n   (tag)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.herd:GetDebugString:": {
        "prefix": "components.herd:GetDebugString",
        "body": "components.herd:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.herd:IsFull:": {
        "prefix": "components.herd:IsFull",
        "body": "components.herd:IsFull()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.herd:OnRemoveEntity:": {
        "prefix": "components.herd:OnRemoveEntity",
        "body": "components.herd:OnRemoveEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.herd:AddMember:": {
        "prefix": "components.herd:AddMember",
        "body": "components.herd:AddMember(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.herd:OnSave:": {
        "prefix": "components.herd:OnSave",
        "body": "components.herd:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.herd:OnUpdate:": {
        "prefix": "components.herd:OnUpdate",
        "body": "components.herd:OnUpdate()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.herdmember:Leave:": {
        "prefix": "components.herdmember:Leave",
        "body": "components.herdmember:Leave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.herdmember:SetHerdPrefab:": {
        "prefix": "components.herdmember:SetHerdPrefab",
        "body": "components.herdmember:SetHerdPrefab(${1:prefab})",
        "description": " ※Params: \n   (prefab)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.herdmember:GetHerd:": {
        "prefix": "components.herdmember:GetHerd",
        "body": "components.herdmember:GetHerd()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.herdmember:GetDebugString:": {
        "prefix": "components.herdmember:GetDebugString",
        "body": "components.herdmember:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.herdmember:Enable:": {
        "prefix": "components.herdmember:Enable",
        "body": "components.herdmember:Enable(${1:enabled})",
        "description": " ※Params: \n   (enabled)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.herdmember:CreateHerd:": {
        "prefix": "components.herdmember:CreateHerd",
        "body": "components.herdmember:CreateHerd()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.herdmember:SetHerd:": {
        "prefix": "components.herdmember:SetHerd",
        "body": "components.herdmember:SetHerd(${1:herd})",
        "description": " ※Params: \n   (herd)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.herdmember:OnRemoveFromEntity:": {
        "prefix": "components.herdmember:OnRemoveFromEntity",
        "body": "components.herdmember:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hideandseeker:SetGame:": {
        "prefix": "components.hideandseeker:SetGame",
        "body": "components.hideandseeker:SetGame(${1:hideandseekgame})",
        "description": " ※Params: \n   (hideandseekgame)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hideandseeker:GetDebugString:": {
        "prefix": "components.hideandseeker:GetDebugString",
        "body": "components.hideandseeker:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hideandseeker:OnRemoveFromEntity:": {
        "prefix": "components.hideandseeker:OnRemoveFromEntity",
        "body": "components.hideandseeker:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hideandseekgame:UnregisterHidingSpot:": {
        "prefix": "components.hideandseekgame:UnregisterHidingSpot",
        "body": "components.hideandseekgame:UnregisterHidingSpot(${1:hiding_spot})",
        "description": " ※Params: \n   (hiding_spot)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hideandseekgame:AddSeeker:": {
        "prefix": "components.hideandseekgame:AddSeeker",
        "body": "components.hideandseekgame:AddSeeker(${1:seeker},${2:started_game})",
        "description": " ※Params: \n   (seeker)<>[] \n   (started_game)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hideandseekgame:RegisterHidingSpot:": {
        "prefix": "components.hideandseekgame:RegisterHidingSpot",
        "body": "components.hideandseekgame:RegisterHidingSpot(${1:hiding_spot})",
        "description": " ※Params: \n   (hiding_spot)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hideandseekgame:Abort:": {
        "prefix": "components.hideandseekgame:Abort",
        "body": "components.hideandseekgame:Abort()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hideandseekgame:IsActive:": {
        "prefix": "components.hideandseekgame:IsActive",
        "body": "components.hideandseekgame:IsActive()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hideandseekgame:GetNumFound:": {
        "prefix": "components.hideandseekgame:GetNumFound",
        "body": "components.hideandseekgame:GetNumFound()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hideandseekgame:LoadPostPass:": {
        "prefix": "components.hideandseekgame:LoadPostPass",
        "body": "components.hideandseekgame:LoadPostPass(${1:newents},${2:data})",
        "description": " ※Params: \n   (newents)<>[] \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hideandseekgame:GetDebugString:": {
        "prefix": "components.hideandseekgame:GetDebugString",
        "body": "components.hideandseekgame:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hideandseekgame:_HideAndSeekOver:": {
        "prefix": "components.hideandseekgame:_HideAndSeekOver",
        "body": "components.hideandseekgame:_HideAndSeekOver()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hideandseekgame:GetNumSeekers:": {
        "prefix": "components.hideandseekgame:GetNumSeekers",
        "body": "components.hideandseekgame:GetNumSeekers()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hideandseekgame:GetNumHiding:": {
        "prefix": "components.hideandseekgame:GetNumHiding",
        "body": "components.hideandseekgame:GetNumHiding()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hideandseekgame:OnSave:": {
        "prefix": "components.hideandseekgame:OnSave",
        "body": "components.hideandseekgame:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hideandseekgame:OnRemoveEntity:": {
        "prefix": "components.hideandseekgame:OnRemoveEntity",
        "body": "components.hideandseekgame:OnRemoveEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hideandseekhider:CanPlayHideAndSeek:": {
        "prefix": "components.hideandseekhider:CanPlayHideAndSeek",
        "body": "components.hideandseekhider:CanPlayHideAndSeek()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hideandseekhider:IsPlaying:": {
        "prefix": "components.hideandseekhider:IsPlaying",
        "body": "components.hideandseekhider:IsPlaying()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hideandseekhider:GoHide:": {
        "prefix": "components.hideandseekhider:GoHide",
        "body": "components.hideandseekhider:GoHide(${1:hiding_spot},${2:timeout_time},${3:isloading})",
        "description": " ※Params: \n   (hiding_spot)<>[] \n   (timeout_time)<>[] \n   (isloading)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hideandseekhider:Abort:": {
        "prefix": "components.hideandseekhider:Abort",
        "body": "components.hideandseekhider:Abort()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hideandseekhider:IsHidden:": {
        "prefix": "components.hideandseekhider:IsHidden",
        "body": "components.hideandseekhider:IsHidden()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hideandseekhider:LoadPostPass:": {
        "prefix": "components.hideandseekhider:LoadPostPass",
        "body": "components.hideandseekhider:LoadPostPass(${1:newents},${2:data})",
        "description": " ※Params: \n   (newents)<>[] \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hideandseekhider:Found:": {
        "prefix": "components.hideandseekhider:Found",
        "body": "components.hideandseekhider:Found(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hideandseekhider:OnSave:": {
        "prefix": "components.hideandseekhider:OnSave",
        "body": "components.hideandseekhider:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hideandseekhider:GetDebugString:": {
        "prefix": "components.hideandseekhider:GetDebugString",
        "body": "components.hideandseekhider:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hideandseekhidingspot:_ReleaesHider:": {
        "prefix": "components.hideandseekhidingspot:_ReleaesHider",
        "body": "components.hideandseekhidingspot:_ReleaesHider(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hideandseekhidingspot:Abort:": {
        "prefix": "components.hideandseekhidingspot:Abort",
        "body": "components.hideandseekhidingspot:Abort()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hideandseekhidingspot:SearchHidingSpot:": {
        "prefix": "components.hideandseekhidingspot:SearchHidingSpot",
        "body": "components.hideandseekhidingspot:SearchHidingSpot(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hideandseekhidingspot:OnLoad:": {
        "prefix": "components.hideandseekhidingspot:OnLoad",
        "body": "components.hideandseekhidingspot:OnLoad(${1:data},${2:newents})",
        "description": " ※Params: \n   (data)<>[] \n   (newents)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hideandseekhidingspot:SetHider:": {
        "prefix": "components.hideandseekhidingspot:SetHider",
        "body": "components.hideandseekhidingspot:SetHider(${1:hider})",
        "description": " ※Params: \n   (hider)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hideandseekhidingspot:GetDebugString:": {
        "prefix": "components.hideandseekhidingspot:GetDebugString",
        "body": "components.hideandseekhidingspot:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hideandseekhidingspot:HideInSpot:": {
        "prefix": "components.hideandseekhidingspot:HideInSpot",
        "body": "components.hideandseekhidingspot:HideInSpot(${1:hider})",
        "description": " ※Params: \n   (hider)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hideandseekhidingspot:OnRemoveFromEntity:": {
        "prefix": "components.hideandseekhidingspot:OnRemoveFromEntity",
        "body": "components.hideandseekhidingspot:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hideandseekhidingspot:OnSave:": {
        "prefix": "components.hideandseekhidingspot:OnSave",
        "body": "components.hideandseekhidingspot:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hideandseekhidingspot:OnRemoveEntity:": {
        "prefix": "components.hideandseekhidingspot:OnRemoveEntity",
        "body": "components.hideandseekhidingspot:OnRemoveEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hideout:GoHome:": {
        "prefix": "components.hideout:GoHome",
        "body": "components.hideout:GoHome(${1:child})",
        "description": " ※Params: \n   (child)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hideout:SetOccupiedFn:": {
        "prefix": "components.hideout:SetOccupiedFn",
        "body": "components.hideout:SetOccupiedFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hideout:StartSpawning:": {
        "prefix": "components.hideout:StartSpawning",
        "body": "components.hideout:StartSpawning()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hideout:OnLoad:": {
        "prefix": "components.hideout:OnLoad",
        "body": "components.hideout:OnLoad(${1:data},${2:newents})",
        "description": " ※Params: \n   (data)<>[] \n   (newents)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hideout:LoadPostPass:": {
        "prefix": "components.hideout:LoadPostPass",
        "body": "components.hideout:LoadPostPass(${1:newents},${2:data})",
        "description": " ※Params: \n   (newents)<>[] \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hideout:StartUpdate:": {
        "prefix": "components.hideout:StartUpdate",
        "body": "components.hideout:StartUpdate()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hideout:StopSpawning:": {
        "prefix": "components.hideout:StopSpawning",
        "body": "components.hideout:StopSpawning()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hideout:ReleaseChild:": {
        "prefix": "components.hideout:ReleaseChild",
        "body": "components.hideout:ReleaseChild(${1:target},${2:prefab},${3:radius})",
        "description": " ※Params: \n   (target)<>[] \n   (prefab)<>[] \n   (radius)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hideout:SetSpawnPeriod:": {
        "prefix": "components.hideout:SetSpawnPeriod",
        "body": "components.hideout:SetSpawnPeriod(${1:period},${2:variance})",
        "description": " ※Params: \n   (period)<>[] \n   (variance)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hideout:DoReleaseChild:": {
        "prefix": "components.hideout:DoReleaseChild",
        "body": "components.hideout:DoReleaseChild(${1:target},${2:child},${3:radius})",
        "description": " ※Params: \n   (target)<>[] \n   (child)<>[] \n   (radius)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hideout:GetDebugString:": {
        "prefix": "components.hideout:GetDebugString",
        "body": "components.hideout:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hideout:LongUpdate:": {
        "prefix": "components.hideout:LongUpdate",
        "body": "components.hideout:LongUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hideout:SetGoHomeFn:": {
        "prefix": "components.hideout:SetGoHomeFn",
        "body": "components.hideout:SetGoHomeFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hideout:SetVacateFn:": {
        "prefix": "components.hideout:SetVacateFn",
        "body": "components.hideout:SetVacateFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hideout:ReleaseAllChildren:": {
        "prefix": "components.hideout:ReleaseAllChildren",
        "body": "components.hideout:ReleaseAllChildren(${1:target},${2:prefab})",
        "description": " ※Params: \n   (target)<>[] \n   (prefab)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hideout:CanRelease:": {
        "prefix": "components.hideout:CanRelease",
        "body": "components.hideout:CanRelease()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hideout:SetSpawnedFn:": {
        "prefix": "components.hideout:SetSpawnedFn",
        "body": "components.hideout:SetSpawnedFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hideout:OnSave:": {
        "prefix": "components.hideout:OnSave",
        "body": "components.hideout:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hideout:OnUpdate:": {
        "prefix": "components.hideout:OnUpdate",
        "body": "components.hideout:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.highlight:Flash:": {
        "prefix": "components.highlight:Flash",
        "body": "components.highlight:Flash(${1:toadd},${2:timein},${3:timeout})",
        "description": " ※Params: \n   (toadd)<>[] \n   (timein)<>[] \n   (timeout)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.highlight:OnRemoveFromEntity:": {
        "prefix": "components.highlight:OnRemoveFromEntity",
        "body": "components.highlight:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.highlight:ApplyColour:": {
        "prefix": "components.highlight:ApplyColour",
        "body": "components.highlight:ApplyColour()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.highlight:Highlight:": {
        "prefix": "components.highlight:Highlight",
        "body": "components.highlight:Highlight(${1:r},${2:g},${3:b})",
        "description": " ※Params: \n   (r)<>[] \n   (g)<>[] \n   (b)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.highlight:UnHighlight:": {
        "prefix": "components.highlight:UnHighlight",
        "body": "components.highlight:UnHighlight()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.highlight:SetAddColour:": {
        "prefix": "components.highlight:SetAddColour",
        "body": "components.highlight:SetAddColour(${1:col})",
        "description": " ※Params: \n   (col)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.highlight:OnUpdate:": {
        "prefix": "components.highlight:OnUpdate",
        "body": "components.highlight:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.highlightchild:OnChangeOwner:": {
        "prefix": "components.highlightchild:OnChangeOwner",
        "body": "components.highlightchild:OnChangeOwner(${1:owner})",
        "description": " ※Params: \n   (owner)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.highlightchild:SetOwner:": {
        "prefix": "components.highlightchild:SetOwner",
        "body": "components.highlightchild:SetOwner(${1:owner})",
        "description": " ※Params: \n   (owner)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.highlightchild:OnRemoveEntity:": {
        "prefix": "components.highlightchild:OnRemoveEntity",
        "body": "components.highlightchild:OnRemoveEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hitchable:GetHitch:": {
        "prefix": "components.hitchable:GetHitch",
        "body": "components.hitchable:GetHitch()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hitchable:Unhitch:": {
        "prefix": "components.hitchable:Unhitch",
        "body": "components.hitchable:Unhitch()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hitchable:SetHitched:": {
        "prefix": "components.hitchable:SetHitched",
        "body": "components.hitchable:SetHitched(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hitchable:OnSave:": {
        "prefix": "components.hitchable:OnSave",
        "body": "components.hitchable:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hitchable:OnLoad:": {
        "prefix": "components.hitchable:OnLoad",
        "body": "components.hitchable:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hitcher:GetHitched:": {
        "prefix": "components.hitcher:GetHitched",
        "body": "components.hitcher:GetHitched()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hitcher:Unhitch:": {
        "prefix": "components.hitcher:Unhitch",
        "body": "components.hitcher:Unhitch()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hitcher:Lock:": {
        "prefix": "components.hitcher:Lock",
        "body": "components.hitcher:Lock(${1:setting})",
        "description": " ※Params: \n   (setting)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hitcher:SetHitched:": {
        "prefix": "components.hitcher:SetHitched",
        "body": "components.hitcher:SetHitched(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hitcher:OnSave:": {
        "prefix": "components.hitcher:OnSave",
        "body": "components.hitcher:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hitcher:OnLoad:": {
        "prefix": "components.hitcher:OnLoad",
        "body": "components.hitcher:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.homeseeker:HasHome:": {
        "prefix": "components.homeseeker:HasHome",
        "body": "components.homeseeker:HasHome()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.homeseeker:SetHome:": {
        "prefix": "components.homeseeker:SetHome",
        "body": "components.homeseeker:SetHome(${1:home})",
        "description": " ※Params: \n   (home)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.homeseeker:GetDebugString:": {
        "prefix": "components.homeseeker:GetDebugString",
        "body": "components.homeseeker:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.homeseeker:GetHomeDirectTravelTime:": {
        "prefix": "components.homeseeker:GetHomeDirectTravelTime",
        "body": "components.homeseeker:GetHomeDirectTravelTime()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.homeseeker:GetHome:": {
        "prefix": "components.homeseeker:GetHome",
        "body": "components.homeseeker:GetHome()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.homeseeker:GetHomePos:": {
        "prefix": "components.homeseeker:GetHomePos",
        "body": "components.homeseeker:GetHomePos()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.homeseeker:GoHome:": {
        "prefix": "components.homeseeker:GoHome",
        "body": "components.homeseeker:GoHome(${1:shouldrun})",
        "description": " ※Params: \n   (shouldrun)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.houndedtarget:IsHoundThief:": {
        "prefix": "components.houndedtarget:IsHoundThief",
        "body": "components.houndedtarget:IsHoundThief()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.houndedtarget:GetTargetWeight:": {
        "prefix": "components.houndedtarget:GetTargetWeight",
        "body": "components.houndedtarget:GetTargetWeight()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hudindicatable:OnRemoveFromEntity:": {
        "prefix": "components.hudindicatable:OnRemoveFromEntity",
        "body": "components.hudindicatable:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hudindicatable:UnRegisterWithWorldComponent:": {
        "prefix": "components.hudindicatable:UnRegisterWithWorldComponent",
        "body": "components.hudindicatable:UnRegisterWithWorldComponent()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hudindicatable:RegisterWithWorldComponent:": {
        "prefix": "components.hudindicatable:RegisterWithWorldComponent",
        "body": "components.hudindicatable:RegisterWithWorldComponent()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hudindicatable:SetShouldTrackFunction:": {
        "prefix": "components.hudindicatable:SetShouldTrackFunction",
        "body": "components.hudindicatable:SetShouldTrackFunction(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hudindicatable:ShouldTrack:": {
        "prefix": "components.hudindicatable:ShouldTrack",
        "body": "components.hudindicatable:ShouldTrack(${1:viewer})",
        "description": " ※Params: \n   (viewer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hudindicatorwatcher:OnUpdate:": {
        "prefix": "components.hudindicatorwatcher:OnUpdate",
        "body": "components.hudindicatorwatcher:OnUpdate()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hudindicatorwatcher:ShouldRemoveIndicator:": {
        "prefix": "components.hudindicatorwatcher:ShouldRemoveIndicator",
        "body": "components.hudindicatorwatcher:ShouldRemoveIndicator(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hudindicatorwatcher:ShouldShowIndicator:": {
        "prefix": "components.hudindicatorwatcher:ShouldShowIndicator",
        "body": "components.hudindicatorwatcher:ShouldShowIndicator(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hudindicatorwatcher:OnRemoveFromEntity:": {
        "prefix": "components.hudindicatorwatcher:OnRemoveFromEntity",
        "body": "components.hudindicatorwatcher:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hull:SetPlank:": {
        "prefix": "components.hull:SetPlank",
        "body": "components.hull:SetPlank(${1:obj})",
        "description": " ※Params: \n   (obj)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hull:AttachEntityToBoat:": {
        "prefix": "components.hull:AttachEntityToBoat",
        "body": "components.hull:AttachEntityToBoat(${1:obj},${2:offset_x},${3:offset_z},${4:parent_to_boat})",
        "description": " ※Params: \n   (obj)<>[] \n   (offset_x)<>[] \n   (offset_z)<>[] \n   (parent_to_boat)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hull:GetRadius:": {
        "prefix": "components.hull:GetRadius",
        "body": "components.hull:GetRadius(${1:radius})",
        "description": " ※Params: \n   (radius)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hull:OnDeployed:": {
        "prefix": "components.hull:OnDeployed",
        "body": "components.hull:OnDeployed()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hull:SetBoatLip:": {
        "prefix": "components.hull:SetBoatLip",
        "body": "components.hull:SetBoatLip(${1:obj},${2:scale})",
        "description": " ※Params: \n   (obj)<>[] \n   (scale)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hull:SetRadius:": {
        "prefix": "components.hull:SetRadius",
        "body": "components.hull:SetRadius(${1:radius})",
        "description": " ※Params: \n   (radius)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hull:FinishRemovingEntity:": {
        "prefix": "components.hull:FinishRemovingEntity",
        "body": "components.hull:FinishRemovingEntity(${1:entity})",
        "description": " ※Params: \n   (entity)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hull:OnSave:": {
        "prefix": "components.hull:OnSave",
        "body": "components.hull:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hull:LoadPostPass:": {
        "prefix": "components.hull:LoadPostPass",
        "body": "components.hull:LoadPostPass(${1:ents},${2:data})",
        "description": " ※Params: \n   (ents)<>[] \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hullhealth:RefreshLeakIndicator:": {
        "prefix": "components.hullhealth:RefreshLeakIndicator",
        "body": "components.hullhealth:RefreshLeakIndicator(${1:leak_idx})",
        "description": " ※Params: \n   (leak_idx)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hullhealth:OnCollide:": {
        "prefix": "components.hullhealth:OnCollide",
        "body": "components.hullhealth:OnCollide(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hullhealth:LoadPostPass:": {
        "prefix": "components.hullhealth:LoadPostPass",
        "body": "components.hullhealth:LoadPostPass(${1:newents},${2:data})",
        "description": " ※Params: \n   (newents)<>[] \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hullhealth:OnSave:": {
        "prefix": "components.hullhealth:OnSave",
        "body": "components.hullhealth:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hullhealth:OnUpdate:": {
        "prefix": "components.hullhealth:OnUpdate",
        "body": "components.hullhealth:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hullhealth:SetSelfDegrading:": {
        "prefix": "components.hullhealth:SetSelfDegrading",
        "body": "components.hullhealth:SetSelfDegrading(${1:stat})",
        "description": " ※Params: \n   (stat)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hullhealth:GetLeakAngle:": {
        "prefix": "components.hullhealth:GetLeakAngle",
        "body": "components.hullhealth:GetLeakAngle(${1:idx})",
        "description": " ※Params: \n   (idx)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hullhealth:GetLeakPosition:": {
        "prefix": "components.hullhealth:GetLeakPosition",
        "body": "components.hullhealth:GetLeakPosition(${1:idx})",
        "description": " ※Params: \n   (idx)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hullhealth:SpawnDegadeDebris:": {
        "prefix": "components.hullhealth:SpawnDegadeDebris",
        "body": "components.hullhealth:SpawnDegadeDebris()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hullhealth:UpdateHealth:": {
        "prefix": "components.hullhealth:UpdateHealth",
        "body": "components.hullhealth:UpdateHealth()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hunger:SetPercent:": {
        "prefix": "components.hunger:SetPercent",
        "body": "components.hunger:SetPercent(${1:p},${2:overtime})",
        "description": " ※Params: \n   (p)<>[] \n   (overtime)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hunger:OnLoad:": {
        "prefix": "components.hunger:OnLoad",
        "body": "components.hunger:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hunger:LongUpdate:": {
        "prefix": "components.hunger:LongUpdate",
        "body": "components.hunger:LongUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hunger:TransferComponent:": {
        "prefix": "components.hunger:TransferComponent",
        "body": "components.hunger:TransferComponent(${1:newinst})",
        "description": " ※Params: \n   (newinst)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hunger:SetRate:": {
        "prefix": "components.hunger:SetRate",
        "body": "components.hunger:SetRate(${1:rate})",
        "description": " ※Params: \n   (rate)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hunger:SetOverrideStarveFn:": {
        "prefix": "components.hunger:SetOverrideStarveFn",
        "body": "components.hunger:SetOverrideStarveFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hunger:SetMax:": {
        "prefix": "components.hunger:SetMax",
        "body": "components.hunger:SetMax(${1:amount})",
        "description": " ※Params: \n   (amount)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hunger:Resume:": {
        "prefix": "components.hunger:Resume",
        "body": "components.hunger:Resume()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hunger:SetKillRate:": {
        "prefix": "components.hunger:SetKillRate",
        "body": "components.hunger:SetKillRate(${1:rate})",
        "description": " ※Params: \n   (rate)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hunger:IsStarving:": {
        "prefix": "components.hunger:IsStarving",
        "body": "components.hunger:IsStarving()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hunger:DoDec:": {
        "prefix": "components.hunger:DoDec",
        "body": "components.hunger:DoDec(${1:dt},${2:ignore_damage})",
        "description": " ※Params: \n   (dt)<>[] \n   (ignore_damage)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hunger:GetDebugString:": {
        "prefix": "components.hunger:GetDebugString",
        "body": "components.hunger:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hunger:Pause:": {
        "prefix": "components.hunger:Pause",
        "body": "components.hunger:Pause()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hunger:DoDelta:": {
        "prefix": "components.hunger:DoDelta",
        "body": "components.hunger:DoDelta(${1:delta},${2:overtime},${3:ignore_invincible})",
        "description": " ※Params: \n   (delta)<>[] \n   (overtime)<>[] \n   (ignore_invincible)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.hunger:GetPercent:": {
        "prefix": "components.hunger:GetPercent",
        "body": "components.hunger:GetPercent()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hunger:OnSave:": {
        "prefix": "components.hunger:OnSave",
        "body": "components.hunger:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.hunger:IsPaused:": {
        "prefix": "components.hunger:IsPaused",
        "body": "components.hunger:IsPaused()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.incinerator:SetOnIncinerateFn:": {
        "prefix": "components.incinerator:SetOnIncinerateFn",
        "body": "components.incinerator:SetOnIncinerateFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.incinerator:ShouldIncinerateItem:": {
        "prefix": "components.incinerator:ShouldIncinerateItem",
        "body": "components.incinerator:ShouldIncinerateItem(${1:item})",
        "description": " ※Params: \n   (item)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.incinerator:SetShouldIncinerateItemFn:": {
        "prefix": "components.incinerator:SetShouldIncinerateItemFn",
        "body": "components.incinerator:SetShouldIncinerateItemFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.incinerator:Incinerate:": {
        "prefix": "components.incinerator:Incinerate",
        "body": "components.incinerator:Incinerate(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.incrementalproducer:TryProduce:": {
        "prefix": "components.incrementalproducer:TryProduce",
        "body": "components.incrementalproducer:TryProduce()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.incrementalproducer:CanProduce:": {
        "prefix": "components.incrementalproducer:CanProduce",
        "body": "components.incrementalproducer:CanProduce()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.incrementalproducer:GetDebugString:": {
        "prefix": "components.incrementalproducer:GetDebugString",
        "body": "components.incrementalproducer:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.incrementalproducer:DoProduce:": {
        "prefix": "components.incrementalproducer:DoProduce",
        "body": "components.incrementalproducer:DoProduce()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inkable:OnUpdate:": {
        "prefix": "components.inkable:OnUpdate",
        "body": "components.inkable:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inkable:TransferComponent:": {
        "prefix": "components.inkable:TransferComponent",
        "body": "components.inkable:TransferComponent(${1:newinst})",
        "description": " ※Params: \n   (newinst)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inkable:Ink:": {
        "prefix": "components.inkable:Ink",
        "body": "components.inkable:Ink()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inspectable:GetStatus:": {
        "prefix": "components.inspectable:GetStatus",
        "body": "components.inspectable:GetStatus(${1:viewer})",
        "description": " ※Params: \n   (viewer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inspectable:RecordViews:": {
        "prefix": "components.inspectable:RecordViews",
        "body": "components.inspectable:RecordViews(${1:state})",
        "description": " ※Params: \n   (state)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inspectable:GetDescription:": {
        "prefix": "components.inspectable:GetDescription",
        "body": "components.inspectable:GetDescription(${1:viewer})",
        "description": " ※Params: \n   (viewer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inspectable:SetNameOverride:": {
        "prefix": "components.inspectable:SetNameOverride",
        "body": "components.inspectable:SetNameOverride(${1:nameoverride})",
        "description": " ※Params: \n   (nameoverride)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inspectable:OnRemoveFromEntity:": {
        "prefix": "components.inspectable:OnRemoveFromEntity",
        "body": "components.inspectable:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inspectaclesparticipant:CheckGameSolution:": {
        "prefix": "components.inspectaclesparticipant:CheckGameSolution",
        "body": "components.inspectaclesparticipant:CheckGameSolution(${1:solution})",
        "description": " ※Params: \n   (solution)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inspectaclesparticipant:GetPuzzleData:": {
        "prefix": "components.inspectaclesparticipant:GetPuzzleData",
        "body": "components.inspectaclesparticipant:GetPuzzleData(${1:puzzle})",
        "description": " ※Params: \n   (puzzle)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inspectaclesparticipant:IsFreeGame:": {
        "prefix": "components.inspectaclesparticipant:IsFreeGame",
        "body": "components.inspectaclesparticipant:IsFreeGame(${1:game})",
        "description": " ※Params: \n   (game)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inspectaclesparticipant:ApplyCooldown:": {
        "prefix": "components.inspectaclesparticipant:ApplyCooldown",
        "body": "components.inspectaclesparticipant:ApplyCooldown(${1:overridetime})",
        "description": " ※Params: \n   (overridetime)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inspectaclesparticipant:LongUpdate:": {
        "prefix": "components.inspectaclesparticipant:LongUpdate",
        "body": "components.inspectaclesparticipant:LongUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inspectaclesparticipant:HideCurrentGame:": {
        "prefix": "components.inspectaclesparticipant:HideCurrentGame",
        "body": "components.inspectaclesparticipant:HideCurrentGame()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inspectaclesparticipant:GetSERVERDetails:": {
        "prefix": "components.inspectaclesparticipant:GetSERVERDetails",
        "body": "components.inspectaclesparticipant:GetSERVERDetails()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inspectaclesparticipant:NetworkCurrentGame:": {
        "prefix": "components.inspectaclesparticipant:NetworkCurrentGame",
        "body": "components.inspectaclesparticipant:NetworkCurrentGame()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inspectaclesparticipant:GetDebugString:": {
        "prefix": "components.inspectaclesparticipant:GetDebugString",
        "body": "components.inspectaclesparticipant:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inspectaclesparticipant:CreateBox:": {
        "prefix": "components.inspectaclesparticipant:CreateBox",
        "body": "components.inspectaclesparticipant:CreateBox()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inspectaclesparticipant:IsInCooldown:": {
        "prefix": "components.inspectaclesparticipant:IsInCooldown",
        "body": "components.inspectaclesparticipant:IsInCooldown()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inspectaclesparticipant:OnCooldownFinished:": {
        "prefix": "components.inspectaclesparticipant:OnCooldownFinished",
        "body": "components.inspectaclesparticipant:OnCooldownFinished()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inspectaclesparticipant:ShowCurrentGame:": {
        "prefix": "components.inspectaclesparticipant:ShowCurrentGame",
        "body": "components.inspectaclesparticipant:ShowCurrentGame()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inspectaclesparticipant:CalculateGamePuzzle:": {
        "prefix": "components.inspectaclesparticipant:CalculateGamePuzzle",
        "body": "components.inspectaclesparticipant:CalculateGamePuzzle(${1:gameid},${2:posx},${3:posz})",
        "description": " ※Params: \n   (gameid)<>[] \n   (posx)<>[] \n   (posz)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inspectaclesparticipant:OnClosePopup:": {
        "prefix": "components.inspectaclesparticipant:OnClosePopup",
        "body": "components.inspectaclesparticipant:OnClosePopup(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inspectaclesparticipant:UpdateInspectacles:": {
        "prefix": "components.inspectaclesparticipant:UpdateInspectacles",
        "body": "components.inspectaclesparticipant:UpdateInspectacles()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inspectaclesparticipant:OnLoad:": {
        "prefix": "components.inspectaclesparticipant:OnLoad",
        "body": "components.inspectaclesparticipant:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inspectaclesparticipant:FinishCurrentGame:": {
        "prefix": "components.inspectaclesparticipant:FinishCurrentGame",
        "body": "components.inspectaclesparticipant:FinishCurrentGame()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inspectaclesparticipant:OnInspectaclesGameChanged:": {
        "prefix": "components.inspectaclesparticipant:OnInspectaclesGameChanged",
        "body": "components.inspectaclesparticipant:OnInspectaclesGameChanged(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inspectaclesparticipant:IsParticipantClose:": {
        "prefix": "components.inspectaclesparticipant:IsParticipantClose",
        "body": "components.inspectaclesparticipant:IsParticipantClose(${1:range})",
        "description": " ※Params: \n   (range)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inspectaclesparticipant:OnRemoveFromEntity:": {
        "prefix": "components.inspectaclesparticipant:OnRemoveFromEntity",
        "body": "components.inspectaclesparticipant:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inspectaclesparticipant:IsUpgradedBox:": {
        "prefix": "components.inspectaclesparticipant:IsUpgradedBox",
        "body": "components.inspectaclesparticipant:IsUpgradedBox()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inspectaclesparticipant:OnSave:": {
        "prefix": "components.inspectaclesparticipant:OnSave",
        "body": "components.inspectaclesparticipant:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inspectaclesparticipant:GrantRewards:": {
        "prefix": "components.inspectaclesparticipant:GrantRewards",
        "body": "components.inspectaclesparticipant:GrantRewards()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inspectaclesparticipant:OnSignalPulse:": {
        "prefix": "components.inspectaclesparticipant:OnSignalPulse",
        "body": "components.inspectaclesparticipant:OnSignalPulse()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inspectaclesparticipant:CanCreateGameInWorld:": {
        "prefix": "components.inspectaclesparticipant:CanCreateGameInWorld",
        "body": "components.inspectaclesparticipant:CanCreateGameInWorld()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inspectaclesparticipant:ShouldStopGameInteractions:": {
        "prefix": "components.inspectaclesparticipant:ShouldStopGameInteractions",
        "body": "components.inspectaclesparticipant:ShouldStopGameInteractions()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inspectaclesparticipant:CreateNewAndOrShowCurrentGame:": {
        "prefix": "components.inspectaclesparticipant:CreateNewAndOrShowCurrentGame",
        "body": "components.inspectaclesparticipant:CreateNewAndOrShowCurrentGame()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inspectaclesparticipant:UpdateBox:": {
        "prefix": "components.inspectaclesparticipant:UpdateBox",
        "body": "components.inspectaclesparticipant:UpdateBox()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inspectaclesparticipant:FindGameLocation:": {
        "prefix": "components.inspectaclesparticipant:FindGameLocation",
        "body": "components.inspectaclesparticipant:FindGameLocation(${1:gameid})",
        "description": " ※Params: \n   (gameid)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inspectaclesparticipant:SetCurrentGame:": {
        "prefix": "components.inspectaclesparticipant:SetCurrentGame",
        "body": "components.inspectaclesparticipant:SetCurrentGame(${1:gameid},${2:posx},${3:posz})",
        "description": " ※Params: \n   (gameid)<>[] \n   (posx)<>[] \n   (posz)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inspectaclesparticipant:GetCLIENTDetails:": {
        "prefix": "components.inspectaclesparticipant:GetCLIENTDetails",
        "body": "components.inspectaclesparticipant:GetCLIENTDetails()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.instrument:Play:": {
        "prefix": "components.instrument:Play",
        "body": "components.instrument:Play(${1:musician})",
        "description": " ※Params: \n   (musician)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.instrument:SetOnHeardFn:": {
        "prefix": "components.instrument:SetOnHeardFn",
        "body": "components.instrument:SetOnHeardFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.instrument:SetOnPlayedFn:": {
        "prefix": "components.instrument:SetOnPlayedFn",
        "body": "components.instrument:SetOnPlayedFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.insulator:SetSummer:": {
        "prefix": "components.insulator:SetSummer",
        "body": "components.insulator:SetSummer()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.insulator:SetInsulation:": {
        "prefix": "components.insulator:SetInsulation",
        "body": "components.insulator:SetInsulation(${1:val})",
        "description": " ※Params: \n   (val)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.insulator:GetInsulation:": {
        "prefix": "components.insulator:GetInsulation",
        "body": "components.insulator:GetInsulation()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.insulator:IsType:": {
        "prefix": "components.insulator:IsType",
        "body": "components.insulator:IsType(${1:type})",
        "description": " ※Params: \n   (type)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.insulator:GetType:": {
        "prefix": "components.insulator:GetType",
        "body": "components.insulator:GetType()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.insulator:SetWinter:": {
        "prefix": "components.insulator:SetWinter",
        "body": "components.insulator:SetWinter()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:MoveItemFromAllOfSlot:": {
        "prefix": "components.inventory:MoveItemFromAllOfSlot",
        "body": "components.inventory:MoveItemFromAllOfSlot(${1:slot},${2:container})",
        "description": " ※Params: \n   (slot)<>[] \n   (container)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:ArmorHasTag:": {
        "prefix": "components.inventory:ArmorHasTag",
        "body": "components.inventory:ArmorHasTag(${1:tag})",
        "description": " ※Params: \n   (tag)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:GetFirstItemInAnySlot:": {
        "prefix": "components.inventory:GetFirstItemInAnySlot",
        "body": "components.inventory:GetFirstItemInAnySlot()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:ForEachItem:": {
        "prefix": "components.inventory:ForEachItem",
        "body": "components.inventory:ForEachItem(${1:fn},${2:...})",
        "description": " ※Params: \n   (fn)<>[] \n   (...)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:EquipHasSpDefenseForType:": {
        "prefix": "components.inventory:EquipHasSpDefenseForType",
        "body": "components.inventory:EquipHasSpDefenseForType(${1:sptype})",
        "description": " ※Params: \n   (sptype)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:CanAccessItem:": {
        "prefix": "components.inventory:CanAccessItem",
        "body": "components.inventory:CanAccessItem(${1:item})",
        "description": " ※Params: \n   (item)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:AcceptsStacks:": {
        "prefix": "components.inventory:AcceptsStacks",
        "body": "components.inventory:AcceptsStacks()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:PutOneOfActiveItemInSlot:": {
        "prefix": "components.inventory:PutOneOfActiveItemInSlot",
        "body": "components.inventory:PutOneOfActiveItemInSlot(${1:slot})",
        "description": " ※Params: \n   (slot)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:GetActiveItem:": {
        "prefix": "components.inventory:GetActiveItem",
        "body": "components.inventory:GetActiveItem()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:GetItemByName:": {
        "prefix": "components.inventory:GetItemByName",
        "body": "components.inventory:GetItemByName(${1:item},${2:amount},${3:checkallcontainers})",
        "description": " ※Params: \n   (item)<>[] \n   (amount)<>[] \n   (checkallcontainers)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:SwapActiveItemWithSlot:": {
        "prefix": "components.inventory:SwapActiveItemWithSlot",
        "body": "components.inventory:SwapActiveItemWithSlot(${1:slot})",
        "description": " ※Params: \n   (slot)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:GiveActiveItem:": {
        "prefix": "components.inventory:GiveActiveItem",
        "body": "components.inventory:GiveActiveItem(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:NumStackedItems:": {
        "prefix": "components.inventory:NumStackedItems",
        "body": "components.inventory:NumStackedItems()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:PutAllOfActiveItemInSlot:": {
        "prefix": "components.inventory:PutAllOfActiveItemInSlot",
        "body": "components.inventory:PutAllOfActiveItemInSlot(${1:slot})",
        "description": " ※Params: \n   (slot)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:CastSpellBookFromInv:": {
        "prefix": "components.inventory:CastSpellBookFromInv",
        "body": "components.inventory:CastSpellBookFromInv(${1:item},${2:spell_id})",
        "description": " ※Params: \n   (item)<>[] \n   (spell_id)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:ApplyDamage:": {
        "prefix": "components.inventory:ApplyDamage",
        "body": "components.inventory:ApplyDamage(${1:damage},${2:attacker},${3:weapon},${4:spdamage})",
        "description": " ※Params: \n   (damage)<>[] \n   (attacker)<>[] \n   (weapon)<>[] \n   (spdamage)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:GetDebugString:": {
        "prefix": "components.inventory:GetDebugString",
        "body": "components.inventory:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:CanTakeItemInSlot:": {
        "prefix": "components.inventory:CanTakeItemInSlot",
        "body": "components.inventory:CanTakeItemInSlot(${1:item},${2:slot})",
        "description": " ※Params: \n   (item)<>[] \n   (slot)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:HasItemThatMatches:": {
        "prefix": "components.inventory:HasItemThatMatches",
        "body": "components.inventory:HasItemThatMatches(${1:fn},${2:amount})",
        "description": " ※Params: \n   (fn)<>[] \n   (amount)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:OnSave:": {
        "prefix": "components.inventory:OnSave",
        "body": "components.inventory:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:FindItems:": {
        "prefix": "components.inventory:FindItems",
        "body": "components.inventory:FindItems(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:FindItem:": {
        "prefix": "components.inventory:FindItem",
        "body": "components.inventory:FindItem(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:CanAcceptCount:": {
        "prefix": "components.inventory:CanAcceptCount",
        "body": "components.inventory:CanAcceptCount(${1:item},${2:maxcount})",
        "description": " ※Params: \n   (item)<>[] \n   (maxcount)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:GetItemInSlot:": {
        "prefix": "components.inventory:GetItemInSlot",
        "body": "components.inventory:GetItemInSlot(${1:slot})",
        "description": " ※Params: \n   (slot)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:OnLoad:": {
        "prefix": "components.inventory:OnLoad",
        "body": "components.inventory:OnLoad(${1:data},${2:newents})",
        "description": " ※Params: \n   (data)<>[] \n   (newents)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:IsWearingArmor:": {
        "prefix": "components.inventory:IsWearingArmor",
        "body": "components.inventory:IsWearingArmor()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:NumItems:": {
        "prefix": "components.inventory:NumItems",
        "body": "components.inventory:NumItems()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:IgnoresCanGoInContainer:": {
        "prefix": "components.inventory:IgnoresCanGoInContainer",
        "body": "components.inventory:IgnoresCanGoInContainer()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:GetItemsWithTag:": {
        "prefix": "components.inventory:GetItemsWithTag",
        "body": "components.inventory:GetItemsWithTag(${1:tag})",
        "description": " ※Params: \n   (tag)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:GetOverflowContainer:": {
        "prefix": "components.inventory:GetOverflowContainer",
        "body": "components.inventory:GetOverflowContainer()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:Equip:": {
        "prefix": "components.inventory:Equip",
        "body": "components.inventory:Equip(${1:item},${2:old_to_active},${3:no_animation},${4:force_ui_anim})",
        "description": " ※Params: \n   (item)<>[] \n   (old_to_active)<>[] \n   (no_animation)<>[] \n   (force_ui_anim)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:GetEquippedItem:": {
        "prefix": "components.inventory:GetEquippedItem",
        "body": "components.inventory:GetEquippedItem(${1:eslot})",
        "description": " ※Params: \n   (eslot)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:IsHeavyLifting:": {
        "prefix": "components.inventory:IsHeavyLifting",
        "body": "components.inventory:IsHeavyLifting()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:MoveItemFromHalfOfSlot:": {
        "prefix": "components.inventory:MoveItemFromHalfOfSlot",
        "body": "components.inventory:MoveItemFromHalfOfSlot(${1:slot},${2:container})",
        "description": " ※Params: \n   (slot)<>[] \n   (container)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:DropEquipped:": {
        "prefix": "components.inventory:DropEquipped",
        "body": "components.inventory:DropEquipped(${1:keepBackpack})",
        "description": " ※Params: \n   (keepBackpack)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:DisableDropOnDeath:": {
        "prefix": "components.inventory:DisableDropOnDeath",
        "body": "components.inventory:DisableDropOnDeath()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:EquipActionItem:": {
        "prefix": "components.inventory:EquipActionItem",
        "body": "components.inventory:EquipActionItem(${1:item})",
        "description": " ※Params: \n   (item)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:ForEachWetableItem:": {
        "prefix": "components.inventory:ForEachWetableItem",
        "body": "components.inventory:ForEachWetableItem(${1:fn},${2:...})",
        "description": " ※Params: \n   (fn)<>[] \n   (...)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:DropItem:": {
        "prefix": "components.inventory:DropItem",
        "body": "components.inventory:DropItem(${1:item},${2:wholestack},${3:randomdir},${4:pos},${5:keepoverstacked})",
        "description": " ※Params: \n   (item)<>[] \n   (wholestack)<>[] \n   (randomdir)<>[] \n   (pos)<>[] \n   (keepoverstacked)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:EquipHasTag:": {
        "prefix": "components.inventory:EquipHasTag",
        "body": "components.inventory:EquipHasTag(${1:tag})",
        "description": " ※Params: \n   (tag)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:GetOpenContainerProxyFor:": {
        "prefix": "components.inventory:GetOpenContainerProxyFor",
        "body": "components.inventory:GetOpenContainerProxyFor(${1:master})",
        "description": " ※Params: \n   (master)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:TransferComponent:": {
        "prefix": "components.inventory:TransferComponent",
        "body": "components.inventory:TransferComponent(${1:newinst})",
        "description": " ※Params: \n   (newinst)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:GetWaterproofness:": {
        "prefix": "components.inventory:GetWaterproofness",
        "body": "components.inventory:GetWaterproofness(${1:slot})",
        "description": " ※Params: \n   (slot)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:ControllerUseItemOnSelfFromInvTile:": {
        "prefix": "components.inventory:ControllerUseItemOnSelfFromInvTile",
        "body": "components.inventory:ControllerUseItemOnSelfFromInvTile(${1:item},${2:actioncode},${3:mod_name})",
        "description": " ※Params: \n   (item)<>[] \n   (actioncode)<>[] \n   (mod_name)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:IsWaterproof:": {
        "prefix": "components.inventory:IsWaterproof",
        "body": "components.inventory:IsWaterproof()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:GetEquippedMoistureRate:": {
        "prefix": "components.inventory:GetEquippedMoistureRate",
        "body": "components.inventory:GetEquippedMoistureRate(${1:slot})",
        "description": " ※Params: \n   (slot)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:TakeActiveItemFromEquipSlotID:": {
        "prefix": "components.inventory:TakeActiveItemFromEquipSlotID",
        "body": "components.inventory:TakeActiveItemFromEquipSlotID(${1:eslotid})",
        "description": " ※Params: \n   (eslotid)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:TakeActiveItemFromEquipSlot:": {
        "prefix": "components.inventory:TakeActiveItemFromEquipSlot",
        "body": "components.inventory:TakeActiveItemFromEquipSlot(${1:eslot})",
        "description": " ※Params: \n   (eslot)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:HasAnyEquipment:": {
        "prefix": "components.inventory:HasAnyEquipment",
        "body": "components.inventory:HasAnyEquipment()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:ReturnActiveActionItem:": {
        "prefix": "components.inventory:ReturnActiveActionItem",
        "body": "components.inventory:ReturnActiveActionItem(${1:item},${2:instant})",
        "description": " ※Params: \n   (item)<>[] \n   (instant)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:SetActiveItem:": {
        "prefix": "components.inventory:SetActiveItem",
        "body": "components.inventory:SetActiveItem(${1:item})",
        "description": " ※Params: \n   (item)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:EquipActiveItem:": {
        "prefix": "components.inventory:EquipActiveItem",
        "body": "components.inventory:EquipActiveItem()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:DropItemFromInvTile:": {
        "prefix": "components.inventory:DropItemFromInvTile",
        "body": "components.inventory:DropItemFromInvTile(${1:item},${2:single})",
        "description": " ※Params: \n   (item)<>[] \n   (single)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:InspectItemFromInvTile:": {
        "prefix": "components.inventory:InspectItemFromInvTile",
        "body": "components.inventory:InspectItemFromInvTile(${1:item})",
        "description": " ※Params: \n   (item)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:GetItemSlot:": {
        "prefix": "components.inventory:GetItemSlot",
        "body": "components.inventory:GetItemSlot(${1:item})",
        "description": " ※Params: \n   (item)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:Unequip:": {
        "prefix": "components.inventory:Unequip",
        "body": "components.inventory:Unequip(${1:equipslot},${2:slip})",
        "description": " ※Params: \n   (equipslot)<>[] \n   (slip)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:Show:": {
        "prefix": "components.inventory:Show",
        "body": "components.inventory:Show()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:ControllerUseItemOnSceneFromInvTile:": {
        "prefix": "components.inventory:ControllerUseItemOnSceneFromInvTile",
        "body": "components.inventory:ControllerUseItemOnSceneFromInvTile(${1:item},${2:target},${3:actioncode},${4:mod_name})",
        "description": " ※Params: \n   (item)<>[] \n   (target)<>[] \n   (actioncode)<>[] \n   (mod_name)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:TakeActiveItemFromAllOfSlot:": {
        "prefix": "components.inventory:TakeActiveItemFromAllOfSlot",
        "body": "components.inventory:TakeActiveItemFromAllOfSlot(${1:slot})",
        "description": " ※Params: \n   (slot)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:Has:": {
        "prefix": "components.inventory:Has",
        "body": "components.inventory:Has(${1:item},${2:amount},${3:checkallcontainers})",
        "description": " ※Params: \n   (item)<>[] \n   (amount)<>[] \n   (checkallcontainers)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:ConsumeByName:": {
        "prefix": "components.inventory:ConsumeByName",
        "body": "components.inventory:ConsumeByName(${1:item},${2:amount})",
        "description": " ※Params: \n   (item)<>[] \n   (amount)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:ControllerUseItemOnItemFromInvTile:": {
        "prefix": "components.inventory:ControllerUseItemOnItemFromInvTile",
        "body": "components.inventory:ControllerUseItemOnItemFromInvTile(${1:item},${2:active_item},${3:actioncode},${4:mod_name})",
        "description": " ※Params: \n   (item)<>[] \n   (active_item)<>[] \n   (actioncode)<>[] \n   (mod_name)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:UseItemFromInvTile:": {
        "prefix": "components.inventory:UseItemFromInvTile",
        "body": "components.inventory:UseItemFromInvTile(${1:item},${2:actioncode},${3:mod_name})",
        "description": " ※Params: \n   (item)<>[] \n   (actioncode)<>[] \n   (mod_name)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:CloseAllChestContainers:": {
        "prefix": "components.inventory:CloseAllChestContainers",
        "body": "components.inventory:CloseAllChestContainers()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:AddOneOfActiveItemToSlot:": {
        "prefix": "components.inventory:AddOneOfActiveItemToSlot",
        "body": "components.inventory:AddOneOfActiveItemToSlot(${1:slot})",
        "description": " ※Params: \n   (slot)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:TransferInventory:": {
        "prefix": "components.inventory:TransferInventory",
        "body": "components.inventory:TransferInventory(${1:receiver})",
        "description": " ※Params: \n   (receiver)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:IsOpenedBy:": {
        "prefix": "components.inventory:IsOpenedBy",
        "body": "components.inventory:IsOpenedBy(${1:guy})",
        "description": " ※Params: \n   (guy)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:AddAllOfActiveItemToSlot:": {
        "prefix": "components.inventory:AddAllOfActiveItemToSlot",
        "body": "components.inventory:AddAllOfActiveItemToSlot(${1:slot})",
        "description": " ※Params: \n   (slot)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:SwapEquipWithActiveItem:": {
        "prefix": "components.inventory:SwapEquipWithActiveItem",
        "body": "components.inventory:SwapEquipWithActiveItem()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:Hide:": {
        "prefix": "components.inventory:Hide",
        "body": "components.inventory:Hide()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:CombineActiveStackWithSlot:": {
        "prefix": "components.inventory:CombineActiveStackWithSlot",
        "body": "components.inventory:CombineActiveStackWithSlot(${1:slot},${2:stack_mod})",
        "description": " ※Params: \n   (slot)<>[] \n   (stack_mod)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:SwapEquipment:": {
        "prefix": "components.inventory:SwapEquipment",
        "body": "components.inventory:SwapEquipment(${1:other},${2:equipslot_to_swap})",
        "description": " ※Params: \n   (other)<>[] \n   (equipslot_to_swap)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:SelectActiveItemFromEquipSlot:": {
        "prefix": "components.inventory:SelectActiveItemFromEquipSlot",
        "body": "components.inventory:SelectActiveItemFromEquipSlot(${1:slot})",
        "description": " ※Params: \n   (slot)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:Open:": {
        "prefix": "components.inventory:Open",
        "body": "components.inventory:Open()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:TakeActiveItemFromHalfOfSlot:": {
        "prefix": "components.inventory:TakeActiveItemFromHalfOfSlot",
        "body": "components.inventory:TakeActiveItemFromHalfOfSlot(${1:slot})",
        "description": " ※Params: \n   (slot)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:SelectActiveItemFromSlot:": {
        "prefix": "components.inventory:SelectActiveItemFromSlot",
        "body": "components.inventory:SelectActiveItemFromSlot(${1:slot})",
        "description": " ※Params: \n   (slot)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:ReferenceAllItems:": {
        "prefix": "components.inventory:ReferenceAllItems",
        "body": "components.inventory:ReferenceAllItems()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:BurnNonpotatableInContainer:": {
        "prefix": "components.inventory:BurnNonpotatableInContainer",
        "body": "components.inventory:BurnNonpotatableInContainer(${1:container})",
        "description": " ※Params: \n   (container)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:DropEverything:": {
        "prefix": "components.inventory:DropEverything",
        "body": "components.inventory:DropEverything(${1:ondeath},${2:keepequip})",
        "description": " ※Params: \n   (ondeath)<>[] \n   (keepequip)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:HasItemWithTag:": {
        "prefix": "components.inventory:HasItemWithTag",
        "body": "components.inventory:HasItemWithTag(${1:tag},${2:amount})",
        "description": " ※Params: \n   (tag)<>[] \n   (amount)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:EnableDropOnDeath:": {
        "prefix": "components.inventory:EnableDropOnDeath",
        "body": "components.inventory:EnableDropOnDeath()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:GiveItem:": {
        "prefix": "components.inventory:GiveItem",
        "body": "components.inventory:GiveItem(${1:inst},${2:slot},${3:src_pos})",
        "description": " ※Params: \n   (inst)<>[] \n   (slot)<>[] \n   (src_pos)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:ReturnActiveItem:": {
        "prefix": "components.inventory:ReturnActiveItem",
        "body": "components.inventory:ReturnActiveItem(${1:slot},${2:stack_mod})",
        "description": " ※Params: \n   (slot)<>[] \n   (stack_mod)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:GetNumSlots:": {
        "prefix": "components.inventory:GetNumSlots",
        "body": "components.inventory:GetNumSlots()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:ForEachEquipment:": {
        "prefix": "components.inventory:ForEachEquipment",
        "body": "components.inventory:ForEachEquipment(${1:fn},${2:...})",
        "description": " ※Params: \n   (fn)<>[] \n   (...)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:RemoveItem:": {
        "prefix": "components.inventory:RemoveItem",
        "body": "components.inventory:RemoveItem(${1:item},${2:wholestack},${3:checkallcontainers},${4:keepoverstacked})",
        "description": " ※Params: \n   (item)<>[] \n   (wholestack)<>[] \n   (checkallcontainers)<>[] \n   (keepoverstacked)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:Close:": {
        "prefix": "components.inventory:Close",
        "body": "components.inventory:Close(${1:keepactiveitem})",
        "description": " ※Params: \n   (keepactiveitem)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:DropEverythingWithTag:": {
        "prefix": "components.inventory:DropEverythingWithTag",
        "body": "components.inventory:DropEverythingWithTag(${1:tag})",
        "description": " ※Params: \n   (tag)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:GetNextAvailableSlot:": {
        "prefix": "components.inventory:GetNextAvailableSlot",
        "body": "components.inventory:GetNextAvailableSlot(${1:item})",
        "description": " ※Params: \n   (item)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:IsFull:": {
        "prefix": "components.inventory:IsFull",
        "body": "components.inventory:IsFull()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:IsInsulated:": {
        "prefix": "components.inventory:IsInsulated",
        "body": "components.inventory:IsInsulated()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:RemoveItemBySlot:": {
        "prefix": "components.inventory:RemoveItemBySlot",
        "body": "components.inventory:RemoveItemBySlot(${1:slot},${2:keepoverstacked})",
        "description": " ※Params: \n   (slot)<>[] \n   (keepoverstacked)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:IsHolding:": {
        "prefix": "components.inventory:IsHolding",
        "body": "components.inventory:IsHolding(${1:item},${2:checkcontainer})",
        "description": " ※Params: \n   (item)<>[] \n   (checkcontainer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:IsItemEquipped:": {
        "prefix": "components.inventory:IsItemEquipped",
        "body": "components.inventory:IsItemEquipped(${1:item})",
        "description": " ※Params: \n   (item)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventory:DropActiveItem:": {
        "prefix": "components.inventory:DropActiveItem",
        "body": "components.inventory:DropActiveItem()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitem:OnPutInInventory:": {
        "prefix": "components.inventoryitem:OnPutInInventory",
        "body": "components.inventoryitem:OnPutInInventory(${1:owner})",
        "description": " ※Params: \n   (owner)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitem:GetContainer:": {
        "prefix": "components.inventoryitem:GetContainer",
        "body": "components.inventoryitem:GetContainer()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitem:ClearOwner:": {
        "prefix": "components.inventoryitem:ClearOwner",
        "body": "components.inventoryitem:ClearOwner()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitem:DryMoisture:": {
        "prefix": "components.inventoryitem:DryMoisture",
        "body": "components.inventoryitem:DryMoisture()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitem:DiluteMoisture:": {
        "prefix": "components.inventoryitem:DiluteMoisture",
        "body": "components.inventoryitem:DiluteMoisture(${1:item},${2:count})",
        "description": " ※Params: \n   (item)<>[] \n   (count)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitem:IsAcidSizzling:": {
        "prefix": "components.inventoryitem:IsAcidSizzling",
        "body": "components.inventoryitem:IsAcidSizzling()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitem:OnRemoveEntity:": {
        "prefix": "components.inventoryitem:OnRemoveEntity",
        "body": "components.inventoryitem:OnRemoveEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitem:SetLanded:": {
        "prefix": "components.inventoryitem:SetLanded",
        "body": "components.inventoryitem:SetLanded(${1:is_landed},${2:should_poll_for_landing})",
        "description": " ※Params: \n   (is_landed)<>[] \n   (should_poll_for_landing)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitem:InheritWorldWetnessAtTarget:": {
        "prefix": "components.inventoryitem:InheritWorldWetnessAtTarget",
        "body": "components.inventoryitem:InheritWorldWetnessAtTarget(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitem:GetSlotNum:": {
        "prefix": "components.inventoryitem:GetSlotNum",
        "body": "components.inventoryitem:GetSlotNum()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitem:SetOnDroppedFn:": {
        "prefix": "components.inventoryitem:SetOnDroppedFn",
        "body": "components.inventoryitem:SetOnDroppedFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitem:TryToSink:": {
        "prefix": "components.inventoryitem:TryToSink",
        "body": "components.inventoryitem:TryToSink()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitem:InheritMoisture:": {
        "prefix": "components.inventoryitem:InheritMoisture",
        "body": "components.inventoryitem:InheritMoisture(${1:moisture},${2:iswet})",
        "description": " ※Params: \n   (moisture)<>[] \n   (iswet)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitem:GetMoisture:": {
        "prefix": "components.inventoryitem:GetMoisture",
        "body": "components.inventoryitem:GetMoisture()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitem:AddMoisture:": {
        "prefix": "components.inventoryitem:AddMoisture",
        "body": "components.inventoryitem:AddMoisture(${1:delta})",
        "description": " ※Params: \n   (delta)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitem:InheritWorldWetnessAtXZ:": {
        "prefix": "components.inventoryitem:InheritWorldWetnessAtXZ",
        "body": "components.inventoryitem:InheritWorldWetnessAtXZ(${1:x},${2:z})",
        "description": " ※Params: \n   (x)<>[] \n   (z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitem:SetOnPutInInventoryFn:": {
        "prefix": "components.inventoryitem:SetOnPutInInventoryFn",
        "body": "components.inventoryitem:SetOnPutInInventoryFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitem:HibernateLivingItem:": {
        "prefix": "components.inventoryitem:HibernateLivingItem",
        "body": "components.inventoryitem:HibernateLivingItem()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitem:ShouldSink:": {
        "prefix": "components.inventoryitem:ShouldSink",
        "body": "components.inventoryitem:ShouldSink()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitem:MakeMoistureAtLeast:": {
        "prefix": "components.inventoryitem:MakeMoistureAtLeast",
        "body": "components.inventoryitem:MakeMoistureAtLeast(${1:min})",
        "description": " ※Params: \n   (min)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitem:GetGrandOwner:": {
        "prefix": "components.inventoryitem:GetGrandOwner",
        "body": "components.inventoryitem:GetGrandOwner()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitem:OnRemoveFromEntity:": {
        "prefix": "components.inventoryitem:OnRemoveFromEntity",
        "body": "components.inventoryitem:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitem:IsSheltered:": {
        "prefix": "components.inventoryitem:IsSheltered",
        "body": "components.inventoryitem:IsSheltered()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitem:EnableMoisture:": {
        "prefix": "components.inventoryitem:EnableMoisture",
        "body": "components.inventoryitem:EnableMoisture(${1:enable})",
        "description": " ※Params: \n   (enable)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitem:IsWet:": {
        "prefix": "components.inventoryitem:IsWet",
        "body": "components.inventoryitem:IsWet()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitem:OnDropped:": {
        "prefix": "components.inventoryitem:OnDropped",
        "body": "components.inventoryitem:OnDropped(${1:randomdir},${2:speedmult})",
        "description": " ※Params: \n   (randomdir)<>[] \n   (speedmult)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitem:ChangeImageName:": {
        "prefix": "components.inventoryitem:ChangeImageName",
        "body": "components.inventoryitem:ChangeImageName(${1:newname})",
        "description": " ※Params: \n   (newname)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitem:IsHeldBy:": {
        "prefix": "components.inventoryitem:IsHeldBy",
        "body": "components.inventoryitem:IsHeldBy(${1:guy})",
        "description": " ※Params: \n   (guy)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitem:SetOwner:": {
        "prefix": "components.inventoryitem:SetOwner",
        "body": "components.inventoryitem:SetOwner(${1:owner})",
        "description": " ※Params: \n   (owner)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitem:IsHeld:": {
        "prefix": "components.inventoryitem:IsHeld",
        "body": "components.inventoryitem:IsHeld()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitem:OnRemoved:": {
        "prefix": "components.inventoryitem:OnRemoved",
        "body": "components.inventoryitem:OnRemoved()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitem:DoDropPhysics:": {
        "prefix": "components.inventoryitem:DoDropPhysics",
        "body": "components.inventoryitem:DoDropPhysics(${1:x},${2:y},${3:z},${4:randomdir},${5:speedmult})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n   (randomdir)<>[] \n   (speedmult)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitem:RemoveFromOwner:": {
        "prefix": "components.inventoryitem:RemoveFromOwner",
        "body": "components.inventoryitem:RemoveFromOwner(${1:wholestack},${2:keepoverstacked})",
        "description": " ※Params: \n   (wholestack)<>[] \n   (keepoverstacked)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitem:WakeLivingItem:": {
        "prefix": "components.inventoryitem:WakeLivingItem",
        "body": "components.inventoryitem:WakeLivingItem()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitem:SetSinks:": {
        "prefix": "components.inventoryitem:SetSinks",
        "body": "components.inventoryitem:SetSinks(${1:should_sink})",
        "description": " ※Params: \n   (should_sink)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitem:SetOnPickupFn:": {
        "prefix": "components.inventoryitem:SetOnPickupFn",
        "body": "components.inventoryitem:SetOnPickupFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitem:SetOnActiveItemFn:": {
        "prefix": "components.inventoryitem:SetOnActiveItemFn",
        "body": "components.inventoryitem:SetOnActiveItemFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitem:OnUpdate:": {
        "prefix": "components.inventoryitem:OnUpdate",
        "body": "components.inventoryitem:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitemholder:IsHolding:": {
        "prefix": "components.inventoryitemholder:IsHolding",
        "body": "components.inventoryitemholder:IsHolding()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitemholder:CanGive:": {
        "prefix": "components.inventoryitemholder:CanGive",
        "body": "components.inventoryitemholder:CanGive(${1:item},${2:giver})",
        "description": " ※Params: \n   (item)<>[] \n   (giver)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitemholder:SetAllowedTags:": {
        "prefix": "components.inventoryitemholder:SetAllowedTags",
        "body": "components.inventoryitemholder:SetAllowedTags(${1:tags})",
        "description": " ※Params: \n   (tags)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitemholder:CanTake:": {
        "prefix": "components.inventoryitemholder:CanTake",
        "body": "components.inventoryitemholder:CanTake(${1:taker})",
        "description": " ※Params: \n   (taker)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitemholder:SetOnItemGivenFn:": {
        "prefix": "components.inventoryitemholder:SetOnItemGivenFn",
        "body": "components.inventoryitemholder:SetOnItemGivenFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitemholder:SetOnItemTakenFn:": {
        "prefix": "components.inventoryitemholder:SetOnItemTakenFn",
        "body": "components.inventoryitemholder:SetOnItemTakenFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitemholder:GetDebugString:": {
        "prefix": "components.inventoryitemholder:GetDebugString",
        "body": "components.inventoryitemholder:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitemholder:OnLoad:": {
        "prefix": "components.inventoryitemholder:OnLoad",
        "body": "components.inventoryitemholder:OnLoad(${1:data},${2:newents})",
        "description": " ※Params: \n   (data)<>[] \n   (newents)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitemholder:GiveItem:": {
        "prefix": "components.inventoryitemholder:GiveItem",
        "body": "components.inventoryitemholder:GiveItem(${1:item},${2:giver})",
        "description": " ※Params: \n   (item)<>[] \n   (giver)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitemholder:TakeItem:": {
        "prefix": "components.inventoryitemholder:TakeItem",
        "body": "components.inventoryitemholder:TakeItem(${1:taker})",
        "description": " ※Params: \n   (taker)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitemholder:OnSave:": {
        "prefix": "components.inventoryitemholder:OnSave",
        "body": "components.inventoryitemholder:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitemholder:OnRemoveFromEntity:": {
        "prefix": "components.inventoryitemholder:OnRemoveFromEntity",
        "body": "components.inventoryitemholder:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitemmoisture:GetDebugString:": {
        "prefix": "components.inventoryitemmoisture:GetDebugString",
        "body": "components.inventoryitemmoisture:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitemmoisture:UpdateMoisture:": {
        "prefix": "components.inventoryitemmoisture:UpdateMoisture",
        "body": "components.inventoryitemmoisture:UpdateMoisture(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitemmoisture:OnLoad:": {
        "prefix": "components.inventoryitemmoisture:OnLoad",
        "body": "components.inventoryitemmoisture:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitemmoisture:MakeMoistureAtLeast:": {
        "prefix": "components.inventoryitemmoisture:MakeMoistureAtLeast",
        "body": "components.inventoryitemmoisture:MakeMoistureAtLeast(${1:min})",
        "description": " ※Params: \n   (min)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitemmoisture:GetTargetMoisture:": {
        "prefix": "components.inventoryitemmoisture:GetTargetMoisture",
        "body": "components.inventoryitemmoisture:GetTargetMoisture()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitemmoisture:DiluteMoisture:": {
        "prefix": "components.inventoryitemmoisture:DiluteMoisture",
        "body": "components.inventoryitemmoisture:DiluteMoisture(${1:item},${2:count})",
        "description": " ※Params: \n   (item)<>[] \n   (count)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitemmoisture:InheritMoisture:": {
        "prefix": "components.inventoryitemmoisture:InheritMoisture",
        "body": "components.inventoryitemmoisture:InheritMoisture(${1:moisture},${2:iswet})",
        "description": " ※Params: \n   (moisture)<>[] \n   (iswet)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitemmoisture:AttachReplica:": {
        "prefix": "components.inventoryitemmoisture:AttachReplica",
        "body": "components.inventoryitemmoisture:AttachReplica(${1:replica})",
        "description": " ※Params: \n   (replica)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitemmoisture:OnEntityWake:": {
        "prefix": "components.inventoryitemmoisture:OnEntityWake",
        "body": "components.inventoryitemmoisture:OnEntityWake()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitemmoisture:SetMoisture:": {
        "prefix": "components.inventoryitemmoisture:SetMoisture",
        "body": "components.inventoryitemmoisture:SetMoisture(${1:moisture})",
        "description": " ※Params: \n   (moisture)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitemmoisture:DoDelta:": {
        "prefix": "components.inventoryitemmoisture:DoDelta",
        "body": "components.inventoryitemmoisture:DoDelta(${1:delta})",
        "description": " ※Params: \n   (delta)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitemmoisture:OnEntitySleep:": {
        "prefix": "components.inventoryitemmoisture:OnEntitySleep",
        "body": "components.inventoryitemmoisture:OnEntitySleep()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitemmoisture:OnSave:": {
        "prefix": "components.inventoryitemmoisture:OnSave",
        "body": "components.inventoryitemmoisture:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.inventoryitemmoisture:OnRemoveFromEntity:": {
        "prefix": "components.inventoryitemmoisture:OnRemoveFromEntity",
        "body": "components.inventoryitemmoisture:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.itemaffinity:AddAffinity:": {
        "prefix": "components.itemaffinity:AddAffinity",
        "body": "components.itemaffinity:AddAffinity(${1:prefab},${2:tag},${3:sanity_bonus},${4:priority})",
        "description": " ※Params: \n   (prefab)<>[] \n   (tag)<>[] \n   (sanity_bonus)<>[] \n   (priority)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.itemaffinity:RefreshAffinity:": {
        "prefix": "components.itemaffinity:RefreshAffinity",
        "body": "components.itemaffinity:RefreshAffinity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.itemaffinity:SortAffinities:": {
        "prefix": "components.itemaffinity:SortAffinities",
        "body": "components.itemaffinity:SortAffinities()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.itemaffinity:RemoveAffinity:": {
        "prefix": "components.itemaffinity:RemoveAffinity",
        "body": "components.itemaffinity:RemoveAffinity(${1:prefab})",
        "description": " ※Params: \n   (prefab)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.itemweigher:DoWeighIn:": {
        "prefix": "components.itemweigher:DoWeighIn",
        "body": "components.itemweigher:DoWeighIn(${1:target},${2:doer})",
        "description": " ※Params: \n   (target)<>[] \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.itemweigher:SetOnDoWeighInFn:": {
        "prefix": "components.itemweigher:SetOnDoWeighInFn",
        "body": "components.itemweigher:SetOnDoWeighInFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.itemweigher:OnRemoveFromEntity:": {
        "prefix": "components.itemweigher:OnRemoveFromEntity",
        "body": "components.itemweigher:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.key:SetOnUsedFn:": {
        "prefix": "components.key:SetOnUsedFn",
        "body": "components.key:SetOnUsedFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.key:OnRemoved:": {
        "prefix": "components.key:OnRemoved",
        "body": "components.key:OnRemoved(${1:lock},${2:doer})",
        "description": " ※Params: \n   (lock)<>[] \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.key:OnUsed:": {
        "prefix": "components.key:OnUsed",
        "body": "components.key:OnUsed(${1:lock},${2:doer})",
        "description": " ※Params: \n   (lock)<>[] \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.key:SetOnRemovedFn:": {
        "prefix": "components.key:SetOnRemovedFn",
        "body": "components.key:SetOnRemovedFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.key:OnRemoveFromEntity:": {
        "prefix": "components.key:OnRemoveFromEntity",
        "body": "components.key:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.kitcoon:GetDebugString:": {
        "prefix": "components.kitcoon:GetDebugString",
        "body": "components.kitcoon:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.kitcoonden:AddKitcoon:": {
        "prefix": "components.kitcoonden:AddKitcoon",
        "body": "components.kitcoonden:AddKitcoon(${1:kitcoon},${2:doer})",
        "description": " ※Params: \n   (kitcoon)<>[] \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.kitcoonden:GetDebugString:": {
        "prefix": "components.kitcoonden:GetDebugString",
        "body": "components.kitcoonden:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.kitcoonden:RemoveAllKitcoons:": {
        "prefix": "components.kitcoonden:RemoveAllKitcoons",
        "body": "components.kitcoonden:RemoveAllKitcoons()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.kitcoonden:RemoveKitcoon:": {
        "prefix": "components.kitcoonden:RemoveKitcoon",
        "body": "components.kitcoonden:RemoveKitcoon(${1:kitcoon})",
        "description": " ※Params: \n   (kitcoon)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.kitcoonden:OnRemoveFromEntity:": {
        "prefix": "components.kitcoonden:OnRemoveFromEntity",
        "body": "components.kitcoonden:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.klaussackkey:SetTrueKey:": {
        "prefix": "components.klaussackkey:SetTrueKey",
        "body": "components.klaussackkey:SetTrueKey(${1:truekey})",
        "description": " ※Params: \n   (truekey)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.klaussackkey:OnRemoveFromEntity:": {
        "prefix": "components.klaussackkey:OnRemoveFromEntity",
        "body": "components.klaussackkey:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.klaussacklock:SetOnUseKey:": {
        "prefix": "components.klaussacklock:SetOnUseKey",
        "body": "components.klaussacklock:SetOnUseKey(${1:onusekeyfn})",
        "description": " ※Params: \n   (onusekeyfn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.klaussacklock:UseKey:": {
        "prefix": "components.klaussacklock:UseKey",
        "body": "components.klaussacklock:UseKey(${1:key},${2:doer})",
        "description": " ※Params: \n   (key)<>[] \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.klaussacklock:OnRemoveFromEntity:": {
        "prefix": "components.klaussacklock:OnRemoveFromEntity",
        "body": "components.klaussacklock:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.klaussackloot:OnLoad:": {
        "prefix": "components.klaussackloot:OnLoad",
        "body": "components.klaussackloot:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.klaussackloot:OnSave:": {
        "prefix": "components.klaussackloot:OnSave",
        "body": "components.klaussackloot:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.klaussackloot:GetLoot:": {
        "prefix": "components.klaussackloot:GetLoot",
        "body": "components.klaussackloot:GetLoot()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.knownlocations:ForgetLocation:": {
        "prefix": "components.knownlocations:ForgetLocation",
        "body": "components.knownlocations:ForgetLocation(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.knownlocations:GetLocation:": {
        "prefix": "components.knownlocations:GetLocation",
        "body": "components.knownlocations:GetLocation(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.knownlocations:GetDebugString:": {
        "prefix": "components.knownlocations:GetDebugString",
        "body": "components.knownlocations:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.knownlocations:DeserializeLocations:": {
        "prefix": "components.knownlocations:DeserializeLocations",
        "body": "components.knownlocations:DeserializeLocations(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.knownlocations:RememberLocation:": {
        "prefix": "components.knownlocations:RememberLocation",
        "body": "components.knownlocations:RememberLocation(${1:name},${2:pos},${3:dont_overwrite})",
        "description": " ※Params: \n   (name)<>[] \n   (pos)<>[] \n   (dont_overwrite)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.knownlocations:OnSave:": {
        "prefix": "components.knownlocations:OnSave",
        "body": "components.knownlocations:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.knownlocations:SerializeLocations:": {
        "prefix": "components.knownlocations:SerializeLocations",
        "body": "components.knownlocations:SerializeLocations()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.knownlocations:OnLoad:": {
        "prefix": "components.knownlocations:OnLoad",
        "body": "components.knownlocations:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.lavaarenamobtracker:FindMobs:": {
        "prefix": "components.lavaarenamobtracker:FindMobs",
        "body": "components.lavaarenamobtracker:FindMobs(${1:x},${2:y},${3:z},${4:r},${5:musttags},${6:canttags},${7:mustoneoftags})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n   (r)<>[] \n   (musttags)<>[] \n   (canttags)<>[] \n   (mustoneoftags)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.lavaarenamobtracker:StartTracking:": {
        "prefix": "components.lavaarenamobtracker:StartTracking",
        "body": "components.lavaarenamobtracker:StartTracking(${1:ent})",
        "description": " ※Params: \n   (ent)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.lavaarenamobtracker:GetAllMobs:": {
        "prefix": "components.lavaarenamobtracker:GetAllMobs",
        "body": "components.lavaarenamobtracker:GetAllMobs()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.lavaarenamobtracker:StopTracking:": {
        "prefix": "components.lavaarenamobtracker:StopTracking",
        "body": "components.lavaarenamobtracker:StopTracking(${1:ent})",
        "description": " ※Params: \n   (ent)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.lavaarenamobtracker:GetNumMobs:": {
        "prefix": "components.lavaarenamobtracker:GetNumMobs",
        "body": "components.lavaarenamobtracker:GetNumMobs()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.lavaarenamobtracker:ForEachMob:": {
        "prefix": "components.lavaarenamobtracker:ForEachMob",
        "body": "components.lavaarenamobtracker:ForEachMob(${1:cb},${2:params})",
        "description": " ※Params: \n   (cb)<>[] \n   (params)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.leader:RemoveFollower:": {
        "prefix": "components.leader:RemoveFollower",
        "body": "components.leader:RemoveFollower(${1:follower},${2:invalid})",
        "description": " ※Params: \n   (follower)<>[] \n   (invalid)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.leader:GetDebugString:": {
        "prefix": "components.leader:GetDebugString",
        "body": "components.leader:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.leader:LoadPostPass:": {
        "prefix": "components.leader:LoadPostPass",
        "body": "components.leader:LoadPostPass(${1:newents},${2:savedata})",
        "description": " ※Params: \n   (newents)<>[] \n   (savedata)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.leader:IsBeingFollowedBy:": {
        "prefix": "components.leader:IsBeingFollowedBy",
        "body": "components.leader:IsBeingFollowedBy(${1:prefabName})",
        "description": " ※Params: \n   (prefabName)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.leader:IsFollower:": {
        "prefix": "components.leader:IsFollower",
        "body": "components.leader:IsFollower(${1:guy})",
        "description": " ※Params: \n   (guy)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.leader:OnNewTarget:": {
        "prefix": "components.leader:OnNewTarget",
        "body": "components.leader:OnNewTarget(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.leader:RemoveAllFollowersOnDeath:": {
        "prefix": "components.leader:RemoveAllFollowersOnDeath",
        "body": "components.leader:RemoveAllFollowersOnDeath()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.leader:AddFollower:": {
        "prefix": "components.leader:AddFollower",
        "body": "components.leader:AddFollower(${1:follower})",
        "description": " ※Params: \n   (follower)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.leader:CountFollowers:": {
        "prefix": "components.leader:CountFollowers",
        "body": "components.leader:CountFollowers(${1:tag})",
        "description": " ※Params: \n   (tag)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.leader:RemoveAllFollowers:": {
        "prefix": "components.leader:RemoveAllFollowers",
        "body": "components.leader:RemoveAllFollowers()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.leader:RemoveFollowersByTag:": {
        "prefix": "components.leader:RemoveFollowersByTag",
        "body": "components.leader:RemoveFollowersByTag(${1:tag},${2:validateremovefn})",
        "description": " ※Params: \n   (tag)<>[] \n   (validateremovefn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.leader:HaveFollowersCachePlayerLeader:": {
        "prefix": "components.leader:HaveFollowersCachePlayerLeader",
        "body": "components.leader:HaveFollowersCachePlayerLeader()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.leader:IsTargetedByFollowers:": {
        "prefix": "components.leader:IsTargetedByFollowers",
        "body": "components.leader:IsTargetedByFollowers(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.leader:OnAttacked:": {
        "prefix": "components.leader:OnAttacked",
        "body": "components.leader:OnAttacked(${1:attacker})",
        "description": " ※Params: \n   (attacker)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.leader:OnSave:": {
        "prefix": "components.leader:OnSave",
        "body": "components.leader:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.leader:OnRemoveFromEntity:": {
        "prefix": "components.leader:OnRemoveFromEntity",
        "body": "components.leader:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.lighter:Light:": {
        "prefix": "components.lighter:Light",
        "body": "components.lighter:Light(${1:target},${2:doer})",
        "description": " ※Params: \n   (target)<>[] \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.lighter:SetOnLightFn:": {
        "prefix": "components.lighter:SetOnLightFn",
        "body": "components.lighter:SetOnLightFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.lighter:OnRemoveFromEntity:": {
        "prefix": "components.lighter:OnRemoveFromEntity",
        "body": "components.lighter:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.lightningblocker:SetOnLightningStrike:": {
        "prefix": "components.lightningblocker:SetOnLightningStrike",
        "body": "components.lightningblocker:SetOnLightningStrike(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.lightningblocker:SetBlockRange:": {
        "prefix": "components.lightningblocker:SetBlockRange",
        "body": "components.lightningblocker:SetBlockRange(${1:newrange})",
        "description": " ※Params: \n   (newrange)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.lightningblocker:DoLightningStrike:": {
        "prefix": "components.lightningblocker:DoLightningStrike",
        "body": "components.lightningblocker:DoLightningStrike(${1:pos})",
        "description": " ※Params: \n   (pos)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.lightningblocker:OnRemoveFromEntity:": {
        "prefix": "components.lightningblocker:OnRemoveFromEntity",
        "body": "components.lightningblocker:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.lighttweener:OnUpdate:": {
        "prefix": "components.lighttweener:OnUpdate",
        "body": "components.lighttweener:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.lock:SetKey:": {
        "prefix": "components.lock:SetKey",
        "body": "components.lock:SetKey(${1:key})",
        "description": " ※Params: \n   (key)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.lock:TestForUnlock:": {
        "prefix": "components.lock:TestForUnlock",
        "body": "components.lock:TestForUnlock(${1:key})",
        "description": " ※Params: \n   (key)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.lock:LoadPostPass:": {
        "prefix": "components.lock:LoadPostPass",
        "body": "components.lock:LoadPostPass(${1:newents},${2:data})",
        "description": " ※Params: \n   (newents)<>[] \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.lock:SetOnUnlockedFn:": {
        "prefix": "components.lock:SetOnUnlockedFn",
        "body": "components.lock:SetOnUnlockedFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.lock:SetOnLockedFn:": {
        "prefix": "components.lock:SetOnLockedFn",
        "body": "components.lock:SetOnLockedFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.lock:OnLoad:": {
        "prefix": "components.lock:OnLoad",
        "body": "components.lock:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.lock:IsStuck:": {
        "prefix": "components.lock:IsStuck",
        "body": "components.lock:IsStuck()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.lock:Unlock:": {
        "prefix": "components.lock:Unlock",
        "body": "components.lock:Unlock(${1:key},${2:doer})",
        "description": " ※Params: \n   (key)<>[] \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.lock:OnSave:": {
        "prefix": "components.lock:OnSave",
        "body": "components.lock:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.lock:GetDebugString:": {
        "prefix": "components.lock:GetDebugString",
        "body": "components.lock:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.lock:Lock:": {
        "prefix": "components.lock:Lock",
        "body": "components.lock:Lock(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.lock:SetLocked:": {
        "prefix": "components.lock:SetLocked",
        "body": "components.lock:SetLocked(${1:locked})",
        "description": " ※Params: \n   (locked)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.lock:CompatableKey:": {
        "prefix": "components.lock:CompatableKey",
        "body": "components.lock:CompatableKey(${1:keytype})",
        "description": " ※Params: \n   (keytype)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.lock:IsLocked:": {
        "prefix": "components.lock:IsLocked",
        "body": "components.lock:IsLocked()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.lock:OnRemoveFromEntity:": {
        "prefix": "components.lock:OnRemoveFromEntity",
        "body": "components.lock:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:WaitingForPathSearch:": {
        "prefix": "components.locomotor:WaitingForPathSearch",
        "body": "components.locomotor:WaitingForPathSearch()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:RecalculateExternalSpeedMultiplier:": {
        "prefix": "components.locomotor:RecalculateExternalSpeedMultiplier",
        "body": "components.locomotor:RecalculateExternalSpeedMultiplier(${1:sources})",
        "description": " ※Params: \n   (sources)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:SetStrafing:": {
        "prefix": "components.locomotor:SetStrafing",
        "body": "components.locomotor:SetStrafing(${1:strafing})",
        "description": " ※Params: \n   (strafing)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:SetTriggersCreep:": {
        "prefix": "components.locomotor:SetTriggersCreep",
        "body": "components.locomotor:SetTriggersCreep(${1:triggers})",
        "description": " ※Params: \n   (triggers)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:GetRunSpeed:": {
        "prefix": "components.locomotor:GetRunSpeed",
        "body": "components.locomotor:GetRunSpeed()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:GoToPoint:": {
        "prefix": "components.locomotor:GoToPoint",
        "body": "components.locomotor:GoToPoint(${1:pt},${2:bufferedaction},${3:run},${4:overridedest})",
        "description": " ※Params: \n   (pt)<>[] \n   (bufferedaction)<>[] \n   (run)<>[] \n   (overridedest)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:PushAction:": {
        "prefix": "components.locomotor:PushAction",
        "body": "components.locomotor:PushAction(${1:bufferedaction},${2:run},${3:try_instant})",
        "description": " ※Params: \n   (bufferedaction)<>[] \n   (run)<>[] \n   (try_instant)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:OnStrafeFacingChanged:": {
        "prefix": "components.locomotor:OnStrafeFacingChanged",
        "body": "components.locomotor:OnStrafeFacingChanged(${1:dir})",
        "description": " ※Params: \n   (dir)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:GoToEntity:": {
        "prefix": "components.locomotor:GoToEntity",
        "body": "components.locomotor:GoToEntity(${1:target},${2:bufferedaction},${3:run})",
        "description": " ※Params: \n   (target)<>[] \n   (bufferedaction)<>[] \n   (run)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:GetDebugString:": {
        "prefix": "components.locomotor:GetDebugString",
        "body": "components.locomotor:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:GetWalkSpeed:": {
        "prefix": "components.locomotor:GetWalkSpeed",
        "body": "components.locomotor:GetWalkSpeed()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:SetFasterOnCreep:": {
        "prefix": "components.locomotor:SetFasterOnCreep",
        "body": "components.locomotor:SetFasterOnCreep(${1:faster})",
        "description": " ※Params: \n   (faster)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:SetMoveDir:": {
        "prefix": "components.locomotor:SetMoveDir",
        "body": "components.locomotor:SetMoveDir(${1:dir})",
        "description": " ※Params: \n   (dir)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:IsAtEdge:": {
        "prefix": "components.locomotor:IsAtEdge",
        "body": "components.locomotor:IsAtEdge(${1:my_platform},${2:map},${3:my_x},${4:my_z},${5:dir_x},${6:dir_z})",
        "description": " ※Params: \n   (my_platform)<>[] \n   (map)<>[] \n   (my_x)<>[] \n   (my_z)<>[] \n   (dir_x)<>[] \n   (dir_z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:StartStrafing:": {
        "prefix": "components.locomotor:StartStrafing",
        "body": "components.locomotor:StartStrafing()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:GetTimeMoving:": {
        "prefix": "components.locomotor:GetTimeMoving",
        "body": "components.locomotor:GetTimeMoving()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:SetMotorSpeed:": {
        "prefix": "components.locomotor:SetMotorSpeed",
        "body": "components.locomotor:SetMotorSpeed(${1:speed})",
        "description": " ※Params: \n   (speed)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:IsAquatic:": {
        "prefix": "components.locomotor:IsAquatic",
        "body": "components.locomotor:IsAquatic()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:IsTerrestrial:": {
        "prefix": "components.locomotor:IsTerrestrial",
        "body": "components.locomotor:IsTerrestrial()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:WantsToMoveForward:": {
        "prefix": "components.locomotor:WantsToMoveForward",
        "body": "components.locomotor:WantsToMoveForward()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:RemovePredictExternalSpeedMultiplier:": {
        "prefix": "components.locomotor:RemovePredictExternalSpeedMultiplier",
        "body": "components.locomotor:RemovePredictExternalSpeedMultiplier(${1:source},${2:key})",
        "description": " ※Params: \n   (source)<>[] \n   (key)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:KillPathSearch:": {
        "prefix": "components.locomotor:KillPathSearch",
        "body": "components.locomotor:KillPathSearch()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:OnRemoveFromEntity:": {
        "prefix": "components.locomotor:OnRemoveFromEntity",
        "body": "components.locomotor:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:RestartPredictMoveTimer:": {
        "prefix": "components.locomotor:RestartPredictMoveTimer",
        "body": "components.locomotor:RestartPredictMoveTimer()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:CancelPredictMoveTimer:": {
        "prefix": "components.locomotor:CancelPredictMoveTimer",
        "body": "components.locomotor:CancelPredictMoveTimer()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:TempGroundTile:": {
        "prefix": "components.locomotor:TempGroundTile",
        "body": "components.locomotor:TempGroundTile()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:StopMoveTimerInternal:": {
        "prefix": "components.locomotor:StopMoveTimerInternal",
        "body": "components.locomotor:StopMoveTimerInternal()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:RunForward:": {
        "prefix": "components.locomotor:RunForward",
        "body": "components.locomotor:RunForward(${1:direct})",
        "description": " ※Params: \n   (direct)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:SetFasterOnGroundTile:": {
        "prefix": "components.locomotor:SetFasterOnGroundTile",
        "body": "components.locomotor:SetFasterOnGroundTile(${1:ground_tile},${2:is_faster})",
        "description": " ※Params: \n   (ground_tile)<>[] \n   (is_faster)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:OnEntityWake:": {
        "prefix": "components.locomotor:OnEntityWake",
        "body": "components.locomotor:OnEntityWake()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:OnUpdate:": {
        "prefix": "components.locomotor:OnUpdate",
        "body": "components.locomotor:OnUpdate(${1:dt},${2:arrive_check_only})",
        "description": " ※Params: \n   (dt)<>[] \n   (arrive_check_only)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:SetExternalSpeedMultiplier:": {
        "prefix": "components.locomotor:SetExternalSpeedMultiplier",
        "body": "components.locomotor:SetExternalSpeedMultiplier(${1:source},${2:key},${3:m})",
        "description": " ※Params: \n   (source)<>[] \n   (key)<>[] \n   (m)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:SetSlowMultiplier:": {
        "prefix": "components.locomotor:SetSlowMultiplier",
        "body": "components.locomotor:SetSlowMultiplier(${1:m})",
        "description": " ※Params: \n   (m)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:PushTempGroundSpeedMultiplier:": {
        "prefix": "components.locomotor:PushTempGroundSpeedMultiplier",
        "body": "components.locomotor:PushTempGroundSpeedMultiplier(${1:mult},${2:tile})",
        "description": " ※Params: \n   (mult)<>[] \n   (tile)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:CheckEdge:": {
        "prefix": "components.locomotor:CheckEdge",
        "body": "components.locomotor:CheckEdge(${1:my_platform},${2:map},${3:my_x},${4:my_z},${5:dir_x},${6:dir_z},${7:radius})",
        "description": " ※Params: \n   (my_platform)<>[] \n   (map)<>[] \n   (my_x)<>[] \n   (my_z)<>[] \n   (dir_x)<>[] \n   (dir_z)<>[] \n   (radius)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:StopUpdatingInternal:": {
        "prefix": "components.locomotor:StopUpdatingInternal",
        "body": "components.locomotor:StopUpdatingInternal()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:RemoveExternalSpeedMultiplier:": {
        "prefix": "components.locomotor:RemoveExternalSpeedMultiplier",
        "body": "components.locomotor:RemoveExternalSpeedMultiplier(${1:source},${2:key})",
        "description": " ※Params: \n   (source)<>[] \n   (key)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:EnableGroundSpeedMultiplier:": {
        "prefix": "components.locomotor:EnableGroundSpeedMultiplier",
        "body": "components.locomotor:EnableGroundSpeedMultiplier(${1:enable})",
        "description": " ※Params: \n   (enable)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:StartHopping:": {
        "prefix": "components.locomotor:StartHopping",
        "body": "components.locomotor:StartHopping(${1:x},${2:z},${3:target_platform})",
        "description": " ※Params: \n   (x)<>[] \n   (z)<>[] \n   (target_platform)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:TempGroundSpeedMultiplier:": {
        "prefix": "components.locomotor:TempGroundSpeedMultiplier",
        "body": "components.locomotor:TempGroundSpeedMultiplier()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:RunInDirection:": {
        "prefix": "components.locomotor:RunInDirection",
        "body": "components.locomotor:RunInDirection(${1:direction},${2:throttle})",
        "description": " ※Params: \n   (direction)<>[] \n   (throttle)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:SetPredictExternalSpeedMultiplier:": {
        "prefix": "components.locomotor:SetPredictExternalSpeedMultiplier",
        "body": "components.locomotor:SetPredictExternalSpeedMultiplier(${1:source},${2:key},${3:m})",
        "description": " ※Params: \n   (source)<>[] \n   (key)<>[] \n   (m)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:FaceMovePoint:": {
        "prefix": "components.locomotor:FaceMovePoint",
        "body": "components.locomotor:FaceMovePoint(${1:x},${2:y},${3:z})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:FinishHopping:": {
        "prefix": "components.locomotor:FinishHopping",
        "body": "components.locomotor:FinishHopping()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:FindPath:": {
        "prefix": "components.locomotor:FindPath",
        "body": "components.locomotor:FindPath()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:CanPathfindOnLand:": {
        "prefix": "components.locomotor:CanPathfindOnLand",
        "body": "components.locomotor:CanPathfindOnLand()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:GetHopDistance:": {
        "prefix": "components.locomotor:GetHopDistance",
        "body": "components.locomotor:GetHopDistance(${1:speed_mult})",
        "description": " ※Params: \n   (speed_mult)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:Stop:": {
        "prefix": "components.locomotor:Stop",
        "body": "components.locomotor:Stop(${1:sgparams})",
        "description": " ※Params: \n   (sgparams)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:CanPathfindOnWater:": {
        "prefix": "components.locomotor:CanPathfindOnWater",
        "body": "components.locomotor:CanPathfindOnWater()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:ScanForPlatform:": {
        "prefix": "components.locomotor:ScanForPlatform",
        "body": "components.locomotor:ScanForPlatform(${1:my_platform},${2:target_x},${3:target_z},${4:hop_distance})",
        "description": " ※Params: \n   (my_platform)<>[] \n   (target_x)<>[] \n   (target_z)<>[] \n   (hop_distance)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:GetPredictExternalSpeedMultipler:": {
        "prefix": "components.locomotor:GetPredictExternalSpeedMultipler",
        "body": "components.locomotor:GetPredictExternalSpeedMultipler(${1:source},${2:key})",
        "description": " ※Params: \n   (source)<>[] \n   (key)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:SetAllowPlatformHopping:": {
        "prefix": "components.locomotor:SetAllowPlatformHopping",
        "body": "components.locomotor:SetAllowPlatformHopping(${1:enabled})",
        "description": " ※Params: \n   (enabled)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:TestForBlocked:": {
        "prefix": "components.locomotor:TestForBlocked",
        "body": "components.locomotor:TestForBlocked(${1:my_x},${2:my_z},${3:dir_x},${4:dir_z},${5:radius},${6:test_length})",
        "description": " ※Params: \n   (my_x)<>[] \n   (my_z)<>[] \n   (dir_x)<>[] \n   (dir_z)<>[] \n   (radius)<>[] \n   (test_length)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:ScanForPlatformInDir:": {
        "prefix": "components.locomotor:ScanForPlatformInDir",
        "body": "components.locomotor:ScanForPlatformInDir(${1:my_platform},${2:map},${3:my_x},${4:my_z},${5:dir_x},${6:dir_z},${7:steps},${8:step_size})",
        "description": " ※Params: \n   (my_platform)<>[] \n   (map)<>[] \n   (my_x)<>[] \n   (my_z)<>[] \n   (dir_x)<>[] \n   (dir_z)<>[] \n   (steps)<>[] \n   (step_size)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:StartMoveTimerInternal:": {
        "prefix": "components.locomotor:StartMoveTimerInternal",
        "body": "components.locomotor:StartMoveTimerInternal()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:UpdateHopping:": {
        "prefix": "components.locomotor:UpdateHopping",
        "body": "components.locomotor:UpdateHopping(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:WantsToRun:": {
        "prefix": "components.locomotor:WantsToRun",
        "body": "components.locomotor:WantsToRun()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:SetShouldRun:": {
        "prefix": "components.locomotor:SetShouldRun",
        "body": "components.locomotor:SetShouldRun(${1:should_run})",
        "description": " ※Params: \n   (should_run)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:EnableHopDelay:": {
        "prefix": "components.locomotor:EnableHopDelay",
        "body": "components.locomotor:EnableHopDelay(${1:enable})",
        "description": " ※Params: \n   (enable)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:HasDestination:": {
        "prefix": "components.locomotor:HasDestination",
        "body": "components.locomotor:HasDestination()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:WalkInDirection:": {
        "prefix": "components.locomotor:WalkInDirection",
        "body": "components.locomotor:WalkInDirection(${1:direction},${2:should_run})",
        "description": " ※Params: \n   (direction)<>[] \n   (should_run)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:StopStrafing:": {
        "prefix": "components.locomotor:StopStrafing",
        "body": "components.locomotor:StopStrafing()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:PreviewAction:": {
        "prefix": "components.locomotor:PreviewAction",
        "body": "components.locomotor:PreviewAction(${1:bufferedaction},${2:run},${3:try_instant})",
        "description": " ※Params: \n   (bufferedaction)<>[] \n   (run)<>[] \n   (try_instant)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:SetReachDestinationCallback:": {
        "prefix": "components.locomotor:SetReachDestinationCallback",
        "body": "components.locomotor:SetReachDestinationCallback(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:ResetPath:": {
        "prefix": "components.locomotor:ResetPath",
        "body": "components.locomotor:ResetPath()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:Clear:": {
        "prefix": "components.locomotor:Clear",
        "body": "components.locomotor:Clear()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:WalkForward:": {
        "prefix": "components.locomotor:WalkForward",
        "body": "components.locomotor:WalkForward(${1:direct})",
        "description": " ※Params: \n   (direct)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:StartUpdatingInternal:": {
        "prefix": "components.locomotor:StartUpdatingInternal",
        "body": "components.locomotor:StartUpdatingInternal()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:SetBufferedAction:": {
        "prefix": "components.locomotor:SetBufferedAction",
        "body": "components.locomotor:SetBufferedAction(${1:act})",
        "description": " ※Params: \n   (act)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:GetExternalSpeedMultiplier:": {
        "prefix": "components.locomotor:GetExternalSpeedMultiplier",
        "body": "components.locomotor:GetExternalSpeedMultiplier(${1:source},${2:key})",
        "description": " ※Params: \n   (source)<>[] \n   (key)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:UpdateGroundSpeedMultiplier:": {
        "prefix": "components.locomotor:UpdateGroundSpeedMultiplier",
        "body": "components.locomotor:UpdateGroundSpeedMultiplier()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:StopMoving:": {
        "prefix": "components.locomotor:StopMoving",
        "body": "components.locomotor:StopMoving()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.locomotor:OnEntitySleep:": {
        "prefix": "components.locomotor:OnEntitySleep",
        "body": "components.locomotor:OnEntitySleep()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.lootdropper:PickRandomLoot:": {
        "prefix": "components.lootdropper:PickRandomLoot",
        "body": "components.lootdropper:PickRandomLoot()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.lootdropper:AddIfNotChanceLoot:": {
        "prefix": "components.lootdropper:AddIfNotChanceLoot",
        "body": "components.lootdropper:AddIfNotChanceLoot(${1:prefab})",
        "description": " ※Params: \n   (prefab)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.lootdropper:GetRecipeLoot:": {
        "prefix": "components.lootdropper:GetRecipeLoot",
        "body": "components.lootdropper:GetRecipeLoot(${1:recipe})",
        "description": " ※Params: \n   (recipe)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.lootdropper:SpawnLootPrefab:": {
        "prefix": "components.lootdropper:SpawnLootPrefab",
        "body": "components.lootdropper:SpawnLootPrefab(${1:lootprefab},${2:pt},${3:linked_skinname},${4:skin_id},${5:userid})",
        "description": " ※Params: \n   (lootprefab)<>[] \n   (pt)<>[] \n   (linked_skinname)<>[] \n   (skin_id)<>[] \n   (userid)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.lootdropper:AddRandomHauntedLoot:": {
        "prefix": "components.lootdropper:AddRandomHauntedLoot",
        "body": "components.lootdropper:AddRandomHauntedLoot(${1:prefab},${2:weight})",
        "description": " ※Params: \n   (prefab)<>[] \n   (weight)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.lootdropper:GetFullRecipeLoot:": {
        "prefix": "components.lootdropper:GetFullRecipeLoot",
        "body": "components.lootdropper:GetFullRecipeLoot(${1:recipe})",
        "description": " ※Params: \n   (recipe)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.lootdropper:AddChanceLoot:": {
        "prefix": "components.lootdropper:AddChanceLoot",
        "body": "components.lootdropper:AddChanceLoot(${1:prefab},${2:chance})",
        "description": " ※Params: \n   (prefab)<>[] \n   (chance)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.lootdropper:SetLoot:": {
        "prefix": "components.lootdropper:SetLoot",
        "body": "components.lootdropper:SetLoot(${1:loots})",
        "description": " ※Params: \n   (loots)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.lootdropper:DropLoot:": {
        "prefix": "components.lootdropper:DropLoot",
        "body": "components.lootdropper:DropLoot(${1:pt})",
        "description": " ※Params: \n   (pt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.lootdropper:AddRandomLoot:": {
        "prefix": "components.lootdropper:AddRandomLoot",
        "body": "components.lootdropper:AddRandomLoot(${1:prefab},${2:weight})",
        "description": " ※Params: \n   (prefab)<>[] \n   (weight)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.lootdropper:GetAllPossibleLoot:": {
        "prefix": "components.lootdropper:GetAllPossibleLoot",
        "body": "components.lootdropper:GetAllPossibleLoot(${1:setuploot})",
        "description": " ※Params: \n   (setuploot)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.lootdropper:SetFlingTarget:": {
        "prefix": "components.lootdropper:SetFlingTarget",
        "body": "components.lootdropper:SetFlingTarget(${1:pos},${2:variance})",
        "description": " ※Params: \n   (pos)<>[] \n   (variance)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.lootdropper:SetLootSetupFn:": {
        "prefix": "components.lootdropper:SetLootSetupFn",
        "body": "components.lootdropper:SetLootSetupFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.lootdropper:FlingItem:": {
        "prefix": "components.lootdropper:FlingItem",
        "body": "components.lootdropper:FlingItem(${1:loot},${2:pt})",
        "description": " ※Params: \n   (loot)<>[] \n   (pt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.lootdropper:GenerateLoot:": {
        "prefix": "components.lootdropper:GenerateLoot",
        "body": "components.lootdropper:GenerateLoot()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.lootdropper:ClearRandomLoot:": {
        "prefix": "components.lootdropper:ClearRandomLoot",
        "body": "components.lootdropper:ClearRandomLoot()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.lordfruitflytrigger:StartUpdating:": {
        "prefix": "components.lordfruitflytrigger:StartUpdating",
        "body": "components.lordfruitflytrigger:StartUpdating()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.lordfruitflytrigger:OnUpdate:": {
        "prefix": "components.lordfruitflytrigger:OnUpdate",
        "body": "components.lordfruitflytrigger:OnUpdate()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.lordfruitflytrigger:StopUpdating:": {
        "prefix": "components.lordfruitflytrigger:StopUpdating",
        "body": "components.lordfruitflytrigger:StopUpdating()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.lordfruitflytrigger:OnRemoveFromEntity:": {
        "prefix": "components.lordfruitflytrigger:OnRemoveFromEntity",
        "body": "components.lordfruitflytrigger:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.lunarplant_tentacle_weapon:OnAttack:": {
        "prefix": "components.lunarplant_tentacle_weapon:OnAttack",
        "body": "components.lunarplant_tentacle_weapon:OnAttack(${1:owner},${2:attack_data})",
        "description": " ※Params: \n   (owner)<>[] \n   (attack_data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.lunarplant_tentacle_weapon:SetOwner:": {
        "prefix": "components.lunarplant_tentacle_weapon:SetOwner",
        "body": "components.lunarplant_tentacle_weapon:SetOwner(${1:owner})",
        "description": " ※Params: \n   (owner)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.lunarplant_tentacle_weapon:OnRemoveFromEntity:": {
        "prefix": "components.lunarplant_tentacle_weapon:OnRemoveFromEntity",
        "body": "components.lunarplant_tentacle_weapon:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.lunarriftmutationsmanager:ShouldGiveReward:": {
        "prefix": "components.lunarriftmutationsmanager:ShouldGiveReward",
        "body": "components.lunarriftmutationsmanager:ShouldGiveReward()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.lunarriftmutationsmanager:TriggerWagstaffAppearance:": {
        "prefix": "components.lunarriftmutationsmanager:TriggerWagstaffAppearance",
        "body": "components.lunarriftmutationsmanager:TriggerWagstaffAppearance(${1:ent})",
        "description": " ※Params: \n   (ent)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.lunarriftmutationsmanager:HasDefeatedAllMutations:": {
        "prefix": "components.lunarriftmutationsmanager:HasDefeatedAllMutations",
        "body": "components.lunarriftmutationsmanager:HasDefeatedAllMutations()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.lunarriftmutationsmanager:GetDebugString:": {
        "prefix": "components.lunarriftmutationsmanager:GetDebugString",
        "body": "components.lunarriftmutationsmanager:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.lunarriftmutationsmanager:OnLoad:": {
        "prefix": "components.lunarriftmutationsmanager:OnLoad",
        "body": "components.lunarriftmutationsmanager:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.lunarriftmutationsmanager:_CanCorpseMutate:": {
        "prefix": "components.lunarriftmutationsmanager:_CanCorpseMutate",
        "body": "components.lunarriftmutationsmanager:_CanCorpseMutate(${1:ent})",
        "description": " ※Params: \n   (ent)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.lunarriftmutationsmanager:RefreshDefeatedMutationsTable:": {
        "prefix": "components.lunarriftmutationsmanager:RefreshDefeatedMutationsTable",
        "body": "components.lunarriftmutationsmanager:RefreshDefeatedMutationsTable()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.lunarriftmutationsmanager:SetMutationDefeated:": {
        "prefix": "components.lunarriftmutationsmanager:SetMutationDefeated",
        "body": "components.lunarriftmutationsmanager:SetMutationDefeated(${1:ent})",
        "description": " ※Params: \n   (ent)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.lunarriftmutationsmanager:HasDefeatedThisMutation:": {
        "prefix": "components.lunarriftmutationsmanager:HasDefeatedThisMutation",
        "body": "components.lunarriftmutationsmanager:HasDefeatedThisMutation(${1:prefab})",
        "description": " ※Params: \n   (prefab)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.lunarriftmutationsmanager:IsTaskCompleted:": {
        "prefix": "components.lunarriftmutationsmanager:IsTaskCompleted",
        "body": "components.lunarriftmutationsmanager:IsTaskCompleted()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.lunarriftmutationsmanager:IsWagstaffSpawned:": {
        "prefix": "components.lunarriftmutationsmanager:IsWagstaffSpawned",
        "body": "components.lunarriftmutationsmanager:IsWagstaffSpawned()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.lunarriftmutationsmanager:OnRewardGiven:": {
        "prefix": "components.lunarriftmutationsmanager:OnRewardGiven",
        "body": "components.lunarriftmutationsmanager:OnRewardGiven()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.lunarriftmutationsmanager:TryMutate:": {
        "prefix": "components.lunarriftmutationsmanager:TryMutate",
        "body": "components.lunarriftmutationsmanager:TryMutate(${1:ent},${2:corpseprefab})",
        "description": " ※Params: \n   (ent)<>[] \n   (corpseprefab)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.lunarriftmutationsmanager:OnSave:": {
        "prefix": "components.lunarriftmutationsmanager:OnSave",
        "body": "components.lunarriftmutationsmanager:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.lunarriftmutationsmanager:GetNumDefeatedMutations:": {
        "prefix": "components.lunarriftmutationsmanager:GetNumDefeatedMutations",
        "body": "components.lunarriftmutationsmanager:GetNumDefeatedMutations()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.lunarthrall_plantspawner:FindHerd:": {
        "prefix": "components.lunarthrall_plantspawner:FindHerd",
        "body": "components.lunarthrall_plantspawner:FindHerd()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.lunarthrall_plantspawner:SpawnGestalt:": {
        "prefix": "components.lunarthrall_plantspawner:SpawnGestalt",
        "body": "components.lunarthrall_plantspawner:SpawnGestalt(${1:target},${2:rift})",
        "description": " ※Params: \n   (target)<>[] \n   (rift)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.lunarthrall_plantspawner:setHerdsOnPlantable:": {
        "prefix": "components.lunarthrall_plantspawner:setHerdsOnPlantable",
        "body": "components.lunarthrall_plantspawner:setHerdsOnPlantable(${1:plantable})",
        "description": " ※Params: \n   (plantable)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.lunarthrall_plantspawner:RemoveWave:": {
        "prefix": "components.lunarthrall_plantspawner:RemoveWave",
        "body": "components.lunarthrall_plantspawner:RemoveWave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.lunarthrall_plantspawner:SpawnPlant:": {
        "prefix": "components.lunarthrall_plantspawner:SpawnPlant",
        "body": "components.lunarthrall_plantspawner:SpawnPlant(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.lunarthrall_plantspawner:LoadPostPass:": {
        "prefix": "components.lunarthrall_plantspawner:LoadPostPass",
        "body": "components.lunarthrall_plantspawner:LoadPostPass(${1:newents},${2:data})",
        "description": " ※Params: \n   (newents)<>[] \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.lunarthrall_plantspawner:LongUpdate:": {
        "prefix": "components.lunarthrall_plantspawner:LongUpdate",
        "body": "components.lunarthrall_plantspawner:LongUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.lunarthrall_plantspawner:GetDebugString:": {
        "prefix": "components.lunarthrall_plantspawner:GetDebugString",
        "body": "components.lunarthrall_plantspawner:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.lunarthrall_plantspawner:OnLoad:": {
        "prefix": "components.lunarthrall_plantspawner:OnLoad",
        "body": "components.lunarthrall_plantspawner:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.lunarthrall_plantspawner:FindPlant:": {
        "prefix": "components.lunarthrall_plantspawner:FindPlant",
        "body": "components.lunarthrall_plantspawner:FindPlant()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.lunarthrall_plantspawner:InvadeTarget:": {
        "prefix": "components.lunarthrall_plantspawner:InvadeTarget",
        "body": "components.lunarthrall_plantspawner:InvadeTarget(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.lunarthrall_plantspawner:OnSave:": {
        "prefix": "components.lunarthrall_plantspawner:OnSave",
        "body": "components.lunarthrall_plantspawner:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.lunarthrall_plantspawner:MoveGestaltToPlant:": {
        "prefix": "components.lunarthrall_plantspawner:MoveGestaltToPlant",
        "body": "components.lunarthrall_plantspawner:MoveGestaltToPlant(${1:thrall})",
        "description": " ※Params: \n   (thrall)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.machine:TurnOff:": {
        "prefix": "components.machine:TurnOff",
        "body": "components.machine:TurnOff()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.machine:SetGroundOnlyMachine:": {
        "prefix": "components.machine:SetGroundOnlyMachine",
        "body": "components.machine:SetGroundOnlyMachine(${1:groundonly})",
        "description": " ※Params: \n   (groundonly)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.machine:IsOn:": {
        "prefix": "components.machine:IsOn",
        "body": "components.machine:IsOn()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.machine:GetDebugString:": {
        "prefix": "components.machine:GetDebugString",
        "body": "components.machine:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.machine:CanInteract:": {
        "prefix": "components.machine:CanInteract",
        "body": "components.machine:CanInteract()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.machine:OnLoad:": {
        "prefix": "components.machine:OnLoad",
        "body": "components.machine:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.machine:TurnOn:": {
        "prefix": "components.machine:TurnOn",
        "body": "components.machine:TurnOn()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.machine:OnSave:": {
        "prefix": "components.machine:OnSave",
        "body": "components.machine:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.machine:OnRemoveFromEntity:": {
        "prefix": "components.machine:OnRemoveFromEntity",
        "body": "components.machine:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.madsciencelab:IsMakingScience:": {
        "prefix": "components.madsciencelab:IsMakingScience",
        "body": "components.madsciencelab:IsMakingScience()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.madsciencelab:LongUpdate:": {
        "prefix": "components.madsciencelab:LongUpdate",
        "body": "components.madsciencelab:LongUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.madsciencelab:StartMakingScience:": {
        "prefix": "components.madsciencelab:StartMakingScience",
        "body": "components.madsciencelab:StartMakingScience(${1:product})",
        "description": " ※Params: \n   (product)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.madsciencelab:GetDebugString:": {
        "prefix": "components.madsciencelab:GetDebugString",
        "body": "components.madsciencelab:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.madsciencelab:SetStage:": {
        "prefix": "components.madsciencelab:SetStage",
        "body": "components.madsciencelab:SetStage(${1:stage},${2:time_override})",
        "description": " ※Params: \n   (stage)<>[] \n   (time_override)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.madsciencelab:OnLoad:": {
        "prefix": "components.madsciencelab:OnLoad",
        "body": "components.madsciencelab:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.madsciencelab:OnSave:": {
        "prefix": "components.madsciencelab:OnSave",
        "body": "components.madsciencelab:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.madsciencelab:OnRemoveFromEntity:": {
        "prefix": "components.madsciencelab:OnRemoveFromEntity",
        "body": "components.madsciencelab:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.magician:StartUsingTool:": {
        "prefix": "components.magician:StartUsingTool",
        "body": "components.magician:StartUsingTool(${1:item})",
        "description": " ※Params: \n   (item)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.magician:OnLoad:": {
        "prefix": "components.magician:OnLoad",
        "body": "components.magician:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.magician:DropToolOnStop:": {
        "prefix": "components.magician:DropToolOnStop",
        "body": "components.magician:DropToolOnStop()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.magician:StopUsing:": {
        "prefix": "components.magician:StopUsing",
        "body": "components.magician:StopUsing()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.magician:OnSave:": {
        "prefix": "components.magician:OnSave",
        "body": "components.magician:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.magician:OnRemoveFromEntity:": {
        "prefix": "components.magician:OnRemoveFromEntity",
        "body": "components.magician:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.magiciantool:SetOnStopUsingFn:": {
        "prefix": "components.magiciantool:SetOnStopUsingFn",
        "body": "components.magiciantool:SetOnStopUsingFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.magiciantool:OnRemoveEntity:": {
        "prefix": "components.magiciantool:OnRemoveEntity",
        "body": "components.magiciantool:OnRemoveEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.magiciantool:SetOnStartUsingFn:": {
        "prefix": "components.magiciantool:SetOnStartUsingFn",
        "body": "components.magiciantool:SetOnStartUsingFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.magiciantool:OnStopUsing:": {
        "prefix": "components.magiciantool:OnStopUsing",
        "body": "components.magiciantool:OnStopUsing(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.magiciantool:StopUsing:": {
        "prefix": "components.magiciantool:StopUsing",
        "body": "components.magiciantool:StopUsing()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.magiciantool:OnStartUsing:": {
        "prefix": "components.magiciantool:OnStartUsing",
        "body": "components.magiciantool:OnStartUsing(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.magiciantool:OnRemoveFromEntity:": {
        "prefix": "components.magiciantool:OnRemoveFromEntity",
        "body": "components.magiciantool:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.map:SetTile:": {
        "prefix": "components.map:SetTile",
        "body": "components.map:SetTile(${1:x},${2:y},${3:tile},${4:...})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (tile)<>[] \n   (...)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:CanDeployPlantAtPoint:": {
        "prefix": "components.map:CanDeployPlantAtPoint",
        "body": "components.map:CanDeployPlantAtPoint(${1:pt},${2:inst})",
        "description": " ※Params: \n   (pt)<>[] \n   (inst)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:IsAboveGroundInSquare:": {
        "prefix": "components.map:IsAboveGroundInSquare",
        "body": "components.map:IsAboveGroundInSquare(${1:x},${2:y},${3:z},${4:r},${5:filterfn})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n   (r)<>[] \n   (filterfn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:CanDeployAtPoint:": {
        "prefix": "components.map:CanDeployAtPoint",
        "body": "components.map:CanDeployAtPoint(${1:pt},${2:inst},${3:mouseover})",
        "description": " ※Params: \n   (pt)<>[] \n   (inst)<>[] \n   (mouseover)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:IsOceanAtPoint:": {
        "prefix": "components.map:IsOceanAtPoint",
        "body": "components.map:IsOceanAtPoint(${1:x},${2:y},${3:z},${4:allow_boats})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n   (allow_boats)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:CanPointHaveAcidRain:": {
        "prefix": "components.map:CanPointHaveAcidRain",
        "body": "components.map:CanPointHaveAcidRain(${1:x},${2:y},${3:z})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:FindNodeAtPoint:": {
        "prefix": "components.map:FindNodeAtPoint",
        "body": "components.map:FindNodeAtPoint(${1:x},${2:y},${3:z})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:CanTillSoilAtPoint:": {
        "prefix": "components.map:CanTillSoilAtPoint",
        "body": "components.map:CanTillSoilAtPoint(${1:x},${2:y},${3:z},${4:ignore_tile_type})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n   (ignore_tile_type)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:InternalIsPointOnWater:": {
        "prefix": "components.map:InternalIsPointOnWater",
        "body": "components.map:InternalIsPointOnWater(${1:test_x},${2:test_y},${3:test_z})",
        "description": " ※Params: \n   (test_x)<>[] \n   (test_y)<>[] \n   (test_z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:GetRandomPointClustersForNodePrefix:": {
        "prefix": "components.map:GetRandomPointClustersForNodePrefix",
        "body": "components.map:GetRandomPointClustersForNodePrefix(${1:prefixes},${2:countpernode})",
        "description": " ※Params: \n   (prefixes)<>[] \n   (countpernode)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:StopFindingGoodArenaPoints:": {
        "prefix": "components.map:StopFindingGoodArenaPoints",
        "body": "components.map:StopFindingGoodArenaPoints()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.map:CanPlowAtPoint:": {
        "prefix": "components.map:CanPlowAtPoint",
        "body": "components.map:CanPlowAtPoint(${1:x},${2:y},${3:z})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:IsAboveGroundAtPoint:": {
        "prefix": "components.map:IsAboveGroundAtPoint",
        "body": "components.map:IsAboveGroundAtPoint(${1:x},${2:y},${3:z},${4:allow_water})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n   (allow_water)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:IsPassableAtPointWithPlatformRadiusBias:": {
        "prefix": "components.map:IsPassableAtPointWithPlatformRadiusBias",
        "body": "components.map:IsPassableAtPointWithPlatformRadiusBias(${1:x},${2:y},${3:z},${4:allow_water},${5:exclude_boats},${6:platform_radius_bias},${7:ignore_land_overhang})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n   (allow_water)<>[] \n   (exclude_boats)<>[] \n   (platform_radius_bias)<>[] \n   (ignore_land_overhang)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:CanAreaTagsHaveAcidRain:": {
        "prefix": "components.map:CanAreaTagsHaveAcidRain",
        "body": "components.map:CanAreaTagsHaveAcidRain(${1:tags})",
        "description": " ※Params: \n   (tags)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:CheckForBadThingsInArena:": {
        "prefix": "components.map:CheckForBadThingsInArena",
        "body": "components.map:CheckForBadThingsInArena(${1:pt},${2:badthingsatspawnpoints})",
        "description": " ※Params: \n   (pt)<>[] \n   (badthingsatspawnpoints)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:IsInLunacyArea:": {
        "prefix": "components.map:IsInLunacyArea",
        "body": "components.map:IsInLunacyArea(${1:x},${2:y},${3:z})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:CanDeployWallAtPoint:": {
        "prefix": "components.map:CanDeployWallAtPoint",
        "body": "components.map:CanDeployWallAtPoint(${1:pt},${2:inst})",
        "description": " ※Params: \n   (pt)<>[] \n   (inst)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:IsPointNearHole:": {
        "prefix": "components.map:IsPointNearHole",
        "body": "components.map:IsPointNearHole(${1:pt},${2:range})",
        "description": " ※Params: \n   (pt)<>[] \n   (range)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:CanDeployDockAtPoint:": {
        "prefix": "components.map:CanDeployDockAtPoint",
        "body": "components.map:CanDeployDockAtPoint(${1:pt},${2:inst},${3:mouseover})",
        "description": " ※Params: \n   (pt)<>[] \n   (inst)<>[] \n   (mouseover)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:CanDeployAtPointInWater:": {
        "prefix": "components.map:CanDeployAtPointInWater",
        "body": "components.map:CanDeployAtPointInWater(${1:pt},${2:inst},${3:mouseover},${4:data})",
        "description": " ※Params: \n   (pt)<>[] \n   (inst)<>[] \n   (mouseover)<>[] \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:IsSurroundedByLand:": {
        "prefix": "components.map:IsSurroundedByLand",
        "body": "components.map:IsSurroundedByLand(${1:x},${2:y},${3:z},${4:radius})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n   (radius)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:RegisterDeploySmartRadius:": {
        "prefix": "components.map:RegisterDeploySmartRadius",
        "body": "components.map:RegisterDeploySmartRadius(${1:radius})",
        "description": " ※Params: \n   (radius)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:ClearGoodArenaPoints:": {
        "prefix": "components.map:ClearGoodArenaPoints",
        "body": "components.map:ClearGoodArenaPoints()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.map:RegisterTerraformExtraSpacing:": {
        "prefix": "components.map:RegisterTerraformExtraSpacing",
        "body": "components.map:RegisterTerraformExtraSpacing(${1:spacing})",
        "description": " ※Params: \n   (spacing)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:IsTemporaryTileAtPoint:": {
        "prefix": "components.map:IsTemporaryTileAtPoint",
        "body": "components.map:IsTemporaryTileAtPoint(${1:x},${2:y},${3:z})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:CanDeployRecipeAtPoint:": {
        "prefix": "components.map:CanDeployRecipeAtPoint",
        "body": "components.map:CanDeployRecipeAtPoint(${1:pt},${2:recipe},${3:rot})",
        "description": " ※Params: \n   (pt)<>[] \n   (recipe)<>[] \n   (rot)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:CanPlacePrefabFilteredAtPoint:": {
        "prefix": "components.map:CanPlacePrefabFilteredAtPoint",
        "body": "components.map:CanPlacePrefabFilteredAtPoint(${1:x},${2:y},${3:z},${4:prefab})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n   (prefab)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:StopFindingGoodOceanArenaPoints:": {
        "prefix": "components.map:StopFindingGoodOceanArenaPoints",
        "body": "components.map:StopFindingGoodOceanArenaPoints()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.map:IsDockAtPoint:": {
        "prefix": "components.map:IsDockAtPoint",
        "body": "components.map:IsDockAtPoint(${1:x},${2:y},${3:z})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:CollapseSoilAtPoint:": {
        "prefix": "components.map:CollapseSoilAtPoint",
        "body": "components.map:CollapseSoilAtPoint(${1:x},${2:y},${3:z})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:IsOceanIceAtPoint:": {
        "prefix": "components.map:IsOceanIceAtPoint",
        "body": "components.map:IsOceanIceAtPoint(${1:x},${2:y},${3:z})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:GetGoodOceanArenaPoints:": {
        "prefix": "components.map:GetGoodOceanArenaPoints",
        "body": "components.map:GetGoodOceanArenaPoints()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.map:IsPointInSharkBoiArena:": {
        "prefix": "components.map:IsPointInSharkBoiArena",
        "body": "components.map:IsPointInSharkBoiArena(${1:x},${2:y},${3:z})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:FindBestSpawningPointForOceanArena:": {
        "prefix": "components.map:FindBestSpawningPointForOceanArena",
        "body": "components.map:FindBestSpawningPointForOceanArena(${1:CustomAllowTest},${2:perfect_only},${3:spawnpoints})",
        "description": " ※Params: \n   (CustomAllowTest)<>[] \n   (perfect_only)<>[] \n   (spawnpoints)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:IsValidTileAtPoint:": {
        "prefix": "components.map:IsValidTileAtPoint",
        "body": "components.map:IsValidTileAtPoint(${1:x},${2:y},${3:z})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:IsTileOcean:": {
        "prefix": "components.map:IsTileOcean",
        "body": "components.map:IsTileOcean(${1:tile})",
        "description": " ※Params: \n   (tile)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:FindRandomPointInOcean:": {
        "prefix": "components.map:FindRandomPointInOcean",
        "body": "components.map:FindRandomPointInOcean(${1:max_tries})",
        "description": " ※Params: \n   (max_tries)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:StartFindingGoodOceanArenaPoints:": {
        "prefix": "components.map:StartFindingGoodOceanArenaPoints",
        "body": "components.map:StartFindingGoodOceanArenaPoints()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.map:CanPlaceTurfAtPoint:": {
        "prefix": "components.map:CanPlaceTurfAtPoint",
        "body": "components.map:CanPlaceTurfAtPoint(${1:x},${2:y},${3:z})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:IsSurroundedByWater:": {
        "prefix": "components.map:IsSurroundedByWater",
        "body": "components.map:IsSurroundedByWater(${1:x},${2:y},${3:z},${4:radius})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n   (radius)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:ClearGoodOceanArenaPoints:": {
        "prefix": "components.map:ClearGoodOceanArenaPoints",
        "body": "components.map:ClearGoodOceanArenaPoints()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.map:FindBestSpawningPointForArena:": {
        "prefix": "components.map:FindBestSpawningPointForArena",
        "body": "components.map:FindBestSpawningPointForArena(${1:CustomAllowTest},${2:perfect_only},${3:spawnpoints})",
        "description": " ※Params: \n   (CustomAllowTest)<>[] \n   (perfect_only)<>[] \n   (spawnpoints)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:CanPlantAtPoint:": {
        "prefix": "components.map:CanPlantAtPoint",
        "body": "components.map:CanPlantAtPoint(${1:x},${2:y},${3:z})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:FindRandomPointOnLand:": {
        "prefix": "components.map:FindRandomPointOnLand",
        "body": "components.map:FindRandomPointOnLand(${1:max_tries})",
        "description": " ※Params: \n   (max_tries)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:StartFindingGoodArenaPoints:": {
        "prefix": "components.map:StartFindingGoodArenaPoints",
        "body": "components.map:StartFindingGoodArenaPoints()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.map:IsDeployPointClear:": {
        "prefix": "components.map:IsDeployPointClear",
        "body": "components.map:IsDeployPointClear(${1:pt},${2:inst},${3:min_spacing},${4:min_spacing_sq_fn},${5:near_other_fn},${6:check_player},${7:custom_ignore_tags})",
        "description": " ※Params: \n   (pt)<>[] \n   (inst)<>[] \n   (min_spacing)<>[] \n   (min_spacing_sq_fn)<>[] \n   (near_other_fn)<>[] \n   (check_player)<>[] \n   (custom_ignore_tags)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:IsDeployPointClear2:": {
        "prefix": "components.map:IsDeployPointClear2",
        "body": "components.map:IsDeployPointClear2(${1:pt},${2:inst},${3:object_size},${4:object_size_fn},${5:near_other_fn},${6:check_player},${7:custom_ignore_tags})",
        "description": " ※Params: \n   (pt)<>[] \n   (inst)<>[] \n   (object_size)<>[] \n   (object_size_fn)<>[] \n   (near_other_fn)<>[] \n   (check_player)<>[] \n   (custom_ignore_tags)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:GetGoodArenaPoints:": {
        "prefix": "components.map:GetGoodArenaPoints",
        "body": "components.map:GetGoodArenaPoints()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.map:IsTerraformingBlockedByAnObject:": {
        "prefix": "components.map:IsTerraformingBlockedByAnObject",
        "body": "components.map:IsTerraformingBlockedByAnObject(${1:tile_x},${2:tile_y})",
        "description": " ※Params: \n   (tile_x)<>[] \n   (tile_y)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:IsTileLandNoDocks:": {
        "prefix": "components.map:IsTileLandNoDocks",
        "body": "components.map:IsTileLandNoDocks(${1:tile})",
        "description": " ※Params: \n   (tile)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:CanCastAtPoint:": {
        "prefix": "components.map:CanCastAtPoint",
        "body": "components.map:CanCastAtPoint(${1:pt},${2:alwayspassable},${3:allowwater},${4:deployradius})",
        "description": " ※Params: \n   (pt)<>[] \n   (alwayspassable)<>[] \n   (allowwater)<>[] \n   (deployradius)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:CanDeployWalkablePeripheralAtPoint:": {
        "prefix": "components.map:CanDeployWalkablePeripheralAtPoint",
        "body": "components.map:CanDeployWalkablePeripheralAtPoint(${1:pt},${2:inst})",
        "description": " ※Params: \n   (pt)<>[] \n   (inst)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:NodeAtPointHasTag:": {
        "prefix": "components.map:NodeAtPointHasTag",
        "body": "components.map:NodeAtPointHasTag(${1:x},${2:y},${3:z},${4:tag})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n   (tag)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:GetTopologyIDAtPoint:": {
        "prefix": "components.map:GetTopologyIDAtPoint",
        "body": "components.map:GetTopologyIDAtPoint(${1:x},${2:y},${3:z})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:GetPlatformAtPoint:": {
        "prefix": "components.map:GetPlatformAtPoint",
        "body": "components.map:GetPlatformAtPoint(${1:pos_x},${2:pos_y},${3:pos_z},${4:extra_radius})",
        "description": " ※Params: \n   (pos_x)<>[] \n   (pos_y)<>[] \n   (pos_z)<>[] \n   (extra_radius)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:FindRandomPointWithFilter:": {
        "prefix": "components.map:FindRandomPointWithFilter",
        "body": "components.map:FindRandomPointWithFilter(${1:max_tries},${2:filterfn})",
        "description": " ※Params: \n   (max_tries)<>[] \n   (filterfn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:CanTerraformAtPoint:": {
        "prefix": "components.map:CanTerraformAtPoint",
        "body": "components.map:CanTerraformAtPoint(${1:x},${2:y},${3:z})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:GetNearestPointOnWater:": {
        "prefix": "components.map:GetNearestPointOnWater",
        "body": "components.map:GetNearestPointOnWater(${1:x},${2:z},${3:radius},${4:iterations})",
        "description": " ※Params: \n   (x)<>[] \n   (z)<>[] \n   (radius)<>[] \n   (iterations)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:CanDeployBoatAtPointInWater:": {
        "prefix": "components.map:CanDeployBoatAtPointInWater",
        "body": "components.map:CanDeployBoatAtPointInWater(${1:pt},${2:inst},${3:mouseover},${4:data})",
        "description": " ※Params: \n   (pt)<>[] \n   (inst)<>[] \n   (mouseover)<>[] \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:HasAdjacentLandTile:": {
        "prefix": "components.map:HasAdjacentLandTile",
        "body": "components.map:HasAdjacentLandTile(${1:tx},${2:ty})",
        "description": " ※Params: \n   (tx)<>[] \n   (ty)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:CanDeployMastAtPoint:": {
        "prefix": "components.map:CanDeployMastAtPoint",
        "body": "components.map:CanDeployMastAtPoint(${1:pt},${2:inst},${3:mouseover})",
        "description": " ※Params: \n   (pt)<>[] \n   (inst)<>[] \n   (mouseover)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:IsGroundTargetBlocked:": {
        "prefix": "components.map:IsGroundTargetBlocked",
        "body": "components.map:IsGroundTargetBlocked(${1:pt},${2:range})",
        "description": " ※Params: \n   (pt)<>[] \n   (range)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:IsFarmableSoilAtPoint:": {
        "prefix": "components.map:IsFarmableSoilAtPoint",
        "body": "components.map:IsFarmableSoilAtPoint(${1:x},${2:y},${3:z})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:RegisterGroundTargetBlocker:": {
        "prefix": "components.map:RegisterGroundTargetBlocker",
        "body": "components.map:RegisterGroundTargetBlocker(${1:radius})",
        "description": " ※Params: \n   (radius)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:RegisterDeployExtraSpacing:": {
        "prefix": "components.map:RegisterDeployExtraSpacing",
        "body": "components.map:RegisterDeployExtraSpacing(${1:spacing})",
        "description": " ※Params: \n   (spacing)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:CheckForBadThingsInOceanArena:": {
        "prefix": "components.map:CheckForBadThingsInOceanArena",
        "body": "components.map:CheckForBadThingsInOceanArena(${1:pt},${2:badthingsatspawnpoints})",
        "description": " ※Params: \n   (pt)<>[] \n   (badthingsatspawnpoints)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:IsPassableAtPoint:": {
        "prefix": "components.map:IsPassableAtPoint",
        "body": "components.map:IsPassableAtPoint(${1:x},${2:y},${3:z},${4:allow_water},${5:exclude_boats})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n   (allow_water)<>[] \n   (exclude_boats)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:IsOceanTileAtPoint:": {
        "prefix": "components.map:IsOceanTileAtPoint",
        "body": "components.map:IsOceanTileAtPoint(${1:x},${2:y},${3:z})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.map:IsLandTileAtPoint:": {
        "prefix": "components.map:IsLandTileAtPoint",
        "body": "components.map:IsLandTileAtPoint(${1:x},${2:y},${3:z})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.maprecorder:SetOnDataChangedFn:": {
        "prefix": "components.maprecorder:SetOnDataChangedFn",
        "body": "components.maprecorder:SetOnDataChangedFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.maprecorder:OnLoad:": {
        "prefix": "components.maprecorder:OnLoad",
        "body": "components.maprecorder:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.maprecorder:TeachMap:": {
        "prefix": "components.maprecorder:TeachMap",
        "body": "components.maprecorder:TeachMap(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.maprecorder:OnSave:": {
        "prefix": "components.maprecorder:OnSave",
        "body": "components.maprecorder:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.maprecorder:ClearMap:": {
        "prefix": "components.maprecorder:ClearMap",
        "body": "components.maprecorder:ClearMap()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.maprecorder:IsCurrentWorld:": {
        "prefix": "components.maprecorder:IsCurrentWorld",
        "body": "components.maprecorder:IsCurrentWorld()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.maprecorder:RecordMap:": {
        "prefix": "components.maprecorder:RecordMap",
        "body": "components.maprecorder:RecordMap(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.maprecorder:HasData:": {
        "prefix": "components.maprecorder:HasData",
        "body": "components.maprecorder:HasData()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.maprevealable:SetIconPrefab:": {
        "prefix": "components.maprevealable:SetIconPrefab",
        "body": "components.maprevealable:SetIconPrefab(${1:prefab})",
        "description": " ※Params: \n   (prefab)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.maprevealable:RemoveRevealSource:": {
        "prefix": "components.maprevealable:RemoveRevealSource",
        "body": "components.maprevealable:RemoveRevealSource(${1:source})",
        "description": " ※Params: \n   (source)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.maprevealable:StopRevealing:": {
        "prefix": "components.maprevealable:StopRevealing",
        "body": "components.maprevealable:StopRevealing()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.maprevealable:Start:": {
        "prefix": "components.maprevealable:Start",
        "body": "components.maprevealable:Start(${1:delay})",
        "description": " ※Params: \n   (delay)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.maprevealable:RefreshRevealSources:": {
        "prefix": "components.maprevealable:RefreshRevealSources",
        "body": "components.maprevealable:RefreshRevealSources()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.maprevealable:Refresh:": {
        "prefix": "components.maprevealable:Refresh",
        "body": "components.maprevealable:Refresh()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.maprevealable:SetIconPriority:": {
        "prefix": "components.maprevealable:SetIconPriority",
        "body": "components.maprevealable:SetIconPriority(${1:priority})",
        "description": " ※Params: \n   (priority)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.maprevealable:SetIcon:": {
        "prefix": "components.maprevealable:SetIcon",
        "body": "components.maprevealable:SetIcon(${1:iconname})",
        "description": " ※Params: \n   (iconname)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.maprevealable:Stop:": {
        "prefix": "components.maprevealable:Stop",
        "body": "components.maprevealable:Stop()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.maprevealable:AddRevealSource:": {
        "prefix": "components.maprevealable:AddRevealSource",
        "body": "components.maprevealable:AddRevealSource(${1:source},${2:restriction})",
        "description": " ※Params: \n   (source)<>[] \n   (restriction)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.maprevealable:StartRevealing:": {
        "prefix": "components.maprevealable:StartRevealing",
        "body": "components.maprevealable:StartRevealing(${1:restriction})",
        "description": " ※Params: \n   (restriction)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.maprevealable:OnRemoveFromEntity:": {
        "prefix": "components.maprevealable:OnRemoveFromEntity",
        "body": "components.maprevealable:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.maprevealer:Stop:": {
        "prefix": "components.maprevealer:Stop",
        "body": "components.maprevealer:Stop()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.maprevealer:RevealMapToPlayer:": {
        "prefix": "components.maprevealer:RevealMapToPlayer",
        "body": "components.maprevealer:RevealMapToPlayer(${1:player})",
        "description": " ※Params: \n   (player)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mapspotrevealer:RevealMap:": {
        "prefix": "components.mapspotrevealer:RevealMap",
        "body": "components.mapspotrevealer:RevealMap(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mapspotrevealer:SetPreRevealFn:": {
        "prefix": "components.mapspotrevealer:SetPreRevealFn",
        "body": "components.mapspotrevealer:SetPreRevealFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mapspotrevealer:SetGetTargetFn:": {
        "prefix": "components.mapspotrevealer:SetGetTargetFn",
        "body": "components.mapspotrevealer:SetGetTargetFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mapspotrevealer:OnRemoveFromEntity:": {
        "prefix": "components.mapspotrevealer:OnRemoveFromEntity",
        "body": "components.mapspotrevealer:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.markable:returnid:": {
        "prefix": "components.markable:returnid",
        "body": "components.markable:returnid(${1:id})",
        "description": " ※Params: \n   (id)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.markable:Mark:": {
        "prefix": "components.markable:Mark",
        "body": "components.markable:Mark(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.markable:SetMarkable:": {
        "prefix": "components.markable:SetMarkable",
        "body": "components.markable:SetMarkable(${1:markable})",
        "description": " ※Params: \n   (markable)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.markable:HasMarked:": {
        "prefix": "components.markable:HasMarked",
        "body": "components.markable:HasMarked(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.markable:getid:": {
        "prefix": "components.markable:getid",
        "body": "components.markable:getid()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.markable:Unmarkall:": {
        "prefix": "components.markable:Unmarkall",
        "body": "components.markable:Unmarkall()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.markable:OnLoad:": {
        "prefix": "components.markable:OnLoad",
        "body": "components.markable:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.markable:OnSave:": {
        "prefix": "components.markable:OnSave",
        "body": "components.markable:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.markable:CanMark:": {
        "prefix": "components.markable:CanMark",
        "body": "components.markable:CanMark(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.markable_proxy:HasMarked:": {
        "prefix": "components.markable_proxy:HasMarked",
        "body": "components.markable_proxy:HasMarked(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.markable_proxy:Mark:": {
        "prefix": "components.markable_proxy:Mark",
        "body": "components.markable_proxy:Mark(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.markable_proxy:SetMarkable:": {
        "prefix": "components.markable_proxy:SetMarkable",
        "body": "components.markable_proxy:SetMarkable(${1:markable})",
        "description": " ※Params: \n   (markable)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mast:SetBoat:": {
        "prefix": "components.mast:SetBoat",
        "body": "components.mast:SetBoat(${1:boat})",
        "description": " ※Params: \n   (boat)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mast:SetVelocityMod:": {
        "prefix": "components.mast:SetVelocityMod",
        "body": "components.mast:SetVelocityMod(${1:set})",
        "description": " ※Params: \n   (set)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mast:SetRudder:": {
        "prefix": "components.mast:SetRudder",
        "body": "components.mast:SetRudder(${1:obj})",
        "description": " ※Params: \n   (obj)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mast:OnDeath:": {
        "prefix": "components.mast:OnDeath",
        "body": "components.mast:OnDeath()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mast:SailFurled:": {
        "prefix": "components.mast:SailFurled",
        "body": "components.mast:SailFurled()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mast:CalcSailForce:": {
        "prefix": "components.mast:CalcSailForce",
        "body": "components.mast:CalcSailForce()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mast:OnRemoveFromEntity:": {
        "prefix": "components.mast:OnRemoveFromEntity",
        "body": "components.mast:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mast:SetReveseDeploy:": {
        "prefix": "components.mast:SetReveseDeploy",
        "body": "components.mast:SetReveseDeploy(${1:set})",
        "description": " ※Params: \n   (set)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mast:AddSailFurler:": {
        "prefix": "components.mast:AddSailFurler",
        "body": "components.mast:AddSailFurler(${1:doer},${2:strength})",
        "description": " ※Params: \n   (doer)<>[] \n   (strength)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mast:SetSailForce:": {
        "prefix": "components.mast:SetSailForce",
        "body": "components.mast:SetSailForce(${1:set})",
        "description": " ※Params: \n   (set)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mast:OnUpdate:": {
        "prefix": "components.mast:OnUpdate",
        "body": "components.mast:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mast:SetRudderDirection:": {
        "prefix": "components.mast:SetRudderDirection",
        "body": "components.mast:SetRudderDirection(${1:rudder_direction_x},${2:rudder_direction_z})",
        "description": " ※Params: \n   (rudder_direction_x)<>[] \n   (rudder_direction_z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mast:CalcMaxVelocity:": {
        "prefix": "components.mast:CalcMaxVelocity",
        "body": "components.mast:CalcMaxVelocity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mast:GetFurled0to1:": {
        "prefix": "components.mast:GetFurled0to1",
        "body": "components.mast:GetFurled0to1()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mast:CloseSail:": {
        "prefix": "components.mast:CloseSail",
        "body": "components.mast:CloseSail()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mast:SailUnfurled:": {
        "prefix": "components.mast:SailUnfurled",
        "body": "components.mast:SailUnfurled()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mast:OnRemoveEntity:": {
        "prefix": "components.mast:OnRemoveEntity",
        "body": "components.mast:OnRemoveEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mast:GetCurrentFurlUnits:": {
        "prefix": "components.mast:GetCurrentFurlUnits",
        "body": "components.mast:GetCurrentFurlUnits()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mast:RemoveSailFurler:": {
        "prefix": "components.mast:RemoveSailFurler",
        "body": "components.mast:RemoveSailFurler(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mast:UnfurlSail:": {
        "prefix": "components.mast:UnfurlSail",
        "body": "components.mast:UnfurlSail()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.maxhealer:SetHealthAmount:": {
        "prefix": "components.maxhealer:SetHealthAmount",
        "body": "components.maxhealer:SetHealthAmount(${1:health})",
        "description": " ※Params: \n   (health)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.maxhealer:Heal:": {
        "prefix": "components.maxhealer:Heal",
        "body": "components.maxhealer:Heal(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.maxlightspawner:LoadPostPass:": {
        "prefix": "components.maxlightspawner:LoadPostPass",
        "body": "components.maxlightspawner:LoadPostPass(${1:newents},${2:savedata})",
        "description": " ※Params: \n   (newents)<>[] \n   (savedata)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.maxlightspawner:SpawnAllLights:": {
        "prefix": "components.maxlightspawner:SpawnAllLights",
        "body": "components.maxlightspawner:SpawnAllLights()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.maxlightspawner:SpawnLight:": {
        "prefix": "components.maxlightspawner:SpawnLight",
        "body": "components.maxlightspawner:SpawnLight(${1:location})",
        "description": " ※Params: \n   (location)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.maxlightspawner:OnSave:": {
        "prefix": "components.maxlightspawner:OnSave",
        "body": "components.maxlightspawner:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.maxlightspawner:OnLoad:": {
        "prefix": "components.maxlightspawner:OnLoad",
        "body": "components.maxlightspawner:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.maxwelltalker:SetSpeech:": {
        "prefix": "components.maxwelltalker:SetSpeech",
        "body": "components.maxwelltalker:SetSpeech(${1:speech})",
        "description": " ※Params: \n   (speech)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.maxwelltalker:DoTalk:": {
        "prefix": "components.maxwelltalker:DoTalk",
        "body": "components.maxwelltalker:DoTalk()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.maxwelltalker:Initialize:": {
        "prefix": "components.maxwelltalker:Initialize",
        "body": "components.maxwelltalker:Initialize()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.maxwelltalker:IsTalking:": {
        "prefix": "components.maxwelltalker:IsTalking",
        "body": "components.maxwelltalker:IsTalking()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.maxwelltalker:OnClick:": {
        "prefix": "components.maxwelltalker:OnClick",
        "body": "components.maxwelltalker:OnClick()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.maxwelltalker:StopTalking:": {
        "prefix": "components.maxwelltalker:StopTalking",
        "body": "components.maxwelltalker:StopTalking()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.maxwelltalker:OnCancel:": {
        "prefix": "components.maxwelltalker:OnCancel",
        "body": "components.maxwelltalker:OnCancel()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.maxwelltalker:OnRemoveFromEntity:": {
        "prefix": "components.maxwelltalker:OnRemoveFromEntity",
        "body": "components.maxwelltalker:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mermcandidate:ResetCalories:": {
        "prefix": "components.mermcandidate:ResetCalories",
        "body": "components.mermcandidate:ResetCalories()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mermcandidate:OnSave:": {
        "prefix": "components.mermcandidate:OnSave",
        "body": "components.mermcandidate:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mermcandidate:AddCalories:": {
        "prefix": "components.mermcandidate:AddCalories",
        "body": "components.mermcandidate:AddCalories(${1:food})",
        "description": " ※Params: \n   (food)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mermcandidate:ShouldTransform:": {
        "prefix": "components.mermcandidate:ShouldTransform",
        "body": "components.mermcandidate:ShouldTransform()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mermcandidate:OnLoad:": {
        "prefix": "components.mermcandidate:OnLoad",
        "body": "components.mermcandidate:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mermkingmanager:FindMermCandidate:": {
        "prefix": "components.mermkingmanager:FindMermCandidate",
        "body": "components.mermkingmanager:FindMermCandidate(${1:throne})",
        "description": " ※Params: \n   (throne)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mermkingmanager:OnThroneDestroyed:": {
        "prefix": "components.mermkingmanager:OnThroneDestroyed",
        "body": "components.mermkingmanager:OnThroneDestroyed(${1:throne})",
        "description": " ※Params: \n   (throne)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mermkingmanager:HasPauldronLocal:": {
        "prefix": "components.mermkingmanager:HasPauldronLocal",
        "body": "components.mermkingmanager:HasPauldronLocal()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mermkingmanager:HasKingLocal:": {
        "prefix": "components.mermkingmanager:HasKingLocal",
        "body": "components.mermkingmanager:HasKingLocal()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mermkingmanager:ShouldTransform:": {
        "prefix": "components.mermkingmanager:ShouldTransform",
        "body": "components.mermkingmanager:ShouldTransform(${1:merm})",
        "description": " ※Params: \n   (merm)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mermkingmanager:ShouldGoToThrone:": {
        "prefix": "components.mermkingmanager:ShouldGoToThrone",
        "body": "components.mermkingmanager:ShouldGoToThrone(${1:merm},${2:throne})",
        "description": " ※Params: \n   (merm)<>[] \n   (throne)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mermkingmanager:GetMainThrone:": {
        "prefix": "components.mermkingmanager:GetMainThrone",
        "body": "components.mermkingmanager:GetMainThrone()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mermkingmanager:CreateMermKing:": {
        "prefix": "components.mermkingmanager:CreateMermKing",
        "body": "components.mermkingmanager:CreateMermKing(${1:candidate},${2:throne})",
        "description": " ※Params: \n   (candidate)<>[] \n   (throne)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mermkingmanager:IsCandidateAtThrone:": {
        "prefix": "components.mermkingmanager:IsCandidateAtThrone",
        "body": "components.mermkingmanager:IsCandidateAtThrone(${1:candidate},${2:throne})",
        "description": " ※Params: \n   (candidate)<>[] \n   (throne)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mermkingmanager:HasKingAnywhere:": {
        "prefix": "components.mermkingmanager:HasKingAnywhere",
        "body": "components.mermkingmanager:HasKingAnywhere()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mermkingmanager:LoadPostPass:": {
        "prefix": "components.mermkingmanager:LoadPostPass",
        "body": "components.mermkingmanager:LoadPostPass(${1:newents},${2:savedata})",
        "description": " ※Params: \n   (newents)<>[] \n   (savedata)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mermkingmanager:HasTridentLocal:": {
        "prefix": "components.mermkingmanager:HasTridentLocal",
        "body": "components.mermkingmanager:HasTridentLocal()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mermkingmanager:IsThrone:": {
        "prefix": "components.mermkingmanager:IsThrone",
        "body": "components.mermkingmanager:IsThrone(${1:throne})",
        "description": " ※Params: \n   (throne)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mermkingmanager:IsThroneCandidate:": {
        "prefix": "components.mermkingmanager:IsThroneCandidate",
        "body": "components.mermkingmanager:IsThroneCandidate(${1:merm},${2:throne})",
        "description": " ※Params: \n   (merm)<>[] \n   (throne)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mermkingmanager:GetKing:": {
        "prefix": "components.mermkingmanager:GetKing",
        "body": "components.mermkingmanager:GetKing()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mermkingmanager:HasPauldronAnywhere:": {
        "prefix": "components.mermkingmanager:HasPauldronAnywhere",
        "body": "components.mermkingmanager:HasPauldronAnywhere()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mermkingmanager:HasCrownAnywhere:": {
        "prefix": "components.mermkingmanager:HasCrownAnywhere",
        "body": "components.mermkingmanager:HasCrownAnywhere()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mermkingmanager:GetCandidate:": {
        "prefix": "components.mermkingmanager:GetCandidate",
        "body": "components.mermkingmanager:GetCandidate(${1:throne})",
        "description": " ※Params: \n   (throne)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mermkingmanager:IsCandidate:": {
        "prefix": "components.mermkingmanager:IsCandidate",
        "body": "components.mermkingmanager:IsCandidate(${1:merm})",
        "description": " ※Params: \n   (merm)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mermkingmanager:HasCrownLocal:": {
        "prefix": "components.mermkingmanager:HasCrownLocal",
        "body": "components.mermkingmanager:HasCrownLocal()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mermkingmanager:HasTridentAnywhere:": {
        "prefix": "components.mermkingmanager:HasTridentAnywhere",
        "body": "components.mermkingmanager:HasTridentAnywhere()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mermkingmanager:IsThroneValid:": {
        "prefix": "components.mermkingmanager:IsThroneValid",
        "body": "components.mermkingmanager:IsThroneValid(${1:throne})",
        "description": " ※Params: \n   (throne)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mermkingmanager:HasKing:": {
        "prefix": "components.mermkingmanager:HasKing",
        "body": "components.mermkingmanager:HasKing()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mermkingmanager:OnSave:": {
        "prefix": "components.mermkingmanager:OnSave",
        "body": "components.mermkingmanager:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mermkingmanager:GetThrone:": {
        "prefix": "components.mermkingmanager:GetThrone",
        "body": "components.mermkingmanager:GetThrone(${1:merm})",
        "description": " ※Params: \n   (merm)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.meteorshower:StartCooldown:": {
        "prefix": "components.meteorshower:StartCooldown",
        "body": "components.meteorshower:StartCooldown()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.meteorshower:IsShowering:": {
        "prefix": "components.meteorshower:IsShowering",
        "body": "components.meteorshower:IsShowering()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.meteorshower:SpawnMeteor:": {
        "prefix": "components.meteorshower:SpawnMeteor",
        "body": "components.meteorshower:SpawnMeteor(${1:mod})",
        "description": " ※Params: \n   (mod)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.meteorshower:GetDebugString:": {
        "prefix": "components.meteorshower:GetDebugString",
        "body": "components.meteorshower:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.meteorshower:OnLoad:": {
        "prefix": "components.meteorshower:OnLoad",
        "body": "components.meteorshower:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.meteorshower:OnSave:": {
        "prefix": "components.meteorshower:OnSave",
        "body": "components.meteorshower:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.meteorshower:StartShower:": {
        "prefix": "components.meteorshower:StartShower",
        "body": "components.meteorshower:StartShower(${1:level})",
        "description": " ※Params: \n   (level)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.meteorshower:IsCoolingDown:": {
        "prefix": "components.meteorshower:IsCoolingDown",
        "body": "components.meteorshower:IsCoolingDown()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.meteorshower:StopShower:": {
        "prefix": "components.meteorshower:StopShower",
        "body": "components.meteorshower:StopShower()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.miasmawatcher:UpdateMiasmaWalkSpeed:": {
        "prefix": "components.miasmawatcher:UpdateMiasmaWalkSpeed",
        "body": "components.miasmawatcher:UpdateMiasmaWalkSpeed()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.miasmawatcher:IsInMiasma:": {
        "prefix": "components.miasmawatcher:IsInMiasma",
        "body": "components.miasmawatcher:IsInMiasma()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.miasmawatcher:OnRemoveFromEntity:": {
        "prefix": "components.miasmawatcher:OnRemoveFromEntity",
        "body": "components.miasmawatcher:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.miasmawatcher:AddMiasmaSource:": {
        "prefix": "components.miasmawatcher:AddMiasmaSource",
        "body": "components.miasmawatcher:AddMiasmaSource(${1:src})",
        "description": " ※Params: \n   (src)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.miasmawatcher:SetMiasmaSpeedMultiplier:": {
        "prefix": "components.miasmawatcher:SetMiasmaSpeedMultiplier",
        "body": "components.miasmawatcher:SetMiasmaSpeedMultiplier(${1:mult})",
        "description": " ※Params: \n   (mult)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.miasmawatcher:ToggleMiasma:": {
        "prefix": "components.miasmawatcher:ToggleMiasma",
        "body": "components.miasmawatcher:ToggleMiasma(${1:active})",
        "description": " ※Params: \n   (active)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.miasmawatcher:RemoveMiasmaSource:": {
        "prefix": "components.miasmawatcher:RemoveMiasmaSource",
        "body": "components.miasmawatcher:RemoveMiasmaSource(${1:src})",
        "description": " ※Params: \n   (src)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mightiness:SetPercent:": {
        "prefix": "components.mightiness:SetPercent",
        "body": "components.mightiness:SetPercent(${1:percent},${2:force_update},${3:delay_skin},${4:forcesound})",
        "description": " ※Params: \n   (percent)<>[] \n   (force_update)<>[] \n   (delay_skin)<>[] \n   (forcesound)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mightiness:GetSkinMode:": {
        "prefix": "components.mightiness:GetSkinMode",
        "body": "components.mightiness:GetSkinMode()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mightiness:OnHungerDelta:": {
        "prefix": "components.mightiness:OnHungerDelta",
        "body": "components.mightiness:OnHungerDelta(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mightiness:GetRateScale:": {
        "prefix": "components.mightiness:GetRateScale",
        "body": "components.mightiness:GetRateScale()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mightiness:SetRateScale:": {
        "prefix": "components.mightiness:SetRateScale",
        "body": "components.mightiness:SetRateScale(${1:ratescale})",
        "description": " ※Params: \n   (ratescale)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mightiness:BecomeState:": {
        "prefix": "components.mightiness:BecomeState",
        "body": "components.mightiness:BecomeState(${1:state},${2:silent},${3:delay_skin},${4:forcesound})",
        "description": " ※Params: \n   (state)<>[] \n   (silent)<>[] \n   (delay_skin)<>[] \n   (forcesound)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mightiness:OnLoad:": {
        "prefix": "components.mightiness:OnLoad",
        "body": "components.mightiness:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mightiness:UpdateSkinMode:": {
        "prefix": "components.mightiness:UpdateSkinMode",
        "body": "components.mightiness:UpdateSkinMode(${1:skin_data},${2:delay})",
        "description": " ※Params: \n   (skin_data)<>[] \n   (delay)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mightiness:IsNormal:": {
        "prefix": "components.mightiness:IsNormal",
        "body": "components.mightiness:IsNormal()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mightiness:LongUpdate:": {
        "prefix": "components.mightiness:LongUpdate",
        "body": "components.mightiness:LongUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mightiness:GetCurrent:": {
        "prefix": "components.mightiness:GetCurrent",
        "body": "components.mightiness:GetCurrent()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mightiness:SetRate:": {
        "prefix": "components.mightiness:SetRate",
        "body": "components.mightiness:SetRate(${1:rate})",
        "description": " ※Params: \n   (rate)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mightiness:DoDec:": {
        "prefix": "components.mightiness:DoDec",
        "body": "components.mightiness:DoDec(${1:dt},${2:ignore_damage})",
        "description": " ※Params: \n   (dt)<>[] \n   (ignore_damage)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mightiness:GetPercent:": {
        "prefix": "components.mightiness:GetPercent",
        "body": "components.mightiness:GetPercent()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mightiness:DoDelta:": {
        "prefix": "components.mightiness:DoDelta",
        "body": "components.mightiness:DoDelta(${1:delta},${2:force_update},${3:delay_skin},${4:forcesound},${5:fromgym})",
        "description": " ※Params: \n   (delta)<>[] \n   (force_update)<>[] \n   (delay_skin)<>[] \n   (forcesound)<>[] \n   (fromgym)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mightiness:OnSetInvincible:": {
        "prefix": "components.mightiness:OnSetInvincible",
        "body": "components.mightiness:OnSetInvincible(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mightiness:DelayDrain:": {
        "prefix": "components.mightiness:DelayDrain",
        "body": "components.mightiness:DelayDrain(${1:time})",
        "description": " ※Params: \n   (time)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mightiness:GetState:": {
        "prefix": "components.mightiness:GetState",
        "body": "components.mightiness:GetState()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mightiness:GetOverMax:": {
        "prefix": "components.mightiness:GetOverMax",
        "body": "components.mightiness:GetOverMax()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mightiness:IsWimpy:": {
        "prefix": "components.mightiness:IsWimpy",
        "body": "components.mightiness:IsWimpy()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mightiness:SetMax:": {
        "prefix": "components.mightiness:SetMax",
        "body": "components.mightiness:SetMax(${1:amount})",
        "description": " ※Params: \n   (amount)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mightiness:GetScale:": {
        "prefix": "components.mightiness:GetScale",
        "body": "components.mightiness:GetScale()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mightiness:IsPaused:": {
        "prefix": "components.mightiness:IsPaused",
        "body": "components.mightiness:IsPaused()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mightiness:CanTransform:": {
        "prefix": "components.mightiness:CanTransform",
        "body": "components.mightiness:CanTransform(${1:state})",
        "description": " ※Params: \n   (state)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mightiness:GetMax:": {
        "prefix": "components.mightiness:GetMax",
        "body": "components.mightiness:GetMax()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mightiness:GetDebugString:": {
        "prefix": "components.mightiness:GetDebugString",
        "body": "components.mightiness:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mightiness:Pause:": {
        "prefix": "components.mightiness:Pause",
        "body": "components.mightiness:Pause()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mightiness:IsMighty:": {
        "prefix": "components.mightiness:IsMighty",
        "body": "components.mightiness:IsMighty()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mightiness:SetOverMax:": {
        "prefix": "components.mightiness:SetOverMax",
        "body": "components.mightiness:SetOverMax(${1:amount})",
        "description": " ※Params: \n   (amount)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mightiness:OnSave:": {
        "prefix": "components.mightiness:OnSave",
        "body": "components.mightiness:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mightiness:Resume:": {
        "prefix": "components.mightiness:Resume",
        "body": "components.mightiness:Resume()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mightydumbbell:StopWorkout:": {
        "prefix": "components.mightydumbbell:StopWorkout",
        "body": "components.mightydumbbell:StopWorkout(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mightydumbbell:SetEfficiency:": {
        "prefix": "components.mightydumbbell:SetEfficiency",
        "body": "components.mightydumbbell:SetEfficiency(${1:wimpy},${2:normal},${3:mighty})",
        "description": " ※Params: \n   (wimpy)<>[] \n   (normal)<>[] \n   (mighty)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mightydumbbell:CheckEfficiency:": {
        "prefix": "components.mightydumbbell:CheckEfficiency",
        "body": "components.mightydumbbell:CheckEfficiency(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mightydumbbell:IsWorkingOut:": {
        "prefix": "components.mightydumbbell:IsWorkingOut",
        "body": "components.mightydumbbell:IsWorkingOut(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mightydumbbell:StartWorkout:": {
        "prefix": "components.mightydumbbell:StartWorkout",
        "body": "components.mightydumbbell:StartWorkout(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mightydumbbell:CheckAttackEfficiency:": {
        "prefix": "components.mightydumbbell:CheckAttackEfficiency",
        "body": "components.mightydumbbell:CheckAttackEfficiency(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mightydumbbell:DoWorkout:": {
        "prefix": "components.mightydumbbell:DoWorkout",
        "body": "components.mightydumbbell:DoWorkout(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mightydumbbell:DoAttackWorkout:": {
        "prefix": "components.mightydumbbell:DoAttackWorkout",
        "body": "components.mightydumbbell:DoAttackWorkout(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mightydumbbell:SetConsumption:": {
        "prefix": "components.mightydumbbell:SetConsumption",
        "body": "components.mightydumbbell:SetConsumption(${1:consumption})",
        "description": " ※Params: \n   (consumption)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mightydumbbell:CanWorkout:": {
        "prefix": "components.mightydumbbell:CanWorkout",
        "body": "components.mightydumbbell:CanWorkout(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mightygym:StopWorkout:": {
        "prefix": "components.mightygym:StopWorkout",
        "body": "components.mightygym:StopWorkout()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mightygym:CharacterExitGym:": {
        "prefix": "components.mightygym:CharacterExitGym",
        "body": "components.mightygym:CharacterExitGym(${1:player})",
        "description": " ※Params: \n   (player)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mightygym:CalculateMightiness:": {
        "prefix": "components.mightygym:CalculateMightiness",
        "body": "components.mightygym:CalculateMightiness(${1:perfect})",
        "description": " ※Params: \n   (perfect)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mightygym:UnloadWeight:": {
        "prefix": "components.mightygym:UnloadWeight",
        "body": "components.mightygym:UnloadWeight()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mightygym:StartWorkout:": {
        "prefix": "components.mightygym:StartWorkout",
        "body": "components.mightygym:StartWorkout(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mightygym:LoadWeight:": {
        "prefix": "components.mightygym:LoadWeight",
        "body": "components.mightygym:LoadWeight(${1:weight},${2:slot})",
        "description": " ※Params: \n   (weight)<>[] \n   (slot)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mightygym:SetLevelArt:": {
        "prefix": "components.mightygym:SetLevelArt",
        "body": "components.mightygym:SetLevelArt(${1:level},${2:target})",
        "description": " ※Params: \n   (level)<>[] \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mightygym:SetSkinModeOnGym:": {
        "prefix": "components.mightygym:SetSkinModeOnGym",
        "body": "components.mightygym:SetSkinModeOnGym(${1:doer},${2:skin_mode})",
        "description": " ※Params: \n   (doer)<>[] \n   (skin_mode)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mightygym:SwapWeight:": {
        "prefix": "components.mightygym:SwapWeight",
        "body": "components.mightygym:SwapWeight(${1:item},${2:swapitem})",
        "description": " ※Params: \n   (item)<>[] \n   (swapitem)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mightygym:CharacterEnterGym:": {
        "prefix": "components.mightygym:CharacterEnterGym",
        "body": "components.mightygym:CharacterEnterGym(${1:player})",
        "description": " ※Params: \n   (player)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mightygym:InUse:": {
        "prefix": "components.mightygym:InUse",
        "body": "components.mightygym:InUse()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mightygym:SetWeightSymbol:": {
        "prefix": "components.mightygym:SetWeightSymbol",
        "body": "components.mightygym:SetWeightSymbol(${1:weight},${2:slot})",
        "description": " ※Params: \n   (weight)<>[] \n   (slot)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mightygym:CalcWeight:": {
        "prefix": "components.mightygym:CalcWeight",
        "body": "components.mightygym:CalcWeight()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mightygym:CheckForWeight:": {
        "prefix": "components.mightygym:CheckForWeight",
        "body": "components.mightygym:CheckForWeight()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mightygym:CanWorkout:": {
        "prefix": "components.mightygym:CanWorkout",
        "body": "components.mightygym:CanWorkout(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.migrationpetowner:SetPetFn:": {
        "prefix": "components.migrationpetowner:SetPetFn",
        "body": "components.migrationpetowner:SetPetFn(${1:petfn})",
        "description": " ※Params: \n   (petfn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.migrationpetowner:GetPet:": {
        "prefix": "components.migrationpetowner:GetPet",
        "body": "components.migrationpetowner:GetPet()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mine:Explode:": {
        "prefix": "components.mine:Explode",
        "body": "components.mine:Explode(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mine:StartTesting:": {
        "prefix": "components.mine:StartTesting",
        "body": "components.mine:StartTesting()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mine:SetTestTimeFn:": {
        "prefix": "components.mine:SetTestTimeFn",
        "body": "components.mine:SetTestTimeFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mine:Reset:": {
        "prefix": "components.mine:Reset",
        "body": "components.mine:Reset()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mine:SetReusable:": {
        "prefix": "components.mine:SetReusable",
        "body": "components.mine:SetReusable(${1:reusable})",
        "description": " ※Params: \n   (reusable)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mine:Spring:": {
        "prefix": "components.mine:Spring",
        "body": "components.mine:Spring()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mine:SetOnExplodeFn:": {
        "prefix": "components.mine:SetOnExplodeFn",
        "body": "components.mine:SetOnExplodeFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mine:OnEntitySleep:": {
        "prefix": "components.mine:OnEntitySleep",
        "body": "components.mine:OnEntitySleep()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mine:OnRemoveFromEntity:": {
        "prefix": "components.mine:OnRemoveFromEntity",
        "body": "components.mine:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mine:SetOnSprungFn:": {
        "prefix": "components.mine:SetOnSprungFn",
        "body": "components.mine:SetOnSprungFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mine:SetOnDeactivateFn:": {
        "prefix": "components.mine:SetOnDeactivateFn",
        "body": "components.mine:SetOnDeactivateFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mine:Deactivate:": {
        "prefix": "components.mine:Deactivate",
        "body": "components.mine:Deactivate()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mine:SetOnResetFn:": {
        "prefix": "components.mine:SetOnResetFn",
        "body": "components.mine:SetOnResetFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mine:OnLoad:": {
        "prefix": "components.mine:OnLoad",
        "body": "components.mine:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mine:SetRadius:": {
        "prefix": "components.mine:SetRadius",
        "body": "components.mine:SetRadius(${1:radius})",
        "description": " ※Params: \n   (radius)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mine:StopTesting:": {
        "prefix": "components.mine:StopTesting",
        "body": "components.mine:StopTesting()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mine:OnEntityWake:": {
        "prefix": "components.mine:OnEntityWake",
        "body": "components.mine:OnEntityWake()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mine:GetTarget:": {
        "prefix": "components.mine:GetTarget",
        "body": "components.mine:GetTarget()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mine:OnSave:": {
        "prefix": "components.mine:OnSave",
        "body": "components.mine:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mine:SetAlignment:": {
        "prefix": "components.mine:SetAlignment",
        "body": "components.mine:SetAlignment(${1:alignment})",
        "description": " ※Params: \n   (alignment)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.minigame:Activate:": {
        "prefix": "components.minigame:Activate",
        "body": "components.minigame:Activate()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.minigame:SetOnDeactivatedFn:": {
        "prefix": "components.minigame:SetOnDeactivatedFn",
        "body": "components.minigame:SetOnDeactivatedFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.minigame:DoActivePulse:": {
        "prefix": "components.minigame:DoActivePulse",
        "body": "components.minigame:DoActivePulse()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.minigame:IsActive:": {
        "prefix": "components.minigame:IsActive",
        "body": "components.minigame:IsActive()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.minigame:TimeSinceLastExcitement:": {
        "prefix": "components.minigame:TimeSinceLastExcitement",
        "body": "components.minigame:TimeSinceLastExcitement()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.minigame:SetIsPlaying:": {
        "prefix": "components.minigame:SetIsPlaying",
        "body": "components.minigame:SetIsPlaying()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.minigame:AddParticipator:": {
        "prefix": "components.minigame:AddParticipator",
        "body": "components.minigame:AddParticipator(${1:participator},${2:notimeout})",
        "description": " ※Params: \n   (participator)<>[] \n   (notimeout)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.minigame:SetOnActivatedFn:": {
        "prefix": "components.minigame:SetOnActivatedFn",
        "body": "components.minigame:SetOnActivatedFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.minigame:OnRemoveFromEntity:": {
        "prefix": "components.minigame:OnRemoveFromEntity",
        "body": "components.minigame:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.minigame:IsExciting:": {
        "prefix": "components.minigame:IsExciting",
        "body": "components.minigame:IsExciting()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.minigame:Deactivate:": {
        "prefix": "components.minigame:Deactivate",
        "body": "components.minigame:Deactivate()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.minigame:GetIsPlaying:": {
        "prefix": "components.minigame:GetIsPlaying",
        "body": "components.minigame:GetIsPlaying()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.minigame:GetDebugString:": {
        "prefix": "components.minigame:GetDebugString",
        "body": "components.minigame:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.minigame:AddSpectator:": {
        "prefix": "components.minigame:AddSpectator",
        "body": "components.minigame:AddSpectator(${1:spectator})",
        "description": " ※Params: \n   (spectator)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.minigame:GetIsIntro:": {
        "prefix": "components.minigame:GetIsIntro",
        "body": "components.minigame:GetIsIntro()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.minigame:SetIsOutro:": {
        "prefix": "components.minigame:SetIsOutro",
        "body": "components.minigame:SetIsOutro()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.minigame:RecordExcitement:": {
        "prefix": "components.minigame:RecordExcitement",
        "body": "components.minigame:RecordExcitement()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.minigame:GetIsOutro:": {
        "prefix": "components.minigame:GetIsOutro",
        "body": "components.minigame:GetIsOutro()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.minigame:SetIsIntro:": {
        "prefix": "components.minigame:SetIsIntro",
        "body": "components.minigame:SetIsIntro()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.minionspawner:GetNextSpawnTime:": {
        "prefix": "components.minionspawner:GetNextSpawnTime",
        "body": "components.minionspawner:GetNextSpawnTime()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.minionspawner:SetSpawnInfo:": {
        "prefix": "components.minionspawner:SetSpawnInfo",
        "body": "components.minionspawner:SetSpawnInfo(${1:time})",
        "description": " ※Params: \n   (time)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.minionspawner:TakeOwnership:": {
        "prefix": "components.minionspawner:TakeOwnership",
        "body": "components.minionspawner:TakeOwnership(${1:minion})",
        "description": " ※Params: \n   (minion)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.minionspawner:OnLostMinion:": {
        "prefix": "components.minionspawner:OnLostMinion",
        "body": "components.minionspawner:OnLostMinion(${1:minion})",
        "description": " ※Params: \n   (minion)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.minionspawner:OnLoad:": {
        "prefix": "components.minionspawner:OnLoad",
        "body": "components.minionspawner:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.minionspawner:LoadPostPass:": {
        "prefix": "components.minionspawner:LoadPostPass",
        "body": "components.minionspawner:LoadPostPass(${1:newents},${2:savedata})",
        "description": " ※Params: \n   (newents)<>[] \n   (savedata)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.minionspawner:MakeMinion:": {
        "prefix": "components.minionspawner:MakeMinion",
        "body": "components.minionspawner:MakeMinion()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.minionspawner:ResumeSpawn:": {
        "prefix": "components.minionspawner:ResumeSpawn",
        "body": "components.minionspawner:ResumeSpawn(${1:time})",
        "description": " ※Params: \n   (time)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.minionspawner:SpawnNewMinion:": {
        "prefix": "components.minionspawner:SpawnNewMinion",
        "body": "components.minionspawner:SpawnNewMinion()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.minionspawner:RemovePosition:": {
        "prefix": "components.minionspawner:RemovePosition",
        "body": "components.minionspawner:RemovePosition(${1:num})",
        "description": " ※Params: \n   (num)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.minionspawner:GetSpawnLocation:": {
        "prefix": "components.minionspawner:GetSpawnLocation",
        "body": "components.minionspawner:GetSpawnLocation(${1:num})",
        "description": " ※Params: \n   (num)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.minionspawner:KillAllMinions:": {
        "prefix": "components.minionspawner:KillAllMinions",
        "body": "components.minionspawner:KillAllMinions()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.minionspawner:LongUpdate:": {
        "prefix": "components.minionspawner:LongUpdate",
        "body": "components.minionspawner:LongUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.minionspawner:GetDebugString:": {
        "prefix": "components.minionspawner:GetDebugString",
        "body": "components.minionspawner:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.minionspawner:StartNextSpawn:": {
        "prefix": "components.minionspawner:StartNextSpawn",
        "body": "components.minionspawner:StartNextSpawn()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.minionspawner:MaxedMinions:": {
        "prefix": "components.minionspawner:MaxedMinions",
        "body": "components.minionspawner:MaxedMinions()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.minionspawner:CheckTileCompatibility:": {
        "prefix": "components.minionspawner:CheckTileCompatibility",
        "body": "components.minionspawner:CheckTileCompatibility(${1:tile})",
        "description": " ※Params: \n   (tile)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.minionspawner:MakeSpawnLocations:": {
        "prefix": "components.minionspawner:MakeSpawnLocations",
        "body": "components.minionspawner:MakeSpawnLocations()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.minionspawner:AddPosition:": {
        "prefix": "components.minionspawner:AddPosition",
        "body": "components.minionspawner:AddPosition(${1:num},${2:tbl})",
        "description": " ※Params: \n   (num)<>[] \n   (tbl)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.moisture:SetPercent:": {
        "prefix": "components.moisture:SetPercent",
        "body": "components.moisture:SetPercent(${1:per})",
        "description": " ※Params: \n   (per)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.moisture:GetMaxMoisture:": {
        "prefix": "components.moisture:GetMaxMoisture",
        "body": "components.moisture:GetMaxMoisture()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.moisture:GetSegs:": {
        "prefix": "components.moisture:GetSegs",
        "body": "components.moisture:GetSegs()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.moisture:GetWaterproofInventory:": {
        "prefix": "components.moisture:GetWaterproofInventory",
        "body": "components.moisture:GetWaterproofInventory()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.moisture:AnnounceMoisture:": {
        "prefix": "components.moisture:AnnounceMoisture",
        "body": "components.moisture:AnnounceMoisture(${1:oldSegs},${2:newSegs})",
        "description": " ※Params: \n   (oldSegs)<>[] \n   (newSegs)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.moisture:IsForceDry:": {
        "prefix": "components.moisture:IsForceDry",
        "body": "components.moisture:IsForceDry()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.moisture:GetRate:": {
        "prefix": "components.moisture:GetRate",
        "body": "components.moisture:GetRate()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.moisture:GetMoisturePercent:": {
        "prefix": "components.moisture:GetMoisturePercent",
        "body": "components.moisture:GetMoisturePercent()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.moisture:GetSleepingBagDryingRate:": {
        "prefix": "components.moisture:GetSleepingBagDryingRate",
        "body": "components.moisture:GetSleepingBagDryingRate()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.moisture:GetWaterproofness:": {
        "prefix": "components.moisture:GetWaterproofness",
        "body": "components.moisture:GetWaterproofness()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.moisture:TransferComponent:": {
        "prefix": "components.moisture:TransferComponent",
        "body": "components.moisture:TransferComponent(${1:newinst})",
        "description": " ※Params: \n   (newinst)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.moisture:OnLoad:": {
        "prefix": "components.moisture:OnLoad",
        "body": "components.moisture:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.moisture:ForceDry:": {
        "prefix": "components.moisture:ForceDry",
        "body": "components.moisture:ForceDry(${1:force},${2:source})",
        "description": " ※Params: \n   (force)<>[] \n   (source)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.moisture:OnSave:": {
        "prefix": "components.moisture:OnSave",
        "body": "components.moisture:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.moisture:LongUpdate:": {
        "prefix": "components.moisture:LongUpdate",
        "body": "components.moisture:LongUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.moisture:SetWaterproofInventory:": {
        "prefix": "components.moisture:SetWaterproofInventory",
        "body": "components.moisture:SetWaterproofInventory(${1:waterproof})",
        "description": " ※Params: \n   (waterproof)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.moisture:IsWet:": {
        "prefix": "components.moisture:IsWet",
        "body": "components.moisture:IsWet()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.moisture:SetMoistureLevel:": {
        "prefix": "components.moisture:SetMoistureLevel",
        "body": "components.moisture:SetMoistureLevel(${1:num})",
        "description": " ※Params: \n   (num)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.moisture:GetRateBonus:": {
        "prefix": "components.moisture:GetRateBonus",
        "body": "components.moisture:GetRateBonus()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.moisture:RemoveRateBonus:": {
        "prefix": "components.moisture:RemoveRateBonus",
        "body": "components.moisture:RemoveRateBonus(${1:src},${2:key})",
        "description": " ※Params: \n   (src)<>[] \n   (key)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.moisture:AddRateBonus:": {
        "prefix": "components.moisture:AddRateBonus",
        "body": "components.moisture:AddRateBonus(${1:src},${2:bonus},${3:key})",
        "description": " ※Params: \n   (src)<>[] \n   (bonus)<>[] \n   (key)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.moisture:GetRateScale:": {
        "prefix": "components.moisture:GetRateScale",
        "body": "components.moisture:GetRateScale()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.moisture:SetInherentWaterproofness:": {
        "prefix": "components.moisture:SetInherentWaterproofness",
        "body": "components.moisture:SetInherentWaterproofness(${1:waterproofness})",
        "description": " ※Params: \n   (waterproofness)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.moisture:GetMoisture:": {
        "prefix": "components.moisture:GetMoisture",
        "body": "components.moisture:GetMoisture()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.moisture:GetDebugString:": {
        "prefix": "components.moisture:GetDebugString",
        "body": "components.moisture:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.moisture:GetEquippedMoistureRate:": {
        "prefix": "components.moisture:GetEquippedMoistureRate",
        "body": "components.moisture:GetEquippedMoistureRate(${1:dryingrate})",
        "description": " ※Params: \n   (dryingrate)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.moisture:DoDelta:": {
        "prefix": "components.moisture:DoDelta",
        "body": "components.moisture:DoDelta(${1:num},${2:no_announce})",
        "description": " ※Params: \n   (num)<>[] \n   (no_announce)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.moisture:GetMoistureRate:": {
        "prefix": "components.moisture:GetMoistureRate",
        "body": "components.moisture:GetMoistureRate()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.moisture:GetDryingRate:": {
        "prefix": "components.moisture:GetDryingRate",
        "body": "components.moisture:GetDryingRate(${1:moisturerate})",
        "description": " ※Params: \n   (moisturerate)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.moisture:OnUpdate:": {
        "prefix": "components.moisture:OnUpdate",
        "body": "components.moisture:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.moistureimmunity:RemoveSource_Internal:": {
        "prefix": "components.moistureimmunity:RemoveSource_Internal",
        "body": "components.moistureimmunity:RemoveSource_Internal(${1:src})",
        "description": " ※Params: \n   (src)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.moistureimmunity:RemoveSource:": {
        "prefix": "components.moistureimmunity:RemoveSource",
        "body": "components.moistureimmunity:RemoveSource(${1:src})",
        "description": " ※Params: \n   (src)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.moistureimmunity:AddSource:": {
        "prefix": "components.moistureimmunity:AddSource",
        "body": "components.moistureimmunity:AddSource(${1:src})",
        "description": " ※Params: \n   (src)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.moistureimmunity:OnRemoveFromEntity:": {
        "prefix": "components.moistureimmunity:OnRemoveFromEntity",
        "body": "components.moistureimmunity:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mood:SetInMoodFn:": {
        "prefix": "components.mood:SetInMoodFn",
        "body": "components.mood:SetInMoodFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mood:CheckForMoodChange:": {
        "prefix": "components.mood:CheckForMoodChange",
        "body": "components.mood:CheckForMoodChange()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mood:ResetMood:": {
        "prefix": "components.mood:ResetMood",
        "body": "components.mood:ResetMood()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mood:Enable:": {
        "prefix": "components.mood:Enable",
        "body": "components.mood:Enable(${1:enabled})",
        "description": " ※Params: \n   (enabled)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mood:OnLoad:": {
        "prefix": "components.mood:OnLoad",
        "body": "components.mood:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mood:SetMoodTimeInDays:": {
        "prefix": "components.mood:SetMoodTimeInDays",
        "body": "components.mood:SetMoodTimeInDays(${1:length},${2:wait},${3:forcemood},${4:worldsettingsmultiplier_inmood},${5:worldsettingsmultiplier_outmood},${6:worldsettingsenabled})",
        "description": " ※Params: \n   (length)<>[] \n   (wait)<>[] \n   (forcemood)<>[] \n   (worldsettingsmultiplier_inmood)<>[] \n   (worldsettingsmultiplier_outmood)<>[] \n   (worldsettingsenabled)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mood:GetDebugString:": {
        "prefix": "components.mood:GetDebugString",
        "body": "components.mood:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mood:IsInMood:": {
        "prefix": "components.mood:IsInMood",
        "body": "components.mood:IsInMood()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mood:SetLeaveMoodFn:": {
        "prefix": "components.mood:SetLeaveMoodFn",
        "body": "components.mood:SetLeaveMoodFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mood:SetMoodSeason:": {
        "prefix": "components.mood:SetMoodSeason",
        "body": "components.mood:SetMoodSeason(${1:activeseason})",
        "description": " ※Params: \n   (activeseason)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.mood:OnSave:": {
        "prefix": "components.mood:OnSave",
        "body": "components.mood:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.mood:ValidateMood:": {
        "prefix": "components.mood:ValidateMood",
        "body": "components.mood:ValidateMood()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.moonaltarlink:EstablishLink:": {
        "prefix": "components.moonaltarlink:EstablishLink",
        "body": "components.moonaltarlink:EstablishLink(${1:altars})",
        "description": " ※Params: \n   (altars)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.moonaltarlink:BreakLink:": {
        "prefix": "components.moonaltarlink:BreakLink",
        "body": "components.moonaltarlink:BreakLink()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.moonaltarlinktarget:TryEstablishLink:": {
        "prefix": "components.moonaltarlinktarget:TryEstablishLink",
        "body": "components.moonaltarlinktarget:TryEstablishLink()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.moonaltarlinktarget:CanBeLinked:": {
        "prefix": "components.moonaltarlinktarget:CanBeLinked",
        "body": "components.moonaltarlinktarget:CanBeLinked()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.moonaltarlinktarget:OnRemoveFromEntity:": {
        "prefix": "components.moonaltarlinktarget:OnRemoveFromEntity",
        "body": "components.moonaltarlinktarget:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.moonbeastspawner:Start:": {
        "prefix": "components.moonbeastspawner:Start",
        "body": "components.moonbeastspawner:Start()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.moonbeastspawner:ForcePetrify:": {
        "prefix": "components.moonbeastspawner:ForcePetrify",
        "body": "components.moonbeastspawner:ForcePetrify()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.moonbeastspawner:Stop:": {
        "prefix": "components.moonbeastspawner:Stop",
        "body": "components.moonbeastspawner:Stop()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.moonbeastspawner:OnRemoveFromEntity:": {
        "prefix": "components.moonbeastspawner:OnRemoveFromEntity",
        "body": "components.moonbeastspawner:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.moonstormlightningmanager:GetDebugString:": {
        "prefix": "components.moonstormlightningmanager:GetDebugString",
        "body": "components.moonstormlightningmanager:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.moonstormlightningmanager:OnUpdate:": {
        "prefix": "components.moonstormlightningmanager:OnUpdate",
        "body": "components.moonstormlightningmanager:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.moonstormwatcher:ToggleMoonstorms:": {
        "prefix": "components.moonstormwatcher:ToggleMoonstorms",
        "body": "components.moonstormwatcher:ToggleMoonstorms(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.moonstormwatcher:UpdateMoonstormWalkSpeed:": {
        "prefix": "components.moonstormwatcher:UpdateMoonstormWalkSpeed",
        "body": "components.moonstormwatcher:UpdateMoonstormWalkSpeed()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.moonstormwatcher:UpdateMoonstormLevel:": {
        "prefix": "components.moonstormwatcher:UpdateMoonstormLevel",
        "body": "components.moonstormwatcher:UpdateMoonstormLevel()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.moonstormwatcher:GetMoonStormLevel:": {
        "prefix": "components.moonstormwatcher:GetMoonStormLevel",
        "body": "components.moonstormwatcher:GetMoonStormLevel()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.moonstormwatcher:SetMoonstormSpeedMultiplier:": {
        "prefix": "components.moonstormwatcher:SetMoonstormSpeedMultiplier",
        "body": "components.moonstormwatcher:SetMoonstormSpeedMultiplier(${1:mult})",
        "description": " ※Params: \n   (mult)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.moonstormwatcher:UpdateMoonstormWalkSpeed_Internal:": {
        "prefix": "components.moonstormwatcher:UpdateMoonstormWalkSpeed_Internal",
        "body": "components.moonstormwatcher:UpdateMoonstormWalkSpeed_Internal(${1:level})",
        "description": " ※Params: \n   (level)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.moonstormwatcher:OnRemoveFromEntity:": {
        "prefix": "components.moonstormwatcher:OnRemoveFromEntity",
        "body": "components.moonstormwatcher:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.moontrader:AcceptOffering:": {
        "prefix": "components.moontrader:AcceptOffering",
        "body": "components.moontrader:AcceptOffering(${1:giver},${2:item})",
        "description": " ※Params: \n   (giver)<>[] \n   (item)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.moontrader:SetCanAcceptFn:": {
        "prefix": "components.moontrader:SetCanAcceptFn",
        "body": "components.moontrader:SetCanAcceptFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.moontrader:SetOnAcceptFn:": {
        "prefix": "components.moontrader:SetOnAcceptFn",
        "body": "components.moontrader:SetOnAcceptFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.murderable:OnRemoveFromEntity:": {
        "prefix": "components.murderable:OnRemoveFromEntity",
        "body": "components.murderable:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.named:OnLoad:": {
        "prefix": "components.named:OnLoad",
        "body": "components.named:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.named:OnSave:": {
        "prefix": "components.named:OnSave",
        "body": "components.named:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.named:PickNewName:": {
        "prefix": "components.named:PickNewName",
        "body": "components.named:PickNewName()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.named:SetName:": {
        "prefix": "components.named:SetName",
        "body": "components.named:SetName(${1:name},${2:author})",
        "description": " ※Params: \n   (name)<>[] \n   (author)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.nightlightmanager:FindClosestNightLightFromListToInst:": {
        "prefix": "components.nightlightmanager:FindClosestNightLightFromListToInst",
        "body": "components.nightlightmanager:FindClosestNightLightFromListToInst(${1:nightlights},${2:inst})",
        "description": " ※Params: \n   (nightlights)<>[] \n   (inst)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.nightlightmanager:OnRegisterNightLight:": {
        "prefix": "components.nightlightmanager:OnRegisterNightLight",
        "body": "components.nightlightmanager:OnRegisterNightLight(${1:nightlight})",
        "description": " ※Params: \n   (nightlight)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.nightlightmanager:UpdateNightLightPosition:": {
        "prefix": "components.nightlightmanager:UpdateNightLightPosition",
        "body": "components.nightlightmanager:UpdateNightLightPosition(${1:nightlight})",
        "description": " ※Params: \n   (nightlight)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.nightlightmanager:GetNightLightsWithFilter:": {
        "prefix": "components.nightlightmanager:GetNightLightsWithFilter",
        "body": "components.nightlightmanager:GetNightLightsWithFilter(${1:filterfn},${2:...})",
        "description": " ※Params: \n   (filterfn)<>[] \n   (...)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.nightlightmanager:IsNightLightDataInAnyTag:": {
        "prefix": "components.nightlightmanager:IsNightLightDataInAnyTag",
        "body": "components.nightlightmanager:IsNightLightDataInAnyTag(${1:nightlightdata},${2:tags})",
        "description": " ※Params: \n   (nightlightdata)<>[] \n   (tags)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.nightlightmanager:OnRemoveFromEntity:": {
        "prefix": "components.nightlightmanager:OnRemoveFromEntity",
        "body": "components.nightlightmanager:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.nis:Play:": {
        "prefix": "components.nis:Play",
        "body": "components.nis:Play(${1:lines})",
        "description": " ※Params: \n   (lines)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.nis:SetCancel:": {
        "prefix": "components.nis:SetCancel",
        "body": "components.nis:SetCancel(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.nis:Cancel:": {
        "prefix": "components.nis:Cancel",
        "body": "components.nis:Cancel()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.nis:SetScript:": {
        "prefix": "components.nis:SetScript",
        "body": "components.nis:SetScript(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.nis:SetName:": {
        "prefix": "components.nis:SetName",
        "body": "components.nis:SetName(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.nis:OnClick:": {
        "prefix": "components.nis:OnClick",
        "body": "components.nis:OnClick()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.nis:OnFinish:": {
        "prefix": "components.nis:OnFinish",
        "body": "components.nis:OnFinish()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.nis:SetInit:": {
        "prefix": "components.nis:SetInit",
        "body": "components.nis:SetInit(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.nis:OnRemoveEntity:": {
        "prefix": "components.nis:OnRemoveEntity",
        "body": "components.nis:OnRemoveEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.npc_talker:Chatter:": {
        "prefix": "components.npc_talker:Chatter",
        "body": "components.npc_talker:Chatter(${1:strtbl},${2:index},${3:chatpriority},${4:override},${5:stompable},${6:sound})",
        "description": " ※Params: \n   (strtbl)<>[] \n   (index)<>[] \n   (chatpriority)<>[] \n   (override)<>[] \n   (stompable)<>[] \n   (sound)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.npc_talker:donextline:": {
        "prefix": "components.npc_talker:donextline",
        "body": "components.npc_talker:donextline()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.npc_talker:Say:": {
        "prefix": "components.npc_talker:Say",
        "body": "components.npc_talker:Say(${1:lines},${2:override},${3:stompable},${4:sound})",
        "description": " ※Params: \n   (lines)<>[] \n   (override)<>[] \n   (stompable)<>[] \n   (sound)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.npc_talker:resetqueue:": {
        "prefix": "components.npc_talker:resetqueue",
        "body": "components.npc_talker:resetqueue()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.npc_talker:haslines:": {
        "prefix": "components.npc_talker:haslines",
        "body": "components.npc_talker:haslines()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.oar:RowFail:": {
        "prefix": "components.oar:RowFail",
        "body": "components.oar:RowFail(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.oar:Row:": {
        "prefix": "components.oar:Row",
        "body": "components.oar:Row(${1:doer},${2:pos})",
        "description": " ※Params: \n   (doer)<>[] \n   (pos)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.oasis:GetProximityLevel:": {
        "prefix": "components.oasis:GetProximityLevel",
        "body": "components.oasis:GetProximityLevel(${1:ent},${2:range})",
        "description": " ※Params: \n   (ent)<>[] \n   (range)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.oasis:IsEntityInOasis:": {
        "prefix": "components.oasis:IsEntityInOasis",
        "body": "components.oasis:IsEntityInOasis(${1:ent})",
        "description": " ※Params: \n   (ent)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.objectspawner:LoadPostPass:": {
        "prefix": "components.objectspawner:LoadPostPass",
        "body": "components.objectspawner:LoadPostPass(${1:newents},${2:data})",
        "description": " ※Params: \n   (newents)<>[] \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.objectspawner:TakeOwnership:": {
        "prefix": "components.objectspawner:TakeOwnership",
        "body": "components.objectspawner:TakeOwnership(${1:obj})",
        "description": " ※Params: \n   (obj)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.objectspawner:OnSave:": {
        "prefix": "components.objectspawner:OnSave",
        "body": "components.objectspawner:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.objectspawner:SpawnObject:": {
        "prefix": "components.objectspawner:SpawnObject",
        "body": "components.objectspawner:SpawnObject(${1:obj},${2:linked_skinname},${3:skin_id})",
        "description": " ※Params: \n   (obj)<>[] \n   (linked_skinname)<>[] \n   (skin_id)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.occupiable:OnLoad:": {
        "prefix": "components.occupiable:OnLoad",
        "body": "components.occupiable:OnLoad(${1:data},${2:newents})",
        "description": " ※Params: \n   (data)<>[] \n   (newents)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.occupiable:CanOccupy:": {
        "prefix": "components.occupiable:CanOccupy",
        "body": "components.occupiable:CanOccupy(${1:occupier})",
        "description": " ※Params: \n   (occupier)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.occupiable:Occupy:": {
        "prefix": "components.occupiable:Occupy",
        "body": "components.occupiable:Occupy(${1:occupier})",
        "description": " ※Params: \n   (occupier)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.occupiable:IsOccupied:": {
        "prefix": "components.occupiable:IsOccupied",
        "body": "components.occupiable:IsOccupied()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.occupiable:GetOccupant:": {
        "prefix": "components.occupiable:GetOccupant",
        "body": "components.occupiable:GetOccupant()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.occupiable:Harvest:": {
        "prefix": "components.occupiable:Harvest",
        "body": "components.occupiable:Harvest()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.occupiable:OnSave:": {
        "prefix": "components.occupiable:OnSave",
        "body": "components.occupiable:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.occupiable:OnRemoveFromEntity:": {
        "prefix": "components.occupiable:OnRemoveFromEntity",
        "body": "components.occupiable:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.occupier:GetOwner:": {
        "prefix": "components.occupier:GetOwner",
        "body": "components.occupier:GetOwner()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.occupier:SetOwner:": {
        "prefix": "components.occupier:SetOwner",
        "body": "components.occupier:SetOwner(${1:owner})",
        "description": " ※Params: \n   (owner)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.ocean:GetCurrentSpeed:": {
        "prefix": "components.ocean:GetCurrentSpeed",
        "body": "components.ocean:GetCurrentSpeed()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.ocean:GetCurrentVec3:": {
        "prefix": "components.ocean:GetCurrentVec3",
        "body": "components.ocean:GetCurrentVec3()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.ocean:GetCurrentAngle:": {
        "prefix": "components.ocean:GetCurrentAngle",
        "body": "components.ocean:GetCurrentAngle()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.oceancolor:Initialize:": {
        "prefix": "components.oceancolor:Initialize",
        "body": "components.oceancolor:Initialize(${1:has_ocean})",
        "description": " ※Params: \n   (has_ocean)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.oceancolor:OnPostInit:": {
        "prefix": "components.oceancolor:OnPostInit",
        "body": "components.oceancolor:OnPostInit()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.oceancolor:OnPhaseChanged:": {
        "prefix": "components.oceancolor:OnPhaseChanged",
        "body": "components.oceancolor:OnPhaseChanged(${1:src},${2:phase})",
        "description": " ※Params: \n   (src)<>[] \n   (phase)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.oceancolor:OnWallUpdate:": {
        "prefix": "components.oceancolor:OnWallUpdate",
        "body": "components.oceancolor:OnWallUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishable:IsStruggling:": {
        "prefix": "components.oceanfishable:IsStruggling",
        "body": "components.oceanfishable:IsStruggling()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishable:ResetStruggling:": {
        "prefix": "components.oceanfishable:ResetStruggling",
        "body": "components.oceanfishable:ResetStruggling()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishable:GetRod:": {
        "prefix": "components.oceanfishable:GetRod",
        "body": "components.oceanfishable:GetRod()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishable:OnReelingInPst:": {
        "prefix": "components.oceanfishable:OnReelingInPst",
        "body": "components.oceanfishable:OnReelingInPst(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishable:MakeProjectile:": {
        "prefix": "components.oceanfishable:MakeProjectile",
        "body": "components.oceanfishable:MakeProjectile()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishable:CalcLineUnreelRate:": {
        "prefix": "components.oceanfishable:CalcLineUnreelRate",
        "body": "components.oceanfishable:CalcLineUnreelRate(${1:rod})",
        "description": " ※Params: \n   (rod)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishable:OnRemoveFromEntity:": {
        "prefix": "components.oceanfishable:OnRemoveFromEntity",
        "body": "components.oceanfishable:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishable:OnReelingIn:": {
        "prefix": "components.oceanfishable:OnReelingIn",
        "body": "components.oceanfishable:OnReelingIn(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishable:StrugglingSetup:": {
        "prefix": "components.oceanfishable:StrugglingSetup",
        "body": "components.oceanfishable:StrugglingSetup(${1:walk_speed},${2:run_speed},${3:stamina_def})",
        "description": " ※Params: \n   (walk_speed)<>[] \n   (run_speed)<>[] \n   (stamina_def)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishable:UpdateRunSpeed:": {
        "prefix": "components.oceanfishable:UpdateRunSpeed",
        "body": "components.oceanfishable:UpdateRunSpeed()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishable:WasEatenByA:": {
        "prefix": "components.oceanfishable:WasEatenByA",
        "body": "components.oceanfishable:WasEatenByA(${1:tunafish})",
        "description": " ※Params: \n   (tunafish)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishable:UpdateStruggleState:": {
        "prefix": "components.oceanfishable:UpdateStruggleState",
        "body": "components.oceanfishable:UpdateStruggleState()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishable:GetDebugString:": {
        "prefix": "components.oceanfishable:GetDebugString",
        "body": "components.oceanfishable:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishable:SetRod:": {
        "prefix": "components.oceanfishable:SetRod",
        "body": "components.oceanfishable:SetRod(${1:rod})",
        "description": " ※Params: \n   (rod)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishable:CalcStruggleDuration:": {
        "prefix": "components.oceanfishable:CalcStruggleDuration",
        "body": "components.oceanfishable:CalcStruggleDuration()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishable:CalcStaminaDrainRate:": {
        "prefix": "components.oceanfishable:CalcStaminaDrainRate",
        "body": "components.oceanfishable:CalcStaminaDrainRate()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishable:OnUpdate:": {
        "prefix": "components.oceanfishable:OnUpdate",
        "body": "components.oceanfishable:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishinghook:ClearLostInterestList:": {
        "prefix": "components.oceanfishinghook:ClearLostInterestList",
        "body": "components.oceanfishinghook:ClearLostInterestList()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishinghook:_ClacCharm:": {
        "prefix": "components.oceanfishinghook:_ClacCharm",
        "body": "components.oceanfishinghook:_ClacCharm(${1:fish})",
        "description": " ※Params: \n   (fish)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishinghook:OnWallUpdate:": {
        "prefix": "components.oceanfishinghook:OnWallUpdate",
        "body": "components.oceanfishinghook:OnWallUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishinghook:SetLureData:": {
        "prefix": "components.oceanfishinghook:SetLureData",
        "body": "components.oceanfishinghook:SetLureData(${1:lure_data},${2:lure_fns})",
        "description": " ※Params: \n   (lure_data)<>[] \n   (lure_fns)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishinghook:HasLostInterest:": {
        "prefix": "components.oceanfishinghook:HasLostInterest",
        "body": "components.oceanfishinghook:HasLostInterest(${1:fish})",
        "description": " ※Params: \n   (fish)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishinghook:TestInterest:": {
        "prefix": "components.oceanfishinghook:TestInterest",
        "body": "components.oceanfishinghook:TestInterest(${1:fish})",
        "description": " ※Params: \n   (fish)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishinghook:GetDebugString:": {
        "prefix": "components.oceanfishinghook:GetDebugString",
        "body": "components.oceanfishinghook:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishinghook:OnUpdate:": {
        "prefix": "components.oceanfishinghook:OnUpdate",
        "body": "components.oceanfishinghook:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishinghook:UpdateInterestForFishable:": {
        "prefix": "components.oceanfishinghook:UpdateInterestForFishable",
        "body": "components.oceanfishinghook:UpdateInterestForFishable(${1:fish})",
        "description": " ※Params: \n   (fish)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishinghook:SetLostInterest:": {
        "prefix": "components.oceanfishinghook:SetLostInterest",
        "body": "components.oceanfishinghook:SetLostInterest(${1:fish})",
        "description": " ※Params: \n   (fish)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishinghook:OnRemoveFromEntity:": {
        "prefix": "components.oceanfishinghook:OnRemoveFromEntity",
        "body": "components.oceanfishinghook:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishingrod:IsLineTensionGood:": {
        "prefix": "components.oceanfishingrod:IsLineTensionGood",
        "body": "components.oceanfishingrod:IsLineTensionGood()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishingrod:CalcCatchDest:": {
        "prefix": "components.oceanfishingrod:CalcCatchDest",
        "body": "components.oceanfishingrod:CalcCatchDest(${1:src_pos},${2:dest_pos},${3:catch_dist})",
        "description": " ※Params: \n   (src_pos)<>[] \n   (dest_pos)<>[] \n   (catch_dist)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishingrod:Reel:": {
        "prefix": "components.oceanfishingrod:Reel",
        "body": "components.oceanfishingrod:Reel()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishingrod:_CacheTackleData:": {
        "prefix": "components.oceanfishingrod:_CacheTackleData",
        "body": "components.oceanfishingrod:_CacheTackleData(${1:bobber},${2:lure})",
        "description": " ※Params: \n   (bobber)<>[] \n   (lure)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishingrod:_LaunchFishProjectile:": {
        "prefix": "components.oceanfishingrod:_LaunchFishProjectile",
        "body": "components.oceanfishingrod:_LaunchFishProjectile(${1:projectile},${2:srcpos},${3:targetpos})",
        "description": " ※Params: \n   (projectile)<>[] \n   (srcpos)<>[] \n   (targetpos)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishingrod:Cast:": {
        "prefix": "components.oceanfishingrod:Cast",
        "body": "components.oceanfishingrod:Cast(${1:fisher},${2:targetpos})",
        "description": " ※Params: \n   (fisher)<>[] \n   (targetpos)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishingrod:SetTarget:": {
        "prefix": "components.oceanfishingrod:SetTarget",
        "body": "components.oceanfishingrod:SetTarget(${1:new_target})",
        "description": " ※Params: \n   (new_target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishingrod:GetLureFunctions:": {
        "prefix": "components.oceanfishingrod:GetLureFunctions",
        "body": "components.oceanfishingrod:GetLureFunctions()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishingrod:SetDefaults:": {
        "prefix": "components.oceanfishingrod:SetDefaults",
        "body": "components.oceanfishingrod:SetDefaults(${1:default_projectile_prefab},${2:default_casting_tuning},${3:default_lure_tuning},${4:default_lure_setup})",
        "description": " ※Params: \n   (default_projectile_prefab)<>[] \n   (default_casting_tuning)<>[] \n   (default_lure_tuning)<>[] \n   (default_lure_setup)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishingrod:GetLureData:": {
        "prefix": "components.oceanfishingrod:GetLureData",
        "body": "components.oceanfishingrod:GetLureData()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishingrod:UpdateClientMaxCastDistance:": {
        "prefix": "components.oceanfishingrod:UpdateClientMaxCastDistance",
        "body": "components.oceanfishingrod:UpdateClientMaxCastDistance()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishingrod:UpdateTensionRating:": {
        "prefix": "components.oceanfishingrod:UpdateTensionRating",
        "body": "components.oceanfishingrod:UpdateTensionRating()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishingrod:CatchFish:": {
        "prefix": "components.oceanfishingrod:CatchFish",
        "body": "components.oceanfishingrod:CatchFish()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishingrod:GetExtraStaminaDrain:": {
        "prefix": "components.oceanfishingrod:GetExtraStaminaDrain",
        "body": "components.oceanfishingrod:GetExtraStaminaDrain()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishingrod:StopFishing:": {
        "prefix": "components.oceanfishingrod:StopFishing",
        "body": "components.oceanfishingrod:StopFishing(${1:reason},${2:lost_tackle})",
        "description": " ※Params: \n   (reason)<>[] \n   (lost_tackle)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishingrod:OnUpdate:": {
        "prefix": "components.oceanfishingrod:OnUpdate",
        "body": "components.oceanfishingrod:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishingrod:GetDebugString:": {
        "prefix": "components.oceanfishingrod:GetDebugString",
        "body": "components.oceanfishingrod:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishingrod:IsLineTensionLow:": {
        "prefix": "components.oceanfishingrod:IsLineTensionLow",
        "body": "components.oceanfishingrod:IsLineTensionLow()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishingrod:IsLineTensionHigh:": {
        "prefix": "components.oceanfishingrod:IsLineTensionHigh",
        "body": "components.oceanfishingrod:IsLineTensionHigh()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishingrod:GetTensionRating:": {
        "prefix": "components.oceanfishingrod:GetTensionRating",
        "body": "components.oceanfishingrod:GetTensionRating()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishingrod:_CalcCastDest:": {
        "prefix": "components.oceanfishingrod:_CalcCastDest",
        "body": "components.oceanfishingrod:_CalcCastDest(${1:src_pos},${2:dest_pos})",
        "description": " ※Params: \n   (src_pos)<>[] \n   (dest_pos)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishingrod:_LaunchCastingProjectile:": {
        "prefix": "components.oceanfishingrod:_LaunchCastingProjectile",
        "body": "components.oceanfishingrod:_LaunchCastingProjectile(${1:source},${2:targetpos},${3:prefab})",
        "description": " ※Params: \n   (source)<>[] \n   (targetpos)<>[] \n   (prefab)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishingtackle:SetCastingData:": {
        "prefix": "components.oceanfishingtackle:SetCastingData",
        "body": "components.oceanfishingtackle:SetCastingData(${1:data},${2:projectile_prefab})",
        "description": " ※Params: \n   (data)<>[] \n   (projectile_prefab)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishingtackle:IsSingleUse:": {
        "prefix": "components.oceanfishingtackle:IsSingleUse",
        "body": "components.oceanfishingtackle:IsSingleUse()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.oceanfishingtackle:SetupLure:": {
        "prefix": "components.oceanfishingtackle:SetupLure",
        "body": "components.oceanfishingtackle:SetupLure(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.oceanthrowable:SetOnAddProjectileFn:": {
        "prefix": "components.oceanthrowable:SetOnAddProjectileFn",
        "body": "components.oceanthrowable:SetOnAddProjectileFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.oceanthrowable:AddProjectile:": {
        "prefix": "components.oceanthrowable:AddProjectile",
        "body": "components.oceanthrowable:AddProjectile()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.oceantrawler:Reset:": {
        "prefix": "components.oceantrawler:Reset",
        "body": "components.oceantrawler:Reset()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.oceantrawler:LoadPostPass:": {
        "prefix": "components.oceantrawler:LoadPostPass",
        "body": "components.oceantrawler:LoadPostPass()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.oceantrawler:StartUpdate:": {
        "prefix": "components.oceantrawler:StartUpdate",
        "body": "components.oceantrawler:StartUpdate()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.oceantrawler:IsLowered:": {
        "prefix": "components.oceantrawler:IsLowered",
        "body": "components.oceantrawler:IsLowered()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.oceantrawler:GetOceanTrawlerSpawnChanceModifier:": {
        "prefix": "components.oceantrawler:GetOceanTrawlerSpawnChanceModifier",
        "body": "components.oceantrawler:GetOceanTrawlerSpawnChanceModifier(${1:spawnpoint})",
        "description": " ※Params: \n   (spawnpoint)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.oceantrawler:OnEntitySleep:": {
        "prefix": "components.oceantrawler:OnEntitySleep",
        "body": "components.oceantrawler:OnEntitySleep()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.oceantrawler:GetBait:": {
        "prefix": "components.oceantrawler:GetBait",
        "body": "components.oceantrawler:GetBait(${1:eater})",
        "description": " ※Params: \n   (eater)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.oceantrawler:Fix:": {
        "prefix": "components.oceantrawler:Fix",
        "body": "components.oceantrawler:Fix()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.oceantrawler:OnLoad:": {
        "prefix": "components.oceantrawler:OnLoad",
        "body": "components.oceantrawler:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.oceantrawler:OnEntityWake:": {
        "prefix": "components.oceantrawler:OnEntityWake",
        "body": "components.oceantrawler:OnEntityWake()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.oceantrawler:SimulateCatchFish:": {
        "prefix": "components.oceantrawler:SimulateCatchFish",
        "body": "components.oceantrawler:SimulateCatchFish()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.oceantrawler:HasCaughtItem:": {
        "prefix": "components.oceantrawler:HasCaughtItem",
        "body": "components.oceantrawler:HasCaughtItem()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.oceantrawler:Lower:": {
        "prefix": "components.oceantrawler:Lower",
        "body": "components.oceantrawler:Lower()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.oceantrawler:CheckForMalbatross:": {
        "prefix": "components.oceantrawler:CheckForMalbatross",
        "body": "components.oceantrawler:CheckForMalbatross()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.oceantrawler:Raise:": {
        "prefix": "components.oceantrawler:Raise",
        "body": "components.oceantrawler:Raise()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.oceantrawler:StopUpdating:": {
        "prefix": "components.oceantrawler:StopUpdating",
        "body": "components.oceantrawler:StopUpdating()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.oceantrawler:ReleaseOverflowFish:": {
        "prefix": "components.oceantrawler:ReleaseOverflowFish",
        "body": "components.oceantrawler:ReleaseOverflowFish()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.oceantrawler:HasFishEscaped:": {
        "prefix": "components.oceantrawler:HasFishEscaped",
        "body": "components.oceantrawler:HasFishEscaped()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.oceantrawler:OnSave:": {
        "prefix": "components.oceantrawler:OnSave",
        "body": "components.oceantrawler:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.oceantrawler:OnUpdate:": {
        "prefix": "components.oceantrawler:OnUpdate",
        "body": "components.oceantrawler:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.oldager:GetDebugString:": {
        "prefix": "components.oldager:GetDebugString",
        "body": "components.oldager:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.oldager:GetCurrentYearPercent:": {
        "prefix": "components.oldager:GetCurrentYearPercent",
        "body": "components.oldager:GetCurrentYearPercent()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.oldager:LongUpdate:": {
        "prefix": "components.oldager:LongUpdate",
        "body": "components.oldager:LongUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.oldager:StopDamageOverTime:": {
        "prefix": "components.oldager:StopDamageOverTime",
        "body": "components.oldager:StopDamageOverTime()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.oldager:AddValidHealingCause:": {
        "prefix": "components.oldager:AddValidHealingCause",
        "body": "components.oldager:AddValidHealingCause(${1:cause_name})",
        "description": " ※Params: \n   (cause_name)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.oldager:OnTakeDamage:": {
        "prefix": "components.oldager:OnTakeDamage",
        "body": "components.oldager:OnTakeDamage(${1:amount},${2:overtime},${3:cause},${4:ignore_invincible},${5:afflicter},${6:ignore_absorb})",
        "description": " ※Params: \n   (amount)<>[] \n   (overtime)<>[] \n   (cause)<>[] \n   (ignore_invincible)<>[] \n   (afflicter)<>[] \n   (ignore_absorb)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.oldager:OnUpdate:": {
        "prefix": "components.oldager:OnUpdate",
        "body": "components.oldager:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.papereraser:DoErase:": {
        "prefix": "components.papereraser:DoErase",
        "body": "components.papereraser:DoErase(${1:paper},${2:doer})",
        "description": " ※Params: \n   (paper)<>[] \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.papereraser:OnRemoveFromEntity:": {
        "prefix": "components.papereraser:OnRemoveFromEntity",
        "body": "components.papereraser:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.parryweapon:SetOnPreParryFn:": {
        "prefix": "components.parryweapon:SetOnPreParryFn",
        "body": "components.parryweapon:SetOnPreParryFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.parryweapon:TryParry:": {
        "prefix": "components.parryweapon:TryParry",
        "body": "components.parryweapon:TryParry(${1:doer},${2:attacker},${3:damage},${4:weapon},${5:stimuli})",
        "description": " ※Params: \n   (doer)<>[] \n   (attacker)<>[] \n   (damage)<>[] \n   (weapon)<>[] \n   (stimuli)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.parryweapon:OnPreParry:": {
        "prefix": "components.parryweapon:OnPreParry",
        "body": "components.parryweapon:OnPreParry(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.parryweapon:EnterParryState:": {
        "prefix": "components.parryweapon:EnterParryState",
        "body": "components.parryweapon:EnterParryState(${1:doer},${2:rot},${3:duration})",
        "description": " ※Params: \n   (doer)<>[] \n   (rot)<>[] \n   (duration)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.parryweapon:SetOnParryFn:": {
        "prefix": "components.parryweapon:SetOnParryFn",
        "body": "components.parryweapon:SetOnParryFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.parryweapon:SetParryArc:": {
        "prefix": "components.parryweapon:SetParryArc",
        "body": "components.parryweapon:SetParryArc(${1:arc})",
        "description": " ※Params: \n   (arc)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.parryweapon:OnRemoveFromEntity:": {
        "prefix": "components.parryweapon:OnRemoveFromEntity",
        "body": "components.parryweapon:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.periodicspawner:SetDensityInRange:": {
        "prefix": "components.periodicspawner:SetDensityInRange",
        "body": "components.periodicspawner:SetDensityInRange(${1:range},${2:density})",
        "description": " ※Params: \n   (range)<>[] \n   (density)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.periodicspawner:Start:": {
        "prefix": "components.periodicspawner:Start",
        "body": "components.periodicspawner:Start(${1:timeoverride})",
        "description": " ※Params: \n   (timeoverride)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.periodicspawner:Stop:": {
        "prefix": "components.periodicspawner:Stop",
        "body": "components.periodicspawner:Stop()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.periodicspawner:OnLoad:": {
        "prefix": "components.periodicspawner:OnLoad",
        "body": "components.periodicspawner:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.periodicspawner:SetSpawnTestFn:": {
        "prefix": "components.periodicspawner:SetSpawnTestFn",
        "body": "components.periodicspawner:SetSpawnTestFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.periodicspawner:SetGetSpawnPointFn:": {
        "prefix": "components.periodicspawner:SetGetSpawnPointFn",
        "body": "components.periodicspawner:SetGetSpawnPointFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.periodicspawner:SetOnSpawnFn:": {
        "prefix": "components.periodicspawner:SetOnSpawnFn",
        "body": "components.periodicspawner:SetOnSpawnFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.periodicspawner:SetIgnoreFlotsamGenerator:": {
        "prefix": "components.periodicspawner:SetIgnoreFlotsamGenerator",
        "body": "components.periodicspawner:SetIgnoreFlotsamGenerator(${1:ignores})",
        "description": " ※Params: \n   (ignores)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.periodicspawner:SetOnlySpawnOffscreen:": {
        "prefix": "components.periodicspawner:SetOnlySpawnOffscreen",
        "body": "components.periodicspawner:SetOnlySpawnOffscreen(${1:offscreen})",
        "description": " ※Params: \n   (offscreen)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.periodicspawner:LongUpdate:": {
        "prefix": "components.periodicspawner:LongUpdate",
        "body": "components.periodicspawner:LongUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.periodicspawner:OnSave:": {
        "prefix": "components.periodicspawner:OnSave",
        "body": "components.periodicspawner:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.periodicspawner:GetDebugString:": {
        "prefix": "components.periodicspawner:GetDebugString",
        "body": "components.periodicspawner:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.periodicspawner:SetRandomTimes:": {
        "prefix": "components.periodicspawner:SetRandomTimes",
        "body": "components.periodicspawner:SetRandomTimes(${1:basetime},${2:variance},${3:no_reset})",
        "description": " ※Params: \n   (basetime)<>[] \n   (variance)<>[] \n   (no_reset)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.periodicspawner:SafeStart:": {
        "prefix": "components.periodicspawner:SafeStart",
        "body": "components.periodicspawner:SafeStart(${1:timeoverride})",
        "description": " ※Params: \n   (timeoverride)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.periodicspawner:TrySpawn:": {
        "prefix": "components.periodicspawner:TrySpawn",
        "body": "components.periodicspawner:TrySpawn(${1:prefab})",
        "description": " ※Params: \n   (prefab)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.periodicspawner:DoSpawn:": {
        "prefix": "components.periodicspawner:DoSpawn",
        "body": "components.periodicspawner:DoSpawn()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.periodicspawner:SetMinimumSpacing:": {
        "prefix": "components.periodicspawner:SetMinimumSpacing",
        "body": "components.periodicspawner:SetMinimumSpacing(${1:spacing})",
        "description": " ※Params: \n   (spacing)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.perishable:SetPercent:": {
        "prefix": "components.perishable:SetPercent",
        "body": "components.perishable:SetPercent(${1:percent})",
        "description": " ※Params: \n   (percent)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.perishable:SetPerishTime:": {
        "prefix": "components.perishable:SetPerishTime",
        "body": "components.perishable:SetPerishTime(${1:time})",
        "description": " ※Params: \n   (time)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.perishable:IsPerishing:": {
        "prefix": "components.perishable:IsPerishing",
        "body": "components.perishable:IsPerishing()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.perishable:OnLoad:": {
        "prefix": "components.perishable:OnLoad",
        "body": "components.perishable:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.perishable:LongUpdate:": {
        "prefix": "components.perishable:LongUpdate",
        "body": "components.perishable:LongUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.perishable:StopPerishing:": {
        "prefix": "components.perishable:StopPerishing",
        "body": "components.perishable:StopPerishing()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.perishable:IsStale:": {
        "prefix": "components.perishable:IsStale",
        "body": "components.perishable:IsStale()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.perishable:OnRemoveFromEntity:": {
        "prefix": "components.perishable:OnRemoveFromEntity",
        "body": "components.perishable:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.perishable:AddTime:": {
        "prefix": "components.perishable:AddTime",
        "body": "components.perishable:AddTime(${1:time})",
        "description": " ※Params: \n   (time)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.perishable:Perish:": {
        "prefix": "components.perishable:Perish",
        "body": "components.perishable:Perish()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.perishable:GetLocalMultiplier:": {
        "prefix": "components.perishable:GetLocalMultiplier",
        "body": "components.perishable:GetLocalMultiplier()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.perishable:GetPercent:": {
        "prefix": "components.perishable:GetPercent",
        "body": "components.perishable:GetPercent()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.perishable:IsSpoiled:": {
        "prefix": "components.perishable:IsSpoiled",
        "body": "components.perishable:IsSpoiled()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.perishable:OnRemoveEntity:": {
        "prefix": "components.perishable:OnRemoveEntity",
        "body": "components.perishable:OnRemoveEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.perishable:IsFresh:": {
        "prefix": "components.perishable:IsFresh",
        "body": "components.perishable:IsFresh()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.perishable:SetNewMaxPerishTime:": {
        "prefix": "components.perishable:SetNewMaxPerishTime",
        "body": "components.perishable:SetNewMaxPerishTime(${1:newtime})",
        "description": " ※Params: \n   (newtime)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.perishable:Dilute:": {
        "prefix": "components.perishable:Dilute",
        "body": "components.perishable:Dilute(${1:number},${2:timeleft})",
        "description": " ※Params: \n   (number)<>[] \n   (timeleft)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.perishable:GetDebugString:": {
        "prefix": "components.perishable:GetDebugString",
        "body": "components.perishable:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.perishable:SetLocalMultiplier:": {
        "prefix": "components.perishable:SetLocalMultiplier",
        "body": "components.perishable:SetLocalMultiplier(${1:newMult})",
        "description": " ※Params: \n   (newMult)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.perishable:ReducePercent:": {
        "prefix": "components.perishable:ReducePercent",
        "body": "components.perishable:ReducePercent(${1:amount})",
        "description": " ※Params: \n   (amount)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.perishable:SetOnPerishFn:": {
        "prefix": "components.perishable:SetOnPerishFn",
        "body": "components.perishable:SetOnPerishFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.perishable:OnSave:": {
        "prefix": "components.perishable:OnSave",
        "body": "components.perishable:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.perishable:StartPerishing:": {
        "prefix": "components.perishable:StartPerishing",
        "body": "components.perishable:StartPerishing()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.pethealthbar:GetSymbol:": {
        "prefix": "components.pethealthbar:GetSymbol",
        "body": "components.pethealthbar:GetSymbol()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.pethealthbar:SetPet:": {
        "prefix": "components.pethealthbar:SetPet",
        "body": "components.pethealthbar:SetPet(${1:pet},${2:symbol},${3:maxhealth})",
        "description": " ※Params: \n   (pet)<>[] \n   (symbol)<>[] \n   (maxhealth)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.pethealthbar:ResetPulse:": {
        "prefix": "components.pethealthbar:ResetPulse",
        "body": "components.pethealthbar:ResetPulse()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.pethealthbar:GetPercent:": {
        "prefix": "components.pethealthbar:GetPercent",
        "body": "components.pethealthbar:GetPercent()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.pethealthbar:GetMaxHealth:": {
        "prefix": "components.pethealthbar:GetMaxHealth",
        "body": "components.pethealthbar:GetMaxHealth()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.pethealthbar:GetOverTime:": {
        "prefix": "components.pethealthbar:GetOverTime",
        "body": "components.pethealthbar:GetOverTime()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.pethealthbar:SetMaxHealth:": {
        "prefix": "components.pethealthbar:SetMaxHealth",
        "body": "components.pethealthbar:SetMaxHealth(${1:max_health})",
        "description": " ※Params: \n   (max_health)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.pethealthbar:GetDebugString:": {
        "prefix": "components.pethealthbar:GetDebugString",
        "body": "components.pethealthbar:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.pethealthbar:GetPulse:": {
        "prefix": "components.pethealthbar:GetPulse",
        "body": "components.pethealthbar:GetPulse()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.pethealthbar:SetPetSkin:": {
        "prefix": "components.pethealthbar:SetPetSkin",
        "body": "components.pethealthbar:SetPetSkin(${1:petskin})",
        "description": " ※Params: \n   (petskin)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.pethealthbar:SetSymbol:": {
        "prefix": "components.pethealthbar:SetSymbol",
        "body": "components.pethealthbar:SetSymbol(${1:symbol})",
        "description": " ※Params: \n   (symbol)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.pethealthbar:OnUpdate:": {
        "prefix": "components.pethealthbar:OnUpdate",
        "body": "components.pethealthbar:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.petleash:SpawnPetAt:": {
        "prefix": "components.petleash:SpawnPetAt",
        "body": "components.petleash:SpawnPetAt(${1:x},${2:y},${3:z},${4:prefaboverride},${5:skin})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n   (prefaboverride)<>[] \n   (skin)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.petleash:HasPetWithTag:": {
        "prefix": "components.petleash:HasPetWithTag",
        "body": "components.petleash:HasPetWithTag(${1:tag})",
        "description": " ※Params: \n   (tag)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.petleash:GetNumPets:": {
        "prefix": "components.petleash:GetNumPets",
        "body": "components.petleash:GetNumPets()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.petleash:OnLoad:": {
        "prefix": "components.petleash:OnLoad",
        "body": "components.petleash:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.petleash:GetPetsWithPrefab:": {
        "prefix": "components.petleash:GetPetsWithPrefab",
        "body": "components.petleash:GetPetsWithPrefab(${1:prefab})",
        "description": " ※Params: \n   (prefab)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.petleash:TransferComponent:": {
        "prefix": "components.petleash:TransferComponent",
        "body": "components.petleash:TransferComponent(${1:newinst})",
        "description": " ※Params: \n   (newinst)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.petleash:SetOnSpawnFn:": {
        "prefix": "components.petleash:SetOnSpawnFn",
        "body": "components.petleash:SetOnSpawnFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.petleash:OnRemoveFromEntity:": {
        "prefix": "components.petleash:OnRemoveFromEntity",
        "body": "components.petleash:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.petleash:SetOnRemovedFn:": {
        "prefix": "components.petleash:SetOnRemovedFn",
        "body": "components.petleash:SetOnRemovedFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.petleash:GetPets:": {
        "prefix": "components.petleash:GetPets",
        "body": "components.petleash:GetPets()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.petleash:OnSave:": {
        "prefix": "components.petleash:OnSave",
        "body": "components.petleash:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.petleash:GetMaxPets:": {
        "prefix": "components.petleash:GetMaxPets",
        "body": "components.petleash:GetMaxPets()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.petleash:SetOnDespawnFn:": {
        "prefix": "components.petleash:SetOnDespawnFn",
        "body": "components.petleash:SetOnDespawnFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.petleash:DespawnAllPets:": {
        "prefix": "components.petleash:DespawnAllPets",
        "body": "components.petleash:DespawnAllPets()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.petleash:DespawnPet:": {
        "prefix": "components.petleash:DespawnPet",
        "body": "components.petleash:DespawnPet(${1:pet})",
        "description": " ※Params: \n   (pet)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.petleash:IsFull:": {
        "prefix": "components.petleash:IsFull",
        "body": "components.petleash:IsFull()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.petleash:IsPet:": {
        "prefix": "components.petleash:IsPet",
        "body": "components.petleash:IsPet(${1:pet})",
        "description": " ※Params: \n   (pet)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.petleash:GetNumPetsForPrefab:": {
        "prefix": "components.petleash:GetNumPetsForPrefab",
        "body": "components.petleash:GetNumPetsForPrefab(${1:prefab})",
        "description": " ※Params: \n   (prefab)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.petleash:SetPetPrefab:": {
        "prefix": "components.petleash:SetPetPrefab",
        "body": "components.petleash:SetPetPrefab(${1:prefab})",
        "description": " ※Params: \n   (prefab)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.petleash:SetMaxPetsForPrefab:": {
        "prefix": "components.petleash:SetMaxPetsForPrefab",
        "body": "components.petleash:SetMaxPetsForPrefab(${1:prefab},${2:maxpets})",
        "description": " ※Params: \n   (prefab)<>[] \n   (maxpets)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.petleash:IsPetAPrefabLimitedOne:": {
        "prefix": "components.petleash:IsPetAPrefabLimitedOne",
        "body": "components.petleash:IsPetAPrefabLimitedOne(${1:prefab})",
        "description": " ※Params: \n   (prefab)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.petleash:GetMaxPetsForPrefab:": {
        "prefix": "components.petleash:GetMaxPetsForPrefab",
        "body": "components.petleash:GetMaxPetsForPrefab(${1:prefab})",
        "description": " ※Params: \n   (prefab)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.petleash:IsFullForPrefab:": {
        "prefix": "components.petleash:IsFullForPrefab",
        "body": "components.petleash:IsFullForPrefab(${1:prefab})",
        "description": " ※Params: \n   (prefab)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.petleash:SetMaxPets:": {
        "prefix": "components.petleash:SetMaxPets",
        "body": "components.petleash:SetMaxPets(${1:num})",
        "description": " ※Params: \n   (num)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.petrifiable:IsPetrified:": {
        "prefix": "components.petrifiable:IsPetrified",
        "body": "components.petrifiable:IsPetrified()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.petrifiable:GetDebugString:": {
        "prefix": "components.petrifiable:GetDebugString",
        "body": "components.petrifiable:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.petrifiable:OnLoad:": {
        "prefix": "components.petrifiable:OnLoad",
        "body": "components.petrifiable:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.petrifiable:SetPetrifiedFn:": {
        "prefix": "components.petrifiable:SetPetrifiedFn",
        "body": "components.petrifiable:SetPetrifiedFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.petrifiable:Petrify:": {
        "prefix": "components.petrifiable:Petrify",
        "body": "components.petrifiable:Petrify(${1:immediate})",
        "description": " ※Params: \n   (immediate)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.petrifiable:OnSave:": {
        "prefix": "components.petrifiable:OnSave",
        "body": "components.petrifiable:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.petrifiable:OnRemoveFromEntity:": {
        "prefix": "components.petrifiable:OnRemoveFromEntity",
        "body": "components.petrifiable:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.pickable:ChangeProduct:": {
        "prefix": "components.pickable:ChangeProduct",
        "body": "components.pickable:ChangeProduct(${1:newProduct})",
        "description": " ※Params: \n   (newProduct)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.pickable:IsWildfireStarter:": {
        "prefix": "components.pickable:IsWildfireStarter",
        "body": "components.pickable:IsWildfireStarter()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.pickable:ConsumeCycles:": {
        "prefix": "components.pickable:ConsumeCycles",
        "body": "components.pickable:ConsumeCycles(${1:cycles})",
        "description": " ※Params: \n   (cycles)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.pickable:OnLoad:": {
        "prefix": "components.pickable:OnLoad",
        "body": "components.pickable:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.pickable:MakeEmpty:": {
        "prefix": "components.pickable:MakeEmpty",
        "body": "components.pickable:MakeEmpty()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.pickable:LongUpdate:": {
        "prefix": "components.pickable:LongUpdate",
        "body": "components.pickable:LongUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.pickable:SetOnRegenFn:": {
        "prefix": "components.pickable:SetOnRegenFn",
        "body": "components.pickable:SetOnRegenFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.pickable:SetOnPickedFn:": {
        "prefix": "components.pickable:SetOnPickedFn",
        "body": "components.pickable:SetOnPickedFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.pickable:OnRemoveFromEntity:": {
        "prefix": "components.pickable:OnRemoveFromEntity",
        "body": "components.pickable:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.pickable:OnTransplant:": {
        "prefix": "components.pickable:OnTransplant",
        "body": "components.pickable:OnTransplant()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.pickable:Pick:": {
        "prefix": "components.pickable:Pick",
        "body": "components.pickable:Pick(${1:picker})",
        "description": " ※Params: \n   (picker)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.pickable:MakeBarren:": {
        "prefix": "components.pickable:MakeBarren",
        "body": "components.pickable:MakeBarren()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.pickable:CanBeFertilized:": {
        "prefix": "components.pickable:CanBeFertilized",
        "body": "components.pickable:CanBeFertilized()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.pickable:Regen:": {
        "prefix": "components.pickable:Regen",
        "body": "components.pickable:Regen()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.pickable:FinishGrowing:": {
        "prefix": "components.pickable:FinishGrowing",
        "body": "components.pickable:FinishGrowing()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.pickable:Resume:": {
        "prefix": "components.pickable:Resume",
        "body": "components.pickable:Resume()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.pickable:IsBarren:": {
        "prefix": "components.pickable:IsBarren",
        "body": "components.pickable:IsBarren()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.pickable:Fertilize:": {
        "prefix": "components.pickable:Fertilize",
        "body": "components.pickable:Fertilize(${1:fertilizer},${2:doer})",
        "description": " ※Params: \n   (fertilizer)<>[] \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.pickable:SetMakeBarrenFn:": {
        "prefix": "components.pickable:SetMakeBarrenFn",
        "body": "components.pickable:SetMakeBarrenFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.pickable:GetDebugString:": {
        "prefix": "components.pickable:GetDebugString",
        "body": "components.pickable:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.pickable:Pause:": {
        "prefix": "components.pickable:Pause",
        "body": "components.pickable:Pause()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.pickable:SetUp:": {
        "prefix": "components.pickable:SetUp",
        "body": "components.pickable:SetUp(${1:product},${2:regen},${3:number})",
        "description": " ※Params: \n   (product)<>[] \n   (regen)<>[] \n   (number)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.pickable:CanBePicked:": {
        "prefix": "components.pickable:CanBePicked",
        "body": "components.pickable:CanBePicked()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.pickable:OnSave:": {
        "prefix": "components.pickable:OnSave",
        "body": "components.pickable:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.pickable:SetMakeEmptyFn:": {
        "prefix": "components.pickable:SetMakeEmptyFn",
        "body": "components.pickable:SetMakeEmptyFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.pinnable:UpdateStuckStatus:": {
        "prefix": "components.pinnable:UpdateStuckStatus",
        "body": "components.pinnable:UpdateStuckStatus()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.pinnable:IsValidPinTarget:": {
        "prefix": "components.pinnable:IsValidPinTarget",
        "body": "components.pinnable:IsValidPinTarget()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.pinnable:IsStuck:": {
        "prefix": "components.pinnable:IsStuck",
        "body": "components.pinnable:IsStuck()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.pinnable:SpawnShatterFX:": {
        "prefix": "components.pinnable:SpawnShatterFX",
        "body": "components.pinnable:SpawnShatterFX(${1:ratio})",
        "description": " ※Params: \n   (ratio)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.pinnable:StartWearingOff:": {
        "prefix": "components.pinnable:StartWearingOff",
        "body": "components.pinnable:StartWearingOff(${1:wearofftime})",
        "description": " ※Params: \n   (wearofftime)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.pinnable:Stick:": {
        "prefix": "components.pinnable:Stick",
        "body": "components.pinnable:Stick(${1:goo_build},${2:splashfxlist})",
        "description": " ※Params: \n   (goo_build)<>[] \n   (splashfxlist)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.pinnable:Unstick:": {
        "prefix": "components.pinnable:Unstick",
        "body": "components.pinnable:Unstick()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.pinnable:SetDefaultWearOffTime:": {
        "prefix": "components.pinnable:SetDefaultWearOffTime",
        "body": "components.pinnable:SetDefaultWearOffTime(${1:wearofftime})",
        "description": " ※Params: \n   (wearofftime)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.pinnable:RemainingRatio:": {
        "prefix": "components.pinnable:RemainingRatio",
        "body": "components.pinnable:RemainingRatio()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.pinnable:OnRemoveFromEntity:": {
        "prefix": "components.pinnable:OnRemoveFromEntity",
        "body": "components.pinnable:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.placer:GetDeployAction:": {
        "prefix": "components.placer:GetDeployAction",
        "body": "components.placer:GetDeployAction()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.placer:LinkEntity:": {
        "prefix": "components.placer:LinkEntity",
        "body": "components.placer:LinkEntity(${1:ent},${2:lightoverride})",
        "description": " ※Params: \n   (ent)<>[] \n   (lightoverride)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.placer:OnWallUpdate:": {
        "prefix": "components.placer:OnWallUpdate",
        "body": "components.placer:OnWallUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.placer:TestCanBuild:": {
        "prefix": "components.placer:TestCanBuild",
        "body": "components.placer:TestCanBuild()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.placer:SetBuilder:": {
        "prefix": "components.placer:SetBuilder",
        "body": "components.placer:SetBuilder(${1:builder},${2:recipe},${3:invobject})",
        "description": " ※Params: \n   (builder)<>[] \n   (recipe)<>[] \n   (invobject)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.placer:OnUpdate:": {
        "prefix": "components.placer:OnUpdate",
        "body": "components.placer:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.planardamage:GetBonus:": {
        "prefix": "components.planardamage:GetBonus",
        "body": "components.planardamage:GetBonus()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.planardamage:AddMultiplier:": {
        "prefix": "components.planardamage:AddMultiplier",
        "body": "components.planardamage:AddMultiplier(${1:src},${2:mult},${3:key})",
        "description": " ※Params: \n   (src)<>[] \n   (mult)<>[] \n   (key)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.planardamage:GetDamage:": {
        "prefix": "components.planardamage:GetDamage",
        "body": "components.planardamage:GetDamage()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.planardamage:GetBaseDamage:": {
        "prefix": "components.planardamage:GetBaseDamage",
        "body": "components.planardamage:GetBaseDamage()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.planardamage:SetBaseDamage:": {
        "prefix": "components.planardamage:SetBaseDamage",
        "body": "components.planardamage:SetBaseDamage(${1:damage})",
        "description": " ※Params: \n   (damage)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.planardamage:RemoveMultiplier:": {
        "prefix": "components.planardamage:RemoveMultiplier",
        "body": "components.planardamage:RemoveMultiplier(${1:src},${2:key})",
        "description": " ※Params: \n   (src)<>[] \n   (key)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.planardamage:GetDebugString:": {
        "prefix": "components.planardamage:GetDebugString",
        "body": "components.planardamage:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.planardamage:GetMultiplier:": {
        "prefix": "components.planardamage:GetMultiplier",
        "body": "components.planardamage:GetMultiplier()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.planardamage:RemoveBonus:": {
        "prefix": "components.planardamage:RemoveBonus",
        "body": "components.planardamage:RemoveBonus(${1:src},${2:key})",
        "description": " ※Params: \n   (src)<>[] \n   (key)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.planardamage:AddBonus:": {
        "prefix": "components.planardamage:AddBonus",
        "body": "components.planardamage:AddBonus(${1:src},${2:bonus},${3:key})",
        "description": " ※Params: \n   (src)<>[] \n   (bonus)<>[] \n   (key)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.planardefense:GetBonus:": {
        "prefix": "components.planardefense:GetBonus",
        "body": "components.planardefense:GetBonus()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.planardefense:SetBaseDefense:": {
        "prefix": "components.planardefense:SetBaseDefense",
        "body": "components.planardefense:SetBaseDefense(${1:defense})",
        "description": " ※Params: \n   (defense)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.planardefense:GetDefense:": {
        "prefix": "components.planardefense:GetDefense",
        "body": "components.planardefense:GetDefense()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.planardefense:AddMultiplier:": {
        "prefix": "components.planardefense:AddMultiplier",
        "body": "components.planardefense:AddMultiplier(${1:src},${2:mult},${3:key})",
        "description": " ※Params: \n   (src)<>[] \n   (mult)<>[] \n   (key)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.planardefense:GetBaseDefense:": {
        "prefix": "components.planardefense:GetBaseDefense",
        "body": "components.planardefense:GetBaseDefense()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.planardefense:AddBonus:": {
        "prefix": "components.planardefense:AddBonus",
        "body": "components.planardefense:AddBonus(${1:src},${2:bonus},${3:key})",
        "description": " ※Params: \n   (src)<>[] \n   (bonus)<>[] \n   (key)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.planardefense:GetDebugString:": {
        "prefix": "components.planardefense:GetDebugString",
        "body": "components.planardefense:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.planardefense:RemoveMultiplier:": {
        "prefix": "components.planardefense:RemoveMultiplier",
        "body": "components.planardefense:RemoveMultiplier(${1:src},${2:key})",
        "description": " ※Params: \n   (src)<>[] \n   (key)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.planardefense:GetMultiplier:": {
        "prefix": "components.planardefense:GetMultiplier",
        "body": "components.planardefense:GetMultiplier()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.planardefense:RemoveBonus:": {
        "prefix": "components.planardefense:RemoveBonus",
        "body": "components.planardefense:RemoveBonus(${1:src},${2:key})",
        "description": " ※Params: \n   (src)<>[] \n   (key)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.planarentity:OnResistNonPlanarAttack:": {
        "prefix": "components.planarentity:OnResistNonPlanarAttack",
        "body": "components.planarentity:OnResistNonPlanarAttack(${1:attacker})",
        "description": " ※Params: \n   (attacker)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.planarentity:AbsorbDamage:": {
        "prefix": "components.planarentity:AbsorbDamage",
        "body": "components.planarentity:AbsorbDamage(${1:damage},${2:attacker},${3:weapon},${4:spdmg})",
        "description": " ※Params: \n   (damage)<>[] \n   (attacker)<>[] \n   (weapon)<>[] \n   (spdmg)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.planarentity:OnPlanarAttackUndefended:": {
        "prefix": "components.planarentity:OnPlanarAttackUndefended",
        "body": "components.planarentity:OnPlanarAttackUndefended(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.plantregistryupdater:TakeOversizedPicture:": {
        "prefix": "components.plantregistryupdater:TakeOversizedPicture",
        "body": "components.plantregistryupdater:TakeOversizedPicture(${1:plant},${2:weight},${3:beardskin},${4:beardlength})",
        "description": " ※Params: \n   (plant)<>[] \n   (weight)<>[] \n   (beardskin)<>[] \n   (beardlength)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.plantregistryupdater:LearnPlantStage:": {
        "prefix": "components.plantregistryupdater:LearnPlantStage",
        "body": "components.plantregistryupdater:LearnPlantStage(${1:plant},${2:stage})",
        "description": " ※Params: \n   (plant)<>[] \n   (stage)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.plantregistryupdater:LearnFertilizer:": {
        "prefix": "components.plantregistryupdater:LearnFertilizer",
        "body": "components.plantregistryupdater:LearnFertilizer(${1:fertilizer})",
        "description": " ※Params: \n   (fertilizer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.plantregrowth:SetSearchTag:": {
        "prefix": "components.plantregrowth:SetSearchTag",
        "body": "components.plantregrowth:SetSearchTag(${1:tag})",
        "description": " ※Params: \n   (tag)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.plantregrowth:OnLoad:": {
        "prefix": "components.plantregrowth:OnLoad",
        "body": "components.plantregrowth:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.plantregrowth:SetProduct:": {
        "prefix": "components.plantregrowth:SetProduct",
        "body": "components.plantregrowth:SetProduct(${1:product})",
        "description": " ※Params: \n   (product)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.plantregrowth:OnSave:": {
        "prefix": "components.plantregrowth:OnSave",
        "body": "components.plantregrowth:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.plantregrowth:GetDebugString:": {
        "prefix": "components.plantregrowth:GetDebugString",
        "body": "components.plantregrowth:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.plantregrowth:OnRemoveEntity:": {
        "prefix": "components.plantregrowth:OnRemoveEntity",
        "body": "components.plantregrowth:OnRemoveEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.plantregrowth:SetRegrowthRate:": {
        "prefix": "components.plantregrowth:SetRegrowthRate",
        "body": "components.plantregrowth:SetRegrowthRate(${1:rate})",
        "description": " ※Params: \n   (rate)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.plantregrowth:ResetGrowthTime:": {
        "prefix": "components.plantregrowth:ResetGrowthTime",
        "body": "components.plantregrowth:ResetGrowthTime()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.plantregrowth:TrySpawnNearby:": {
        "prefix": "components.plantregrowth:TrySpawnNearby",
        "body": "components.plantregrowth:TrySpawnNearby()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.plantregrowth:OnRemoveFromEntity:": {
        "prefix": "components.plantregrowth:OnRemoveFromEntity",
        "body": "components.plantregrowth:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.plantresearchable:LearnPlant:": {
        "prefix": "components.plantresearchable:LearnPlant",
        "body": "components.plantresearchable:LearnPlant(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.plantresearchable:SetResearchFn:": {
        "prefix": "components.plantresearchable:SetResearchFn",
        "body": "components.plantresearchable:SetResearchFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.plantresearchable:GetResearchInfo:": {
        "prefix": "components.plantresearchable:GetResearchInfo",
        "body": "components.plantresearchable:GetResearchInfo()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.plantresearchable:IsRandomSeed:": {
        "prefix": "components.plantresearchable:IsRandomSeed",
        "body": "components.plantresearchable:IsRandomSeed()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.platformhopdelay:SetDelay:": {
        "prefix": "components.platformhopdelay:SetDelay",
        "body": "components.platformhopdelay:SetDelay(${1:time})",
        "description": " ※Params: \n   (time)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.platformhopdelay:GetDelayTicks:": {
        "prefix": "components.platformhopdelay:GetDelayTicks",
        "body": "components.platformhopdelay:GetDelayTicks()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.platformhopdelay:SetDelayTicks:": {
        "prefix": "components.platformhopdelay:SetDelayTicks",
        "body": "components.platformhopdelay:SetDelayTicks(${1:ticks})",
        "description": " ※Params: \n   (ticks)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playbill:SetCurrentAct:": {
        "prefix": "components.playbill:SetCurrentAct",
        "body": "components.playbill:SetCurrentAct(${1:act})",
        "description": " ※Params: \n   (act)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playbill:OnSave:": {
        "prefix": "components.playbill:OnSave",
        "body": "components.playbill:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playbill:OnLoad:": {
        "prefix": "components.playbill:OnLoad",
        "body": "components.playbill:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playbill_lecturn:LoadPostPass:": {
        "prefix": "components.playbill_lecturn:LoadPostPass",
        "body": "components.playbill_lecturn:LoadPostPass(${1:newents},${2:data})",
        "description": " ※Params: \n   (newents)<>[] \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playbill_lecturn:UpdateText:": {
        "prefix": "components.playbill_lecturn:UpdateText",
        "body": "components.playbill_lecturn:UpdateText()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playbill_lecturn:ChangeAct:": {
        "prefix": "components.playbill_lecturn:ChangeAct",
        "body": "components.playbill_lecturn:ChangeAct(${1:next_act})",
        "description": " ※Params: \n   (next_act)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playbill_lecturn:SetStage:": {
        "prefix": "components.playbill_lecturn:SetStage",
        "body": "components.playbill_lecturn:SetStage(${1:stage})",
        "description": " ※Params: \n   (stage)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playbill_lecturn:SwapPlayBill:": {
        "prefix": "components.playbill_lecturn:SwapPlayBill",
        "body": "components.playbill_lecturn:SwapPlayBill(${1:playbill},${2:doer})",
        "description": " ※Params: \n   (playbill)<>[] \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playbill_lecturn:OnSave:": {
        "prefix": "components.playbill_lecturn:OnSave",
        "body": "components.playbill_lecturn:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playbill_lecturn:OnRemoveEntity:": {
        "prefix": "components.playbill_lecturn:OnRemoveEntity",
        "body": "components.playbill_lecturn:OnRemoveEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playeractionpicker:PushActionFilter:": {
        "prefix": "components.playeractionpicker:PushActionFilter",
        "body": "components.playeractionpicker:PushActionFilter(${1:filterfn},${2:priority})",
        "description": " ※Params: \n   (filterfn)<>[] \n   (priority)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playeractionpicker:GetSceneActions:": {
        "prefix": "components.playeractionpicker:GetSceneActions",
        "body": "components.playeractionpicker:GetSceneActions(${1:useitem},${2:right})",
        "description": " ※Params: \n   (useitem)<>[] \n   (right)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playeractionpicker:GetLeftClickActions:": {
        "prefix": "components.playeractionpicker:GetLeftClickActions",
        "body": "components.playeractionpicker:GetLeftClickActions(${1:position},${2:target})",
        "description": " ※Params: \n   (position)<>[] \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playeractionpicker:GetInventoryActions:": {
        "prefix": "components.playeractionpicker:GetInventoryActions",
        "body": "components.playeractionpicker:GetInventoryActions(${1:useitem},${2:right})",
        "description": " ※Params: \n   (useitem)<>[] \n   (right)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playeractionpicker:RegisterContainer:": {
        "prefix": "components.playeractionpicker:RegisterContainer",
        "body": "components.playeractionpicker:RegisterContainer(${1:container})",
        "description": " ※Params: \n   (container)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playeractionpicker:GetCannonAimActions:": {
        "prefix": "components.playeractionpicker:GetCannonAimActions",
        "body": "components.playeractionpicker:GetCannonAimActions(${1:inst},${2:pos},${3:right})",
        "description": " ※Params: \n   (inst)<>[] \n   (pos)<>[] \n   (right)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playeractionpicker:HasContainerWidgetAction:": {
        "prefix": "components.playeractionpicker:HasContainerWidgetAction",
        "body": "components.playeractionpicker:HasContainerWidgetAction()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playeractionpicker:OnUpdateActionFilterStack:": {
        "prefix": "components.playeractionpicker:OnUpdateActionFilterStack",
        "body": "components.playeractionpicker:OnUpdateActionFilterStack()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playeractionpicker:UnregisterContainer:": {
        "prefix": "components.playeractionpicker:UnregisterContainer",
        "body": "components.playeractionpicker:UnregisterContainer(${1:container})",
        "description": " ※Params: \n   (container)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playeractionpicker:GetSteeringActions:": {
        "prefix": "components.playeractionpicker:GetSteeringActions",
        "body": "components.playeractionpicker:GetSteeringActions(${1:inst},${2:pos},${3:right})",
        "description": " ※Params: \n   (inst)<>[] \n   (pos)<>[] \n   (right)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playeractionpicker:GetEquippedItemActions:": {
        "prefix": "components.playeractionpicker:GetEquippedItemActions",
        "body": "components.playeractionpicker:GetEquippedItemActions(${1:target},${2:useitem},${3:right})",
        "description": " ※Params: \n   (target)<>[] \n   (useitem)<>[] \n   (right)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playeractionpicker:GetRightClickActions:": {
        "prefix": "components.playeractionpicker:GetRightClickActions",
        "body": "components.playeractionpicker:GetRightClickActions(${1:position},${2:target},${3:spellbook})",
        "description": " ※Params: \n   (position)<>[] \n   (target)<>[] \n   (spellbook)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playeractionpicker:DoGetMouseActions:": {
        "prefix": "components.playeractionpicker:DoGetMouseActions",
        "body": "components.playeractionpicker:DoGetMouseActions(${1:position},${2:target},${3:spellbook})",
        "description": " ※Params: \n   (position)<>[] \n   (target)<>[] \n   (spellbook)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playeractionpicker:GetPointSpecialActions:": {
        "prefix": "components.playeractionpicker:GetPointSpecialActions",
        "body": "components.playeractionpicker:GetPointSpecialActions(${1:pos},${2:useitem},${3:right},${4:usereticulepos})",
        "description": " ※Params: \n   (pos)<>[] \n   (useitem)<>[] \n   (right)<>[] \n   (usereticulepos)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playeractionpicker:GetUseItemActions:": {
        "prefix": "components.playeractionpicker:GetUseItemActions",
        "body": "components.playeractionpicker:GetUseItemActions(${1:target},${2:useitem},${3:right})",
        "description": " ※Params: \n   (target)<>[] \n   (useitem)<>[] \n   (right)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playeractionpicker:GetPointActions:": {
        "prefix": "components.playeractionpicker:GetPointActions",
        "body": "components.playeractionpicker:GetPointActions(${1:pos},${2:useitem},${3:right},${4:target})",
        "description": " ※Params: \n   (pos)<>[] \n   (useitem)<>[] \n   (right)<>[] \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playeractionpicker:PopActionFilter:": {
        "prefix": "components.playeractionpicker:PopActionFilter",
        "body": "components.playeractionpicker:PopActionFilter(${1:filterfn})",
        "description": " ※Params: \n   (filterfn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playeravatardata:AddBaseSkinData:": {
        "prefix": "components.playeravatardata:AddBaseSkinData",
        "body": "components.playeravatardata:AddBaseSkinData(${1:save})",
        "description": " ※Params: \n   (save)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playeravatardata:OnLoad:": {
        "prefix": "components.playeravatardata:OnLoad",
        "body": "components.playeravatardata:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playeravatardata:AddEquipData:": {
        "prefix": "components.playeravatardata:AddEquipData",
        "body": "components.playeravatardata:AddEquipData(${1:save})",
        "description": " ※Params: \n   (save)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playeravatardata:AddNameData:": {
        "prefix": "components.playeravatardata:AddNameData",
        "body": "components.playeravatardata:AddNameData(${1:save})",
        "description": " ※Params: \n   (save)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playeravatardata:AddClothingData:": {
        "prefix": "components.playeravatardata:AddClothingData",
        "body": "components.playeravatardata:AddClothingData(${1:save})",
        "description": " ※Params: \n   (save)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playeravatardata:SetAllowEmptyName:": {
        "prefix": "components.playeravatardata:SetAllowEmptyName",
        "body": "components.playeravatardata:SetAllowEmptyName(${1:allow})",
        "description": " ※Params: \n   (allow)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playeravatardata:AddAgeData:": {
        "prefix": "components.playeravatardata:AddAgeData",
        "body": "components.playeravatardata:AddAgeData(${1:save})",
        "description": " ※Params: \n   (save)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playeravatardata:SetAllowBurnt:": {
        "prefix": "components.playeravatardata:SetAllowBurnt",
        "body": "components.playeravatardata:SetAllowBurnt(${1:allow})",
        "description": " ※Params: \n   (allow)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playeravatardata:GetData:": {
        "prefix": "components.playeravatardata:GetData",
        "body": "components.playeravatardata:GetData()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playeravatardata:SetData:": {
        "prefix": "components.playeravatardata:SetData",
        "body": "components.playeravatardata:SetData(${1:client_obj})",
        "description": " ※Params: \n   (client_obj)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playeravatardata:OnSave:": {
        "prefix": "components.playeravatardata:OnSave",
        "body": "components.playeravatardata:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playeravatardata:AddPlayerData:": {
        "prefix": "components.playeravatardata:AddPlayerData",
        "body": "components.playeravatardata:AddPlayerData(${1:save})",
        "description": " ※Params: \n   (save)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:CanLocomote:": {
        "prefix": "components.playercontroller:CanLocomote",
        "body": "components.playercontroller:CanLocomote()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:IsAnyOfControlsPressed:": {
        "prefix": "components.playercontroller:IsAnyOfControlsPressed",
        "body": "components.playercontroller:IsAnyOfControlsPressed(${1:...})",
        "description": " ※Params: \n   (...)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:GetInspectButtonAction:": {
        "prefix": "components.playercontroller:GetInspectButtonAction",
        "body": "components.playercontroller:GetInspectButtonAction(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:DoAction:": {
        "prefix": "components.playercontroller:DoAction",
        "body": "components.playercontroller:DoAction(${1:buffaction},${2:spellbook})",
        "description": " ※Params: \n   (buffaction)<>[] \n   (spellbook)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:OnRemoteControllerAltActionButton:": {
        "prefix": "components.playercontroller:OnRemoteControllerAltActionButton",
        "body": "components.playercontroller:OnRemoteControllerAltActionButton(${1:actioncode},${2:target},${3:isreleased},${4:noforce},${5:mod_name})",
        "description": " ※Params: \n   (actioncode)<>[] \n   (target)<>[] \n   (isreleased)<>[] \n   (noforce)<>[] \n   (mod_name)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:OnRemoteControllerActionButton:": {
        "prefix": "components.playercontroller:OnRemoteControllerActionButton",
        "body": "components.playercontroller:OnRemoteControllerActionButton(${1:actioncode},${2:target},${3:isreleased},${4:noforce},${5:mod_name})",
        "description": " ※Params: \n   (actioncode)<>[] \n   (target)<>[] \n   (isreleased)<>[] \n   (noforce)<>[] \n   (mod_name)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:GetMapActions:": {
        "prefix": "components.playercontroller:GetMapActions",
        "body": "components.playercontroller:GetMapActions(${1:position},${2:maptarget})",
        "description": " ※Params: \n   (position)<>[] \n   (maptarget)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:GetCombatTarget:": {
        "prefix": "components.playercontroller:GetCombatTarget",
        "body": "components.playercontroller:GetCombatTarget()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:CycleControllerAttackTargetBack:": {
        "prefix": "components.playercontroller:CycleControllerAttackTargetBack",
        "body": "components.playercontroller:CycleControllerAttackTargetBack()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:OnRemoteInspectButton:": {
        "prefix": "components.playercontroller:OnRemoteInspectButton",
        "body": "components.playercontroller:OnRemoteInspectButton(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:RemoteMakeRecipeAtPoint:": {
        "prefix": "components.playercontroller:RemoteMakeRecipeAtPoint",
        "body": "components.playercontroller:RemoteMakeRecipeAtPoint(${1:recipe},${2:pt},${3:rot},${4:skin})",
        "description": " ※Params: \n   (recipe)<>[] \n   (pt)<>[] \n   (rot)<>[] \n   (skin)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:RotRight:": {
        "prefix": "components.playercontroller:RotRight",
        "body": "components.playercontroller:RotRight()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:GetControllerTarget:": {
        "prefix": "components.playercontroller:GetControllerTarget",
        "body": "components.playercontroller:GetControllerTarget()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:EncodeControlMods:": {
        "prefix": "components.playercontroller:EncodeControlMods",
        "body": "components.playercontroller:EncodeControlMods()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:DoControllerDropItemFromInvTile:": {
        "prefix": "components.playercontroller:DoControllerDropItemFromInvTile",
        "body": "components.playercontroller:DoControllerDropItemFromInvTile(${1:item},${2:single})",
        "description": " ※Params: \n   (item)<>[] \n   (single)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:OnRemoteDirectWalking:": {
        "prefix": "components.playercontroller:OnRemoteDirectWalking",
        "body": "components.playercontroller:OnRemoteDirectWalking(${1:x},${2:z})",
        "description": " ※Params: \n   (x)<>[] \n   (z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:GetCursorInventoryObject:": {
        "prefix": "components.playercontroller:GetCursorInventoryObject",
        "body": "components.playercontroller:GetCursorInventoryObject()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:OnLeftClick:": {
        "prefix": "components.playercontroller:OnLeftClick",
        "body": "components.playercontroller:OnLeftClick(${1:down})",
        "description": " ※Params: \n   (down)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:GetCombatRetarget:": {
        "prefix": "components.playercontroller:GetCombatRetarget",
        "body": "components.playercontroller:GetCombatRetarget()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:OnRemoteRightClick:": {
        "prefix": "components.playercontroller:OnRemoteRightClick",
        "body": "components.playercontroller:OnRemoteRightClick(${1:actioncode},${2:position},${3:target},${4:rotation},${5:isreleased},${6:controlmodscode},${7:noforce},${8:mod_name})",
        "description": " ※Params: \n   (actioncode)<>[] \n   (position)<>[] \n   (target)<>[] \n   (rotation)<>[] \n   (isreleased)<>[] \n   (controlmodscode)<>[] \n   (noforce)<>[] \n   (mod_name)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:OnRemoteAttackButton:": {
        "prefix": "components.playercontroller:OnRemoteAttackButton",
        "body": "components.playercontroller:OnRemoteAttackButton(${1:target},${2:force_attack},${3:noforce})",
        "description": " ※Params: \n   (target)<>[] \n   (force_attack)<>[] \n   (noforce)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:GetItemSelfAction:": {
        "prefix": "components.playercontroller:GetItemSelfAction",
        "body": "components.playercontroller:GetItemSelfAction(${1:item})",
        "description": " ※Params: \n   (item)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:CooldownHeldAction:": {
        "prefix": "components.playercontroller:CooldownHeldAction",
        "body": "components.playercontroller:CooldownHeldAction(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:RemoteDirectWalking:": {
        "prefix": "components.playercontroller:RemoteDirectWalking",
        "body": "components.playercontroller:RemoteDirectWalking(${1:x},${2:z})",
        "description": " ※Params: \n   (x)<>[] \n   (z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:OnRemoveFromEntity:": {
        "prefix": "components.playercontroller:OnRemoveFromEntity",
        "body": "components.playercontroller:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:RemotePausePrediction:": {
        "prefix": "components.playercontroller:RemotePausePrediction",
        "body": "components.playercontroller:RemotePausePrediction(${1:frames})",
        "description": " ※Params: \n   (frames)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:Enable:": {
        "prefix": "components.playercontroller:Enable",
        "body": "components.playercontroller:Enable(${1:val})",
        "description": " ※Params: \n   (val)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:DecodeControlMods:": {
        "prefix": "components.playercontroller:DecodeControlMods",
        "body": "components.playercontroller:DecodeControlMods(${1:code})",
        "description": " ※Params: \n   (code)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:DoControllerInspectItemFromInvTile:": {
        "prefix": "components.playercontroller:DoControllerInspectItemFromInvTile",
        "body": "components.playercontroller:DoControllerInspectItemFromInvTile(${1:item})",
        "description": " ※Params: \n   (item)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:RefreshReticule:": {
        "prefix": "components.playercontroller:RefreshReticule",
        "body": "components.playercontroller:RefreshReticule(${1:item})",
        "description": " ※Params: \n   (item)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:CooldownRemoteController:": {
        "prefix": "components.playercontroller:CooldownRemoteController",
        "body": "components.playercontroller:CooldownRemoteController(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:GetRightMouseAction:": {
        "prefix": "components.playercontroller:GetRightMouseAction",
        "body": "components.playercontroller:GetRightMouseAction()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:CancelDeployPlacement:": {
        "prefix": "components.playercontroller:CancelDeployPlacement",
        "body": "components.playercontroller:CancelDeployPlacement()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:RemoteBufferedAction:": {
        "prefix": "components.playercontroller:RemoteBufferedAction",
        "body": "components.playercontroller:RemoteBufferedAction(${1:buffaction})",
        "description": " ※Params: \n   (buffaction)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:RemoteResurrectButton:": {
        "prefix": "components.playercontroller:RemoteResurrectButton",
        "body": "components.playercontroller:RemoteResurrectButton()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:OnRightClick:": {
        "prefix": "components.playercontroller:OnRightClick",
        "body": "components.playercontroller:OnRightClick(${1:down})",
        "description": " ※Params: \n   (down)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:OnRemoteControllerActionButtonPoint:": {
        "prefix": "components.playercontroller:OnRemoteControllerActionButtonPoint",
        "body": "components.playercontroller:OnRemoteControllerActionButtonPoint(${1:actioncode},${2:position},${3:isreleased},${4:noforce},${5:mod_name},${6:isspecial},${7:spellbook},${8:spell_id})",
        "description": " ※Params: \n   (actioncode)<>[] \n   (position)<>[] \n   (isreleased)<>[] \n   (noforce)<>[] \n   (mod_name)<>[] \n   (isspecial)<>[] \n   (spellbook)<>[] \n   (spell_id)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:DoDragWalking:": {
        "prefix": "components.playercontroller:DoDragWalking",
        "body": "components.playercontroller:DoDragWalking(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:RemoteActionButton:": {
        "prefix": "components.playercontroller:RemoteActionButton",
        "body": "components.playercontroller:RemoteActionButton(${1:action},${2:isreleased})",
        "description": " ※Params: \n   (action)<>[] \n   (isreleased)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:DoActionAutoEquip:": {
        "prefix": "components.playercontroller:DoActionAutoEquip",
        "body": "components.playercontroller:DoActionAutoEquip(${1:buffaction})",
        "description": " ※Params: \n   (buffaction)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:DoPredictWalking:": {
        "prefix": "components.playercontroller:DoPredictWalking",
        "body": "components.playercontroller:DoPredictWalking(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:DetachClassified:": {
        "prefix": "components.playercontroller:DetachClassified",
        "body": "components.playercontroller:DetachClassified()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:GetMapTarget:": {
        "prefix": "components.playercontroller:GetMapTarget",
        "body": "components.playercontroller:GetMapTarget(${1:act})",
        "description": " ※Params: \n   (act)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:GetControllerAttackTarget:": {
        "prefix": "components.playercontroller:GetControllerAttackTarget",
        "body": "components.playercontroller:GetControllerAttackTarget()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:ClearControlMods:": {
        "prefix": "components.playercontroller:ClearControlMods",
        "body": "components.playercontroller:ClearControlMods()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:IsEnabled:": {
        "prefix": "components.playercontroller:IsEnabled",
        "body": "components.playercontroller:IsEnabled()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:EnableMapControls:": {
        "prefix": "components.playercontroller:EnableMapControls",
        "body": "components.playercontroller:EnableMapControls(${1:val})",
        "description": " ※Params: \n   (val)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:CycleControllerAttackTargetForward:": {
        "prefix": "components.playercontroller:CycleControllerAttackTargetForward",
        "body": "components.playercontroller:CycleControllerAttackTargetForward()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:UpdateActionsToMapActions:": {
        "prefix": "components.playercontroller:UpdateActionsToMapActions",
        "body": "components.playercontroller:UpdateActionsToMapActions(${1:position},${2:maptarget})",
        "description": " ※Params: \n   (position)<>[] \n   (maptarget)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:DoAttackButton:": {
        "prefix": "components.playercontroller:DoAttackButton",
        "body": "components.playercontroller:DoAttackButton(${1:retarget})",
        "description": " ※Params: \n   (retarget)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:DoBoatSteering:": {
        "prefix": "components.playercontroller:DoBoatSteering",
        "body": "components.playercontroller:DoBoatSteering(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:OnRemoteActionButton:": {
        "prefix": "components.playercontroller:OnRemoteActionButton",
        "body": "components.playercontroller:OnRemoteActionButton(${1:actioncode},${2:target},${3:isreleased},${4:noforce},${5:mod_name})",
        "description": " ※Params: \n   (actioncode)<>[] \n   (target)<>[] \n   (isreleased)<>[] \n   (noforce)<>[] \n   (mod_name)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:EchoReticuleAt:": {
        "prefix": "components.playercontroller:EchoReticuleAt",
        "body": "components.playercontroller:EchoReticuleAt(${1:x},${2:y},${3:z})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:IsMapControlsEnabled:": {
        "prefix": "components.playercontroller:IsMapControlsEnabled",
        "body": "components.playercontroller:IsMapControlsEnabled()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:DoActionButton:": {
        "prefix": "components.playercontroller:DoActionButton",
        "body": "components.playercontroller:DoActionButton()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:OnMapAction:": {
        "prefix": "components.playercontroller:OnMapAction",
        "body": "components.playercontroller:OnMapAction(${1:actioncode},${2:position},${3:maptarget})",
        "description": " ※Params: \n   (actioncode)<>[] \n   (position)<>[] \n   (maptarget)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:IsBusy:": {
        "prefix": "components.playercontroller:IsBusy",
        "body": "components.playercontroller:IsBusy()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:CancelPlacement:": {
        "prefix": "components.playercontroller:CancelPlacement",
        "body": "components.playercontroller:CancelPlacement(${1:cache})",
        "description": " ※Params: \n   (cache)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:OnRemoteControllerAttackButton:": {
        "prefix": "components.playercontroller:OnRemoteControllerAttackButton",
        "body": "components.playercontroller:OnRemoteControllerAttackButton(${1:target},${2:isreleased},${3:noforce})",
        "description": " ※Params: \n   (target)<>[] \n   (isreleased)<>[] \n   (noforce)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:Deactivate:": {
        "prefix": "components.playercontroller:Deactivate",
        "body": "components.playercontroller:Deactivate()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:RemoteDragWalking:": {
        "prefix": "components.playercontroller:RemoteDragWalking",
        "body": "components.playercontroller:RemoteDragWalking(${1:x},${2:z})",
        "description": " ※Params: \n   (x)<>[] \n   (z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:StartBuildPlacementMode:": {
        "prefix": "components.playercontroller:StartBuildPlacementMode",
        "body": "components.playercontroller:StartBuildPlacementMode(${1:recipe},${2:skin})",
        "description": " ※Params: \n   (recipe)<>[] \n   (skin)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:OnRemoteStopAllControls:": {
        "prefix": "components.playercontroller:OnRemoteStopAllControls",
        "body": "components.playercontroller:OnRemoteStopAllControls()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:TryAOETargeting:": {
        "prefix": "components.playercontroller:TryAOETargeting",
        "body": "components.playercontroller:TryAOETargeting()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:RotLeft:": {
        "prefix": "components.playercontroller:RotLeft",
        "body": "components.playercontroller:RotLeft()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:HasGroundUseSpecialAction:": {
        "prefix": "components.playercontroller:HasGroundUseSpecialAction",
        "body": "components.playercontroller:HasGroundUseSpecialAction(${1:right})",
        "description": " ※Params: \n   (right)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:Activate:": {
        "prefix": "components.playercontroller:Activate",
        "body": "components.playercontroller:Activate()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:DoControllerAttackButton:": {
        "prefix": "components.playercontroller:DoControllerAttackButton",
        "body": "components.playercontroller:DoControllerAttackButton(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:DoCameraControl:": {
        "prefix": "components.playercontroller:DoCameraControl",
        "body": "components.playercontroller:DoCameraControl()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:DoInspectButton:": {
        "prefix": "components.playercontroller:DoInspectButton",
        "body": "components.playercontroller:DoInspectButton()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:ClearActionHold:": {
        "prefix": "components.playercontroller:ClearActionHold",
        "body": "components.playercontroller:ClearActionHold()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:OnLeftUp:": {
        "prefix": "components.playercontroller:OnLeftUp",
        "body": "components.playercontroller:OnLeftUp()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:RemoteStopWalking:": {
        "prefix": "components.playercontroller:RemoteStopWalking",
        "body": "components.playercontroller:RemoteStopWalking()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:AttachClassified:": {
        "prefix": "components.playercontroller:AttachClassified",
        "body": "components.playercontroller:AttachClassified(${1:classified})",
        "description": " ※Params: \n   (classified)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:IsControllerTargetLocked:": {
        "prefix": "components.playercontroller:IsControllerTargetLocked",
        "body": "components.playercontroller:IsControllerTargetLocked()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:RemotePredictWalking:": {
        "prefix": "components.playercontroller:RemotePredictWalking",
        "body": "components.playercontroller:RemotePredictWalking(${1:x},${2:z},${3:isstart})",
        "description": " ※Params: \n   (x)<>[] \n   (z)<>[] \n   (isstart)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:RemoteCastSpellBookFromInv:": {
        "prefix": "components.playercontroller:RemoteCastSpellBookFromInv",
        "body": "components.playercontroller:RemoteCastSpellBookFromInv(${1:item},${2:spell_id})",
        "description": " ※Params: \n   (item)<>[] \n   (spell_id)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:RemoteAttackButton:": {
        "prefix": "components.playercontroller:RemoteAttackButton",
        "body": "components.playercontroller:RemoteAttackButton(${1:target},${2:force_attack})",
        "description": " ※Params: \n   (target)<>[] \n   (force_attack)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:OnRemoteControllerActionButtonDeploy:": {
        "prefix": "components.playercontroller:OnRemoteControllerActionButtonDeploy",
        "body": "components.playercontroller:OnRemoteControllerActionButtonDeploy(${1:invobject},${2:position},${3:rotation},${4:isreleased})",
        "description": " ※Params: \n   (invobject)<>[] \n   (position)<>[] \n   (rotation)<>[] \n   (isreleased)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:GetGroundUseAction:": {
        "prefix": "components.playercontroller:GetGroundUseAction",
        "body": "components.playercontroller:GetGroundUseAction(${1:position},${2:spellbook})",
        "description": " ※Params: \n   (position)<>[] \n   (spellbook)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:OnUpdate:": {
        "prefix": "components.playercontroller:OnUpdate",
        "body": "components.playercontroller:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:OnRemotePredictOverrideLocomote:": {
        "prefix": "components.playercontroller:OnRemotePredictOverrideLocomote",
        "body": "components.playercontroller:OnRemotePredictOverrideLocomote(${1:dir})",
        "description": " ※Params: \n   (dir)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:OnRemoteResurrectButton:": {
        "prefix": "components.playercontroller:OnRemoteResurrectButton",
        "body": "components.playercontroller:OnRemoteResurrectButton()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:OnRemoteToggleMovementPrediction:": {
        "prefix": "components.playercontroller:OnRemoteToggleMovementPrediction",
        "body": "components.playercontroller:OnRemoteToggleMovementPrediction(${1:val})",
        "description": " ※Params: \n   (val)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:RemoteDropItemFromInvTile:": {
        "prefix": "components.playercontroller:RemoteDropItemFromInvTile",
        "body": "components.playercontroller:RemoteDropItemFromInvTile(${1:item},${2:single})",
        "description": " ※Params: \n   (item)<>[] \n   (single)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:IsControlPressed:": {
        "prefix": "components.playercontroller:IsControlPressed",
        "body": "components.playercontroller:IsControlPressed(${1:control})",
        "description": " ※Params: \n   (control)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:OnLocomotorBufferedAction:": {
        "prefix": "components.playercontroller:OnLocomotorBufferedAction",
        "body": "components.playercontroller:OnLocomotorBufferedAction(${1:act})",
        "description": " ※Params: \n   (act)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:GetActionButtonAction:": {
        "prefix": "components.playercontroller:GetActionButtonAction",
        "body": "components.playercontroller:GetActionButtonAction(${1:force_target})",
        "description": " ※Params: \n   (force_target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:OnRemoteBufferedAction:": {
        "prefix": "components.playercontroller:OnRemoteBufferedAction",
        "body": "components.playercontroller:OnRemoteBufferedAction()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:OnRemoteControllerAltActionButtonPoint:": {
        "prefix": "components.playercontroller:OnRemoteControllerAltActionButtonPoint",
        "body": "components.playercontroller:OnRemoteControllerAltActionButtonPoint(${1:actioncode},${2:position},${3:isreleased},${4:noforce},${5:isspecial},${6:mod_name})",
        "description": " ※Params: \n   (actioncode)<>[] \n   (position)<>[] \n   (isreleased)<>[] \n   (noforce)<>[] \n   (isspecial)<>[] \n   (mod_name)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:RemoteInspectItemFromInvTile:": {
        "prefix": "components.playercontroller:RemoteInspectItemFromInvTile",
        "body": "components.playercontroller:RemoteInspectItemFromInvTile(${1:item})",
        "description": " ※Params: \n   (item)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:DoClientBusyOverrideLocomote:": {
        "prefix": "components.playercontroller:DoClientBusyOverrideLocomote",
        "body": "components.playercontroller:DoClientBusyOverrideLocomote()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:RemoteControllerUseItemOnSelfFromInvTile:": {
        "prefix": "components.playercontroller:RemoteControllerUseItemOnSelfFromInvTile",
        "body": "components.playercontroller:RemoteControllerUseItemOnSelfFromInvTile(${1:buffaction},${2:item})",
        "description": " ※Params: \n   (buffaction)<>[] \n   (item)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:CancelAOETargeting:": {
        "prefix": "components.playercontroller:CancelAOETargeting",
        "body": "components.playercontroller:CancelAOETargeting()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:RemoteStopControl:": {
        "prefix": "components.playercontroller:RemoteStopControl",
        "body": "components.playercontroller:RemoteStopControl(${1:control})",
        "description": " ※Params: \n   (control)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:DoResurrectButton:": {
        "prefix": "components.playercontroller:DoResurrectButton",
        "body": "components.playercontroller:DoResurrectButton()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:OnRemoteStopControl:": {
        "prefix": "components.playercontroller:OnRemoteStopControl",
        "body": "components.playercontroller:OnRemoteStopControl(${1:control})",
        "description": " ※Params: \n   (control)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:RemoteControllerUseItemOnItemFromInvTile:": {
        "prefix": "components.playercontroller:RemoteControllerUseItemOnItemFromInvTile",
        "body": "components.playercontroller:RemoteControllerUseItemOnItemFromInvTile(${1:buffaction},${2:item},${3:active_item})",
        "description": " ※Params: \n   (buffaction)<>[] \n   (item)<>[] \n   (active_item)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:RemoteUseItemFromInvTile:": {
        "prefix": "components.playercontroller:RemoteUseItemFromInvTile",
        "body": "components.playercontroller:RemoteUseItemFromInvTile(${1:buffaction},${2:item})",
        "description": " ※Params: \n   (buffaction)<>[] \n   (item)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:OnRemotePredictWalking:": {
        "prefix": "components.playercontroller:OnRemotePredictWalking",
        "body": "components.playercontroller:OnRemotePredictWalking(${1:x},${2:z},${3:isdirectwalking},${4:isstart})",
        "description": " ※Params: \n   (x)<>[] \n   (z)<>[] \n   (isdirectwalking)<>[] \n   (isstart)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:GetGroundUseSpecialAction:": {
        "prefix": "components.playercontroller:GetGroundUseSpecialAction",
        "body": "components.playercontroller:GetGroundUseSpecialAction(${1:position},${2:right})",
        "description": " ※Params: \n   (position)<>[] \n   (right)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:RemoteControllerUseItemOnSceneFromInvTile:": {
        "prefix": "components.playercontroller:RemoteControllerUseItemOnSceneFromInvTile",
        "body": "components.playercontroller:RemoteControllerUseItemOnSceneFromInvTile(${1:buffaction},${2:item})",
        "description": " ※Params: \n   (buffaction)<>[] \n   (item)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:GetLeftMouseAction:": {
        "prefix": "components.playercontroller:GetLeftMouseAction",
        "body": "components.playercontroller:GetLeftMouseAction()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:RemapMapAction:": {
        "prefix": "components.playercontroller:RemapMapAction",
        "body": "components.playercontroller:RemapMapAction(${1:act},${2:position})",
        "description": " ※Params: \n   (act)<>[] \n   (position)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:GetResurrectButtonAction:": {
        "prefix": "components.playercontroller:GetResurrectButtonAction",
        "body": "components.playercontroller:GetResurrectButtonAction()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:GetRemotePredictPosition:": {
        "prefix": "components.playercontroller:GetRemotePredictPosition",
        "body": "components.playercontroller:GetRemotePredictPosition()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:GetPlatformRelativePosition:": {
        "prefix": "components.playercontroller:GetPlatformRelativePosition",
        "body": "components.playercontroller:GetPlatformRelativePosition(${1:absolute_x},${2:absolute_z})",
        "description": " ※Params: \n   (absolute_x)<>[] \n   (absolute_z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:OnRemoteLeftClick:": {
        "prefix": "components.playercontroller:OnRemoteLeftClick",
        "body": "components.playercontroller:OnRemoteLeftClick(${1:actioncode},${2:position},${3:target},${4:isreleased},${5:controlmodscode},${6:noforce},${7:mod_name},${8:spellbook},${9:spell_id})",
        "description": " ※Params: \n   (actioncode)<>[] \n   (position)<>[] \n   (target)<>[] \n   (isreleased)<>[] \n   (controlmodscode)<>[] \n   (noforce)<>[] \n   (mod_name)<>[] \n   (spellbook)<>[] \n   (spell_id)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:GetRemoteDragPosition:": {
        "prefix": "components.playercontroller:GetRemoteDragPosition",
        "body": "components.playercontroller:GetRemoteDragPosition()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:StartAOETargetingUsing:": {
        "prefix": "components.playercontroller:StartAOETargetingUsing",
        "body": "components.playercontroller:StartAOETargetingUsing(${1:item})",
        "description": " ※Params: \n   (item)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:DoDirectWalking:": {
        "prefix": "components.playercontroller:DoDirectWalking",
        "body": "components.playercontroller:DoDirectWalking(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:GetSceneItemControllerAction:": {
        "prefix": "components.playercontroller:GetSceneItemControllerAction",
        "body": "components.playercontroller:GetSceneItemControllerAction(${1:item})",
        "description": " ※Params: \n   (item)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:IsLocalOrRemoteHopping:": {
        "prefix": "components.playercontroller:IsLocalOrRemoteHopping",
        "body": "components.playercontroller:IsLocalOrRemoteHopping()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:GetAOETargetingPos:": {
        "prefix": "components.playercontroller:GetAOETargetingPos",
        "body": "components.playercontroller:GetAOETargetingPos()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:ControllerTargetLock:": {
        "prefix": "components.playercontroller:ControllerTargetLock",
        "body": "components.playercontroller:ControllerTargetLock(${1:enable})",
        "description": " ※Params: \n   (enable)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:IsControllerTargetingModifierDown:": {
        "prefix": "components.playercontroller:IsControllerTargetingModifierDown",
        "body": "components.playercontroller:IsControllerTargetingModifierDown()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:DoPredictHopping:": {
        "prefix": "components.playercontroller:DoPredictHopping",
        "body": "components.playercontroller:DoPredictHopping(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:RemotePredictOverrideLocomote:": {
        "prefix": "components.playercontroller:RemotePredictOverrideLocomote",
        "body": "components.playercontroller:RemotePredictOverrideLocomote()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:GetCursorInventorySlotAndContainer:": {
        "prefix": "components.playercontroller:GetCursorInventorySlotAndContainer",
        "body": "components.playercontroller:GetCursorInventorySlotAndContainer()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:UpdateControllerTargets:": {
        "prefix": "components.playercontroller:UpdateControllerTargets",
        "body": "components.playercontroller:UpdateControllerTargets(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:DoControllerAltActionButton:": {
        "prefix": "components.playercontroller:DoControllerAltActionButton",
        "body": "components.playercontroller:DoControllerAltActionButton()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:OnRemoteStopWalking:": {
        "prefix": "components.playercontroller:OnRemoteStopWalking",
        "body": "components.playercontroller:OnRemoteStopWalking()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:OnRemoteDragWalking:": {
        "prefix": "components.playercontroller:OnRemoteDragWalking",
        "body": "components.playercontroller:OnRemoteDragWalking(${1:x},${2:z})",
        "description": " ※Params: \n   (x)<>[] \n   (z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:OnRemoteStartHop:": {
        "prefix": "components.playercontroller:OnRemoteStartHop",
        "body": "components.playercontroller:OnRemoteStartHop(${1:x},${2:z},${3:platform})",
        "description": " ※Params: \n   (x)<>[] \n   (z)<>[] \n   (platform)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:GetRemoteDirectVector:": {
        "prefix": "components.playercontroller:GetRemoteDirectVector",
        "body": "components.playercontroller:GetRemoteDirectVector()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:IsAOETargeting:": {
        "prefix": "components.playercontroller:IsAOETargeting",
        "body": "components.playercontroller:IsAOETargeting()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:SetCanUseMap:": {
        "prefix": "components.playercontroller:SetCanUseMap",
        "body": "components.playercontroller:SetCanUseMap(${1:val})",
        "description": " ※Params: \n   (val)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:IsControllerTargetLockEnabled:": {
        "prefix": "components.playercontroller:IsControllerTargetLockEnabled",
        "body": "components.playercontroller:IsControllerTargetLockEnabled()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:OnRemoteStopHopping:": {
        "prefix": "components.playercontroller:OnRemoteStopHopping",
        "body": "components.playercontroller:OnRemoteStopHopping()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:OnControl:": {
        "prefix": "components.playercontroller:OnControl",
        "body": "components.playercontroller:OnControl(${1:control},${2:down})",
        "description": " ※Params: \n   (control)<>[] \n   (down)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:OnWallUpdate:": {
        "prefix": "components.playercontroller:OnWallUpdate",
        "body": "components.playercontroller:OnWallUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:GetHoverTextOverride:": {
        "prefix": "components.playercontroller:GetHoverTextOverride",
        "body": "components.playercontroller:GetHoverTextOverride()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:RepeatHeldAction:": {
        "prefix": "components.playercontroller:RepeatHeldAction",
        "body": "components.playercontroller:RepeatHeldAction()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:GetActiveSpellBook:": {
        "prefix": "components.playercontroller:GetActiveSpellBook",
        "body": "components.playercontroller:GetActiveSpellBook()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:UsingMouse:": {
        "prefix": "components.playercontroller:UsingMouse",
        "body": "components.playercontroller:UsingMouse()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:RemoteInspectButton:": {
        "prefix": "components.playercontroller:RemoteInspectButton",
        "body": "components.playercontroller:RemoteInspectButton(${1:action})",
        "description": " ※Params: \n   (action)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:RemoteStopAllControls:": {
        "prefix": "components.playercontroller:RemoteStopAllControls",
        "body": "components.playercontroller:RemoteStopAllControls()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:GetAttackTarget:": {
        "prefix": "components.playercontroller:GetAttackTarget",
        "body": "components.playercontroller:GetAttackTarget(${1:force_attack},${2:force_target},${3:isretarget},${4:use_remote_predict})",
        "description": " ※Params: \n   (force_attack)<>[] \n   (force_target)<>[] \n   (isretarget)<>[] \n   (use_remote_predict)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:HasAOETargeting:": {
        "prefix": "components.playercontroller:HasAOETargeting",
        "body": "components.playercontroller:HasAOETargeting()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:DoControllerUseItemOnSceneFromInvTile:": {
        "prefix": "components.playercontroller:DoControllerUseItemOnSceneFromInvTile",
        "body": "components.playercontroller:DoControllerUseItemOnSceneFromInvTile(${1:item})",
        "description": " ※Params: \n   (item)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:RemoteMakeRecipeFromMenu:": {
        "prefix": "components.playercontroller:RemoteMakeRecipeFromMenu",
        "body": "components.playercontroller:RemoteMakeRecipeFromMenu(${1:recipe},${2:skin})",
        "description": " ※Params: \n   (recipe)<>[] \n   (skin)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:DoControllerUseItemOnSelfFromInvTile:": {
        "prefix": "components.playercontroller:DoControllerUseItemOnSelfFromInvTile",
        "body": "components.playercontroller:DoControllerUseItemOnSelfFromInvTile(${1:item})",
        "description": " ※Params: \n   (item)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:ToggleController:": {
        "prefix": "components.playercontroller:ToggleController",
        "body": "components.playercontroller:ToggleController(${1:val})",
        "description": " ※Params: \n   (val)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:DoControllerActionButton:": {
        "prefix": "components.playercontroller:DoControllerActionButton",
        "body": "components.playercontroller:DoControllerActionButton()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playercontroller:IsDoingOrWorking:": {
        "prefix": "components.playercontroller:IsDoingOrWorking",
        "body": "components.playercontroller:IsDoingOrWorking()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playerhearing:GetDSPTables:": {
        "prefix": "components.playerhearing:GetDSPTables",
        "body": "components.playerhearing:GetDSPTables()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playerhearing:UpdateDSPTables:": {
        "prefix": "components.playerhearing:UpdateDSPTables",
        "body": "components.playerhearing:UpdateDSPTables()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playerlightningtarget:GetHitChance:": {
        "prefix": "components.playerlightningtarget:GetHitChance",
        "body": "components.playerlightningtarget:GetHitChance()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playerlightningtarget:SetHitChance:": {
        "prefix": "components.playerlightningtarget:SetHitChance",
        "body": "components.playerlightningtarget:SetHitChance(${1:chance})",
        "description": " ※Params: \n   (chance)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playerlightningtarget:DoStrike:": {
        "prefix": "components.playerlightningtarget:DoStrike",
        "body": "components.playerlightningtarget:DoStrike()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playerlightningtarget:SetOnStrikeFn:": {
        "prefix": "components.playerlightningtarget:SetOnStrikeFn",
        "body": "components.playerlightningtarget:SetOnStrikeFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playermetrics:OnRemoveFromEntity:": {
        "prefix": "components.playermetrics:OnRemoveFromEntity",
        "body": "components.playermetrics:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playerprox:SetPlayerAliveMode:设置玩家的触发模式，有三种，在playerprox.lua组件的AliveModes表里，分别为 AliveOnly（只有活着的）、DeadOnly（只有死了的）、DeadOrAlive（死活都可以）": {
        "prefix": "components.playerprox:SetPlayerAliveMode",
        "body": "components.playerprox:SetPlayerAliveMode(${1:alivemode})",
        "description": " ※Params: \n   (alivemode)<boolean>[触发模式] \n ※Description: 设置玩家的触发模式，有三种，在playerprox.lua组件的AliveModes表里，分别为 AliveOnly（只有活着的）、DeadOnly（只有死了的）、DeadOrAlive（死活都可以）\n ※Contributor: @御坂十七号"
    },
    "Component.playerprox:SetLostTargetFn:": {
        "prefix": "components.playerprox:SetLostTargetFn",
        "body": "components.playerprox:SetLostTargetFn(${1:func})",
        "description": " ※Params: \n   (func)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playerprox:SetTarget:": {
        "prefix": "components.playerprox:SetTarget",
        "body": "components.playerprox:SetTarget(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playerprox:SetTargetMode:设置检测目标的模式，共有五种，在playerprox.lua组件的TargetModes表中，分别为：AllPlayers、AnyPlayer、SpecificPlayer、LockOnPlayer、LockAndKeepPlayer，具体区别等大佬补充，一般用AllPlayers即可。": {
        "prefix": "components.playerprox:SetTargetMode",
        "body": "components.playerprox:SetTargetMode(${1:mode},${2:target},${3:override})",
        "description": " ※Params: \n   (mode)<>[] \n   (target)<>[] \n   (override)<>[] \n ※Description: 设置检测目标的模式，共有五种，在playerprox.lua组件的TargetModes表中，分别为：AllPlayers、AnyPlayer、SpecificPlayer、LockOnPlayer、LockAndKeepPlayer，具体区别等大佬补充，一般用AllPlayers即可。\n ※Contributor: @御坂十七号"
    },
    "Component.playerprox:Stop:停止定时任务检测，一般不用修改": {
        "prefix": "components.playerprox:Stop",
        "body": "components.playerprox:Stop()",
        "description": "\n ※Description: 停止定时任务检测，一般不用修改\n ※Contributor: @御坂十七号"
    },
    "Component.playerprox:SetDist:设置远离或靠近的距离,当玩家靠近到near距离时，会触发SetOnPlayerNear设置的方法，far同理。当玩家远离超过far距离时，会触发SetOnPlayerFar设置的方法": {
        "prefix": "components.playerprox:SetDist",
        "body": "components.playerprox:SetDist(${1:near},${2:far})",
        "description": " ※Params: \n   (near)<number>[靠近的距离] \n   (far)<number>[远离的距离] \n ※Description: 设置远离或靠近的距离,当玩家靠近到near距离时，会触发SetOnPlayerNear设置的方法，far同理。当玩家远离超过far距离时，会触发SetOnPlayerFar设置的方法\n ※Contributor: @御坂十七号"
    },
    "Component.playerprox:IsPlayerClose:": {
        "prefix": "components.playerprox:IsPlayerClose",
        "body": "components.playerprox:IsPlayerClose()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playerprox:Schedule:设置定时任务的时间间隔，因为该组件是通过定时检测周围玩家来实现的。一般不用修改。": {
        "prefix": "components.playerprox:Schedule",
        "body": "components.playerprox:Schedule(${1:new_period})",
        "description": " ※Params: \n   (new_period)<number>[定时任务间隔] \n ※Description: 设置定时任务的时间间隔，因为该组件是通过定时检测周围玩家来实现的。一般不用修改。\n ※Contributor: @御坂十七号"
    },
    "Component.playerprox:GetDebugString:打印日志，这里会返回玩家距离远还是近": {
        "prefix": "components.playerprox:GetDebugString",
        "body": "components.playerprox:GetDebugString()",
        "description": "\n ※Description: 打印日志，这里会返回玩家距离远还是近\n ※Contributor: @御坂十七号"
    },
    "Component.playerprox:OnEntityWake:": {
        "prefix": "components.playerprox:OnEntityWake",
        "body": "components.playerprox:OnEntityWake()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playerprox:ForceUpdate:": {
        "prefix": "components.playerprox:ForceUpdate",
        "body": "components.playerprox:ForceUpdate()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playerprox:OnEntitySleep:": {
        "prefix": "components.playerprox:OnEntitySleep",
        "body": "components.playerprox:OnEntitySleep()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playerprox:SetOnPlayerFar:设置当玩家远离时触发的方法，例如：SetOnPlayerFar(function(inst, player) end) inst是有该组件的预制物，player是远离的玩家。": {
        "prefix": "components.playerprox:SetOnPlayerFar",
        "body": "components.playerprox:SetOnPlayerFar(${1:fn})",
        "description": " ※Params: \n   (fn)<function>[方法] \n ※Description: 设置当玩家远离时触发的方法，例如：SetOnPlayerFar(function(inst, player) end) inst是有该组件的预制物，player是远离的玩家。\n ※Contributor: @御坂十七号"
    },
    "Component.playerprox:SetOnPlayerNear:设置当玩家靠近时会触发的方法，例如：SetOnPlayerNear(function(inst, player) end) inst是有该组件的预制物，player是靠近的玩家。": {
        "prefix": "components.playerprox:SetOnPlayerNear",
        "body": "components.playerprox:SetOnPlayerNear(${1:fn})",
        "description": " ※Params: \n   (fn)<function>[方法] \n ※Description: 设置当玩家靠近时会触发的方法，例如：SetOnPlayerNear(function(inst, player) end) inst是有该组件的预制物，player是靠近的玩家。\n ※Contributor: @御坂十七号"
    },
    "Component.playertargetindicator:OnUpdate:": {
        "prefix": "components.playertargetindicator:OnUpdate",
        "body": "components.playertargetindicator:OnUpdate()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playertargetindicator:ShouldRemoveIndicator:": {
        "prefix": "components.playertargetindicator:ShouldRemoveIndicator",
        "body": "components.playertargetindicator:ShouldRemoveIndicator(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playertargetindicator:ShouldShowIndicator:": {
        "prefix": "components.playertargetindicator:ShouldShowIndicator",
        "body": "components.playertargetindicator:ShouldShowIndicator(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playertargetindicator:OnRemoveFromEntity:": {
        "prefix": "components.playertargetindicator:OnRemoveFromEntity",
        "body": "components.playertargetindicator:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playervision:HasNutrientsVision:": {
        "prefix": "components.playervision:HasNutrientsVision",
        "body": "components.playervision:HasNutrientsVision()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playervision:ForceNightVision:": {
        "prefix": "components.playervision:ForceNightVision",
        "body": "components.playervision:ForceNightVision(${1:force})",
        "description": " ※Params: \n   (force)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playervision:HasGoggleVision:": {
        "prefix": "components.playervision:HasGoggleVision",
        "body": "components.playervision:HasGoggleVision()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playervision:PushForcedNightVision:": {
        "prefix": "components.playervision:PushForcedNightVision",
        "body": "components.playervision:PushForcedNightVision(${1:source},${2:priority},${3:customcctable},${4:blend})",
        "description": " ※Params: \n   (source)<>[] \n   (priority)<>[] \n   (customcctable)<>[] \n   (blend)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playervision:GetCCPhaseFn:": {
        "prefix": "components.playervision:GetCCPhaseFn",
        "body": "components.playervision:GetCCPhaseFn()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playervision:HasNightVision:": {
        "prefix": "components.playervision:HasNightVision",
        "body": "components.playervision:HasNightVision()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playervision:SetCustomCCTable:": {
        "prefix": "components.playervision:SetCustomCCTable",
        "body": "components.playervision:SetCustomCCTable(${1:cctable},${2:blend})",
        "description": " ※Params: \n   (cctable)<>[] \n   (blend)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playervision:HasGhostVision:": {
        "prefix": "components.playervision:HasGhostVision",
        "body": "components.playervision:HasGhostVision()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playervision:ForceRoseGlassesVision:": {
        "prefix": "components.playervision:ForceRoseGlassesVision",
        "body": "components.playervision:ForceRoseGlassesVision(${1:force})",
        "description": " ※Params: \n   (force)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playervision:ForceInspectaclesVision:": {
        "prefix": "components.playervision:ForceInspectaclesVision",
        "body": "components.playervision:ForceInspectaclesVision(${1:force})",
        "description": " ※Params: \n   (force)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playervision:PopForcedNightVision:": {
        "prefix": "components.playervision:PopForcedNightVision",
        "body": "components.playervision:PopForcedNightVision(${1:source})",
        "description": " ※Params: \n   (source)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playervision:HasNightmareVision:": {
        "prefix": "components.playervision:HasNightmareVision",
        "body": "components.playervision:HasNightmareVision()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playervision:ForceScrapMonoleVision:": {
        "prefix": "components.playervision:ForceScrapMonoleVision",
        "body": "components.playervision:ForceScrapMonoleVision(${1:force})",
        "description": " ※Params: \n   (force)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playervision:ForceNutrientVision:": {
        "prefix": "components.playervision:ForceNutrientVision",
        "body": "components.playervision:ForceNutrientVision(${1:force})",
        "description": " ※Params: \n   (force)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playervision:HasScrapMonoleVision:": {
        "prefix": "components.playervision:HasScrapMonoleVision",
        "body": "components.playervision:HasScrapMonoleVision()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playervision:UpdateCCTable:": {
        "prefix": "components.playervision:UpdateCCTable",
        "body": "components.playervision:UpdateCCTable()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playervision:GetCCTable:": {
        "prefix": "components.playervision:GetCCTable",
        "body": "components.playervision:GetCCTable()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playervision:SetGhostVision:": {
        "prefix": "components.playervision:SetGhostVision",
        "body": "components.playervision:SetGhostVision(${1:enabled})",
        "description": " ※Params: \n   (enabled)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playervision:SetNightmareVision:": {
        "prefix": "components.playervision:SetNightmareVision",
        "body": "components.playervision:SetNightmareVision(${1:enabled})",
        "description": " ※Params: \n   (enabled)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playervision:HasRoseGlassesVision:": {
        "prefix": "components.playervision:HasRoseGlassesVision",
        "body": "components.playervision:HasRoseGlassesVision()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playervision:ForceGoggleVision:": {
        "prefix": "components.playervision:ForceGoggleVision",
        "body": "components.playervision:ForceGoggleVision(${1:force})",
        "description": " ※Params: \n   (force)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playervision:HasInspectaclesVision:": {
        "prefix": "components.playervision:HasInspectaclesVision",
        "body": "components.playervision:HasInspectaclesVision()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playervoter:HasVoted:": {
        "prefix": "components.playervoter:HasVoted",
        "body": "components.playervoter:HasVoted()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playervoter:CanVote:": {
        "prefix": "components.playervoter:CanVote",
        "body": "components.playervoter:CanVote()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playervoter:SetSelection:": {
        "prefix": "components.playervoter:SetSelection",
        "body": "components.playervoter:SetSelection(${1:sel})",
        "description": " ※Params: \n   (sel)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playervoter:GetSelection:": {
        "prefix": "components.playervoter:GetSelection",
        "body": "components.playervoter:GetSelection()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playervoter:AttachClassified:": {
        "prefix": "components.playervoter:AttachClassified",
        "body": "components.playervoter:AttachClassified(${1:classified})",
        "description": " ※Params: \n   (classified)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playervoter:IsSquelched:": {
        "prefix": "components.playervoter:IsSquelched",
        "body": "components.playervoter:IsSquelched()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playervoter:SubmitVote:": {
        "prefix": "components.playervoter:SubmitVote",
        "body": "components.playervoter:SubmitVote(${1:sel})",
        "description": " ※Params: \n   (sel)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playervoter:SetSquelched:": {
        "prefix": "components.playervoter:SetSquelched",
        "body": "components.playervoter:SetSquelched(${1:val})",
        "description": " ※Params: \n   (val)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.playervoter:DetachClassified:": {
        "prefix": "components.playervoter:DetachClassified",
        "body": "components.playervoter:DetachClassified()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.playervoter:OnRemoveFromEntity:": {
        "prefix": "components.playervoter:OnRemoveFromEntity",
        "body": "components.playervoter:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.pocketwatch:CastSpell:": {
        "prefix": "components.pocketwatch:CastSpell",
        "body": "components.pocketwatch:CastSpell(${1:doer},${2:target},${3:pos})",
        "description": " ※Params: \n   (doer)<>[] \n   (target)<>[] \n   (pos)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.pocketwatch:CanCast:": {
        "prefix": "components.pocketwatch:CanCast",
        "body": "components.pocketwatch:CanCast(${1:doer},${2:target},${3:pos})",
        "description": " ※Params: \n   (doer)<>[] \n   (target)<>[] \n   (pos)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.pocketwatch:OnRemoveFromEntity:": {
        "prefix": "components.pocketwatch:OnRemoveFromEntity",
        "body": "components.pocketwatch:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.pocketwatch_dismantler:Dismantle:": {
        "prefix": "components.pocketwatch_dismantler:Dismantle",
        "body": "components.pocketwatch_dismantler:Dismantle(${1:target},${2:doer})",
        "description": " ※Params: \n   (target)<>[] \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.pocketwatch_dismantler:CanDismantle:": {
        "prefix": "components.pocketwatch_dismantler:CanDismantle",
        "body": "components.pocketwatch_dismantler:CanDismantle(${1:target},${2:doer})",
        "description": " ※Params: \n   (target)<>[] \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.pointofinterest:UpdateRing:": {
        "prefix": "components.pointofinterest:UpdateRing",
        "body": "components.pointofinterest:UpdateRing(${1:ring},${2:dt})",
        "description": " ※Params: \n   (ring)<>[] \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.pointofinterest:UpdateRemovePulse:": {
        "prefix": "components.pointofinterest:UpdateRemovePulse",
        "body": "components.pointofinterest:UpdateRemovePulse(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.pointofinterest:OnRemoveEntity:": {
        "prefix": "components.pointofinterest:OnRemoveEntity",
        "body": "components.pointofinterest:OnRemoveEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.pointofinterest:SetShouldShowFn:": {
        "prefix": "components.pointofinterest:SetShouldShowFn",
        "body": "components.pointofinterest:SetShouldShowFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.pointofinterest:DebugForceShowIndicator:": {
        "prefix": "components.pointofinterest:DebugForceShowIndicator",
        "body": "components.pointofinterest:DebugForceShowIndicator()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.pointofinterest:TriggerPulse:": {
        "prefix": "components.pointofinterest:TriggerPulse",
        "body": "components.pointofinterest:TriggerPulse()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.pointofinterest:RemoveEverything:": {
        "prefix": "components.pointofinterest:RemoveEverything",
        "body": "components.pointofinterest:RemoveEverything()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.pointofinterest:TriggerRemove:": {
        "prefix": "components.pointofinterest:TriggerRemove",
        "body": "components.pointofinterest:TriggerRemove()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.pointofinterest:RemoveHudIndicator:": {
        "prefix": "components.pointofinterest:RemoveHudIndicator",
        "body": "components.pointofinterest:RemoveHudIndicator()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.pointofinterest:ShouldShowHudIndicator:": {
        "prefix": "components.pointofinterest:ShouldShowHudIndicator",
        "body": "components.pointofinterest:ShouldShowHudIndicator(${1:distsq})",
        "description": " ※Params: \n   (distsq)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.pointofinterest:SetHeight:": {
        "prefix": "components.pointofinterest:SetHeight",
        "body": "components.pointofinterest:SetHeight(${1:height})",
        "description": " ※Params: \n   (height)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.pointofinterest:CreateWorldIndicator:": {
        "prefix": "components.pointofinterest:CreateWorldIndicator",
        "body": "components.pointofinterest:CreateWorldIndicator()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.pointofinterest:TryStartUpdating:": {
        "prefix": "components.pointofinterest:TryStartUpdating",
        "body": "components.pointofinterest:TryStartUpdating()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.pointofinterest:OnEntitySleep:": {
        "prefix": "components.pointofinterest:OnEntitySleep",
        "body": "components.pointofinterest:OnEntitySleep()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.pointofinterest:OnEntityWake:": {
        "prefix": "components.pointofinterest:OnEntityWake",
        "body": "components.pointofinterest:OnEntityWake()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.pointofinterest:OnUpdate:": {
        "prefix": "components.pointofinterest:OnUpdate",
        "body": "components.pointofinterest:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.pollinator:GetDebugString:": {
        "prefix": "components.pollinator:GetDebugString",
        "body": "components.pollinator:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.pollinator:HasCollectedEnough:": {
        "prefix": "components.pollinator:HasCollectedEnough",
        "body": "components.pollinator:HasCollectedEnough()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.pollinator:CreateFlower:": {
        "prefix": "components.pollinator:CreateFlower",
        "body": "components.pollinator:CreateFlower()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.pollinator:CanPollinate:": {
        "prefix": "components.pollinator:CanPollinate",
        "body": "components.pollinator:CanPollinate(${1:flower})",
        "description": " ※Params: \n   (flower)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.pollinator:CheckFlowerDensity:": {
        "prefix": "components.pollinator:CheckFlowerDensity",
        "body": "components.pollinator:CheckFlowerDensity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.pollinator:Pollinate:": {
        "prefix": "components.pollinator:Pollinate",
        "body": "components.pollinator:Pollinate(${1:flower})",
        "description": " ※Params: \n   (flower)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.pollinator:OnRemoveFromEntity:": {
        "prefix": "components.pollinator:OnRemoveFromEntity",
        "body": "components.pollinator:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.poppable:Pop:": {
        "prefix": "components.poppable:Pop",
        "body": "components.poppable:Pop()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.portablestructure:SetOnDismantleFn:": {
        "prefix": "components.portablestructure:SetOnDismantleFn",
        "body": "components.portablestructure:SetOnDismantleFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.portablestructure:Dismantle:": {
        "prefix": "components.portablestructure:Dismantle",
        "body": "components.portablestructure:Dismantle(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.positionalwarp:GetHistoryPosition:": {
        "prefix": "components.positionalwarp:GetHistoryPosition",
        "body": "components.positionalwarp:GetHistoryPosition(${1:rewind})",
        "description": " ※Params: \n   (rewind)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.positionalwarp:GetDebugString:": {
        "prefix": "components.positionalwarp:GetDebugString",
        "body": "components.positionalwarp:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.positionalwarp:OnLoad:": {
        "prefix": "components.positionalwarp:OnLoad",
        "body": "components.positionalwarp:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.positionalwarp:SetMarker:": {
        "prefix": "components.positionalwarp:SetMarker",
        "body": "components.positionalwarp:SetMarker(${1:prefab})",
        "description": " ※Params: \n   (prefab)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.positionalwarp:Reset:": {
        "prefix": "components.positionalwarp:Reset",
        "body": "components.positionalwarp:Reset()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.positionalwarp:OnSave:": {
        "prefix": "components.positionalwarp:OnSave",
        "body": "components.positionalwarp:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.positionalwarp:EnableMarker:": {
        "prefix": "components.positionalwarp:EnableMarker",
        "body": "components.positionalwarp:EnableMarker(${1:enable})",
        "description": " ※Params: \n   (enable)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.positionalwarp:SetWarpBackDist:": {
        "prefix": "components.positionalwarp:SetWarpBackDist",
        "body": "components.positionalwarp:SetWarpBackDist(${1:num_cache_points})",
        "description": " ※Params: \n   (num_cache_points)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.positionalwarp:UpdateMarker:": {
        "prefix": "components.positionalwarp:UpdateMarker",
        "body": "components.positionalwarp:UpdateMarker()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.positionalwarp:CachePosition:": {
        "prefix": "components.positionalwarp:CachePosition",
        "body": "components.positionalwarp:CachePosition()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.positionalwarp:OnRemoveEntity:": {
        "prefix": "components.positionalwarp:OnRemoveEntity",
        "body": "components.positionalwarp:OnRemoveEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.positionalwarp:_MakeMarker:": {
        "prefix": "components.positionalwarp:_MakeMarker",
        "body": "components.positionalwarp:_MakeMarker(${1:i},${2:prefab})",
        "description": " ※Params: \n   (i)<>[] \n   (prefab)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.positionalwarp:OnRemoveFromEntity:": {
        "prefix": "components.positionalwarp:OnRemoveFromEntity",
        "body": "components.positionalwarp:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.possessedaxe:Drop:": {
        "prefix": "components.possessedaxe:Drop",
        "body": "components.possessedaxe:Drop()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.possessedaxe:Revert:": {
        "prefix": "components.possessedaxe:Revert",
        "body": "components.possessedaxe:Revert()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.possessedaxe:GetDebugString:": {
        "prefix": "components.possessedaxe:GetDebugString",
        "body": "components.possessedaxe:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.possessedaxe:WaitForPlayer:": {
        "prefix": "components.possessedaxe:WaitForPlayer",
        "body": "components.possessedaxe:WaitForPlayer(${1:userid},${2:delay})",
        "description": " ※Params: \n   (userid)<>[] \n   (delay)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.possessedaxe:StopWaitingForPlayer:": {
        "prefix": "components.possessedaxe:StopWaitingForPlayer",
        "body": "components.possessedaxe:StopWaitingForPlayer()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.possessedaxe:OnSave:": {
        "prefix": "components.possessedaxe:OnSave",
        "body": "components.possessedaxe:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.possessedaxe:LinkToPlayer:": {
        "prefix": "components.possessedaxe:LinkToPlayer",
        "body": "components.possessedaxe:LinkToPlayer(${1:player})",
        "description": " ※Params: \n   (player)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.possessedaxe:OnLoad:": {
        "prefix": "components.possessedaxe:OnLoad",
        "body": "components.possessedaxe:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.powerload:IsIdle:": {
        "prefix": "components.powerload:IsIdle",
        "body": "components.powerload:IsIdle()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.powerload:GetLoad:": {
        "prefix": "components.powerload:GetLoad",
        "body": "components.powerload:GetLoad()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.powerload:SetLoad:": {
        "prefix": "components.powerload:SetLoad",
        "body": "components.powerload:SetLoad(${1:_load},${2:idle})",
        "description": " ※Params: \n   (_load)<>[] \n   (idle)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.preserver:GetPerishRateMultiplier:获取腐败率乘系数": {
        "prefix": "components.preserver:GetPerishRateMultiplier",
        "body": "components.preserver:GetPerishRateMultiplier(${1:item})",
        "description": " ※Params: \n   (item)<table>[物品inst] \n ※Returns: <number>[腐败率乘系数] \n ※Description: 获取腐败率乘系数\n ※Contributor: @Runar"
    },
    "Component.preserver:SetPerishRateMultiplier:设置腐败率乘函系数": {
        "prefix": "components.preserver:SetPerishRateMultiplier",
        "body": "components.preserver:SetPerishRateMultiplier(${1:rate})",
        "description": " ※Params: \n   (rate)<function|number>[腐败率乘函系数]\n      {Params:\n         (inst)<table>[容器inst] \n         (item)<table>[物品inst] \n      Returns:\n         <number>[腐败率乘系数]} \n ※Description: 设置腐败率乘函系数\n ※Contributor: @Runar"
    },
    "Component.projectedeffects:SetOnDecayCallback:": {
        "prefix": "components.projectedeffects:SetOnDecayCallback",
        "body": "components.projectedeffects:SetOnDecayCallback(${1:callback})",
        "description": " ※Params: \n   (callback)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.projectedeffects:SetOnConstructCallback:": {
        "prefix": "components.projectedeffects:SetOnConstructCallback",
        "body": "components.projectedeffects:SetOnConstructCallback(${1:callback})",
        "description": " ※Params: \n   (callback)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.projectedeffects:LockDecay:": {
        "prefix": "components.projectedeffects:LockDecay",
        "body": "components.projectedeffects:LockDecay(${1:locked})",
        "description": " ※Params: \n   (locked)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.projectedeffects:SetConstructTime:": {
        "prefix": "components.projectedeffects:SetConstructTime",
        "body": "components.projectedeffects:SetConstructTime(${1:duration})",
        "description": " ※Params: \n   (duration)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.projectedeffects:Construct:": {
        "prefix": "components.projectedeffects:Construct",
        "body": "components.projectedeffects:Construct()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.projectedeffects:SetPaused:": {
        "prefix": "components.projectedeffects:SetPaused",
        "body": "components.projectedeffects:SetPaused(${1:paused})",
        "description": " ※Params: \n   (paused)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.projectedeffects:OnUpdate:": {
        "prefix": "components.projectedeffects:OnUpdate",
        "body": "components.projectedeffects:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.projectedeffects:MakeOpaque:": {
        "prefix": "components.projectedeffects:MakeOpaque",
        "body": "components.projectedeffects:MakeOpaque()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.projectedeffects:Decay:": {
        "prefix": "components.projectedeffects:Decay",
        "body": "components.projectedeffects:Decay(${1:permanent})",
        "description": " ※Params: \n   (permanent)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.projectedeffects:SetCutoffHeight:": {
        "prefix": "components.projectedeffects:SetCutoffHeight",
        "body": "components.projectedeffects:SetCutoffHeight(${1:cutoffheight})",
        "description": " ※Params: \n   (cutoffheight)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.projectedeffects:SetIntensity:": {
        "prefix": "components.projectedeffects:SetIntensity",
        "body": "components.projectedeffects:SetIntensity(${1:intensity})",
        "description": " ※Params: \n   (intensity)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.projectedeffects:SetDecayTime:": {
        "prefix": "components.projectedeffects:SetDecayTime",
        "body": "components.projectedeffects:SetDecayTime(${1:duration})",
        "description": " ※Params: \n   (duration)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.projectile:SetLaunchOffset:": {
        "prefix": "components.projectile:SetLaunchOffset",
        "body": "components.projectile:SetLaunchOffset(${1:offset})",
        "description": " ※Params: \n   (offset)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.projectile:SetStimuli:": {
        "prefix": "components.projectile:SetStimuli",
        "body": "components.projectile:SetStimuli(${1:stimuli})",
        "description": " ※Params: \n   (stimuli)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.projectile:Stop:": {
        "prefix": "components.projectile:Stop",
        "body": "components.projectile:Stop()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.projectile:SetCanCatch:": {
        "prefix": "components.projectile:SetCanCatch",
        "body": "components.projectile:SetCanCatch(${1:cancatch})",
        "description": " ※Params: \n   (cancatch)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.projectile:Throw:": {
        "prefix": "components.projectile:Throw",
        "body": "components.projectile:Throw(${1:owner},${2:target},${3:attacker})",
        "description": " ※Params: \n   (owner)<>[] \n   (target)<>[] \n   (attacker)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.projectile:SetBounced:": {
        "prefix": "components.projectile:SetBounced",
        "body": "components.projectile:SetBounced(${1:bounced})",
        "description": " ※Params: \n   (bounced)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.projectile:SetHitDist:": {
        "prefix": "components.projectile:SetHitDist",
        "body": "components.projectile:SetHitDist(${1:dist})",
        "description": " ※Params: \n   (dist)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.projectile:DelayVisibility:": {
        "prefix": "components.projectile:DelayVisibility",
        "body": "components.projectile:DelayVisibility(${1:duration})",
        "description": " ※Params: \n   (duration)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.projectile:OnEntitySleep:": {
        "prefix": "components.projectile:OnEntitySleep",
        "body": "components.projectile:OnEntitySleep()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.projectile:SetSpeed:": {
        "prefix": "components.projectile:SetSpeed",
        "body": "components.projectile:SetSpeed(${1:speed})",
        "description": " ※Params: \n   (speed)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.projectile:OnRemoveFromEntity:": {
        "prefix": "components.projectile:OnRemoveFromEntity",
        "body": "components.projectile:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.projectile:Catch:": {
        "prefix": "components.projectile:Catch",
        "body": "components.projectile:Catch(${1:catcher})",
        "description": " ※Params: \n   (catcher)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.projectile:IsThrown:": {
        "prefix": "components.projectile:IsThrown",
        "body": "components.projectile:IsThrown()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.projectile:OnUpdate:": {
        "prefix": "components.projectile:OnUpdate",
        "body": "components.projectile:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.projectile:SetOnPreHitFn:": {
        "prefix": "components.projectile:SetOnPreHitFn",
        "body": "components.projectile:SetOnPreHitFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.projectile:SetOnMissFn:": {
        "prefix": "components.projectile:SetOnMissFn",
        "body": "components.projectile:SetOnMissFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.projectile:OnEntityWake:": {
        "prefix": "components.projectile:OnEntityWake",
        "body": "components.projectile:OnEntityWake()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.projectile:Hit:": {
        "prefix": "components.projectile:Hit",
        "body": "components.projectile:Hit(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.projectile:SetOnCaughtFn:": {
        "prefix": "components.projectile:SetOnCaughtFn",
        "body": "components.projectile:SetOnCaughtFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.projectile:SetOnHitFn:": {
        "prefix": "components.projectile:SetOnHitFn",
        "body": "components.projectile:SetOnHitFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.projectile:SetOnThrownFn:": {
        "prefix": "components.projectile:SetOnThrownFn",
        "body": "components.projectile:SetOnThrownFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.projectile:GetDebugString:": {
        "prefix": "components.projectile:GetDebugString",
        "body": "components.projectile:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.projectile:Miss:": {
        "prefix": "components.projectile:Miss",
        "body": "components.projectile:Miss(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.projectile:RotateToTarget:": {
        "prefix": "components.projectile:RotateToTarget",
        "body": "components.projectile:RotateToTarget(${1:dest})",
        "description": " ※Params: \n   (dest)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.projectile:SetHoming:": {
        "prefix": "components.projectile:SetHoming",
        "body": "components.projectile:SetHoming(${1:homing})",
        "description": " ※Params: \n   (homing)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.projectile:IsBounced:": {
        "prefix": "components.projectile:IsBounced",
        "body": "components.projectile:IsBounced()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.projectile:SetRange:": {
        "prefix": "components.projectile:SetRange",
        "body": "components.projectile:SetRange(${1:range})",
        "description": " ※Params: \n   (range)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.propagator:StartUpdating:": {
        "prefix": "components.propagator:StartUpdating",
        "body": "components.propagator:StartUpdating()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.propagator:SetOnFlashPoint:": {
        "prefix": "components.propagator:SetOnFlashPoint",
        "body": "components.propagator:SetOnFlashPoint(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.propagator:StopSpreading:": {
        "prefix": "components.propagator:StopSpreading",
        "body": "components.propagator:StopSpreading(${1:reset},${2:heatpct})",
        "description": " ※Params: \n   (reset)<>[] \n   (heatpct)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.propagator:StartSpreading:": {
        "prefix": "components.propagator:StartSpreading",
        "body": "components.propagator:StartSpreading(${1:source})",
        "description": " ※Params: \n   (source)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.propagator:StopUpdating:": {
        "prefix": "components.propagator:StopUpdating",
        "body": "components.propagator:StopUpdating()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.propagator:OnUpdate:": {
        "prefix": "components.propagator:OnUpdate",
        "body": "components.propagator:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.propagator:GetDebugString:": {
        "prefix": "components.propagator:GetDebugString",
        "body": "components.propagator:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.propagator:GetHeatResistance:": {
        "prefix": "components.propagator:GetHeatResistance",
        "body": "components.propagator:GetHeatResistance()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.propagator:Flash:": {
        "prefix": "components.propagator:Flash",
        "body": "components.propagator:Flash()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.propagator:CalculateHeatCap:": {
        "prefix": "components.propagator:CalculateHeatCap",
        "body": "components.propagator:CalculateHeatCap()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.propagator:AddHeat:": {
        "prefix": "components.propagator:AddHeat",
        "body": "components.propagator:AddHeat(${1:amount},${2:source})",
        "description": " ※Params: \n   (amount)<>[] \n   (source)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.propagator:OnRemoveFromEntity:": {
        "prefix": "components.propagator:OnRemoveFromEntity",
        "body": "components.propagator:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.prophider:SetOnVisibleFn:": {
        "prefix": "components.prophider:SetOnVisibleFn",
        "body": "components.prophider:SetOnVisibleFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.prophider:SetOnUnhideFn:": {
        "prefix": "components.prophider:SetOnUnhideFn",
        "body": "components.prophider:SetOnUnhideFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.prophider:SetWillUnhideFn:": {
        "prefix": "components.prophider:SetWillUnhideFn",
        "body": "components.prophider:SetWillUnhideFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.prophider:SetPropCreationFn:": {
        "prefix": "components.prophider:SetPropCreationFn",
        "body": "components.prophider:SetPropCreationFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.prophider:ShowFromProp:": {
        "prefix": "components.prophider:ShowFromProp",
        "body": "components.prophider:ShowFromProp()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.prophider:GetDebugString:": {
        "prefix": "components.prophider:GetDebugString",
        "body": "components.prophider:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.prophider:OnLoad:": {
        "prefix": "components.prophider:OnLoad",
        "body": "components.prophider:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.prophider:HideWithProp:": {
        "prefix": "components.prophider:HideWithProp",
        "body": "components.prophider:HideWithProp(${1:duration},${2:counter})",
        "description": " ※Params: \n   (duration)<>[] \n   (counter)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.prophider:OnSave:": {
        "prefix": "components.prophider:OnSave",
        "body": "components.prophider:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.prophider:OnEntityWake:": {
        "prefix": "components.prophider:OnEntityWake",
        "body": "components.prophider:OnEntityWake()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.prophider:GenerateHideTime:": {
        "prefix": "components.prophider:GenerateHideTime",
        "body": "components.prophider:GenerateHideTime()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.prophider:SetOnHideFn:": {
        "prefix": "components.prophider:SetOnHideFn",
        "body": "components.prophider:SetOnHideFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.prophider:ClearHideTask:": {
        "prefix": "components.prophider:ClearHideTask",
        "body": "components.prophider:ClearHideTask()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.prototyper:Activate:": {
        "prefix": "components.prototyper:Activate",
        "body": "components.prototyper:Activate(${1:doer},${2:recipe})",
        "description": " ※Params: \n   (doer)<>[] \n   (recipe)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.prototyper:GetTechTrees:": {
        "prefix": "components.prototyper:GetTechTrees",
        "body": "components.prototyper:GetTechTrees()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.prototyper:TurnOff:": {
        "prefix": "components.prototyper:TurnOff",
        "body": "components.prototyper:TurnOff(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.prototyper:TurnOn:": {
        "prefix": "components.prototyper:TurnOn",
        "body": "components.prototyper:TurnOn(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.prototyper:OnRemoveFromEntity:": {
        "prefix": "components.prototyper:OnRemoveFromEntity",
        "body": "components.prototyper:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.questowner:CanBeginQuest:": {
        "prefix": "components.questowner:CanBeginQuest",
        "body": "components.questowner:CanBeginQuest(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.questowner:AbandonQuest:": {
        "prefix": "components.questowner:AbandonQuest",
        "body": "components.questowner:AbandonQuest(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.questowner:CompleteQuest:": {
        "prefix": "components.questowner:CompleteQuest",
        "body": "components.questowner:CompleteQuest()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.questowner:SetOnAbandonQuest:": {
        "prefix": "components.questowner:SetOnAbandonQuest",
        "body": "components.questowner:SetOnAbandonQuest(${1:on_abandon_quest})",
        "description": " ※Params: \n   (on_abandon_quest)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.questowner:OnLoad:": {
        "prefix": "components.questowner:OnLoad",
        "body": "components.questowner:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.questowner:SetOnCompleteQuest:": {
        "prefix": "components.questowner:SetOnCompleteQuest",
        "body": "components.questowner:SetOnCompleteQuest(${1:on_complete_quest})",
        "description": " ※Params: \n   (on_complete_quest)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.questowner:CanAbandonQuest:": {
        "prefix": "components.questowner:CanAbandonQuest",
        "body": "components.questowner:CanAbandonQuest(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.questowner:BeginQuest:": {
        "prefix": "components.questowner:BeginQuest",
        "body": "components.questowner:BeginQuest(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.questowner:SetOnBeginQuest:": {
        "prefix": "components.questowner:SetOnBeginQuest",
        "body": "components.questowner:SetOnBeginQuest(${1:on_begin_quest})",
        "description": " ※Params: \n   (on_begin_quest)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.questowner:OnSave:": {
        "prefix": "components.questowner:OnSave",
        "body": "components.questowner:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.questowner:OnRemoveFromEntity:": {
        "prefix": "components.questowner:OnRemoveFromEntity",
        "body": "components.questowner:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.raindome:GetActiveRadius:": {
        "prefix": "components.raindome:GetActiveRadius",
        "body": "components.raindome:GetActiveRadius()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.raindome:OnUpdate:": {
        "prefix": "components.raindome:OnUpdate",
        "body": "components.raindome:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.raindome:SetRadius:": {
        "prefix": "components.raindome:SetRadius",
        "body": "components.raindome:SetRadius(${1:radius})",
        "description": " ※Params: \n   (radius)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.raindome:Disable:": {
        "prefix": "components.raindome:Disable",
        "body": "components.raindome:Disable()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.raindome:SetActiveRadius_Internal:": {
        "prefix": "components.raindome:SetActiveRadius_Internal",
        "body": "components.raindome:SetActiveRadius_Internal(${1:new},${2:old})",
        "description": " ※Params: \n   (new)<>[] \n   (old)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.raindome:OnRemoveEntity:": {
        "prefix": "components.raindome:OnRemoveEntity",
        "body": "components.raindome:OnRemoveEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.raindome:Enable:": {
        "prefix": "components.raindome:Enable",
        "body": "components.raindome:Enable()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.raindome:OnRemoveFromEntity:": {
        "prefix": "components.raindome:OnRemoveFromEntity",
        "body": "components.raindome:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.raindomewatcher:IsUnderRainDome:": {
        "prefix": "components.raindomewatcher:IsUnderRainDome",
        "body": "components.raindomewatcher:IsUnderRainDome()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.raindomewatcher:OnUpdate:": {
        "prefix": "components.raindomewatcher:OnUpdate",
        "body": "components.raindomewatcher:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.rainimmunity:RemoveSource:": {
        "prefix": "components.rainimmunity:RemoveSource",
        "body": "components.rainimmunity:RemoveSource(${1:src})",
        "description": " ※Params: \n   (src)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.rainimmunity:AddSource:": {
        "prefix": "components.rainimmunity:AddSource",
        "body": "components.rainimmunity:AddSource(${1:src})",
        "description": " ※Params: \n   (src)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.rainimmunity:OnRemoveFromEntity:": {
        "prefix": "components.rainimmunity:OnRemoveFromEntity",
        "body": "components.rainimmunity:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.rampingspawner:GetCurrentWave:": {
        "prefix": "components.rampingspawner:GetCurrentWave",
        "body": "components.rampingspawner:GetCurrentWave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.rampingspawner:DoWave:": {
        "prefix": "components.rampingspawner:DoWave",
        "body": "components.rampingspawner:DoWave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.rampingspawner:Start:": {
        "prefix": "components.rampingspawner:Start",
        "body": "components.rampingspawner:Start()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.rampingspawner:GetSpawnRot:": {
        "prefix": "components.rampingspawner:GetSpawnRot",
        "body": "components.rampingspawner:GetSpawnRot()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.rampingspawner:Reset:": {
        "prefix": "components.rampingspawner:Reset",
        "body": "components.rampingspawner:Reset()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.rampingspawner:LoadPostPass:": {
        "prefix": "components.rampingspawner:LoadPostPass",
        "body": "components.rampingspawner:LoadPostPass(${1:ents},${2:data})",
        "description": " ※Params: \n   (ents)<>[] \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.rampingspawner:GetWaveSize:": {
        "prefix": "components.rampingspawner:GetWaveSize",
        "body": "components.rampingspawner:GetWaveSize()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.rampingspawner:OnSpawnDeath:": {
        "prefix": "components.rampingspawner:OnSpawnDeath",
        "body": "components.rampingspawner:OnSpawnDeath(${1:spawn})",
        "description": " ※Params: \n   (spawn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.rampingspawner:OnRemoveFromEntity:": {
        "prefix": "components.rampingspawner:OnRemoveFromEntity",
        "body": "components.rampingspawner:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.rampingspawner:StopTrackingSpawn:": {
        "prefix": "components.rampingspawner:StopTrackingSpawn",
        "body": "components.rampingspawner:StopTrackingSpawn(${1:spawn})",
        "description": " ※Params: \n   (spawn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.rampingspawner:TrackSpawn:": {
        "prefix": "components.rampingspawner:TrackSpawn",
        "body": "components.rampingspawner:TrackSpawn(${1:spawn})",
        "description": " ※Params: \n   (spawn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.rampingspawner:SpawnEntity:": {
        "prefix": "components.rampingspawner:SpawnEntity",
        "body": "components.rampingspawner:SpawnEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.rampingspawner:OnLoad:": {
        "prefix": "components.rampingspawner:OnLoad",
        "body": "components.rampingspawner:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.rampingspawner:IsActive:": {
        "prefix": "components.rampingspawner:IsActive",
        "body": "components.rampingspawner:IsActive()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.rampingspawner:Stop:": {
        "prefix": "components.rampingspawner:Stop",
        "body": "components.rampingspawner:Stop()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.rampingspawner:OnSave:": {
        "prefix": "components.rampingspawner:OnSave",
        "body": "components.rampingspawner:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.rampingspawner:GetSpawnPos:": {
        "prefix": "components.rampingspawner:GetSpawnPos",
        "body": "components.rampingspawner:GetSpawnPos()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.reader:Read:": {
        "prefix": "components.reader:Read",
        "body": "components.reader:Read(${1:book})",
        "description": " ※Params: \n   (book)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.reader:SetAspiringBookworm:": {
        "prefix": "components.reader:SetAspiringBookworm",
        "body": "components.reader:SetAspiringBookworm(${1:bookworm})",
        "description": " ※Params: \n   (bookworm)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.reader:GetSanityPenaltyMultiplier:": {
        "prefix": "components.reader:GetSanityPenaltyMultiplier",
        "body": "components.reader:GetSanityPenaltyMultiplier()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.reader:IsAspiringBookworm:": {
        "prefix": "components.reader:IsAspiringBookworm",
        "body": "components.reader:IsAspiringBookworm()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.reader:SetOnReadFn:": {
        "prefix": "components.reader:SetOnReadFn",
        "body": "components.reader:SetOnReadFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.reader:SetSanityPenaltyMultiplier:": {
        "prefix": "components.reader:SetSanityPenaltyMultiplier",
        "body": "components.reader:SetSanityPenaltyMultiplier(${1:mult})",
        "description": " ※Params: \n   (mult)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.reader:OnRemoveFromEntity:": {
        "prefix": "components.reader:OnRemoveFromEntity",
        "body": "components.reader:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.recallmark:MarkPosition:": {
        "prefix": "components.recallmark:MarkPosition",
        "body": "components.recallmark:MarkPosition(${1:recall_x},${2:recall_y},${3:recall_z},${4:recall_worldid})",
        "description": " ※Params: \n   (recall_x)<>[] \n   (recall_y)<>[] \n   (recall_z)<>[] \n   (recall_worldid)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.recallmark:Copy:": {
        "prefix": "components.recallmark:Copy",
        "body": "components.recallmark:Copy(${1:rhs})",
        "description": " ※Params: \n   (rhs)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.recallmark:OnLoad:": {
        "prefix": "components.recallmark:OnLoad",
        "body": "components.recallmark:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.recallmark:OnSave:": {
        "prefix": "components.recallmark:OnSave",
        "body": "components.recallmark:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.recallmark:IsMarkedForSameShard:": {
        "prefix": "components.recallmark:IsMarkedForSameShard",
        "body": "components.recallmark:IsMarkedForSameShard()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.recallmark:GetMarkedPosition:": {
        "prefix": "components.recallmark:GetMarkedPosition",
        "body": "components.recallmark:GetMarkedPosition()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.recallmark:IsMarked:": {
        "prefix": "components.recallmark:IsMarked",
        "body": "components.recallmark:IsMarked()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.rechargeable:SetPercent:": {
        "prefix": "components.rechargeable:SetPercent",
        "body": "components.rechargeable:SetPercent(${1:pct})",
        "description": " ※Params: \n   (pct)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.rechargeable:SetChargeTime:": {
        "prefix": "components.rechargeable:SetChargeTime",
        "body": "components.rechargeable:SetChargeTime(${1:t})",
        "description": " ※Params: \n   (t)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.rechargeable:OnLoad:": {
        "prefix": "components.rechargeable:OnLoad",
        "body": "components.rechargeable:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.rechargeable:SetOnDischargedFn:": {
        "prefix": "components.rechargeable:SetOnDischargedFn",
        "body": "components.rechargeable:SetOnDischargedFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.rechargeable:OnRemoveFromEntity:": {
        "prefix": "components.rechargeable:OnRemoveFromEntity",
        "body": "components.rechargeable:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.rechargeable:RemoveChargeTimeMod:": {
        "prefix": "components.rechargeable:RemoveChargeTimeMod",
        "body": "components.rechargeable:RemoveChargeTimeMod(${1:source},${2:key})",
        "description": " ※Params: \n   (source)<>[] \n   (key)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.rechargeable:GetDebugString:": {
        "prefix": "components.rechargeable:GetDebugString",
        "body": "components.rechargeable:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.rechargeable:SetOnChargedFn:": {
        "prefix": "components.rechargeable:SetOnChargedFn",
        "body": "components.rechargeable:SetOnChargedFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.rechargeable:GetPercent:": {
        "prefix": "components.rechargeable:GetPercent",
        "body": "components.rechargeable:GetPercent()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.rechargeable:IsCharged:": {
        "prefix": "components.rechargeable:IsCharged",
        "body": "components.rechargeable:IsCharged()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.rechargeable:SetChargeTimeMod:": {
        "prefix": "components.rechargeable:SetChargeTimeMod",
        "body": "components.rechargeable:SetChargeTimeMod(${1:source},${2:key},${3:mod})",
        "description": " ※Params: \n   (source)<>[] \n   (key)<>[] \n   (mod)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.rechargeable:GetTimeToCharge:": {
        "prefix": "components.rechargeable:GetTimeToCharge",
        "body": "components.rechargeable:GetTimeToCharge()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.rechargeable:GetRechargeTime:": {
        "prefix": "components.rechargeable:GetRechargeTime",
        "body": "components.rechargeable:GetRechargeTime()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.rechargeable:GetChargeTime:": {
        "prefix": "components.rechargeable:GetChargeTime",
        "body": "components.rechargeable:GetChargeTime()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.rechargeable:SetMaxCharge:": {
        "prefix": "components.rechargeable:SetMaxCharge",
        "body": "components.rechargeable:SetMaxCharge(${1:val})",
        "description": " ※Params: \n   (val)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.rechargeable:Discharge:": {
        "prefix": "components.rechargeable:Discharge",
        "body": "components.rechargeable:Discharge(${1:chargetime})",
        "description": " ※Params: \n   (chargetime)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.rechargeable:GetCharge:": {
        "prefix": "components.rechargeable:GetCharge",
        "body": "components.rechargeable:GetCharge()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.rechargeable:SetCharge:": {
        "prefix": "components.rechargeable:SetCharge",
        "body": "components.rechargeable:SetCharge(${1:val},${2:overtime})",
        "description": " ※Params: \n   (val)<>[] \n   (overtime)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.rechargeable:OnSave:": {
        "prefix": "components.rechargeable:OnSave",
        "body": "components.rechargeable:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.rechargeable:OnUpdate:": {
        "prefix": "components.rechargeable:OnUpdate",
        "body": "components.rechargeable:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.recipescanner:Scan:": {
        "prefix": "components.recipescanner:Scan",
        "body": "components.recipescanner:Scan(${1:target},${2:doer})",
        "description": " ※Params: \n   (target)<>[] \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.recipescanner:SetOnScannedFn:": {
        "prefix": "components.recipescanner:SetOnScannedFn",
        "body": "components.recipescanner:SetOnScannedFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.recipescanner:OnRemoveFromEntity:": {
        "prefix": "components.recipescanner:OnRemoveFromEntity",
        "body": "components.recipescanner:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.recipestockpile:OnItemCrafted:": {
        "prefix": "components.recipestockpile:OnItemCrafted",
        "body": "components.recipestockpile:OnItemCrafted(${1:recipe})",
        "description": " ※Params: \n   (recipe)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.recipestockpile:OnLoad:": {
        "prefix": "components.recipestockpile:OnLoad",
        "body": "components.recipestockpile:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.recipestockpile:GetDebugString:": {
        "prefix": "components.recipestockpile:GetDebugString",
        "body": "components.recipestockpile:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.recipestockpile:RemoveAllStock:": {
        "prefix": "components.recipestockpile:RemoveAllStock",
        "body": "components.recipestockpile:RemoveAllStock(${1:allow_restock})",
        "description": " ※Params: \n   (allow_restock)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.recipestockpile:FullyRestockItem:": {
        "prefix": "components.recipestockpile:FullyRestockItem",
        "body": "components.recipestockpile:FullyRestockItem(${1:recipe})",
        "description": " ※Params: \n   (recipe)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.recipestockpile:RemoveStock:": {
        "prefix": "components.recipestockpile:RemoveStock",
        "body": "components.recipestockpile:RemoveStock(${1:recipe},${2:allow_restock})",
        "description": " ※Params: \n   (recipe)<>[] \n   (allow_restock)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.recipestockpile:SetupItem:": {
        "prefix": "components.recipestockpile:SetupItem",
        "body": "components.recipestockpile:SetupItem(${1:data},${2:start_restock_timer})",
        "description": " ※Params: \n   (data)<>[] \n   (start_restock_timer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.recipestockpile:HasAnyStock:": {
        "prefix": "components.recipestockpile:HasAnyStock",
        "body": "components.recipestockpile:HasAnyStock()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.recipestockpile:OnSave:": {
        "prefix": "components.recipestockpile:OnSave",
        "body": "components.recipestockpile:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.recipestockpile:OnRemoveFromEntity:": {
        "prefix": "components.recipestockpile:OnRemoveFromEntity",
        "body": "components.recipestockpile:OnRemoveFromEntity(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.remoteteleporter:Teleport_Internal:": {
        "prefix": "components.remoteteleporter:Teleport_Internal",
        "body": "components.remoteteleporter:Teleport_Internal(${1:target},${2:from_x},${3:from_z},${4:to_x},${5:to_z},${6:doer})",
        "description": " ※Params: \n   (target)<>[] \n   (from_x)<>[] \n   (from_z)<>[] \n   (to_x)<>[] \n   (to_z)<>[] \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.remoteteleporter:Teleport:": {
        "prefix": "components.remoteteleporter:Teleport",
        "body": "components.remoteteleporter:Teleport(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.remoteteleporter:SetNearbyItems:": {
        "prefix": "components.remoteteleporter:SetNearbyItems",
        "body": "components.remoteteleporter:SetNearbyItems(${1:nearbyitems})",
        "description": " ※Params: \n   (nearbyitems)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.remoteteleporter:SetOnStartTeleportFn:": {
        "prefix": "components.remoteteleporter:SetOnStartTeleportFn",
        "body": "components.remoteteleporter:SetOnStartTeleportFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.remoteteleporter:SetOnStopTeleportFn:": {
        "prefix": "components.remoteteleporter:SetOnStopTeleportFn",
        "body": "components.remoteteleporter:SetOnStopTeleportFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.remoteteleporter:SetItemTeleportRadius:": {
        "prefix": "components.remoteteleporter:SetItemTeleportRadius",
        "body": "components.remoteteleporter:SetItemTeleportRadius(${1:radius})",
        "description": " ※Params: \n   (radius)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.remoteteleporter:SetCheckDestinationFn:": {
        "prefix": "components.remoteteleporter:SetCheckDestinationFn",
        "body": "components.remoteteleporter:SetCheckDestinationFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.remoteteleporter:OnStartTeleport:": {
        "prefix": "components.remoteteleporter:OnStartTeleport",
        "body": "components.remoteteleporter:OnStartTeleport(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.remoteteleporter:Teleport_GetNearbyItems:": {
        "prefix": "components.remoteteleporter:Teleport_GetNearbyItems",
        "body": "components.remoteteleporter:Teleport_GetNearbyItems(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.remoteteleporter:SetCanActivateFn:": {
        "prefix": "components.remoteteleporter:SetCanActivateFn",
        "body": "components.remoteteleporter:SetCanActivateFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.remoteteleporter:CanActivate:": {
        "prefix": "components.remoteteleporter:CanActivate",
        "body": "components.remoteteleporter:CanActivate(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.remoteteleporter:OnStopTeleport:": {
        "prefix": "components.remoteteleporter:OnStopTeleport",
        "body": "components.remoteteleporter:OnStopTeleport(${1:doer},${2:success})",
        "description": " ※Params: \n   (doer)<>[] \n   (success)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.remoteteleporter:SetOnTeleportedFn:": {
        "prefix": "components.remoteteleporter:SetOnTeleportedFn",
        "body": "components.remoteteleporter:SetOnTeleportedFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.repairable:SetHealthRepairable:": {
        "prefix": "components.repairable:SetHealthRepairable",
        "body": "components.repairable:SetHealthRepairable(${1:repairable})",
        "description": " ※Params: \n   (repairable)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.repairable:Repair:": {
        "prefix": "components.repairable:Repair",
        "body": "components.repairable:Repair(${1:doer},${2:repair_item})",
        "description": " ※Params: \n   (doer)<>[] \n   (repair_item)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.repairable:NeedsRepairs:": {
        "prefix": "components.repairable:NeedsRepairs",
        "body": "components.repairable:NeedsRepairs()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.repairable:SetFiniteUsesRepairable:": {
        "prefix": "components.repairable:SetFiniteUsesRepairable",
        "body": "components.repairable:SetFiniteUsesRepairable(${1:repairable})",
        "description": " ※Params: \n   (repairable)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.repairable:SetWorkRepairable:": {
        "prefix": "components.repairable:SetWorkRepairable",
        "body": "components.repairable:SetWorkRepairable(${1:repairable})",
        "description": " ※Params: \n   (repairable)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.repairable:OnRemoveFromEntity:": {
        "prefix": "components.repairable:OnRemoveFromEntity",
        "body": "components.repairable:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.repairer:OnRemoveFromEntity:": {
        "prefix": "components.repairer:OnRemoveFromEntity",
        "body": "components.repairer:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.repellent:AddIgnoreTag:": {
        "prefix": "components.repellent:AddIgnoreTag",
        "body": "components.repellent:AddIgnoreTag(${1:tag})",
        "description": " ※Params: \n   (tag)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.repellent:Repel:": {
        "prefix": "components.repellent:Repel",
        "body": "components.repellent:Repel(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.repellent:RemoveRepelTag:": {
        "prefix": "components.repellent:RemoveRepelTag",
        "body": "components.repellent:RemoveRepelTag(${1:tag})",
        "description": " ※Params: \n   (tag)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.repellent:SetOnlyRepelsFollowers:": {
        "prefix": "components.repellent:SetOnlyRepelsFollowers",
        "body": "components.repellent:SetOnlyRepelsFollowers(${1:enabled})",
        "description": " ※Params: \n   (enabled)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.repellent:AddRepelTag:": {
        "prefix": "components.repellent:AddRepelTag",
        "body": "components.repellent:AddRepelTag(${1:tag})",
        "description": " ※Params: \n   (tag)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.repellent:SetOnRepelFollowerFn:": {
        "prefix": "components.repellent:SetOnRepelFollowerFn",
        "body": "components.repellent:SetOnRepelFollowerFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.repellent:SetRadius:": {
        "prefix": "components.repellent:SetRadius",
        "body": "components.repellent:SetRadius(${1:radius})",
        "description": " ※Params: \n   (radius)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.repellent:SetUseAmount:": {
        "prefix": "components.repellent:SetUseAmount",
        "body": "components.repellent:SetUseAmount(${1:amount})",
        "description": " ※Params: \n   (amount)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.repellent:RemoveIgnoreTag:": {
        "prefix": "components.repellent:RemoveIgnoreTag",
        "body": "components.repellent:RemoveIgnoreTag(${1:tag})",
        "description": " ※Params: \n   (tag)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.replayproxy:SetRealEntityGUID:": {
        "prefix": "components.replayproxy:SetRealEntityGUID",
        "body": "components.replayproxy:SetRealEntityGUID(${1:guid})",
        "description": " ※Params: \n   (guid)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.replayproxy:GetRealEntityPrefabName:": {
        "prefix": "components.replayproxy:GetRealEntityPrefabName",
        "body": "components.replayproxy:GetRealEntityPrefabName()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.replayproxy:GetRealEntityGUID:": {
        "prefix": "components.replayproxy:GetRealEntityGUID",
        "body": "components.replayproxy:GetRealEntityGUID()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.replayproxy:SetRealEntityPrefabName:": {
        "prefix": "components.replayproxy:SetRealEntityPrefabName",
        "body": "components.replayproxy:SetRealEntityPrefabName(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.researchpointconverter:Activate:": {
        "prefix": "components.researchpointconverter:Activate",
        "body": "components.researchpointconverter:Activate()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.researchpointconverter:TurnOn:": {
        "prefix": "components.researchpointconverter:TurnOn",
        "body": "components.researchpointconverter:TurnOn()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.researchpointconverter:TurnOff:": {
        "prefix": "components.researchpointconverter:TurnOff",
        "body": "components.researchpointconverter:TurnOff()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.resistance:RemoveResistance:": {
        "prefix": "components.resistance:RemoveResistance",
        "body": "components.resistance:RemoveResistance(${1:tag})",
        "description": " ※Params: \n   (tag)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.resistance:AddResistance:": {
        "prefix": "components.resistance:AddResistance",
        "body": "components.resistance:AddResistance(${1:tag})",
        "description": " ※Params: \n   (tag)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.resistance:ShouldResistDamage:": {
        "prefix": "components.resistance:ShouldResistDamage",
        "body": "components.resistance:ShouldResistDamage()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.resistance:HasResistance:": {
        "prefix": "components.resistance:HasResistance",
        "body": "components.resistance:HasResistance(${1:attacker},${2:weapon})",
        "description": " ※Params: \n   (attacker)<>[] \n   (weapon)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.resistance:HasResistanceToTag:": {
        "prefix": "components.resistance:HasResistanceToTag",
        "body": "components.resistance:HasResistanceToTag(${1:tag})",
        "description": " ※Params: \n   (tag)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.resistance:GetDebugString:": {
        "prefix": "components.resistance:GetDebugString",
        "body": "components.resistance:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.resistance:ResistDamage:": {
        "prefix": "components.resistance:ResistDamage",
        "body": "components.resistance:ResistDamage(${1:damage_amount})",
        "description": " ※Params: \n   (damage_amount)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.resistance:SetShouldResistFn:": {
        "prefix": "components.resistance:SetShouldResistFn",
        "body": "components.resistance:SetShouldResistFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.resistance:SetOnResistDamageFn:": {
        "prefix": "components.resistance:SetOnResistDamageFn",
        "body": "components.resistance:SetOnResistDamageFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.reticule:UpdateColour:": {
        "prefix": "components.reticule:UpdateColour",
        "body": "components.reticule:UpdateColour()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.reticule:DestroyReticule:": {
        "prefix": "components.reticule:DestroyReticule",
        "body": "components.reticule:DestroyReticule()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.reticule:ShouldHide:": {
        "prefix": "components.reticule:ShouldHide",
        "body": "components.reticule:ShouldHide()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.reticule:UpdateTwinStickMode1:": {
        "prefix": "components.reticule:UpdateTwinStickMode1",
        "body": "components.reticule:UpdateTwinStickMode1()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.reticule:CreateReticule:": {
        "prefix": "components.reticule:CreateReticule",
        "body": "components.reticule:CreateReticule()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.reticule:UpdatePosition:": {
        "prefix": "components.reticule:UpdatePosition",
        "body": "components.reticule:UpdatePosition(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.reticule:ClearTwinStickOverrides:": {
        "prefix": "components.reticule:ClearTwinStickOverrides",
        "body": "components.reticule:ClearTwinStickOverrides()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.reticule:UpdateTwinStickMode2:": {
        "prefix": "components.reticule:UpdateTwinStickMode2",
        "body": "components.reticule:UpdateTwinStickMode2()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.reticule:OnCameraUpdate:": {
        "prefix": "components.reticule:OnCameraUpdate",
        "body": "components.reticule:OnCameraUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.reticule:Blip:": {
        "prefix": "components.reticule:Blip",
        "body": "components.reticule:Blip()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.reticule:PingReticuleAt:": {
        "prefix": "components.reticule:PingReticuleAt",
        "body": "components.reticule:PingReticuleAt(${1:pos})",
        "description": " ※Params: \n   (pos)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.reticule:OnUpdate:": {
        "prefix": "components.reticule:OnUpdate",
        "body": "components.reticule:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.revivablecorpse:CanBeRevivedBy:": {
        "prefix": "components.revivablecorpse:CanBeRevivedBy",
        "body": "components.revivablecorpse:CanBeRevivedBy(${1:reviver})",
        "description": " ※Params: \n   (reviver)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.revivablecorpse:SetReviveHealthPercent:": {
        "prefix": "components.revivablecorpse:SetReviveHealthPercent",
        "body": "components.revivablecorpse:SetReviveHealthPercent(${1:percent})",
        "description": " ※Params: \n   (percent)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.revivablecorpse:SetCorpse:": {
        "prefix": "components.revivablecorpse:SetCorpse",
        "body": "components.revivablecorpse:SetCorpse(${1:corpse})",
        "description": " ※Params: \n   (corpse)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.revivablecorpse:GetReviveHealthPercent:": {
        "prefix": "components.revivablecorpse:GetReviveHealthPercent",
        "body": "components.revivablecorpse:GetReviveHealthPercent()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.revivablecorpse:SetReviveSpeedMult:": {
        "prefix": "components.revivablecorpse:SetReviveSpeedMult",
        "body": "components.revivablecorpse:SetReviveSpeedMult(${1:mult})",
        "description": " ※Params: \n   (mult)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.revivablecorpse:SetReviveSpeedMultForTag:": {
        "prefix": "components.revivablecorpse:SetReviveSpeedMultForTag",
        "body": "components.revivablecorpse:SetReviveSpeedMultForTag(${1:tag},${2:mult})",
        "description": " ※Params: \n   (tag)<>[] \n   (mult)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.revivablecorpse:SetCanBeRevivedByFn:": {
        "prefix": "components.revivablecorpse:SetCanBeRevivedByFn",
        "body": "components.revivablecorpse:SetCanBeRevivedByFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.revivablecorpse:Revive:": {
        "prefix": "components.revivablecorpse:Revive",
        "body": "components.revivablecorpse:Revive(${1:reviver})",
        "description": " ※Params: \n   (reviver)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.revivablecorpse:GetReviveSpeedMult:": {
        "prefix": "components.revivablecorpse:GetReviveSpeedMult",
        "body": "components.revivablecorpse:GetReviveSpeedMult(${1:reviver})",
        "description": " ※Params: \n   (reviver)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.rideable:SetSaddle:": {
        "prefix": "components.rideable:SetSaddle",
        "body": "components.rideable:SetSaddle(${1:doer},${2:newsaddle})",
        "description": " ※Params: \n   (doer)<>[] \n   (newsaddle)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.rideable:SetRequiredObedience:": {
        "prefix": "components.rideable:SetRequiredObedience",
        "body": "components.rideable:SetRequiredObedience(${1:required})",
        "description": " ※Params: \n   (required)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.rideable:SetCustomRiderTest:": {
        "prefix": "components.rideable:SetCustomRiderTest",
        "body": "components.rideable:SetCustomRiderTest(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.rideable:SetRider:": {
        "prefix": "components.rideable:SetRider",
        "body": "components.rideable:SetRider(${1:rider})",
        "description": " ※Params: \n   (rider)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.rideable:SetShouldSave:": {
        "prefix": "components.rideable:SetShouldSave",
        "body": "components.rideable:SetShouldSave(${1:shouldsave})",
        "description": " ※Params: \n   (shouldsave)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.rideable:TimeSinceLastRide:": {
        "prefix": "components.rideable:TimeSinceLastRide",
        "body": "components.rideable:TimeSinceLastRide()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.rideable:TestObedience:": {
        "prefix": "components.rideable:TestObedience",
        "body": "components.rideable:TestObedience()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.rideable:OnRemoveFromEntity:": {
        "prefix": "components.rideable:OnRemoveFromEntity",
        "body": "components.rideable:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.rideable:GetRider:": {
        "prefix": "components.rideable:GetRider",
        "body": "components.rideable:GetRider()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.rideable:TestRider:": {
        "prefix": "components.rideable:TestRider",
        "body": "components.rideable:TestRider(${1:potential_rider})",
        "description": " ※Params: \n   (potential_rider)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.rideable:OnLoadDomesticatable:": {
        "prefix": "components.rideable:OnLoadDomesticatable",
        "body": "components.rideable:OnLoadDomesticatable(${1:data},${2:newents})",
        "description": " ※Params: \n   (data)<>[] \n   (newents)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.rideable:GetDebugString:": {
        "prefix": "components.rideable:GetDebugString",
        "body": "components.rideable:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.rideable:Buck:": {
        "prefix": "components.rideable:Buck",
        "body": "components.rideable:Buck(${1:gentle})",
        "description": " ※Params: \n   (gentle)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.rideable:OnSaveDomesticatable:": {
        "prefix": "components.rideable:OnSaveDomesticatable",
        "body": "components.rideable:OnSaveDomesticatable()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.rideable:ShouldSave:": {
        "prefix": "components.rideable:ShouldSave",
        "body": "components.rideable:ShouldSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.rideable:IsBeingRidden:": {
        "prefix": "components.rideable:IsBeingRidden",
        "body": "components.rideable:IsBeingRidden()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.rideable:IsSaddled:": {
        "prefix": "components.rideable:IsSaddled",
        "body": "components.rideable:IsSaddled()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.rideable:SetSaddleable:": {
        "prefix": "components.rideable:SetSaddleable",
        "body": "components.rideable:SetSaddleable(${1:saddleable})",
        "description": " ※Params: \n   (saddleable)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.rider:IsRiding:": {
        "prefix": "components.rider:IsRiding",
        "body": "components.rider:IsRiding()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.rider:StopTracking:": {
        "prefix": "components.rider:StopTracking",
        "body": "components.rider:StopTracking(${1:mount})",
        "description": " ※Params: \n   (mount)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.rider:OnLoad:": {
        "prefix": "components.rider:OnLoad",
        "body": "components.rider:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.rider:Mount:": {
        "prefix": "components.rider:Mount",
        "body": "components.rider:Mount(${1:target},${2:instant})",
        "description": " ※Params: \n   (target)<>[] \n   (instant)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.rider:StartTracking:": {
        "prefix": "components.rider:StartTracking",
        "body": "components.rider:StartTracking(${1:mount})",
        "description": " ※Params: \n   (mount)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.rider:ActualDismount:": {
        "prefix": "components.rider:ActualDismount",
        "body": "components.rider:ActualDismount()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.rider:OnSave:": {
        "prefix": "components.rider:OnSave",
        "body": "components.rider:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.rider:GetMount:": {
        "prefix": "components.rider:GetMount",
        "body": "components.rider:GetMount()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.rider:Dismount:": {
        "prefix": "components.rider:Dismount",
        "body": "components.rider:Dismount()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.rider:GetSaddle:": {
        "prefix": "components.rider:GetSaddle",
        "body": "components.rider:GetSaddle()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.rider:OnRemoveFromEntity:": {
        "prefix": "components.rider:OnRemoveFromEntity",
        "body": "components.rider:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.riftspawner:EnableShadowRifts:": {
        "prefix": "components.riftspawner:EnableShadowRifts",
        "body": "components.riftspawner:EnableShadowRifts(${1:src})",
        "description": " ※Params: \n   (src)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.riftspawner:TryToSpawnRift:": {
        "prefix": "components.riftspawner:TryToSpawnRift",
        "body": "components.riftspawner:TryToSpawnRift(${1:forced_pos})",
        "description": " ※Params: \n   (forced_pos)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.riftspawner:DebugHighlightRifts:": {
        "prefix": "components.riftspawner:DebugHighlightRifts",
        "body": "components.riftspawner:DebugHighlightRifts()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.riftspawner:OnRiftRemoved:": {
        "prefix": "components.riftspawner:OnRiftRemoved",
        "body": "components.riftspawner:OnRiftRemoved(${1:rift})",
        "description": " ※Params: \n   (rift)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.riftspawner:IsLunarPortalActive:": {
        "prefix": "components.riftspawner:IsLunarPortalActive",
        "body": "components.riftspawner:IsLunarPortalActive()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.riftspawner:SpawnRift:": {
        "prefix": "components.riftspawner:SpawnRift",
        "body": "components.riftspawner:SpawnRift(${1:forced_pos})",
        "description": " ※Params: \n   (forced_pos)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.riftspawner:SetDifficulty:": {
        "prefix": "components.riftspawner:SetDifficulty",
        "body": "components.riftspawner:SetDifficulty(${1:src},${2:difficulty})",
        "description": " ※Params: \n   (src)<>[] \n   (difficulty)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.riftspawner:SetEnabledSetting:": {
        "prefix": "components.riftspawner:SetEnabledSetting",
        "body": "components.riftspawner:SetEnabledSetting(${1:src},${2:enabled_difficulty})",
        "description": " ※Params: \n   (src)<>[] \n   (enabled_difficulty)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.riftspawner:GetDebugRiftString:": {
        "prefix": "components.riftspawner:GetDebugRiftString",
        "body": "components.riftspawner:GetDebugRiftString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.riftspawner:GetXRiftsEnabled:": {
        "prefix": "components.riftspawner:GetXRiftsEnabled",
        "body": "components.riftspawner:GetXRiftsEnabled()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.riftspawner:LoadPostPass:": {
        "prefix": "components.riftspawner:LoadPostPass",
        "body": "components.riftspawner:LoadPostPass(${1:newents},${2:data})",
        "description": " ※Params: \n   (newents)<>[] \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.riftspawner:TryToStartTimer:": {
        "prefix": "components.riftspawner:TryToStartTimer",
        "body": "components.riftspawner:TryToStartTimer(${1:src})",
        "description": " ※Params: \n   (src)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.riftspawner:GetEnabled:": {
        "prefix": "components.riftspawner:GetEnabled",
        "body": "components.riftspawner:GetEnabled()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.riftspawner:OnLoad:": {
        "prefix": "components.riftspawner:OnLoad",
        "body": "components.riftspawner:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.riftspawner:IsPointNearPreviousSpawn:": {
        "prefix": "components.riftspawner:IsPointNearPreviousSpawn",
        "body": "components.riftspawner:IsPointNearPreviousSpawn(${1:x},${2:z})",
        "description": " ※Params: \n   (x)<>[] \n   (z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.riftspawner:SetEnabledSettingCave:": {
        "prefix": "components.riftspawner:SetEnabledSettingCave",
        "body": "components.riftspawner:SetEnabledSettingCave(${1:src},${2:enabled_difficulty})",
        "description": " ※Params: \n   (src)<>[] \n   (enabled_difficulty)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.riftspawner:GetShadowRiftsEnabled:": {
        "prefix": "components.riftspawner:GetShadowRiftsEnabled",
        "body": "components.riftspawner:GetShadowRiftsEnabled()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.riftspawner:GetNextRiftPrefab:": {
        "prefix": "components.riftspawner:GetNextRiftPrefab",
        "body": "components.riftspawner:GetNextRiftPrefab()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.riftspawner:GetRifts:": {
        "prefix": "components.riftspawner:GetRifts",
        "body": "components.riftspawner:GetRifts()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.riftspawner:GetLunarRiftsEnabled:": {
        "prefix": "components.riftspawner:GetLunarRiftsEnabled",
        "body": "components.riftspawner:GetLunarRiftsEnabled()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.riftspawner:OnShadowRiftMaxSize:": {
        "prefix": "components.riftspawner:OnShadowRiftMaxSize",
        "body": "components.riftspawner:OnShadowRiftMaxSize(${1:src},${2:rift})",
        "description": " ※Params: \n   (src)<>[] \n   (rift)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.riftspawner:OnLunarRiftMaxSize:": {
        "prefix": "components.riftspawner:OnLunarRiftMaxSize",
        "body": "components.riftspawner:OnLunarRiftMaxSize(${1:src},${2:rift})",
        "description": " ※Params: \n   (src)<>[] \n   (rift)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.riftspawner:EnableXRifts:": {
        "prefix": "components.riftspawner:EnableXRifts",
        "body": "components.riftspawner:EnableXRifts(${1:src})",
        "description": " ※Params: \n   (src)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.riftspawner:IsShadowPortalActive:": {
        "prefix": "components.riftspawner:IsShadowPortalActive",
        "body": "components.riftspawner:IsShadowPortalActive()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.riftspawner:OnRiftTimerDone:": {
        "prefix": "components.riftspawner:OnRiftTimerDone",
        "body": "components.riftspawner:OnRiftTimerDone()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.riftspawner:GetDebugString:": {
        "prefix": "components.riftspawner:GetDebugString",
        "body": "components.riftspawner:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.riftspawner:EnableLunarRifts:": {
        "prefix": "components.riftspawner:EnableLunarRifts",
        "body": "components.riftspawner:EnableLunarRifts(${1:src})",
        "description": " ※Params: \n   (src)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.riftspawner:GetRiftsOfPrefab:": {
        "prefix": "components.riftspawner:GetRiftsOfPrefab",
        "body": "components.riftspawner:GetRiftsOfPrefab(${1:prefab})",
        "description": " ※Params: \n   (prefab)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.riftspawner:AddRiftToPool:": {
        "prefix": "components.riftspawner:AddRiftToPool",
        "body": "components.riftspawner:AddRiftToPool(${1:rift},${2:rift_prefab})",
        "description": " ※Params: \n   (rift)<>[] \n   (rift_prefab)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.riftspawner:OnSave:": {
        "prefix": "components.riftspawner:OnSave",
        "body": "components.riftspawner:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.riftspawner:IsXPortalActive:": {
        "prefix": "components.riftspawner:IsXPortalActive",
        "body": "components.riftspawner:IsXPortalActive()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.rooted:RemoveSource:": {
        "prefix": "components.rooted:RemoveSource",
        "body": "components.rooted:RemoveSource(${1:src})",
        "description": " ※Params: \n   (src)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.rooted:AddSource:": {
        "prefix": "components.rooted:AddSource",
        "body": "components.rooted:AddSource(${1:src})",
        "description": " ※Params: \n   (src)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.rooted:OnRemoveFromEntity:": {
        "prefix": "components.rooted:OnRemoveFromEntity",
        "body": "components.rooted:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.roseinspectable:SetOnResidueActivated:": {
        "prefix": "components.roseinspectable:SetOnResidueActivated",
        "body": "components.roseinspectable:SetOnResidueActivated(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.roseinspectable:CanResidueBeSpawnedBy:": {
        "prefix": "components.roseinspectable:CanResidueBeSpawnedBy",
        "body": "components.roseinspectable:CanResidueBeSpawnedBy(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.roseinspectable:SetCanResidueBeSpawnedBy:": {
        "prefix": "components.roseinspectable:SetCanResidueBeSpawnedBy",
        "body": "components.roseinspectable:SetCanResidueBeSpawnedBy(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.roseinspectable:SetForcedInduceCooldownOnActivate:": {
        "prefix": "components.roseinspectable:SetForcedInduceCooldownOnActivate",
        "body": "components.roseinspectable:SetForcedInduceCooldownOnActivate(${1:bool})",
        "description": " ※Params: \n   (bool)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.roseinspectable:DoRoseInspection:": {
        "prefix": "components.roseinspectable:DoRoseInspection",
        "body": "components.roseinspectable:DoRoseInspection(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.roseinspectable:HookupResidue:": {
        "prefix": "components.roseinspectable:HookupResidue",
        "body": "components.roseinspectable:HookupResidue(${1:residueowner},${2:residue})",
        "description": " ※Params: \n   (residueowner)<>[] \n   (residue)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.roseinspectable:SetWillInduceCooldownOnActivate:": {
        "prefix": "components.roseinspectable:SetWillInduceCooldownOnActivate",
        "body": "components.roseinspectable:SetWillInduceCooldownOnActivate(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.roseinspectable:WillInduceCooldownOnActivate:": {
        "prefix": "components.roseinspectable:WillInduceCooldownOnActivate",
        "body": "components.roseinspectable:WillInduceCooldownOnActivate(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.roseinspectable:SetOnResidueCreated:": {
        "prefix": "components.roseinspectable:SetOnResidueCreated",
        "body": "components.roseinspectable:SetOnResidueCreated(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.roseinspectableuser:SpawnResidue:": {
        "prefix": "components.roseinspectableuser:SpawnResidue",
        "body": "components.roseinspectableuser:SpawnResidue()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.roseinspectableuser:ApplyCooldown:": {
        "prefix": "components.roseinspectableuser:ApplyCooldown",
        "body": "components.roseinspectableuser:ApplyCooldown(${1:duration})",
        "description": " ※Params: \n   (duration)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.roseinspectableuser:SetCooldownTime:": {
        "prefix": "components.roseinspectableuser:SetCooldownTime",
        "body": "components.roseinspectableuser:SetCooldownTime(${1:cooldowntime})",
        "description": " ※Params: \n   (cooldowntime)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.roseinspectableuser:TryToDoRoseInspectionOnTarget:": {
        "prefix": "components.roseinspectableuser:TryToDoRoseInspectionOnTarget",
        "body": "components.roseinspectableuser:TryToDoRoseInspectionOnTarget(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.roseinspectableuser:LongUpdate:": {
        "prefix": "components.roseinspectableuser:LongUpdate",
        "body": "components.roseinspectableuser:LongUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.roseinspectableuser:OnCooldown:": {
        "prefix": "components.roseinspectableuser:OnCooldown",
        "body": "components.roseinspectableuser:OnCooldown()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.roseinspectableuser:SetRoseInpectionOnTarget:": {
        "prefix": "components.roseinspectableuser:SetRoseInpectionOnTarget",
        "body": "components.roseinspectableuser:SetRoseInpectionOnTarget(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.roseinspectableuser:OnRemoveFromEntity:": {
        "prefix": "components.roseinspectableuser:OnRemoveFromEntity",
        "body": "components.roseinspectableuser:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.roseinspectableuser:OnCharlieResidueActivated:": {
        "prefix": "components.roseinspectableuser:OnCharlieResidueActivated",
        "body": "components.roseinspectableuser:OnCharlieResidueActivated(${1:residue})",
        "description": " ※Params: \n   (residue)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.roseinspectableuser:ForceDecayResidue:": {
        "prefix": "components.roseinspectableuser:ForceDecayResidue",
        "body": "components.roseinspectableuser:ForceDecayResidue()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.roseinspectableuser:IsInCooldown:": {
        "prefix": "components.roseinspectableuser:IsInCooldown",
        "body": "components.roseinspectableuser:IsInCooldown()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.roseinspectableuser:OnLoad:": {
        "prefix": "components.roseinspectableuser:OnLoad",
        "body": "components.roseinspectableuser:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.roseinspectableuser:OnSave:": {
        "prefix": "components.roseinspectableuser:OnSave",
        "body": "components.roseinspectableuser:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.roseinspectableuser:GetDebugString:": {
        "prefix": "components.roseinspectableuser:GetDebugString",
        "body": "components.roseinspectableuser:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.roseinspectableuser:DoQuip:": {
        "prefix": "components.roseinspectableuser:DoQuip",
        "body": "components.roseinspectableuser:DoQuip(${1:reason},${2:failed})",
        "description": " ※Params: \n   (reason)<>[] \n   (failed)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.roseinspectableuser:TryToDoRoseInspectionOnPoint:": {
        "prefix": "components.roseinspectableuser:TryToDoRoseInspectionOnPoint",
        "body": "components.roseinspectableuser:TryToDoRoseInspectionOnPoint(${1:pt})",
        "description": " ※Params: \n   (pt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.roseinspectableuser:DoRoseInspectionOnPoint:": {
        "prefix": "components.roseinspectableuser:DoRoseInspectionOnPoint",
        "body": "components.roseinspectableuser:DoRoseInspectionOnPoint()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.roseinspectableuser:GoOnCooldown:": {
        "prefix": "components.roseinspectableuser:GoOnCooldown",
        "body": "components.roseinspectableuser:GoOnCooldown()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.roseinspectableuser:SetRoseInpectionOnPoint:": {
        "prefix": "components.roseinspectableuser:SetRoseInpectionOnPoint",
        "body": "components.roseinspectableuser:SetRoseInpectionOnPoint(${1:point})",
        "description": " ※Params: \n   (point)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.ruinsshadelingspawner:LongUpdate:": {
        "prefix": "components.ruinsshadelingspawner:LongUpdate",
        "body": "components.ruinsshadelingspawner:LongUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.ruinsshadelingspawner:TrySpawnShadeling:": {
        "prefix": "components.ruinsshadelingspawner:TrySpawnShadeling",
        "body": "components.ruinsshadelingspawner:TrySpawnShadeling(${1:chair})",
        "description": " ※Params: \n   (chair)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.saddler:SetSwaps:": {
        "prefix": "components.saddler:SetSwaps",
        "body": "components.saddler:SetSwaps(${1:build},${2:symbol},${3:skin_guid})",
        "description": " ※Params: \n   (build)<>[] \n   (symbol)<>[] \n   (skin_guid)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.saddler:GetBonusDamage:": {
        "prefix": "components.saddler:GetBonusDamage",
        "body": "components.saddler:GetBonusDamage(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.saddler:SetBonusSpeedMult:": {
        "prefix": "components.saddler:SetBonusSpeedMult",
        "body": "components.saddler:SetBonusSpeedMult(${1:mult})",
        "description": " ※Params: \n   (mult)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.saddler:ApplyDamage:": {
        "prefix": "components.saddler:ApplyDamage",
        "body": "components.saddler:ApplyDamage(${1:damage},${2:attacker},${3:weapon},${4:spdamage})",
        "description": " ※Params: \n   (damage)<>[] \n   (attacker)<>[] \n   (weapon)<>[] \n   (spdamage)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.saddler:SetAbsorption:": {
        "prefix": "components.saddler:SetAbsorption",
        "body": "components.saddler:SetAbsorption(${1:percent})",
        "description": " ※Params: \n   (percent)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.saddler:SetDiscardedCallback:": {
        "prefix": "components.saddler:SetDiscardedCallback",
        "body": "components.saddler:SetDiscardedCallback(${1:cb})",
        "description": " ※Params: \n   (cb)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.saddler:GetAbsorption:": {
        "prefix": "components.saddler:GetAbsorption",
        "body": "components.saddler:GetAbsorption()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.saddler:GetBonusSpeedMult:": {
        "prefix": "components.saddler:GetBonusSpeedMult",
        "body": "components.saddler:GetBonusSpeedMult()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.saddler:SetBonusDamage:": {
        "prefix": "components.saddler:SetBonusDamage",
        "body": "components.saddler:SetBonusDamage(${1:damage})",
        "description": " ※Params: \n   (damage)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.saltlicker:LoadPostPass:": {
        "prefix": "components.saltlicker:LoadPostPass",
        "body": "components.saltlicker:LoadPostPass()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.saltlicker:SetSalted:": {
        "prefix": "components.saltlicker:SetSalted",
        "body": "components.saltlicker:SetSalted(${1:salted})",
        "description": " ※Params: \n   (salted)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.saltlicker:GetDebugString:": {
        "prefix": "components.saltlicker:GetDebugString",
        "body": "components.saltlicker:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.saltlicker:SetUp:": {
        "prefix": "components.saltlicker:SetUp",
        "body": "components.saltlicker:SetUp(${1:uses_per_lick})",
        "description": " ※Params: \n   (uses_per_lick)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.saltlicker:OnSave:": {
        "prefix": "components.saltlicker:OnSave",
        "body": "components.saltlicker:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.saltlicker:Stop:": {
        "prefix": "components.saltlicker:Stop",
        "body": "components.saltlicker:Stop()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.saltlicker:OnRemoveFromEntity:": {
        "prefix": "components.saltlicker:OnRemoveFromEntity",
        "body": "components.saltlicker:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sandstormwatcher:UpdateSandstormWalkSpeed:": {
        "prefix": "components.sandstormwatcher:UpdateSandstormWalkSpeed",
        "body": "components.sandstormwatcher:UpdateSandstormWalkSpeed()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sandstormwatcher:ToggleSandstorms:": {
        "prefix": "components.sandstormwatcher:ToggleSandstorms",
        "body": "components.sandstormwatcher:ToggleSandstorms(${1:active})",
        "description": " ※Params: \n   (active)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sandstormwatcher:UpdateSandstormWalkSpeed_Internal:": {
        "prefix": "components.sandstormwatcher:UpdateSandstormWalkSpeed_Internal",
        "body": "components.sandstormwatcher:UpdateSandstormWalkSpeed_Internal(${1:level})",
        "description": " ※Params: \n   (level)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sandstormwatcher:GetSandstormLevel:": {
        "prefix": "components.sandstormwatcher:GetSandstormLevel",
        "body": "components.sandstormwatcher:GetSandstormLevel()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sandstormwatcher:UpdateSandstormLevel:": {
        "prefix": "components.sandstormwatcher:UpdateSandstormLevel",
        "body": "components.sandstormwatcher:UpdateSandstormLevel()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sandstormwatcher:SetSandstormSpeedMultiplier:": {
        "prefix": "components.sandstormwatcher:SetSandstormSpeedMultiplier",
        "body": "components.sandstormwatcher:SetSandstormSpeedMultiplier(${1:mult})",
        "description": " ※Params: \n   (mult)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sandstormwatcher:OnRemoveFromEntity:": {
        "prefix": "components.sandstormwatcher:OnRemoveFromEntity",
        "body": "components.sandstormwatcher:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sanity:IsLunacyMode:": {
        "prefix": "components.sanity:IsLunacyMode",
        "body": "components.sanity:IsLunacyMode()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sanity:GetRealPercent:": {
        "prefix": "components.sanity:GetRealPercent",
        "body": "components.sanity:GetRealPercent()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sanity:SetInducedInsanity:": {
        "prefix": "components.sanity:SetInducedInsanity",
        "body": "components.sanity:SetInducedInsanity(${1:src},${2:val})",
        "description": " ※Params: \n   (src)<>[] \n   (val)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sanity:SetNegativeAuraImmunity:": {
        "prefix": "components.sanity:SetNegativeAuraImmunity",
        "body": "components.sanity:SetNegativeAuraImmunity(${1:immunity})",
        "description": " ※Params: \n   (immunity)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sanity:SetLightDrainImmune:": {
        "prefix": "components.sanity:SetLightDrainImmune",
        "body": "components.sanity:SetLightDrainImmune(${1:immunity})",
        "description": " ※Params: \n   (immunity)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sanity:RecalcGhostDrain:": {
        "prefix": "components.sanity:RecalcGhostDrain",
        "body": "components.sanity:RecalcGhostDrain()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sanity:SetSanityMode:": {
        "prefix": "components.sanity:SetSanityMode",
        "body": "components.sanity:SetSanityMode(${1:mode})",
        "description": " ※Params: \n   (mode)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sanity:GetRateScale:": {
        "prefix": "components.sanity:GetRateScale",
        "body": "components.sanity:GetRateScale()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sanity:GetPercent:": {
        "prefix": "components.sanity:GetPercent",
        "body": "components.sanity:GetPercent()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sanity:SetFullAuraImmunity:": {
        "prefix": "components.sanity:SetFullAuraImmunity",
        "body": "components.sanity:SetFullAuraImmunity(${1:immunity})",
        "description": " ※Params: \n   (immunity)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sanity:AddSanityPenalty:": {
        "prefix": "components.sanity:AddSanityPenalty",
        "body": "components.sanity:AddSanityPenalty(${1:key},${2:mod})",
        "description": " ※Params: \n   (key)<>[] \n   (mod)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sanity:SetPlayerGhostImmunity:": {
        "prefix": "components.sanity:SetPlayerGhostImmunity",
        "body": "components.sanity:SetPlayerGhostImmunity(${1:immunity})",
        "description": " ※Params: \n   (immunity)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sanity:OnSave:": {
        "prefix": "components.sanity:OnSave",
        "body": "components.sanity:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sanity:AddSanityAuraImmunity:": {
        "prefix": "components.sanity:AddSanityAuraImmunity",
        "body": "components.sanity:AddSanityAuraImmunity(${1:tag})",
        "description": " ※Params: \n   (tag)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sanity:SetPercent:": {
        "prefix": "components.sanity:SetPercent",
        "body": "components.sanity:SetPercent(${1:per},${2:overtime})",
        "description": " ※Params: \n   (per)<>[] \n   (overtime)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sanity:IsSane:": {
        "prefix": "components.sanity:IsSane",
        "body": "components.sanity:IsSane()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sanity:GetSanityMode:": {
        "prefix": "components.sanity:GetSanityMode",
        "body": "components.sanity:GetSanityMode()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sanity:IsCrazy:": {
        "prefix": "components.sanity:IsCrazy",
        "body": "components.sanity:IsCrazy()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sanity:EnableLunacy:": {
        "prefix": "components.sanity:EnableLunacy",
        "body": "components.sanity:EnableLunacy(${1:enable},${2:source})",
        "description": " ※Params: \n   (enable)<>[] \n   (source)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sanity:GetPenaltyPercent:": {
        "prefix": "components.sanity:GetPenaltyPercent",
        "body": "components.sanity:GetPenaltyPercent()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sanity:IsInsanityMode:": {
        "prefix": "components.sanity:IsInsanityMode",
        "body": "components.sanity:IsInsanityMode()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sanity:RemoveSanityPenalty:": {
        "prefix": "components.sanity:RemoveSanityPenalty",
        "body": "components.sanity:RemoveSanityPenalty(${1:key})",
        "description": " ※Params: \n   (key)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sanity:GetPercentWithPenalty:": {
        "prefix": "components.sanity:GetPercentWithPenalty",
        "body": "components.sanity:GetPercentWithPenalty()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sanity:IsEnlightened:": {
        "prefix": "components.sanity:IsEnlightened",
        "body": "components.sanity:IsEnlightened()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sanity:RecalculatePenalty:": {
        "prefix": "components.sanity:RecalculatePenalty",
        "body": "components.sanity:RecalculatePenalty()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sanity:IsInsane:": {
        "prefix": "components.sanity:IsInsane",
        "body": "components.sanity:IsInsane()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sanity:OnLoad:": {
        "prefix": "components.sanity:OnLoad",
        "body": "components.sanity:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sanity:Recalc:": {
        "prefix": "components.sanity:Recalc",
        "body": "components.sanity:Recalc(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sanity:GetMaxWithPenalty:": {
        "prefix": "components.sanity:GetMaxWithPenalty",
        "body": "components.sanity:GetMaxWithPenalty()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sanity:GetAuraMultipliers:": {
        "prefix": "components.sanity:GetAuraMultipliers",
        "body": "components.sanity:GetAuraMultipliers()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sanity:RemoveSanityAuraImmunity:": {
        "prefix": "components.sanity:RemoveSanityAuraImmunity",
        "body": "components.sanity:RemoveSanityAuraImmunity(${1:tag})",
        "description": " ※Params: \n   (tag)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sanity:DoDelta:": {
        "prefix": "components.sanity:DoDelta",
        "body": "components.sanity:DoDelta(${1:delta},${2:overtime})",
        "description": " ※Params: \n   (delta)<>[] \n   (overtime)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sanity:SetMax:": {
        "prefix": "components.sanity:SetMax",
        "body": "components.sanity:SetMax(${1:amount})",
        "description": " ※Params: \n   (amount)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sanity:GetDebugString:": {
        "prefix": "components.sanity:GetDebugString",
        "body": "components.sanity:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sanity:TransferComponent:": {
        "prefix": "components.sanity:TransferComponent",
        "body": "components.sanity:TransferComponent(${1:newinst})",
        "description": " ※Params: \n   (newinst)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sanity:OnUpdate:": {
        "prefix": "components.sanity:OnUpdate",
        "body": "components.sanity:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sanityaura:GetAura:": {
        "prefix": "components.sanityaura:GetAura",
        "body": "components.sanityaura:GetAura(${1:observer})",
        "description": " ※Params: \n   (observer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sanityaura:OnRemoveFromEntity:": {
        "prefix": "components.sanityaura:OnRemoveFromEntity",
        "body": "components.sanityaura:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.savedrotation:OnSave:": {
        "prefix": "components.savedrotation:OnSave",
        "body": "components.savedrotation:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.savedrotation:LoadPostPass:": {
        "prefix": "components.savedrotation:LoadPostPass",
        "body": "components.savedrotation:LoadPostPass(${1:newents},${2:data})",
        "description": " ※Params: \n   (newents)<>[] \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.savedscale:OnSave:": {
        "prefix": "components.savedscale:OnSave",
        "body": "components.savedscale:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.savedscale:OnLoad:": {
        "prefix": "components.savedscale:OnLoad",
        "body": "components.savedscale:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.scaler:SetScale:": {
        "prefix": "components.scaler:SetScale",
        "body": "components.scaler:SetScale(${1:scale})",
        "description": " ※Params: \n   (scale)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.scaler:ApplyScale:": {
        "prefix": "components.scaler:ApplyScale",
        "body": "components.scaler:ApplyScale()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.scaler:OnSave:": {
        "prefix": "components.scaler:OnSave",
        "body": "components.scaler:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.scaler:OnLoad:": {
        "prefix": "components.scaler:OnLoad",
        "body": "components.scaler:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.scenariorunner:SetScript:": {
        "prefix": "components.scenariorunner:SetScript",
        "body": "components.scenariorunner:SetScript(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.scenariorunner:Reset:": {
        "prefix": "components.scenariorunner:Reset",
        "body": "components.scenariorunner:Reset()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.scenariorunner:Run:": {
        "prefix": "components.scenariorunner:Run",
        "body": "components.scenariorunner:Run()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.scenariorunner:ClearScenario:": {
        "prefix": "components.scenariorunner:ClearScenario",
        "body": "components.scenariorunner:ClearScenario()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.scenariorunner:OnSave:": {
        "prefix": "components.scenariorunner:OnSave",
        "body": "components.scenariorunner:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.scenariorunner:OnLoad:": {
        "prefix": "components.scenariorunner:OnLoad",
        "body": "components.scenariorunner:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.scrapbookable:SetOnTeachFn:": {
        "prefix": "components.scrapbookable:SetOnTeachFn",
        "body": "components.scrapbookable:SetOnTeachFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.scrapbookable:Teach:": {
        "prefix": "components.scrapbookable:Teach",
        "body": "components.scrapbookable:Teach(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.seamlessplayerswapper:DoMonkeyChange:": {
        "prefix": "components.seamlessplayerswapper:DoMonkeyChange",
        "body": "components.seamlessplayerswapper:DoMonkeyChange()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.seamlessplayerswapper:PostTransformSetup:": {
        "prefix": "components.seamlessplayerswapper:PostTransformSetup",
        "body": "components.seamlessplayerswapper:PostTransformSetup()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.seamlessplayerswapper:_StartSwap:": {
        "prefix": "components.seamlessplayerswapper:_StartSwap",
        "body": "components.seamlessplayerswapper:_StartSwap(${1:new_prefab})",
        "description": " ※Params: \n   (new_prefab)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.seamlessplayerswapper:OnSeamlessCharacterSwap:": {
        "prefix": "components.seamlessplayerswapper:OnSeamlessCharacterSwap",
        "body": "components.seamlessplayerswapper:OnSeamlessCharacterSwap(${1:old_player})",
        "description": " ※Params: \n   (old_player)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.seamlessplayerswapper:SwapBackToMainCharacter:": {
        "prefix": "components.seamlessplayerswapper:SwapBackToMainCharacter",
        "body": "components.seamlessplayerswapper:SwapBackToMainCharacter()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.seamlessplayerswapper:SaveForReroll:": {
        "prefix": "components.seamlessplayerswapper:SaveForReroll",
        "body": "components.seamlessplayerswapper:SaveForReroll()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.seamlessplayerswapper:OnSave:": {
        "prefix": "components.seamlessplayerswapper:OnSave",
        "body": "components.seamlessplayerswapper:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.seamlessplayerswapper:OnLoad:": {
        "prefix": "components.seamlessplayerswapper:OnLoad",
        "body": "components.seamlessplayerswapper:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.searchable:Search:": {
        "prefix": "components.searchable:Search",
        "body": "components.searchable:Search(${1:searcher})",
        "description": " ※Params: \n   (searcher)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.searchable:GetDebugString:": {
        "prefix": "components.searchable:GetDebugString",
        "body": "components.searchable:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.searchable:OnLoad:": {
        "prefix": "components.searchable:OnLoad",
        "body": "components.searchable:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.searchable:OnSave:": {
        "prefix": "components.searchable:OnSave",
        "body": "components.searchable:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.searchable:OnRemoveEntity:": {
        "prefix": "components.searchable:OnRemoveEntity",
        "body": "components.searchable:OnRemoveEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.selfstacker:SetIgnoreMovingFast:": {
        "prefix": "components.selfstacker:SetIgnoreMovingFast",
        "body": "components.selfstacker:SetIgnoreMovingFast(${1:ignorespeedcheck})",
        "description": " ※Params: \n   (ignorespeedcheck)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.selfstacker:OnEntityWake:": {
        "prefix": "components.selfstacker:OnEntityWake",
        "body": "components.selfstacker:OnEntityWake()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.selfstacker:DoStack:": {
        "prefix": "components.selfstacker:DoStack",
        "body": "components.selfstacker:DoStack()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.selfstacker:FindItemToStackWith:": {
        "prefix": "components.selfstacker:FindItemToStackWith",
        "body": "components.selfstacker:FindItemToStackWith()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.selfstacker:OnRemoveEntity:": {
        "prefix": "components.selfstacker:OnRemoveEntity",
        "body": "components.selfstacker:OnRemoveEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.selfstacker:CanSelfStack:": {
        "prefix": "components.selfstacker:CanSelfStack",
        "body": "components.selfstacker:CanSelfStack()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sentientaxe:OnBuildItem:": {
        "prefix": "components.sentientaxe:OnBuildItem",
        "body": "components.sentientaxe:OnBuildItem(${1:recipename})",
        "description": " ※Params: \n   (recipename)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sentientaxe:MakeConversation:": {
        "prefix": "components.sentientaxe:MakeConversation",
        "body": "components.sentientaxe:MakeConversation()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sentientaxe:OnBecomeHuman:": {
        "prefix": "components.sentientaxe:OnBecomeHuman",
        "body": "components.sentientaxe:OnBecomeHuman()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sentientaxe:SetOwner:": {
        "prefix": "components.sentientaxe:SetOwner",
        "body": "components.sentientaxe:SetOwner(${1:owner})",
        "description": " ※Params: \n   (owner)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sentientaxe:OnFinishedWork:": {
        "prefix": "components.sentientaxe:OnFinishedWork",
        "body": "components.sentientaxe:OnFinishedWork(${1:target},${2:action})",
        "description": " ※Params: \n   (target)<>[] \n   (action)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sentientaxe:Say:": {
        "prefix": "components.sentientaxe:Say",
        "body": "components.sentientaxe:Say(${1:list},${2:sound_override},${3:delay})",
        "description": " ※Params: \n   (list)<>[] \n   (sound_override)<>[] \n   (delay)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sentientaxe:ScheduleConversation:": {
        "prefix": "components.sentientaxe:ScheduleConversation",
        "body": "components.sentientaxe:ScheduleConversation(${1:delay})",
        "description": " ※Params: \n   (delay)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sentientaxe:OnWereEaterChanged:": {
        "prefix": "components.sentientaxe:OnWereEaterChanged",
        "body": "components.sentientaxe:OnWereEaterChanged(${1:old},${2:new},${3:istransforming})",
        "description": " ※Params: \n   (old)<>[] \n   (new)<>[] \n   (istransforming)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sentientaxe:OnBecomeWere:": {
        "prefix": "components.sentientaxe:OnBecomeWere",
        "body": "components.sentientaxe:OnBecomeWere()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sentientaxe:ShouldMakeConversation:": {
        "prefix": "components.sentientaxe:ShouldMakeConversation",
        "body": "components.sentientaxe:ShouldMakeConversation()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.setbonus:SetOnDisabledFn:": {
        "prefix": "components.setbonus:SetOnDisabledFn",
        "body": "components.setbonus:SetOnDisabledFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.setbonus:IsEnabled:": {
        "prefix": "components.setbonus:IsEnabled",
        "body": "components.setbonus:IsEnabled(${1:setname})",
        "description": " ※Params: \n   (setname)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.setbonus:GetDebugString:": {
        "prefix": "components.setbonus:GetDebugString",
        "body": "components.setbonus:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.setbonus:OnRemoveFromEntity:": {
        "prefix": "components.setbonus:OnRemoveFromEntity",
        "body": "components.setbonus:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.setbonus:UpdateSetBonus:": {
        "prefix": "components.setbonus:UpdateSetBonus",
        "body": "components.setbonus:UpdateSetBonus(${1:inventory},${2:isequipping})",
        "description": " ※Params: \n   (inventory)<>[] \n   (isequipping)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.setbonus:_HasSetBonus:": {
        "prefix": "components.setbonus:_HasSetBonus",
        "body": "components.setbonus:_HasSetBonus(${1:inventory})",
        "description": " ※Params: \n   (inventory)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.setbonus:SetOnEnabledFn:": {
        "prefix": "components.setbonus:SetOnEnabledFn",
        "body": "components.setbonus:SetOnEnabledFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sewing:DoSewing:": {
        "prefix": "components.sewing:DoSewing",
        "body": "components.sewing:DoSewing(${1:target},${2:doer})",
        "description": " ※Params: \n   (target)<>[] \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.shadowdominance:OnRemoveFromEntity:": {
        "prefix": "components.shadowdominance:OnRemoveFromEntity",
        "body": "components.shadowdominance:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.shadowlevel:SetLevelFn:": {
        "prefix": "components.shadowlevel:SetLevelFn",
        "body": "components.shadowlevel:SetLevelFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.shadowlevel:SetDefaultLevel:": {
        "prefix": "components.shadowlevel:SetDefaultLevel",
        "body": "components.shadowlevel:SetDefaultLevel(${1:level})",
        "description": " ※Params: \n   (level)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.shadowlevel:GetCurrentLevel:": {
        "prefix": "components.shadowlevel:GetCurrentLevel",
        "body": "components.shadowlevel:GetCurrentLevel()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.shadowlevel:OnRemoveFromEntity:": {
        "prefix": "components.shadowlevel:OnRemoveFromEntity",
        "body": "components.shadowlevel:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.shadowsubmissive:ShouldSubmitToTarget:": {
        "prefix": "components.shadowsubmissive:ShouldSubmitToTarget",
        "body": "components.shadowsubmissive:ShouldSubmitToTarget(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.shadowsubmissive:TargetHasDominance:": {
        "prefix": "components.shadowsubmissive:TargetHasDominance",
        "body": "components.shadowsubmissive:TargetHasDominance(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.shadowsubmissive:OnRemoveFromEntity:": {
        "prefix": "components.shadowsubmissive:OnRemoveFromEntity",
        "body": "components.shadowsubmissive:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.shatterfx:SetLevel:": {
        "prefix": "components.shatterfx:SetLevel",
        "body": "components.shatterfx:SetLevel(${1:level})",
        "description": " ※Params: \n   (level)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.shaveable:SetPrize:": {
        "prefix": "components.shaveable:SetPrize",
        "body": "components.shaveable:SetPrize(${1:prize_prefab},${2:prize_count})",
        "description": " ※Params: \n   (prize_prefab)<>[] \n   (prize_count)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.shaveable:Shave:": {
        "prefix": "components.shaveable:Shave",
        "body": "components.shaveable:Shave(${1:shaver},${2:shaving_implement})",
        "description": " ※Params: \n   (shaver)<>[] \n   (shaving_implement)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.shaveable:GetDebugString:": {
        "prefix": "components.shaveable:GetDebugString",
        "body": "components.shaveable:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.shaveable:CanShave:": {
        "prefix": "components.shaveable:CanShave",
        "body": "components.shaveable:CanShave(${1:shaver},${2:shaving_implement})",
        "description": " ※Params: \n   (shaver)<>[] \n   (shaving_implement)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.shaveable:OnLoad:": {
        "prefix": "components.shaveable:OnLoad",
        "body": "components.shaveable:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.shaveable:OnSave:": {
        "prefix": "components.shaveable:OnSave",
        "body": "components.shaveable:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.shaveable:OnRemoveFromEntity:": {
        "prefix": "components.shaveable:OnRemoveFromEntity",
        "body": "components.shaveable:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.shedder:StartShedding:": {
        "prefix": "components.shedder:StartShedding",
        "body": "components.shedder:StartShedding(${1:interval})",
        "description": " ※Params: \n   (interval)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.shedder:StopShedding:": {
        "prefix": "components.shedder:StopShedding",
        "body": "components.shedder:StopShedding()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.shedder:DoSingleShed:": {
        "prefix": "components.shedder:DoSingleShed",
        "body": "components.shedder:DoSingleShed()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.shedder:DoMultiShed:": {
        "prefix": "components.shedder:DoMultiShed",
        "body": "components.shedder:DoMultiShed(${1:max},${2:random})",
        "description": " ※Params: \n   (max)<>[] \n   (random)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.shelf:SetOnTakeItem:": {
        "prefix": "components.shelf:SetOnTakeItem",
        "body": "components.shelf:SetOnTakeItem(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.shelf:GetDebugString:": {
        "prefix": "components.shelf:GetDebugString",
        "body": "components.shelf:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.shelf:TakeItem:": {
        "prefix": "components.shelf:TakeItem",
        "body": "components.shelf:TakeItem(${1:taker})",
        "description": " ※Params: \n   (taker)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.shelf:PutItemOnShelf:": {
        "prefix": "components.shelf:PutItemOnShelf",
        "body": "components.shelf:PutItemOnShelf(${1:item})",
        "description": " ※Params: \n   (item)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.shelf:SetOnShelfItem:": {
        "prefix": "components.shelf:SetOnShelfItem",
        "body": "components.shelf:SetOnShelfItem(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.shelf:OnRemoveFromEntity:": {
        "prefix": "components.shelf:OnRemoveFromEntity",
        "body": "components.shelf:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sheltered:SetSheltered:": {
        "prefix": "components.sheltered:SetSheltered",
        "body": "components.sheltered:SetSheltered(${1:issheltered},${2:level})",
        "description": " ※Params: \n   (issheltered)<>[] \n   (level)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sheltered:GetDebugString:": {
        "prefix": "components.sheltered:GetDebugString",
        "body": "components.sheltered:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sheltered:OnUpdate:": {
        "prefix": "components.sheltered:OnUpdate",
        "body": "components.sheltered:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sheltered:Start:": {
        "prefix": "components.sheltered:Start",
        "body": "components.sheltered:Start()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sheltered:Stop:": {
        "prefix": "components.sheltered:Stop",
        "body": "components.sheltered:Stop()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sheltered:OnRemoveFromEntity:": {
        "prefix": "components.sheltered:OnRemoveFromEntity",
        "body": "components.sheltered:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.shop:DeliverItems:": {
        "prefix": "components.shop:DeliverItems",
        "body": "components.shop:DeliverItems(${1:items})",
        "description": " ※Params: \n   (items)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.shop:SetStartTab:": {
        "prefix": "components.shop:SetStartTab",
        "body": "components.shop:SetStartTab(${1:tab})",
        "description": " ※Params: \n   (tab)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.shop:SetTitle:": {
        "prefix": "components.shop:SetTitle",
        "body": "components.shop:SetTitle(${1:title})",
        "description": " ※Params: \n   (title)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.simplebook:Read:": {
        "prefix": "components.simplebook:Read",
        "body": "components.simplebook:Read(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.simplebook:OnRemoveFromEntity:": {
        "prefix": "components.simplebook:OnRemoveFromEntity",
        "body": "components.simplebook:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.simplemagicgrower:Grow:": {
        "prefix": "components.simplemagicgrower:Grow",
        "body": "components.simplemagicgrower:Grow()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.simplemagicgrower:StartGrowing:": {
        "prefix": "components.simplemagicgrower:StartGrowing",
        "body": "components.simplemagicgrower:StartGrowing()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.simplemagicgrower:SetLastStage:": {
        "prefix": "components.simplemagicgrower:SetLastStage",
        "body": "components.simplemagicgrower:SetLastStage(${1:last_stage})",
        "description": " ※Params: \n   (last_stage)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.singable:SetOnSing:": {
        "prefix": "components.singable:SetOnSing",
        "body": "components.singable:SetOnSing(${1:onsingfn})",
        "description": " ※Params: \n   (onsingfn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.singable:Sing:": {
        "prefix": "components.singable:Sing",
        "body": "components.singable:Sing(${1:singer})",
        "description": " ※Params: \n   (singer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.singinginspiration:SetPercent:": {
        "prefix": "components.singinginspiration:SetPercent",
        "body": "components.singinginspiration:SetPercent(${1:percent})",
        "description": " ※Params: \n   (percent)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.singinginspiration:GetMaxInspiration:": {
        "prefix": "components.singinginspiration:GetMaxInspiration",
        "body": "components.singinginspiration:GetMaxInspiration()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.singinginspiration:CanAddSong:": {
        "prefix": "components.singinginspiration:CanAddSong",
        "body": "components.singinginspiration:CanAddSong(${1:songdata},${2:inst})",
        "description": " ※Params: \n   (songdata)<>[] \n   (inst)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.singinginspiration:GetDetachRadius:": {
        "prefix": "components.singinginspiration:GetDetachRadius",
        "body": "components.singinginspiration:GetDetachRadius()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.singinginspiration:SetValidVictimFn:": {
        "prefix": "components.singinginspiration:SetValidVictimFn",
        "body": "components.singinginspiration:SetValidVictimFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.singinginspiration:SetCalcAvailableSlotsForInspirationFn:": {
        "prefix": "components.singinginspiration:SetCalcAvailableSlotsForInspirationFn",
        "body": "components.singinginspiration:SetCalcAvailableSlotsForInspirationFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.singinginspiration:OnAddInstantSong:": {
        "prefix": "components.singinginspiration:OnAddInstantSong",
        "body": "components.singinginspiration:OnAddInstantSong(${1:songdata},${2:inst})",
        "description": " ※Params: \n   (songdata)<>[] \n   (inst)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.singinginspiration:OnHitOther:": {
        "prefix": "components.singinginspiration:OnHitOther",
        "body": "components.singinginspiration:OnHitOther(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.singinginspiration:AddSong:": {
        "prefix": "components.singinginspiration:AddSong",
        "body": "components.singinginspiration:AddSong(${1:songdata},${2:skip_inspire},${3:inst})",
        "description": " ※Params: \n   (songdata)<>[] \n   (skip_inspire)<>[] \n   (inst)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.singinginspiration:IsSinging:": {
        "prefix": "components.singinginspiration:IsSinging",
        "body": "components.singinginspiration:IsSinging()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.singinginspiration:OnLoad:": {
        "prefix": "components.singinginspiration:OnLoad",
        "body": "components.singinginspiration:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.singinginspiration:OnSave:": {
        "prefix": "components.singinginspiration:OnSave",
        "body": "components.singinginspiration:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.singinginspiration:GetActiveSong:": {
        "prefix": "components.singinginspiration:GetActiveSong",
        "body": "components.singinginspiration:GetActiveSong(${1:slot_num})",
        "description": " ※Params: \n   (slot_num)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.singinginspiration:Inspire:": {
        "prefix": "components.singinginspiration:Inspire",
        "body": "components.singinginspiration:Inspire()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.singinginspiration:GetPercent:": {
        "prefix": "components.singinginspiration:GetPercent",
        "body": "components.singinginspiration:GetPercent()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.singinginspiration:SetMaxInspiration:": {
        "prefix": "components.singinginspiration:SetMaxInspiration",
        "body": "components.singinginspiration:SetMaxInspiration(${1:max})",
        "description": " ※Params: \n   (max)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.singinginspiration:IsSongActive:": {
        "prefix": "components.singinginspiration:IsSongActive",
        "body": "components.singinginspiration:IsSongActive(${1:songdata})",
        "description": " ※Params: \n   (songdata)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.singinginspiration:SetInspiration:": {
        "prefix": "components.singinginspiration:SetInspiration",
        "body": "components.singinginspiration:SetInspiration(${1:value})",
        "description": " ※Params: \n   (value)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.singinginspiration:InstantInspire:": {
        "prefix": "components.singinginspiration:InstantInspire",
        "body": "components.singinginspiration:InstantInspire(${1:songdata})",
        "description": " ※Params: \n   (songdata)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.singinginspiration:PopSong:": {
        "prefix": "components.singinginspiration:PopSong",
        "body": "components.singinginspiration:PopSong()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.singinginspiration:GetDebugString:": {
        "prefix": "components.singinginspiration:GetDebugString",
        "body": "components.singinginspiration:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.singinginspiration:DisplayFx:": {
        "prefix": "components.singinginspiration:DisplayFx",
        "body": "components.singinginspiration:DisplayFx()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.singinginspiration:DoDelta:": {
        "prefix": "components.singinginspiration:DoDelta",
        "body": "components.singinginspiration:DoDelta(${1:delta},${2:forceupdate})",
        "description": " ※Params: \n   (delta)<>[] \n   (forceupdate)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.singinginspiration:OnAttacked:": {
        "prefix": "components.singinginspiration:OnAttacked",
        "body": "components.singinginspiration:OnAttacked(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.singinginspiration:OnRidingTick:": {
        "prefix": "components.singinginspiration:OnRidingTick",
        "body": "components.singinginspiration:OnRidingTick(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.singinginspiration:OnUpdate:": {
        "prefix": "components.singinginspiration:OnUpdate",
        "body": "components.singinginspiration:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.singingshelltrigger:StartUpdating:": {
        "prefix": "components.singingshelltrigger:StartUpdating",
        "body": "components.singingshelltrigger:StartUpdating()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.singingshelltrigger:OnUpdate:": {
        "prefix": "components.singingshelltrigger:OnUpdate",
        "body": "components.singingshelltrigger:OnUpdate()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.singingshelltrigger:StopUpdating:": {
        "prefix": "components.singingshelltrigger:StopUpdating",
        "body": "components.singingshelltrigger:StopUpdating()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.singingshelltrigger:OnRemoveFromEntity:": {
        "prefix": "components.singingshelltrigger:OnRemoveFromEntity",
        "body": "components.singingshelltrigger:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sinkholespawner:PushRemoteTargets:": {
        "prefix": "components.sinkholespawner:PushRemoteTargets",
        "body": "components.sinkholespawner:PushRemoteTargets()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sinkholespawner:OnLoad:": {
        "prefix": "components.sinkholespawner:OnLoad",
        "body": "components.sinkholespawner:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sinkholespawner:OnSave:": {
        "prefix": "components.sinkholespawner:OnSave",
        "body": "components.sinkholespawner:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sinkholespawner:StopSinkholes:": {
        "prefix": "components.sinkholespawner:StopSinkholes",
        "body": "components.sinkholespawner:StopSinkholes()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sinkholespawner:GetDebugString:": {
        "prefix": "components.sinkholespawner:GetDebugString",
        "body": "components.sinkholespawner:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sinkholespawner:OnUpdate:": {
        "prefix": "components.sinkholespawner:OnUpdate",
        "body": "components.sinkholespawner:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sinkholespawner:DoTargetWarning:": {
        "prefix": "components.sinkholespawner:DoTargetWarning",
        "body": "components.sinkholespawner:DoTargetWarning(${1:targetinfo})",
        "description": " ※Params: \n   (targetinfo)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sinkholespawner:SpawnSinkhole:": {
        "prefix": "components.sinkholespawner:SpawnSinkhole",
        "body": "components.sinkholespawner:SpawnSinkhole(${1:spawnpt})",
        "description": " ※Params: \n   (spawnpt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sinkholespawner:UpdateTarget:": {
        "prefix": "components.sinkholespawner:UpdateTarget",
        "body": "components.sinkholespawner:UpdateTarget(${1:targetinfo})",
        "description": " ※Params: \n   (targetinfo)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sinkholespawner:DoTargetAttack:": {
        "prefix": "components.sinkholespawner:DoTargetAttack",
        "body": "components.sinkholespawner:DoTargetAttack(${1:targetinfo})",
        "description": " ※Params: \n   (targetinfo)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sittable:OnRemoveFromEntity:": {
        "prefix": "components.sittable:OnRemoveFromEntity",
        "body": "components.sittable:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sittable:SetOccupier:": {
        "prefix": "components.sittable:SetOccupier",
        "body": "components.sittable:SetOccupier(${1:occupier})",
        "description": " ※Params: \n   (occupier)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sittable:IsOccupiedBy:": {
        "prefix": "components.sittable:IsOccupiedBy",
        "body": "components.sittable:IsOccupiedBy(${1:occupier})",
        "description": " ※Params: \n   (occupier)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sittable:IsOccupied:": {
        "prefix": "components.sittable:IsOccupied",
        "body": "components.sittable:IsOccupied()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sizetweener:EndTween:": {
        "prefix": "components.sizetweener:EndTween",
        "body": "components.sizetweener:EndTween()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sizetweener:StartTween:": {
        "prefix": "components.sizetweener:StartTween",
        "body": "components.sizetweener:StartTween(${1:size},${2:time},${3:callback})",
        "description": " ※Params: \n   (size)<>[] \n   (time)<>[] \n   (callback)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sizetweener:OnUpdate:": {
        "prefix": "components.sizetweener:OnUpdate",
        "body": "components.sizetweener:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.skilltreeupdater:ActivateSkill:": {
        "prefix": "components.skilltreeupdater:ActivateSkill",
        "body": "components.skilltreeupdater:ActivateSkill(${1:skill},${2:prefab},${3:fromrpc})",
        "description": " ※Params: \n   (skill)<>[] \n   (prefab)<>[] \n   (fromrpc)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.skilltreeupdater:DeactivateSkill:": {
        "prefix": "components.skilltreeupdater:DeactivateSkill",
        "body": "components.skilltreeupdater:DeactivateSkill(${1:skill},${2:prefab},${3:fromrpc})",
        "description": " ※Params: \n   (skill)<>[] \n   (prefab)<>[] \n   (fromrpc)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.skilltreeupdater:GetNamesFromSkillSelection:": {
        "prefix": "components.skilltreeupdater:GetNamesFromSkillSelection",
        "body": "components.skilltreeupdater:GetNamesFromSkillSelection(${1:skillselection})",
        "description": " ※Params: \n   (skillselection)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.skilltreeupdater:OnLoad:": {
        "prefix": "components.skilltreeupdater:OnLoad",
        "body": "components.skilltreeupdater:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.skilltreeupdater:ActivateSkill_Client:": {
        "prefix": "components.skilltreeupdater:ActivateSkill_Client",
        "body": "components.skilltreeupdater:ActivateSkill_Client(${1:skill})",
        "description": " ※Params: \n   (skill)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.skilltreeupdater:GetPlayerSkillSelection:": {
        "prefix": "components.skilltreeupdater:GetPlayerSkillSelection",
        "body": "components.skilltreeupdater:GetPlayerSkillSelection()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.skilltreeupdater:AddSkillXP_Client:": {
        "prefix": "components.skilltreeupdater:AddSkillXP_Client",
        "body": "components.skilltreeupdater:AddSkillXP_Client(${1:amount},${2:total})",
        "description": " ※Params: \n   (amount)<>[] \n   (total)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.skilltreeupdater:SendFromSkillTreeBlob:": {
        "prefix": "components.skilltreeupdater:SendFromSkillTreeBlob",
        "body": "components.skilltreeupdater:SendFromSkillTreeBlob(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.skilltreeupdater:IsValidSkill:": {
        "prefix": "components.skilltreeupdater:IsValidSkill",
        "body": "components.skilltreeupdater:IsValidSkill(${1:skill})",
        "description": " ※Params: \n   (skill)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.skilltreeupdater:GetSkillXP:": {
        "prefix": "components.skilltreeupdater:GetSkillXP",
        "body": "components.skilltreeupdater:GetSkillXP()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.skilltreeupdater:GetActivatedSkills:": {
        "prefix": "components.skilltreeupdater:GetActivatedSkills",
        "body": "components.skilltreeupdater:GetActivatedSkills()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.skilltreeupdater:HasSkillTag:": {
        "prefix": "components.skilltreeupdater:HasSkillTag",
        "body": "components.skilltreeupdater:HasSkillTag(${1:tag})",
        "description": " ※Params: \n   (tag)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.skilltreeupdater:ActivateSkill_Server:": {
        "prefix": "components.skilltreeupdater:ActivateSkill_Server",
        "body": "components.skilltreeupdater:ActivateSkill_Server(${1:skill})",
        "description": " ※Params: \n   (skill)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.skilltreeupdater:TransferComponent:": {
        "prefix": "components.skilltreeupdater:TransferComponent",
        "body": "components.skilltreeupdater:TransferComponent(${1:newinst})",
        "description": " ※Params: \n   (newinst)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.skilltreeupdater:GetAvailableSkillPoints:": {
        "prefix": "components.skilltreeupdater:GetAvailableSkillPoints",
        "body": "components.skilltreeupdater:GetAvailableSkillPoints()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.skilltreeupdater:OnSave:": {
        "prefix": "components.skilltreeupdater:OnSave",
        "body": "components.skilltreeupdater:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.skilltreeupdater:SetSkipValidation:": {
        "prefix": "components.skilltreeupdater:SetSkipValidation",
        "body": "components.skilltreeupdater:SetSkipValidation(${1:skip})",
        "description": " ※Params: \n   (skip)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.skilltreeupdater:AddSkillXP_Server:": {
        "prefix": "components.skilltreeupdater:AddSkillXP_Server",
        "body": "components.skilltreeupdater:AddSkillXP_Server(${1:amount},${2:total})",
        "description": " ※Params: \n   (amount)<>[] \n   (total)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.skilltreeupdater:CountSkillTag:": {
        "prefix": "components.skilltreeupdater:CountSkillTag",
        "body": "components.skilltreeupdater:CountSkillTag(${1:tag})",
        "description": " ※Params: \n   (tag)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.skilltreeupdater:SetSilent:": {
        "prefix": "components.skilltreeupdater:SetSilent",
        "body": "components.skilltreeupdater:SetSilent(${1:silent})",
        "description": " ※Params: \n   (silent)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.skilltreeupdater:GetPointsForSkillXP:": {
        "prefix": "components.skilltreeupdater:GetPointsForSkillXP",
        "body": "components.skilltreeupdater:GetPointsForSkillXP(${1:skillxp})",
        "description": " ※Params: \n   (skillxp)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.skilltreeupdater:AddSkillXP:": {
        "prefix": "components.skilltreeupdater:AddSkillXP",
        "body": "components.skilltreeupdater:AddSkillXP(${1:amount},${2:prefab},${3:fromrpc})",
        "description": " ※Params: \n   (amount)<>[] \n   (prefab)<>[] \n   (fromrpc)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.skilltreeupdater:DeactivateSkill_Server:": {
        "prefix": "components.skilltreeupdater:DeactivateSkill_Server",
        "body": "components.skilltreeupdater:DeactivateSkill_Server(${1:skill})",
        "description": " ※Params: \n   (skill)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.skilltreeupdater:DeactivateSkill_Client:": {
        "prefix": "components.skilltreeupdater:DeactivateSkill_Client",
        "body": "components.skilltreeupdater:DeactivateSkill_Client(${1:skill})",
        "description": " ※Params: \n   (skill)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.skilltreeupdater:IsActivated:": {
        "prefix": "components.skilltreeupdater:IsActivated",
        "body": "components.skilltreeupdater:IsActivated(${1:skill})",
        "description": " ※Params: \n   (skill)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.skilltreeupdater:SetPlayerSkillSelection:": {
        "prefix": "components.skilltreeupdater:SetPlayerSkillSelection",
        "body": "components.skilltreeupdater:SetPlayerSkillSelection(${1:skillselection})",
        "description": " ※Params: \n   (skillselection)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.skinner:GetClothing:": {
        "prefix": "components.skinner:GetClothing",
        "body": "components.skinner:GetClothing()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.skinner:ClearMonkeyCurse:": {
        "prefix": "components.skinner:ClearMonkeyCurse",
        "body": "components.skinner:ClearMonkeyCurse()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.skinner:ClearClothing:": {
        "prefix": "components.skinner:ClearClothing",
        "body": "components.skinner:ClearClothing(${1:type})",
        "description": " ※Params: \n   (type)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.skinner:SetupNonPlayerData:": {
        "prefix": "components.skinner:SetupNonPlayerData",
        "body": "components.skinner:SetupNonPlayerData()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.skinner:GetMonkeyCurse:": {
        "prefix": "components.skinner:GetMonkeyCurse",
        "body": "components.skinner:GetMonkeyCurse()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.skinner:OnSave:": {
        "prefix": "components.skinner:OnSave",
        "body": "components.skinner:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.skinner:OnLoad:": {
        "prefix": "components.skinner:OnLoad",
        "body": "components.skinner:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.skinner:HideAllClothing:": {
        "prefix": "components.skinner:HideAllClothing",
        "body": "components.skinner:HideAllClothing(${1:anim_state})",
        "description": " ※Params: \n   (anim_state)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.skinner:ClearAllClothing:": {
        "prefix": "components.skinner:ClearAllClothing",
        "body": "components.skinner:ClearAllClothing()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.skinner:SetMonkeyCurse:": {
        "prefix": "components.skinner:SetMonkeyCurse",
        "body": "components.skinner:SetMonkeyCurse(${1:monkey_curse})",
        "description": " ※Params: \n   (monkey_curse)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.skinner:GetSkinMode:": {
        "prefix": "components.skinner:GetSkinMode",
        "body": "components.skinner:GetSkinMode()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.skinner:SetClothing:": {
        "prefix": "components.skinner:SetClothing",
        "body": "components.skinner:SetClothing(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.skinner:CopySkinsFromPlayer:": {
        "prefix": "components.skinner:CopySkinsFromPlayer",
        "body": "components.skinner:CopySkinsFromPlayer(${1:player})",
        "description": " ※Params: \n   (player)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.skinner:SetSkinName:": {
        "prefix": "components.skinner:SetSkinName",
        "body": "components.skinner:SetSkinName(${1:skin_name},${2:skip_beard_setup},${3:skip_skins_set})",
        "description": " ※Params: \n   (skin_name)<>[] \n   (skip_beard_setup)<>[] \n   (skip_skins_set)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.skinner:SetSkinMode:": {
        "prefix": "components.skinner:SetSkinMode",
        "body": "components.skinner:SetSkinMode(${1:skintype},${2:default_build})",
        "description": " ※Params: \n   (skintype)<>[] \n   (default_build)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.skinner_beefalo:GetClothing:": {
        "prefix": "components.skinner_beefalo:GetClothing",
        "body": "components.skinner_beefalo:GetClothing()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.skinner_beefalo:ClearAllClothing:": {
        "prefix": "components.skinner_beefalo:ClearAllClothing",
        "body": "components.skinner_beefalo:ClearAllClothing()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.skinner_beefalo:reloadclothing:": {
        "prefix": "components.skinner_beefalo:reloadclothing",
        "body": "components.skinner_beefalo:reloadclothing(${1:clothing})",
        "description": " ※Params: \n   (clothing)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.skinner_beefalo:ClearClothing:": {
        "prefix": "components.skinner_beefalo:ClearClothing",
        "body": "components.skinner_beefalo:ClearClothing(${1:type})",
        "description": " ※Params: \n   (type)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.skinner_beefalo:SetClothing:": {
        "prefix": "components.skinner_beefalo:SetClothing",
        "body": "components.skinner_beefalo:SetClothing(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.skinner_beefalo:ApplyTargetSkins:": {
        "prefix": "components.skinner_beefalo:ApplyTargetSkins",
        "body": "components.skinner_beefalo:ApplyTargetSkins(${1:skins},${2:player})",
        "description": " ※Params: \n   (skins)<>[] \n   (player)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.skinner_beefalo:OnSave:": {
        "prefix": "components.skinner_beefalo:OnSave",
        "body": "components.skinner_beefalo:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.skinner_beefalo:HideAllClothing:": {
        "prefix": "components.skinner_beefalo:HideAllClothing",
        "body": "components.skinner_beefalo:HideAllClothing(${1:anim_state})",
        "description": " ※Params: \n   (anim_state)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sleeper:SetDefaultTests:": {
        "prefix": "components.sleeper:SetDefaultTests",
        "body": "components.sleeper:SetDefaultTests()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sleeper:StartTesting:": {
        "prefix": "components.sleeper:StartTesting",
        "body": "components.sleeper:StartTesting(${1:time})",
        "description": " ※Params: \n   (time)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sleeper:IsInDeepSleep:": {
        "prefix": "components.sleeper:IsInDeepSleep",
        "body": "components.sleeper:IsInDeepSleep()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sleeper:SetTest:": {
        "prefix": "components.sleeper:SetTest",
        "body": "components.sleeper:SetTest(${1:fn},${2:time})",
        "description": " ※Params: \n   (fn)<>[] \n   (time)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sleeper:IsAsleep:": {
        "prefix": "components.sleeper:IsAsleep",
        "body": "components.sleeper:IsAsleep()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sleeper:SetWakeTest:": {
        "prefix": "components.sleeper:SetWakeTest",
        "body": "components.sleeper:SetWakeTest(${1:fn},${2:time})",
        "description": " ※Params: \n   (fn)<>[] \n   (time)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sleeper:StopTesting:": {
        "prefix": "components.sleeper:StopTesting",
        "body": "components.sleeper:StopTesting()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sleeper:GoToSleep:": {
        "prefix": "components.sleeper:GoToSleep",
        "body": "components.sleeper:GoToSleep(${1:sleeptime})",
        "description": " ※Params: \n   (sleeptime)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sleeper:AddSleepiness:": {
        "prefix": "components.sleeper:AddSleepiness",
        "body": "components.sleeper:AddSleepiness(${1:sleepiness},${2:sleeptime})",
        "description": " ※Params: \n   (sleepiness)<>[] \n   (sleeptime)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sleeper:GetTimeAwake:": {
        "prefix": "components.sleeper:GetTimeAwake",
        "body": "components.sleeper:GetTimeAwake()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sleeper:OnEntitySleep:": {
        "prefix": "components.sleeper:OnEntitySleep",
        "body": "components.sleeper:OnEntitySleep()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sleeper:OnRemoveFromEntity:": {
        "prefix": "components.sleeper:OnRemoveFromEntity",
        "body": "components.sleeper:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sleeper:GetTimeAsleep:": {
        "prefix": "components.sleeper:GetTimeAsleep",
        "body": "components.sleeper:GetTimeAsleep()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sleeper:GetSleepTimeMultiplier:": {
        "prefix": "components.sleeper:GetSleepTimeMultiplier",
        "body": "components.sleeper:GetSleepTimeMultiplier()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sleeper:OnLoad:": {
        "prefix": "components.sleeper:OnLoad",
        "body": "components.sleeper:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sleeper:SetNocturnal:": {
        "prefix": "components.sleeper:SetNocturnal",
        "body": "components.sleeper:SetNocturnal(${1:b})",
        "description": " ※Params: \n   (b)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sleeper:GetDebugString:": {
        "prefix": "components.sleeper:GetDebugString",
        "body": "components.sleeper:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sleeper:SetSleepTest:": {
        "prefix": "components.sleeper:SetSleepTest",
        "body": "components.sleeper:SetSleepTest(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sleeper:OnEntityWake:": {
        "prefix": "components.sleeper:OnEntityWake",
        "body": "components.sleeper:OnEntityWake()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sleeper:WakeUp:": {
        "prefix": "components.sleeper:WakeUp",
        "body": "components.sleeper:WakeUp()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sleeper:SetExtraResist:": {
        "prefix": "components.sleeper:SetExtraResist",
        "body": "components.sleeper:SetExtraResist(${1:resist})",
        "description": " ※Params: \n   (resist)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sleeper:SetResistance:": {
        "prefix": "components.sleeper:SetResistance",
        "body": "components.sleeper:SetResistance(${1:resist})",
        "description": " ※Params: \n   (resist)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sleeper:OnSave:": {
        "prefix": "components.sleeper:OnSave",
        "body": "components.sleeper:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sleeper:IsHibernating:": {
        "prefix": "components.sleeper:IsHibernating",
        "body": "components.sleeper:IsHibernating()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sleepingbag:SetSleepPhase:": {
        "prefix": "components.sleepingbag:SetSleepPhase",
        "body": "components.sleepingbag:SetSleepPhase(${1:phase})",
        "description": " ※Params: \n   (phase)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sleepingbag:SetTemperatureTickFn:": {
        "prefix": "components.sleepingbag:SetTemperatureTickFn",
        "body": "components.sleepingbag:SetTemperatureTickFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sleepingbag:DoWakeUp:": {
        "prefix": "components.sleepingbag:DoWakeUp",
        "body": "components.sleepingbag:DoWakeUp(${1:nostatechange})",
        "description": " ※Params: \n   (nostatechange)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sleepingbag:GetSleepPhase:": {
        "prefix": "components.sleepingbag:GetSleepPhase",
        "body": "components.sleepingbag:GetSleepPhase()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sleepingbag:InUse:": {
        "prefix": "components.sleepingbag:InUse",
        "body": "components.sleepingbag:InUse()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sleepingbag:DoSleep:": {
        "prefix": "components.sleepingbag:DoSleep",
        "body": "components.sleepingbag:DoSleep(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sleepingbaguser:SetHungerBonusMult:": {
        "prefix": "components.sleepingbaguser:SetHungerBonusMult",
        "body": "components.sleepingbaguser:SetHungerBonusMult(${1:bonus})",
        "description": " ※Params: \n   (bonus)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sleepingbaguser:SleepTick:": {
        "prefix": "components.sleepingbaguser:SleepTick",
        "body": "components.sleepingbaguser:SleepTick()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sleepingbaguser:ShouldSleep:": {
        "prefix": "components.sleepingbaguser:ShouldSleep",
        "body": "components.sleepingbaguser:ShouldSleep()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.sleepingbaguser:DoWakeUp:": {
        "prefix": "components.sleepingbaguser:DoWakeUp",
        "body": "components.sleepingbaguser:DoWakeUp(${1:nostatechange})",
        "description": " ※Params: \n   (nostatechange)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sleepingbaguser:SetHealthBonusMult:": {
        "prefix": "components.sleepingbaguser:SetHealthBonusMult",
        "body": "components.sleepingbaguser:SetHealthBonusMult(${1:bonus})",
        "description": " ※Params: \n   (bonus)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sleepingbaguser:SetSanityBonusMult:": {
        "prefix": "components.sleepingbaguser:SetSanityBonusMult",
        "body": "components.sleepingbaguser:SetSanityBonusMult(${1:bonus})",
        "description": " ※Params: \n   (bonus)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sleepingbaguser:SetCanSleepFn:": {
        "prefix": "components.sleepingbaguser:SetCanSleepFn",
        "body": "components.sleepingbaguser:SetCanSleepFn(${1:cansleepfn})",
        "description": " ※Params: \n   (cansleepfn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.sleepingbaguser:DoSleep:": {
        "prefix": "components.sleepingbaguser:DoSleep",
        "body": "components.sleepingbaguser:DoSleep(${1:bed})",
        "description": " ※Params: \n   (bed)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.slipperyfeet:StartSlipperySource:": {
        "prefix": "components.slipperyfeet:StartSlipperySource",
        "body": "components.slipperyfeet:StartSlipperySource(${1:src},${2:key})",
        "description": " ※Params: \n   (src)<>[] \n   (key)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.slipperyfeet:StopSlipperySource:": {
        "prefix": "components.slipperyfeet:StopSlipperySource",
        "body": "components.slipperyfeet:StopSlipperySource(${1:src},${2:key})",
        "description": " ※Params: \n   (src)<>[] \n   (key)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.slipperyfeet:SetAccumulating_Internal:": {
        "prefix": "components.slipperyfeet:SetAccumulating_Internal",
        "body": "components.slipperyfeet:SetAccumulating_Internal(${1:accumulating})",
        "description": " ※Params: \n   (accumulating)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.slipperyfeet:OnLoad:": {
        "prefix": "components.slipperyfeet:OnLoad",
        "body": "components.slipperyfeet:OnLoad()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.slipperyfeet:LongUpdate:": {
        "prefix": "components.slipperyfeet:LongUpdate",
        "body": "components.slipperyfeet:LongUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.slipperyfeet:OnRemoveFromEntity:": {
        "prefix": "components.slipperyfeet:OnRemoveFromEntity",
        "body": "components.slipperyfeet:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.slipperyfeet:GetSlipperyAndNearbyEnts:": {
        "prefix": "components.slipperyfeet:GetSlipperyAndNearbyEnts",
        "body": "components.slipperyfeet:GetSlipperyAndNearbyEnts()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.slipperyfeet:DoDecay:": {
        "prefix": "components.slipperyfeet:DoDecay",
        "body": "components.slipperyfeet:DoDecay(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.slipperyfeet:Stop_Internal:": {
        "prefix": "components.slipperyfeet:Stop_Internal",
        "body": "components.slipperyfeet:Stop_Internal()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.slipperyfeet:StopUpdating_Internal:": {
        "prefix": "components.slipperyfeet:StopUpdating_Internal",
        "body": "components.slipperyfeet:StopUpdating_Internal(${1:reason})",
        "description": " ※Params: \n   (reason)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.slipperyfeet:Start_Internal:": {
        "prefix": "components.slipperyfeet:Start_Internal",
        "body": "components.slipperyfeet:Start_Internal()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.slipperyfeet:GetDebugString:": {
        "prefix": "components.slipperyfeet:GetDebugString",
        "body": "components.slipperyfeet:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.slipperyfeet:SetCurrent:": {
        "prefix": "components.slipperyfeet:SetCurrent",
        "body": "components.slipperyfeet:SetCurrent(${1:val})",
        "description": " ※Params: \n   (val)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.slipperyfeet:DoDelta:": {
        "prefix": "components.slipperyfeet:DoDelta",
        "body": "components.slipperyfeet:DoDelta(${1:delta})",
        "description": " ※Params: \n   (delta)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.slipperyfeet:CalcAccumulatingSpeed:": {
        "prefix": "components.slipperyfeet:CalcAccumulatingSpeed",
        "body": "components.slipperyfeet:CalcAccumulatingSpeed()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.slipperyfeet:StartUpdating_Internal:": {
        "prefix": "components.slipperyfeet:StartUpdating_Internal",
        "body": "components.slipperyfeet:StartUpdating_Internal(${1:reason})",
        "description": " ※Params: \n   (reason)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.slipperyfeet:OnUpdate:": {
        "prefix": "components.slipperyfeet:OnUpdate",
        "body": "components.slipperyfeet:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.slipperyfeettarget:SetIsSlipperyAtPoint:": {
        "prefix": "components.slipperyfeettarget:SetIsSlipperyAtPoint",
        "body": "components.slipperyfeettarget:SetIsSlipperyAtPoint(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.slipperyfeettarget:SetSlipperyRate:": {
        "prefix": "components.slipperyfeettarget:SetSlipperyRate",
        "body": "components.slipperyfeettarget:SetSlipperyRate(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.slipperyfeettarget:GetSlipperyRate:": {
        "prefix": "components.slipperyfeettarget:GetSlipperyRate",
        "body": "components.slipperyfeettarget:GetSlipperyRate(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.slipperyfeettarget:IsSlipperyAtPosition:": {
        "prefix": "components.slipperyfeettarget:IsSlipperyAtPosition",
        "body": "components.slipperyfeettarget:IsSlipperyAtPosition(${1:x},${2:y},${3:z})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.slipperyfeettarget:OnRemoveFromEntity:": {
        "prefix": "components.slipperyfeettarget:OnRemoveFromEntity",
        "body": "components.slipperyfeettarget:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.souleater:SetOnEatSoulFn:": {
        "prefix": "components.souleater:SetOnEatSoulFn",
        "body": "components.souleater:SetOnEatSoulFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.souleater:EatSoul:": {
        "prefix": "components.souleater:EatSoul",
        "body": "components.souleater:EatSoul(${1:soul})",
        "description": " ※Params: \n   (soul)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.spawner:SpawnWithDelay:": {
        "prefix": "components.spawner:SpawnWithDelay",
        "body": "components.spawner:SpawnWithDelay(${1:delay})",
        "description": " ※Params: \n   (delay)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.spawner:GoHome:": {
        "prefix": "components.spawner:GoHome",
        "body": "components.spawner:GoHome(${1:child})",
        "description": " ※Params: \n   (child)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.spawner:SetOnOccupiedFn:": {
        "prefix": "components.spawner:SetOnOccupiedFn",
        "body": "components.spawner:SetOnOccupiedFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.spawner:TakeOwnership:": {
        "prefix": "components.spawner:TakeOwnership",
        "body": "components.spawner:TakeOwnership(${1:child})",
        "description": " ※Params: \n   (child)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.spawner:OnLoad:": {
        "prefix": "components.spawner:OnLoad",
        "body": "components.spawner:OnLoad(${1:data},${2:newents})",
        "description": " ※Params: \n   (data)<>[] \n   (newents)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.spawner:LoadPostPass:": {
        "prefix": "components.spawner:LoadPostPass",
        "body": "components.spawner:LoadPostPass(${1:newents},${2:savedata})",
        "description": " ※Params: \n   (newents)<>[] \n   (savedata)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.spawner:CancelSpawning:": {
        "prefix": "components.spawner:CancelSpawning",
        "body": "components.spawner:CancelSpawning()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.spawner:SetOnVacateFn:": {
        "prefix": "components.spawner:SetOnVacateFn",
        "body": "components.spawner:SetOnVacateFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.spawner:ReleaseChild:": {
        "prefix": "components.spawner:ReleaseChild",
        "body": "components.spawner:ReleaseChild()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.spawner:OnRemoveFromEntity:": {
        "prefix": "components.spawner:OnRemoveFromEntity",
        "body": "components.spawner:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.spawner:SetWaterSpawning:": {
        "prefix": "components.spawner:SetWaterSpawning",
        "body": "components.spawner:SetWaterSpawning(${1:spawn_in_water},${2:spawn_on_boats})",
        "description": " ※Params: \n   (spawn_in_water)<>[] \n   (spawn_on_boats)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.spawner:OnChildKilled:": {
        "prefix": "components.spawner:OnChildKilled",
        "body": "components.spawner:OnChildKilled(${1:child})",
        "description": " ※Params: \n   (child)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.spawner:IsOccupied:": {
        "prefix": "components.spawner:IsOccupied",
        "body": "components.spawner:IsOccupied()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.spawner:GetDebugString:": {
        "prefix": "components.spawner:GetDebugString",
        "body": "components.spawner:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.spawner:OnSave:": {
        "prefix": "components.spawner:OnSave",
        "body": "components.spawner:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.spawner:SetQueueSpawning:": {
        "prefix": "components.spawner:SetQueueSpawning",
        "body": "components.spawner:SetQueueSpawning(${1:queued},${2:retryperiod})",
        "description": " ※Params: \n   (queued)<>[] \n   (retryperiod)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.spawner:IsSpawnPending:": {
        "prefix": "components.spawner:IsSpawnPending",
        "body": "components.spawner:IsSpawnPending()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.spawner:Configure:": {
        "prefix": "components.spawner:Configure",
        "body": "components.spawner:Configure(${1:childname},${2:delay},${3:startdelay})",
        "description": " ※Params: \n   (childname)<>[] \n   (delay)<>[] \n   (startdelay)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.spawner:SetOnlySpawnOffscreen:": {
        "prefix": "components.spawner:SetOnlySpawnOffscreen",
        "body": "components.spawner:SetOnlySpawnOffscreen(${1:offscreen})",
        "description": " ※Params: \n   (offscreen)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.spawnfader:OnUpdate:": {
        "prefix": "components.spawnfader:OnUpdate",
        "body": "components.spawnfader:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.spawnfader:Cancel:": {
        "prefix": "components.spawnfader:Cancel",
        "body": "components.spawnfader:Cancel()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.spawnfader:FadeIn:": {
        "prefix": "components.spawnfader:FadeIn",
        "body": "components.spawnfader:FadeIn()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.spawnfader:OnRemoveFromEntity:": {
        "prefix": "components.spawnfader:OnRemoveFromEntity",
        "body": "components.spawnfader:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.spectatorcorpse:OnUpdate:": {
        "prefix": "components.spectatorcorpse:OnUpdate",
        "body": "components.spectatorcorpse:OnUpdate()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.spell:OnFinish:": {
        "prefix": "components.spell:OnFinish",
        "body": "components.spell:OnFinish()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.spell:OnTarget:": {
        "prefix": "components.spell:OnTarget",
        "body": "components.spell:OnTarget()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.spell:OnLoad:": {
        "prefix": "components.spell:OnLoad",
        "body": "components.spell:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.spell:LoadPostPass:": {
        "prefix": "components.spell:LoadPostPass",
        "body": "components.spell:LoadPostPass(${1:newents},${2:data})",
        "description": " ※Params: \n   (newents)<>[] \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.spell:SetTarget:": {
        "prefix": "components.spell:SetTarget",
        "body": "components.spell:SetTarget(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.spell:ResumeSpell:": {
        "prefix": "components.spell:ResumeSpell",
        "body": "components.spell:ResumeSpell()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.spell:OnStart:": {
        "prefix": "components.spell:OnStart",
        "body": "components.spell:OnStart()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.spell:StartSpell:": {
        "prefix": "components.spell:StartSpell",
        "body": "components.spell:StartSpell()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.spell:SetVariables:": {
        "prefix": "components.spell:SetVariables",
        "body": "components.spell:SetVariables(${1:variables})",
        "description": " ※Params: \n   (variables)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.spell:OnSave:": {
        "prefix": "components.spell:OnSave",
        "body": "components.spell:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.spell:OnUpdate:": {
        "prefix": "components.spell:OnUpdate",
        "body": "components.spell:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.spellbook:SetBgData:": {
        "prefix": "components.spellbook:SetBgData",
        "body": "components.spellbook:SetBgData(${1:bgdata})",
        "description": " ※Params: \n   (bgdata)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.spellbook:SetRequiredTag:": {
        "prefix": "components.spellbook:SetRequiredTag",
        "body": "components.spellbook:SetRequiredTag(${1:tag})",
        "description": " ※Params: \n   (tag)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.spellbook:CastSpell:": {
        "prefix": "components.spellbook:CastSpell",
        "body": "components.spellbook:CastSpell(${1:user})",
        "description": " ※Params: \n   (user)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.spellbook:GetSelectedSpell:": {
        "prefix": "components.spellbook:GetSelectedSpell",
        "body": "components.spellbook:GetSelectedSpell()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.spellbook:CanBeUsedBy:": {
        "prefix": "components.spellbook:CanBeUsedBy",
        "body": "components.spellbook:CanBeUsedBy(${1:user})",
        "description": " ※Params: \n   (user)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.spellbook:SelectSpell:": {
        "prefix": "components.spellbook:SelectSpell",
        "body": "components.spellbook:SelectSpell(${1:id})",
        "description": " ※Params: \n   (id)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.spellbook:HasSpellFn:": {
        "prefix": "components.spellbook:HasSpellFn",
        "body": "components.spellbook:HasSpellFn()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.spellbook:SetSpellFn:": {
        "prefix": "components.spellbook:SetSpellFn",
        "body": "components.spellbook:SetSpellFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.spellbook:GetSpellName:": {
        "prefix": "components.spellbook:GetSpellName",
        "body": "components.spellbook:GetSpellName()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.spellbook:SetSpellName:": {
        "prefix": "components.spellbook:SetSpellName",
        "body": "components.spellbook:SetSpellName(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.spellbook:SetRadius:": {
        "prefix": "components.spellbook:SetRadius",
        "body": "components.spellbook:SetRadius(${1:radius})",
        "description": " ※Params: \n   (radius)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.spellbook:OpenSpellBook:": {
        "prefix": "components.spellbook:OpenSpellBook",
        "body": "components.spellbook:OpenSpellBook(${1:user})",
        "description": " ※Params: \n   (user)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.spellbook:SetOnCloseFn:": {
        "prefix": "components.spellbook:SetOnCloseFn",
        "body": "components.spellbook:SetOnCloseFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.spellbook:SetItems:": {
        "prefix": "components.spellbook:SetItems",
        "body": "components.spellbook:SetItems(${1:items})",
        "description": " ※Params: \n   (items)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.spellbook:SetOnOpenFn:": {
        "prefix": "components.spellbook:SetOnOpenFn",
        "body": "components.spellbook:SetOnOpenFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.spellbook:SetFocusRadius:": {
        "prefix": "components.spellbook:SetFocusRadius",
        "body": "components.spellbook:SetFocusRadius(${1:radius})",
        "description": " ※Params: \n   (radius)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.spellbookcooldowns:GetDebugString:": {
        "prefix": "components.spellbookcooldowns:GetDebugString",
        "body": "components.spellbookcooldowns:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.spellbookcooldowns:StopSpellCooldown:": {
        "prefix": "components.spellbookcooldowns:StopSpellCooldown",
        "body": "components.spellbookcooldowns:StopSpellCooldown(${1:spellname})",
        "description": " ※Params: \n   (spellname)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.spellbookcooldowns:RegisterSpellbookCooldown:": {
        "prefix": "components.spellbookcooldowns:RegisterSpellbookCooldown",
        "body": "components.spellbookcooldowns:RegisterSpellbookCooldown(${1:cd})",
        "description": " ※Params: \n   (cd)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.spellbookcooldowns:RestartSpellCooldown:": {
        "prefix": "components.spellbookcooldowns:RestartSpellCooldown",
        "body": "components.spellbookcooldowns:RestartSpellCooldown(${1:spellname},${2:duration})",
        "description": " ※Params: \n   (spellname)<>[] \n   (duration)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.spellbookcooldowns:GetSpellCooldownPercent:": {
        "prefix": "components.spellbookcooldowns:GetSpellCooldownPercent",
        "body": "components.spellbookcooldowns:GetSpellCooldownPercent(${1:spellname})",
        "description": " ※Params: \n   (spellname)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.spellcaster:SetOnSpellCastFn:": {
        "prefix": "components.spellcaster:SetOnSpellCastFn",
        "body": "components.spellcaster:SetOnSpellCastFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.spellcaster:SetCanCastFn:": {
        "prefix": "components.spellcaster:SetCanCastFn",
        "body": "components.spellcaster:SetCanCastFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.spellcaster:CastSpell:": {
        "prefix": "components.spellcaster:CastSpell",
        "body": "components.spellcaster:CastSpell(${1:target},${2:pos},${3:doer})",
        "description": " ※Params: \n   (target)<>[] \n   (pos)<>[] \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.spellcaster:SetSpellType:": {
        "prefix": "components.spellcaster:SetSpellType",
        "body": "components.spellcaster:SetSpellType(${1:type})",
        "description": " ※Params: \n   (type)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.spellcaster:SetSpellFn:": {
        "prefix": "components.spellcaster:SetSpellFn",
        "body": "components.spellcaster:SetSpellFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.spellcaster:OnRemoveFromEntity:": {
        "prefix": "components.spellcaster:OnRemoveFromEntity",
        "body": "components.spellcaster:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.spidermutator:SetMutationTarget:": {
        "prefix": "components.spidermutator:SetMutationTarget",
        "body": "components.spidermutator:SetMutationTarget(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.spidermutator:Mutate:": {
        "prefix": "components.spidermutator:Mutate",
        "body": "components.spidermutator:Mutate(${1:spider},${2:skip_event},${3:giver})",
        "description": " ※Params: \n   (spider)<>[] \n   (skip_event)<>[] \n   (giver)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.spidermutator:CanMutate:": {
        "prefix": "components.spidermutator:CanMutate",
        "body": "components.spidermutator:CanMutate(${1:spider})",
        "description": " ※Params: \n   (spider)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.spooked:Spook:": {
        "prefix": "components.spooked:Spook",
        "body": "components.spooked:Spook(${1:source})",
        "description": " ※Params: \n   (source)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.spooked:ShouldSpook:": {
        "prefix": "components.spooked:ShouldSpook",
        "body": "components.spooked:ShouldSpook()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.spooked:GetDebugString:": {
        "prefix": "components.spooked:GetDebugString",
        "body": "components.spooked:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.squadmember:GetDebugString:": {
        "prefix": "components.squadmember:GetDebugString",
        "body": "components.squadmember:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.squadmember:LeaveSquad:": {
        "prefix": "components.squadmember:LeaveSquad",
        "body": "components.squadmember:LeaveSquad()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.squadmember:GetOtherMembers:": {
        "prefix": "components.squadmember:GetOtherMembers",
        "body": "components.squadmember:GetOtherMembers()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.squadmember:JoinSquad:": {
        "prefix": "components.squadmember:JoinSquad",
        "body": "components.squadmember:JoinSquad(${1:squadname})",
        "description": " ※Params: \n   (squadname)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.squadmember:GetSquadName:": {
        "prefix": "components.squadmember:GetSquadName",
        "body": "components.squadmember:GetSquadName()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.squadmember:IsInSquad:": {
        "prefix": "components.squadmember:IsInSquad",
        "body": "components.squadmember:IsInSquad()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.stackable:StackSize:": {
        "prefix": "components.stackable:StackSize",
        "body": "components.stackable:StackSize()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.stackable:Get:": {
        "prefix": "components.stackable:Get",
        "body": "components.stackable:Get(${1:num})",
        "description": " ※Params: \n   (num)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.stackable:Put:": {
        "prefix": "components.stackable:Put",
        "body": "components.stackable:Put(${1:item},${2:source_pos})",
        "description": " ※Params: \n   (item)<>[] \n   (source_pos)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.stackable:RoomLeft:": {
        "prefix": "components.stackable:RoomLeft",
        "body": "components.stackable:RoomLeft()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.stackable:IsFull:": {
        "prefix": "components.stackable:IsFull",
        "body": "components.stackable:IsFull()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.stackable:SetIgnoreMaxSize:": {
        "prefix": "components.stackable:SetIgnoreMaxSize",
        "body": "components.stackable:SetIgnoreMaxSize(${1:ignoremaxsize})",
        "description": " ※Params: \n   (ignoremaxsize)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.stackable:SetStackSize:": {
        "prefix": "components.stackable:SetStackSize",
        "body": "components.stackable:SetStackSize(${1:sz})",
        "description": " ※Params: \n   (sz)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.stackable:GetDebugString:": {
        "prefix": "components.stackable:GetDebugString",
        "body": "components.stackable:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.stackable:SetOnDeStack:": {
        "prefix": "components.stackable:SetOnDeStack",
        "body": "components.stackable:SetOnDeStack(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.stackable:OnLoad:": {
        "prefix": "components.stackable:OnLoad",
        "body": "components.stackable:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.stackable:IsStack:": {
        "prefix": "components.stackable:IsStack",
        "body": "components.stackable:IsStack()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.stackable:OnSave:": {
        "prefix": "components.stackable:OnSave",
        "body": "components.stackable:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.stackable:IsOverStacked:": {
        "prefix": "components.stackable:IsOverStacked",
        "body": "components.stackable:IsOverStacked()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.staffsanity:DoCastingDelta:": {
        "prefix": "components.staffsanity:DoCastingDelta",
        "body": "components.staffsanity:DoCastingDelta(${1:amount})",
        "description": " ※Params: \n   (amount)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.staffsanity:SetMultiplier:": {
        "prefix": "components.staffsanity:SetMultiplier",
        "body": "components.staffsanity:SetMultiplier(${1:mult})",
        "description": " ※Params: \n   (mult)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.stageactingprop:AddGeneralScript:": {
        "prefix": "components.stageactingprop:AddGeneralScript",
        "body": "components.stageactingprop:AddGeneralScript(${1:script_name},${2:script_content})",
        "description": " ※Params: \n   (script_name)<>[] \n   (script_content)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.stageactingprop:SpawnBirds:": {
        "prefix": "components.stageactingprop:SpawnBirds",
        "body": "components.stageactingprop:SpawnBirds(${1:arch})",
        "description": " ※Params: \n   (arch)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.stageactingprop:FindCostume:": {
        "prefix": "components.stageactingprop:FindCostume",
        "body": "components.stageactingprop:FindCostume(${1:head},${2:body})",
        "description": " ※Params: \n   (head)<>[] \n   (body)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.stageactingprop:LoadPostPass:": {
        "prefix": "components.stageactingprop:LoadPostPass",
        "body": "components.stageactingprop:LoadPostPass(${1:newents},${2:data})",
        "description": " ※Params: \n   (newents)<>[] \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.stageactingprop:EnableProp:": {
        "prefix": "components.stageactingprop:EnableProp",
        "body": "components.stageactingprop:EnableProp()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.stageactingprop:LongUpdate:": {
        "prefix": "components.stageactingprop:LongUpdate",
        "body": "components.stageactingprop:LongUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.stageactingprop:SetEnabledFn:": {
        "prefix": "components.stageactingprop:SetEnabledFn",
        "body": "components.stageactingprop:SetEnabledFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.stageactingprop:CheckCostume:": {
        "prefix": "components.stageactingprop:CheckCostume",
        "body": "components.stageactingprop:CheckCostume(${1:player})",
        "description": " ※Params: \n   (player)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.stageactingprop:SetDisabledFn:": {
        "prefix": "components.stageactingprop:SetDisabledFn",
        "body": "components.stageactingprop:SetDisabledFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.stageactingprop:DisableProp:": {
        "prefix": "components.stageactingprop:DisableProp",
        "body": "components.stageactingprop:DisableProp(${1:time})",
        "description": " ※Params: \n   (time)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.stageactingprop:EndPerformance:": {
        "prefix": "components.stageactingprop:EndPerformance",
        "body": "components.stageactingprop:EndPerformance(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.stageactingprop:OnRemoveFromEntity:": {
        "prefix": "components.stageactingprop:OnRemoveFromEntity",
        "body": "components.stageactingprop:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.stageactingprop:OnSave:": {
        "prefix": "components.stageactingprop:OnSave",
        "body": "components.stageactingprop:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.stageactingprop:CollectCast:": {
        "prefix": "components.stageactingprop:CollectCast",
        "body": "components.stageactingprop:CollectCast(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.stageactingprop:ClearPerformance:": {
        "prefix": "components.stageactingprop:ClearPerformance",
        "body": "components.stageactingprop:ClearPerformance(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.stageactingprop:DoPerformance:": {
        "prefix": "components.stageactingprop:DoPerformance",
        "body": "components.stageactingprop:DoPerformance(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.stageactingprop:FinishAct:": {
        "prefix": "components.stageactingprop:FinishAct",
        "body": "components.stageactingprop:FinishAct(${1:next_act})",
        "description": " ※Params: \n   (next_act)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.stageactingprop:FindScript:": {
        "prefix": "components.stageactingprop:FindScript",
        "body": "components.stageactingprop:FindScript(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.stageactingprop:AddPlay:": {
        "prefix": "components.stageactingprop:AddPlay",
        "body": "components.stageactingprop:AddPlay(${1:playdata})",
        "description": " ※Params: \n   (playdata)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.stageactingprop:OnUpdate:": {
        "prefix": "components.stageactingprop:OnUpdate",
        "body": "components.stageactingprop:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.stageactor:OnLoad:": {
        "prefix": "components.stageactor:OnLoad",
        "body": "components.stageactor:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.stageactor:SetOnStoryBeginFn:": {
        "prefix": "components.stageactor:SetOnStoryBeginFn",
        "body": "components.stageactor:SetOnStoryBeginFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.stageactor:IsTellingStory:": {
        "prefix": "components.stageactor:IsTellingStory",
        "body": "components.stageactor:IsTellingStory()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.stageactor:AbortStory:": {
        "prefix": "components.stageactor:AbortStory",
        "body": "components.stageactor:AbortStory(${1:reason})",
        "description": " ※Params: \n   (reason)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.stageactor:GetStage:": {
        "prefix": "components.stageactor:GetStage",
        "body": "components.stageactor:GetStage(${1:stage})",
        "description": " ※Params: \n   (stage)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.stageactor:OnDone:": {
        "prefix": "components.stageactor:OnDone",
        "body": "components.stageactor:OnDone()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.stageactor:performedplay:": {
        "prefix": "components.stageactor:performedplay",
        "body": "components.stageactor:performedplay(${1:story_id})",
        "description": " ※Params: \n   (story_id)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.stageactor:SetOnStoryOverFn:": {
        "prefix": "components.stageactor:SetOnStoryOverFn",
        "body": "components.stageactor:SetOnStoryOverFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.stageactor:TellStory:": {
        "prefix": "components.stageactor:TellStory",
        "body": "components.stageactor:TellStory(${1:storyprop},${2:story})",
        "description": " ※Params: \n   (storyprop)<>[] \n   (story)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.stageactor:OnStoryTick:": {
        "prefix": "components.stageactor:OnStoryTick",
        "body": "components.stageactor:OnStoryTick()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.stageactor:SetStage:": {
        "prefix": "components.stageactor:SetStage",
        "body": "components.stageactor:SetStage(${1:stage})",
        "description": " ※Params: \n   (stage)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.stageactor:performplay:": {
        "prefix": "components.stageactor:performplay",
        "body": "components.stageactor:performplay()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.stageactor:OnSave:": {
        "prefix": "components.stageactor:OnSave",
        "body": "components.stageactor:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.stageactor:OnRemoveFromEntity:": {
        "prefix": "components.stageactor:OnRemoveFromEntity",
        "body": "components.stageactor:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.steeringwheel:StopSteering:": {
        "prefix": "components.steeringwheel:StopSteering",
        "body": "components.steeringwheel:StopSteering()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.steeringwheel:StartSteering:": {
        "prefix": "components.steeringwheel:StartSteering",
        "body": "components.steeringwheel:StartSteering(${1:sailor})",
        "description": " ※Params: \n   (sailor)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.steeringwheel:GetDebugString:": {
        "prefix": "components.steeringwheel:GetDebugString",
        "body": "components.steeringwheel:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.steeringwheel:OnRemoveFromEntity:": {
        "prefix": "components.steeringwheel:OnRemoveFromEntity",
        "body": "components.steeringwheel:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.steeringwheel:SetOnStartSteeringFn:": {
        "prefix": "components.steeringwheel:SetOnStartSteeringFn",
        "body": "components.steeringwheel:SetOnStartSteeringFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.steeringwheel:SetOnStopSteeringFn:": {
        "prefix": "components.steeringwheel:SetOnStopSteeringFn",
        "body": "components.steeringwheel:SetOnStopSteeringFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.steeringwheeluser:Steer:": {
        "prefix": "components.steeringwheeluser:Steer",
        "body": "components.steeringwheeluser:Steer(${1:pos_x},${2:pos_z})",
        "description": " ※Params: \n   (pos_x)<>[] \n   (pos_z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.steeringwheeluser:SetSteeringWheel:": {
        "prefix": "components.steeringwheeluser:SetSteeringWheel",
        "body": "components.steeringwheeluser:SetSteeringWheel(${1:steering_wheel})",
        "description": " ※Params: \n   (steering_wheel)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.steeringwheeluser:GetBoat:": {
        "prefix": "components.steeringwheeluser:GetBoat",
        "body": "components.steeringwheeluser:GetBoat()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.steeringwheeluser:SteerInDir:": {
        "prefix": "components.steeringwheeluser:SteerInDir",
        "body": "components.steeringwheeluser:SteerInDir(${1:dir_x},${2:dir_z})",
        "description": " ※Params: \n   (dir_x)<>[] \n   (dir_z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.steeringwheeluser:OnUpdate:": {
        "prefix": "components.steeringwheeluser:OnUpdate",
        "body": "components.steeringwheeluser:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.stewer:GetTimeToSpoil:": {
        "prefix": "components.stewer:GetTimeToSpoil",
        "body": "components.stewer:GetTimeToSpoil()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.stewer:LongUpdate:": {
        "prefix": "components.stewer:LongUpdate",
        "body": "components.stewer:LongUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.stewer:GetRecipeForProduct:": {
        "prefix": "components.stewer:GetRecipeForProduct",
        "body": "components.stewer:GetRecipeForProduct()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.stewer:Harvest:": {
        "prefix": "components.stewer:Harvest",
        "body": "components.stewer:Harvest(${1:harvester})",
        "description": " ※Params: \n   (harvester)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.stewer:IsSpoiling:": {
        "prefix": "components.stewer:IsSpoiling",
        "body": "components.stewer:IsSpoiling()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.stewer:StartCooking:": {
        "prefix": "components.stewer:StartCooking",
        "body": "components.stewer:StartCooking(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.stewer:OnLoad:": {
        "prefix": "components.stewer:OnLoad",
        "body": "components.stewer:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.stewer:IsDone:": {
        "prefix": "components.stewer:IsDone",
        "body": "components.stewer:IsDone()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.stewer:CanCook:": {
        "prefix": "components.stewer:CanCook",
        "body": "components.stewer:CanCook()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.stewer:GetDebugString:": {
        "prefix": "components.stewer:GetDebugString",
        "body": "components.stewer:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.stewer:IsCooking:": {
        "prefix": "components.stewer:IsCooking",
        "body": "components.stewer:IsCooking()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.stewer:GetTimeToCook:": {
        "prefix": "components.stewer:GetTimeToCook",
        "body": "components.stewer:GetTimeToCook()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.stewer:StopCooking:": {
        "prefix": "components.stewer:StopCooking",
        "body": "components.stewer:StopCooking(${1:reason})",
        "description": " ※Params: \n   (reason)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.stewer:OnSave:": {
        "prefix": "components.stewer:OnSave",
        "body": "components.stewer:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.stewer:OnRemoveFromEntity:": {
        "prefix": "components.stewer:OnRemoveFromEntity",
        "body": "components.stewer:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.stormwatcher:GetCurrentStorm:": {
        "prefix": "components.stormwatcher:GetCurrentStorm",
        "body": "components.stormwatcher:GetCurrentStorm(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.stormwatcher:OnUpdate:": {
        "prefix": "components.stormwatcher:OnUpdate",
        "body": "components.stormwatcher:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.stormwatcher:UpdateStormLevel:": {
        "prefix": "components.stormwatcher:UpdateStormLevel",
        "body": "components.stormwatcher:UpdateStormLevel()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.stormwatcher:UpdateStorms:": {
        "prefix": "components.stormwatcher:UpdateStorms",
        "body": "components.stormwatcher:UpdateStorms(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.stormwatcher:CheckStorms:": {
        "prefix": "components.stormwatcher:CheckStorms",
        "body": "components.stormwatcher:CheckStorms(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.stormwatcher:GetStormLevel:": {
        "prefix": "components.stormwatcher:GetStormLevel",
        "body": "components.stormwatcher:GetStormLevel(${1:stormtype})",
        "description": " ※Params: \n   (stormtype)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.storyteller:IsTellingStory:": {
        "prefix": "components.storyteller:IsTellingStory",
        "body": "components.storyteller:IsTellingStory()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.storyteller:AbortStory:": {
        "prefix": "components.storyteller:AbortStory",
        "body": "components.storyteller:AbortStory(${1:reason})",
        "description": " ※Params: \n   (reason)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.storyteller:OnDone:": {
        "prefix": "components.storyteller:OnDone",
        "body": "components.storyteller:OnDone()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.storyteller:TellStory:": {
        "prefix": "components.storyteller:TellStory",
        "body": "components.storyteller:TellStory(${1:storyprop})",
        "description": " ※Params: \n   (storyprop)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.storyteller:OnStoryTick:": {
        "prefix": "components.storyteller:OnStoryTick",
        "body": "components.storyteller:OnStoryTick()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.storyteller:SetOnStoryOverFn:": {
        "prefix": "components.storyteller:SetOnStoryOverFn",
        "body": "components.storyteller:SetOnStoryOverFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.storyteller:SetStoryToTellFn:": {
        "prefix": "components.storyteller:SetStoryToTellFn",
        "body": "components.storyteller:SetStoryToTellFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.storyteller:SetOnStoryBeginFn:": {
        "prefix": "components.storyteller:SetOnStoryBeginFn",
        "body": "components.storyteller:SetOnStoryBeginFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.storyteller:OnRemoveFromEntity:": {
        "prefix": "components.storyteller:OnRemoveFromEntity",
        "body": "components.storyteller:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.storytellingprop:OnRemoveFromEntity:": {
        "prefix": "components.storytellingprop:OnRemoveFromEntity",
        "body": "components.storytellingprop:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.strafer:OnUpdate:": {
        "prefix": "components.strafer:OnUpdate",
        "body": "components.strafer:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.strafer:IsAiming:": {
        "prefix": "components.strafer:IsAiming",
        "body": "components.strafer:IsAiming()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.strafer:OnRemoveFromEntity:": {
        "prefix": "components.strafer:OnRemoveFromEntity",
        "body": "components.strafer:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.stretcher:OnEntityWake:": {
        "prefix": "components.stretcher:OnEntityWake",
        "body": "components.stretcher:OnEntityWake()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.stretcher:SetStretchTarget:": {
        "prefix": "components.stretcher:SetStretchTarget",
        "body": "components.stretcher:SetStretchTarget(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.stretcher:OnUpdate:": {
        "prefix": "components.stretcher:OnUpdate",
        "body": "components.stretcher:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.stretcher:SetWidthRatio:": {
        "prefix": "components.stretcher:SetWidthRatio",
        "body": "components.stretcher:SetWidthRatio(${1:ratio})",
        "description": " ※Params: \n   (ratio)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.stretcher:OnEntitySleep:": {
        "prefix": "components.stretcher:OnEntitySleep",
        "body": "components.stretcher:OnEntitySleep()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.stretcher:SetRestingLength:": {
        "prefix": "components.stretcher:SetRestingLength",
        "body": "components.stretcher:SetRestingLength(${1:length})",
        "description": " ※Params: \n   (length)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.strongman:DoWorkout:": {
        "prefix": "components.strongman:DoWorkout",
        "body": "components.strongman:DoWorkout(${1:gym})",
        "description": " ※Params: \n   (gym)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.strongman:StopWorkout:": {
        "prefix": "components.strongman:StopWorkout",
        "body": "components.strongman:StopWorkout()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.stuckdetection:Reset:": {
        "prefix": "components.stuckdetection:Reset",
        "body": "components.stuckdetection:Reset()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.stuckdetection:IsStuck:": {
        "prefix": "components.stuckdetection:IsStuck",
        "body": "components.stuckdetection:IsStuck()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.stuckdetection:SetTimeToStuck:": {
        "prefix": "components.stuckdetection:SetTimeToStuck",
        "body": "components.stuckdetection:SetTimeToStuck(${1:t})",
        "description": " ※Params: \n   (t)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.stunnable:TakeDamage:": {
        "prefix": "components.stunnable:TakeDamage",
        "body": "components.stunnable:TakeDamage(${1:damage})",
        "description": " ※Params: \n   (damage)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.stunnable:GetDamageInPeriod:": {
        "prefix": "components.stunnable:GetDamageInPeriod",
        "body": "components.stunnable:GetDamageInPeriod()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.stunnable:Stun:": {
        "prefix": "components.stunnable:Stun",
        "body": "components.stunnable:Stun()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.submersible:Submerge:": {
        "prefix": "components.submersible:Submerge",
        "body": "components.submersible:Submerge()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.submersible:MakeSunken:": {
        "prefix": "components.submersible:MakeSunken",
        "body": "components.submersible:MakeSunken(${1:x},${2:z},${3:ignore_boats},${4:nosplash})",
        "description": " ※Params: \n   (x)<>[] \n   (z)<>[] \n   (ignore_boats)<>[] \n   (nosplash)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.submersible:OnLoad:": {
        "prefix": "components.submersible:OnLoad",
        "body": "components.submersible:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.submersible:OnLanded:": {
        "prefix": "components.submersible:OnLanded",
        "body": "components.submersible:OnLanded()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.submersible:OnSave:": {
        "prefix": "components.submersible:OnSave",
        "body": "components.submersible:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.submersible:GetUnderwaterObject:": {
        "prefix": "components.submersible:GetUnderwaterObject",
        "body": "components.submersible:GetUnderwaterObject()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.submersible:OnRemoveFromEntity:": {
        "prefix": "components.submersible:OnRemoveFromEntity",
        "body": "components.submersible:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.symbolswapdata:GetDebugString:": {
        "prefix": "components.symbolswapdata:GetDebugString",
        "body": "components.symbolswapdata:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.symbolswapdata:SetData:": {
        "prefix": "components.symbolswapdata:SetData",
        "body": "components.symbolswapdata:SetData(${1:build},${2:symbol},${3:is_skinned})",
        "description": " ※Params: \n   (build)<>[] \n   (symbol)<>[] \n   (is_skinned)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.tackler:SetOnCollideFn:": {
        "prefix": "components.tackler:SetOnCollideFn",
        "body": "components.tackler:SetOnCollideFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.tackler:SetStructureDamageMultiplier:": {
        "prefix": "components.tackler:SetStructureDamageMultiplier",
        "body": "components.tackler:SetStructureDamageMultiplier(${1:mult})",
        "description": " ※Params: \n   (mult)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.tackler:StartTackle:": {
        "prefix": "components.tackler:StartTackle",
        "body": "components.tackler:StartTackle()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.tackler:CheckCollision:": {
        "prefix": "components.tackler:CheckCollision",
        "body": "components.tackler:CheckCollision(${1:ignores})",
        "description": " ※Params: \n   (ignores)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.tackler:AddWorkAction:": {
        "prefix": "components.tackler:AddWorkAction",
        "body": "components.tackler:AddWorkAction(${1:action},${2:amount})",
        "description": " ※Params: \n   (action)<>[] \n   (amount)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.tackler:SetDistance:": {
        "prefix": "components.tackler:SetDistance",
        "body": "components.tackler:SetDistance(${1:distance})",
        "description": " ※Params: \n   (distance)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.tackler:SetRadius:": {
        "prefix": "components.tackler:SetRadius",
        "body": "components.tackler:SetRadius(${1:radius})",
        "description": " ※Params: \n   (radius)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.tackler:CheckEdge:": {
        "prefix": "components.tackler:CheckEdge",
        "body": "components.tackler:CheckEdge()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.tackler:SetEdgeDistance:": {
        "prefix": "components.tackler:SetEdgeDistance",
        "body": "components.tackler:SetEdgeDistance(${1:distance})",
        "description": " ※Params: \n   (distance)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.tackler:SetOnTrampleFn:": {
        "prefix": "components.tackler:SetOnTrampleFn",
        "body": "components.tackler:SetOnTrampleFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.tackler:SetOnStartTackleFn:": {
        "prefix": "components.tackler:SetOnStartTackleFn",
        "body": "components.tackler:SetOnStartTackleFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.tacklesketch:Teach:": {
        "prefix": "components.tacklesketch:Teach",
        "body": "components.tacklesketch:Teach(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.tacklesketch:OnRemoveFromEntity:": {
        "prefix": "components.tacklesketch:OnRemoveFromEntity",
        "body": "components.tacklesketch:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.talker:SetOffsetFn:": {
        "prefix": "components.talker:SetOffsetFn",
        "body": "components.talker:SetOffsetFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.talker:IgnoreAll:": {
        "prefix": "components.talker:IgnoreAll",
        "body": "components.talker:IgnoreAll(${1:source})",
        "description": " ※Params: \n   (source)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.talker:MakeChatter:": {
        "prefix": "components.talker:MakeChatter",
        "body": "components.talker:MakeChatter()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.talker:Say:": {
        "prefix": "components.talker:Say",
        "body": "components.talker:Say(${1:script},${2:time},${3:noanim},${4:force},${5:nobroadcast},${6:colour},${7:text_filter_context},${8:original_author_netid},${9:onfinishedlinesfn},${10:sgparam})",
        "description": " ※Params: \n   (script)<>[] \n   (time)<>[] \n   (noanim)<>[] \n   (force)<>[] \n   (nobroadcast)<>[] \n   (colour)<>[] \n   (text_filter_context)<>[] \n   (original_author_netid)<>[] \n   (onfinishedlinesfn)<>[] \n   (sgparam)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.talker:StopIgnoringAll:": {
        "prefix": "components.talker:StopIgnoringAll",
        "body": "components.talker:StopIgnoringAll(${1:source})",
        "description": " ※Params: \n   (source)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.talker:ShutUp:": {
        "prefix": "components.talker:ShutUp",
        "body": "components.talker:ShutUp()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.talker:Chatter:": {
        "prefix": "components.talker:Chatter",
        "body": "components.talker:Chatter(${1:strtbl},${2:strid},${3:time},${4:forcetext},${5:echotochatpriority})",
        "description": " ※Params: \n   (strtbl)<>[] \n   (strid)<>[] \n   (time)<>[] \n   (forcetext)<>[] \n   (echotochatpriority)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.talker:OnRemoveFromEntity:": {
        "prefix": "components.talker:OnRemoveFromEntity",
        "body": "components.talker:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.targettracker:IsTracking:": {
        "prefix": "components.targettracker:IsTracking",
        "body": "components.targettracker:IsTracking(${1:testtarget})",
        "description": " ※Params: \n   (testtarget)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.targettracker:SetOnResetTarget:": {
        "prefix": "components.targettracker:SetOnResetTarget",
        "body": "components.targettracker:SetOnResetTarget(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.targettracker:SetOnTimeUpdateFn:": {
        "prefix": "components.targettracker:SetOnTimeUpdateFn",
        "body": "components.targettracker:SetOnTimeUpdateFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.targettracker:TrackTarget:": {
        "prefix": "components.targettracker:TrackTarget",
        "body": "components.targettracker:TrackTarget(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.targettracker:GetTimeTracking:": {
        "prefix": "components.targettracker:GetTimeTracking",
        "body": "components.targettracker:GetTimeTracking()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.targettracker:IsCloningTarget:": {
        "prefix": "components.targettracker:IsCloningTarget",
        "body": "components.targettracker:IsCloningTarget()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.targettracker:SetTimeTracking:": {
        "prefix": "components.targettracker:SetTimeTracking",
        "body": "components.targettracker:SetTimeTracking(${1:time})",
        "description": " ※Params: \n   (time)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.targettracker:SetOnPauseFn:": {
        "prefix": "components.targettracker:SetOnPauseFn",
        "body": "components.targettracker:SetOnPauseFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.targettracker:GetDebugString:": {
        "prefix": "components.targettracker:GetDebugString",
        "body": "components.targettracker:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.targettracker:CloneTargetFrom:": {
        "prefix": "components.targettracker:CloneTargetFrom",
        "body": "components.targettracker:CloneTargetFrom(${1:item},${2:pausetime})",
        "description": " ※Params: \n   (item)<>[] \n   (pausetime)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.targettracker:SetOnResumeFn:": {
        "prefix": "components.targettracker:SetOnResumeFn",
        "body": "components.targettracker:SetOnResumeFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.targettracker:SetShouldKeepTrackingFn:": {
        "prefix": "components.targettracker:SetShouldKeepTrackingFn",
        "body": "components.targettracker:SetShouldKeepTrackingFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.targettracker:Pause:": {
        "prefix": "components.targettracker:Pause",
        "body": "components.targettracker:Pause(${1:time})",
        "description": " ※Params: \n   (time)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.targettracker:HasTarget:": {
        "prefix": "components.targettracker:HasTarget",
        "body": "components.targettracker:HasTarget()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.targettracker:StopTracking:": {
        "prefix": "components.targettracker:StopTracking",
        "body": "components.targettracker:StopTracking(${1:reset})",
        "description": " ※Params: \n   (reset)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.targettracker:IsPaused:": {
        "prefix": "components.targettracker:IsPaused",
        "body": "components.targettracker:IsPaused()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.targettracker:OnUpdate:": {
        "prefix": "components.targettracker:OnUpdate",
        "body": "components.targettracker:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.teacher:SetRecipe:": {
        "prefix": "components.teacher:SetRecipe",
        "body": "components.teacher:SetRecipe(${1:recipe})",
        "description": " ※Params: \n   (recipe)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.teacher:Teach:": {
        "prefix": "components.teacher:Teach",
        "body": "components.teacher:Teach(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.teamattacker:LeaveFormation:": {
        "prefix": "components.teamattacker:LeaveFormation",
        "body": "components.teamattacker:LeaveFormation()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.teamattacker:SearchForTeam:": {
        "prefix": "components.teamattacker:SearchForTeam",
        "body": "components.teamattacker:SearchForTeam()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.teamattacker:ShouldGoHome:": {
        "prefix": "components.teamattacker:ShouldGoHome",
        "body": "components.teamattacker:ShouldGoHome()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.teamattacker:LeaveTeam:": {
        "prefix": "components.teamattacker:LeaveTeam",
        "body": "components.teamattacker:LeaveTeam()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.teamattacker:GetDebugString:": {
        "prefix": "components.teamattacker:GetDebugString",
        "body": "components.teamattacker:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.teamattacker:OnUpdate:": {
        "prefix": "components.teamattacker:OnUpdate",
        "body": "components.teamattacker:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.teamattacker:OnEntityWake:": {
        "prefix": "components.teamattacker:OnEntityWake",
        "body": "components.teamattacker:OnEntityWake()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.teamattacker:OnEntitySleep:": {
        "prefix": "components.teamattacker:OnEntitySleep",
        "body": "components.teamattacker:OnEntitySleep()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.teamattacker:JoinFormation:": {
        "prefix": "components.teamattacker:JoinFormation",
        "body": "components.teamattacker:JoinFormation()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.teamattacker:GetOrders:": {
        "prefix": "components.teamattacker:GetOrders",
        "body": "components.teamattacker:GetOrders()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.teamleader:CenterLeader:": {
        "prefix": "components.teamleader:CenterLeader",
        "body": "components.teamleader:CenterLeader()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.teamleader:OnLostTeammate:": {
        "prefix": "components.teamleader:OnLostTeammate",
        "body": "components.teamleader:OnLostTeammate(${1:member})",
        "description": " ※Params: \n   (member)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.teamleader:GiveOrdersToAllWithOrder:": {
        "prefix": "components.teamleader:GiveOrdersToAllWithOrder",
        "body": "components.teamleader:GiveOrdersToAllWithOrder(${1:order},${2:oldorder})",
        "description": " ※Params: \n   (order)<>[] \n   (oldorder)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.teamleader:DisbandTeam:": {
        "prefix": "components.teamleader:DisbandTeam",
        "body": "components.teamleader:DisbandTeam()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.teamleader:ManageChase:": {
        "prefix": "components.teamleader:ManageChase",
        "body": "components.teamleader:ManageChase(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.teamleader:GetFormationPositions:": {
        "prefix": "components.teamleader:GetFormationPositions",
        "body": "components.teamleader:GetFormationPositions()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.teamleader:BroadcastDistress:": {
        "prefix": "components.teamleader:BroadcastDistress",
        "body": "components.teamleader:BroadcastDistress(${1:member})",
        "description": " ※Params: \n   (member)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.teamleader:TeamSizeControl:": {
        "prefix": "components.teamleader:TeamSizeControl",
        "body": "components.teamleader:TeamSizeControl()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.teamleader:NewTeammate:": {
        "prefix": "components.teamleader:NewTeammate",
        "body": "components.teamleader:NewTeammate(${1:member})",
        "description": " ※Params: \n   (member)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.teamleader:CanAttack:": {
        "prefix": "components.teamleader:CanAttack",
        "body": "components.teamleader:CanAttack()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.teamleader:IsTeamFull:": {
        "prefix": "components.teamleader:IsTeamFull",
        "body": "components.teamleader:IsTeamFull()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.teamleader:GetTeamSize:": {
        "prefix": "components.teamleader:GetTeamSize",
        "body": "components.teamleader:GetTeamSize()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.teamleader:ValidateTeam:": {
        "prefix": "components.teamleader:ValidateTeam",
        "body": "components.teamleader:ValidateTeam()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.teamleader:AllInState:": {
        "prefix": "components.teamleader:AllInState",
        "body": "components.teamleader:AllInState(${1:state})",
        "description": " ※Params: \n   (state)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.teamleader:SetAttackGrpSize:": {
        "prefix": "components.teamleader:SetAttackGrpSize",
        "body": "components.teamleader:SetAttackGrpSize(${1:val})",
        "description": " ※Params: \n   (val)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.teamleader:GetTheta:": {
        "prefix": "components.teamleader:GetTheta",
        "body": "components.teamleader:GetTheta(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.teamleader:SetNewThreat:": {
        "prefix": "components.teamleader:SetNewThreat",
        "body": "components.teamleader:SetNewThreat(${1:threat})",
        "description": " ※Params: \n   (threat)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.teamleader:GiveOrders:": {
        "prefix": "components.teamleader:GiveOrders",
        "body": "components.teamleader:GiveOrders(${1:order},${2:num})",
        "description": " ※Params: \n   (order)<>[] \n   (num)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.teamleader:IsTeamEmpty:": {
        "prefix": "components.teamleader:IsTeamEmpty",
        "body": "components.teamleader:IsTeamEmpty()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.teamleader:SetUp:": {
        "prefix": "components.teamleader:SetUp",
        "body": "components.teamleader:SetUp(${1:target},${2:first_member})",
        "description": " ※Params: \n   (target)<>[] \n   (first_member)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.teamleader:NumberToAttack:": {
        "prefix": "components.teamleader:NumberToAttack",
        "body": "components.teamleader:NumberToAttack()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.teamleader:ValidMember:": {
        "prefix": "components.teamleader:ValidMember",
        "body": "components.teamleader:ValidMember(${1:member})",
        "description": " ※Params: \n   (member)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.teamleader:OnUpdate:": {
        "prefix": "components.teamleader:OnUpdate",
        "body": "components.teamleader:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.teleportedoverride:GetDestTarget:": {
        "prefix": "components.teleportedoverride:GetDestTarget",
        "body": "components.teleportedoverride:GetDestTarget()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.teleportedoverride:GetDestPosition:": {
        "prefix": "components.teleportedoverride:GetDestPosition",
        "body": "components.teleportedoverride:GetDestPosition()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.teleportedoverride:SetDestPositionFn:": {
        "prefix": "components.teleportedoverride:SetDestPositionFn",
        "body": "components.teleportedoverride:SetDestPositionFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.teleportedoverride:SetDestTargetFn:": {
        "prefix": "components.teleportedoverride:SetDestTargetFn",
        "body": "components.teleportedoverride:SetDestTargetFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.teleporter:Activate:": {
        "prefix": "components.teleporter:Activate",
        "body": "components.teleporter:Activate(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.teleporter:RegisterTeleportee:": {
        "prefix": "components.teleporter:RegisterTeleportee",
        "body": "components.teleporter:RegisterTeleportee(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.teleporter:UseTemporaryExit:": {
        "prefix": "components.teleporter:UseTemporaryExit",
        "body": "components.teleporter:UseTemporaryExit(${1:doer},${2:temporaryexit})",
        "description": " ※Params: \n   (doer)<>[] \n   (temporaryexit)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.teleporter:IsActive:": {
        "prefix": "components.teleporter:IsActive",
        "body": "components.teleporter:IsActive()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.teleporter:PushDoneTeleporting:": {
        "prefix": "components.teleporter:PushDoneTeleporting",
        "body": "components.teleporter:PushDoneTeleporting(${1:obj})",
        "description": " ※Params: \n   (obj)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.teleporter:LoadPostPass:": {
        "prefix": "components.teleporter:LoadPostPass",
        "body": "components.teleporter:LoadPostPass(${1:newents},${2:savedata})",
        "description": " ※Params: \n   (newents)<>[] \n   (savedata)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.teleporter:IsBusy:": {
        "prefix": "components.teleporter:IsBusy",
        "body": "components.teleporter:IsBusy()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.teleporter:GetEnabled:": {
        "prefix": "components.teleporter:GetEnabled",
        "body": "components.teleporter:GetEnabled()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.teleporter:OnRemoveFromEntity:": {
        "prefix": "components.teleporter:OnRemoveFromEntity",
        "body": "components.teleporter:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.teleporter:Teleport:": {
        "prefix": "components.teleporter:Teleport",
        "body": "components.teleporter:Teleport(${1:obj})",
        "description": " ※Params: \n   (obj)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.teleporter:IsTargetBusy:": {
        "prefix": "components.teleporter:IsTargetBusy",
        "body": "components.teleporter:IsTargetBusy()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.teleporter:ReceiveItem:": {
        "prefix": "components.teleporter:ReceiveItem",
        "body": "components.teleporter:ReceiveItem(${1:item},${2:source})",
        "description": " ※Params: \n   (item)<>[] \n   (source)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.teleporter:Target:": {
        "prefix": "components.teleporter:Target",
        "body": "components.teleporter:Target(${1:otherTeleporter})",
        "description": " ※Params: \n   (otherTeleporter)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.teleporter:OnLoad:": {
        "prefix": "components.teleporter:OnLoad",
        "body": "components.teleporter:OnLoad(${1:data},${2:newents})",
        "description": " ※Params: \n   (data)<>[] \n   (newents)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.teleporter:SetEnabled:": {
        "prefix": "components.teleporter:SetEnabled",
        "body": "components.teleporter:SetEnabled(${1:enabled})",
        "description": " ※Params: \n   (enabled)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.teleporter:GetDebugString:": {
        "prefix": "components.teleporter:GetDebugString",
        "body": "components.teleporter:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.teleporter:GetTarget:": {
        "prefix": "components.teleporter:GetTarget",
        "body": "components.teleporter:GetTarget()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.teleporter:ReceivePlayer:": {
        "prefix": "components.teleporter:ReceivePlayer",
        "body": "components.teleporter:ReceivePlayer(${1:doer},${2:source})",
        "description": " ※Params: \n   (doer)<>[] \n   (source)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.teleporter:MigrationTarget:": {
        "prefix": "components.teleporter:MigrationTarget",
        "body": "components.teleporter:MigrationTarget(${1:worldid},${2:x},${3:y},${4:z})",
        "description": " ※Params: \n   (worldid)<>[] \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.teleporter:OnSave:": {
        "prefix": "components.teleporter:OnSave",
        "body": "components.teleporter:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.teleporter:UnregisterTeleportee:": {
        "prefix": "components.teleporter:UnregisterTeleportee",
        "body": "components.teleporter:UnregisterTeleportee(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.temperature:GetMoisturePenalty:": {
        "prefix": "components.temperature:GetMoisturePenalty",
        "body": "components.temperature:GetMoisturePenalty()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.temperature:OnLoad:": {
        "prefix": "components.temperature:OnLoad",
        "body": "components.temperature:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.temperature:GetMax:": {
        "prefix": "components.temperature:GetMax",
        "body": "components.temperature:GetMax()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.temperature:IsOverheating:": {
        "prefix": "components.temperature:IsOverheating",
        "body": "components.temperature:IsOverheating()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.temperature:SetTemp:": {
        "prefix": "components.temperature:SetTemp",
        "body": "components.temperature:SetTemp(${1:temp})",
        "description": " ※Params: \n   (temp)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.temperature:SetOverheatHurtRate:": {
        "prefix": "components.temperature:SetOverheatHurtRate",
        "body": "components.temperature:SetOverheatHurtRate(${1:rate})",
        "description": " ※Params: \n   (rate)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.temperature:SetTemperatureInBelly:": {
        "prefix": "components.temperature:SetTemperatureInBelly",
        "body": "components.temperature:SetTemperatureInBelly(${1:delta},${2:duration})",
        "description": " ※Params: \n   (delta)<>[] \n   (duration)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.temperature:GetCurrent:": {
        "prefix": "components.temperature:GetCurrent",
        "body": "components.temperature:GetCurrent()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.temperature:TransferComponent:": {
        "prefix": "components.temperature:TransferComponent",
        "body": "components.temperature:TransferComponent(${1:newinst})",
        "description": " ※Params: \n   (newinst)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.temperature:OnRemoveFromEntity:": {
        "prefix": "components.temperature:OnRemoveFromEntity",
        "body": "components.temperature:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.temperature:RemoveModifier:": {
        "prefix": "components.temperature:RemoveModifier",
        "body": "components.temperature:RemoveModifier(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.temperature:GetInsulation:": {
        "prefix": "components.temperature:GetInsulation",
        "body": "components.temperature:GetInsulation()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.temperature:SetModifier:": {
        "prefix": "components.temperature:SetModifier",
        "body": "components.temperature:SetModifier(${1:name},${2:value})",
        "description": " ※Params: \n   (name)<>[] \n   (value)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.temperature:IsFreezing:": {
        "prefix": "components.temperature:IsFreezing",
        "body": "components.temperature:IsFreezing()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.temperature:SetFreezingHurtRate:": {
        "prefix": "components.temperature:SetFreezingHurtRate",
        "body": "components.temperature:SetFreezingHurtRate(${1:rate})",
        "description": " ※Params: \n   (rate)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.temperature:GetDebugString:": {
        "prefix": "components.temperature:GetDebugString",
        "body": "components.temperature:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.temperature:SetTemperature:": {
        "prefix": "components.temperature:SetTemperature",
        "body": "components.temperature:SetTemperature(${1:value})",
        "description": " ※Params: \n   (value)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.temperature:DoDelta:": {
        "prefix": "components.temperature:DoDelta",
        "body": "components.temperature:DoDelta(${1:delta})",
        "description": " ※Params: \n   (delta)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.temperature:IgnoreTags:": {
        "prefix": "components.temperature:IgnoreTags",
        "body": "components.temperature:IgnoreTags(${1:...})",
        "description": " ※Params: \n   (...)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.temperature:OnSave:": {
        "prefix": "components.temperature:OnSave",
        "body": "components.temperature:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.temperature:OnUpdate:": {
        "prefix": "components.temperature:OnUpdate",
        "body": "components.temperature:OnUpdate(${1:dt},${2:applyhealthdelta})",
        "description": " ※Params: \n   (dt)<>[] \n   (applyhealthdelta)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.temperatureoverrider:SetActiveRadius_Internal:": {
        "prefix": "components.temperatureoverrider:SetActiveRadius_Internal",
        "body": "components.temperatureoverrider:SetActiveRadius_Internal(${1:new},${2:old})",
        "description": " ※Params: \n   (new)<>[] \n   (old)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.temperatureoverrider:GetTemperature:": {
        "prefix": "components.temperatureoverrider:GetTemperature",
        "body": "components.temperatureoverrider:GetTemperature()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.temperatureoverrider:Enable:": {
        "prefix": "components.temperatureoverrider:Enable",
        "body": "components.temperatureoverrider:Enable()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.temperatureoverrider:GetActiveRadius:": {
        "prefix": "components.temperatureoverrider:GetActiveRadius",
        "body": "components.temperatureoverrider:GetActiveRadius()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.temperatureoverrider:SetTemperature:": {
        "prefix": "components.temperatureoverrider:SetTemperature",
        "body": "components.temperatureoverrider:SetTemperature(${1:temperature})",
        "description": " ※Params: \n   (temperature)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.temperatureoverrider:SetRadius:": {
        "prefix": "components.temperatureoverrider:SetRadius",
        "body": "components.temperatureoverrider:SetRadius(${1:radius})",
        "description": " ※Params: \n   (radius)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.temperatureoverrider:Disable:": {
        "prefix": "components.temperatureoverrider:Disable",
        "body": "components.temperatureoverrider:Disable()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.temperatureoverrider:OnRemoveEntity:": {
        "prefix": "components.temperatureoverrider:OnRemoveEntity",
        "body": "components.temperatureoverrider:OnRemoveEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.temperatureoverrider:OnRemoveFromEntity:": {
        "prefix": "components.temperatureoverrider:OnRemoveFromEntity",
        "body": "components.temperatureoverrider:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.terraformer:Terraform:": {
        "prefix": "components.terraformer:Terraform",
        "body": "components.terraformer:Terraform(${1:pt},${2:doer})",
        "description": " ※Params: \n   (pt)<>[] \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.thief:StealItem:": {
        "prefix": "components.thief:StealItem",
        "body": "components.thief:StealItem(${1:victim},${2:itemtosteal},${3:attack})",
        "description": " ※Params: \n   (victim)<>[] \n   (itemtosteal)<>[] \n   (attack)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.thief:SetOnStolenFn:": {
        "prefix": "components.thief:SetOnStolenFn",
        "body": "components.thief:SetOnStolenFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.timer:TransferComponent:": {
        "prefix": "components.timer:TransferComponent",
        "body": "components.timer:TransferComponent(${1:newinst})",
        "description": " ※Params: \n   (newinst)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.timer:LongUpdate:": {
        "prefix": "components.timer:LongUpdate",
        "body": "components.timer:LongUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.timer:ResumeTimer:": {
        "prefix": "components.timer:ResumeTimer",
        "body": "components.timer:ResumeTimer(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.timer:OnSave:": {
        "prefix": "components.timer:OnSave",
        "body": "components.timer:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.timer:StopTimer:": {
        "prefix": "components.timer:StopTimer",
        "body": "components.timer:StopTimer(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.timer:SetTimeLeft:": {
        "prefix": "components.timer:SetTimeLeft",
        "body": "components.timer:SetTimeLeft(${1:name},${2:time})",
        "description": " ※Params: \n   (name)<>[] \n   (time)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.timer:OnLoad:": {
        "prefix": "components.timer:OnLoad",
        "body": "components.timer:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.timer:GetTimeLeft:": {
        "prefix": "components.timer:GetTimeLeft",
        "body": "components.timer:GetTimeLeft(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.timer:PauseTimer:": {
        "prefix": "components.timer:PauseTimer",
        "body": "components.timer:PauseTimer(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.timer:GetDebugString:": {
        "prefix": "components.timer:GetDebugString",
        "body": "components.timer:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.timer:IsPaused:": {
        "prefix": "components.timer:IsPaused",
        "body": "components.timer:IsPaused(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.timer:TimerExists:": {
        "prefix": "components.timer:TimerExists",
        "body": "components.timer:TimerExists(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.timer:GetTimeElapsed:": {
        "prefix": "components.timer:GetTimeElapsed",
        "body": "components.timer:GetTimeElapsed(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.timer:StartTimer:": {
        "prefix": "components.timer:StartTimer",
        "body": "components.timer:StartTimer(${1:name},${2:time},${3:paused},${4:initialtime_override})",
        "description": " ※Params: \n   (name)<>[] \n   (time)<>[] \n   (paused)<>[] \n   (initialtime_override)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.timer:OnRemoveFromEntity:": {
        "prefix": "components.timer:OnRemoveFromEntity",
        "body": "components.timer:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.toggleableitem:ToggleItem:": {
        "prefix": "components.toggleableitem:ToggleItem",
        "body": "components.toggleableitem:ToggleItem()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.toggleableitem:SetOnToggleFn:": {
        "prefix": "components.toggleableitem:SetOnToggleFn",
        "body": "components.toggleableitem:SetOnToggleFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.toggleableitem:CanInteract:": {
        "prefix": "components.toggleableitem:CanInteract",
        "body": "components.toggleableitem:CanInteract(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.tool:SetAction:设置工作类型和效率，工具类型有:ACTIONS.CHOP、ACTIONS.DIG、ACTIONS.HAMMER、ACTIONS.MINE、ACTIONS.NET、ACTIONS.PLAY、ACTIONS.UNSADDLE、ACTIONS.REACH_HIGH、ACTIONS.SCYTHE, 比如粗壮常青树需要砍15次，普通斧效率为1，月光玻璃斧效率为2.5，普通斧头要砍15次，月光玻璃斧只要6次。": {
        "prefix": "components.tool:SetAction",
        "body": "components.tool:SetAction(${1:action},${2:effectiveness})",
        "description": " ※Params: \n   (action)<table>[工具动作类型] \n   (effectiveness)<number>[效率] \n ※Description: 设置工作类型和效率，工具类型有:ACTIONS.CHOP、ACTIONS.DIG、ACTIONS.HAMMER、ACTIONS.MINE、ACTIONS.NET、ACTIONS.PLAY、ACTIONS.UNSADDLE、ACTIONS.REACH_HIGH、ACTIONS.SCYTHE, 比如粗壮常青树需要砍15次，普通斧效率为1，月光玻璃斧效率为2.5，普通斧头要砍15次，月光玻璃斧只要6次。\n ※Contributor: @御坂十七号"
    },
    "Component.tool:GetEffectiveness:": {
        "prefix": "components.tool:GetEffectiveness",
        "body": "components.tool:GetEffectiveness(${1:action})",
        "description": " ※Params: \n   (action)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.tool:EnableToughWork:是否可以在困难模式下工作，传入true就可以豁免workable组件中tough的影响，比如亮茄粉碎者就调用了inst.components.tool:EnableToughWork(true)": {
        "prefix": "components.tool:EnableToughWork",
        "body": "components.tool:EnableToughWork(${1:tough})",
        "description": " ※Params: \n   (tough)<boolean>[困难的] \n ※Description: 是否可以在困难模式下工作，传入true就可以豁免workable组件中tough的影响，比如亮茄粉碎者就调用了inst.components.tool:EnableToughWork(true)\n ※Contributor: @御坂十七号"
    },
    "Component.tool:CanDoToughWork:": {
        "prefix": "components.tool:CanDoToughWork",
        "body": "components.tool:CanDoToughWork()",
        "description": "\n ※Returns: <boolean>[返回该工具是否可以在困难模式下工作] \n ※Description: \n ※Contributor: @御坂十七号"
    },
    "Component.tool:CanDoAction:判断是否可以有某种工具的功能，比如CanDoAction(ACTIONS.CHOP) 判断它是否有砍的功能": {
        "prefix": "components.tool:CanDoAction",
        "body": "components.tool:CanDoAction(${1:action})",
        "description": " ※Params: \n   (action)<table>[工具动作类型] \n ※Returns: <boolean>[是否有action的工具动作类型] \n ※Description: 判断是否可以有某种工具的功能，比如CanDoAction(ACTIONS.CHOP) 判断它是否有砍的功能\n ※Contributor: @御坂十七号"
    },
    "Component.tool:OnRemoveFromEntity:": {
        "prefix": "components.tool:OnRemoveFromEntity",
        "body": "components.tool:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.touchstonetracker:GetDebugString:": {
        "prefix": "components.touchstonetracker:GetDebugString",
        "body": "components.touchstonetracker:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.touchstonetracker:TransferComponent:": {
        "prefix": "components.touchstonetracker:TransferComponent",
        "body": "components.touchstonetracker:TransferComponent(${1:newinst})",
        "description": " ※Params: \n   (newinst)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.touchstonetracker:OnLoad:": {
        "prefix": "components.touchstonetracker:OnLoad",
        "body": "components.touchstonetracker:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.touchstonetracker:IsUsed:": {
        "prefix": "components.touchstonetracker:IsUsed",
        "body": "components.touchstonetracker:IsUsed(${1:touchstone})",
        "description": " ※Params: \n   (touchstone)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.touchstonetracker:OnSave:": {
        "prefix": "components.touchstonetracker:OnSave",
        "body": "components.touchstonetracker:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.touchstonetracker:OnRemoveFromEntity:": {
        "prefix": "components.touchstonetracker:OnRemoveFromEntity",
        "body": "components.touchstonetracker:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.trader:AcceptGift:检查是否能够和愿意接受物品，根据堆叠处理，最后根据配决定是否删除物品或放入库存。触发回调函数/交易失败回调函数": {
        "prefix": "components.trader:AcceptGift",
        "body": "components.trader:AcceptGift(${1:giver},${2:item},${3:count})",
        "description": " ※Params: \n   (giver)<>[] \n   (item)<>[] \n   (count)<>[] \n ※Description: 检查是否能够和愿意接受物品，根据堆叠处理，最后根据配决定是否删除物品或放入库存。触发回调函数/交易失败回调函数\n ※Contributor: @超能力拓芙铁拳"
    },
    "Component.trader:SetAbleToAcceptTest:可以用来覆盖 AbleToAccept 测试": {
        "prefix": "components.trader:SetAbleToAcceptTest",
        "body": "components.trader:SetAbleToAcceptTest(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: 可以用来覆盖 AbleToAccept 测试\n ※Contributor: @超能力拓芙铁拳"
    },
    "Component.trader:IsTryingToTradeWithMe:正在尝试与当前 Trader 实例进行交易": {
        "prefix": "components.trader:IsTryingToTradeWithMe",
        "body": "components.trader:IsTryingToTradeWithMe(${1:inst})",
        "description": " ※Params: \n   (inst)<>[玩家] \n ※Returns: <boolean>[] \n ※Description: 正在尝试与当前 Trader 实例进行交易\n ※Contributor: @超能力拓芙铁拳 "
    },
    "Component.trader:GetDebugString:调试时快速检查 Trader 对象的交易功能是否启用。": {
        "prefix": "components.trader:GetDebugString",
        "body": "components.trader:GetDebugString()",
        "description": "\n ※Description: 调试时快速检查 Trader 对象的交易功能是否启用。\n ※Contributor: @超能力拓芙铁拳"
    },
    "Component.trader:IsAcceptingStacks:检查self.acceptstacks的值": {
        "prefix": "components.trader:IsAcceptingStacks",
        "body": "components.trader:IsAcceptingStacks()",
        "description": "\n ※Description: 检查self.acceptstacks的值\n ※Contributor: @超能力拓芙铁拳"
    },
    "Component.trader:WantsToAccept:判断交易者是否愿意接受某个物品": {
        "prefix": "components.trader:WantsToAccept",
        "body": "components.trader:WantsToAccept(${1:item},${2:giver},${3:count})",
        "description": " ※Params: \n   (item)<>[] \n   (giver)<>[] \n   (count)<>[] \n ※Description: 判断交易者是否愿意接受某个物品\n ※Contributor: @超能力拓芙铁拳"
    },
    "Component.trader:AbleToAccept:检查交易者是否具备物理上的能力来接受物品，例如是否在战斗中、是否在睡觉、或者是否已经死亡。": {
        "prefix": "components.trader:AbleToAccept",
        "body": "components.trader:AbleToAccept(${1:item},${2:giver},${3:count})",
        "description": " ※Params: \n   (item)<>[交易物品] \n   (giver)<>[] \n   (count)<>[] \n ※Description: 检查交易者是否具备物理上的能力来接受物品，例如是否在战斗中、是否在睡觉、或者是否已经死亡。\n ※Contributor: @超能力拓芙铁拳"
    },
    "Component.trader:SetOnRefuse:交易失败回调函数": {
        "prefix": "components.trader:SetOnRefuse",
        "body": "components.trader:SetOnRefuse(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: 交易失败回调函数\n ※Contributor: @超能力拓芙铁拳"
    },
    "Component.trader:SetOnAccept:交易成功回调函数": {
        "prefix": "components.trader:SetOnAccept",
        "body": "components.trader:SetOnAccept(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: 交易成功回调函数\n ※Contributor: @超能力拓芙铁拳"
    },
    "Component.trader:SetAcceptStacks:设置self.acceptstacks = true": {
        "prefix": "components.trader:SetAcceptStacks",
        "body": "components.trader:SetAcceptStacks()",
        "description": "\n ※Description: 设置self.acceptstacks = true\n ※Contributor: @超能力拓芙铁拳"
    },
    "Component.trader:SetAcceptTest:在AbleToAccept通过后执行，用于进一步判断是否接受某个物品": {
        "prefix": "components.trader:SetAcceptTest",
        "body": "components.trader:SetAcceptTest(${1:fn})",
        "description": " ※Params: \n   (fn)<判断函数>[判断物品是否可交易] \n ※Description: 在AbleToAccept通过后执行，用于进一步判断是否接受某个物品\n ※Contributor: @超能力拓芙铁拳"
    },
    "Component.trader:Disable:设置self.enabled = false": {
        "prefix": "components.trader:Disable",
        "body": "components.trader:Disable()",
        "description": "\n ※Description: 设置self.enabled = false\n ※Contributor: @超能力拓芙铁拳"
    },
    "Component.trader:Enable:设置self.enabled = true": {
        "prefix": "components.trader:Enable",
        "body": "components.trader:Enable()",
        "description": "\n ※Description: 设置self.enabled = true\n ※Contributor: @超能力拓芙铁拳"
    },
    "Component.trader:OnRemoveFromEntity:移除trader以及alltrader标签": {
        "prefix": "components.trader:OnRemoveFromEntity",
        "body": "components.trader:OnRemoveFromEntity()",
        "description": "\n ※Description: 移除trader以及alltrader标签\n ※Contributor: @超能力拓芙铁拳"
    },
    "Component.transformer:RevertOnSleep:": {
        "prefix": "components.transformer:RevertOnSleep",
        "body": "components.transformer:RevertOnSleep()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.transformer:SetRevertEvent:": {
        "prefix": "components.transformer:SetRevertEvent",
        "body": "components.transformer:SetRevertEvent(${1:event},${2:target})",
        "description": " ※Params: \n   (event)<>[] \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.transformer:SetOnRevertFn:": {
        "prefix": "components.transformer:SetOnRevertFn",
        "body": "components.transformer:SetOnRevertFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.transformer:OnLoad:": {
        "prefix": "components.transformer:OnLoad",
        "body": "components.transformer:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.transformer:LoadPostPass:": {
        "prefix": "components.transformer:LoadPostPass",
        "body": "components.transformer:LoadPostPass(${1:ents},${2:data})",
        "description": " ※Params: \n   (ents)<>[] \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.transformer:GetObjectData:": {
        "prefix": "components.transformer:GetObjectData",
        "body": "components.transformer:GetObjectData()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.transformer:StartTransform:": {
        "prefix": "components.transformer:StartTransform",
        "body": "components.transformer:StartTransform()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.transformer:SetOnLoadCheck:": {
        "prefix": "components.transformer:SetOnLoadCheck",
        "body": "components.transformer:SetOnLoadCheck(${1:check})",
        "description": " ※Params: \n   (check)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.transformer:Transform:": {
        "prefix": "components.transformer:Transform",
        "body": "components.transformer:Transform()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.transformer:TransformOnSleep:": {
        "prefix": "components.transformer:TransformOnSleep",
        "body": "components.transformer:TransformOnSleep()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.transformer:SetOnTransformFn:": {
        "prefix": "components.transformer:SetOnTransformFn",
        "body": "components.transformer:SetOnTransformFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.transformer:OnSave:": {
        "prefix": "components.transformer:OnSave",
        "body": "components.transformer:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.transformer:SetTransformEvent:": {
        "prefix": "components.transformer:SetTransformEvent",
        "body": "components.transformer:SetTransformEvent(${1:event},${2:target})",
        "description": " ※Params: \n   (event)<>[] \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.transformer:Revert:": {
        "prefix": "components.transformer:Revert",
        "body": "components.transformer:Revert()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.transformer:GetDebugString:": {
        "prefix": "components.transformer:GetDebugString",
        "body": "components.transformer:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.transformer:StartRevert:": {
        "prefix": "components.transformer:StartRevert",
        "body": "components.transformer:StartRevert()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.transformer:RemoveSleepEvents:": {
        "prefix": "components.transformer:RemoveSleepEvents",
        "body": "components.transformer:RemoveSleepEvents()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.transformer:SetObjectData:": {
        "prefix": "components.transformer:SetObjectData",
        "body": "components.transformer:SetObjectData(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.transformer:SetRevertWorldEvent:": {
        "prefix": "components.transformer:SetRevertWorldEvent",
        "body": "components.transformer:SetRevertWorldEvent(${1:event},${2:value})",
        "description": " ※Params: \n   (event)<>[] \n   (value)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.transformer:SetTransformWorldEvent:": {
        "prefix": "components.transformer:SetTransformWorldEvent",
        "body": "components.transformer:SetTransformWorldEvent(${1:event},${2:value})",
        "description": " ※Params: \n   (event)<>[] \n   (value)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.transparentonsanity:DoUpdate:": {
        "prefix": "components.transparentonsanity:DoUpdate",
        "body": "components.transparentonsanity:DoUpdate(${1:dt},${2:force})",
        "description": " ※Params: \n   (dt)<>[] \n   (force)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.transparentonsanity:OnEntityWake:": {
        "prefix": "components.transparentonsanity:OnEntityWake",
        "body": "components.transparentonsanity:OnEntityWake()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.transparentonsanity:GetDebugString:": {
        "prefix": "components.transparentonsanity:GetDebugString",
        "body": "components.transparentonsanity:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.transparentonsanity:CalcaulteTargetAlpha:": {
        "prefix": "components.transparentonsanity:CalcaulteTargetAlpha",
        "body": "components.transparentonsanity:CalcaulteTargetAlpha()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.transparentonsanity:OnEntitySleep:": {
        "prefix": "components.transparentonsanity:OnEntitySleep",
        "body": "components.transparentonsanity:OnEntitySleep()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.transparentonsanity:ForceUpdate:": {
        "prefix": "components.transparentonsanity:ForceUpdate",
        "body": "components.transparentonsanity:ForceUpdate()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.transparentonsanity:OnUpdate:": {
        "prefix": "components.transparentonsanity:OnUpdate",
        "body": "components.transparentonsanity:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.trap:IsFree:": {
        "prefix": "components.trap:IsFree",
        "body": "components.trap:IsFree()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.trap:LoadPostPass:": {
        "prefix": "components.trap:LoadPostPass",
        "body": "components.trap:LoadPostPass(${1:newents},${2:savedata})",
        "description": " ※Params: \n   (newents)<>[] \n   (savedata)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.trap:OnLoad:": {
        "prefix": "components.trap:OnLoad",
        "body": "components.trap:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.trap:Reset:": {
        "prefix": "components.trap:Reset",
        "body": "components.trap:Reset(${1:sprung})",
        "description": " ※Params: \n   (sprung)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.trap:SetOnSpringFn:": {
        "prefix": "components.trap:SetOnSpringFn",
        "body": "components.trap:SetOnSpringFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.trap:SetOnBaitedFn:": {
        "prefix": "components.trap:SetOnBaitedFn",
        "body": "components.trap:SetOnBaitedFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.trap:StartUpdate:": {
        "prefix": "components.trap:StartUpdate",
        "body": "components.trap:StartUpdate()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.trap:AcceptingBait:": {
        "prefix": "components.trap:AcceptingBait",
        "body": "components.trap:AcceptingBait()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.trap:HasLoot:": {
        "prefix": "components.trap:HasLoot",
        "body": "components.trap:HasLoot()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.trap:OnEntitySleep:": {
        "prefix": "components.trap:OnEntitySleep",
        "body": "components.trap:OnEntitySleep()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.trap:OnTrappedStarve:": {
        "prefix": "components.trap:OnTrappedStarve",
        "body": "components.trap:OnTrappedStarve()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.trap:OnRemoveFromEntity:": {
        "prefix": "components.trap:OnRemoveFromEntity",
        "body": "components.trap:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.trap:StopUpdating:": {
        "prefix": "components.trap:StopUpdating",
        "body": "components.trap:StopUpdating()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.trap:IsBaited:": {
        "prefix": "components.trap:IsBaited",
        "body": "components.trap:IsBaited()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.trap:SetBait:": {
        "prefix": "components.trap:SetBait",
        "body": "components.trap:SetBait(${1:bait})",
        "description": " ※Params: \n   (bait)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.trap:RemoveBait:": {
        "prefix": "components.trap:RemoveBait",
        "body": "components.trap:RemoveBait()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.trap:Harvest:": {
        "prefix": "components.trap:Harvest",
        "body": "components.trap:Harvest(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.trap:Set:": {
        "prefix": "components.trap:Set",
        "body": "components.trap:Set()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.trap:IsSprung:": {
        "prefix": "components.trap:IsSprung",
        "body": "components.trap:IsSprung()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.trap:StopStarvation:": {
        "prefix": "components.trap:StopStarvation",
        "body": "components.trap:StopStarvation()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.trap:DoSpring:": {
        "prefix": "components.trap:DoSpring",
        "body": "components.trap:DoSpring()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.trap:BaitTaken:": {
        "prefix": "components.trap:BaitTaken",
        "body": "components.trap:BaitTaken(${1:eater})",
        "description": " ※Params: \n   (eater)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.trap:GetDebugString:": {
        "prefix": "components.trap:GetDebugString",
        "body": "components.trap:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.trap:OnUpdate:": {
        "prefix": "components.trap:OnUpdate",
        "body": "components.trap:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.trap:OnEntityWake:": {
        "prefix": "components.trap:OnEntityWake",
        "body": "components.trap:OnEntityWake()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.trap:StartStarvation:": {
        "prefix": "components.trap:StartStarvation",
        "body": "components.trap:StartStarvation()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.trap:OnSave:": {
        "prefix": "components.trap:OnSave",
        "body": "components.trap:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.trap:SetOnHarvestFn:": {
        "prefix": "components.trap:SetOnHarvestFn",
        "body": "components.trap:SetOnHarvestFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.treasuremarked:LoadPostPass:": {
        "prefix": "components.treasuremarked:LoadPostPass",
        "body": "components.treasuremarked:LoadPostPass(${1:ents},${2:data})",
        "description": " ※Params: \n   (ents)<>[] \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.treasuremarked:TurnOff:": {
        "prefix": "components.treasuremarked:TurnOff",
        "body": "components.treasuremarked:TurnOff()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.treasuremarked:TurnOn:": {
        "prefix": "components.treasuremarked:TurnOn",
        "body": "components.treasuremarked:TurnOn()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.treasuremarked:OnSave:": {
        "prefix": "components.treasuremarked:OnSave",
        "body": "components.treasuremarked:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.treasuremarked:OnRemoveFromEntity:": {
        "prefix": "components.treasuremarked:OnRemoveFromEntity",
        "body": "components.treasuremarked:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.treegrowthsolution:GrowTarget:": {
        "prefix": "components.treegrowthsolution:GrowTarget",
        "body": "components.treegrowthsolution:GrowTarget(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.tributable:GetDebugString:": {
        "prefix": "components.tributable:GetDebugString",
        "body": "components.tributable:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.tributable:OnLoad:": {
        "prefix": "components.tributable:OnLoad",
        "body": "components.tributable:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.tributable:OnSave:": {
        "prefix": "components.tributable:OnSave",
        "body": "components.tributable:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.tributable:OnRefuse:": {
        "prefix": "components.tributable:OnRefuse",
        "body": "components.tributable:OnRefuse()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.tributable:OnAccept:": {
        "prefix": "components.tributable:OnAccept",
        "body": "components.tributable:OnAccept(${1:value},${2:tributer})",
        "description": " ※Params: \n   (value)<>[] \n   (tributer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.tributable:HasPendingReward:": {
        "prefix": "components.tributable:HasPendingReward",
        "body": "components.tributable:HasPendingReward()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.trophyscale:SetOnSpawnItemFromDataFn:": {
        "prefix": "components.trophyscale:SetOnSpawnItemFromDataFn",
        "body": "components.trophyscale:SetOnSpawnItemFromDataFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.trophyscale:OnLoad:": {
        "prefix": "components.trophyscale:OnLoad",
        "body": "components.trophyscale:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.trophyscale:OnSave:": {
        "prefix": "components.trophyscale:OnSave",
        "body": "components.trophyscale:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.trophyscale:TakeItem:": {
        "prefix": "components.trophyscale:TakeItem",
        "body": "components.trophyscale:TakeItem(${1:receiver})",
        "description": " ※Params: \n   (receiver)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.trophyscale:GetItemData:": {
        "prefix": "components.trophyscale:GetItemData",
        "body": "components.trophyscale:GetItemData()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.trophyscale:SetComparePostFn:": {
        "prefix": "components.trophyscale:SetComparePostFn",
        "body": "components.trophyscale:SetComparePostFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.trophyscale:SetTakeItemTestFn:": {
        "prefix": "components.trophyscale:SetTakeItemTestFn",
        "body": "components.trophyscale:SetTakeItemTestFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.trophyscale:SetOnItemTakenFn:": {
        "prefix": "components.trophyscale:SetOnItemTakenFn",
        "body": "components.trophyscale:SetOnItemTakenFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.trophyscale:GetDebugString:": {
        "prefix": "components.trophyscale:GetDebugString",
        "body": "components.trophyscale:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.trophyscale:ClearItemData:": {
        "prefix": "components.trophyscale:ClearItemData",
        "body": "components.trophyscale:ClearItemData()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.trophyscale:Compare:": {
        "prefix": "components.trophyscale:Compare",
        "body": "components.trophyscale:Compare(${1:inst_compare},${2:doer})",
        "description": " ※Params: \n   (inst_compare)<>[] \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.trophyscale:SetItemCanBeTaken:": {
        "prefix": "components.trophyscale:SetItemCanBeTaken",
        "body": "components.trophyscale:SetItemCanBeTaken(${1:can_be_taken})",
        "description": " ※Params: \n   (can_be_taken)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.trophyscale:SpawnItemFromData:": {
        "prefix": "components.trophyscale:SpawnItemFromData",
        "body": "components.trophyscale:SpawnItemFromData(${1:override_data})",
        "description": " ※Params: \n   (override_data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.trophyscale:OnRemoveFromEntity:": {
        "prefix": "components.trophyscale:OnRemoveFromEntity",
        "body": "components.trophyscale:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.uianim:FinishCurrentTint:": {
        "prefix": "components.uianim:FinishCurrentTint",
        "body": "components.uianim:FinishCurrentTint()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.uianim:UpdateWhilePaused:": {
        "prefix": "components.uianim:UpdateWhilePaused",
        "body": "components.uianim:UpdateWhilePaused(${1:update_while_paused})",
        "description": " ※Params: \n   (update_while_paused)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.uianim:CancelRotateTo:": {
        "prefix": "components.uianim:CancelRotateTo",
        "body": "components.uianim:CancelRotateTo(${1:run_complete_fn})",
        "description": " ※Params: \n   (run_complete_fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.uianim:OnWallUpdate:": {
        "prefix": "components.uianim:OnWallUpdate",
        "body": "components.uianim:OnWallUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.uianim:CancelScaleTo:": {
        "prefix": "components.uianim:CancelScaleTo",
        "body": "components.uianim:CancelScaleTo(${1:run_complete_fn})",
        "description": " ※Params: \n   (run_complete_fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.uianim:ScaleTo:": {
        "prefix": "components.uianim:ScaleTo",
        "body": "components.uianim:ScaleTo(${1:start},${2:dest},${3:duration},${4:whendone})",
        "description": " ※Params: \n   (start)<>[] \n   (dest)<>[] \n   (duration)<>[] \n   (whendone)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.uianim:CancelMoveTo:": {
        "prefix": "components.uianim:CancelMoveTo",
        "body": "components.uianim:CancelMoveTo(${1:run_complete_fn})",
        "description": " ※Params: \n   (run_complete_fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.uianim:TintTo:": {
        "prefix": "components.uianim:TintTo",
        "body": "components.uianim:TintTo(${1:start},${2:dest},${3:duration},${4:whendone})",
        "description": " ※Params: \n   (start)<>[] \n   (dest)<>[] \n   (duration)<>[] \n   (whendone)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.uianim:RotateTo:": {
        "prefix": "components.uianim:RotateTo",
        "body": "components.uianim:RotateTo(${1:start},${2:dest},${3:duration},${4:whendone},${5:infinite})",
        "description": " ※Params: \n   (start)<>[] \n   (dest)<>[] \n   (duration)<>[] \n   (whendone)<>[] \n   (infinite)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.uianim:CancelTintTo:": {
        "prefix": "components.uianim:CancelTintTo",
        "body": "components.uianim:CancelTintTo(${1:run_complete_fn})",
        "description": " ※Params: \n   (run_complete_fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.uianim:FinishCurrentScale:": {
        "prefix": "components.uianim:FinishCurrentScale",
        "body": "components.uianim:FinishCurrentScale()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.uianim:MoveTo:": {
        "prefix": "components.uianim:MoveTo",
        "body": "components.uianim:MoveTo(${1:start},${2:dest},${3:duration},${4:whendone})",
        "description": " ※Params: \n   (start)<>[] \n   (dest)<>[] \n   (duration)<>[] \n   (whendone)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.unevenground:OnEntityWake:": {
        "prefix": "components.unevenground:OnEntityWake",
        "body": "components.unevenground:OnEntityWake()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.unevenground:Enable:": {
        "prefix": "components.unevenground:Enable",
        "body": "components.unevenground:Enable()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.unevenground:Start:": {
        "prefix": "components.unevenground:Start",
        "body": "components.unevenground:Start()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.unevenground:Stop:": {
        "prefix": "components.unevenground:Stop",
        "body": "components.unevenground:Stop()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.unevenground:Disable:": {
        "prefix": "components.unevenground:Disable",
        "body": "components.unevenground:Disable()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.uniqueid:GetDebugString:": {
        "prefix": "components.uniqueid:GetDebugString",
        "body": "components.uniqueid:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.uniqueid:OnSave:": {
        "prefix": "components.uniqueid:OnSave",
        "body": "components.uniqueid:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.uniqueid:OnLoad:": {
        "prefix": "components.uniqueid:OnLoad",
        "body": "components.uniqueid:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.uniqueprefabids:GetNextID:": {
        "prefix": "components.uniqueprefabids:GetNextID",
        "body": "components.uniqueprefabids:GetNextID(${1:prefabname})",
        "description": " ※Params: \n   (prefabname)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.uniqueprefabids:GetDebugString:": {
        "prefix": "components.uniqueprefabids:GetDebugString",
        "body": "components.uniqueprefabids:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.uniqueprefabids:OnSave:": {
        "prefix": "components.uniqueprefabids:OnSave",
        "body": "components.uniqueprefabids:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.uniqueprefabids:OnLoad:": {
        "prefix": "components.uniqueprefabids:OnLoad",
        "body": "components.uniqueprefabids:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.unwrappable:SetOnWrappedFn:": {
        "prefix": "components.unwrappable:SetOnWrappedFn",
        "body": "components.unwrappable:SetOnWrappedFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.unwrappable:SetOnUnwrappedFn:": {
        "prefix": "components.unwrappable:SetOnUnwrappedFn",
        "body": "components.unwrappable:SetOnUnwrappedFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.unwrappable:Unwrap:": {
        "prefix": "components.unwrappable:Unwrap",
        "body": "components.unwrappable:Unwrap(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.unwrappable:OnLoad:": {
        "prefix": "components.unwrappable:OnLoad",
        "body": "components.unwrappable:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.unwrappable:OnSave:": {
        "prefix": "components.unwrappable:OnSave",
        "body": "components.unwrappable:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.unwrappable:WrapItems:": {
        "prefix": "components.unwrappable:WrapItems",
        "body": "components.unwrappable:WrapItems(${1:items},${2:doer})",
        "description": " ※Params: \n   (items)<>[] \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.updatelooper:RemoveOnUpdateFn:": {
        "prefix": "components.updatelooper:RemoveOnUpdateFn",
        "body": "components.updatelooper:RemoveOnUpdateFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.updatelooper:RemoveLongUpdateFn:": {
        "prefix": "components.updatelooper:RemoveLongUpdateFn",
        "body": "components.updatelooper:RemoveLongUpdateFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.updatelooper:OnWallUpdate:": {
        "prefix": "components.updatelooper:OnWallUpdate",
        "body": "components.updatelooper:OnWallUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.updatelooper:RemoveOnWallUpdateFn:": {
        "prefix": "components.updatelooper:RemoveOnWallUpdateFn",
        "body": "components.updatelooper:RemoveOnWallUpdateFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.updatelooper:RemovePostUpdateFn:": {
        "prefix": "components.updatelooper:RemovePostUpdateFn",
        "body": "components.updatelooper:RemovePostUpdateFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.updatelooper:AddPostUpdateFn:": {
        "prefix": "components.updatelooper:AddPostUpdateFn",
        "body": "components.updatelooper:AddPostUpdateFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.updatelooper:OnUpdate:": {
        "prefix": "components.updatelooper:OnUpdate",
        "body": "components.updatelooper:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.updatelooper:LongUpdate:": {
        "prefix": "components.updatelooper:LongUpdate",
        "body": "components.updatelooper:LongUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.updatelooper:AddOnUpdateFn:": {
        "prefix": "components.updatelooper:AddOnUpdateFn",
        "body": "components.updatelooper:AddOnUpdateFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.updatelooper:AddOnWallUpdateFn:": {
        "prefix": "components.updatelooper:AddOnWallUpdateFn",
        "body": "components.updatelooper:AddOnWallUpdateFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.updatelooper:AddLongUpdateFn:": {
        "prefix": "components.updatelooper:AddLongUpdateFn",
        "body": "components.updatelooper:AddLongUpdateFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.updatelooper:OnRemoveEntity:": {
        "prefix": "components.updatelooper:OnRemoveEntity",
        "body": "components.updatelooper:OnRemoveEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.updatelooper:OnRemoveFromEntity:": {
        "prefix": "components.updatelooper:OnRemoveFromEntity",
        "body": "components.updatelooper:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.upgradeable:SetCanUpgradeFn:": {
        "prefix": "components.upgradeable:SetCanUpgradeFn",
        "body": "components.upgradeable:SetCanUpgradeFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.upgradeable:CanUpgrade:": {
        "prefix": "components.upgradeable:CanUpgrade",
        "body": "components.upgradeable:CanUpgrade()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.upgradeable:OnLoad:": {
        "prefix": "components.upgradeable:OnLoad",
        "body": "components.upgradeable:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.upgradeable:GetStage:": {
        "prefix": "components.upgradeable:GetStage",
        "body": "components.upgradeable:GetStage()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.upgradeable:Upgrade:": {
        "prefix": "components.upgradeable:Upgrade",
        "body": "components.upgradeable:Upgrade(${1:obj},${2:upgrade_performer})",
        "description": " ※Params: \n   (obj)<>[] \n   (upgrade_performer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.upgradeable:SetStage:": {
        "prefix": "components.upgradeable:SetStage",
        "body": "components.upgradeable:SetStage(${1:num})",
        "description": " ※Params: \n   (num)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.upgradeable:SetOnUpgradeFn:": {
        "prefix": "components.upgradeable:SetOnUpgradeFn",
        "body": "components.upgradeable:SetOnUpgradeFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.upgradeable:OnSave:": {
        "prefix": "components.upgradeable:OnSave",
        "body": "components.upgradeable:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.upgradeable:AdvanceStage:": {
        "prefix": "components.upgradeable:AdvanceStage",
        "body": "components.upgradeable:AdvanceStage()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.upgrademodule:SetTarget:": {
        "prefix": "components.upgrademodule:SetTarget",
        "body": "components.upgrademodule:SetTarget(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.upgrademodule:RemoveFromOwner:": {
        "prefix": "components.upgrademodule:RemoveFromOwner",
        "body": "components.upgrademodule:RemoveFromOwner()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.upgrademodule:SetRequiredSlots:": {
        "prefix": "components.upgrademodule:SetRequiredSlots",
        "body": "components.upgrademodule:SetRequiredSlots(${1:slots})",
        "description": " ※Params: \n   (slots)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.upgrademodule:TryDeactivate:": {
        "prefix": "components.upgrademodule:TryDeactivate",
        "body": "components.upgrademodule:TryDeactivate()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.upgrademodule:TryActivate:": {
        "prefix": "components.upgrademodule:TryActivate",
        "body": "components.upgrademodule:TryActivate(${1:isloading})",
        "description": " ※Params: \n   (isloading)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.upgrademoduleowner:PopModule:": {
        "prefix": "components.upgrademoduleowner:PopModule",
        "body": "components.upgrademoduleowner:PopModule(${1:index})",
        "description": " ※Params: \n   (index)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.upgrademoduleowner:GetModuleInSlot:": {
        "prefix": "components.upgrademoduleowner:GetModuleInSlot",
        "body": "components.upgrademoduleowner:GetModuleInSlot(${1:slotnum})",
        "description": " ※Params: \n   (slotnum)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.upgrademoduleowner:PopOneModule:": {
        "prefix": "components.upgrademoduleowner:PopOneModule",
        "body": "components.upgrademoduleowner:PopOneModule()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.upgrademoduleowner:OnLoad:": {
        "prefix": "components.upgrademoduleowner:OnLoad",
        "body": "components.upgrademoduleowner:OnLoad(${1:data},${2:newents})",
        "description": " ※Params: \n   (data)<>[] \n   (newents)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.upgrademoduleowner:PushModule:": {
        "prefix": "components.upgrademoduleowner:PushModule",
        "body": "components.upgrademoduleowner:PushModule(${1:module},${2:isloading})",
        "description": " ※Params: \n   (module)<>[] \n   (isloading)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.upgrademoduleowner:OnRemoveFromEntity:": {
        "prefix": "components.upgrademoduleowner:OnRemoveFromEntity",
        "body": "components.upgrademoduleowner:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.upgrademoduleowner:IsChargeEmpty:": {
        "prefix": "components.upgrademoduleowner:IsChargeEmpty",
        "body": "components.upgrademoduleowner:IsChargeEmpty()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.upgrademoduleowner:CanUpgrade:": {
        "prefix": "components.upgrademoduleowner:CanUpgrade",
        "body": "components.upgrademoduleowner:CanUpgrade(${1:module_instance})",
        "description": " ※Params: \n   (module_instance)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.upgrademoduleowner:NumModules:": {
        "prefix": "components.upgrademoduleowner:NumModules",
        "body": "components.upgrademoduleowner:NumModules()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.upgrademoduleowner:PopAllModules:": {
        "prefix": "components.upgrademoduleowner:PopAllModules",
        "body": "components.upgrademoduleowner:PopAllModules()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.upgrademoduleowner:OnSave:": {
        "prefix": "components.upgrademoduleowner:OnSave",
        "body": "components.upgrademoduleowner:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.upgrademoduleowner:UsedSlotCount:": {
        "prefix": "components.upgrademoduleowner:UsedSlotCount",
        "body": "components.upgrademoduleowner:UsedSlotCount()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.upgrademoduleowner:GetDebugString:": {
        "prefix": "components.upgrademoduleowner:GetDebugString",
        "body": "components.upgrademoduleowner:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.upgrademoduleowner:AddCharge:": {
        "prefix": "components.upgrademoduleowner:AddCharge",
        "body": "components.upgrademoduleowner:AddCharge(${1:n})",
        "description": " ※Params: \n   (n)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.upgrademoduleowner:UpdateActivatedModules:": {
        "prefix": "components.upgrademoduleowner:UpdateActivatedModules",
        "body": "components.upgrademoduleowner:UpdateActivatedModules(${1:isloading})",
        "description": " ※Params: \n   (isloading)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.upgrademoduleowner:SetChargeLevel:": {
        "prefix": "components.upgrademoduleowner:SetChargeLevel",
        "body": "components.upgrademoduleowner:SetChargeLevel(${1:new_level})",
        "description": " ※Params: \n   (new_level)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.upgrademoduleowner:ChargeIsMaxed:": {
        "prefix": "components.upgrademoduleowner:ChargeIsMaxed",
        "body": "components.upgrademoduleowner:ChargeIsMaxed()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.upgrademoduleowner:GetModuleTypeCount:": {
        "prefix": "components.upgrademoduleowner:GetModuleTypeCount",
        "body": "components.upgrademoduleowner:GetModuleTypeCount(${1:moduletype})",
        "description": " ※Params: \n   (moduletype)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.upgrader:CanUpgrade:": {
        "prefix": "components.upgrader:CanUpgrade",
        "body": "components.upgrader:CanUpgrade(${1:target},${2:doer})",
        "description": " ※Params: \n   (target)<>[] \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.useableitem:SetOnUseFn:": {
        "prefix": "components.useableitem:SetOnUseFn",
        "body": "components.useableitem:SetOnUseFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.useableitem:StopUsingItem:": {
        "prefix": "components.useableitem:StopUsingItem",
        "body": "components.useableitem:StopUsingItem()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.useableitem:StartUsingItem:": {
        "prefix": "components.useableitem:StartUsingItem",
        "body": "components.useableitem:StartUsingItem()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.useableitem:CanInteract:": {
        "prefix": "components.useableitem:CanInteract",
        "body": "components.useableitem:CanInteract(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.useableitem:SetOnStopUseFn:": {
        "prefix": "components.useableitem:SetOnStopUseFn",
        "body": "components.useableitem:SetOnStopUseFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.useableitem:OnRemoveFromEntity:": {
        "prefix": "components.useableitem:OnRemoveFromEntity",
        "body": "components.useableitem:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.useabletargeteditem:CanInteract:": {
        "prefix": "components.useabletargeteditem:CanInteract",
        "body": "components.useabletargeteditem:CanInteract()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.useabletargeteditem:SetTargetPrefab:": {
        "prefix": "components.useabletargeteditem:SetTargetPrefab",
        "body": "components.useabletargeteditem:SetTargetPrefab(${1:prefab_name})",
        "description": " ※Params: \n   (prefab_name)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.useabletargeteditem:StartUsingItem:": {
        "prefix": "components.useabletargeteditem:StartUsingItem",
        "body": "components.useabletargeteditem:StartUsingItem(${1:target},${2:doer})",
        "description": " ※Params: \n   (target)<>[] \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.useabletargeteditem:StopUsingItem:": {
        "prefix": "components.useabletargeteditem:StopUsingItem",
        "body": "components.useabletargeteditem:StopUsingItem()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.useabletargeteditem:SetOnUseFn:": {
        "prefix": "components.useabletargeteditem:SetOnUseFn",
        "body": "components.useabletargeteditem:SetOnUseFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.useabletargeteditem:SetInventoryDisable:": {
        "prefix": "components.useabletargeteditem:SetInventoryDisable",
        "body": "components.useabletargeteditem:SetInventoryDisable(${1:value})",
        "description": " ※Params: \n   (value)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.useabletargeteditem:SetOnStopUseFn:": {
        "prefix": "components.useabletargeteditem:SetOnStopUseFn",
        "body": "components.useabletargeteditem:SetOnStopUseFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.useabletargeteditem:OnRemoveFromEntity:": {
        "prefix": "components.useabletargeteditem:OnRemoveFromEntity",
        "body": "components.useabletargeteditem:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.vanish_on_sleep:OnEntitySleep:": {
        "prefix": "components.vanish_on_sleep:OnEntitySleep",
        "body": "components.vanish_on_sleep:OnEntitySleep()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.vanish_on_sleep:OnEntityWake:": {
        "prefix": "components.vanish_on_sleep:OnEntityWake",
        "body": "components.vanish_on_sleep:OnEntityWake()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.vanish_on_sleep:vanish:": {
        "prefix": "components.vanish_on_sleep:vanish",
        "body": "components.vanish_on_sleep:vanish()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.vase:GetDebugString:": {
        "prefix": "components.vase:GetDebugString",
        "body": "components.vase:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.vase:Decorate:": {
        "prefix": "components.vase:Decorate",
        "body": "components.vase:Decorate(${1:giver},${2:item})",
        "description": " ※Params: \n   (giver)<>[] \n   (item)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.vase:Disable:": {
        "prefix": "components.vase:Disable",
        "body": "components.vase:Disable()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.vase:Enable:": {
        "prefix": "components.vase:Enable",
        "body": "components.vase:Enable()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.vase:OnRemoveFromEntity:": {
        "prefix": "components.vase:OnRemoveFromEntity",
        "body": "components.vase:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.walkableplatform:StartUpdating:": {
        "prefix": "components.walkableplatform:StartUpdating",
        "body": "components.walkableplatform:StartUpdating()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.walkableplatform:CommitPlayersOnPlatform:": {
        "prefix": "components.walkableplatform:CommitPlayersOnPlatform",
        "body": "components.walkableplatform:CommitPlayersOnPlatform()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.walkableplatform:OnLoad:": {
        "prefix": "components.walkableplatform:OnLoad",
        "body": "components.walkableplatform:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.walkableplatform:StopUpdating:": {
        "prefix": "components.walkableplatform:StopUpdating",
        "body": "components.walkableplatform:StopUpdating()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.walkableplatform:SetEntitiesOnPlatform:": {
        "prefix": "components.walkableplatform:SetEntitiesOnPlatform",
        "body": "components.walkableplatform:SetEntitiesOnPlatform()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.walkableplatform:DestroyObjectsOnPlatform:": {
        "prefix": "components.walkableplatform:DestroyObjectsOnPlatform",
        "body": "components.walkableplatform:DestroyObjectsOnPlatform()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.walkableplatform:AddPlayerOnPlatform:": {
        "prefix": "components.walkableplatform:AddPlayerOnPlatform",
        "body": "components.walkableplatform:AddPlayerOnPlatform(${1:player})",
        "description": " ※Params: \n   (player)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.walkableplatform:OnRemoveEntity:": {
        "prefix": "components.walkableplatform:OnRemoveEntity",
        "body": "components.walkableplatform:OnRemoveEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.walkableplatform:RemoveObject:": {
        "prefix": "components.walkableplatform:RemoveObject",
        "body": "components.walkableplatform:RemoveObject(${1:obj})",
        "description": " ※Params: \n   (obj)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.walkableplatform:GetEmbarkPosition:": {
        "prefix": "components.walkableplatform:GetEmbarkPosition",
        "body": "components.walkableplatform:GetEmbarkPosition(${1:embarker_x},${2:embarker_z},${3:embarker_min_dist})",
        "description": " ※Params: \n   (embarker_x)<>[] \n   (embarker_z)<>[] \n   (embarker_min_dist)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.walkableplatform:GetEntitiesOnPlatform:": {
        "prefix": "components.walkableplatform:GetEntitiesOnPlatform",
        "body": "components.walkableplatform:GetEntitiesOnPlatform()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.walkableplatform:DespawnPlayerCollision:": {
        "prefix": "components.walkableplatform:DespawnPlayerCollision",
        "body": "components.walkableplatform:DespawnPlayerCollision()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.walkableplatform:RemovePlayerOnPlatform:": {
        "prefix": "components.walkableplatform:RemovePlayerOnPlatform",
        "body": "components.walkableplatform:RemovePlayerOnPlatform(${1:player})",
        "description": " ※Params: \n   (player)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.walkableplatform:SpawnPlayerCollision:": {
        "prefix": "components.walkableplatform:SpawnPlayerCollision",
        "body": "components.walkableplatform:SpawnPlayerCollision()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.walkableplatform:GetUID:": {
        "prefix": "components.walkableplatform:GetUID",
        "body": "components.walkableplatform:GetUID()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.walkableplatform:AddEntityToPlatform:": {
        "prefix": "components.walkableplatform:AddEntityToPlatform",
        "body": "components.walkableplatform:AddEntityToPlatform(${1:ent})",
        "description": " ※Params: \n   (ent)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.walkableplatform:OnSave:": {
        "prefix": "components.walkableplatform:OnSave",
        "body": "components.walkableplatform:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.walkableplatform:GetPlayersOnPlatform:": {
        "prefix": "components.walkableplatform:GetPlayersOnPlatform",
        "body": "components.walkableplatform:GetPlayersOnPlatform()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.walkableplatformmanager:RegisterPlatform:": {
        "prefix": "components.walkableplatformmanager:RegisterPlatform",
        "body": "components.walkableplatformmanager:RegisterPlatform(${1:platform})",
        "description": " ※Params: \n   (platform)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.walkableplatformmanager:AddPlatform:": {
        "prefix": "components.walkableplatformmanager:AddPlatform",
        "body": "components.walkableplatformmanager:AddPlatform(${1:platform})",
        "description": " ※Params: \n   (platform)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.walkableplatformmanager:GetNewUID:": {
        "prefix": "components.walkableplatformmanager:GetNewUID",
        "body": "components.walkableplatformmanager:GetNewUID()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.walkableplatformmanager:PostUpdate:": {
        "prefix": "components.walkableplatformmanager:PostUpdate",
        "body": "components.walkableplatformmanager:PostUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.walkableplatformmanager:UnregisterPlatform:": {
        "prefix": "components.walkableplatformmanager:UnregisterPlatform",
        "body": "components.walkableplatformmanager:UnregisterPlatform(${1:platform})",
        "description": " ※Params: \n   (platform)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.walkableplatformmanager:OnLoad:": {
        "prefix": "components.walkableplatformmanager:OnLoad",
        "body": "components.walkableplatformmanager:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.walkableplatformmanager:GetPlatformWithUID:": {
        "prefix": "components.walkableplatformmanager:GetPlatformWithUID",
        "body": "components.walkableplatformmanager:GetPlatformWithUID(${1:uid})",
        "description": " ※Params: \n   (uid)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.walkableplatformmanager:OnSave:": {
        "prefix": "components.walkableplatformmanager:OnSave",
        "body": "components.walkableplatformmanager:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.walkableplatformmanager:RemovePlatform:": {
        "prefix": "components.walkableplatformmanager:RemovePlatform",
        "body": "components.walkableplatformmanager:RemovePlatform(${1:platform})",
        "description": " ※Params: \n   (platform)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.walkableplatformplayer:StopBoatCamera:": {
        "prefix": "components.walkableplatformplayer:StopBoatCamera",
        "body": "components.walkableplatformplayer:StopBoatCamera()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.walkableplatformplayer:StartBoatMusicTest:": {
        "prefix": "components.walkableplatformplayer:StartBoatMusicTest",
        "body": "components.walkableplatformplayer:StartBoatMusicTest()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.walkableplatformplayer:StartBoatCamera:": {
        "prefix": "components.walkableplatformplayer:StartBoatCamera",
        "body": "components.walkableplatformplayer:StartBoatCamera()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.walkableplatformplayer:GetOnPlatform:": {
        "prefix": "components.walkableplatformplayer:GetOnPlatform",
        "body": "components.walkableplatformplayer:GetOnPlatform(${1:platform})",
        "description": " ※Params: \n   (platform)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.walkableplatformplayer:StartBoatCameraZooms:": {
        "prefix": "components.walkableplatformplayer:StartBoatCameraZooms",
        "body": "components.walkableplatformplayer:StartBoatCameraZooms()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.walkableplatformplayer:StopBoatCameraZooms:": {
        "prefix": "components.walkableplatformplayer:StopBoatCameraZooms",
        "body": "components.walkableplatformplayer:StopBoatCameraZooms()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.walkableplatformplayer:TestForPlatform:": {
        "prefix": "components.walkableplatformplayer:TestForPlatform",
        "body": "components.walkableplatformplayer:TestForPlatform()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.walkableplatformplayer:StopBoatMusicTest:": {
        "prefix": "components.walkableplatformplayer:StopBoatMusicTest",
        "body": "components.walkableplatformplayer:StopBoatMusicTest()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.walkableplatformplayer:GetOffPlatform:": {
        "prefix": "components.walkableplatformplayer:GetOffPlatform",
        "body": "components.walkableplatformplayer:GetOffPlatform()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.walkableplatformplayer:OnRemoveEntity:": {
        "prefix": "components.walkableplatformplayer:OnRemoveEntity",
        "body": "components.walkableplatformplayer:OnRemoveEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.walkingplank:MountPlank:": {
        "prefix": "components.walkingplank:MountPlank",
        "body": "components.walkingplank:MountPlank(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.walkingplank:Retract:": {
        "prefix": "components.walkingplank:Retract",
        "body": "components.walkingplank:Retract()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.walkingplank:AbandonShip:": {
        "prefix": "components.walkingplank:AbandonShip",
        "body": "components.walkingplank:AbandonShip(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.walkingplank:Extend:": {
        "prefix": "components.walkingplank:Extend",
        "body": "components.walkingplank:Extend()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.walkingplank:StopMounting:": {
        "prefix": "components.walkingplank:StopMounting",
        "body": "components.walkingplank:StopMounting()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.walkingplank:OnRemoveFromEntity:": {
        "prefix": "components.walkingplank:OnRemoveFromEntity",
        "body": "components.walkingplank:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.walkingplankuser:SetCurrentPlank:": {
        "prefix": "components.walkingplankuser:SetCurrentPlank",
        "body": "components.walkingplankuser:SetCurrentPlank(${1:plank})",
        "description": " ※Params: \n   (plank)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.walkingplankuser:Dismount:": {
        "prefix": "components.walkingplankuser:Dismount",
        "body": "components.walkingplankuser:Dismount()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.wardrobe:EndAllChanging:": {
        "prefix": "components.wardrobe:EndAllChanging",
        "body": "components.wardrobe:EndAllChanging()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.wardrobe:OnRemoveFromEntity:": {
        "prefix": "components.wardrobe:OnRemoveFromEntity",
        "body": "components.wardrobe:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.wardrobe:OnUpdate:": {
        "prefix": "components.wardrobe:OnUpdate",
        "body": "components.wardrobe:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.wardrobe:SetCanBeShared:": {
        "prefix": "components.wardrobe:SetCanBeShared",
        "body": "components.wardrobe:SetCanBeShared(${1:canbeshared})",
        "description": " ※Params: \n   (canbeshared)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.wardrobe:SetChangeInDelay:": {
        "prefix": "components.wardrobe:SetChangeInDelay",
        "body": "components.wardrobe:SetChangeInDelay(${1:delay})",
        "description": " ※Params: \n   (delay)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.wardrobe:Enable:": {
        "prefix": "components.wardrobe:Enable",
        "body": "components.wardrobe:Enable(${1:enable})",
        "description": " ※Params: \n   (enable)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.wardrobe:SetCanBeDressed:": {
        "prefix": "components.wardrobe:SetCanBeDressed",
        "body": "components.wardrobe:SetCanBeDressed(${1:canbedressed})",
        "description": " ※Params: \n   (canbedressed)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.wardrobe:ApplyTargetSkins:": {
        "prefix": "components.wardrobe:ApplyTargetSkins",
        "body": "components.wardrobe:ApplyTargetSkins(${1:target},${2:doer},${3:skins})",
        "description": " ※Params: \n   (target)<>[] \n   (doer)<>[] \n   (skins)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.wardrobe:BeginChanging:": {
        "prefix": "components.wardrobe:BeginChanging",
        "body": "components.wardrobe:BeginChanging(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.wardrobe:ApplySkins:": {
        "prefix": "components.wardrobe:ApplySkins",
        "body": "components.wardrobe:ApplySkins(${1:doer},${2:diff})",
        "description": " ※Params: \n   (doer)<>[] \n   (diff)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.wardrobe:CanBeginChanging:": {
        "prefix": "components.wardrobe:CanBeginChanging",
        "body": "components.wardrobe:CanBeginChanging(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.wardrobe:ActivateChanging:": {
        "prefix": "components.wardrobe:ActivateChanging",
        "body": "components.wardrobe:ActivateChanging(${1:doer},${2:skins})",
        "description": " ※Params: \n   (doer)<>[] \n   (skins)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.wardrobe:SetCanUseAction:": {
        "prefix": "components.wardrobe:SetCanUseAction",
        "body": "components.wardrobe:SetCanUseAction(${1:canuseaction})",
        "description": " ※Params: \n   (canuseaction)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.wardrobe:EndChanging:": {
        "prefix": "components.wardrobe:EndChanging",
        "body": "components.wardrobe:EndChanging(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.wardrobe:SetRange:": {
        "prefix": "components.wardrobe:SetRange",
        "body": "components.wardrobe:SetRange(${1:range})",
        "description": " ※Params: \n   (range)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.waterproofer:SetEffectiveness:": {
        "prefix": "components.waterproofer:SetEffectiveness",
        "body": "components.waterproofer:SetEffectiveness(${1:val})",
        "description": " ※Params: \n   (val)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.waterproofer:GetEffectiveness:": {
        "prefix": "components.waterproofer:GetEffectiveness",
        "body": "components.waterproofer:GetEffectiveness()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.waterproofer:OnRemoveFromEntity:": {
        "prefix": "components.waterproofer:OnRemoveFromEntity",
        "body": "components.waterproofer:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.watersource:Use:": {
        "prefix": "components.watersource:Use",
        "body": "components.watersource:Use()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.watersource:OnRemoveFromEntity:": {
        "prefix": "components.watersource:OnRemoveFromEntity",
        "body": "components.watersource:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.wateryprotection:SpreadProtectionAtPoint:": {
        "prefix": "components.wateryprotection:SpreadProtectionAtPoint",
        "body": "components.wateryprotection:SpreadProtectionAtPoint(${1:x},${2:y},${3:z},${4:dist},${5:noextinguish})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n   (dist)<>[] \n   (noextinguish)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.wateryprotection:AddIgnoreTag:": {
        "prefix": "components.wateryprotection:AddIgnoreTag",
        "body": "components.wateryprotection:AddIgnoreTag(${1:tag})",
        "description": " ※Params: \n   (tag)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.wateryprotection:SpreadProtection:": {
        "prefix": "components.wateryprotection:SpreadProtection",
        "body": "components.wateryprotection:SpreadProtection(${1:inst},${2:dist},${3:noextinguish})",
        "description": " ※Params: \n   (inst)<>[] \n   (dist)<>[] \n   (noextinguish)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.wavemanager:GetDebugString:": {
        "prefix": "components.wavemanager:GetDebugString",
        "body": "components.wavemanager:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.wavemanager:OnUpdate:": {
        "prefix": "components.wavemanager:OnUpdate",
        "body": "components.wavemanager:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.wax:SetIsSpray:": {
        "prefix": "components.wax:SetIsSpray",
        "body": "components.wax:SetIsSpray()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.wax:GetIsSpray:": {
        "prefix": "components.wax:GetIsSpray",
        "body": "components.wax:GetIsSpray()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.waxable:SetNeedsSpray:": {
        "prefix": "components.waxable:SetNeedsSpray",
        "body": "components.waxable:SetNeedsSpray(${1:val})",
        "description": " ※Params: \n   (val)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.waxable:OnRemoveFromEntity:": {
        "prefix": "components.waxable:OnRemoveFromEntity",
        "body": "components.waxable:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.waxable:Wax:": {
        "prefix": "components.waxable:Wax",
        "body": "components.waxable:Wax(${1:doer},${2:waxitem})",
        "description": " ※Params: \n   (doer)<>[] \n   (waxitem)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.waxable:NeedsSpray:": {
        "prefix": "components.waxable:NeedsSpray",
        "body": "components.waxable:NeedsSpray()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.waxable:SetWaxfn:": {
        "prefix": "components.waxable:SetWaxfn",
        "body": "components.waxable:SetWaxfn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.weapon:SetDamage:设置武器伤害值。如果dmg为函数型参数，show me等信息模组无法显示正确的攻击力": {
        "prefix": "components.weapon:SetDamage",
        "body": "components.weapon:SetDamage(${1:dmg})",
        "description": " ※Params: \n   (dmg)<number|function>[伤害值或伤害函数]\n      {Params:\n         (inst)<table>[武器的inst] \n         (attacker)<table>[攻击者的inst] \n         (target)<table>[攻击目标的inst] \n      Returns:\n         <number>[伤害值]} \n ※Description: 设置武器伤害值。如果dmg为函数型参数，show me等信息模组无法显示正确的攻击力\n ※Contributor: @Runar"
    },
    "Component.weapon:SetOverrideStimuliFn:": {
        "prefix": "components.weapon:SetOverrideStimuliFn",
        "body": "components.weapon:SetOverrideStimuliFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.weapon:SetRange:设置武器攻击距离。若hit为nil，则hit = attack": {
        "prefix": "components.weapon:SetRange",
        "body": "components.weapon:SetRange(${1:attack},${2:hit})",
        "description": " ※Params: \n   (attack)<number>[攻击预备距离] \n   (hit)<number|nil>[击中距离] \n ※Description: 设置武器攻击距离。若hit为nil，则hit = attack\n ※Contributor: @Runar"
    },
    "Component.weapon:OnAttack:组件.combat:DoAttack中调用": {
        "prefix": "components.weapon:OnAttack",
        "body": "components.weapon:OnAttack(${1:attacker},${2:target},${3:projectile})",
        "description": " ※Params: \n   (attacker)<>[] \n   (target)<>[] \n   (projectile)<>[] \n ※Description: 组件.combat:DoAttack中调用\n ※Contributor: @lan(触发回调函数,扣耐久等)"
    },
    "Component.weapon:SetProjectile:设置投射物(添加远程攻击)": {
        "prefix": "components.weapon:SetProjectile",
        "body": "components.weapon:SetProjectile(${1:projectile})",
        "description": " ※Params: \n   (projectile)<string>[投射物prefab] \n ※Description: 设置投射物(添加远程攻击)\n ※Contributor: @lan"
    },
    "Component.weapon:SetProjectileOffset:设置投射物偏移": {
        "prefix": "components.weapon:SetProjectileOffset",
        "body": "components.weapon:SetProjectileOffset(${1:offset})",
        "description": " ※Params: \n   (offset)<table>[偏移向量] \n ※Description: 设置投射物偏移\n ※Contributor: @lan(攻击者到目标的方向向量乘以这个offset)"
    },
    "Component.weapon:CanRangedAttack:判断是否可以远程攻击(判断有没有projectile)": {
        "prefix": "components.weapon:CanRangedAttack",
        "body": "components.weapon:CanRangedAttack()",
        "description": "\n ※Returns: <boolean>[可以远程攻击] \n ※Description: 判断是否可以远程攻击(判断有没有projectile)\n ※Contributor: @lan"
    },
    "Component.weapon:GetDamage:获取攻击者装备此武器时对目标的伤害": {
        "prefix": "components.weapon:GetDamage",
        "body": "components.weapon:GetDamage(${1:attacker},${2:target})",
        "description": " ※Params: \n   (attacker)<table>[攻击者的inst] \n   (target)<table>[攻击目标的inst] \n ※Returns: <number>[通常伤害] <number>[特殊伤害] \n ※Description: 获取攻击者装备此武器时对目标的伤害\n ※Contributor: @Runar"
    },
    "Component.weapon:SetOnProjectileLaunch:发射投射物造成伤害前的回调函数": {
        "prefix": "components.weapon:SetOnProjectileLaunch",
        "body": "components.weapon:SetOnProjectileLaunch(${1:fn})",
        "description": " ※Params: \n   (fn)<function>[回调函数]\n      {Params:\n         (inst)<>[武器] \n         (attacker)<>[攻击者] \n         (target)<>[目标]} \n ※Description: 发射投射物造成伤害前的回调函数\n ※Contributor: @lan"
    },
    "Component.weapon:SetAttackCallback:设置武器击中回调函数": {
        "prefix": "components.weapon:SetAttackCallback",
        "body": "components.weapon:SetAttackCallback(${1:fn})",
        "description": " ※Params: \n   (fn)<function>[击中后执行的函数]\n      {Params:\n         (inst)<table>[武器的inst] \n         (attacker)<table>[攻击者的inst] \n         (target)<table>[攻击目标的inst] \n      Returns:} \n ※Description: 设置武器击中回调函数\n ※Contributor: @Runar"
    },
    "Component.weapon:SetElectric:": {
        "prefix": "components.weapon:SetElectric",
        "body": "components.weapon:SetElectric(${1:damage_mult},${2:wet_damage_mult})",
        "description": " ※Params: \n   (damage_mult)<>[] \n   (wet_damage_mult)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.weapon:SetOnProjectileLaunched:发射投射物造成伤害后的回调函数": {
        "prefix": "components.weapon:SetOnProjectileLaunched",
        "body": "components.weapon:SetOnProjectileLaunched(${1:fn})",
        "description": " ※Params: \n   (fn)<function>[回调函数]\n      {Params:\n         (inst)<>[武器] \n         (attacker)<>[攻击者] \n         (target)<>[目标] \n         (proj)<>[投射物]} \n ※Description: 发射投射物造成伤害后的回调函数\n ※Contributor: @lan"
    },
    "Component.weapon:SetOnAttack:设置武器击中回调函数, 同SetAttackCallback": {
        "prefix": "components.weapon:SetOnAttack",
        "body": "components.weapon:SetOnAttack(${1:fn})",
        "description": " ※Params: \n   (fn)<function>[击中后执行的函数]\n      {Params:\n         (inst)<table>[武器的inst] \n         (attacker)<table>[攻击者的inst] \n         (target)<table>[攻击目标的inst] \n      Returns:} \n ※Description: 设置武器击中回调函数, 同SetAttackCallback\n ※Contributor: @Runar"
    },
    "Component.weapon:LaunchProjectile:发射投掷物(需先设置投射物)": {
        "prefix": "components.weapon:LaunchProjectile",
        "body": "components.weapon:LaunchProjectile(${1:attacker},${2:target})",
        "description": " ※Params: \n   (attacker)<>[攻击者] \n   (target)<>[目标] \n ※Description: 发射投掷物(需先设置投射物)\n ※Contributor: @lan"
    },
    "Component.weapon:OnRemoveFromEntity:移除weapon标签, 恢复装备者攻击范围": {
        "prefix": "components.weapon:OnRemoveFromEntity",
        "body": "components.weapon:OnRemoveFromEntity()",
        "description": "\n ※Description: 移除weapon标签, 恢复装备者攻击范围\n ※Contributor: @Runar"
    },
    "Component.weighable:GetWeight:": {
        "prefix": "components.weighable:GetWeight",
        "body": "components.weighable:GetWeight()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.weighable:Initialize:": {
        "prefix": "components.weighable:Initialize",
        "body": "components.weighable:Initialize(${1:min_weight},${2:max_weight})",
        "description": " ※Params: \n   (min_weight)<>[] \n   (max_weight)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.weighable:SetPlayerAsOwner:": {
        "prefix": "components.weighable:SetPlayerAsOwner",
        "body": "components.weighable:SetPlayerAsOwner(${1:owner})",
        "description": " ※Params: \n   (owner)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.weighable:CopyWeighable:": {
        "prefix": "components.weighable:CopyWeighable",
        "body": "components.weighable:CopyWeighable(${1:src_weighable})",
        "description": " ※Params: \n   (src_weighable)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.weighable:GetWeightPercent:": {
        "prefix": "components.weighable:GetWeightPercent",
        "body": "components.weighable:GetWeightPercent()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.weighable:GetDebugString:": {
        "prefix": "components.weighable:GetDebugString",
        "body": "components.weighable:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.weighable:SetWeight:": {
        "prefix": "components.weighable:SetWeight",
        "body": "components.weighable:SetWeight(${1:weight})",
        "description": " ※Params: \n   (weight)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.weighable:OnSave:": {
        "prefix": "components.weighable:OnSave",
        "body": "components.weighable:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.weighable:OnLoad:": {
        "prefix": "components.weighable:OnLoad",
        "body": "components.weighable:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.werebeast:TriggerDelta:": {
        "prefix": "components.werebeast:TriggerDelta",
        "body": "components.werebeast:TriggerDelta(${1:amount})",
        "description": " ※Params: \n   (amount)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.werebeast:ResetTriggers:": {
        "prefix": "components.werebeast:ResetTriggers",
        "body": "components.werebeast:ResetTriggers()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.werebeast:SetOnNormalFn:": {
        "prefix": "components.werebeast:SetOnNormalFn",
        "body": "components.werebeast:SetOnNormalFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.werebeast:SetTriggerLimit:": {
        "prefix": "components.werebeast:SetTriggerLimit",
        "body": "components.werebeast:SetTriggerLimit(${1:limit})",
        "description": " ※Params: \n   (limit)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.werebeast:OnLoad:": {
        "prefix": "components.werebeast:OnLoad",
        "body": "components.werebeast:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.werebeast:SetWere:": {
        "prefix": "components.werebeast:SetWere",
        "body": "components.werebeast:SetWere(${1:time})",
        "description": " ※Params: \n   (time)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.werebeast:GetDebugString:": {
        "prefix": "components.werebeast:GetDebugString",
        "body": "components.werebeast:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.werebeast:SetNormal:": {
        "prefix": "components.werebeast:SetNormal",
        "body": "components.werebeast:SetNormal()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.werebeast:SetOnWereFn:": {
        "prefix": "components.werebeast:SetOnWereFn",
        "body": "components.werebeast:SetOnWereFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.werebeast:IsInWereState:": {
        "prefix": "components.werebeast:IsInWereState",
        "body": "components.werebeast:IsInWereState()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.werebeast:OnSave:": {
        "prefix": "components.werebeast:OnSave",
        "body": "components.werebeast:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.werebeast:OnRemoveFromEntity:": {
        "prefix": "components.werebeast:OnRemoveFromEntity",
        "body": "components.werebeast:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.wereeater:EatMosterFood:": {
        "prefix": "components.wereeater:EatMosterFood",
        "body": "components.wereeater:EatMosterFood(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.wereeater:ResetFoodMemory:": {
        "prefix": "components.wereeater:ResetFoodMemory",
        "body": "components.wereeater:ResetFoodMemory()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.wereeater:GetDebugString:": {
        "prefix": "components.wereeater:GetDebugString",
        "body": "components.wereeater:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.wereeater:SetForceTransformFn:": {
        "prefix": "components.wereeater:SetForceTransformFn",
        "body": "components.wereeater:SetForceTransformFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.wereeater:ForceTransformToWere:": {
        "prefix": "components.wereeater:ForceTransformToWere",
        "body": "components.wereeater:ForceTransformToWere(${1:mode})",
        "description": " ※Params: \n   (mode)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.wereeater:OnLoad:": {
        "prefix": "components.wereeater:OnLoad",
        "body": "components.wereeater:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.wereeater:OnSave:": {
        "prefix": "components.wereeater:OnSave",
        "body": "components.wereeater:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.wereeater:OnRemoveFromEntity:": {
        "prefix": "components.wereeater:OnRemoveFromEntity",
        "body": "components.wereeater:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.wereness:SetPercent:": {
        "prefix": "components.wereness:SetPercent",
        "body": "components.wereness:SetPercent(${1:percent},${2:overtime})",
        "description": " ※Params: \n   (percent)<>[] \n   (overtime)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.wereness:GetPercent:": {
        "prefix": "components.wereness:GetPercent",
        "body": "components.wereness:GetPercent()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.wereness:GetDebugString:": {
        "prefix": "components.wereness:GetDebugString",
        "body": "components.wereness:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.wereness:OnLoad:": {
        "prefix": "components.wereness:OnLoad",
        "body": "components.wereness:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.wereness:SetDrainRate:": {
        "prefix": "components.wereness:SetDrainRate",
        "body": "components.wereness:SetDrainRate(${1:rate})",
        "description": " ※Params: \n   (rate)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.wereness:StopDraining:": {
        "prefix": "components.wereness:StopDraining",
        "body": "components.wereness:StopDraining()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.wereness:StartDraining:": {
        "prefix": "components.wereness:StartDraining",
        "body": "components.wereness:StartDraining()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.wereness:GetWereMode:": {
        "prefix": "components.wereness:GetWereMode",
        "body": "components.wereness:GetWereMode()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.wereness:DoDelta:": {
        "prefix": "components.wereness:DoDelta",
        "body": "components.wereness:DoDelta(${1:delta},${2:overtime})",
        "description": " ※Params: \n   (delta)<>[] \n   (overtime)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.wereness:OnUpdate:": {
        "prefix": "components.wereness:OnUpdate",
        "body": "components.wereness:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.wereness:OnSave:": {
        "prefix": "components.wereness:OnSave",
        "body": "components.wereness:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.wereness:SetWereMode:": {
        "prefix": "components.wereness:SetWereMode",
        "body": "components.wereness:SetWereMode(${1:weremode})",
        "description": " ※Params: \n   (weremode)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.winch:SetOnStartLoweringFn:": {
        "prefix": "components.winch:SetOnStartLoweringFn",
        "body": "components.winch:SetOnStartLoweringFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.winch:StartRaising:": {
        "prefix": "components.winch:StartRaising",
        "body": "components.winch:StartRaising(${1:loading_in})",
        "description": " ※Params: \n   (loading_in)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.winch:SetOnStartRaisingFn:": {
        "prefix": "components.winch:SetOnStartRaisingFn",
        "body": "components.winch:SetOnStartRaisingFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.winch:OnLoad:": {
        "prefix": "components.winch:OnLoad",
        "body": "components.winch:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.winch:GetCurrentDepth:": {
        "prefix": "components.winch:GetCurrentDepth",
        "body": "components.winch:GetCurrentDepth()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.winch:SetOverrideGetCurrentDepthFn:": {
        "prefix": "components.winch:SetOverrideGetCurrentDepthFn",
        "body": "components.winch:SetOverrideGetCurrentDepthFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.winch:StartLowering:": {
        "prefix": "components.winch:StartLowering",
        "body": "components.winch:StartLowering(${1:loading_in})",
        "description": " ※Params: \n   (loading_in)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.winch:SetOnFullyRaisedFn:": {
        "prefix": "components.winch:SetOnFullyRaisedFn",
        "body": "components.winch:SetOnFullyRaisedFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.winch:SetOnFullyLoweredFn:": {
        "prefix": "components.winch:SetOnFullyLoweredFn",
        "body": "components.winch:SetOnFullyLoweredFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.winch:OnRemoveFromEntity:": {
        "prefix": "components.winch:OnRemoveFromEntity",
        "body": "components.winch:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.winch:SetRaisingSpeedMultiplier:": {
        "prefix": "components.winch:SetRaisingSpeedMultiplier",
        "body": "components.winch:SetRaisingSpeedMultiplier(${1:mult})",
        "description": " ※Params: \n   (mult)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.winch:SetLoweringSpeedMultiplier:": {
        "prefix": "components.winch:SetLoweringSpeedMultiplier",
        "body": "components.winch:SetLoweringSpeedMultiplier(${1:mult})",
        "description": " ※Params: \n   (mult)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.winch:FullyRaised:": {
        "prefix": "components.winch:FullyRaised",
        "body": "components.winch:FullyRaised()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.winch:SetUnloadFn:": {
        "prefix": "components.winch:SetUnloadFn",
        "body": "components.winch:SetUnloadFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.winch:GetDebugString:": {
        "prefix": "components.winch:GetDebugString",
        "body": "components.winch:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.winch:StopDepthTesting:": {
        "prefix": "components.winch:StopDepthTesting",
        "body": "components.winch:StopDepthTesting()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.winch:StartDepthTesting:": {
        "prefix": "components.winch:StartDepthTesting",
        "body": "components.winch:StartDepthTesting(${1:is_raising})",
        "description": " ※Params: \n   (is_raising)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.winch:FullyLowered:": {
        "prefix": "components.winch:FullyLowered",
        "body": "components.winch:FullyLowered()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.winch:OnSave:": {
        "prefix": "components.winch:OnSave",
        "body": "components.winch:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.winch:OnUpdate:": {
        "prefix": "components.winch:OnUpdate",
        "body": "components.winch:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.winchtarget:SetSalvageFn:": {
        "prefix": "components.winchtarget:SetSalvageFn",
        "body": "components.winchtarget:SetSalvageFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.winchtarget:GetSunkenObject:": {
        "prefix": "components.winchtarget:GetSunkenObject",
        "body": "components.winchtarget:GetSunkenObject()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.winchtarget:Salvage:": {
        "prefix": "components.winchtarget:Salvage",
        "body": "components.winchtarget:Salvage()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.winchtarget:OnRemoveFromEntity:": {
        "prefix": "components.winchtarget:OnRemoveFromEntity",
        "body": "components.winchtarget:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.winonateleportpadmanager:OnRegisterWinonaTeleportPad:": {
        "prefix": "components.winonateleportpadmanager:OnRegisterWinonaTeleportPad",
        "body": "components.winonateleportpadmanager:OnRegisterWinonaTeleportPad(${1:winonateleportpad})",
        "description": " ※Params: \n   (winonateleportpad)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.winonateleportpadmanager:GetAllWinonaTeleportPads:": {
        "prefix": "components.winonateleportpadmanager:GetAllWinonaTeleportPads",
        "body": "components.winonateleportpadmanager:GetAllWinonaTeleportPads()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.winonateleportpadmanager:OnRemoveFromEntity:": {
        "prefix": "components.winonateleportpadmanager:OnRemoveFromEntity",
        "body": "components.winonateleportpadmanager:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.wintersfeasttable:DepleteFood:": {
        "prefix": "components.wintersfeasttable:DepleteFood",
        "body": "components.wintersfeasttable:DepleteFood(${1:feasters})",
        "description": " ※Params: \n   (feasters)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.wintersfeasttable:CancelFeasting:": {
        "prefix": "components.wintersfeasttable:CancelFeasting",
        "body": "components.wintersfeasttable:CancelFeasting()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.wintersfeasttable:GetDebugString:": {
        "prefix": "components.wintersfeasttable:GetDebugString",
        "body": "components.wintersfeasttable:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.wintersfeasttable:OnRemoveFromEntity:": {
        "prefix": "components.wintersfeasttable:OnRemoveFromEntity",
        "body": "components.wintersfeasttable:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.wintertreegiftable:OnLoad:": {
        "prefix": "components.wintertreegiftable:OnLoad",
        "body": "components.wintertreegiftable:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.wintertreegiftable:OnGiftGiven:": {
        "prefix": "components.wintertreegiftable:OnGiftGiven",
        "body": "components.wintertreegiftable:OnGiftGiven()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.wintertreegiftable:OnSave:": {
        "prefix": "components.wintertreegiftable:OnSave",
        "body": "components.wintertreegiftable:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.wintertreegiftable:GetDaysSinceLastGift:": {
        "prefix": "components.wintertreegiftable:GetDaysSinceLastGift",
        "body": "components.wintertreegiftable:GetDaysSinceLastGift()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.winter_treeseed:SetTree:": {
        "prefix": "components.winter_treeseed:SetTree",
        "body": "components.winter_treeseed:SetTree(${1:tree})",
        "description": " ※Params: \n   (tree)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.wisecracker:OnUpdate:": {
        "prefix": "components.wisecracker:OnUpdate",
        "body": "components.wisecracker:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.witherable:ForceWither:": {
        "prefix": "components.witherable:ForceWither",
        "body": "components.witherable:ForceWither()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.witherable:CanWither:": {
        "prefix": "components.witherable:CanWither",
        "body": "components.witherable:CanWither()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.witherable:GetDebugString:": {
        "prefix": "components.witherable:GetDebugString",
        "body": "components.witherable:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.witherable:DelayWither:": {
        "prefix": "components.witherable:DelayWither",
        "body": "components.witherable:DelayWither(${1:delay})",
        "description": " ※Params: \n   (delay)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.witherable:IsProtected:": {
        "prefix": "components.witherable:IsProtected",
        "body": "components.witherable:IsProtected()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.witherable:Enable:": {
        "prefix": "components.witherable:Enable",
        "body": "components.witherable:Enable(${1:enable})",
        "description": " ※Params: \n   (enable)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.witherable:OnLoad:": {
        "prefix": "components.witherable:OnLoad",
        "body": "components.witherable:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.witherable:Stop:": {
        "prefix": "components.witherable:Stop",
        "body": "components.witherable:Stop()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.witherable:Start:": {
        "prefix": "components.witherable:Start",
        "body": "components.witherable:Start()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.witherable:CanRejuvenate:": {
        "prefix": "components.witherable:CanRejuvenate",
        "body": "components.witherable:CanRejuvenate()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.witherable:ForceRejuvenate:": {
        "prefix": "components.witherable:ForceRejuvenate",
        "body": "components.witherable:ForceRejuvenate()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.witherable:IsWithered:": {
        "prefix": "components.witherable:IsWithered",
        "body": "components.witherable:IsWithered()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.witherable:DelayRejuvenate:": {
        "prefix": "components.witherable:DelayRejuvenate",
        "body": "components.witherable:DelayRejuvenate(${1:delay})",
        "description": " ※Params: \n   (delay)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.witherable:OnSave:": {
        "prefix": "components.witherable:OnSave",
        "body": "components.witherable:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.witherable:OnRemoveFromEntity:": {
        "prefix": "components.witherable:OnRemoveFromEntity",
        "body": "components.witherable:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.workable:SetOnWorkCallback:设置一个方法，当该对象被操作时触发，比如建筑可以被锤，那建筑被锤的时候就会触发这个方法。每锤一下就会触发一次,例如：SetOnWorkCallback(function(inst, worker, workleft, numworks)end) inst是有该组件的预制物，worker是触发该操作的对象，workleft是剩余可操作次数，numworks是本次操作扣除了几次操作次数。": {
        "prefix": "components.workable:SetOnWorkCallback",
        "body": "components.workable:SetOnWorkCallback(${1:fn})",
        "description": " ※Params: \n   (fn)<function>[方法] \n ※Description: 设置一个方法，当该对象被操作时触发，比如建筑可以被锤，那建筑被锤的时候就会触发这个方法。每锤一下就会触发一次,例如：SetOnWorkCallback(function(inst, worker, workleft, numworks)end) inst是有该组件的预制物，worker是触发该操作的对象，workleft是剩余可操作次数，numworks是本次操作扣除了几次操作次数。\n ※Contributor: @御坂十七号"
    },
    "Component.workable:GetWorkLeft:返回剩余可被操作的次数，比如还可以被锤几次，就破坏掉": {
        "prefix": "components.workable:GetWorkLeft",
        "body": "components.workable:GetWorkLeft()",
        "description": "\n ※Returns: <number>[被操作的次数] \n ※Description: 返回剩余可被操作的次数，比如还可以被锤几次，就破坏掉\n ※Contributor: @御坂十七号"
    },
    "Component.workable:SetRequiresToughWork:当设置为true时，则启用了困难模式，一般的操作动作会被弹开不消耗次数。只有拥有强力模式的工具或人物才可以。比如裂隙晶体、绝望石柱之类的。": {
        "prefix": "components.workable:SetRequiresToughWork",
        "body": "components.workable:SetRequiresToughWork(${1:tough})",
        "description": " ※Params: \n   (tough)<boolean>[困难模式] \n ※Description: 当设置为true时，则启用了困难模式，一般的操作动作会被弹开不消耗次数。只有拥有强力模式的工具或人物才可以。比如裂隙晶体、绝望石柱之类的。\n ※Contributor: @御坂十七号"
    },
    "Component.workable:OnLoad:返回被保存的表数据，一般不用管": {
        "prefix": "components.workable:OnLoad",
        "body": "components.workable:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Returns: <table>[表] \n ※Description: 返回被保存的表数据，一般不用管\n ※Contributor: @御坂十七号"
    },
    "Component.workable:SetWorkLeft:表示需要被操作多少次才触发最终结果的 onfinish 方法，": {
        "prefix": "components.workable:SetWorkLeft",
        "body": "components.workable:SetWorkLeft(${1:work})",
        "description": " ※Params: \n   (work)<number>[被操作的次数] \n ※Description: 表示需要被操作多少次才触发最终结果的 onfinish 方法，\n ※Contributor: @御坂十七号"
    },
    "Component.workable:SetWorkable:设置该对象是否可以被操作，当调用 SetWorkLeft 时，它会自动被设为ture": {
        "prefix": "components.workable:SetWorkable",
        "body": "components.workable:SetWorkable(${1:able})",
        "description": " ※Params: \n   (able)<boolean>[是否可以被操作] \n ※Description: 设置该对象是否可以被操作，当调用 SetWorkLeft 时，它会自动被设为ture\n ※Contributor: @御坂十七号"
    },
    "Component.workable:Destroy:": {
        "prefix": "components.workable:Destroy",
        "body": "components.workable:Destroy(${1:destroyer})",
        "description": " ※Params: \n   (destroyer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.workable:WorkedBy_Internal:": {
        "prefix": "components.workable:WorkedBy_Internal",
        "body": "components.workable:WorkedBy_Internal(${1:worker},${2:numworks})",
        "description": " ※Params: \n   (worker)<>[] \n   (numworks)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.workable:OnRemoveFromEntity:": {
        "prefix": "components.workable:OnRemoveFromEntity",
        "body": "components.workable:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.workable:GetWorkAction:返回这个对象可以被哪种动作触发，比如建筑一般可以被锤子锤，那就会返回 ACTIONS.HAMMER": {
        "prefix": "components.workable:GetWorkAction",
        "body": "components.workable:GetWorkAction()",
        "description": "\n ※Returns: <table>[被触发的动作类型] \n ※Description: 返回这个对象可以被哪种动作触发，比如建筑一般可以被锤子锤，那就会返回 ACTIONS.HAMMER\n ※Contributor: @御坂十七号"
    },
    "Component.workable:SetMaxWork:设置该对象最大可以被操作的次数，最小为1，当调用SetWorkLeft时设置的次数不会超过SetMaxWork设置次数": {
        "prefix": "components.workable:SetMaxWork",
        "body": "components.workable:SetMaxWork(${1:work})",
        "description": " ※Params: \n   (work)<number>[次数] \n ※Description: 设置该对象最大可以被操作的次数，最小为1，当调用SetWorkLeft时设置的次数不会超过SetMaxWork设置次数\n ※Contributor: @御坂十七号"
    },
    "Component.workable:ShouldRecoil:": {
        "prefix": "components.workable:ShouldRecoil",
        "body": "components.workable:ShouldRecoil(${1:worker},${2:tool},${3:numworks})",
        "description": " ※Params: \n   (worker)<>[] \n   (tool)<>[] \n   (numworks)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.workable:SetShouldRecoilFn:设置被反弹时触发的方法，比如裂隙晶体就有这个。一般不用处理": {
        "prefix": "components.workable:SetShouldRecoilFn",
        "body": "components.workable:SetShouldRecoilFn(${1:fn})",
        "description": " ※Params: \n   (fn)<function>[方法] \n ※Description: 设置被反弹时触发的方法，比如裂隙晶体就有这个。一般不用处理\n ※Contributor: @御坂十七号"
    },
    "Component.workable:SetWorkMultiplierFn:": {
        "prefix": "components.workable:SetWorkMultiplierFn",
        "body": "components.workable:SetWorkMultiplierFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.workable:SetOnFinishCallback:设置一个方法，当全部次数消耗完毕后会触发，比如，一个箱子被锤两次后破坏掉，那锤两次后就会触发fn。例如：SetOnFinishCallback(function(inst,worker)end) inst是自身，worker是触发最后一次操作的对象。": {
        "prefix": "components.workable:SetOnFinishCallback",
        "body": "components.workable:SetOnFinishCallback(${1:fn})",
        "description": " ※Params: \n   (fn)<function>[方法] \n ※Description: 设置一个方法，当全部次数消耗完毕后会触发，比如，一个箱子被锤两次后破坏掉，那锤两次后就会触发fn。例如：SetOnFinishCallback(function(inst,worker)end) inst是自身，worker是触发最后一次操作的对象。\n ※Contributor: @御坂十七号"
    },
    "Component.workable:GetDebugString:返回字符串日志": {
        "prefix": "components.workable:GetDebugString",
        "body": "components.workable:GetDebugString()",
        "description": "\n ※Description: 返回字符串日志\n ※Contributor: @御坂十七号"
    },
    "Component.workable:SetOnLoadFn:设置一个方法，当该组件被加载时触发。一般在世界从存档中恢复时用。": {
        "prefix": "components.workable:SetOnLoadFn",
        "body": "components.workable:SetOnLoadFn(${1:fn})",
        "description": " ※Params: \n   (fn)<function>[方法] \n ※Description: 设置一个方法，当该组件被加载时触发。一般在世界从存档中恢复时用。\n ※Contributor: @御坂十七号"
    },
    "Component.workable:SetWorkAction:设置一个触发动作，比如建筑可以被锤子砸，就可以用 SetWorkAction(ACTIONS.HAMMER)": {
        "prefix": "components.workable:SetWorkAction",
        "body": "components.workable:SetWorkAction(${1:act})",
        "description": " ※Params: \n   (act)<>[动作] \n ※Description: 设置一个触发动作，比如建筑可以被锤子砸，就可以用 SetWorkAction(ACTIONS.HAMMER)\n ※Contributor: @御坂十七号"
    },
    "Component.workable:WorkedBy:": {
        "prefix": "components.workable:WorkedBy",
        "body": "components.workable:WorkedBy(${1:worker},${2:numworks})",
        "description": " ※Params: \n   (worker)<>[] \n   (numworks)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.workable:OnSave:": {
        "prefix": "components.workable:OnSave",
        "body": "components.workable:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.workable:CanBeWorked:返回该对象是否可以被操作，这里面会判断workable（是否可用） 和workleft（次数）": {
        "prefix": "components.workable:CanBeWorked",
        "body": "components.workable:CanBeWorked()",
        "description": "\n ※Returns: <boolean>[是否可以被操作] \n ※Description: 返回该对象是否可以被操作，这里面会判断workable（是否可用） 和workleft（次数）\n ※Contributor: @御坂十七号"
    },
    "Component.worker:SetAction:": {
        "prefix": "components.worker:SetAction",
        "body": "components.worker:SetAction(${1:action},${2:effectiveness})",
        "description": " ※Params: \n   (action)<>[] \n   (effectiveness)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.worker:CanDoAction:": {
        "prefix": "components.worker:CanDoAction",
        "body": "components.worker:CanDoAction(${1:action})",
        "description": " ※Params: \n   (action)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.worker:GetEffectiveness:": {
        "prefix": "components.worker:GetEffectiveness",
        "body": "components.worker:GetEffectiveness(${1:action})",
        "description": " ※Params: \n   (action)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.workmultiplier:SetSpecialMultiplierFn:": {
        "prefix": "components.workmultiplier:SetSpecialMultiplierFn",
        "body": "components.workmultiplier:SetSpecialMultiplierFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.workmultiplier:AddMultiplier:": {
        "prefix": "components.workmultiplier:AddMultiplier",
        "body": "components.workmultiplier:AddMultiplier(${1:action},${2:multiplier},${3:source})",
        "description": " ※Params: \n   (action)<>[] \n   (multiplier)<>[] \n   (source)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.workmultiplier:GetMultiplier:": {
        "prefix": "components.workmultiplier:GetMultiplier",
        "body": "components.workmultiplier:GetMultiplier(${1:action})",
        "description": " ※Params: \n   (action)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.workmultiplier:ResolveSpecialWorkAmount:": {
        "prefix": "components.workmultiplier:ResolveSpecialWorkAmount",
        "body": "components.workmultiplier:ResolveSpecialWorkAmount(${1:action},${2:target},${3:tool},${4:numworks},${5:recoil})",
        "description": " ※Params: \n   (action)<>[] \n   (target)<>[] \n   (tool)<>[] \n   (numworks)<>[] \n   (recoil)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.workmultiplier:RemoveMultiplier:": {
        "prefix": "components.workmultiplier:RemoveMultiplier",
        "body": "components.workmultiplier:RemoveMultiplier(${1:action},${2:source})",
        "description": " ※Params: \n   (action)<>[] \n   (source)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.worldmigrator:Activate:": {
        "prefix": "components.worldmigrator:Activate",
        "body": "components.worldmigrator:Activate(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.worldmigrator:GetStatusString:": {
        "prefix": "components.worldmigrator:GetStatusString",
        "body": "components.worldmigrator:GetStatusString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.worldmigrator:SetReceivedPortal:": {
        "prefix": "components.worldmigrator:SetReceivedPortal",
        "body": "components.worldmigrator:SetReceivedPortal(${1:fromworld},${2:fromportal})",
        "description": " ※Params: \n   (fromworld)<>[] \n   (fromportal)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.worldmigrator:OnLoad:": {
        "prefix": "components.worldmigrator:OnLoad",
        "body": "components.worldmigrator:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.worldmigrator:IsBound:": {
        "prefix": "components.worldmigrator:IsBound",
        "body": "components.worldmigrator:IsBound()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.worldmigrator:IsDestinationForPortal:": {
        "prefix": "components.worldmigrator:IsDestinationForPortal",
        "body": "components.worldmigrator:IsDestinationForPortal(${1:otherWorld},${2:otherPortal})",
        "description": " ※Params: \n   (otherWorld)<>[] \n   (otherPortal)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.worldmigrator:SetDestinationWorld:": {
        "prefix": "components.worldmigrator:SetDestinationWorld",
        "body": "components.worldmigrator:SetDestinationWorld(${1:world},${2:permanent})",
        "description": " ※Params: \n   (world)<>[] \n   (permanent)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.worldmigrator:IsAvailableForLinking:": {
        "prefix": "components.worldmigrator:IsAvailableForLinking",
        "body": "components.worldmigrator:IsAvailableForLinking()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.worldmigrator:IsFull:": {
        "prefix": "components.worldmigrator:IsFull",
        "body": "components.worldmigrator:IsFull()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.worldmigrator:ValidateAndPushEvents:": {
        "prefix": "components.worldmigrator:ValidateAndPushEvents",
        "body": "components.worldmigrator:ValidateAndPushEvents()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.worldmigrator:SetEnabled:": {
        "prefix": "components.worldmigrator:SetEnabled",
        "body": "components.worldmigrator:SetEnabled(${1:t})",
        "description": " ※Params: \n   (t)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.worldmigrator:GetDebugString:": {
        "prefix": "components.worldmigrator:GetDebugString",
        "body": "components.worldmigrator:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.worldmigrator:IsLinked:": {
        "prefix": "components.worldmigrator:IsLinked",
        "body": "components.worldmigrator:IsLinked()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.worldmigrator:ActivatedByOther:": {
        "prefix": "components.worldmigrator:ActivatedByOther",
        "body": "components.worldmigrator:ActivatedByOther()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.worldmigrator:IsActive:": {
        "prefix": "components.worldmigrator:IsActive",
        "body": "components.worldmigrator:IsActive()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.worldmigrator:OnSave:": {
        "prefix": "components.worldmigrator:OnSave",
        "body": "components.worldmigrator:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.worldmigrator:SetID:": {
        "prefix": "components.worldmigrator:SetID",
        "body": "components.worldmigrator:SetID(${1:id})",
        "description": " ※Params: \n   (id)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.worldoverseer:CalcPlayerStats:": {
        "prefix": "components.worldoverseer:CalcPlayerStats",
        "body": "components.worldoverseer:CalcPlayerStats()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.worldoverseer:GetWorldRecipeItems:": {
        "prefix": "components.worldoverseer:GetWorldRecipeItems",
        "body": "components.worldoverseer:GetWorldRecipeItems()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.worldoverseer:DumpIndividualPlayerStats:": {
        "prefix": "components.worldoverseer:DumpIndividualPlayerStats",
        "body": "components.worldoverseer:DumpIndividualPlayerStats(${1:stat},${2:event})",
        "description": " ※Params: \n   (stat)<>[] \n   (event)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.worldoverseer:OnPlayerChangedSkin:": {
        "prefix": "components.worldoverseer:OnPlayerChangedSkin",
        "body": "components.worldoverseer:OnPlayerChangedSkin(${1:player},${2:data})",
        "description": " ※Params: \n   (player)<>[] \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.worldoverseer:CalcIndividualPlayerStats:": {
        "prefix": "components.worldoverseer:CalcIndividualPlayerStats",
        "body": "components.worldoverseer:CalcIndividualPlayerStats(${1:player})",
        "description": " ※Params: \n   (player)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.worldoverseer:RecordPlayerLeft:": {
        "prefix": "components.worldoverseer:RecordPlayerLeft",
        "body": "components.worldoverseer:RecordPlayerLeft(${1:player})",
        "description": " ※Params: \n   (player)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.worldoverseer:SendClientQuit:": {
        "prefix": "components.worldoverseer:SendClientQuit",
        "body": "components.worldoverseer:SendClientQuit(${1:userid},${2:data})",
        "description": " ※Params: \n   (userid)<>[] \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.worldoverseer:OnItemCrafted:": {
        "prefix": "components.worldoverseer:OnItemCrafted",
        "body": "components.worldoverseer:OnItemCrafted(${1:player},${2:data})",
        "description": " ※Params: \n   (player)<>[] \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.worldoverseer:OnPlayerDeath:": {
        "prefix": "components.worldoverseer:OnPlayerDeath",
        "body": "components.worldoverseer:OnPlayerDeath(${1:player},${2:data})",
        "description": " ※Params: \n   (player)<>[] \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.worldoverseer:SendClientHeartBeat:": {
        "prefix": "components.worldoverseer:SendClientHeartBeat",
        "body": "components.worldoverseer:SendClientHeartBeat(${1:userid},${2:data})",
        "description": " ※Params: \n   (userid)<>[] \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.worldoverseer:OnEquipSkinnedItem:": {
        "prefix": "components.worldoverseer:OnEquipSkinnedItem",
        "body": "components.worldoverseer:OnEquipSkinnedItem(${1:player},${2:data})",
        "description": " ※Params: \n   (player)<>[] \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.worldoverseer:Heartbeat:": {
        "prefix": "components.worldoverseer:Heartbeat",
        "body": "components.worldoverseer:Heartbeat()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.worldoverseer:OnCyclesChanged:": {
        "prefix": "components.worldoverseer:OnCyclesChanged",
        "body": "components.worldoverseer:OnCyclesChanged(${1:cycles})",
        "description": " ※Params: \n   (cycles)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.worldoverseer:SendClientJoin:": {
        "prefix": "components.worldoverseer:SendClientJoin",
        "body": "components.worldoverseer:SendClientJoin(${1:userid},${2:data})",
        "description": " ※Params: \n   (userid)<>[] \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.worldoverseer:QuitAll:": {
        "prefix": "components.worldoverseer:QuitAll",
        "body": "components.worldoverseer:QuitAll()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.worldoverseer:OnPlayerJoined:": {
        "prefix": "components.worldoverseer:OnPlayerJoined",
        "body": "components.worldoverseer:OnPlayerJoined(${1:src},${2:player})",
        "description": " ※Params: \n   (src)<>[] \n   (player)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.worldoverseer:HeartbeatPoll:": {
        "prefix": "components.worldoverseer:HeartbeatPoll",
        "body": "components.worldoverseer:HeartbeatPoll()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.worldoverseer:OnUnequipSkinnedItem:": {
        "prefix": "components.worldoverseer:OnUnequipSkinnedItem",
        "body": "components.worldoverseer:OnUnequipSkinnedItem(${1:player},${2:data})",
        "description": " ※Params: \n   (player)<>[] \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.worldoverseer:DumpSessionStats:": {
        "prefix": "components.worldoverseer:DumpSessionStats",
        "body": "components.worldoverseer:DumpSessionStats()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.worldoverseer:DumpPlayerStats:": {
        "prefix": "components.worldoverseer:DumpPlayerStats",
        "body": "components.worldoverseer:DumpPlayerStats()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.worldoverseer:RecordPlayerJoined:": {
        "prefix": "components.worldoverseer:RecordPlayerJoined",
        "body": "components.worldoverseer:RecordPlayerJoined(${1:player})",
        "description": " ※Params: \n   (player)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.worldoverseer:OnClockTick:": {
        "prefix": "components.worldoverseer:OnClockTick",
        "body": "components.worldoverseer:OnClockTick(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.worldoverseer:OnPlayerLeft:": {
        "prefix": "components.worldoverseer:OnPlayerLeft",
        "body": "components.worldoverseer:OnPlayerLeft(${1:src},${2:player})",
        "description": " ※Params: \n   (src)<>[] \n   (player)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.worldsettings:GetSetting:": {
        "prefix": "components.worldsettings:GetSetting",
        "body": "components.worldsettings:GetSetting(${1:setting})",
        "description": " ※Params: \n   (setting)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.worldsettings:SetSetting:": {
        "prefix": "components.worldsettings:SetSetting",
        "body": "components.worldsettings:SetSetting(${1:setting},${2:value})",
        "description": " ※Params: \n   (setting)<>[] \n   (value)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.worldsettingstimer:SetMaxTime:": {
        "prefix": "components.worldsettingstimer:SetMaxTime",
        "body": "components.worldsettingstimer:SetMaxTime(${1:name},${2:time})",
        "description": " ※Params: \n   (name)<>[] \n   (time)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.worldsettingstimer:PauseTimer:": {
        "prefix": "components.worldsettingstimer:PauseTimer",
        "body": "components.worldsettingstimer:PauseTimer(${1:name},${2:blocklongupdate})",
        "description": " ※Params: \n   (name)<>[] \n   (blocklongupdate)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.worldsettingstimer:AddTimer:": {
        "prefix": "components.worldsettingstimer:AddTimer",
        "body": "components.worldsettingstimer:AddTimer(${1:name},${2:maxtime},${3:enabled},${4:callback},${5:externallongupdate})",
        "description": " ※Params: \n   (name)<>[] \n   (maxtime)<>[] \n   (enabled)<>[] \n   (callback)<>[] \n   (externallongupdate)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.worldsettingstimer:TimerExists:": {
        "prefix": "components.worldsettingstimer:TimerExists",
        "body": "components.worldsettingstimer:TimerExists(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.worldsettingstimer:StartTimer:": {
        "prefix": "components.worldsettingstimer:StartTimer",
        "body": "components.worldsettingstimer:StartTimer(${1:name},${2:time},${3:paused},${4:initialtime_override},${5:blocklongupdate})",
        "description": " ※Params: \n   (name)<>[] \n   (time)<>[] \n   (paused)<>[] \n   (initialtime_override)<>[] \n   (blocklongupdate)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.worldsettingstimer:OnRemoveFromEntity:": {
        "prefix": "components.worldsettingstimer:OnRemoveFromEntity",
        "body": "components.worldsettingstimer:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.worldsettingstimer:GetMaxTime:": {
        "prefix": "components.worldsettingstimer:GetMaxTime",
        "body": "components.worldsettingstimer:GetMaxTime(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.worldsettingstimer:SetTimeLeft:": {
        "prefix": "components.worldsettingstimer:SetTimeLeft",
        "body": "components.worldsettingstimer:SetTimeLeft(${1:name},${2:time})",
        "description": " ※Params: \n   (name)<>[] \n   (time)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.worldsettingstimer:LongUpdate:": {
        "prefix": "components.worldsettingstimer:LongUpdate",
        "body": "components.worldsettingstimer:LongUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.worldsettingstimer:OnLoad:": {
        "prefix": "components.worldsettingstimer:OnLoad",
        "body": "components.worldsettingstimer:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.worldsettingstimer:OnSave:": {
        "prefix": "components.worldsettingstimer:OnSave",
        "body": "components.worldsettingstimer:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.worldsettingstimer:GetTimeLeft:": {
        "prefix": "components.worldsettingstimer:GetTimeLeft",
        "body": "components.worldsettingstimer:GetTimeLeft(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.worldsettingstimer:GetTimeElapsed:": {
        "prefix": "components.worldsettingstimer:GetTimeElapsed",
        "body": "components.worldsettingstimer:GetTimeElapsed(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.worldsettingstimer:GetDebugString:": {
        "prefix": "components.worldsettingstimer:GetDebugString",
        "body": "components.worldsettingstimer:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.worldsettingstimer:ResumeTimer:": {
        "prefix": "components.worldsettingstimer:ResumeTimer",
        "body": "components.worldsettingstimer:ResumeTimer(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.worldsettingstimer:StopTimer:": {
        "prefix": "components.worldsettingstimer:StopTimer",
        "body": "components.worldsettingstimer:StopTimer(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.worldsettingstimer:ActiveTimerExists:": {
        "prefix": "components.worldsettingstimer:ActiveTimerExists",
        "body": "components.worldsettingstimer:ActiveTimerExists(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.worldsettingstimer:IsPaused:": {
        "prefix": "components.worldsettingstimer:IsPaused",
        "body": "components.worldsettingstimer:IsPaused(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.worldsettingstimer:TimerEnabled:": {
        "prefix": "components.worldsettingstimer:TimerEnabled",
        "body": "components.worldsettingstimer:TimerEnabled(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.worldwind:GetDebugString:": {
        "prefix": "components.worldwind:GetDebugString",
        "body": "components.worldwind:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.worldwind:GetWindAngle:": {
        "prefix": "components.worldwind:GetWindAngle",
        "body": "components.worldwind:GetWindAngle()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.worldwind:Start:": {
        "prefix": "components.worldwind:Start",
        "body": "components.worldwind:Start()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.worldwind:Stop:": {
        "prefix": "components.worldwind:Stop",
        "body": "components.worldwind:Stop()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.worldwind:OnUpdate:": {
        "prefix": "components.worldwind:OnUpdate",
        "body": "components.worldwind:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.writeable:OnRemoveFromEntity:": {
        "prefix": "components.writeable:OnRemoveFromEntity",
        "body": "components.writeable:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.writeable:SetText:": {
        "prefix": "components.writeable:SetText",
        "body": "components.writeable:SetText(${1:text})",
        "description": " ※Params: \n   (text)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.writeable:SetOnWrittenFn:": {
        "prefix": "components.writeable:SetOnWrittenFn",
        "body": "components.writeable:SetOnWrittenFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.writeable:BeginWriting:": {
        "prefix": "components.writeable:BeginWriting",
        "body": "components.writeable:BeginWriting(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.writeable:SetWriteableDistance:": {
        "prefix": "components.writeable:SetWriteableDistance",
        "body": "components.writeable:SetWriteableDistance(${1:dist})",
        "description": " ※Params: \n   (dist)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.writeable:GetText:": {
        "prefix": "components.writeable:GetText",
        "body": "components.writeable:GetText()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.writeable:SetOnWritingEndedFn:": {
        "prefix": "components.writeable:SetOnWritingEndedFn",
        "body": "components.writeable:SetOnWritingEndedFn(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.writeable:OnLoad:": {
        "prefix": "components.writeable:OnLoad",
        "body": "components.writeable:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.writeable:EndWriting:": {
        "prefix": "components.writeable:EndWriting",
        "body": "components.writeable:EndWriting()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.writeable:SetAutomaticDescriptionEnabled:": {
        "prefix": "components.writeable:SetAutomaticDescriptionEnabled",
        "body": "components.writeable:SetAutomaticDescriptionEnabled(${1:ad_enabled})",
        "description": " ※Params: \n   (ad_enabled)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.writeable:SetDefaultWriteable:": {
        "prefix": "components.writeable:SetDefaultWriteable",
        "body": "components.writeable:SetDefaultWriteable(${1:writeable_by_default})",
        "description": " ※Params: \n   (writeable_by_default)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.writeable:IsBeingWritten:": {
        "prefix": "components.writeable:IsBeingWritten",
        "body": "components.writeable:IsBeingWritten()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.writeable:IsWritten:": {
        "prefix": "components.writeable:IsWritten",
        "body": "components.writeable:IsWritten()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.writeable:Write:": {
        "prefix": "components.writeable:Write",
        "body": "components.writeable:Write(${1:doer},${2:text})",
        "description": " ※Params: \n   (doer)<>[] \n   (text)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.writeable:OnSave:": {
        "prefix": "components.writeable:OnSave",
        "body": "components.writeable:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.writeable:OnUpdate:": {
        "prefix": "components.writeable:OnUpdate",
        "body": "components.writeable:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_sewer:IsSewing:": {
        "prefix": "components.yotb_sewer:IsSewing",
        "body": "components.yotb_sewer:IsSewing()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_sewer:LongUpdate:": {
        "prefix": "components.yotb_sewer:LongUpdate",
        "body": "components.yotb_sewer:LongUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_sewer:OnLoad:": {
        "prefix": "components.yotb_sewer:OnLoad",
        "body": "components.yotb_sewer:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_sewer:StopSewing:": {
        "prefix": "components.yotb_sewer:StopSewing",
        "body": "components.yotb_sewer:StopSewing(${1:reason})",
        "description": " ※Params: \n   (reason)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_sewer:GetDebugString:": {
        "prefix": "components.yotb_sewer:GetDebugString",
        "body": "components.yotb_sewer:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_sewer:StartSewing:": {
        "prefix": "components.yotb_sewer:StartSewing",
        "body": "components.yotb_sewer:StartSewing(${1:doer})",
        "description": " ※Params: \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_sewer:OnSave:": {
        "prefix": "components.yotb_sewer:OnSave",
        "body": "components.yotb_sewer:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_sewer:CanSew:": {
        "prefix": "components.yotb_sewer:CanSew",
        "body": "components.yotb_sewer:CanSew()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_sewer:IsDone:": {
        "prefix": "components.yotb_sewer:IsDone",
        "body": "components.yotb_sewer:IsDone()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_sewer:GetTimeToSew:": {
        "prefix": "components.yotb_sewer:GetTimeToSew",
        "body": "components.yotb_sewer:GetTimeToSew()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_sewer:OnRemoveFromEntity:": {
        "prefix": "components.yotb_sewer:OnRemoveFromEntity",
        "body": "components.yotb_sewer:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_skinunlocker:GetSkin:": {
        "prefix": "components.yotb_skinunlocker:GetSkin",
        "body": "components.yotb_skinunlocker:GetSkin()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_skinunlocker:SetSkin:": {
        "prefix": "components.yotb_skinunlocker:SetSkin",
        "body": "components.yotb_skinunlocker:SetSkin(${1:skin})",
        "description": " ※Params: \n   (skin)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stagemanager:IsContestActive:": {
        "prefix": "components.yotb_stagemanager:IsContestActive",
        "body": "components.yotb_stagemanager:IsContestActive()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stagemanager:EnableContest:": {
        "prefix": "components.yotb_stagemanager:EnableContest",
        "body": "components.yotb_stagemanager:EnableContest()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stagemanager:OnContestEnded:": {
        "prefix": "components.yotb_stagemanager:OnContestEnded",
        "body": "components.yotb_stagemanager:OnContestEnded()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stagemanager:SetContestEnabled:": {
        "prefix": "components.yotb_stagemanager:SetContestEnabled",
        "body": "components.yotb_stagemanager:SetContestEnabled(${1:setting})",
        "description": " ※Params: \n   (setting)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stagemanager:LoadPostPass:": {
        "prefix": "components.yotb_stagemanager:LoadPostPass",
        "body": "components.yotb_stagemanager:LoadPostPass(${1:newents},${2:savedata})",
        "description": " ※Params: \n   (newents)<>[] \n   (savedata)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stagemanager:IsContestEnabled:": {
        "prefix": "components.yotb_stagemanager:IsContestEnabled",
        "body": "components.yotb_stagemanager:IsContestEnabled()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stagemanager:OnNewDay:": {
        "prefix": "components.yotb_stagemanager:OnNewDay",
        "body": "components.yotb_stagemanager:OnNewDay()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stagemanager:GetActiveStage:": {
        "prefix": "components.yotb_stagemanager:GetActiveStage",
        "body": "components.yotb_stagemanager:GetActiveStage()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stagemanager:OnStageDestroyed:": {
        "prefix": "components.yotb_stagemanager:OnStageDestroyed",
        "body": "components.yotb_stagemanager:OnStageDestroyed(${1:stage})",
        "description": " ※Params: \n   (stage)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stagemanager:OnContestBegun:": {
        "prefix": "components.yotb_stagemanager:OnContestBegun",
        "body": "components.yotb_stagemanager:OnContestBegun(${1:active_stage})",
        "description": " ※Params: \n   (active_stage)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stagemanager:OnContestCheckPoint:": {
        "prefix": "components.yotb_stagemanager:OnContestCheckPoint",
        "body": "components.yotb_stagemanager:OnContestCheckPoint(${1:stage})",
        "description": " ※Params: \n   (stage)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stagemanager:OnSave:": {
        "prefix": "components.yotb_stagemanager:OnSave",
        "body": "components.yotb_stagemanager:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stagemanager:OnStageBuilt:": {
        "prefix": "components.yotb_stagemanager:OnStageBuilt",
        "body": "components.yotb_stagemanager:OnStageBuilt(${1:stage})",
        "description": " ※Params: \n   (stage)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stager:AwardVictors:": {
        "prefix": "components.yotb_stager:AwardVictors",
        "body": "components.yotb_stager:AwardVictors()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stager:Start_phase2:": {
        "prefix": "components.yotb_stager:Start_phase2",
        "body": "components.yotb_stager:Start_phase2()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stager:DisableContest:": {
        "prefix": "components.yotb_stager:DisableContest",
        "body": "components.yotb_stager:DisableContest()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stager:EndContest_phase2:": {
        "prefix": "components.yotb_stager:EndContest_phase2",
        "body": "components.yotb_stager:EndContest_phase2()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stager:BuildSuspense:": {
        "prefix": "components.yotb_stager:BuildSuspense",
        "body": "components.yotb_stager:BuildSuspense()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stager:GetParameterLine:": {
        "prefix": "components.yotb_stager:GetParameterLine",
        "body": "components.yotb_stager:GetParameterLine(${1:category})",
        "description": " ※Params: \n   (category)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stager:GetBeefScore:": {
        "prefix": "components.yotb_stager:GetBeefScore",
        "body": "components.yotb_stager:GetBeefScore(${1:beef})",
        "description": " ※Params: \n   (beef)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stager:SpawnVoiceName:": {
        "prefix": "components.yotb_stager:SpawnVoiceName",
        "body": "components.yotb_stager:SpawnVoiceName(${1:rank},${2:speech})",
        "description": " ※Params: \n   (rank)<>[] \n   (speech)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stager:Start_phase3:": {
        "prefix": "components.yotb_stager:Start_phase3",
        "body": "components.yotb_stager:Start_phase3()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stager:TestStartContest:": {
        "prefix": "components.yotb_stager:TestStartContest",
        "body": "components.yotb_stager:TestStartContest(${1:starter})",
        "description": " ※Params: \n   (starter)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stager:GetClosest:": {
        "prefix": "components.yotb_stager:GetClosest",
        "body": "components.yotb_stager:GetClosest(${1:values})",
        "description": " ※Params: \n   (values)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stager:Give_Patterns:": {
        "prefix": "components.yotb_stager:Give_Patterns",
        "body": "components.yotb_stager:Give_Patterns()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stager:AbortContest:": {
        "prefix": "components.yotb_stager:AbortContest",
        "body": "components.yotb_stager:AbortContest(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stager:StateParameters:": {
        "prefix": "components.yotb_stager:StateParameters",
        "body": "components.yotb_stager:StateParameters()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stager:LoadPostPass:": {
        "prefix": "components.yotb_stager:LoadPostPass",
        "body": "components.yotb_stager:LoadPostPass(${1:ents},${2:data})",
        "description": " ※Params: \n   (ents)<>[] \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stager:appraisedoll2:": {
        "prefix": "components.yotb_stager:appraisedoll2",
        "body": "components.yotb_stager:appraisedoll2()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stager:MakeRandomBeef:": {
        "prefix": "components.yotb_stager:MakeRandomBeef",
        "body": "components.yotb_stager:MakeRandomBeef(${1:post},${2:name})",
        "description": " ※Params: \n   (post)<>[] \n   (name)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stager:GetParameterLineDoll:": {
        "prefix": "components.yotb_stager:GetParameterLineDoll",
        "body": "components.yotb_stager:GetParameterLineDoll(${1:category})",
        "description": " ※Params: \n   (category)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stager:Endppraisedoll:": {
        "prefix": "components.yotb_stager:Endppraisedoll",
        "body": "components.yotb_stager:Endppraisedoll()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stager:DeclareWinner:": {
        "prefix": "components.yotb_stager:DeclareWinner",
        "body": "components.yotb_stager:DeclareWinner()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stager:Tossprizes:": {
        "prefix": "components.yotb_stager:Tossprizes",
        "body": "components.yotb_stager:Tossprizes()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stager:EndContest:": {
        "prefix": "components.yotb_stager:EndContest",
        "body": "components.yotb_stager:EndContest(${1:reason})",
        "description": " ※Params: \n   (reason)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stager:SpawnVoice:": {
        "prefix": "components.yotb_stager:SpawnVoice",
        "body": "components.yotb_stager:SpawnVoice(${1:pos},${2:comment},${3:duration})",
        "description": " ※Params: \n   (pos)<>[] \n   (comment)<>[] \n   (duration)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stager:StateParameters_Phase2:": {
        "prefix": "components.yotb_stager:StateParameters_Phase2",
        "body": "components.yotb_stager:StateParameters_Phase2()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stager:Start_fail:": {
        "prefix": "components.yotb_stager:Start_fail",
        "body": "components.yotb_stager:Start_fail(${1:result})",
        "description": " ※Params: \n   (result)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stager:StartContest:": {
        "prefix": "components.yotb_stager:StartContest",
        "body": "components.yotb_stager:StartContest(${1:starter})",
        "description": " ※Params: \n   (starter)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stager:appraisedoll:": {
        "prefix": "components.yotb_stager:appraisedoll",
        "body": "components.yotb_stager:appraisedoll(${1:doll})",
        "description": " ※Params: \n   (doll)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stager:Tossprize:": {
        "prefix": "components.yotb_stager:Tossprize",
        "body": "components.yotb_stager:Tossprize(${1:target},${2:pattern},${3:other})",
        "description": " ※Params: \n   (target)<>[] \n   (pattern)<>[] \n   (other)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stager:GetComment:": {
        "prefix": "components.yotb_stager:GetComment",
        "body": "components.yotb_stager:GetComment(${1:post})",
        "description": " ※Params: \n   (post)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stager:EnableContest:": {
        "prefix": "components.yotb_stager:EnableContest",
        "body": "components.yotb_stager:EnableContest()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stager:GetRandom:": {
        "prefix": "components.yotb_stager:GetRandom",
        "body": "components.yotb_stager:GetRandom()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stager:RemoveTrainer:": {
        "prefix": "components.yotb_stager:RemoveTrainer",
        "body": "components.yotb_stager:RemoveTrainer(${1:trainer})",
        "description": " ※Params: \n   (trainer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stager:GetFurthest:": {
        "prefix": "components.yotb_stager:GetFurthest",
        "body": "components.yotb_stager:GetFurthest(${1:values})",
        "description": " ※Params: \n   (values)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stager:CheckForMarks:": {
        "prefix": "components.yotb_stager:CheckForMarks",
        "body": "components.yotb_stager:CheckForMarks(${1:post},${2:doer})",
        "description": " ※Params: \n   (post)<>[] \n   (doer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stager:RemoveTempBeef:": {
        "prefix": "components.yotb_stager:RemoveTempBeef",
        "body": "components.yotb_stager:RemoveTempBeef(${1:beefalo})",
        "description": " ※Params: \n   (beefalo)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stager:RemoveTempTrainer:": {
        "prefix": "components.yotb_stager:RemoveTempTrainer",
        "body": "components.yotb_stager:RemoveTempTrainer(${1:trainer})",
        "description": " ※Params: \n   (trainer)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stager:appraisedoll3:": {
        "prefix": "components.yotb_stager:appraisedoll3",
        "body": "components.yotb_stager:appraisedoll3()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stager:AdvanceQueue:": {
        "prefix": "components.yotb_stager:AdvanceQueue",
        "body": "components.yotb_stager:AdvanceQueue(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stager:unhighlitepost:": {
        "prefix": "components.yotb_stager:unhighlitepost",
        "body": "components.yotb_stager:unhighlitepost(${1:post})",
        "description": " ※Params: \n   (post)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stager:cleartimers:": {
        "prefix": "components.yotb_stager:cleartimers",
        "body": "components.yotb_stager:cleartimers()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stager:Give_consoleprizes:": {
        "prefix": "components.yotb_stager:Give_consoleprizes",
        "body": "components.yotb_stager:Give_consoleprizes()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotb_stager:highlitepost:": {
        "prefix": "components.yotb_stager:highlitepost",
        "body": "components.yotb_stager:highlitepost(${1:post})",
        "description": " ※Params: \n   (post)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.yotc_racecompetitor:StartRace:": {
        "prefix": "components.yotc_racecompetitor:StartRace",
        "body": "components.yotc_racecompetitor:StartRace(${1:delay})",
        "description": " ※Params: \n   (delay)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.yotc_racecompetitor:SetRaceFinishedFn:": {
        "prefix": "components.yotc_racecompetitor:SetRaceFinishedFn",
        "body": "components.yotc_racecompetitor:SetRaceFinishedFn(${1:race_finished_fn})",
        "description": " ※Params: \n   (race_finished_fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.yotc_racecompetitor:FinishRace:": {
        "prefix": "components.yotc_racecompetitor:FinishRace",
        "body": "components.yotc_racecompetitor:FinishRace()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotc_racecompetitor:CollectPrize:": {
        "prefix": "components.yotc_racecompetitor:CollectPrize",
        "body": "components.yotc_racecompetitor:CollectPrize()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotc_racecompetitor:SetRaceBegunFn:": {
        "prefix": "components.yotc_racecompetitor:SetRaceBegunFn",
        "body": "components.yotc_racecompetitor:SetRaceBegunFn(${1:race_begun_fn})",
        "description": " ※Params: \n   (race_begun_fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.yotc_racecompetitor:OnEntitySleep:": {
        "prefix": "components.yotc_racecompetitor:OnEntitySleep",
        "body": "components.yotc_racecompetitor:OnEntitySleep()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotc_racecompetitor:OnRemoveEntity:": {
        "prefix": "components.yotc_racecompetitor:OnRemoveEntity",
        "body": "components.yotc_racecompetitor:OnRemoveEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotc_racecompetitor:_SetCheckPoint:": {
        "prefix": "components.yotc_racecompetitor:_SetCheckPoint",
        "body": "components.yotc_racecompetitor:_SetCheckPoint(${1:checkpoint},${2:is_starting_line})",
        "description": " ※Params: \n   (checkpoint)<>[] \n   (is_starting_line)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.yotc_racecompetitor:SetRaceStartPoint:": {
        "prefix": "components.yotc_racecompetitor:SetRaceStartPoint",
        "body": "components.yotc_racecompetitor:SetRaceStartPoint(${1:start_point_entity})",
        "description": " ※Params: \n   (start_point_entity)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.yotc_racecompetitor:AbortRace:": {
        "prefix": "components.yotc_racecompetitor:AbortRace",
        "body": "components.yotc_racecompetitor:AbortRace(${1:prize_table})",
        "description": " ※Params: \n   (prize_table)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.yotc_racecompetitor:OnUpdate:": {
        "prefix": "components.yotc_racecompetitor:OnUpdate",
        "body": "components.yotc_racecompetitor:OnUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.yotc_racecompetitor:RecoverStamina:": {
        "prefix": "components.yotc_racecompetitor:RecoverStamina",
        "body": "components.yotc_racecompetitor:RecoverStamina()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotc_racecompetitor:IsExhausted:": {
        "prefix": "components.yotc_racecompetitor:IsExhausted",
        "body": "components.yotc_racecompetitor:IsExhausted()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotc_racecompetitor:OnRemoveFromEntity:": {
        "prefix": "components.yotc_racecompetitor:OnRemoveFromEntity",
        "body": "components.yotc_racecompetitor:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotc_racecompetitor:GetDebugString:": {
        "prefix": "components.yotc_racecompetitor:GetDebugString",
        "body": "components.yotc_racecompetitor:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotc_racecompetitor:_FindNextCheckPoint:": {
        "prefix": "components.yotc_racecompetitor:_FindNextCheckPoint",
        "body": "components.yotc_racecompetitor:_FindNextCheckPoint()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotc_racecompetitor:IsStartingLate:": {
        "prefix": "components.yotc_racecompetitor:IsStartingLate",
        "body": "components.yotc_racecompetitor:IsStartingLate()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotc_racecompetitor:SetRaceOverFn:": {
        "prefix": "components.yotc_racecompetitor:SetRaceOverFn",
        "body": "components.yotc_racecompetitor:SetRaceOverFn(${1:race_over_fn})",
        "description": " ※Params: \n   (race_over_fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.yotc_racecompetitor:GetRaceDistance:": {
        "prefix": "components.yotc_racecompetitor:GetRaceDistance",
        "body": "components.yotc_racecompetitor:GetRaceDistance()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotc_racecompetitor:OnAllRacersFinished:": {
        "prefix": "components.yotc_racecompetitor:OnAllRacersFinished",
        "body": "components.yotc_racecompetitor:OnAllRacersFinished(${1:prize_table})",
        "description": " ※Params: \n   (prize_table)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.yotc_racestart:StartRace:": {
        "prefix": "components.yotc_racestart:StartRace",
        "body": "components.yotc_racestart:StartRace()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotc_racestart:EndRace:": {
        "prefix": "components.yotc_racestart:EndRace",
        "body": "components.yotc_racestart:EndRace()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotc_racestart:CanInteract:": {
        "prefix": "components.yotc_racestart:CanInteract",
        "body": "components.yotc_racestart:CanInteract()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotc_racestart:OnRemoveFromEntity:": {
        "prefix": "components.yotc_racestart:OnRemoveFromEntity",
        "body": "components.yotc_racestart:OnRemoveFromEntity()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotc_racestats:GetSpeedModifier:": {
        "prefix": "components.yotc_racestats:GetSpeedModifier",
        "body": "components.yotc_racestats:GetSpeedModifier()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotc_racestats:GetDebugString:": {
        "prefix": "components.yotc_racestats:GetDebugString",
        "body": "components.yotc_racestats:GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotc_racestats:GetStaminaModifier:": {
        "prefix": "components.yotc_racestats:GetStaminaModifier",
        "body": "components.yotc_racestats:GetStaminaModifier()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotc_racestats:GetDirectionModifier:": {
        "prefix": "components.yotc_racestats:GetDirectionModifier",
        "body": "components.yotc_racestats:GetDirectionModifier()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotc_racestats:OnLoad:": {
        "prefix": "components.yotc_racestats:OnLoad",
        "body": "components.yotc_racestats:OnLoad(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.yotc_racestats:GetReactionModifier:": {
        "prefix": "components.yotc_racestats:GetReactionModifier",
        "body": "components.yotc_racestats:GetReactionModifier()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotc_racestats:GetNumStatPoints:": {
        "prefix": "components.yotc_racestats:GetNumStatPoints",
        "body": "components.yotc_racestats:GetNumStatPoints()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotc_racestats:ModifySpeed:": {
        "prefix": "components.yotc_racestats:ModifySpeed",
        "body": "components.yotc_racestats:ModifySpeed(${1:point_mod})",
        "description": " ※Params: \n   (point_mod)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.yotc_racestats:SaveCurrentStatsAsBaseline:": {
        "prefix": "components.yotc_racestats:SaveCurrentStatsAsBaseline",
        "body": "components.yotc_racestats:SaveCurrentStatsAsBaseline()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotc_racestats:GetBestStats:": {
        "prefix": "components.yotc_racestats:GetBestStats",
        "body": "components.yotc_racestats:GetBestStats()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotc_racestats:ModifyReaction:": {
        "prefix": "components.yotc_racestats:ModifyReaction",
        "body": "components.yotc_racestats:ModifyReaction(${1:point_mod})",
        "description": " ※Params: \n   (point_mod)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.yotc_racestats:ModifyDirection:": {
        "prefix": "components.yotc_racestats:ModifyDirection",
        "body": "components.yotc_racestats:ModifyDirection(${1:point_mod})",
        "description": " ※Params: \n   (point_mod)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.yotc_racestats:DegradePoints:": {
        "prefix": "components.yotc_racestats:DegradePoints",
        "body": "components.yotc_racestats:DegradePoints(${1:num_points})",
        "description": " ※Params: \n   (num_points)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.yotc_racestats:AddRandomPointSpread:": {
        "prefix": "components.yotc_racestats:AddRandomPointSpread",
        "body": "components.yotc_racestats:AddRandomPointSpread(${1:num_points})",
        "description": " ※Params: \n   (num_points)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Component.yotc_racestats:OnSave:": {
        "prefix": "components.yotc_racestats:OnSave",
        "body": "components.yotc_racestats:OnSave()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Component.yotc_racestats:ModifyStamina:": {
        "prefix": "components.yotc_racestats:ModifyStamina",
        "body": "components.yotc_racestats:ModifyStamina(${1:point_mod})",
        "description": " ※Params: \n   (point_mod)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Constant:CHARACTER_INGREDIENT": {
        "prefix": "CHARACTER_INGREDIENT",
        "body": "CHARACTER_INGREDIENT",
        "description": "\n ※Description: NOTE: Value is used as key for NAME string and inventory image\n ※Contributor: @lan (Value is: table)"
    },
    "Constant:names.trunk_summer": {
        "prefix": "names.trunk_summer",
        "body": "names.trunk_summer",
        "description": "\n ※Description: Koalefant Trunk\n ※Contributor: @lan \n ※Details: \n\tmeat：1\n\t"
    },
    "Constant:LEVELTYPE.UNKNOWN": {
        "prefix": "LEVELTYPE.UNKNOWN",
        "body": "LEVELTYPE.UNKNOWN",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:SCALEMODE_NONE": {
        "prefix": "SCALEMODE_NONE",
        "body": "SCALEMODE_NONE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 0)"
    },
    "Constant:MOUSEBUTTON_SCROLLUP": {
        "prefix": "MOUSEBUTTON_SCROLLUP",
        "body": "MOUSEBUTTON_SCROLLUP",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 1003)"
    },
    "Constant:ANIM_ORIENTATION": {
        "prefix": "ANIM_ORIENTATION",
        "body": "ANIM_ORIENTATION",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: table)"
    },
    "Constant:CONTROL_INVENTORY_LEFT": {
        "prefix": "CONTROL_INVENTORY_LEFT",
        "body": "CONTROL_INVENTORY_LEFT",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 47)"
    },
    "Constant:TECH.HERMITCRABSHOP_SEVEN": {
        "prefix": "TECH.HERMITCRABSHOP_SEVEN",
        "body": "TECH.HERMITCRABSHOP_SEVEN",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:CONTROL_INV_12": {
        "prefix": "CONTROL_INV_12",
        "body": "CONTROL_INV_12",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 78)"
    },
    "Constant:CONTROL_CONTROLLER_ATTACK": {
        "prefix": "CONTROL_CONTROLLER_ATTACK",
        "body": "CONTROL_CONTROLLER_ATTACK",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 56)"
    },
    "Constant:CONTROL_TARGET_MODIFIER": {
        "prefix": "CONTROL_TARGET_MODIFIER",
        "body": "CONTROL_TARGET_MODIFIER",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 69)"
    },
    "Constant:UICOLOURS.GOLD_SELECTED": {
        "prefix": "UICOLOURS.GOLD_SELECTED",
        "body": "UICOLOURS.GOLD_SELECTED",
        "description": "\n ※Description: titles and non-interactive important text\n ※Contributor: @lan (Value is: RGB(245, 243, 222))"
    },
    "Constant:MOUSEBUTTON_SCROLLDOWN": {
        "prefix": "MOUSEBUTTON_SCROLLDOWN",
        "body": "MOUSEBUTTON_SCROLLDOWN",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 1004)"
    },
    "Constant:MATERIALS.STONE": {
        "prefix": "MATERIALS.STONE",
        "body": "MATERIALS.STONE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: stone)"
    },
    "Constant:names.oceanfish_small_1_inv": {
        "prefix": "names.oceanfish_small_1_inv",
        "body": "names.oceanfish_small_1_inv",
        "description": "\n ※Description: Runty Guppy\n ※Contributor: @lan \n ※Details: \n\tmeat：0.5\n\tfish：0.5\n\t"
    },
    "Constant:WEBCOLOURS.CORAL": {
        "prefix": "WEBCOLOURS.CORAL",
        "body": "WEBCOLOURS.CORAL",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RGB(255, 127, 80))"
    },
    "Constant:CONTROL_CRAFTING_MODIFIER": {
        "prefix": "CONTROL_CRAFTING_MODIFIER",
        "body": "CONTROL_CRAFTING_MODIFIER",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 74)"
    },
    "Constant:MATERIALS.NIGHTMARE": {
        "prefix": "MATERIALS.NIGHTMARE",
        "body": "MATERIALS.NIGHTMARE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: nightmare)"
    },
    "Constant:ITEMTAG.FOOD": {
        "prefix": "ITEMTAG.FOOD",
        "body": "ITEMTAG.FOOD",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: food)"
    },
    "Constant:BLENDMODE.Premultiplied": {
        "prefix": "BLENDMODE.Premultiplied",
        "body": "BLENDMODE.Premultiplied",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 3)"
    },
    "Constant:PLAYERSTUNLOCK.ALWAYS": {
        "prefix": "PLAYERSTUNLOCK.ALWAYS",
        "body": "PLAYERSTUNLOCK.ALWAYS",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: nil,--0)"
    },
    "Constant:WEBCOLOURS.BISQUE": {
        "prefix": "WEBCOLOURS.BISQUE",
        "body": "WEBCOLOURS.BISQUE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RGB(255, 228, 196))"
    },
    "Constant:TOOLACTIONS.MINE": {
        "prefix": "TOOLACTIONS.MINE",
        "body": "TOOLACTIONS.MINE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: true)"
    },
    "Constant:CONTROL_MENU_L2": {
        "prefix": "CONTROL_MENU_L2",
        "body": "CONTROL_MENU_L2",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 85)"
    },
    "Constant:UICOLOURS.PURPLE": {
        "prefix": "UICOLOURS.PURPLE",
        "body": "UICOLOURS.PURPLE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RGB(152, 86, 232, 1))"
    },
    "Constant:MATERIALS.MOONROCK": {
        "prefix": "MATERIALS.MOONROCK",
        "body": "MATERIALS.MOONROCK",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: moonrock)"
    },
    "Constant:TECH.HERMITCRABSHOP_FIVE": {
        "prefix": "TECH.HERMITCRABSHOP_FIVE",
        "body": "TECH.HERMITCRABSHOP_FIVE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:names.bird_egg_cooked": {
        "prefix": "names.bird_egg_cooked",
        "body": "names.bird_egg_cooked",
        "description": "\n ※Description: Cooked Egg\n ※Contributor: @lan \n ※Details: \n\tegg：1\n\t"
    },
    "Constant:GROUND.WALL_FUNGUS": {
        "prefix": "GROUND.WALL_FUNGUS",
        "body": "GROUND.WALL_FUNGUS",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 155)"
    },
    "Constant:GROUND.OCEAN_SWELL": {
        "prefix": "GROUND.OCEAN_SWELL",
        "body": "GROUND.OCEAN_SWELL",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 203)"
    },
    "Constant:TECH.CELESTIAL_THREE": {
        "prefix": "TECH.CELESTIAL_THREE",
        "body": "TECH.CELESTIAL_THREE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:CONTROL_CUSTOM_START": {
        "prefix": "CONTROL_CUSTOM_START",
        "body": "CONTROL_CUSTOM_START",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 100)"
    },
    "Constant:CONTROL_ZOOM_OUT": {
        "prefix": "CONTROL_ZOOM_OUT",
        "body": "CONTROL_ZOOM_OUT",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 10)"
    },
    "Constant:CONTROL_INV_6": {
        "prefix": "CONTROL_INV_6",
        "body": "CONTROL_INV_6",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 20)"
    },
    "Constant:names.cave_banana": {
        "prefix": "names.cave_banana",
        "body": "names.cave_banana",
        "description": "\n ※Description: Banana\n ※Contributor: @lan \n ※Details: \n\tfruit：1\n\t"
    },
    "Constant:GROUND.FARMING_SOIL": {
        "prefix": "GROUND.FARMING_SOIL",
        "body": "GROUND.FARMING_SOIL",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 47)"
    },
    "Constant:CONTROL_PRIMARY": {
        "prefix": "CONTROL_PRIMARY",
        "body": "CONTROL_PRIMARY",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 0)"
    },
    "Constant:CONTROL_ACTION": {
        "prefix": "CONTROL_ACTION",
        "body": "CONTROL_ACTION",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 4)"
    },
    "Constant:TECH.ANCIENT_THREE": {
        "prefix": "TECH.ANCIENT_THREE",
        "body": "TECH.ANCIENT_THREE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:ROAD_PARAMETERS.MAX_EDGE_WIDTH": {
        "prefix": "ROAD_PARAMETERS.MAX_EDGE_WIDTH",
        "body": "ROAD_PARAMETERS.MAX_EDGE_WIDTH",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 1)"
    },
    "Constant:CONTROL_TOGGLE_LOG": {
        "prefix": "CONTROL_TOGGLE_LOG",
        "body": "CONTROL_TOGGLE_LOG",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 43)"
    },
    "Constant:COLLISION.FLYERS": {
        "prefix": "COLLISION.FLYERS",
        "body": "COLLISION.FLYERS",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 2048)"
    },
    "Constant:names.moon_cap_cooked": {
        "prefix": "names.moon_cap_cooked",
        "body": "names.moon_cap_cooked",
        "description": "\n ※Description: Cooked Moon Shroom\n ※Contributor: @lan \n ※Details: \n\tveggie：0.5\n\t"
    },
    "Constant:DEPLOYSPACING.MEDIUM": {
        "prefix": "DEPLOYSPACING.MEDIUM",
        "body": "DEPLOYSPACING.MEDIUM",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 1)"
    },
    "Constant:CONTROL_INV_15": {
        "prefix": "CONTROL_INV_15",
        "body": "CONTROL_INV_15",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 81)"
    },
    "Constant:GROUND.BRICK": {
        "prefix": "GROUND.BRICK",
        "body": "GROUND.BRICK",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 18)"
    },
    "Constant:LEVELTYPE.TEST": {
        "prefix": "LEVELTYPE.TEST",
        "body": "LEVELTYPE.TEST",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: TEST)"
    },
    "Constant:FACING_UPRIGHT": {
        "prefix": "FACING_UPRIGHT",
        "body": "FACING_UPRIGHT",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 4)"
    },
    "Constant:MATERIALS.DREADSTONE": {
        "prefix": "MATERIALS.DREADSTONE",
        "body": "MATERIALS.DREADSTONE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: dreadstone)"
    },
    "Constant:GROUND.LAVAARENA_TRIM": {
        "prefix": "GROUND.LAVAARENA_TRIM",
        "body": "GROUND.LAVAARENA_TRIM",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 34)"
    },
    "Constant:UICOLOURS.GOLD_CLICKABLE": {
        "prefix": "UICOLOURS.GOLD_CLICKABLE",
        "body": "UICOLOURS.GOLD_CLICKABLE",
        "description": "\n ※Description: interactive text & menu\n ※Contributor: @lan (Value is: RGB(215, 210, 157))"
    },
    "Constant:LEVELTYPE.CAVE": {
        "prefix": "LEVELTYPE.CAVE",
        "body": "LEVELTYPE.CAVE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: CAVE)"
    },
    "Constant:names.pepper_cooked": {
        "prefix": "names.pepper_cooked",
        "body": "names.pepper_cooked",
        "description": "\n ※Description: Roasted Pepper\n ※Contributor: @lan \n ※Details: \n\tveggie：1\n\t"
    },
    "Constant:WEBCOLOURS.SALMON": {
        "prefix": "WEBCOLOURS.SALMON",
        "body": "WEBCOLOURS.SALMON",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RGB(250, 128, 114))"
    },
    "Constant:CONTROL_FORCE_INSPECT": {
        "prefix": "CONTROL_FORCE_INSPECT",
        "body": "CONTROL_FORCE_INSPECT",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 38)"
    },
    "Constant:CAMERASHAKE.SIDE": {
        "prefix": "CAMERASHAKE.SIDE",
        "body": "CAMERASHAKE.SIDE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 1)"
    },
    "Constant:EQUIPSLOTS": {
        "prefix": "EQUIPSLOTS",
        "body": "EQUIPSLOTS",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: table)"
    },
    "Constant:SEASONS.CAVES": {
        "prefix": "SEASONS.CAVES",
        "body": "SEASONS.CAVES",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: caves)"
    },
    "Constant:CONTROL_INVENTORY_EXAMINE": {
        "prefix": "CONTROL_INVENTORY_EXAMINE",
        "body": "CONTROL_INVENTORY_EXAMINE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 51)"
    },
    "Constant:ITEMTAG.MEAT": {
        "prefix": "ITEMTAG.MEAT",
        "body": "ITEMTAG.MEAT",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: meat)"
    },
    "Constant:DEPLOYSPACING.LESS": {
        "prefix": "DEPLOYSPACING.LESS",
        "body": "DEPLOYSPACING.LESS",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 2)"
    },
    "Constant:GROUND.WALL_ROCKY": {
        "prefix": "GROUND.WALL_ROCKY",
        "body": "GROUND.WALL_ROCKY",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 151)"
    },
    "Constant:TECH.TURFCRAFTING_ONE": {
        "prefix": "TECH.TURFCRAFTING_ONE",
        "body": "TECH.TURFCRAFTING_ONE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:CONTROL_SPLITSTACK": {
        "prefix": "CONTROL_SPLITSTACK",
        "body": "CONTROL_SPLITSTACK",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 35)"
    },
    "Constant:NODE_TYPE.SeparatedRoom": {
        "prefix": "NODE_TYPE.SeparatedRoom",
        "body": "NODE_TYPE.SeparatedRoom",
        "description": "\n ※Description: adds impassable around its entire parameter\n ※Contributor: @lan (Value is: 7)"
    },
    "Constant:DEPLOYMODE.ANYWHERE": {
        "prefix": "DEPLOYMODE.ANYWHERE",
        "body": "DEPLOYMODE.ANYWHERE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 2)"
    },
    "Constant:ANIM_SORT_ORDER": {
        "prefix": "ANIM_SORT_ORDER",
        "body": "ANIM_SORT_ORDER",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: table)"
    },
    "Constant:WEBCOLOURS.PLUM": {
        "prefix": "WEBCOLOURS.PLUM",
        "body": "WEBCOLOURS.PLUM",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RGB(221, 160, 221))"
    },
    "Constant:TECH.YOTP": {
        "prefix": "TECH.YOTP",
        "body": "TECH.YOTP",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:CONTROL_MENU_BACK": {
        "prefix": "CONTROL_MENU_BACK",
        "body": "CONTROL_MENU_BACK",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 83)"
    },
    "Constant:GROUND.OCEAN_WATERLOG": {
        "prefix": "GROUND.OCEAN_WATERLOG",
        "body": "GROUND.OCEAN_WATERLOG",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 208)"
    },
    "Constant:WEBCOLOURS.BROWN": {
        "prefix": "WEBCOLOURS.BROWN",
        "body": "WEBCOLOURS.BROWN",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RGB(165, 42, 42))"
    },
    "Constant:COLLISION.SMALLOBSTACLES": {
        "prefix": "COLLISION.SMALLOBSTACLES",
        "body": "COLLISION.SMALLOBSTACLES",
        "description": "\n ※Description: collide with characters but not giants\n ※Contributor: @lan (Value is: 8192)"
    },
    "Constant:names.tomato_cooked": {
        "prefix": "names.tomato_cooked",
        "body": "names.tomato_cooked",
        "description": "\n ※Description: Roasted Toma Root\n ※Contributor: @lan \n ※Details: \n\tveggie：1\n\t"
    },
    "Constant:names.froglegs": {
        "prefix": "names.froglegs",
        "body": "names.froglegs",
        "description": "\n ※Description: Frog Legs\n ※Contributor: @lan \n ※Details: \n\tmeat：0.5\n\t"
    },
    "Constant:CONTROL_INSPECT": {
        "prefix": "CONTROL_INSPECT",
        "body": "CONTROL_INSPECT",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 3)"
    },
    "Constant:MATERIALS.GEARS": {
        "prefix": "MATERIALS.GEARS",
        "body": "MATERIALS.GEARS",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: gears)"
    },
    "Constant:GROUND.CAVE": {
        "prefix": "GROUND.CAVE",
        "body": "GROUND.CAVE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 13)"
    },
    "Constant:BGCOLOURS": {
        "prefix": "BGCOLOURS",
        "body": "BGCOLOURS",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: table)"
    },
    "Constant:CONTROL_MAP_ZOOM_IN": {
        "prefix": "CONTROL_MAP_ZOOM_IN",
        "body": "CONTROL_MAP_ZOOM_IN",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 60)"
    },
    "Constant:BLENDMODE.AlphaAdditive": {
        "prefix": "BLENDMODE.AlphaAdditive",
        "body": "BLENDMODE.AlphaAdditive",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 5)"
    },
    "Constant:TENDENCY.RIDER": {
        "prefix": "TENDENCY.RIDER",
        "body": "TENDENCY.RIDER",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RIDER)"
    },
    "Constant:WEBCOLOURS.TEAL": {
        "prefix": "WEBCOLOURS.TEAL",
        "body": "WEBCOLOURS.TEAL",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RGB(0, 128, 128))"
    },
    "Constant:names.batnose_cooked": {
        "prefix": "names.batnose_cooked",
        "body": "names.batnose_cooked",
        "description": "\n ※Description: Charred Nostrils\n ※Contributor: @lan \n ※Details: \n\tmeat：0.5\n\t"
    },
    "Constant:NAUGHTY_VALUE.deer": {
        "prefix": "NAUGHTY_VALUE.deer",
        "body": "NAUGHTY_VALUE.deer",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 4)"
    },
    "Constant:CONTROL_TOGGLE_PLAYER_STATUS": {
        "prefix": "CONTROL_TOGGLE_PLAYER_STATUS",
        "body": "CONTROL_TOGGLE_PLAYER_STATUS",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 66)"
    },
    "Constant:CONTROL_ZOOM_IN": {
        "prefix": "CONTROL_ZOOM_IN",
        "body": "CONTROL_ZOOM_IN",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 9)"
    },
    "Constant:names.green_cap": {
        "prefix": "names.green_cap",
        "body": "names.green_cap",
        "description": "\n ※Description: Green Cap\n ※Contributor: @lan \n ※Details: \n\tveggie：0.5\n\t"
    },
    "Constant:GROUND.LAVAARENA_FLOOR": {
        "prefix": "GROUND.LAVAARENA_FLOOR",
        "body": "GROUND.LAVAARENA_FLOOR",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 33)"
    },
    "Constant:ITEMTAG.FIRE": {
        "prefix": "ITEMTAG.FIRE",
        "body": "ITEMTAG.FIRE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: fire)"
    },
    "Constant:FOODTYPE.NITRE": {
        "prefix": "FOODTYPE.NITRE",
        "body": "FOODTYPE.NITRE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: NITRE)"
    },
    "Constant:WEBCOLOURS": {
        "prefix": "WEBCOLOURS",
        "body": "WEBCOLOURS",
        "description": "\n ※Description: Standard html colours: https://en.wikipedia.org/wiki/Web_colors#X11_color_names\n ※Contributor: @lan (Value is: table)"
    },
    "Constant:CONTROL_SECONDARY": {
        "prefix": "CONTROL_SECONDARY",
        "body": "CONTROL_SECONDARY",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 1)"
    },
    "Constant:CONTROL_TARGET_CYCLE": {
        "prefix": "CONTROL_TARGET_CYCLE",
        "body": "CONTROL_TARGET_CYCLE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 89)"
    },
    "Constant:ANCHOR_TOP": {
        "prefix": "ANCHOR_TOP",
        "body": "ANCHOR_TOP",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 1)"
    },
    "Constant:EQUIPSLOTS.BODY": {
        "prefix": "EQUIPSLOTS.BODY",
        "body": "EQUIPSLOTS.BODY",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: body)"
    },
    "Constant:names.smallmeat": {
        "prefix": "names.smallmeat",
        "body": "names.smallmeat",
        "description": "\n ※Description: Morsel\n ※Contributor: @lan \n ※Details: \n\tmeat：0.5\n\t"
    },
    "Constant:CONTROL_CONTROLLER_ACTION": {
        "prefix": "CONTROL_CONTROLLER_ACTION",
        "body": "CONTROL_CONTROLLER_ACTION",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 57)"
    },
    "Constant:CONTROL_SCROLLFWD": {
        "prefix": "CONTROL_SCROLLFWD",
        "body": "CONTROL_SCROLLFWD",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 32)"
    },
    "Constant:WEBCOLOURS.PERU": {
        "prefix": "WEBCOLOURS.PERU",
        "body": "WEBCOLOURS.PERU",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RGB(205, 133, 63))"
    },
    "Constant:TECH.WINTERSFEASTCOOKING_ONE": {
        "prefix": "TECH.WINTERSFEASTCOOKING_ONE",
        "body": "TECH.WINTERSFEASTCOOKING_ONE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:NAUGHTY_VALUE.butterfly": {
        "prefix": "NAUGHTY_VALUE.butterfly",
        "body": "NAUGHTY_VALUE.butterfly",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 1)"
    },
    "Constant:ANCHOR_BOTTOM": {
        "prefix": "ANCHOR_BOTTOM",
        "body": "ANCHOR_BOTTOM",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 2)"
    },
    "Constant:WEBCOLOURS.TOMATO": {
        "prefix": "WEBCOLOURS.TOMATO",
        "body": "WEBCOLOURS.TOMATO",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RGB(255, 99, 71))"
    },
    "Constant:DEPLOYMODE.WATER": {
        "prefix": "DEPLOYMODE.WATER",
        "body": "DEPLOYMODE.WATER",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 6)"
    },
    "Constant:CONTROL_INV_5": {
        "prefix": "CONTROL_INV_5",
        "body": "CONTROL_INV_5",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 19)"
    },
    "Constant:TECH.WARGOFFERING_THREE": {
        "prefix": "TECH.WARGOFFERING_THREE",
        "body": "TECH.WARGOFFERING_THREE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:CONTROL_FOCUS_RIGHT": {
        "prefix": "CONTROL_FOCUS_RIGHT",
        "body": "CONTROL_FOCUS_RIGHT",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 28)"
    },
    "Constant:FACING_DOWNRIGHT": {
        "prefix": "FACING_DOWNRIGHT",
        "body": "FACING_DOWNRIGHT",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 6)"
    },
    "Constant:names.berries_cooked": {
        "prefix": "names.berries_cooked",
        "body": "names.berries_cooked",
        "description": "\n ※Description: Roasted Berries\n ※Contributor: @lan \n ※Details: \n\tfruit：0.5\n\t"
    },
    "Constant:names.mole": {
        "prefix": "names.mole",
        "body": "names.mole",
        "description": "\n ※Description: Moleworm\n ※Contributor: @lan \n ※Details: \n\tmeat：0.5\n\t"
    },
    "Constant:CONTROL_OPEN_INVENTORY": {
        "prefix": "CONTROL_OPEN_INVENTORY",
        "body": "CONTROL_OPEN_INVENTORY",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 45)"
    },
    "Constant:CONTROL_MENU_MISC_3": {
        "prefix": "CONTROL_MENU_MISC_3",
        "body": "CONTROL_MENU_MISC_3",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 70)"
    },
    "Constant:FACING_DOWNLEFT": {
        "prefix": "FACING_DOWNLEFT",
        "body": "FACING_DOWNLEFT",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 7)"
    },
    "Constant:GROUND.WALL_MARSH": {
        "prefix": "GROUND.WALL_MARSH",
        "body": "GROUND.WALL_MARSH",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 153)"
    },
    "Constant:TECH.SEAFARING_TWO": {
        "prefix": "TECH.SEAFARING_TWO",
        "body": "TECH.SEAFARING_TWO",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:names.froglegs_cooked": {
        "prefix": "names.froglegs_cooked",
        "body": "names.froglegs_cooked",
        "description": "\n ※Description: Cooked Frog Legs\n ※Contributor: @lan \n ※Details: \n\tmeat：0.5\n\t"
    },
    "Constant:CONTROL_MENU_START": {
        "prefix": "CONTROL_MENU_START",
        "body": "CONTROL_MENU_START",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 84)"
    },
    "Constant:CHARACTER_INGREDIENT.MAX_SANITY": {
        "prefix": "CHARACTER_INGREDIENT.MAX_SANITY",
        "body": "CHARACTER_INGREDIENT.MAX_SANITY",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: half_sanity)"
    },
    "Constant:ITEMTAG.TOOL": {
        "prefix": "ITEMTAG.TOOL",
        "body": "ITEMTAG.TOOL",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: tool)"
    },
    "Constant:CONTROL_SHOW_PLAYER_STATUS": {
        "prefix": "CONTROL_SHOW_PLAYER_STATUS",
        "body": "CONTROL_SHOW_PLAYER_STATUS",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 67)"
    },
    "Constant:CONTROL_TARGET_CYCLE_FORWARD": {
        "prefix": "CONTROL_TARGET_CYCLE_FORWARD",
        "body": "CONTROL_TARGET_CYCLE_FORWARD",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 12)"
    },
    "Constant:ORDERS.HOLD": {
        "prefix": "ORDERS.HOLD",
        "body": "ORDERS.HOLD",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 1)"
    },
    "Constant:WEBCOLOURS.BLUE": {
        "prefix": "WEBCOLOURS.BLUE",
        "body": "WEBCOLOURS.BLUE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RGB(0, 0, 255))"
    },
    "Constant:DEPLOYMODE.MAST": {
        "prefix": "DEPLOYMODE.MAST",
        "body": "DEPLOYMODE.MAST",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 7)"
    },
    "Constant:DEPLOYSPACING.NONE": {
        "prefix": "DEPLOYSPACING.NONE",
        "body": "DEPLOYSPACING.NONE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 3)"
    },
    "Constant:SEASONS.SPRING": {
        "prefix": "SEASONS.SPRING",
        "body": "SEASONS.SPRING",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: spring)"
    },
    "Constant:SCALEMODE_FIXEDSCREEN_NONDYNAMIC": {
        "prefix": "SCALEMODE_FIXEDSCREEN_NONDYNAMIC",
        "body": "SCALEMODE_FIXEDSCREEN_NONDYNAMIC",
        "description": "\n ※Description: scale same amount as window scaling from 1280x720\n ※Contributor: @lan (Value is: 4)"
    },
    "Constant:names.cookedmeat": {
        "prefix": "names.cookedmeat",
        "body": "names.cookedmeat",
        "description": "\n ※Description: Cooked Meat\n ※Contributor: @lan \n ※Details: \n\tmeat：1\n\t"
    },
    "Constant:TECH.YOTV": {
        "prefix": "TECH.YOTV",
        "body": "TECH.YOTV",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:FUELTYPE.MAGIC": {
        "prefix": "FUELTYPE.MAGIC",
        "body": "FUELTYPE.MAGIC",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: MAGIC)"
    },
    "Constant:GROUND.OCEAN_BRINEPOOL_SHORE": {
        "prefix": "GROUND.OCEAN_BRINEPOOL_SHORE",
        "body": "GROUND.OCEAN_BRINEPOOL_SHORE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 206)"
    },
    "Constant:WORMHOLETYPE": {
        "prefix": "WORMHOLETYPE",
        "body": "WORMHOLETYPE",
        "description": "\n ※Description: Which wormhole\n ※Contributor: @lan (Value is: table)"
    },
    "Constant:OCEAN_DEPTH.DEEP": {
        "prefix": "OCEAN_DEPTH.DEEP",
        "body": "OCEAN_DEPTH.DEEP",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 3)"
    },
    "Constant:names.oceanfish_small_7_inv": {
        "prefix": "names.oceanfish_small_7_inv",
        "body": "names.oceanfish_small_7_inv",
        "description": "\n ※Description: Bloomfin Tuna\n ※Contributor: @lan \n ※Details: \n\tmeat：0.5\n\tfish：0.5\n\t"
    },
    "Constant:TECH.SPIDERCRAFT_ONE": {
        "prefix": "TECH.SPIDERCRAFT_ONE",
        "body": "TECH.SPIDERCRAFT_ONE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:LEVELTYPE.ADVENTURE": {
        "prefix": "LEVELTYPE.ADVENTURE",
        "body": "LEVELTYPE.ADVENTURE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: ADVENTURE)"
    },
    "Constant:ANIM_SORT_ORDER.OCEAN_SKYSHADOWS": {
        "prefix": "ANIM_SORT_ORDER.OCEAN_SKYSHADOWS",
        "body": "ANIM_SORT_ORDER.OCEAN_SKYSHADOWS",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 4)"
    },
    "Constant:ROAD_PARAMETERS.MAX_WIDTH": {
        "prefix": "ROAD_PARAMETERS.MAX_WIDTH",
        "body": "ROAD_PARAMETERS.MAX_WIDTH",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 3)"
    },
    "Constant:BGCOLOURS.HALF": {
        "prefix": "BGCOLOURS.HALF",
        "body": "BGCOLOURS.HALF",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RGB(128, 128, 128 ))"
    },
    "Constant:names.barnacle_cooked": {
        "prefix": "names.barnacle_cooked",
        "body": "names.barnacle_cooked",
        "description": "\n ※Description: Cooked Barnacles\n ※Contributor: @lan \n ※Details: \n\tmeat：0.25\n\tfish：0.25\n\t"
    },
    "Constant:GROUND.FOREST": {
        "prefix": "GROUND.FOREST",
        "body": "GROUND.FOREST",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 7)"
    },
    "Constant:GROUND.QUAGMIRE_PEATFOREST": {
        "prefix": "GROUND.QUAGMIRE_PEATFOREST",
        "body": "GROUND.QUAGMIRE_PEATFOREST",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 35)"
    },
    "Constant:CONTROL_PREVVALUE": {
        "prefix": "CONTROL_PREVVALUE",
        "body": "CONTROL_PREVVALUE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 33)"
    },
    "Constant:GROUND.TRIM": {
        "prefix": "GROUND.TRIM",
        "body": "GROUND.TRIM",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 22)"
    },
    "Constant:BGCOLOURS.RED": {
        "prefix": "BGCOLOURS.RED",
        "body": "BGCOLOURS.RED",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RGB(255, 89,  46 ))"
    },
    "Constant:SCALEMODE_FIXEDPROPORTIONAL": {
        "prefix": "SCALEMODE_FIXEDPROPORTIONAL",
        "body": "SCALEMODE_FIXEDPROPORTIONAL",
        "description": "\n ※Description: same as SCALEMODE_FIXEDSCREEN_NONDYNAMIC, except for safe area on consoles\n ※Contributor: @lan (Value is: 3)"
    },
    "Constant:CONTROL_TOGGLE_SLASH_COMMAND": {
        "prefix": "CONTROL_TOGGLE_SLASH_COMMAND",
        "body": "CONTROL_TOGGLE_SLASH_COMMAND",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 65)"
    },
    "Constant:NAUGHTY_VALUE.crow": {
        "prefix": "NAUGHTY_VALUE.crow",
        "body": "NAUGHTY_VALUE.crow",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 1)"
    },
    "Constant:GROUND.CARPET": {
        "prefix": "GROUND.CARPET",
        "body": "GROUND.CARPET",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 11)"
    },
    "Constant:CONTROL_CRAFTING_PINRIGHT": {
        "prefix": "CONTROL_CRAFTING_PINRIGHT",
        "body": "CONTROL_CRAFTING_PINRIGHT",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 76)"
    },
    "Constant:GROUND.TRIM_GLOW": {
        "prefix": "GROUND.TRIM_GLOW",
        "body": "GROUND.TRIM_GLOW",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 23)"
    },
    "Constant:CONTROL_INV_11": {
        "prefix": "CONTROL_INV_11",
        "body": "CONTROL_INV_11",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 77)"
    },
    "Constant:MATERIALS.SALT": {
        "prefix": "MATERIALS.SALT",
        "body": "MATERIALS.SALT",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: salt)"
    },
    "Constant:TECH.YOTB": {
        "prefix": "TECH.YOTB",
        "body": "TECH.YOTB",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:FOODTYPE.WOOD": {
        "prefix": "FOODTYPE.WOOD",
        "body": "FOODTYPE.WOOD",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: WOOD)"
    },
    "Constant:GROUND.ABYSS_NOISE": {
        "prefix": "GROUND.ABYSS_NOISE",
        "body": "GROUND.ABYSS_NOISE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 124)"
    },
    "Constant:SCALEMODE_PROPORTIONAL": {
        "prefix": "SCALEMODE_PROPORTIONAL",
        "body": "SCALEMODE_PROPORTIONAL",
        "description": "\n ※Description: preserve aspect ratio (picks the smaller of horizontal/vertical scale)\n ※Contributor: @lan (Value is: 2)"
    },
    "Constant:ANIM_SORT_ORDER.OCEAN_UNDERWATER": {
        "prefix": "ANIM_SORT_ORDER.OCEAN_UNDERWATER",
        "body": "ANIM_SORT_ORDER.OCEAN_UNDERWATER",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 0)"
    },
    "Constant:TECH.YOTC": {
        "prefix": "TECH.YOTC",
        "body": "TECH.YOTC",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:TENDENCY": {
        "prefix": "TENDENCY",
        "body": "TENDENCY",
        "description": "\n ※Description: 驯化趋势\n ※Contributor: @lan (Value is: table)"
    },
    "Constant:FUELTYPE.LIGHTER": {
        "prefix": "FUELTYPE.LIGHTER",
        "body": "FUELTYPE.LIGHTER",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: LIGHTER)"
    },
    "Constant:GROUND.OCEAN_START": {
        "prefix": "GROUND.OCEAN_START",
        "body": "GROUND.OCEAN_START",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 201)"
    },
    "Constant:ANCHOR_MIDDLE": {
        "prefix": "ANCHOR_MIDDLE",
        "body": "ANCHOR_MIDDLE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 0)"
    },
    "Constant:TECH.HERMITCRABSHOP_THREE": {
        "prefix": "TECH.HERMITCRABSHOP_THREE",
        "body": "TECH.HERMITCRABSHOP_THREE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:CONTROL_CANCEL": {
        "prefix": "CONTROL_CANCEL",
        "body": "CONTROL_CANCEL",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 30)"
    },
    "Constant:DEPLOYSPACING.LARGE": {
        "prefix": "DEPLOYSPACING.LARGE",
        "body": "DEPLOYSPACING.LARGE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 5)"
    },
    "Constant:TECH.YOTD": {
        "prefix": "TECH.YOTD",
        "body": "TECH.YOTD",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:NAUGHTY_VALUE.catcoon": {
        "prefix": "NAUGHTY_VALUE.catcoon",
        "body": "NAUGHTY_VALUE.catcoon",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 5)"
    },
    "Constant:names.dragonfruit_cooked": {
        "prefix": "names.dragonfruit_cooked",
        "body": "names.dragonfruit_cooked",
        "description": "\n ※Description: Prepared Dragon Fruit\n ※Contributor: @lan \n ※Details: \n\tfruit：1\n\t"
    },
    "Constant:COLLISION.ITEMS": {
        "prefix": "COLLISION.ITEMS",
        "body": "COLLISION.ITEMS",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 256)"
    },
    "Constant:CONTROL_TARGET_CYCLE_BACK": {
        "prefix": "CONTROL_TARGET_CYCLE_BACK",
        "body": "CONTROL_TARGET_CYCLE_BACK",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 11)"
    },
    "Constant:CONTROL_ATTACK": {
        "prefix": "CONTROL_ATTACK",
        "body": "CONTROL_ATTACK",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 2)"
    },
    "Constant:GROUND.METEORMINE_NOISE": {
        "prefix": "GROUND.METEORMINE_NOISE",
        "body": "GROUND.METEORMINE_NOISE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 121)"
    },
    "Constant:SCALEMODE_FILLSCREEN": {
        "prefix": "SCALEMODE_FILLSCREEN",
        "body": "SCALEMODE_FILLSCREEN",
        "description": "\n ※Description: stretch art to fit/fill window\n ※Contributor: @lan (Value is: 1)"
    },
    "Constant:GROUND.MARSH": {
        "prefix": "GROUND.MARSH",
        "body": "GROUND.MARSH",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 8)"
    },
    "Constant:BLENDMODE.InverseAlpha": {
        "prefix": "BLENDMODE.InverseAlpha",
        "body": "BLENDMODE.InverseAlpha",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 4)"
    },
    "Constant:TECH": {
        "prefix": "TECH",
        "body": "TECH",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: table)"
    },
    "Constant:GROUND.QUAGMIRE_PARKFIELD": {
        "prefix": "GROUND.QUAGMIRE_PARKFIELD",
        "body": "GROUND.QUAGMIRE_PARKFIELD",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 36)"
    },
    "Constant:names.oceanfish_small_9_inv": {
        "prefix": "names.oceanfish_small_9_inv",
        "body": "names.oceanfish_small_9_inv",
        "description": "\n ※Description: Spittlefish\n ※Contributor: @lan \n ※Details: \n\tmeat：0.5\n\tfish：0.5\n\t"
    },
    "Constant:CONTROL_INVENTORY_DOWN": {
        "prefix": "CONTROL_INVENTORY_DOWN",
        "body": "CONTROL_INVENTORY_DOWN",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 50)"
    },
    "Constant:FACING_RIGHT": {
        "prefix": "FACING_RIGHT",
        "body": "FACING_RIGHT",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 0)"
    },
    "Constant:BLENDMODE.VFXTest": {
        "prefix": "BLENDMODE.VFXTest",
        "body": "BLENDMODE.VFXTest",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 6)"
    },
    "Constant:ANIM_SORT_ORDER.OCEAN_WHIRLPORTAL": {
        "prefix": "ANIM_SORT_ORDER.OCEAN_WHIRLPORTAL",
        "body": "ANIM_SORT_ORDER.OCEAN_WHIRLPORTAL",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 1)"
    },
    "Constant:CONTROL_MOVE_RIGHT": {
        "prefix": "CONTROL_MOVE_RIGHT",
        "body": "CONTROL_MOVE_RIGHT",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 8)"
    },
    "Constant:FUELTYPE.NIGHTMARE": {
        "prefix": "FUELTYPE.NIGHTMARE",
        "body": "FUELTYPE.NIGHTMARE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: NIGHTMARE)"
    },
    "Constant:DEPLOYMODE.PLANT": {
        "prefix": "DEPLOYMODE.PLANT",
        "body": "DEPLOYMODE.PLANT",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 4)"
    },
    "Constant:names.oceanfish_small_8_inv": {
        "prefix": "names.oceanfish_small_8_inv",
        "body": "names.oceanfish_small_8_inv",
        "description": "\n ※Description: Scorching Sunfish\n ※Contributor: @lan \n ※Details: \n\tmeat：0.5\n\tfish：0.5\n\t"
    },
    "Constant:CONTROL_TRADEITEM": {
        "prefix": "CONTROL_TRADEITEM",
        "body": "CONTROL_TRADEITEM",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 36)"
    },
    "Constant:TOOLACTIONS.REACH_HIGH": {
        "prefix": "TOOLACTIONS.REACH_HIGH",
        "body": "TOOLACTIONS.REACH_HIGH",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: true)"
    },
    "Constant:CONTROL_INV_13": {
        "prefix": "CONTROL_INV_13",
        "body": "CONTROL_INV_13",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 79)"
    },
    "Constant:NAUGHTY_VALUE.rabbit": {
        "prefix": "NAUGHTY_VALUE.rabbit",
        "body": "NAUGHTY_VALUE.rabbit",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 1)"
    },
    "Constant:NAUGHTY_VALUE.mole": {
        "prefix": "NAUGHTY_VALUE.mole",
        "body": "NAUGHTY_VALUE.mole",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 1)"
    },
    "Constant:ANIM_ORIENTATION.OnGroundFixed": {
        "prefix": "ANIM_ORIENTATION.OnGroundFixed",
        "body": "ANIM_ORIENTATION.OnGroundFixed",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 2)"
    },
    "Constant:UICOLOURS.IVORY": {
        "prefix": "UICOLOURS.IVORY",
        "body": "UICOLOURS.IVORY",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RGB(236, 232, 223, 1))"
    },
    "Constant:UICOLOURS.HIGHLIGHT_GOLD": {
        "prefix": "UICOLOURS.HIGHLIGHT_GOLD",
        "body": "UICOLOURS.HIGHLIGHT_GOLD",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RGB(243, 217, 161))"
    },
    "Constant:TECH.SCIENCE_THREE": {
        "prefix": "TECH.SCIENCE_THREE",
        "body": "TECH.SCIENCE_THREE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:TENDENCY.PUDGY": {
        "prefix": "TENDENCY.PUDGY",
        "body": "TENDENCY.PUDGY",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: PUDGY)"
    },
    "Constant:names.trunk_winter": {
        "prefix": "names.trunk_winter",
        "body": "names.trunk_winter",
        "description": "\n ※Description: Winter Koalefant Trunk\n ※Contributor: @lan \n ※Details: \n\tmeat：1\n\t"
    },
    "Constant:names.forgetmelots": {
        "prefix": "names.forgetmelots",
        "body": "names.forgetmelots",
        "description": "\n ※Description: Forget-Me-Lots\n ※Contributor: @lan \n ※Details: \n\tdecoration：1\n\t"
    },
    "Constant:BLENDMODE.Additive": {
        "prefix": "BLENDMODE.Additive",
        "body": "BLENDMODE.Additive",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 2)"
    },
    "Constant:MATERIALS.HAY": {
        "prefix": "MATERIALS.HAY",
        "body": "MATERIALS.HAY",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: hay)"
    },
    "Constant:WEBCOLOURS.ORANGE": {
        "prefix": "WEBCOLOURS.ORANGE",
        "body": "WEBCOLOURS.ORANGE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RGB(255, 165, 0))"
    },
    "Constant:GROUND.CAVE_NOISE": {
        "prefix": "GROUND.CAVE_NOISE",
        "body": "GROUND.CAVE_NOISE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 126)"
    },
    "Constant:BUILDMODE.WATER": {
        "prefix": "BUILDMODE.WATER",
        "body": "BUILDMODE.WATER",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 2)"
    },
    "Constant:names.barnacle": {
        "prefix": "names.barnacle",
        "body": "names.barnacle",
        "description": "\n ※Description: Barnacles\n ※Contributor: @lan \n ※Details: \n\tmeat：0.25\n\tfish：0.25\n\t"
    },
    "Constant:MOVE_LEFT": {
        "prefix": "MOVE_LEFT",
        "body": "MOVE_LEFT",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 3)"
    },
    "Constant:EQUIPSLOTS.HANDS": {
        "prefix": "EQUIPSLOTS.HANDS",
        "body": "EQUIPSLOTS.HANDS",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: hands)"
    },
    "Constant:CHARACTER_INGREDIENT.MAX_HEALTH": {
        "prefix": "CHARACTER_INGREDIENT.MAX_HEALTH",
        "body": "CHARACTER_INGREDIENT.MAX_HEALTH",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: half_health)"
    },
    "Constant:BLENDMODE.AlphaBlended": {
        "prefix": "BLENDMODE.AlphaBlended",
        "body": "BLENDMODE.AlphaBlended",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 1)"
    },
    "Constant:GROUND.OCEAN_END": {
        "prefix": "GROUND.OCEAN_END",
        "body": "GROUND.OCEAN_END",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 247)"
    },
    "Constant:names.potato_cooked": {
        "prefix": "names.potato_cooked",
        "body": "names.potato_cooked",
        "description": "\n ※Description: Roasted Potato\n ※Contributor: @lan \n ※Details: \n\tveggie：1\n\t"
    },
    "Constant:CONTROL_MENU_MISC_1": {
        "prefix": "CONTROL_MENU_MISC_1",
        "body": "CONTROL_MENU_MISC_1",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 68)"
    },
    "Constant:TECH.ANCIENT_FOUR": {
        "prefix": "TECH.ANCIENT_FOUR",
        "body": "TECH.ANCIENT_FOUR",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:CONTROL_FORCE_ATTACK": {
        "prefix": "CONTROL_FORCE_ATTACK",
        "body": "CONTROL_FORCE_ATTACK",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 39)"
    },
    "Constant:GROUND.GROUND_NOISE": {
        "prefix": "GROUND.GROUND_NOISE",
        "body": "GROUND.GROUND_NOISE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 125)"
    },
    "Constant:BGCOLOURS.YELLOW": {
        "prefix": "BGCOLOURS.YELLOW",
        "body": "BGCOLOURS.YELLOW",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RGB(255, 196, 45 ))"
    },
    "Constant:CONTROL_PAUSE": {
        "prefix": "CONTROL_PAUSE",
        "body": "CONTROL_PAUSE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 13)"
    },
    "Constant:names.durian": {
        "prefix": "names.durian",
        "body": "names.durian",
        "description": "\n ※Description: Durian\n ※Contributor: @lan \n ※Details: \n\tmonster：1\n\tfruit：1\n\t"
    },
    "Constant:NODE_TYPE.Blank": {
        "prefix": "NODE_TYPE.Blank",
        "body": "NODE_TYPE.Blank",
        "description": "\n ※Description: empty room with impassable ground\n ※Contributor: @lan (Value is: 1)"
    },
    "Constant:DEPLOYMODE.DEFAULT": {
        "prefix": "DEPLOYMODE.DEFAULT",
        "body": "DEPLOYMODE.DEFAULT",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 1)"
    },
    "Constant:TECH.MADSCIENCE_ONE": {
        "prefix": "TECH.MADSCIENCE_ONE",
        "body": "TECH.MADSCIENCE_ONE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:names.corn": {
        "prefix": "names.corn",
        "body": "names.corn",
        "description": "\n ※Description: Corn\n ※Contributor: @lan \n ※Details: \n\tveggie：1\n\t"
    },
    "Constant:names.pomegranate_cooked": {
        "prefix": "names.pomegranate_cooked",
        "body": "names.pomegranate_cooked",
        "description": "\n ※Description: Sliced Pomegranate\n ※Contributor: @lan \n ※Details: \n\tfruit：1\n\t"
    },
    "Constant:CONTROL_INV_7": {
        "prefix": "CONTROL_INV_7",
        "body": "CONTROL_INV_7",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 21)"
    },
    "Constant:GROUND.WALL_DIRT": {
        "prefix": "GROUND.WALL_DIRT",
        "body": "GROUND.WALL_DIRT",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 152)"
    },
    "Constant:MOUSEBUTTON_RIGHT": {
        "prefix": "MOUSEBUTTON_RIGHT",
        "body": "MOUSEBUTTON_RIGHT",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 1001)"
    },
    "Constant:CAMERASHAKE.VERTICAL": {
        "prefix": "CAMERASHAKE.VERTICAL",
        "body": "CAMERASHAKE.VERTICAL",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 2)"
    },
    "Constant:OCEAN_DEPTH.SHALLOW": {
        "prefix": "OCEAN_DEPTH.SHALLOW",
        "body": "OCEAN_DEPTH.SHALLOW",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 1)"
    },
    "Constant:UICOLOURS.GOLD": {
        "prefix": "UICOLOURS.GOLD",
        "body": "UICOLOURS.GOLD",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: GOLD)"
    },
    "Constant:TECH.MOON_ALTAR_TWO": {
        "prefix": "TECH.MOON_ALTAR_TWO",
        "body": "TECH.MOON_ALTAR_TWO",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:GROUND.WALL_STONEEYE": {
        "prefix": "GROUND.WALL_STONEEYE",
        "body": "GROUND.WALL_STONEEYE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 162)"
    },
    "Constant:TECH.RABBITOFFERING_THREE": {
        "prefix": "TECH.RABBITOFFERING_THREE",
        "body": "TECH.RABBITOFFERING_THREE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:GROUND.ARCHIVE": {
        "prefix": "GROUND.ARCHIVE",
        "body": "GROUND.ARCHIVE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 45)"
    },
    "Constant:EQUIPSLOTS.BEARD": {
        "prefix": "EQUIPSLOTS.BEARD",
        "body": "EQUIPSLOTS.BEARD",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: beard)"
    },
    "Constant:GROUND.WALL_TOP": {
        "prefix": "GROUND.WALL_TOP",
        "body": "GROUND.WALL_TOP",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 158)"
    },
    "Constant:TECH.ORPHANAGE_ONE": {
        "prefix": "TECH.ORPHANAGE_ONE",
        "body": "TECH.ORPHANAGE_ONE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:names.refined_dust": {
        "prefix": "names.refined_dust",
        "body": "names.refined_dust",
        "description": "\n ※Description: Collected Dust\n ※Contributor: @lan \n ※Details: \n\tdecoration：2\n\t"
    },
    "Constant:ROAD_PARAMETERS": {
        "prefix": "ROAD_PARAMETERS",
        "body": "ROAD_PARAMETERS",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: table)"
    },
    "Constant:MATERIALS": {
        "prefix": "MATERIALS",
        "body": "MATERIALS",
        "description": "\n ※Description: Extended for DST\n ※Contributor: @lan (Value is: table)"
    },
    "Constant:names.kelp_dried": {
        "prefix": "names.kelp_dried",
        "body": "names.kelp_dried",
        "description": "\n ※Description: Dried Kelp Fronds\n ※Contributor: @lan \n ※Details: \n\tveggie：0.5\n\t"
    },
    "Constant:WEBCOLOURS.PURPLE": {
        "prefix": "WEBCOLOURS.PURPLE",
        "body": "WEBCOLOURS.PURPLE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RGB(128, 0, 128))"
    },
    "Constant:CAMERASHAKE.FULL": {
        "prefix": "CAMERASHAKE.FULL",
        "body": "CAMERASHAKE.FULL",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 0)"
    },
    "Constant:BUILDMODE.LAND": {
        "prefix": "BUILDMODE.LAND",
        "body": "BUILDMODE.LAND",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 1)"
    },
    "Constant:GROUND.UNDERROCK": {
        "prefix": "GROUND.UNDERROCK",
        "body": "GROUND.UNDERROCK",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 16)"
    },
    "Constant:WEBCOLOURS.TAN": {
        "prefix": "WEBCOLOURS.TAN",
        "body": "WEBCOLOURS.TAN",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RGB(210, 180, 140))"
    },
    "Constant:HOUNDWARNINGTYPE.LVL1_WORM": {
        "prefix": "HOUNDWARNINGTYPE.LVL1_WORM",
        "body": "HOUNDWARNINGTYPE.LVL1_WORM",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 4)"
    },
    "Constant:TECH.PERDOFFERING_THREE": {
        "prefix": "TECH.PERDOFFERING_THREE",
        "body": "TECH.PERDOFFERING_THREE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:ANIM_SORT_ORDER_BELOW_GROUND.UNDERWATER": {
        "prefix": "ANIM_SORT_ORDER_BELOW_GROUND.UNDERWATER",
        "body": "ANIM_SORT_ORDER_BELOW_GROUND.UNDERWATER",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 0)"
    },
    "Constant:TECH.SHADOWFORGING_TWO": {
        "prefix": "TECH.SHADOWFORGING_TWO",
        "body": "TECH.SHADOWFORGING_TWO",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:DEPLOYMODE.CUSTOM": {
        "prefix": "DEPLOYMODE.CUSTOM",
        "body": "DEPLOYMODE.CUSTOM",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 7)"
    },
    "Constant:NODE_TYPE.Random": {
        "prefix": "NODE_TYPE.Random",
        "body": "NODE_TYPE.Random",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 3)"
    },
    "Constant:ROAD_PARAMETERS.NUM_SUBDIVISIONS_PER_SEGMENT": {
        "prefix": "ROAD_PARAMETERS.NUM_SUBDIVISIONS_PER_SEGMENT",
        "body": "ROAD_PARAMETERS.NUM_SUBDIVISIONS_PER_SEGMENT",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 50)"
    },
    "Constant:names.cactus_meat_cooked": {
        "prefix": "names.cactus_meat_cooked",
        "body": "names.cactus_meat_cooked",
        "description": "\n ※Description: Cooked Cactus Flesh\n ※Contributor: @lan \n ※Details: \n\tveggie：1\n\t"
    },
    "Constant:OCEAN_DEPTH.NORMAL": {
        "prefix": "OCEAN_DEPTH.NORMAL",
        "body": "OCEAN_DEPTH.NORMAL",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 2)"
    },
    "Constant:NODE_TYPE.Default": {
        "prefix": "NODE_TYPE.Default",
        "body": "NODE_TYPE.Default",
        "description": "\n ※Description: Land can touch any other Default node in the task that is within range\n ※Contributor: @lan (Value is: 0)"
    },
    "Constant:TECH.BOOKCRAFT_ONE": {
        "prefix": "TECH.BOOKCRAFT_ONE",
        "body": "TECH.BOOKCRAFT_ONE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:GROUND.METEORCOAST_NOISE": {
        "prefix": "GROUND.METEORCOAST_NOISE",
        "body": "GROUND.METEORCOAST_NOISE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 122)"
    },
    "Constant:CONTROL_MAP_ZOOM_OUT": {
        "prefix": "CONTROL_MAP_ZOOM_OUT",
        "body": "CONTROL_MAP_ZOOM_OUT",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 61)"
    },
    "Constant:UICOLOURS.BLACK": {
        "prefix": "UICOLOURS.BLACK",
        "body": "UICOLOURS.BLACK",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: BLACK)"
    },
    "Constant:ANIM_SORT_ORDER.OCEAN_BOAT_BUMPERS": {
        "prefix": "ANIM_SORT_ORDER.OCEAN_BOAT_BUMPERS",
        "body": "ANIM_SORT_ORDER.OCEAN_BOAT_BUMPERS",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 3)"
    },
    "Constant:ITEMTAG.FUEL": {
        "prefix": "ITEMTAG.FUEL",
        "body": "ITEMTAG.FUEL",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: fuel)"
    },
    "Constant:WEBCOLOURS.LAVENDER": {
        "prefix": "WEBCOLOURS.LAVENDER",
        "body": "WEBCOLOURS.LAVENDER",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RGB(230, 230, 250))"
    },
    "Constant:BLENDMODE.Disabled": {
        "prefix": "BLENDMODE.Disabled",
        "body": "BLENDMODE.Disabled",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 0)"
    },
    "Constant:WEBCOLOURS.CRIMSON": {
        "prefix": "WEBCOLOURS.CRIMSON",
        "body": "WEBCOLOURS.CRIMSON",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RGB(220, 20, 60))"
    },
    "Constant:NODE_TYPE": {
        "prefix": "NODE_TYPE",
        "body": "NODE_TYPE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: table)"
    },
    "Constant:TOOLACTIONS.DIG": {
        "prefix": "TOOLACTIONS.DIG",
        "body": "TOOLACTIONS.DIG",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: true)"
    },
    "Constant:TECH.ROBOTMODULECRAFT_ONE": {
        "prefix": "TECH.ROBOTMODULECRAFT_ONE",
        "body": "TECH.ROBOTMODULECRAFT_ONE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:names.pondfish": {
        "prefix": "names.pondfish",
        "body": "names.pondfish",
        "description": "\n ※Description: Freshwater Fish\n ※Contributor: @lan \n ※Details: \n\tmeat：0.5\n\tfish：0.5\n\t"
    },
    "Constant:COLLISION.SANITY": {
        "prefix": "COLLISION.SANITY",
        "body": "COLLISION.SANITY",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 4096)"
    },
    "Constant:GROUND.FUNGUSGREEN": {
        "prefix": "GROUND.FUNGUSGREEN",
        "body": "GROUND.FUNGUSGREEN",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 25)"
    },
    "Constant:FUELTYPE.WORMLIGHT": {
        "prefix": "FUELTYPE.WORMLIGHT",
        "body": "FUELTYPE.WORMLIGHT",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: WORMLIGHT)"
    },
    "Constant:CONTROL_MENU_MISC_2": {
        "prefix": "CONTROL_MENU_MISC_2",
        "body": "CONTROL_MENU_MISC_2",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 69)"
    },
    "Constant:names.ice": {
        "prefix": "names.ice",
        "body": "names.ice",
        "description": "\n ※Description: Ice\n ※Contributor: @lan \n ※Details: \n\tice：1\n\t"
    },
    "Constant:names.watermelon": {
        "prefix": "names.watermelon",
        "body": "names.watermelon",
        "description": "\n ※Description: Watermelon\n ※Contributor: @lan \n ※Details: \n\tfruit：1\n\t"
    },
    "Constant:COLLISION.WORLD": {
        "prefix": "COLLISION.WORLD",
        "body": "COLLISION.WORLD",
        "description": "\n ※Description: BOAT_LIMITS + LAND_OCEAN_LIMITS + GROUND\n ※Contributor: @lan (Value is: 128 + 64 + 32)"
    },
    "Constant:FOODTYPE.RAW": {
        "prefix": "FOODTYPE.RAW",
        "body": "FOODTYPE.RAW",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RAW)"
    },
    "Constant:NAUGHTY_VALUE.tallbird": {
        "prefix": "NAUGHTY_VALUE.tallbird",
        "body": "NAUGHTY_VALUE.tallbird",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 2)"
    },
    "Constant:RATE_SCALE.DECREASE_MED": {
        "prefix": "RATE_SCALE.DECREASE_MED",
        "body": "RATE_SCALE.DECREASE_MED",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 5)"
    },
    "Constant:RATE_SCALE.INCREASE_HIGH": {
        "prefix": "RATE_SCALE.INCREASE_HIGH",
        "body": "RATE_SCALE.INCREASE_HIGH",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 1)"
    },
    "Constant:GROUND.QUAGMIRE_CITYSTONE": {
        "prefix": "GROUND.QUAGMIRE_CITYSTONE",
        "body": "GROUND.QUAGMIRE_CITYSTONE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 41)"
    },
    "Constant:GROUND.BRICK_GLOW": {
        "prefix": "GROUND.BRICK_GLOW",
        "body": "GROUND.BRICK_GLOW",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 19)"
    },
    "Constant:WEBCOLOURS.SPRINGGREEN": {
        "prefix": "WEBCOLOURS.SPRINGGREEN",
        "body": "WEBCOLOURS.SPRINGGREEN",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RGB( 0, 255, 127))"
    },
    "Constant:LEVELTYPE.CUSTOM": {
        "prefix": "LEVELTYPE.CUSTOM",
        "body": "LEVELTYPE.CUSTOM",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: CUSTOM)"
    },
    "Constant:OCEAN_DEPTH.VERY_DEEP": {
        "prefix": "OCEAN_DEPTH.VERY_DEEP",
        "body": "OCEAN_DEPTH.VERY_DEEP",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 4)"
    },
    "Constant:names.corn_cooked": {
        "prefix": "names.corn_cooked",
        "body": "names.corn_cooked",
        "description": "\n ※Description: Popcorn\n ※Contributor: @lan \n ※Details: \n\tveggie：1\n\t"
    },
    "Constant:FOODTYPE.MONSTER": {
        "prefix": "FOODTYPE.MONSTER",
        "body": "FOODTYPE.MONSTER",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: MONSTER)"
    },
    "Constant:GROUND.WALL_SINKHOLE": {
        "prefix": "GROUND.WALL_SINKHOLE",
        "body": "GROUND.WALL_SINKHOLE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 156)"
    },
    "Constant:BUILDMODE.NONE": {
        "prefix": "BUILDMODE.NONE",
        "body": "BUILDMODE.NONE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 0)"
    },
    "Constant:names.watermelon_cooked": {
        "prefix": "names.watermelon_cooked",
        "body": "names.watermelon_cooked",
        "description": "\n ※Description: Grilled Watermelon\n ※Contributor: @lan \n ※Details: \n\tfruit：1\n\t"
    },
    "Constant:CONTROL_INV_14": {
        "prefix": "CONTROL_INV_14",
        "body": "CONTROL_INV_14",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 80)"
    },
    "Constant:names.ancientfruit_nightvision_cooked": {
        "prefix": "names.ancientfruit_nightvision_cooked",
        "body": "names.ancientfruit_nightvision_cooked",
        "description": "\n ※Description: Cooked Nightberry\n ※Contributor: @lan \n ※Details: \n\tfruit：1\n\t"
    },
    "Constant:GROUND.OCEAN_ROUGH": {
        "prefix": "GROUND.OCEAN_ROUGH",
        "body": "GROUND.OCEAN_ROUGH",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 204)"
    },
    "Constant:CONTROL_FOCUS_LEFT": {
        "prefix": "CONTROL_FOCUS_LEFT",
        "body": "CONTROL_FOCUS_LEFT",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 27)"
    },
    "Constant:FOODTYPE.GEARS": {
        "prefix": "FOODTYPE.GEARS",
        "body": "FOODTYPE.GEARS",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: GEARS)"
    },
    "Constant:GROUND.QUAGMIRE_PARKSTONE": {
        "prefix": "GROUND.QUAGMIRE_PARKSTONE",
        "body": "GROUND.QUAGMIRE_PARKSTONE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 37)"
    },
    "Constant:COLLISION.LAND_OCEAN_LIMITS": {
        "prefix": "COLLISION.LAND_OCEAN_LIMITS",
        "body": "COLLISION.LAND_OCEAN_LIMITS",
        "description": "\n ※Description: physics wall between water and land\n ※Contributor: @lan (Value is: 128)"
    },
    "Constant:WEBCOLOURS.DARKRED": {
        "prefix": "WEBCOLOURS.DARKRED",
        "body": "WEBCOLOURS.DARKRED",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RGB(139, 0, 0))"
    },
    "Constant:GROUND.SHELLBEACH": {
        "prefix": "GROUND.SHELLBEACH",
        "body": "GROUND.SHELLBEACH",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 44)"
    },
    "Constant:names.plantmeat_cooked": {
        "prefix": "names.plantmeat_cooked",
        "body": "names.plantmeat_cooked",
        "description": "\n ※Description: Cooked Leafy Meat\n ※Contributor: @lan \n ※Details: \n\tmeat：1\n\t"
    },
    "Constant:TOOLACTIONS.NET": {
        "prefix": "TOOLACTIONS.NET",
        "body": "TOOLACTIONS.NET",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: true)"
    },
    "Constant:MOVE_DOWN": {
        "prefix": "MOVE_DOWN",
        "body": "MOVE_DOWN",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 2)"
    },
    "Constant:UICOLOURS.BRONZE": {
        "prefix": "UICOLOURS.BRONZE",
        "body": "UICOLOURS.BRONZE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RGB(180, 116, 36, 1))"
    },
    "Constant:ANCHOR_LEFT": {
        "prefix": "ANCHOR_LEFT",
        "body": "ANCHOR_LEFT",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 1)"
    },
    "Constant:GROUND.ROCKY": {
        "prefix": "GROUND.ROCKY",
        "body": "GROUND.ROCKY",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 3)"
    },
    "Constant:UICOLOURS.GOLD_UNIMPORTANT": {
        "prefix": "UICOLOURS.GOLD_UNIMPORTANT",
        "body": "UICOLOURS.GOLD_UNIMPORTANT",
        "description": "\n ※Description: non-interactive non-important text\n ※Contributor: @lan (Value is: RGB(213, 213, 203))"
    },
    "Constant:GROUND.FUNGUS_NOISE": {
        "prefix": "GROUND.FUNGUS_NOISE",
        "body": "GROUND.FUNGUS_NOISE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 127)"
    },
    "Constant:GROUND.INVALID": {
        "prefix": "GROUND.INVALID",
        "body": "GROUND.INVALID",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 65535)"
    },
    "Constant:FUELTYPE": {
        "prefix": "FUELTYPE",
        "body": "FUELTYPE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: table)"
    },
    "Constant:CONTROL_INV_2": {
        "prefix": "CONTROL_INV_2",
        "body": "CONTROL_INV_2",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 16)"
    },
    "Constant:WEBCOLOURS.BURLYWOOD": {
        "prefix": "WEBCOLOURS.BURLYWOOD",
        "body": "WEBCOLOURS.BURLYWOOD",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RGB(222, 184, 135))"
    },
    "Constant:FOODTYPE.INSECT": {
        "prefix": "FOODTYPE.INSECT",
        "body": "FOODTYPE.INSECT",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: INSECT)"
    },
    "Constant:TOOLACTIONS": {
        "prefix": "TOOLACTIONS",
        "body": "TOOLACTIONS",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: table)"
    },
    "Constant:names.berries_juicy": {
        "prefix": "names.berries_juicy",
        "body": "names.berries_juicy",
        "description": "\n ※Description: Juicy Berries\n ※Contributor: @lan \n ※Details: \n\tfruit：0.5\n\t"
    },
    "Constant:CONTROL_FOCUS_UP": {
        "prefix": "CONTROL_FOCUS_UP",
        "body": "CONTROL_FOCUS_UP",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 25)"
    },
    "Constant:names.wormlight_lesser": {
        "prefix": "names.wormlight_lesser",
        "body": "names.wormlight_lesser",
        "description": "\n ※Description: Lesser Glow Berry\n ※Contributor: @lan \n ※Details: \n\tfruit：0.5\n\t"
    },
    "Constant:names.wormlight": {
        "prefix": "names.wormlight",
        "body": "names.wormlight",
        "description": "\n ※Description: Glow Berry\n ※Contributor: @lan \n ※Details: \n\tfruit：1\n\t"
    },
    "Constant:CONTROL_OPEN_DEBUG_MENU": {
        "prefix": "CONTROL_OPEN_DEBUG_MENU",
        "body": "CONTROL_OPEN_DEBUG_MENU",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 70)"
    },
    "Constant:GROUND": {
        "prefix": "GROUND",
        "body": "GROUND",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: table)"
    },
    "Constant:names.batwing": {
        "prefix": "names.batwing",
        "body": "names.batwing",
        "description": "\n ※Description: Batilisk Wing\n ※Contributor: @lan \n ※Details: \n\tmeat：0.5\n\t"
    },
    "Constant:HOUNDWARNINGTYPE": {
        "prefix": "HOUNDWARNINGTYPE",
        "body": "HOUNDWARNINGTYPE",
        "description": "\n ※Description: Houndwarning level\n ※Contributor: @lan (Value is: table)"
    },
    "Constant:TECH.SHADOW_TWO": {
        "prefix": "TECH.SHADOW_TWO",
        "body": "TECH.SHADOW_TWO",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:LEVELTYPE.SURVIVAL": {
        "prefix": "LEVELTYPE.SURVIVAL",
        "body": "LEVELTYPE.SURVIVAL",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: SURVIVAL)"
    },
    "Constant:CONTROL_INV_3": {
        "prefix": "CONTROL_INV_3",
        "body": "CONTROL_INV_3",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 17)"
    },
    "Constant:CONTROL_INV_9": {
        "prefix": "CONTROL_INV_9",
        "body": "CONTROL_INV_9",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 23)"
    },
    "Constant:MOVE_UP": {
        "prefix": "MOVE_UP",
        "body": "MOVE_UP",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 1)"
    },
    "Constant:names.twigs": {
        "prefix": "names.twigs",
        "body": "names.twigs",
        "description": "\n ※Description: Twigs\n ※Contributor: @lan \n ※Details: \n\tinedible：1\n\t"
    },
    "Constant:names.trunk_cooked": {
        "prefix": "names.trunk_cooked",
        "body": "names.trunk_cooked",
        "description": "\n ※Description: Koalefant Trunk Steak\n ※Contributor: @lan \n ※Details: \n\tmeat：1\n\t"
    },
    "Constant:CONTROL_INSPECT_SELF": {
        "prefix": "CONTROL_INSPECT_SELF",
        "body": "CONTROL_INSPECT_SELF",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 72)"
    },
    "Constant:names.tomato": {
        "prefix": "names.tomato",
        "body": "names.tomato",
        "description": "\n ※Description: Toma Root\n ※Contributor: @lan \n ※Details: \n\tveggie：1\n\t"
    },
    "Constant:names.tallbirdegg_cooked": {
        "prefix": "names.tallbirdegg_cooked",
        "body": "names.tallbirdegg_cooked",
        "description": "\n ※Description: Fried Tallbird Egg\n ※Contributor: @lan \n ※Details: \n\tegg：4\n\t"
    },
    "Constant:names.cactus_meat": {
        "prefix": "names.cactus_meat",
        "body": "names.cactus_meat",
        "description": "\n ※Description: Cactus Flesh\n ※Contributor: @lan \n ※Details: \n\tveggie：1\n\t"
    },
    "Constant:names.tallbirdegg": {
        "prefix": "names.tallbirdegg",
        "body": "names.tallbirdegg",
        "description": "\n ※Description: Tallbird Egg\n ※Contributor: @lan \n ※Details: \n\tegg：4\n\t"
    },
    "Constant:GROUND.OCEAN_HAZARDOUS": {
        "prefix": "GROUND.OCEAN_HAZARDOUS",
        "body": "GROUND.OCEAN_HAZARDOUS",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 207)"
    },
    "Constant:MATERIALS.MOON_ALTAR": {
        "prefix": "MATERIALS.MOON_ALTAR",
        "body": "MATERIALS.MOON_ALTAR",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: moon_altar)"
    },
    "Constant:names.smallmeat_dried": {
        "prefix": "names.smallmeat_dried",
        "body": "names.smallmeat_dried",
        "description": "\n ※Description: Small Jerky\n ※Contributor: @lan \n ※Details: \n\tmeat：0.5\n\t"
    },
    "Constant:CONTROL_MENU_R2": {
        "prefix": "CONTROL_MENU_R2",
        "body": "CONTROL_MENU_R2",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 86)"
    },
    "Constant:LEVELTYPE": {
        "prefix": "LEVELTYPE",
        "body": "LEVELTYPE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: table)"
    },
    "Constant:names.royal_jelly": {
        "prefix": "names.royal_jelly",
        "body": "names.royal_jelly",
        "description": "\n ※Description: Royal Jelly\n ※Contributor: @lan \n ※Details: \n\tsweetener：3\n\t"
    },
    "Constant:DEPLOYMODE.WALL": {
        "prefix": "DEPLOYMODE.WALL",
        "body": "DEPLOYMODE.WALL",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 5)"
    },
    "Constant:TECH.CARRATOFFERING_THREE": {
        "prefix": "TECH.CARRATOFFERING_THREE",
        "body": "TECH.CARRATOFFERING_THREE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:names.rock_avocado_fruit_ripe": {
        "prefix": "names.rock_avocado_fruit_ripe",
        "body": "names.rock_avocado_fruit_ripe",
        "description": "\n ※Description: Ripe Stone Fruit\n ※Contributor: @lan \n ※Details: \n\tveggie：1\n\t"
    },
    "Constant:names.red_cap_cooked": {
        "prefix": "names.red_cap_cooked",
        "body": "names.red_cap_cooked",
        "description": "\n ※Description: Cooked Red Cap\n ※Contributor: @lan \n ※Details: \n\tveggie：0.5\n\t"
    },
    "Constant:TECH.MAGIC_TWO": {
        "prefix": "TECH.MAGIC_TWO",
        "body": "TECH.MAGIC_TWO",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:TECH.YOTG": {
        "prefix": "TECH.YOTG",
        "body": "TECH.YOTG",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:TECH.MAGIC_THREE": {
        "prefix": "TECH.MAGIC_THREE",
        "body": "TECH.MAGIC_THREE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:names.pumpkin_cooked": {
        "prefix": "names.pumpkin_cooked",
        "body": "names.pumpkin_cooked",
        "description": "\n ※Description: Hot Pumpkin\n ※Contributor: @lan \n ※Details: \n\tveggie：1\n\t"
    },
    "Constant:GROUND.GRASS": {
        "prefix": "GROUND.GRASS",
        "body": "GROUND.GRASS",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 6)"
    },
    "Constant:MATERIALS.KELP": {
        "prefix": "MATERIALS.KELP",
        "body": "MATERIALS.KELP",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: kelp)"
    },
    "Constant:names.pumpkin": {
        "prefix": "names.pumpkin",
        "body": "names.pumpkin",
        "description": "\n ※Description: Pumpkin\n ※Contributor: @lan \n ※Details: \n\tveggie：1\n\t"
    },
    "Constant:names.potato": {
        "prefix": "names.potato",
        "body": "names.potato",
        "description": "\n ※Description: Potato\n ※Contributor: @lan \n ※Details: \n\tveggie：1\n\t"
    },
    "Constant:CONTROL_PUTSTACK": {
        "prefix": "CONTROL_PUTSTACK",
        "body": "CONTROL_PUTSTACK",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 55)"
    },
    "Constant:names.pondeel": {
        "prefix": "names.pondeel",
        "body": "names.pondeel",
        "description": "\n ※Description: Live Eel\n ※Contributor: @lan \n ※Details: \n\tmeat：0.5\n\tfish：1\n\t"
    },
    "Constant:COLLISION.CHARACTERS": {
        "prefix": "COLLISION.CHARACTERS",
        "body": "COLLISION.CHARACTERS",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 1024)"
    },
    "Constant:CHARACTER_INGREDIENT.HEALTH": {
        "prefix": "CHARACTER_INGREDIENT.HEALTH",
        "body": "CHARACTER_INGREDIENT.HEALTH",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: decrease_health)"
    },
    "Constant:names.pomegranate": {
        "prefix": "names.pomegranate",
        "body": "names.pomegranate",
        "description": "\n ※Description: Pomegranate\n ※Contributor: @lan \n ※Details: \n\tfruit：1\n\t"
    },
    "Constant:names.plantmeat": {
        "prefix": "names.plantmeat",
        "body": "names.plantmeat",
        "description": "\n ※Description: Leafy Meat\n ※Contributor: @lan \n ※Details: \n\tmeat：1\n\t"
    },
    "Constant:names.pepper": {
        "prefix": "names.pepper",
        "body": "names.pepper",
        "description": "\n ※Description: Pepper\n ※Contributor: @lan \n ※Details: \n\tveggie：1\n\t"
    },
    "Constant:NODE_TYPE.Blocker": {
        "prefix": "NODE_TYPE.Blocker",
        "body": "NODE_TYPE.Blocker",
        "description": "\n ※Description: Adds 2 Blank nodes beside it\n ※Contributor: @lan (Value is: 4)"
    },
    "Constant:names.bird_egg": {
        "prefix": "names.bird_egg",
        "body": "names.bird_egg",
        "description": "\n ※Description: Egg\n ※Contributor: @lan \n ※Details: \n\tegg：1\n\t"
    },
    "Constant:GROUND.DIRT_NOISE": {
        "prefix": "GROUND.DIRT_NOISE",
        "body": "GROUND.DIRT_NOISE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 123)"
    },
    "Constant:names.onion": {
        "prefix": "names.onion",
        "body": "names.onion",
        "description": "\n ※Description: Onion\n ※Contributor: @lan \n ※Details: \n\tveggie：1\n\t"
    },
    "Constant:names.oceanfish_small_6_inv": {
        "prefix": "names.oceanfish_small_6_inv",
        "body": "names.oceanfish_small_6_inv",
        "description": "\n ※Description: Fallounder\n ※Contributor: @lan \n ※Details: \n\tmeat：0.5\n\tfish：0.5\n\t"
    },
    "Constant:names.oceanfish_small_5_inv": {
        "prefix": "names.oceanfish_small_5_inv",
        "body": "names.oceanfish_small_5_inv",
        "description": "\n ※Description: Popperfish\n ※Contributor: @lan \n ※Details: \n\tveggie：1\n\t"
    },
    "Constant:names.oceanfish_small_2_inv": {
        "prefix": "names.oceanfish_small_2_inv",
        "body": "names.oceanfish_small_2_inv",
        "description": "\n ※Description: Needlenosed Squirt\n ※Contributor: @lan \n ※Details: \n\tmeat：0.5\n\tfish：0.5\n\t"
    },
    "Constant:OCEAN_DEPTH": {
        "prefix": "OCEAN_DEPTH",
        "body": "OCEAN_DEPTH",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: table)"
    },
    "Constant:names.milkywhites": {
        "prefix": "names.milkywhites",
        "body": "names.milkywhites",
        "description": "\n ※Description: Milky Whites\n ※Contributor: @lan \n ※Details: \n\tdairy: 1\n\t"
    },
    "Constant:names.oceanfish_small_3_inv": {
        "prefix": "names.oceanfish_small_3_inv",
        "body": "names.oceanfish_small_3_inv",
        "description": "\n ※Description: Bitty Baitfish\n ※Contributor: @lan \n ※Details: \n\tmeat：0.5\n\tfish：0.5\n\t"
    },
    "Constant:names.oceanfish_medium_9_inv": {
        "prefix": "names.oceanfish_medium_9_inv",
        "body": "names.oceanfish_medium_9_inv",
        "description": "\n ※Description: Sweetish Fish\n ※Contributor: @lan \n ※Details: \n\tmeat：1\n\tfish：1\n\t"
    },
    "Constant:TECH.YOTR": {
        "prefix": "TECH.YOTR",
        "body": "TECH.YOTR",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:names.oceanfish_medium_8_inv": {
        "prefix": "names.oceanfish_medium_8_inv",
        "body": "names.oceanfish_medium_8_inv",
        "description": "\n ※Description: Ice Bream\n ※Contributor: @lan \n ※Details: \n\tmeat：1\n\tfish：1\n\tice：1\n\t"
    },
    "Constant:names.oceanfish_medium_7_inv": {
        "prefix": "names.oceanfish_medium_7_inv",
        "body": "names.oceanfish_medium_7_inv",
        "description": "\n ※Description: Golden Koi\n ※Contributor: @lan \n ※Details: \n\tmeat：1\n\tfish：1\n\t"
    },
    "Constant:names.oceanfish_medium_6_inv": {
        "prefix": "names.oceanfish_medium_6_inv",
        "body": "names.oceanfish_medium_6_inv",
        "description": "\n ※Description: Dappled Koi\n ※Contributor: @lan \n ※Details: \n\tmeat：1\n\tfish：1\n\t"
    },
    "Constant:names.oceanfish_medium_5_inv": {
        "prefix": "names.oceanfish_medium_5_inv",
        "body": "names.oceanfish_medium_5_inv",
        "description": "\n ※Description: Corn Cod\n ※Contributor: @lan \n ※Details: \n\tveggie：1\n\t"
    },
    "Constant:FOODTYPE.BURNT": {
        "prefix": "FOODTYPE.BURNT",
        "body": "FOODTYPE.BURNT",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: BURNT)"
    },
    "Constant:names.oceanfish_medium_3_inv": {
        "prefix": "names.oceanfish_medium_3_inv",
        "body": "names.oceanfish_medium_3_inv",
        "description": "\n ※Description: Dandy Lionfish\n ※Contributor: @lan \n ※Details: \n\tmeat：1\n\tfish：1\n\t"
    },
    "Constant:names.oceanfish_medium_2_inv": {
        "prefix": "names.oceanfish_medium_2_inv",
        "body": "names.oceanfish_medium_2_inv",
        "description": "\n ※Description: Deep Bass\n ※Contributor: @lan \n ※Details: \n\tmeat：1\n\tfish：1\n\t"
    },
    "Constant:names.oceanfish_medium_1_inv": {
        "prefix": "names.oceanfish_medium_1_inv",
        "body": "names.oceanfish_medium_1_inv",
        "description": "\n ※Description: Mudfish\n ※Contributor: @lan \n ※Details: \n\tmeat：1\n\tfish：1\n\t"
    },
    "Constant:TECH.YOT_CATCOON": {
        "prefix": "TECH.YOT_CATCOON",
        "body": "TECH.YOT_CATCOON",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:names.nightmarefuel": {
        "prefix": "names.nightmarefuel",
        "body": "names.nightmarefuel",
        "description": "\n ※Description: Nightmare Fuel\n ※Contributor: @lan \n ※Details: \n\tinedible：1\n\tmagic：1\n\t"
    },
    "Constant:names.moonbutterflywings": {
        "prefix": "names.moonbutterflywings",
        "body": "names.moonbutterflywings",
        "description": "\n ※Description: Moon Moth Wings\n ※Contributor: @lan \n ※Details: \n\tdecoration：2\n\t"
    },
    "Constant:TECH.FISHING_ONE": {
        "prefix": "TECH.FISHING_ONE",
        "body": "TECH.FISHING_ONE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:names.moon_cap": {
        "prefix": "names.moon_cap",
        "body": "names.moon_cap",
        "description": "\n ※Description: Moon Shroom\n ※Contributor: @lan \n ※Details: \n\tveggie：0.5\n\t"
    },
    "Constant:names.monstermeat_dried": {
        "prefix": "names.monstermeat_dried",
        "body": "names.monstermeat_dried",
        "description": "\n ※Description: Monster Jerky\n ※Contributor: @lan \n ※Details: \n\tmeat：1\n\tmonster：1\n\t"
    },
    "Constant:GROUND.PEBBLEBEACH": {
        "prefix": "GROUND.PEBBLEBEACH",
        "body": "GROUND.PEBBLEBEACH",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 42)"
    },
    "Constant:ITEMTAG": {
        "prefix": "ITEMTAG",
        "body": "ITEMTAG",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: table)"
    },
    "Constant:TECH.CARNIVAL_HOSTSHOP_THREE": {
        "prefix": "TECH.CARNIVAL_HOSTSHOP_THREE",
        "body": "TECH.CARNIVAL_HOSTSHOP_THREE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:CAMERASHAKE": {
        "prefix": "CAMERASHAKE",
        "body": "CAMERASHAKE",
        "description": "\n ※Description: Camera shake modes\n ※Contributor: @lan (Value is: table)"
    },
    "Constant:ITEMTAG.WEAPON": {
        "prefix": "ITEMTAG.WEAPON",
        "body": "ITEMTAG.WEAPON",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: weapon)"
    },
    "Constant:names.monstermeat": {
        "prefix": "names.monstermeat",
        "body": "names.monstermeat",
        "description": "\n ※Description: Monster Meat\n ※Contributor: @lan \n ※Details: \n\tmeat：1\n\tmonster：1\n\t"
    },
    "Constant:names.lightninggoathorn": {
        "prefix": "names.lightninggoathorn",
        "body": "names.lightninggoathorn",
        "description": "\n ※Description: Volt Goat Horn\n ※Contributor: @lan \n ※Details: \n\tinedible：1\n\t"
    },
    "Constant:names.meat": {
        "prefix": "names.meat",
        "body": "names.meat",
        "description": "\n ※Description: Meat\n ※Contributor: @lan \n ※Details: \n\tmeat：1\n\t"
    },
    "Constant:TENDENCY.DEFAULT": {
        "prefix": "TENDENCY.DEFAULT",
        "body": "TENDENCY.DEFAULT",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: DEFAULT)"
    },
    "Constant:names.blue_cap_cooked": {
        "prefix": "names.blue_cap_cooked",
        "body": "names.blue_cap_cooked",
        "description": "\n ※Description: Cooked Blue Cap\n ※Contributor: @lan \n ※Details: \n\tveggie：0.5\n\t"
    },
    "Constant:names.meat_dried": {
        "prefix": "names.meat_dried",
        "body": "names.meat_dried",
        "description": "\n ※Description: Jerky\n ※Contributor: @lan \n ※Details: \n\tmeat：1\n\t"
    },
    "Constant:DEPLOYMODE": {
        "prefix": "DEPLOYMODE",
        "body": "DEPLOYMODE",
        "description": "\n ※Description: this is a net_tinybyte on inventoryitem_classified.deploymode\n ※Contributor: @lan (Value is: table)"
    },
    "Constant:names.kelp_cooked": {
        "prefix": "names.kelp_cooked",
        "body": "names.kelp_cooked",
        "description": "\n ※Description: Cooked Kelp Fronds\n ※Contributor: @lan \n ※Details: \n\tveggie：0.5\n\t"
    },
    "Constant:names.kelp": {
        "prefix": "names.kelp",
        "body": "names.kelp",
        "description": "\n ※Description: Kelp Fronds\n ※Contributor: @lan \n ※Details: \n\tveggie：0.5\n\t"
    },
    "Constant:FOODTYPE.SEEDS": {
        "prefix": "FOODTYPE.SEEDS",
        "body": "FOODTYPE.SEEDS",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: SEEDS)"
    },
    "Constant:TECH.WINTERS_FEAST": {
        "prefix": "TECH.WINTERS_FEAST",
        "body": "TECH.WINTERS_FEAST",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:CONTROL_FOCUS_DOWN": {
        "prefix": "CONTROL_FOCUS_DOWN",
        "body": "CONTROL_FOCUS_DOWN",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 26)"
    },
    "Constant:GROUND.UNDERGROUND": {
        "prefix": "GROUND.UNDERGROUND",
        "body": "GROUND.UNDERGROUND",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 128)"
    },
    "Constant:CONTROL_FORCE_STACK": {
        "prefix": "CONTROL_FORCE_STACK",
        "body": "CONTROL_FORCE_STACK",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 41)"
    },
    "Constant:CONTROL_INV_10": {
        "prefix": "CONTROL_INV_10",
        "body": "CONTROL_INV_10",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 24)"
    },
    "Constant:names.honeycomb": {
        "prefix": "names.honeycomb",
        "body": "names.honeycomb",
        "description": "\n ※Description: Honeycomb\n ※Contributor: @lan \n ※Details: \n\tsweetener：1\n\t"
    },
    "Constant:CONTROL_OPEN_CRAFTING": {
        "prefix": "CONTROL_OPEN_CRAFTING",
        "body": "CONTROL_OPEN_CRAFTING",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 46)"
    },
    "Constant:names.honey": {
        "prefix": "names.honey",
        "body": "names.honey",
        "description": "\n ※Description: Honey\n ※Contributor: @lan \n ※Details: \n\tsweetener：1\n\t"
    },
    "Constant:TOOLACTIONS.PLAY": {
        "prefix": "TOOLACTIONS.PLAY",
        "body": "TOOLACTIONS.PLAY",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: true)"
    },
    "Constant:ANIM_SORT_ORDER_BELOW_GROUND.BOAT_TRAIL": {
        "prefix": "ANIM_SORT_ORDER_BELOW_GROUND.BOAT_TRAIL",
        "body": "ANIM_SORT_ORDER_BELOW_GROUND.BOAT_TRAIL",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 1)"
    },
    "Constant:names.goatmilk": {
        "prefix": "names.goatmilk",
        "body": "names.goatmilk",
        "description": "\n ※Description: Electric Milk\n ※Contributor: @lan \n ※Details: \n\tdairy: 1\n\t"
    },
    "Constant:GROUND.DESERT_DIRT": {
        "prefix": "GROUND.DESERT_DIRT",
        "body": "GROUND.DESERT_DIRT",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 31)"
    },
    "Constant:names.garlic_cooked": {
        "prefix": "names.garlic_cooked",
        "body": "names.garlic_cooked",
        "description": "\n ※Description: Roasted Garlic\n ※Contributor: @lan \n ※Details: \n\tveggie：1\n\t"
    },
    "Constant:GROUND.SAVANNA": {
        "prefix": "GROUND.SAVANNA",
        "body": "GROUND.SAVANNA",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 5)"
    },
    "Constant:FUELTYPE.PIGTORCH": {
        "prefix": "FUELTYPE.PIGTORCH",
        "body": "FUELTYPE.PIGTORCH",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: PIGTORCH)"
    },
    "Constant:DEPLOYMODE.TURF": {
        "prefix": "DEPLOYMODE.TURF",
        "body": "DEPLOYMODE.TURF",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 3)"
    },
    "Constant:NAUGHTY_VALUE.beefalo": {
        "prefix": "NAUGHTY_VALUE.beefalo",
        "body": "NAUGHTY_VALUE.beefalo",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 4)"
    },
    "Constant:names.garlic": {
        "prefix": "names.garlic",
        "body": "names.garlic",
        "description": "\n ※Description: Garlic\n ※Contributor: @lan \n ※Details: \n\tveggie：1\n\t"
    },
    "Constant:names.cactus_flower": {
        "prefix": "names.cactus_flower",
        "body": "names.cactus_flower",
        "description": "\n ※Description: Cactus Flower\n ※Contributor: @lan \n ※Details: \n\tveggie：0.5\n\t"
    },
    "Constant:CONTROL_MOVE_DOWN": {
        "prefix": "CONTROL_MOVE_DOWN",
        "body": "CONTROL_MOVE_DOWN",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 6)"
    },
    "Constant:NAUGHTY_VALUE.bunnyman": {
        "prefix": "NAUGHTY_VALUE.bunnyman",
        "body": "NAUGHTY_VALUE.bunnyman",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 3)"
    },
    "Constant:names.fishmeat_small": {
        "prefix": "names.fishmeat_small",
        "body": "names.fishmeat_small",
        "description": "\n ※Description: Fish Morsel\n ※Contributor: @lan \n ※Details: \n\tmeat：0.5\n\tfish：0.5\n\t"
    },
    "Constant:MATERIALS.THULECITE": {
        "prefix": "MATERIALS.THULECITE",
        "body": "MATERIALS.THULECITE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: thulecite)"
    },
    "Constant:ANIM_ORIENTATION.BillBoard": {
        "prefix": "ANIM_ORIENTATION.BillBoard",
        "body": "ANIM_ORIENTATION.BillBoard",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 0)"
    },
    "Constant:names.berries": {
        "prefix": "names.berries",
        "body": "names.berries",
        "description": "\n ※Description: Berries\n ※Contributor: @lan \n ※Details: \n\tfruit：0.5\n\t"
    },
    "Constant:names.fishmeat": {
        "prefix": "names.fishmeat",
        "body": "names.fishmeat",
        "description": "\n ※Description: Raw Fish\n ※Contributor: @lan \n ※Details: \n\tmeat：1\n\tfish：1\n\t"
    },
    "Constant:names.fig_cooked": {
        "prefix": "names.fig_cooked",
        "body": "names.fig_cooked",
        "description": "\n ※Description: Cooked Fig\n ※Contributor: @lan \n ※Details: \n\tfruit：0.5\n\t"
    },
    "Constant:TECH.LOST": {
        "prefix": "TECH.LOST",
        "body": "TECH.LOST",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:TENDENCY.ORNERY": {
        "prefix": "TENDENCY.ORNERY",
        "body": "TENDENCY.ORNERY",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: ORNERY)"
    },
    "Constant:WEBCOLOURS.ROSYBROWN": {
        "prefix": "WEBCOLOURS.ROSYBROWN",
        "body": "WEBCOLOURS.ROSYBROWN",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RGB(188, 143, 143))"
    },
    "Constant:names.eggplant_cooked": {
        "prefix": "names.eggplant_cooked",
        "body": "names.eggplant_cooked",
        "description": "\n ※Description: Braised Eggplant\n ※Contributor: @lan \n ※Details: \n\tveggie：1\n\t"
    },
    "Constant:names.drumstick": {
        "prefix": "names.drumstick",
        "body": "names.drumstick",
        "description": "\n ※Description: Drumstick\n ※Contributor: @lan \n ※Details: \n\tmeat：0.5\n\t"
    },
    "Constant:HOUNDWARNINGTYPE.LVL1": {
        "prefix": "HOUNDWARNINGTYPE.LVL1",
        "body": "HOUNDWARNINGTYPE.LVL1",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 0)"
    },
    "Constant:CONTROL_INV_1": {
        "prefix": "CONTROL_INV_1",
        "body": "CONTROL_INV_1",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 15)"
    },
    "Constant:names.eggplant": {
        "prefix": "names.eggplant",
        "body": "names.eggplant",
        "description": "\n ※Description: Eggplant\n ※Contributor: @lan \n ※Details: \n\tveggie：1\n\t"
    },
    "Constant:WEBCOLOURS.CORNFLOWERBLUE": {
        "prefix": "WEBCOLOURS.CORNFLOWERBLUE",
        "body": "WEBCOLOURS.CORNFLOWERBLUE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RGB(100, 149, 237))"
    },
    "Constant:names.eel_cooked": {
        "prefix": "names.eel_cooked",
        "body": "names.eel_cooked",
        "description": "\n ※Description: Cooked Eel\n ※Contributor: @lan \n ※Details: \n\tmeat：0.5\n\tfish：1\n\t"
    },
    "Constant:CONTROL_SERVER_PAUSE": {
        "prefix": "CONTROL_SERVER_PAUSE",
        "body": "CONTROL_SERVER_PAUSE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 73)"
    },
    "Constant:ANIM_SORT_ORDER_BELOW_GROUND.UNUSED": {
        "prefix": "ANIM_SORT_ORDER_BELOW_GROUND.UNUSED",
        "body": "ANIM_SORT_ORDER_BELOW_GROUND.UNUSED",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 3)"
    },
    "Constant:names.eel": {
        "prefix": "names.eel",
        "body": "names.eel",
        "description": "\n ※Description: Eel\n ※Contributor: @lan \n ※Details: \n\tmeat：0.5\n\tfish：1\n\t"
    },
    "Constant:names.durian_cooked": {
        "prefix": "names.durian_cooked",
        "body": "names.durian_cooked",
        "description": "\n ※Description: Extra Smelly Durian\n ※Contributor: @lan \n ※Details: \n\tmonster：1\n\tfruit：1\n\t"
    },
    "Constant:RATE_SCALE.DECREASE_LOW": {
        "prefix": "RATE_SCALE.DECREASE_LOW",
        "body": "RATE_SCALE.DECREASE_LOW",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 6)"
    },
    "Constant:FACING_LEFT": {
        "prefix": "FACING_LEFT",
        "body": "FACING_LEFT",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 2)"
    },
    "Constant:names.drumstick_cooked": {
        "prefix": "names.drumstick_cooked",
        "body": "names.drumstick_cooked",
        "description": "\n ※Description: Fried Drumstick\n ※Contributor: @lan \n ※Details: \n\tmeat：0.5\n\t"
    },
    "Constant:ANIM_SORT_ORDER.OCEAN_WAVES": {
        "prefix": "ANIM_SORT_ORDER.OCEAN_WAVES",
        "body": "ANIM_SORT_ORDER.OCEAN_WAVES",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 1)"
    },
    "Constant:names.dragonfruit": {
        "prefix": "names.dragonfruit",
        "body": "names.dragonfruit",
        "description": "\n ※Description: Dragon Fruit\n ※Contributor: @lan \n ※Details: \n\tfruit：1\n\t"
    },
    "Constant:GROUND.OCEAN_COASTAL_SHORE": {
        "prefix": "GROUND.OCEAN_COASTAL_SHORE",
        "body": "GROUND.OCEAN_COASTAL_SHORE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 202)"
    },
    "Constant:names.cutlichen": {
        "prefix": "names.cutlichen",
        "body": "names.cutlichen",
        "description": "\n ※Description: Lichen\n ※Contributor: @lan \n ※Details: \n\tveggie：1\n\t"
    },
    "Constant:names.cookedsmallmeat": {
        "prefix": "names.cookedsmallmeat",
        "body": "names.cookedsmallmeat",
        "description": "\n ※Description: Cooked Morsel\n ※Contributor: @lan \n ※Details: \n\tmeat：0.5\n\t"
    },
    "Constant:UICOLOURS.WHITE": {
        "prefix": "UICOLOURS.WHITE",
        "body": "UICOLOURS.WHITE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: WHITE)"
    },
    "Constant:names.cave_banana_cooked": {
        "prefix": "names.cave_banana_cooked",
        "body": "names.cave_banana_cooked",
        "description": "\n ※Description: Cooked Banana\n ※Contributor: @lan \n ※Details: \n\tfruit：1\n\t"
    },
    "Constant:HOUNDWARNINGTYPE.LVL4_WORM": {
        "prefix": "HOUNDWARNINGTYPE.LVL4_WORM",
        "body": "HOUNDWARNINGTYPE.LVL4_WORM",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 7)"
    },
    "Constant:names.carrot_cooked": {
        "prefix": "names.carrot_cooked",
        "body": "names.carrot_cooked",
        "description": "\n ※Description: Roasted Carrot\n ※Contributor: @lan \n ※Details: \n\tveggie：1\n\t"
    },
    "Constant:names.carrot": {
        "prefix": "names.carrot",
        "body": "names.carrot",
        "description": "\n ※Description: Carrot\n ※Contributor: @lan \n ※Details: \n\tveggie：1\n\t"
    },
    "Constant:names.butterflywings": {
        "prefix": "names.butterflywings",
        "body": "names.butterflywings",
        "description": "\n ※Description: Butterfly Wings\n ※Contributor: @lan \n ※Details: \n\tdecoration：2\n\t"
    },
    "Constant:SEASONS.SUMMER": {
        "prefix": "SEASONS.SUMMER",
        "body": "SEASONS.SUMMER",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: summer)"
    },
    "Constant:names.boneshard": {
        "prefix": "names.boneshard",
        "body": "names.boneshard",
        "description": "\n ※Description: Bone Shards\n ※Contributor: @lan \n ※Details: \n\tinedible：1\n\t"
    },
    "Constant:names.mandrake": {
        "prefix": "names.mandrake",
        "body": "names.mandrake",
        "description": "\n ※Description: Mandrake\n ※Contributor: @lan \n ※Details: \n\tveggie：1\n\tmagic：1\n\t"
    },
    "Constant:UICOLOURS.IVORY_70": {
        "prefix": "UICOLOURS.IVORY_70",
        "body": "UICOLOURS.IVORY_70",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RGB(165, 162, 156, 1))"
    },
    "Constant:CONTROL_INV_4": {
        "prefix": "CONTROL_INV_4",
        "body": "CONTROL_INV_4",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 18)"
    },
    "Constant:names.blue_cap": {
        "prefix": "names.blue_cap",
        "body": "names.blue_cap",
        "description": "\n ※Description: Blue Cap\n ※Contributor: @lan \n ※Details: \n\tveggie：0.5\n\t"
    },
    "Constant:GROUND.SINKHOLE": {
        "prefix": "GROUND.SINKHOLE",
        "body": "GROUND.SINKHOLE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 15)"
    },
    "Constant:names.onion_cooked": {
        "prefix": "names.onion_cooked",
        "body": "names.onion_cooked",
        "description": "\n ※Description: Roasted Onion\n ※Contributor: @lan \n ※Details: \n\tveggie：1\n\t"
    },
    "Constant:TECH.CARNIVAL_PRIZESHOP_ONE": {
        "prefix": "TECH.CARNIVAL_PRIZESHOP_ONE",
        "body": "TECH.CARNIVAL_PRIZESHOP_ONE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:names.berries_juicy_cooked": {
        "prefix": "names.berries_juicy_cooked",
        "body": "names.berries_juicy_cooked",
        "description": "\n ※Description: Roasted Juicy Berries\n ※Contributor: @lan \n ※Details: \n\tfruit：0.5\n\t"
    },
    "Constant:names.fishmeat_cooked": {
        "prefix": "names.fishmeat_cooked",
        "body": "names.fishmeat_cooked",
        "description": "\n ※Description: Fish Steak\n ※Contributor: @lan \n ※Details: \n\tmeat：1\n\tfish：1\n\t"
    },
    "Constant:GROUND.FUNGUSMOON_NOISE": {
        "prefix": "GROUND.FUNGUSMOON_NOISE",
        "body": "GROUND.FUNGUSMOON_NOISE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 120)"
    },
    "Constant:NAUGHTY_VALUE.dustmoth": {
        "prefix": "NAUGHTY_VALUE.dustmoth",
        "body": "NAUGHTY_VALUE.dustmoth",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 4)"
    },
    "Constant:ANCHOR_RIGHT": {
        "prefix": "ANCHOR_RIGHT",
        "body": "ANCHOR_RIGHT",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 2)"
    },
    "Constant:FOODTYPE.ELEMENTAL": {
        "prefix": "FOODTYPE.ELEMENTAL",
        "body": "FOODTYPE.ELEMENTAL",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: ELEMENTAL)"
    },
    "Constant:names.batnose": {
        "prefix": "names.batnose",
        "body": "names.batnose",
        "description": "\n ※Description: Naked Nostrils\n ※Contributor: @lan \n ※Details: \n\tmeat：0.5\n\t"
    },
    "Constant:names.asparagus_cooked": {
        "prefix": "names.asparagus_cooked",
        "body": "names.asparagus_cooked",
        "description": "\n ※Description: Roasted Asparagus\n ※Contributor: @lan \n ※Details: \n\tveggie：1\n\t"
    },
    "Constant:SEASONS.AUTUMN": {
        "prefix": "SEASONS.AUTUMN",
        "body": "SEASONS.AUTUMN",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: autumn)"
    },
    "Constant:GROUND.WEB": {
        "prefix": "GROUND.WEB",
        "body": "GROUND.WEB",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 9)"
    },
    "Constant:MATERIALS.GEM": {
        "prefix": "MATERIALS.GEM",
        "body": "MATERIALS.GEM",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: gem)"
    },
    "Constant:HOUNDWARNINGTYPE.LVL3": {
        "prefix": "HOUNDWARNINGTYPE.LVL3",
        "body": "HOUNDWARNINGTYPE.LVL3",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 2)"
    },
    "Constant:NAUGHTY_VALUE.friendlyfruitfly": {
        "prefix": "NAUGHTY_VALUE.friendlyfruitfly",
        "body": "NAUGHTY_VALUE.friendlyfruitfly",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 20)"
    },
    "Constant:MOUSEBUTTON_MIDDLE": {
        "prefix": "MOUSEBUTTON_MIDDLE",
        "body": "MOUSEBUTTON_MIDDLE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 1002)"
    },
    "Constant:UICOLOURS": {
        "prefix": "UICOLOURS",
        "body": "UICOLOURS",
        "description": "\n ※Description: A coherent palette for UI elements\n ※Contributor: @lan (Value is: table)"
    },
    "Constant:TOOLACTIONS.CHOP": {
        "prefix": "TOOLACTIONS.CHOP",
        "body": "TOOLACTIONS.CHOP",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: true)"
    },
    "Constant:CONTROL_ACCEPT": {
        "prefix": "CONTROL_ACCEPT",
        "body": "CONTROL_ACCEPT",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 29)"
    },
    "Constant:PLAYERSTUNLOCK": {
        "prefix": "PLAYERSTUNLOCK",
        "body": "PLAYERSTUNLOCK",
        "description": "\n ※Description: How does this creature apply stunlock to the player\n ※Contributor: @lan (Value is: table)"
    },
    "Constant:names.acorn": {
        "prefix": "names.acorn",
        "body": "names.acorn",
        "description": "\n ※Description: Birchnut\n ※Contributor: @lan \n ※Details: \n\tseed：1\n\t"
    },
    "Constant:tags.": {
        "prefix": "tags.",
        "body": "tags.${1|dairy,decoration,egg,fat,fish,fruit,inedible,magic,meat,monster,seed,sweetener,veggie|}",
        "description": "\n ※Description: Ingredient tags group\n ※Contributor: @lan"
    },
    "Constant:NAUGHTY_VALUE.teenbird": {
        "prefix": "NAUGHTY_VALUE.teenbird",
        "body": "NAUGHTY_VALUE.teenbird",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 2)"
    },
    "Constant:ITEMTAG.STACKABLE": {
        "prefix": "ITEMTAG.STACKABLE",
        "body": "ITEMTAG.STACKABLE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: stackable)"
    },
    "Constant:LEVELTYPE.CUSTOMPRESET": {
        "prefix": "LEVELTYPE.CUSTOMPRESET",
        "body": "LEVELTYPE.CUSTOMPRESET",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: CUSTOMPRESET)"
    },
    "Constant:MATERIALS.ICE": {
        "prefix": "MATERIALS.ICE",
        "body": "MATERIALS.ICE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: ice)"
    },
    "Constant:NAUGHTY_VALUE.moonbutterfly": {
        "prefix": "NAUGHTY_VALUE.moonbutterfly",
        "body": "NAUGHTY_VALUE.moonbutterfly",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 1)"
    },
    "Constant:COLLISION.LIMITS": {
        "prefix": "COLLISION.LIMITS",
        "body": "COLLISION.LIMITS",
        "description": "\n ※Description: BOAT_LIMITS + LAND_OCEAN_LIMITS\n ※Contributor: @lan (Value is: 128 + 64)"
    },
    "Constant:names.butter": {
        "prefix": "names.butter",
        "body": "names.butter",
        "description": "\n ※Description: Butter\n ※Contributor: @lan \n ※Details: \n\tdairy: 1\n\tfat：1\n\t"
    },
    "Constant:TOOLACTIONS.UNSADDLE": {
        "prefix": "TOOLACTIONS.UNSADDLE",
        "body": "TOOLACTIONS.UNSADDLE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: true)"
    },
    "Constant:SEASONS.WINTER": {
        "prefix": "SEASONS.WINTER",
        "body": "SEASONS.WINTER",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: winter)"
    },
    "Constant:names.red_cap": {
        "prefix": "names.red_cap",
        "body": "names.red_cap",
        "description": "\n ※Description: Red Cap\n ※Contributor: @lan \n ※Details: \n\tveggie：0.5\n\t"
    },
    "Constant:FUELTYPE.CAVE": {
        "prefix": "FUELTYPE.CAVE",
        "body": "FUELTYPE.CAVE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: CAVE)"
    },
    "Constant:NAUGHTY_VALUE.glommer": {
        "prefix": "NAUGHTY_VALUE.glommer",
        "body": "NAUGHTY_VALUE.glommer",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 50)"
    },
    "Constant:NAUGHTY_VALUE.canary": {
        "prefix": "NAUGHTY_VALUE.canary",
        "body": "NAUGHTY_VALUE.canary",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 2)"
    },
    "Constant:CONTROL_OPEN_DEBUG_CONSOLE": {
        "prefix": "CONTROL_OPEN_DEBUG_CONSOLE",
        "body": "CONTROL_OPEN_DEBUG_CONSOLE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 42)"
    },
    "Constant:CONTROL_ROTATE_LEFT": {
        "prefix": "CONTROL_ROTATE_LEFT",
        "body": "CONTROL_ROTATE_LEFT",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 11)"
    },
    "Constant:WEBCOLOURS.PINK": {
        "prefix": "WEBCOLOURS.PINK",
        "body": "WEBCOLOURS.PINK",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RGB(255, 192, 203))"
    },
    "Constant:NAUGHTY_VALUE.smallbird": {
        "prefix": "NAUGHTY_VALUE.smallbird",
        "body": "NAUGHTY_VALUE.smallbird",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 6)"
    },
    "Constant:NAUGHTY_VALUE.robin": {
        "prefix": "NAUGHTY_VALUE.robin",
        "body": "NAUGHTY_VALUE.robin",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 2)"
    },
    "Constant:WEBCOLOURS.LIGHTSKYBLUE": {
        "prefix": "WEBCOLOURS.LIGHTSKYBLUE",
        "body": "WEBCOLOURS.LIGHTSKYBLUE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RGB(135, 206, 250))"
    },
    "Constant:MATERIALS.FOSSIL": {
        "prefix": "MATERIALS.FOSSIL",
        "body": "MATERIALS.FOSSIL",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: fossil)"
    },
    "Constant:GROUND.WALL_HUNESTONE": {
        "prefix": "GROUND.WALL_HUNESTONE",
        "body": "GROUND.WALL_HUNESTONE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 160)"
    },
    "Constant:TECH.CARTOGRAPHY_TWO": {
        "prefix": "TECH.CARTOGRAPHY_TWO",
        "body": "TECH.CARTOGRAPHY_TWO",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:CONTROL_SCROLLBACK": {
        "prefix": "CONTROL_SCROLLBACK",
        "body": "CONTROL_SCROLLBACK",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 31)"
    },
    "Constant:NAUGHTY_VALUE.lightflier": {
        "prefix": "NAUGHTY_VALUE.lightflier",
        "body": "NAUGHTY_VALUE.lightflier",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 1)"
    },
    "Constant:names.fishmeat_small_cooked": {
        "prefix": "names.fishmeat_small_cooked",
        "body": "names.fishmeat_small_cooked",
        "description": "\n ※Description: Cooked Fish Morsel\n ※Contributor: @lan \n ※Details: \n\tmeat：0.5\n\tfish：0.5\n\t"
    },
    "Constant:DEPLOYSPACING.PLACER_DEFAULT": {
        "prefix": "DEPLOYSPACING.PLACER_DEFAULT",
        "body": "DEPLOYSPACING.PLACER_DEFAULT",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 4)"
    },
    "Constant:DEPLOYSPACING.DEFAULT": {
        "prefix": "DEPLOYSPACING.DEFAULT",
        "body": "DEPLOYSPACING.DEFAULT",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 0)"
    },
    "Constant:CONTROL_MENU_MISC_4": {
        "prefix": "CONTROL_MENU_MISC_4",
        "body": "CONTROL_MENU_MISC_4",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 71)"
    },
    "Constant:DEPLOYSPACING": {
        "prefix": "DEPLOYSPACING",
        "body": "DEPLOYSPACING",
        "description": "\n ※Description: 移植间距:最大值为 7 (net_tinybyte)\n ※Contributor: @lan (Value is: table)"
    },
    "Constant:GROUND.OCEAN_BRINEPOOL": {
        "prefix": "GROUND.OCEAN_BRINEPOOL",
        "body": "GROUND.OCEAN_BRINEPOOL",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 205)"
    },
    "Constant:BUILDMODE": {
        "prefix": "BUILDMODE",
        "body": "BUILDMODE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: table)"
    },
    "Constant:GROUND.DIRT": {
        "prefix": "GROUND.DIRT",
        "body": "GROUND.DIRT",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 4)"
    },
    "Constant:DEPLOYMODE.NONE": {
        "prefix": "DEPLOYMODE.NONE",
        "body": "DEPLOYMODE.NONE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 0)"
    },
    "Constant:WEBCOLOURS.YELLOW": {
        "prefix": "WEBCOLOURS.YELLOW",
        "body": "WEBCOLOURS.YELLOW",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RGB(255, 255, 0))"
    },
    "Constant:names.green_cap_cooked": {
        "prefix": "names.green_cap_cooked",
        "body": "names.green_cap_cooked",
        "description": "\n ※Description: Cooked Green Cap\n ※Contributor: @lan \n ※Details: \n\tveggie：0.5\n\t"
    },
    "Constant:UICOLOURS.RED": {
        "prefix": "UICOLOURS.RED",
        "body": "UICOLOURS.RED",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RGB(207, 61, 61, 1))"
    },
    "Constant:UICOLOURS.BLUE": {
        "prefix": "UICOLOURS.BLUE",
        "body": "UICOLOURS.BLUE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RGB(80, 143, 244))"
    },
    "Constant:names.acorn_cooked": {
        "prefix": "names.acorn_cooked",
        "body": "names.acorn_cooked",
        "description": "\n ※Description: Roasted Birchnut\n ※Contributor: @lan \n ※Details: \n\tseed：1\n\t"
    },
    "Constant:CHARACTER_INGREDIENT.SANITY": {
        "prefix": "CHARACTER_INGREDIENT.SANITY",
        "body": "CHARACTER_INGREDIENT.SANITY",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: decrease_sanity)"
    },
    "Constant:UICOLOURS.GREY": {
        "prefix": "UICOLOURS.GREY",
        "body": "UICOLOURS.GREY",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: GREY)"
    },
    "Constant:CHARACTER_INGREDIENT.OLDAGE": {
        "prefix": "CHARACTER_INGREDIENT.OLDAGE",
        "body": "CHARACTER_INGREDIENT.OLDAGE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: decrease_oldage)"
    },
    "Constant:names.oceanfish_medium_4_inv": {
        "prefix": "names.oceanfish_medium_4_inv",
        "body": "names.oceanfish_medium_4_inv",
        "description": "\n ※Description: Black Catfish\n ※Contributor: @lan \n ※Details: \n\tmeat：1\n\tfish：1\n\t"
    },
    "Constant:FOODTYPE.BERRY": {
        "prefix": "FOODTYPE.BERRY",
        "body": "FOODTYPE.BERRY",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: BERRY)"
    },
    "Constant:FOODTYPE.ROUGHAGE": {
        "prefix": "FOODTYPE.ROUGHAGE",
        "body": "FOODTYPE.ROUGHAGE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: ROUGHAGE)"
    },
    "Constant:FOODTYPE.MEAT": {
        "prefix": "FOODTYPE.MEAT",
        "body": "FOODTYPE.MEAT",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: MEAT)"
    },
    "Constant:names.batwing_cooked": {
        "prefix": "names.batwing_cooked",
        "body": "names.batwing_cooked",
        "description": "\n ※Description: Cooked Batilisk Wing\n ※Contributor: @lan \n ※Details: \n\tmeat：0.5\n\t"
    },
    "Constant:CONTROL_FORCE_TRADE": {
        "prefix": "CONTROL_FORCE_TRADE",
        "body": "CONTROL_FORCE_TRADE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 40)"
    },
    "Constant:FOODTYPE.GOODIES": {
        "prefix": "FOODTYPE.GOODIES",
        "body": "FOODTYPE.GOODIES",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: GOODIES)"
    },
    "Constant:FOODTYPE.HORRIBLE": {
        "prefix": "FOODTYPE.HORRIBLE",
        "body": "FOODTYPE.HORRIBLE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: HORRIBLE)"
    },
    "Constant:FOODTYPE.GENERIC": {
        "prefix": "FOODTYPE.GENERIC",
        "body": "FOODTYPE.GENERIC",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: GENERIC)"
    },
    "Constant:GROUND.SCALE": {
        "prefix": "GROUND.SCALE",
        "body": "GROUND.SCALE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 32)"
    },
    "Constant:GROUND.TILES": {
        "prefix": "GROUND.TILES",
        "body": "GROUND.TILES",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 20)"
    },
    "Constant:names.rock_avocado_fruit_ripe_cooked": {
        "prefix": "names.rock_avocado_fruit_ripe_cooked",
        "body": "names.rock_avocado_fruit_ripe_cooked",
        "description": "\n ※Description: Cooked Stone Fruit\n ※Contributor: @lan \n ※Details: \n\tveggie：1\n\t"
    },
    "Constant:FUELTYPE.USAGE": {
        "prefix": "FUELTYPE.USAGE",
        "body": "FUELTYPE.USAGE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: USAGE)"
    },
    "Constant:ANIM_SORT_ORDER_BELOW_GROUND": {
        "prefix": "ANIM_SORT_ORDER_BELOW_GROUND",
        "body": "ANIM_SORT_ORDER_BELOW_GROUND",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: table)"
    },
    "Constant:TECH.SCIENCE_TWO": {
        "prefix": "TECH.SCIENCE_TWO",
        "body": "TECH.SCIENCE_TWO",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:GROUND.QUAGMIRE_GATEWAY": {
        "prefix": "GROUND.QUAGMIRE_GATEWAY",
        "body": "GROUND.QUAGMIRE_GATEWAY",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 38)"
    },
    "Constant:NAUGHTY_VALUE.penguin": {
        "prefix": "NAUGHTY_VALUE.penguin",
        "body": "NAUGHTY_VALUE.penguin",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 2)"
    },
    "Constant:CONTROL_MAP": {
        "prefix": "CONTROL_MAP",
        "body": "CONTROL_MAP",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 14)"
    },
    "Constant:GROUND.CHECKER": {
        "prefix": "GROUND.CHECKER",
        "body": "GROUND.CHECKER",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 12)"
    },
    "Constant:FUELTYPE.CHEMICAL": {
        "prefix": "FUELTYPE.CHEMICAL",
        "body": "FUELTYPE.CHEMICAL",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: CHEMICAL)"
    },
    "Constant:PLAYERSTUNLOCK.SOMETIMES": {
        "prefix": "PLAYERSTUNLOCK.SOMETIMES",
        "body": "PLAYERSTUNLOCK.SOMETIMES",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 2)"
    },
    "Constant:WORMHOLETYPE.WORM": {
        "prefix": "WORMHOLETYPE.WORM",
        "body": "WORMHOLETYPE.WORM",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 0)"
    },
    "Constant:WORMHOLETYPE.TENTAPILLAR": {
        "prefix": "WORMHOLETYPE.TENTAPILLAR",
        "body": "WORMHOLETYPE.TENTAPILLAR",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 1)"
    },
    "Constant:CONTROL_USE_ITEM_ON_ITEM": {
        "prefix": "CONTROL_USE_ITEM_ON_ITEM",
        "body": "CONTROL_USE_ITEM_ON_ITEM",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 59)"
    },
    "Constant:WEBCOLOURS.THISTLE": {
        "prefix": "WEBCOLOURS.THISTLE",
        "body": "WEBCOLOURS.THISTLE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RGB(216, 191, 216))"
    },
    "Constant:WORMHOLETYPE.OCEANWHIRLPORTAL": {
        "prefix": "WORMHOLETYPE.OCEANWHIRLPORTAL",
        "body": "WORMHOLETYPE.OCEANWHIRLPORTAL",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 2)"
    },
    "Constant:TECH.HALLOWED_NIGHTS": {
        "prefix": "TECH.HALLOWED_NIGHTS",
        "body": "TECH.HALLOWED_NIGHTS",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:HOUNDWARNINGTYPE.LVL3_WORM": {
        "prefix": "HOUNDWARNINGTYPE.LVL3_WORM",
        "body": "HOUNDWARNINGTYPE.LVL3_WORM",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 6)"
    },
    "Constant:GROUND.ROAD": {
        "prefix": "GROUND.ROAD",
        "body": "GROUND.ROAD",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 2)"
    },
    "Constant:TOOLACTIONS.HAMMER": {
        "prefix": "TOOLACTIONS.HAMMER",
        "body": "TOOLACTIONS.HAMMER",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: true)"
    },
    "Constant:TECH.SCULPTING_ONE": {
        "prefix": "TECH.SCULPTING_ONE",
        "body": "TECH.SCULPTING_ONE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:WEBCOLOURS.SANDYBROWN": {
        "prefix": "WEBCOLOURS.SANDYBROWN",
        "body": "WEBCOLOURS.SANDYBROWN",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RGB(244, 164, 96))"
    },
    "Constant:NODE_TYPE.Room": {
        "prefix": "NODE_TYPE.Room",
        "body": "NODE_TYPE.Room",
        "description": "\n ※Description: Land can only touch the room(s) it is connected to by the graph (adds impassable around its parameter with a single land bidge)\n ※Contributor: @lan (Value is: 5)"
    },
    "Constant:WEBCOLOURS.SADDLEBROWN": {
        "prefix": "WEBCOLOURS.SADDLEBROWN",
        "body": "WEBCOLOURS.SADDLEBROWN",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RGB(139, 69, 19))"
    },
    "Constant:RATE_SCALE": {
        "prefix": "RATE_SCALE",
        "body": "RATE_SCALE",
        "description": "\n ※Description: Badge/meter arrow sizes\n ※Contributor: @lan (Value is: table)"
    },
    "Constant:NAUGHTY_VALUE.babybeefalo": {
        "prefix": "NAUGHTY_VALUE.babybeefalo",
        "body": "NAUGHTY_VALUE.babybeefalo",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 6)"
    },
    "Constant:WEBCOLOURS.PALEVIOLETRED": {
        "prefix": "WEBCOLOURS.PALEVIOLETRED",
        "body": "WEBCOLOURS.PALEVIOLETRED",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RGB(219, 112, 147))"
    },
    "Constant:WEBCOLOURS.GOLDENROD": {
        "prefix": "WEBCOLOURS.GOLDENROD",
        "body": "WEBCOLOURS.GOLDENROD",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RGB(218, 165, 32))"
    },
    "Constant:UICOLOURS.GOLD_FOCUS": {
        "prefix": "UICOLOURS.GOLD_FOCUS",
        "body": "UICOLOURS.GOLD_FOCUS",
        "description": "\n ※Description: menu active item\n ※Contributor: @lan (Value is: RGB(251, 193, 92))"
    },
    "Constant:ROAD_PARAMETERS.MIN_WIDTH": {
        "prefix": "ROAD_PARAMETERS.MIN_WIDTH",
        "body": "ROAD_PARAMETERS.MIN_WIDTH",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 2)"
    },
    "Constant:names.cookedmonstermeat": {
        "prefix": "names.cookedmonstermeat",
        "body": "names.cookedmonstermeat",
        "description": "\n ※Description: Cooked Monster Meat\n ※Contributor: @lan \n ※Details: \n\tmeat：1\n\tmonster：1\n\t"
    },
    "Constant:UICOLOURS.BROWN_DARK": {
        "prefix": "UICOLOURS.BROWN_DARK",
        "body": "UICOLOURS.BROWN_DARK",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RGB(80, 61, 39))"
    },
    "Constant:NAUGHTY_VALUE.robin_winter": {
        "prefix": "NAUGHTY_VALUE.robin_winter",
        "body": "NAUGHTY_VALUE.robin_winter",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 2)"
    },
    "Constant:WEBCOLOURS.KHAKI": {
        "prefix": "WEBCOLOURS.KHAKI",
        "body": "WEBCOLOURS.KHAKI",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RGB(240, 230, 140))"
    },
    "Constant:WEBCOLOURS.GREEN": {
        "prefix": "WEBCOLOURS.GREEN",
        "body": "WEBCOLOURS.GREEN",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RGB(0, 128, 0))"
    },
    "Constant:CONTROL_MOVE_UP": {
        "prefix": "CONTROL_MOVE_UP",
        "body": "CONTROL_MOVE_UP",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 5)"
    },
    "Constant:WEBCOLOURS.FIREBRICK": {
        "prefix": "WEBCOLOURS.FIREBRICK",
        "body": "WEBCOLOURS.FIREBRICK",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RGB(178, 34, 34))"
    },
    "Constant:RATE_SCALE.NEUTRAL": {
        "prefix": "RATE_SCALE.NEUTRAL",
        "body": "RATE_SCALE.NEUTRAL",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 0)"
    },
    "Constant:FACING_NONE": {
        "prefix": "FACING_NONE",
        "body": "FACING_NONE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 8)"
    },
    "Constant:WEBCOLOURS.CHOCOLATE": {
        "prefix": "WEBCOLOURS.CHOCOLATE",
        "body": "WEBCOLOURS.CHOCOLATE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RGB(210, 105, 30))"
    },
    "Constant:TECH.NONE": {
        "prefix": "TECH.NONE",
        "body": "TECH.NONE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:EQUIPSLOTS.HEAD": {
        "prefix": "EQUIPSLOTS.HEAD",
        "body": "EQUIPSLOTS.HEAD",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: head)"
    },
    "Constant:COLLISION.OBSTACLES": {
        "prefix": "COLLISION.OBSTACLES",
        "body": "COLLISION.OBSTACLES",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 512)"
    },
    "Constant:CONTROL_START_EMOJI": {
        "prefix": "CONTROL_START_EMOJI",
        "body": "CONTROL_START_EMOJI",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 82)"
    },
    "Constant:WEBCOLOURS.MEDIUMPURPLE": {
        "prefix": "WEBCOLOURS.MEDIUMPURPLE",
        "body": "WEBCOLOURS.MEDIUMPURPLE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RGB(147, 112, 219))"
    },
    "Constant:UICOLOURS.SLATE": {
        "prefix": "UICOLOURS.SLATE",
        "body": "UICOLOURS.SLATE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RGB(155, 170, 177, 1))"
    },
    "Constant:PLAYERSTUNLOCK.RARELY": {
        "prefix": "PLAYERSTUNLOCK.RARELY",
        "body": "PLAYERSTUNLOCK.RARELY",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 3)"
    },
    "Constant:UICOLOURS.SILVER": {
        "prefix": "UICOLOURS.SILVER",
        "body": "UICOLOURS.SILVER",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RGB(192, 192, 192, 1))"
    },
    "Constant:TOOLACTIONS.SCYTHE": {
        "prefix": "TOOLACTIONS.SCYTHE",
        "body": "TOOLACTIONS.SCYTHE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: true)"
    },
    "Constant:UICOLOURS.EGGSHELL": {
        "prefix": "UICOLOURS.EGGSHELL",
        "body": "UICOLOURS.EGGSHELL",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RGB(252, 230, 201))"
    },
    "Constant:ANIM_SORT_ORDER.OCEAN_BOAT": {
        "prefix": "ANIM_SORT_ORDER.OCEAN_BOAT",
        "body": "ANIM_SORT_ORDER.OCEAN_BOAT",
        "description": "\n ※Description: Keep at 2.\n ※Contributor: @lan (Value is: 2)"
    },
    "Constant:RATE_SCALE.INCREASE_MED": {
        "prefix": "RATE_SCALE.INCREASE_MED",
        "body": "RATE_SCALE.INCREASE_MED",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 2)"
    },
    "Constant:COLLISION.GIANTS": {
        "prefix": "COLLISION.GIANTS",
        "body": "COLLISION.GIANTS",
        "description": "\n ※Description: collide with obstacles but not small obstacles\n ※Contributor: @lan (Value is: 16384)"
    },
    "Constant:UICOLOURS.BROWN_MEDIUM": {
        "prefix": "UICOLOURS.BROWN_MEDIUM",
        "body": "UICOLOURS.BROWN_MEDIUM",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RGB(107, 84, 58))"
    },
    "Constant:COLLISION.BOAT_LIMITS": {
        "prefix": "COLLISION.BOAT_LIMITS",
        "body": "COLLISION.BOAT_LIMITS",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 64)"
    },
    "Constant:COLLISION": {
        "prefix": "COLLISION",
        "body": "COLLISION",
        "description": "\n ※Description: keep up to date with COLLISION_GROUP in simconstants.h\n ※Contributor: @lan (Value is: 32)"
    },
    "Constant:FACING_UP": {
        "prefix": "FACING_UP",
        "body": "FACING_UP",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 1)"
    },
    "Constant:WEBCOLOURS.TURQUOISE": {
        "prefix": "WEBCOLOURS.TURQUOISE",
        "body": "WEBCOLOURS.TURQUOISE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RGB(64, 224, 208))"
    },
    "Constant:names.ancientfruit_nightvision": {
        "prefix": "names.ancientfruit_nightvision",
        "body": "names.ancientfruit_nightvision",
        "description": "\n ※Description: Nightberry\n ※Contributor: @lan \n ※Details: \n\tfruit：1\n\t"
    },
    "Constant:names.fig": {
        "prefix": "names.fig",
        "body": "names.fig",
        "description": "\n ※Description: Fig\n ※Contributor: @lan \n ※Details: \n\tfruit：0.5\n\t"
    },
    "Constant:NAUGHTY_VALUE.pigman": {
        "prefix": "NAUGHTY_VALUE.pigman",
        "body": "NAUGHTY_VALUE.pigman",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 3)"
    },
    "Constant:TECH.HERMITCRABSHOP_ONE": {
        "prefix": "TECH.HERMITCRABSHOP_ONE",
        "body": "TECH.HERMITCRABSHOP_ONE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:TECH.SHADOWFORGING_ONE": {
        "prefix": "TECH.SHADOWFORGING_ONE",
        "body": "TECH.SHADOWFORGING_ONE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:TECH.CARPENTRY_TWO": {
        "prefix": "TECH.CARPENTRY_TWO",
        "body": "TECH.CARPENTRY_TWO",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:TECH.SCULPTING_TWO": {
        "prefix": "TECH.SCULPTING_TWO",
        "body": "TECH.SCULPTING_TWO",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:GROUND.TILES_GLOW": {
        "prefix": "GROUND.TILES_GLOW",
        "body": "GROUND.TILES_GLOW",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 21)"
    },
    "Constant:FUELTYPE.ONEMANBAND": {
        "prefix": "FUELTYPE.ONEMANBAND",
        "body": "FUELTYPE.ONEMANBAND",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: ONEMANBAND)"
    },
    "Constant:TECH.SCIENCE_ONE": {
        "prefix": "TECH.SCIENCE_ONE",
        "body": "TECH.SCIENCE_ONE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:TECH.PIGOFFERING_THREE": {
        "prefix": "TECH.PIGOFFERING_THREE",
        "body": "TECH.PIGOFFERING_THREE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:GROUND.WALL_WOOD": {
        "prefix": "GROUND.WALL_WOOD",
        "body": "GROUND.WALL_WOOD",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 159)"
    },
    "Constant:TECH.PERDOFFERING_ONE": {
        "prefix": "TECH.PERDOFFERING_ONE",
        "body": "TECH.PERDOFFERING_ONE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:TECH.MASHTURFCRAFTING_TWO": {
        "prefix": "TECH.MASHTURFCRAFTING_TWO",
        "body": "TECH.MASHTURFCRAFTING_TWO",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:TECH.LUNARFORGING_TWO": {
        "prefix": "TECH.LUNARFORGING_TWO",
        "body": "TECH.LUNARFORGING_TWO",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:TECH.LUNARFORGING_ONE": {
        "prefix": "TECH.LUNARFORGING_ONE",
        "body": "TECH.LUNARFORGING_ONE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:TECH.TURFCRAFTING_TWO": {
        "prefix": "TECH.TURFCRAFTING_TWO",
        "body": "TECH.TURFCRAFTING_TWO",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:TECH.FOODPROCESSING_ONE": {
        "prefix": "TECH.FOODPROCESSING_ONE",
        "body": "TECH.FOODPROCESSING_ONE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:TECH.FISHING_TWO": {
        "prefix": "TECH.FISHING_TWO",
        "body": "TECH.FISHING_TWO",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:GROUND.FUNGUS": {
        "prefix": "GROUND.FUNGUS",
        "body": "GROUND.FUNGUS",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 14)"
    },
    "Constant:CONTROL_INVENTORY_UP": {
        "prefix": "CONTROL_INVENTORY_UP",
        "body": "CONTROL_INVENTORY_UP",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 49)"
    },
    "Constant:TECH.DRAGONOFFERING_THREE": {
        "prefix": "TECH.DRAGONOFFERING_THREE",
        "body": "TECH.DRAGONOFFERING_THREE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:ITEMTAG.TREASURE": {
        "prefix": "ITEMTAG.TREASURE",
        "body": "ITEMTAG.TREASURE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: treasure)"
    },
    "Constant:names.oceanfish_small_4_inv": {
        "prefix": "names.oceanfish_small_4_inv",
        "body": "names.oceanfish_small_4_inv",
        "description": "\n ※Description: Smolt Fry\n ※Contributor: @lan \n ※Details: \n\tmeat：0.5\n\tfish：0.5\n\t"
    },
    "Constant:TECH.CATCOONOFFERING_THREE": {
        "prefix": "TECH.CATCOONOFFERING_THREE",
        "body": "TECH.CATCOONOFFERING_THREE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:FOODTYPE": {
        "prefix": "FOODTYPE",
        "body": "FOODTYPE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: table)"
    },
    "Constant:GROUND.FAKE_GROUND": {
        "prefix": "GROUND.FAKE_GROUND",
        "body": "GROUND.FAKE_GROUND",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 200)"
    },
    "Constant:TECH.SEAFARING_ONE": {
        "prefix": "TECH.SEAFARING_ONE",
        "body": "TECH.SEAFARING_ONE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:TECH.CARNIVAL_HOSTSHOP_ONE": {
        "prefix": "TECH.CARNIVAL_HOSTSHOP_ONE",
        "body": "TECH.CARNIVAL_HOSTSHOP_ONE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:BGCOLOURS.GREY": {
        "prefix": "BGCOLOURS.GREY",
        "body": "BGCOLOURS.GREY",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RGB(75,  75,  75 ))"
    },
    "Constant:CONTROL_INVENTORY_USEONSCENE": {
        "prefix": "CONTROL_INVENTORY_USEONSCENE",
        "body": "CONTROL_INVENTORY_USEONSCENE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 53)"
    },
    "Constant:TECH.BEEFOFFERING_THREE": {
        "prefix": "TECH.BEEFOFFERING_THREE",
        "body": "TECH.BEEFOFFERING_THREE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:TECH.ANCIENT_TWO": {
        "prefix": "TECH.ANCIENT_TWO",
        "body": "TECH.ANCIENT_TWO",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:ROAD_PARAMETERS.MIN_EDGE_WIDTH": {
        "prefix": "ROAD_PARAMETERS.MIN_EDGE_WIDTH",
        "body": "ROAD_PARAMETERS.MIN_EDGE_WIDTH",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 0.5)"
    },
    "Constant:MATERIALS.WOOD": {
        "prefix": "MATERIALS.WOOD",
        "body": "MATERIALS.WOOD",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: wood)"
    },
    "Constant:RATE_SCALE.DECREASE_HIGH": {
        "prefix": "RATE_SCALE.DECREASE_HIGH",
        "body": "RATE_SCALE.DECREASE_HIGH",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 4)"
    },
    "Constant:WEBCOLOURS.RED": {
        "prefix": "WEBCOLOURS.RED",
        "body": "WEBCOLOURS.RED",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RGB(255, 0, 0))"
    },
    "Constant:FUELTYPE.BURNABLE": {
        "prefix": "FUELTYPE.BURNABLE",
        "body": "FUELTYPE.BURNABLE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: BURNABLE)"
    },
    "Constant:CONTROL_TOGGLE_SAY": {
        "prefix": "CONTROL_TOGGLE_SAY",
        "body": "CONTROL_TOGGLE_SAY",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 63)"
    },
    "Constant:BGCOLOURS.FULL": {
        "prefix": "BGCOLOURS.FULL",
        "body": "BGCOLOURS.FULL",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RGB(255, 255, 255))"
    },
    "Constant:PLAYERSTUNLOCK.OFTEN": {
        "prefix": "PLAYERSTUNLOCK.OFTEN",
        "body": "PLAYERSTUNLOCK.OFTEN",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 1)"
    },
    "Constant:PLAYERSTUNLOCK.NEVER": {
        "prefix": "PLAYERSTUNLOCK.NEVER",
        "body": "PLAYERSTUNLOCK.NEVER",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 4)"
    },
    "Constant:RATE_SCALE.INCREASE_LOW": {
        "prefix": "RATE_SCALE.INCREASE_LOW",
        "body": "RATE_SCALE.INCREASE_LOW",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 3)"
    },
    "Constant:GROUND.WALL_STONEEYE_GLOW": {
        "prefix": "GROUND.WALL_STONEEYE_GLOW",
        "body": "GROUND.WALL_STONEEYE_GLOW",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 163)"
    },
    "Constant:CONTROL_ROTATE_RIGHT": {
        "prefix": "CONTROL_ROTATE_RIGHT",
        "body": "CONTROL_ROTATE_RIGHT",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 12)"
    },
    "Constant:NODE_TYPE.BackgroundRoom": {
        "prefix": "NODE_TYPE.BackgroundRoom",
        "body": "NODE_TYPE.BackgroundRoom",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 6)"
    },
    "Constant:ORDERS.NONE": {
        "prefix": "ORDERS.NONE",
        "body": "ORDERS.NONE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 0)"
    },
    "Constant:ORDERS.ATTACK": {
        "prefix": "ORDERS.ATTACK",
        "body": "ORDERS.ATTACK",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 3)"
    },
    "Constant:GROUND.WOODFLOOR": {
        "prefix": "GROUND.WOODFLOOR",
        "body": "GROUND.WOODFLOOR",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 10)"
    },
    "Constant:ANIM_ORIENTATION.OnGround": {
        "prefix": "ANIM_ORIENTATION.OnGround",
        "body": "ANIM_ORIENTATION.OnGround",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 1)"
    },
    "Constant:ORDERS": {
        "prefix": "ORDERS",
        "body": "ORDERS",
        "description": "\n ※Description: TeamAttacker orders\n ※Contributor: @lan (Value is: table)"
    },
    "Constant:FACING_DOWN": {
        "prefix": "FACING_DOWN",
        "body": "FACING_DOWN",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 3)"
    },
    "Constant:TECH.CELESTIAL_ONE": {
        "prefix": "TECH.CELESTIAL_ONE",
        "body": "TECH.CELESTIAL_ONE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: UNKNOWN)"
    },
    "Constant:NODE_TYPE.Background": {
        "prefix": "NODE_TYPE.Background",
        "body": "NODE_TYPE.Background",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 2)"
    },
    "Constant:names.wobster_sheller_land": {
        "prefix": "names.wobster_sheller_land",
        "body": "names.wobster_sheller_land",
        "description": "\n ※Description: Wobster\n ※Contributor: @lan \n ※Details: \n\tmeat：1\n\tfish：1\n\t"
    },
    "Constant:CONTROL_TRADESTACK": {
        "prefix": "CONTROL_TRADESTACK",
        "body": "CONTROL_TRADESTACK",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 37)"
    },
    "Constant:names.asparagus": {
        "prefix": "names.asparagus",
        "body": "names.asparagus",
        "description": "\n ※Description: Asparagus\n ※Contributor: @lan \n ※Details: \n\tveggie：1\n\t"
    },
    "Constant:MOUSEBUTTON_LEFT": {
        "prefix": "MOUSEBUTTON_LEFT",
        "body": "MOUSEBUTTON_LEFT",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 1000)"
    },
    "Constant:ORDERS.WARN": {
        "prefix": "ORDERS.WARN",
        "body": "ORDERS.WARN",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 2)"
    },
    "Constant:MATERIALS.VITAE": {
        "prefix": "MATERIALS.VITAE",
        "body": "MATERIALS.VITAE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: vitae)"
    },
    "Constant:ANIM_SORT_ORDER_BELOW_GROUND.BOAT_LIP": {
        "prefix": "ANIM_SORT_ORDER_BELOW_GROUND.BOAT_LIP",
        "body": "ANIM_SORT_ORDER_BELOW_GROUND.BOAT_LIP",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 2)"
    },
    "Constant:MATERIALS.SHELL": {
        "prefix": "MATERIALS.SHELL",
        "body": "MATERIALS.SHELL",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: shell)"
    },
    "Constant:GROUND.QUAGMIRE_SOIL": {
        "prefix": "GROUND.QUAGMIRE_SOIL",
        "body": "GROUND.QUAGMIRE_SOIL",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 39)"
    },
    "Constant:SEASONS": {
        "prefix": "SEASONS",
        "body": "SEASONS",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: table)"
    },
    "Constant:LEVELTYPE.QUAGMIRE": {
        "prefix": "LEVELTYPE.QUAGMIRE",
        "body": "LEVELTYPE.QUAGMIRE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: QUAGMIRE)"
    },
    "Constant:GROUND.MUD": {
        "prefix": "GROUND.MUD",
        "body": "GROUND.MUD",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 17)"
    },
    "Constant:LEVELTYPE.LAVAARENA": {
        "prefix": "LEVELTYPE.LAVAARENA",
        "body": "LEVELTYPE.LAVAARENA",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: LAVAARENA)"
    },
    "Constant:ITEMTAG.FX": {
        "prefix": "ITEMTAG.FX",
        "body": "ITEMTAG.FX",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: FX)"
    },
    "Constant:HOUNDWARNINGTYPE.LVL4": {
        "prefix": "HOUNDWARNINGTYPE.LVL4",
        "body": "HOUNDWARNINGTYPE.LVL4",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 3)"
    },
    "Constant:HOUNDWARNINGTYPE.LVL2_WORM": {
        "prefix": "HOUNDWARNINGTYPE.LVL2_WORM",
        "body": "HOUNDWARNINGTYPE.LVL2_WORM",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 5)"
    },
    "Constant:HOUNDWARNINGTYPE.LVL2": {
        "prefix": "HOUNDWARNINGTYPE.LVL2",
        "body": "HOUNDWARNINGTYPE.LVL2",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 1)"
    },
    "Constant:CONTROL_INV_8": {
        "prefix": "CONTROL_INV_8",
        "body": "CONTROL_INV_8",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 22)"
    },
    "Constant:GROUND.WALL_HUNESTONE_GLOW": {
        "prefix": "GROUND.WALL_HUNESTONE_GLOW",
        "body": "GROUND.WALL_HUNESTONE_GLOW",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 161)"
    },
    "Constant:NAUGHTY_VALUE": {
        "prefix": "NAUGHTY_VALUE",
        "body": "NAUGHTY_VALUE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: table)"
    },
    "Constant:GROUND.WALL_CAVE": {
        "prefix": "GROUND.WALL_CAVE",
        "body": "GROUND.WALL_CAVE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 154)"
    },
    "Constant:FOODTYPE.VEGGIE": {
        "prefix": "FOODTYPE.VEGGIE",
        "body": "FOODTYPE.VEGGIE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: VEGGIE)"
    },
    "Constant:MATERIALS.SCULPTURE": {
        "prefix": "MATERIALS.SCULPTURE",
        "body": "MATERIALS.SCULPTURE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: sculpture)"
    },
    "Constant:GROUND.OCEAN_COASTAL": {
        "prefix": "GROUND.OCEAN_COASTAL",
        "body": "GROUND.OCEAN_COASTAL",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 201)"
    },
    "Constant:GROUND.METEOR": {
        "prefix": "GROUND.METEOR",
        "body": "GROUND.METEOR",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 43)"
    },
    "Constant:GROUND.FUNGUSMOON": {
        "prefix": "GROUND.FUNGUSMOON",
        "body": "GROUND.FUNGUSMOON",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 46)"
    },
    "Constant:GROUND.FUNGUSRED": {
        "prefix": "GROUND.FUNGUSRED",
        "body": "GROUND.FUNGUSRED",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 24)"
    },
    "Constant:GROUND.IMPASSABLE": {
        "prefix": "GROUND.IMPASSABLE",
        "body": "GROUND.IMPASSABLE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 1)"
    },
    "Constant:CONTROL_TOGGLE_WHISPER": {
        "prefix": "CONTROL_TOGGLE_WHISPER",
        "body": "CONTROL_TOGGLE_WHISPER",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 64)"
    },
    "Constant:FACING_UPLEFT": {
        "prefix": "FACING_UPLEFT",
        "body": "FACING_UPLEFT",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 5)"
    },
    "Constant:MOVE_RIGHT": {
        "prefix": "MOVE_RIGHT",
        "body": "MOVE_RIGHT",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 4)"
    },
    "Constant:COLLISION.GROUND": {
        "prefix": "COLLISION.GROUND",
        "body": "COLLISION.GROUND",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 32)"
    },
    "Constant:GROUND.DECIDUOUS": {
        "prefix": "GROUND.DECIDUOUS",
        "body": "GROUND.DECIDUOUS",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 30)"
    },
    "Constant:CONTROL_INVENTORY_RIGHT": {
        "prefix": "CONTROL_INVENTORY_RIGHT",
        "body": "CONTROL_INVENTORY_RIGHT",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 48)"
    },
    "Constant:CONTROL_TOGGLE_DEBUGRENDER": {
        "prefix": "CONTROL_TOGGLE_DEBUGRENDER",
        "body": "CONTROL_TOGGLE_DEBUGRENDER",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 44)"
    },
    "Constant:CONTROL_TARGET_LOCK": {
        "prefix": "CONTROL_TARGET_LOCK",
        "body": "CONTROL_TARGET_LOCK",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 69)"
    },
    "Constant:CONTROL_OPEN_COMMAND_WHEEL": {
        "prefix": "CONTROL_OPEN_COMMAND_WHEEL",
        "body": "CONTROL_OPEN_COMMAND_WHEEL",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 87)"
    },
    "Constant:CONTROL_NEXTVALUE": {
        "prefix": "CONTROL_NEXTVALUE",
        "body": "CONTROL_NEXTVALUE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 34)"
    },
    "Constant:CONTROL_CRAFTING_PINLEFT": {
        "prefix": "CONTROL_CRAFTING_PINLEFT",
        "body": "CONTROL_CRAFTING_PINLEFT",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 75)"
    },
    "Constant:CONTROL_MOVE_LEFT": {
        "prefix": "CONTROL_MOVE_LEFT",
        "body": "CONTROL_MOVE_LEFT",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 7)"
    },
    "Constant:GROUND.WALL_MUD": {
        "prefix": "GROUND.WALL_MUD",
        "body": "GROUND.WALL_MUD",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 157)"
    },
    "Constant:CONTROL_INVENTORY_USEONSELF": {
        "prefix": "CONTROL_INVENTORY_USEONSELF",
        "body": "CONTROL_INVENTORY_USEONSELF",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 52)"
    },
    "Constant:CONTROL_INVENTORY_DROP": {
        "prefix": "CONTROL_INVENTORY_DROP",
        "body": "CONTROL_INVENTORY_DROP",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 54)"
    },
    "Constant:CONTROL_CONTROLLER_ALTACTION": {
        "prefix": "CONTROL_CONTROLLER_ALTACTION",
        "body": "CONTROL_CONTROLLER_ALTACTION",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: 58)"
    },
    "Constant:BLENDMODE": {
        "prefix": "BLENDMODE",
        "body": "BLENDMODE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: table)"
    },
    "Constant:BGCOLOURS.PURPLE": {
        "prefix": "BGCOLOURS.PURPLE",
        "body": "BGCOLOURS.PURPLE",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @lan (Value is: RGB(184, 87,  198))"
    },
    "Inst Method:HasTag:实体是否有某个标签": {
        "prefix": "HasTag",
        "body": "HasTag(${1:tag})",
        "description": " ※Params: \n   (tag)<string>[标签] \n ※Description: 实体是否有某个标签\n ※Contributor: @lan"
    },
    "Inst Method:GetDisplayName:": {
        "prefix": "GetDisplayName",
        "body": "GetDisplayName()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Inst Method:GetComponentName:": {
        "prefix": "GetComponentName",
        "body": "GetComponentName(${1:cmp})",
        "description": " ※Params: \n   (cmp)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:SetGroundTargetBlockerRadius:": {
        "prefix": "SetGroundTargetBlockerRadius",
        "body": "SetGroundTargetBlockerRadius(${1:radius})",
        "description": " ※Params: \n   (radius)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:StopAllWatchingWorldStates:": {
        "prefix": "StopAllWatchingWorldStates",
        "body": "StopAllWatchingWorldStates()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Inst Method:IsValid:判断实体是否有效": {
        "prefix": "IsValid",
        "body": "IsValid()",
        "description": "\n ※Returns: <boolean>[实体是有效的] \n ※Description: 判断实体是否有效\n ※Contributor: @lan(非常非常重要且常用的判断,无论是扫实体,还是判断对象存活,等等都应该加上这个判断)"
    },
    "Inst Method:Hide:": {
        "prefix": "Hide",
        "body": "Hide()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Inst Method:AddTag:": {
        "prefix": "AddTag",
        "body": "AddTag(${1:tag})",
        "description": " ※Params: \n   (tag)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:GetRotation:": {
        "prefix": "GetRotation",
        "body": "GetRotation()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Inst Method:GetBufferedAction:": {
        "prefix": "GetBufferedAction",
        "body": "GetBufferedAction()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Inst Method:ForceOutOfLimbo:": {
        "prefix": "ForceOutOfLimbo",
        "body": "ForceOutOfLimbo(${1:state})",
        "description": " ※Params: \n   (state)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:IsLightGreaterThan:": {
        "prefix": "IsLightGreaterThan",
        "body": "IsLightGreaterThan(${1:lightThresh})",
        "description": " ※Params: \n   (lightThresh)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:SetStateGraph:": {
        "prefix": "SetStateGraph",
        "body": "SetStateGraph(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:HasTags:实体是否有这些标签": {
        "prefix": "HasTags",
        "body": "HasTags(${1:...})",
        "description": " ※Params: \n   (...)<string>[标签] \n ※Description: 实体是否有这些标签\n ※Contributor: @lan"
    },
    "Inst Method:GetDistanceSqToInst:": {
        "prefix": "GetDistanceSqToInst",
        "body": "GetDistanceSqToInst(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:GetDebugString:": {
        "prefix": "GetDebugString",
        "body": "GetDebugString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Inst Method:SetBrain:": {
        "prefix": "SetBrain",
        "body": "SetBrain(${1:brainfn})",
        "description": " ※Params: \n   (brainfn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:SetPrefabName:": {
        "prefix": "SetPrefabName",
        "body": "SetPrefabName(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:IsAcidSizzling:": {
        "prefix": "IsAcidSizzling",
        "body": "IsAcidSizzling()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Inst Method:AddDebuff:": {
        "prefix": "AddDebuff",
        "body": "AddDebuff(${1:name},${2:prefab},${3:data},${4:skip_test},${5:pre_buff_fn})",
        "description": " ※Params: \n   (name)<>[] \n   (prefab)<>[] \n   (data)<>[] \n   (skip_test)<>[] \n   (pre_buff_fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:GetDebuff:": {
        "prefix": "GetDebuff",
        "body": "GetDebuff(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:HasDebuff:": {
        "prefix": "HasDebuff",
        "body": "HasDebuff(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:RestartBrain:": {
        "prefix": "RestartBrain",
        "body": "RestartBrain()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Inst Method:DebuffsEnabled:": {
        "prefix": "DebuffsEnabled",
        "body": "DebuffsEnabled()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Inst Method:FacePoint:": {
        "prefix": "FacePoint",
        "body": "FacePoint(${1:x},${2:y},${3:z})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:GetClientSideInventoryImageOverride:": {
        "prefix": "GetClientSideInventoryImageOverride",
        "body": "GetClientSideInventoryImageOverride(${1:imagenamehash})",
        "description": " ※Params: \n   (imagenamehash)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:DoPeriodicTask:周期定时器": {
        "prefix": "DoPeriodicTask",
        "body": "DoPeriodicTask(${1:time},${2:fn},${3:initialdelay},${4:...})",
        "description": " ※Params: \n   (time)<number>[间隔/s] \n   (fn)<function>[] \n   (initialdelay)<number>[计时器创建多少秒后执行,默认为1] \n   (...)<>[] \n ※Description: 周期定时器\n ※Contributor: @lan"
    },
    "Inst Method:DoPeriodicTask:周期定时器+i": {
        "prefix": "DoPeriodicTask+i",
        "body": "DoPeriodicTask(${1:1},function()\n\t$2\nend)",
        "description": " ※Params: \n   (time)<number>[间隔/s] \n   (fn)<function>[] \n   (initialdelay)<number>[计时器创建多少秒后执行,默认为1] \n   (...)<>[] \n ※Description: 周期定时器\n ※Contributor: @lan\n ※Inspiration Mode: 周期定时器"
    },
    "Inst Method:RemoveTag:": {
        "prefix": "RemoveTag",
        "body": "RemoveTag(${1:tag})",
        "description": " ※Params: \n   (tag)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:GetSkinName:": {
        "prefix": "GetSkinName",
        "body": "GetSkinName()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Inst Method:__tostring:": {
        "prefix": "__tostring",
        "body": "__tostring()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Inst Method:StackableSkinHack:": {
        "prefix": "StackableSkinHack",
        "body": "StackableSkinHack(${1:target})",
        "description": " ※Params: \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:SetClientSideInventoryImageOverrideFlag:": {
        "prefix": "SetClientSideInventoryImageOverrideFlag",
        "body": "SetClientSideInventoryImageOverrideFlag(${1:name},${2:value})",
        "description": " ※Params: \n   (name)<>[] \n   (value)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:OnBuilt:": {
        "prefix": "OnBuilt",
        "body": "OnBuilt(${1:builder})",
        "description": " ※Params: \n   (builder)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:HasClientSideInventoryImageOverrides:": {
        "prefix": "HasClientSideInventoryImageOverrides",
        "body": "HasClientSideInventoryImageOverrides()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Inst Method:SetClientSideInventoryImageOverride:": {
        "prefix": "SetClientSideInventoryImageOverride",
        "body": "SetClientSideInventoryImageOverride(${1:flagname},${2:srcinventoryimage},${3:destinventoryimage},${4:destatlas})",
        "description": " ※Params: \n   (flagname)<>[] \n   (srcinventoryimage)<>[] \n   (destinventoryimage)<>[] \n   (destatlas)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:Show:": {
        "prefix": "Show",
        "body": "Show()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Inst Method:HasOneOfTags:实体是否有其中一个标签": {
        "prefix": "HasOneOfTags",
        "body": "HasOneOfTags(${1:...})",
        "description": " ※Params: \n   (...)<string>[标签] \n ※Description: 实体是否有其中一个标签\n ※Contributor: @lan"
    },
    "Inst Method:LongUpdate:": {
        "prefix": "LongUpdate",
        "body": "LongUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:SetInherentSceneAltAction:": {
        "prefix": "SetInherentSceneAltAction",
        "body": "SetInherentSceneAltAction(${1:action})",
        "description": " ※Params: \n   (action)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:SetInherentSceneAction:": {
        "prefix": "SetInherentSceneAction",
        "body": "SetInherentSceneAction(${1:action})",
        "description": " ※Params: \n   (action)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:DoStaticTaskInTime:": {
        "prefix": "DoStaticTaskInTime",
        "body": "DoStaticTaskInTime(${1:time},${2:fn},${3:...})",
        "description": " ※Params: \n   (time)<>[] \n   (fn)<>[] \n   (...)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:TimeRemainingInTask:": {
        "prefix": "TimeRemainingInTask",
        "body": "TimeRemainingInTask(${1:taskinfo})",
        "description": " ※Params: \n   (taskinfo)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:SetDeploySmartRadius:": {
        "prefix": "SetDeploySmartRadius",
        "body": "SetDeploySmartRadius(${1:radius})",
        "description": " ※Params: \n   (radius)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:StartThread:": {
        "prefix": "StartThread",
        "body": "StartThread(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:PushEvent:推送事件": {
        "prefix": "PushEvent",
        "body": "PushEvent(${1:event},${2:data})",
        "description": " ※Params: \n   (event)<string>[推送的事件] \n   (data)<table>[推送时传入的表,可不填] \n ※Description: 推送事件\n ※Contributor: @lan"
    },
    "Inst Method:GetPersistData:": {
        "prefix": "GetPersistData",
        "body": "GetPersistData()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Inst Method:PutBackOnGround:": {
        "prefix": "PutBackOnGround",
        "body": "PutBackOnGround(${1:radius})",
        "description": " ※Params: \n   (radius)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:StartWallUpdatingComponent:": {
        "prefix": "StartWallUpdatingComponent",
        "body": "StartWallUpdatingComponent(${1:cmp})",
        "description": " ※Params: \n   (cmp)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:IsOnValidGround:": {
        "prefix": "IsOnValidGround",
        "body": "IsOnValidGround()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Inst Method:GetCurrentPlatform:": {
        "prefix": "GetCurrentPlatform",
        "body": "GetCurrentPlatform()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Inst Method:IsOnOcean:": {
        "prefix": "IsOnOcean",
        "body": "IsOnOcean(${1:allow_boats})",
        "description": " ※Params: \n   (allow_boats)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:IsNearPlayer:": {
        "prefix": "IsNearPlayer",
        "body": "IsNearPlayer(${1:range},${2:isalive})",
        "description": " ※Params: \n   (range)<>[] \n   (isalive)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:RemovePlatformFollower:": {
        "prefix": "RemovePlatformFollower",
        "body": "RemovePlatformFollower(${1:child})",
        "description": " ※Params: \n   (child)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:PushBufferedAction:": {
        "prefix": "PushBufferedAction",
        "body": "PushBufferedAction(${1:bufferedaction})",
        "description": " ※Params: \n   (bufferedaction)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:AddComponent:实体添加组件": {
        "prefix": "AddComponent",
        "body": "AddComponent(${1:name})",
        "description": " ※Params: \n   (name)<string>[组件名] \n ※Description: 实体添加组件\n ※Contributor: @lan"
    },
    "Inst Method:DoStaticPeriodicTask:": {
        "prefix": "DoStaticPeriodicTask",
        "body": "DoStaticPeriodicTask(${1:time},${2:fn},${3:initialdelay},${4:...})",
        "description": " ※Params: \n   (time)<>[] \n   (fn)<>[] \n   (initialdelay)<>[] \n   (...)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:PreviewBufferedAction:": {
        "prefix": "PreviewBufferedAction",
        "body": "PreviewBufferedAction(${1:bufferedaction})",
        "description": " ※Params: \n   (bufferedaction)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:RemoveInherentAction:": {
        "prefix": "RemoveInherentAction",
        "body": "RemoveInherentAction(${1:act})",
        "description": " ※Params: \n   (act)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:IsAsleep:": {
        "prefix": "IsAsleep",
        "body": "IsAsleep()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Inst Method:GetAdjectivedName:": {
        "prefix": "GetAdjectivedName",
        "body": "GetAdjectivedName()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Inst Method:GetBrainString:": {
        "prefix": "GetBrainString",
        "body": "GetBrainString()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Inst Method:PerformBufferedAction:": {
        "prefix": "PerformBufferedAction",
        "body": "PerformBufferedAction()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Inst Method:GetPositionAdjacentTo:": {
        "prefix": "GetPositionAdjacentTo",
        "body": "GetPositionAdjacentTo(${1:target},${2:distance})",
        "description": " ※Params: \n   (target)<>[] \n   (distance)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:OnUsedAsItem:": {
        "prefix": "OnUsedAsItem",
        "body": "OnUsedAsItem(${1:action},${2:doer},${3:target})",
        "description": " ※Params: \n   (action)<>[] \n   (doer)<>[] \n   (target)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:ClearBufferedAction:": {
        "prefix": "ClearBufferedAction",
        "body": "ClearBufferedAction()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Inst Method:CanDoAction:": {
        "prefix": "CanDoAction",
        "body": "CanDoAction(${1:action})",
        "description": " ※Params: \n   (action)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:ResumeTask:": {
        "prefix": "ResumeTask",
        "body": "ResumeTask(${1:time},${2:fn},${3:...})",
        "description": " ※Params: \n   (time)<>[] \n   (fn)<>[] \n   (...)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:IsInLimbo:": {
        "prefix": "IsInLimbo",
        "body": "IsInLimbo()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Inst Method:GetSkinBuild:": {
        "prefix": "GetSkinBuild",
        "body": "GetSkinBuild()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Inst Method:CanInteractWith:": {
        "prefix": "CanInteractWith",
        "body": "CanInteractWith(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:Remove:实体移除": {
        "prefix": "Remove",
        "body": "Remove()",
        "description": "\n ※Description: 实体移除\n ※Contributor: @lan"
    },
    "Inst Method:RunScript:": {
        "prefix": "RunScript",
        "body": "RunScript(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:PerformPreviewBufferedAction:": {
        "prefix": "PerformPreviewBufferedAction",
        "body": "PerformPreviewBufferedAction()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Inst Method:IsOnPassablePoint:": {
        "prefix": "IsOnPassablePoint",
        "body": "IsOnPassablePoint(${1:include_water},${2:floating_platforms_are_not_passable})",
        "description": " ※Params: \n   (include_water)<>[] \n   (floating_platforms_are_not_passable)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:SetPersistData:": {
        "prefix": "SetPersistData",
        "body": "SetPersistData(${1:data},${2:newents})",
        "description": " ※Params: \n   (data)<>[] \n   (newents)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:GetTaskInfo:": {
        "prefix": "GetTaskInfo",
        "body": "GetTaskInfo(${1:time})",
        "description": " ※Params: \n   (time)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:ReturnToScene:": {
        "prefix": "ReturnToScene",
        "body": "ReturnToScene()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Inst Method:PushEventInTime:": {
        "prefix": "PushEventInTime",
        "body": "PushEventInTime(${1:time},${2:eventname},${3:data})",
        "description": " ※Params: \n   (time)<>[] \n   (eventname)<>[] \n   (data)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:GetPlatformFollowers:": {
        "prefix": "GetPlatformFollowers",
        "body": "GetPlatformFollowers()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Inst Method:SetDeployExtraSpacing:": {
        "prefix": "SetDeployExtraSpacing",
        "body": "SetDeployExtraSpacing(${1:spacing})",
        "description": " ※Params: \n   (spacing)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:GetBasicDisplayName:": {
        "prefix": "GetBasicDisplayName",
        "body": "GetBasicDisplayName()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Inst Method:DoTaskInTime:倒计时": {
        "prefix": "DoTaskInTime",
        "body": "DoTaskInTime(${1:time},${2:fn},${3:...})",
        "description": " ※Params: \n   (time)<number>[倒计时多少秒] \n   (fn)<function>[] \n   (...)<>[] \n ※Description: 倒计时\n ※Contributor: @lan"
    },
    "Inst Method:DoTaskInTime:倒计时+i": {
        "prefix": "DoTaskInTime+i",
        "body": "DoTaskInTime(${1:1},function()\n\t$2\nend)",
        "description": " ※Params: \n   (time)<number>[倒计时多少秒] \n   (fn)<function>[] \n   (...)<>[] \n ※Description: 倒计时\n ※Contributor: @lan\n ※Inspiration Mode: 倒计时"
    },
    "Inst Method:GetAdjective:": {
        "prefix": "GetAdjective",
        "body": "GetAdjective()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Inst Method:RemoveChild:": {
        "prefix": "RemoveChild",
        "body": "RemoveChild(${1:child})",
        "description": " ※Params: \n   (child)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:CancelAllPendingTasks:": {
        "prefix": "CancelAllPendingTasks",
        "body": "CancelAllPendingTasks()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Inst Method:FaceAwayFromPoint:": {
        "prefix": "FaceAwayFromPoint",
        "body": "FaceAwayFromPoint(${1:dest},${2:force})",
        "description": " ※Params: \n   (dest)<>[] \n   (force)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:GetPosition:": {
        "prefix": "GetPosition",
        "body": "GetPosition()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Inst Method:GetDistanceSqToClosestPlayer:": {
        "prefix": "GetDistanceSqToClosestPlayer",
        "body": "GetDistanceSqToClosestPlayer(${1:isalive})",
        "description": " ※Params: \n   (isalive)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:GetNearestPlayer:": {
        "prefix": "GetNearestPlayer",
        "body": "GetNearestPlayer(${1:isalive})",
        "description": " ※Params: \n   (isalive)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:GetSaveRecord:": {
        "prefix": "GetSaveRecord",
        "body": "GetSaveRecord()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Inst Method:GetDistanceSqToPoint:": {
        "prefix": "GetDistanceSqToPoint",
        "body": "GetDistanceSqToPoint(${1:x},${2:y},${3:z})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:IsNear:": {
        "prefix": "IsNear",
        "body": "IsNear(${1:otherinst},${2:dist})",
        "description": " ※Params: \n   (otherinst)<>[] \n   (dist)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:WatchWorldState:": {
        "prefix": "WatchWorldState",
        "body": "WatchWorldState(${1:var},${2:fn})",
        "description": " ※Params: \n   (var)<>[] \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:GetTimeAlive:": {
        "prefix": "GetTimeAlive",
        "body": "GetTimeAlive()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Inst Method:StopUpdatingComponent_Deferred:": {
        "prefix": "StopUpdatingComponent_Deferred",
        "body": "StopUpdatingComponent_Deferred(${1:cmp})",
        "description": " ※Params: \n   (cmp)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:GetAngleToPoint:": {
        "prefix": "GetAngleToPoint",
        "body": "GetAngleToPoint(${1:x},${2:y},${3:z})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:RemoveAllEventCallbacks:移除所有监听": {
        "prefix": "RemoveAllEventCallbacks",
        "body": "RemoveAllEventCallbacks()",
        "description": "\n ※Description: 移除所有监听\n ※Contributor: @lan"
    },
    "Inst Method:AddChild:": {
        "prefix": "AddChild",
        "body": "AddChild(${1:child})",
        "description": " ※Params: \n   (child)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:ClearStateGraph:": {
        "prefix": "ClearStateGraph",
        "body": "ClearStateGraph()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Inst Method:GetPhysicsRadius:": {
        "prefix": "GetPhysicsRadius",
        "body": "GetPhysicsRadius(${1:default})",
        "description": " ※Params: \n   (default)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:SetPhysicsRadiusOverride:": {
        "prefix": "SetPhysicsRadiusOverride",
        "body": "SetPhysicsRadiusOverride(${1:radius})",
        "description": " ※Params: \n   (radius)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:LoadPostPass:": {
        "prefix": "LoadPostPass",
        "body": "LoadPostPass(${1:newents},${2:savedata})",
        "description": " ※Params: \n   (newents)<>[] \n   (savedata)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:StopWatchingWorldState:": {
        "prefix": "StopWatchingWorldState",
        "body": "StopWatchingWorldState(${1:var},${2:fn})",
        "description": " ※Params: \n   (var)<>[] \n   (fn)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:ForceFacePoint:": {
        "prefix": "ForceFacePoint",
        "body": "ForceFacePoint(${1:x},${2:y},${3:z})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:RemoveEventCallback:移除监听器": {
        "prefix": "RemoveEventCallback",
        "body": "RemoveEventCallback(${1:event},${2:fn},${3:source})",
        "description": " ※Params: \n   (event)<string>[事件] \n   (fn)<>[函数名] \n   (source)<>[移除的对象,不填则是自身] \n ※Description: 移除监听器\n ※Contributor: @lan(显而易见,如果ListenForEvent中使用的是匿名函数,则无法移除)"
    },
    "Inst Method:ListenForEvent:监听事件": {
        "prefix": "ListenForEvent",
        "body": "ListenForEvent(${1:event},${2:fn},${3:source})",
        "description": " ※Params: \n   (event)<string>[事件] \n   (fn)<function>[]\n      {Params:\n         (inst)<>[被监听对象] \n         (data)<table>[传递过来的表]} \n   (source)<>[监听对象,不填则监听自身] \n ※Description: 监听事件\n ※Contributor: @lan"
    },
    "Inst Method:RemoveDebuff:": {
        "prefix": "RemoveDebuff",
        "body": "RemoveDebuff(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:StopBrain:": {
        "prefix": "StopBrain",
        "body": "StopBrain()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Inst Method:KillTasks:": {
        "prefix": "KillTasks",
        "body": "KillTasks()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Inst Method:SpawnChild:": {
        "prefix": "SpawnChild",
        "body": "SpawnChild(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:RemoveComponent:实体移除组件": {
        "prefix": "RemoveComponent",
        "body": "RemoveComponent(${1:name})",
        "description": " ※Params: \n   (name)<string>[组件名] \n ※Description: 实体移除组件\n ※Contributor: @lan"
    },
    "Inst Method:StopUpdatingComponent:": {
        "prefix": "StopUpdatingComponent",
        "body": "StopUpdatingComponent(${1:cmp})",
        "description": " ※Params: \n   (cmp)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:AddPlatformFollower:": {
        "prefix": "AddPlatformFollower",
        "body": "AddPlatformFollower(${1:child})",
        "description": " ※Params: \n   (child)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:GetBoatIntersectingPhysics:": {
        "prefix": "GetBoatIntersectingPhysics",
        "body": "GetBoatIntersectingPhysics()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Inst Method:SetTerraformExtraSpacing:": {
        "prefix": "SetTerraformExtraSpacing",
        "body": "SetTerraformExtraSpacing(${1:spacing})",
        "description": " ※Params: \n   (spacing)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:RemoveFromScene:": {
        "prefix": "RemoveFromScene",
        "body": "RemoveFromScene()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Inst Method:SetPrefabNameOverride:": {
        "prefix": "SetPrefabNameOverride",
        "body": "SetPrefabNameOverride(${1:nameoverride})",
        "description": " ※Params: \n   (nameoverride)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:GetIsWet:": {
        "prefix": "GetIsWet",
        "body": "GetIsWet()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Inst Method:IsInLight:": {
        "prefix": "IsInLight",
        "body": "IsInLight()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Inst Method:AddOrRemoveTag:": {
        "prefix": "AddOrRemoveTag",
        "body": "AddOrRemoveTag(${1:tag},${2:condition})",
        "description": " ※Params: \n   (tag)<>[] \n   (condition)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:StopWallUpdatingComponent:": {
        "prefix": "StopWallUpdatingComponent",
        "body": "StopWallUpdatingComponent(${1:cmp})",
        "description": " ※Params: \n   (cmp)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:GetCurrentTileType:": {
        "prefix": "GetCurrentTileType",
        "body": "GetCurrentTileType()",
        "description": "\n ※Description: \n ※Contributor: @"
    },
    "Inst Method:StartUpdatingComponent:": {
        "prefix": "StartUpdatingComponent",
        "body": "StartUpdatingComponent(${1:cmp},${2:do_static_update})",
        "description": " ※Params: \n   (cmp)<>[] \n   (do_static_update)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Inst Method:AddInherentAction:": {
        "prefix": "AddInherentAction",
        "body": "AddInherentAction(${1:act})",
        "description": " ※Params: \n   (act)<>[] \n ※Description: \n ※Contributor: @"
    },
    "Global.Vec3Util_Dot:UNKNOWN": {
        "prefix": "Vec3Util_Dot",
        "body": "Vec3Util_Dot(${1:p1_x},${2:p1_y},${3:p1_z},${4:p2_x},${5:p2_y},${6:p2_z})",
        "description": " ※Params: \n   (p1_x)<>[] \n   (p1_y)<>[] \n   (p1_z)<>[] \n   (p2_x)<>[] \n   (p2_y)<>[] \n   (p2_z)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/vec3util 所在行数: 31"
    },
    "Global.LoadScript:UNKNOWN": {
        "prefix": "LoadScript",
        "body": "LoadScript(${1:filename})",
        "description": " ※Params: \n   (filename)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 566"
    },
    "Global.HasHeirloomItem:UNKNOWN": {
        "prefix": "HasHeirloomItem",
        "body": "HasHeirloomItem(${1:herocharacter})",
        "description": " ※Params: \n   (herocharacter)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1205"
    },
    "Global.GetActiveFestivalEventAchievementStrings:UNKNOWN": {
        "prefix": "GetActiveFestivalEventAchievementStrings",
        "body": "GetActiveFestivalEventAchievementStrings(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/constants 所在行数: 1060"
    },
    "Global.WaitingForPurchaseState:UNKNOWN": {
        "prefix": "WaitingForPurchaseState",
        "body": "WaitingForPurchaseState(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/upsell 所在行数: 23"
    },
    "Global.d_wintersfeast:UNKNOWN": {
        "prefix": "d_wintersfeast",
        "body": "d_wintersfeast(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 727"
    },
    "Global.MakeHauntableLaunchAndSmash:UNKNOWN": {
        "prefix": "MakeHauntableLaunchAndSmash",
        "body": "MakeHauntableLaunchAndSmash(${1:inst},${2:launch_chance},${3:smash_chance},${4:speed},${5:cooldown},${6:launch_haunt_value},${7:smash_haunt_value})",
        "description": " ※Params: \n   (inst)<>[] \n   (launch_chance)<>[] \n   (smash_chance)<>[] \n   (speed)<>[] \n   (cooldown)<>[] \n   (launch_haunt_value)<>[] \n   (smash_haunt_value)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 853"
    },
    "Global.PreloadSounds:UNKNOWN": {
        "prefix": "PreloadSounds",
        "body": "PreloadSounds(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/preloadsounds 所在行数: 236"
    },
    "Global.eprint:UNKNOWN": {
        "prefix": "eprint",
        "body": "eprint(${1:inst},${2:...})",
        "description": " ※Params: \n   (inst)<>[] \n   (...)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugtools 所在行数: 295"
    },
    "Global.GetEntityDisplayName:UNKNOWN": {
        "prefix": "GetEntityDisplayName",
        "body": "GetEntityDisplayName(${1:guid})",
        "description": " ※Params: \n   (guid)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 527"
    },
    "Global.MakeSmallPerishableCreature:UNKNOWN": {
        "prefix": "MakeSmallPerishableCreature",
        "body": "MakeSmallPerishableCreature(${1:inst},${2:starvetime},${3:oninventory},${4:ondropped})",
        "description": " ※Params: \n   (inst)<>[] \n   (starvetime)<>[] \n   (oninventory)<>[] \n   (ondropped)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 776"
    },
    "Global.d_madsciencemats:UNKNOWN": {
        "prefix": "d_madsciencemats",
        "body": "d_madsciencemats(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 756"
    },
    "Global.FindClosestPlayerToInst:UNKNOWN": {
        "prefix": "FindClosestPlayerToInst",
        "body": "FindClosestPlayerToInst(${1:inst},${2:range},${3:isalive})",
        "description": " ※Params: \n   (inst)<>[] \n   (range)<>[] \n   (isalive)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/simutil 所在行数: 86"
    },
    "Global.DecayCharlieResidueIfItExists:UNKNOWN": {
        "prefix": "DecayCharlieResidueIfItExists",
        "body": "DecayCharlieResidueIfItExists(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/componentutil 所在行数: 101"
    },
    "Global.glommerflower_init_fn:UNKNOWN": {
        "prefix": "glommerflower_init_fn",
        "body": "glommerflower_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1236"
    },
    "Global.ProxyClass:UNKNOWN": {
        "prefix": "ProxyClass",
        "body": "ProxyClass(${1:class},${2:ctor})",
        "description": " ※Params: \n   (class)<>[] \n   (ctor)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/entityscriptproxy 所在行数: 15"
    },
    "Global.FindLandBetweenPoints:UNKNOWN": {
        "prefix": "FindLandBetweenPoints",
        "body": "FindLandBetweenPoints(${1:p0x},${2:p0y},${3:p1x},${4:p1y})",
        "description": " ※Params: \n   (p0x)<>[] \n   (p0y)<>[] \n   (p1x)<>[] \n   (p1y)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/ocean_util 所在行数: 78"
    },
    "Global.Networking_RollbackMetricsEvent:UNKNOWN": {
        "prefix": "Networking_RollbackMetricsEvent",
        "body": "Networking_RollbackMetricsEvent(${1:caller})",
        "description": " ※Params: \n   (caller)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 115"
    },
    "Global.c_remove:UNKNOWN": {
        "prefix": "c_remove",
        "body": "c_remove(${1:entity})",
        "description": " ※Params: \n   (entity)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 1225"
    },
    "Global.checknumber:UNKNOWN": {
        "prefix": "checknumber",
        "body": "checknumber(${1:val})",
        "description": " ※Params: \n   (val)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networkclientrpc 所在行数: 5"
    },
    "Global.LoadKlumpFile:UNKNOWN": {
        "prefix": "LoadKlumpFile",
        "body": "LoadKlumpFile(${1:klump_file},${2:cipher},${3:suppress_print})",
        "description": " ※Params: \n   (klump_file)<>[] \n   (cipher)<>[] \n   (suppress_print)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/klump 所在行数: 47"
    },
    "Global.winch_clear_fn:UNKNOWN": {
        "prefix": "winch_clear_fn",
        "body": "winch_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 266"
    },
    "Global.d_ground:UNKNOWN": {
        "prefix": "d_ground",
        "body": "d_ground(${1:ground},${2:pt})",
        "description": " ※Params: \n   (ground)<>[] \n   (pt)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 874"
    },
    "Global.ExtendedArray:UNKNOWN": {
        "prefix": "ExtendedArray",
        "body": "ExtendedArray(${1:orig},${2:addition},${3:mult})",
        "description": " ※Params: \n   (orig)<>[] \n   (addition)<>[] \n   (mult)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 485"
    },
    "Global.d_printskilltreestringsforcharacter:UNKNOWN": {
        "prefix": "d_printskilltreestringsforcharacter",
        "body": "d_printskilltreestringsforcharacter(${1:character})",
        "description": " ※Params: \n   (character)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 336"
    },
    "Global.IsUserCommerceBuyAllowedOnItem:UNKNOWN": {
        "prefix": "IsUserCommerceBuyAllowedOnItem",
        "body": "IsUserCommerceBuyAllowedOnItem(${1:item_type})",
        "description": " ※Params: \n   (item_type)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 754"
    },
    "Global.c_sethealth:UNKNOWN": {
        "prefix": "c_sethealth",
        "body": "c_sethealth(${1:n})",
        "description": " ※Params: \n   (n)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 388"
    },
    "Global.HandleShardRPC:UNKNOWN": {
        "prefix": "HandleShardRPC",
        "body": "HandleShardRPC(${1:sender},${2:tick},${3:code},${4:data})",
        "description": " ※Params: \n   (sender)<>[] \n   (tick)<>[] \n   (code)<>[] \n   (data)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networkclientrpc 所在行数: 1342"
    },
    "Global.c_makegrassboat:UNKNOWN": {
        "prefix": "c_makegrassboat",
        "body": "c_makegrassboat(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 1492"
    },
    "Global.d_walls:UNKNOWN": {
        "prefix": "d_walls",
        "body": "d_walls(${1:width},${2:height})",
        "description": " ※Params: \n   (width)<>[] \n   (height)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 889"
    },
    "Global.GetBoxPopupLayoutDetails:UNKNOWN": {
        "prefix": "GetBoxPopupLayoutDetails",
        "body": "GetBoxPopupLayoutDetails(${1:num_item_types})",
        "description": " ※Params: \n   (num_item_types)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1918"
    },
    "Global.OnTwitchChatStatusUpdate:UNKNOWN": {
        "prefix": "OnTwitchChatStatusUpdate",
        "body": "OnTwitchChatStatusUpdate(${1:status})",
        "description": " ※Params: \n   (status)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 165"
    },
    "Global.HandleDugGround:UNKNOWN": {
        "prefix": "HandleDugGround",
        "body": "HandleDugGround(${1:dug_ground},${2:x},${3:y},${4:z})",
        "description": " ※Params: \n   (dug_ground)<>[] \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/componentutil 所在行数: 27"
    },
    "Global.c_setsanity:UNKNOWN": {
        "prefix": "c_setsanity",
        "body": "c_setsanity(${1:n})",
        "description": " ※Params: \n   (n)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 404"
    },
    "Global.lureplantbulb_init_fn:UNKNOWN": {
        "prefix": "lureplantbulb_init_fn",
        "body": "lureplantbulb_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1027"
    },
    "Global.Update:UNKNOWN": {
        "prefix": "Update",
        "body": "Update(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/update 所在行数: 224"
    },
    "Global.AddPrefabPostInit:修改已有的预制物的初始化API": {
        "prefix": "AddPrefabPostInit",
        "body": "AddPrefabPostInit(\"${1:PrefabName}\", function(inst)\n\t${0}\nend)",
        "description": " ※Params: \n   (prefab)<>[] \n   (fn)<>[] \n ※Description: 修改已有的预制物的初始化API\n ※Contributor: @lan\n ※Path: scripts_en/modutil 所在行数: 593"
    },
    "Global.mastupgrade_lightningrod_top_init_fn:UNKNOWN": {
        "prefix": "mastupgrade_lightningrod_top_init_fn",
        "body": "mastupgrade_lightningrod_top_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1763"
    },
    "Global.VecUtil_DistSq:UNKNOWN": {
        "prefix": "VecUtil_DistSq",
        "body": "VecUtil_DistSq(${1:p1_x},${2:p1_z},${3:p2_x},${4:p2_z})",
        "description": " ※Params: \n   (p1_x)<>[] \n   (p1_z)<>[] \n   (p2_x)<>[] \n   (p2_z)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/vecutil 所在行数: 23"
    },
    "Global.SetGlobalErrorWidget:UNKNOWN": {
        "prefix": "SetGlobalErrorWidget",
        "body": "SetGlobalErrorWidget(${1:...})",
        "description": " ※Params: \n   (...)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/gamelogic 所在行数: 56"
    },
    "Global.c_sel:UNKNOWN": {
        "prefix": "c_sel",
        "body": "c_sel(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 299"
    },
    "Global.OnInputKey:UNKNOWN": {
        "prefix": "OnInputKey",
        "body": "OnInputKey(${1:key},${2:is_up})",
        "description": " ※Params: \n   (key)<>[] \n   (is_up)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/input 所在行数: 445"
    },
    "Global.PickSomeWithDups:UNKNOWN": {
        "prefix": "PickSomeWithDups",
        "body": "PickSomeWithDups(${1:num},${2:choices})",
        "description": " ※Params: \n   (num)<>[] \n   (choices)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 306"
    },
    "Global.isEncodable:UNKNOWN": {
        "prefix": "isEncodable",
        "body": "isEncodable(${1:o})",
        "description": " ※Params: \n   (o)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/json 所在行数: 516"
    },
    "Global.AddPlayerPostInit:修改玩家": {
        "prefix": "AddPlayerPostInit",
        "body": "AddPlayerPostInit(function(inst)\n\t${0}\nend)",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: 修改玩家\n ※Contributor: @lan\n ※Path: scripts_en/modutil 所在行数: 586"
    },
    "Global.OnGesture:UNKNOWN": {
        "prefix": "OnGesture",
        "body": "OnGesture(${1:gesture})",
        "description": " ※Params: \n   (gesture)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/input 所在行数: 453"
    },
    "Global.SuUsed:UNKNOWN": {
        "prefix": "SuUsed",
        "body": "SuUsed(${1:item},${2:value})",
        "description": " ※Params: \n   (item)<>[] \n   (value)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/stats 所在行数: 391"
    },
    "Global.RestoreSnapshotUserSession:UNKNOWN": {
        "prefix": "RestoreSnapshotUserSession",
        "body": "RestoreSnapshotUserSession(${1:sessionid},${2:userid})",
        "description": " ※Params: \n   (sessionid)<>[] \n   (userid)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 2057"
    },
    "Global.c_maintainall:UNKNOWN": {
        "prefix": "c_maintainall",
        "body": "c_maintainall(${1:player})",
        "description": " ※Params: \n   (player)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 1150"
    },
    "Global.addsetter:UNKNOWN": {
        "prefix": "addsetter",
        "body": "addsetter(${1:t},${2:k},${3:fn})",
        "description": " ※Params: \n   (t)<>[] \n   (k)<>[] \n   (fn)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/class 所在行数: 63"
    },
    "Global.c_getnumplayers:UNKNOWN": {
        "prefix": "c_getnumplayers",
        "body": "c_getnumplayers(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 270"
    },
    "Global.c_knownassert:UNKNOWN": {
        "prefix": "c_knownassert",
        "body": "c_knownassert(${1:key})",
        "description": " ※Params: \n   (key)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 1276"
    },
    "Global.MakeForgeRepairable:UNKNOWN": {
        "prefix": "MakeForgeRepairable",
        "body": "MakeForgeRepairable(${1:inst},${2:material},${3:onbroken},${4:onrepaired})",
        "description": " ※Params: \n   (inst)<>[] \n   (material)<>[] \n   (onbroken)<>[] \n   (onrepaired)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 1619"
    },
    "Global.GetSpawnMode:UNKNOWN": {
        "prefix": "GetSpawnMode",
        "body": "GetSpawnMode(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/gamemodes 所在行数: 282"
    },
    "Global.IsWorkshopMod:UNKNOWN": {
        "prefix": "IsWorkshopMod",
        "body": "IsWorkshopMod(${1:modname})",
        "description": " ※Params: \n   (modname)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modindex 所在行数: 230"
    },
    "Global.ParseUserSessionData:UNKNOWN": {
        "prefix": "ParseUserSessionData",
        "body": "ParseUserSessionData(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 2026"
    },
    "Global.SetDebugEntity:UNKNOWN": {
        "prefix": "SetDebugEntity",
        "body": "SetDebugEntity(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 624"
    },
    "Global.SpawnLeafCanopy:UNKNOWN": {
        "prefix": "SpawnLeafCanopy",
        "body": "SpawnLeafCanopy(${1:x},${2:z})",
        "description": " ※Params: \n   (x)<>[] \n   (z)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/shadeeffects 所在行数: 20"
    },
    "Global.d_statues:UNKNOWN": {
        "prefix": "d_statues",
        "body": "d_statues(${1:material})",
        "description": " ※Params: \n   (material)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 1463"
    },
    "Global.c_countallprefabs:UNKNOWN": {
        "prefix": "c_countallprefabs",
        "body": "c_countallprefabs(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 914"
    },
    "Global.c_give:UNKNOWN": {
        "prefix": "c_give",
        "body": "c_give(${1:prefab},${2:count},${3:dontselect})",
        "description": " ※Params: \n   (prefab)<>[] \n   (count)<>[] \n   (dontselect)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 479"
    },
    "Global.c_settemperature:UNKNOWN": {
        "prefix": "c_settemperature",
        "body": "c_settemperature(${1:n})",
        "description": " ※Params: \n   (n)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 455"
    },
    "Global.d_setup_placeholders:UNKNOWN": {
        "prefix": "d_setup_placeholders",
        "body": "d_setup_placeholders(${1:reuse},${2:out_file_name})",
        "description": " ※Params: \n   (reuse)<>[] \n   (out_file_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 1237"
    },
    "Global.anchor_item_init_fn:UNKNOWN": {
        "prefix": "anchor_item_init_fn",
        "body": "anchor_item_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1698"
    },
    "Global.GetMysteryBoxItemID:UNKNOWN": {
        "prefix": "GetMysteryBoxItemID",
        "body": "GetMysteryBoxItemID(${1:item_type})",
        "description": " ※Params: \n   (item_type)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1305"
    },
    "Global.DoesPackHaveACharacter:UNKNOWN": {
        "prefix": "DoesPackHaveACharacter",
        "body": "DoesPackHaveACharacter(${1:pack_key})",
        "description": " ※Params: \n   (pack_key)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 540"
    },
    "Global.PrefabExists:UNKNOWN": {
        "prefix": "PrefabExists",
        "body": "PrefabExists(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 373"
    },
    "Global.SetLoadingTipCategoryWeights:UNKNOWN": {
        "prefix": "SetLoadingTipCategoryWeights",
        "body": "SetLoadingTipCategoryWeights(${1:weighttable},${2:weightdata})",
        "description": " ※Params: \n   (weighttable)<>[] \n   (weightdata)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 1002"
    },
    "Global._GetSubPacks:UNKNOWN": {
        "prefix": "_GetSubPacks",
        "body": "_GetSubPacks(${1:item_key})",
        "description": " ※Params: \n   (item_key)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 226"
    },
    "Global.RegisterInventoryItemAtlas:UNKNOWN": {
        "prefix": "RegisterInventoryItemAtlas",
        "body": "RegisterInventoryItemAtlas(${1:atlas},${2:prefabname})",
        "description": " ※Params: \n   (atlas)<>[] \n   (prefabname)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 954"
    },
    "Global.abigail_clear_fn:UNKNOWN": {
        "prefix": "abigail_clear_fn",
        "body": "abigail_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1314"
    },
    "Global.d_printscrapbookrepairmaterialsdata:UNKNOWN": {
        "prefix": "d_printscrapbookrepairmaterialsdata",
        "body": "d_printscrapbookrepairmaterialsdata(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 2401"
    },
    "Global.convexHull:UNKNOWN": {
        "prefix": "convexHull",
        "body": "convexHull(${1:points})",
        "description": " ※Params: \n   (points)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/maputil 所在行数: 48"
    },
    "Global.DefaultExtinguishFn:UNKNOWN": {
        "prefix": "DefaultExtinguishFn",
        "body": "DefaultExtinguishFn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 45"
    },
    "Global.Dist2dSq:UNKNOWN": {
        "prefix": "Dist2dSq",
        "body": "Dist2dSq(${1:p1},${2:p2})",
        "description": " ※Params: \n   (p1)<>[] \n   (p2)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 1593"
    },
    "Global.dumptable:UNKNOWN": {
        "prefix": "dumptable",
        "body": "dumptable(${1:obj},${2:indent},${3:recurse_levels},${4:visit_table},${5:is_terse})",
        "description": " ※Params: \n   (obj)<>[] \n   (indent)<>[] \n   (recurse_levels)<>[] \n   (visit_table)<>[] \n   (is_terse)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugtools 所在行数: 113"
    },
    "Global.d_allpillows_onstands:UNKNOWN": {
        "prefix": "d_allpillows_onstands",
        "body": "d_allpillows_onstands(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 1742"
    },
    "Global.GetIsModGameMode:UNKNOWN": {
        "prefix": "GetIsModGameMode",
        "body": "GetIsModGameMode(${1:game_mode})",
        "description": " ※Params: \n   (game_mode)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/gamemodes 所在行数: 269"
    },
    "Global.d_spawnfilelist:UNKNOWN": {
        "prefix": "d_spawnfilelist",
        "body": "d_spawnfilelist(${1:filename},${2:spacing})",
        "description": " ※Params: \n   (filename)<>[] \n   (spacing)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 1551"
    },
    "Global.SavePersistentString:UNKNOWN": {
        "prefix": "SavePersistentString",
        "body": "SavePersistentString(${1:name},${2:data},${3:encode},${4:callback})",
        "description": " ※Params: \n   (name)<>[] \n   (data)<>[] \n   (encode)<>[] \n   (callback)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 18"
    },
    "Global.SendRPCToServer:UNKNOWN": {
        "prefix": "SendRPCToServer",
        "body": "SendRPCToServer(${1:code},${2:...})",
        "description": " ※Params: \n   (code)<>[] \n   (...)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networkclientrpc 所在行数: 1263"
    },
    "Global.HandleModRPC:UNKNOWN": {
        "prefix": "HandleModRPC",
        "body": "HandleModRPC(${1:sender},${2:tick},${3:namespace},${4:code},${5:data})",
        "description": " ※Params: \n   (sender)<>[] \n   (tick)<>[] \n   (namespace)<>[] \n   (code)<>[] \n   (data)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networkclientrpc 所在行数: 1523"
    },
    "Global.d_moonaltars:UNKNOWN": {
        "prefix": "d_moonaltars",
        "body": "d_moonaltars(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 1431"
    },
    "Global.RoundBiasedUp:UNKNOWN": {
        "prefix": "RoundBiasedUp",
        "body": "RoundBiasedUp(${1:num},${2:idp})",
        "description": " ※Params: \n   (num)<>[] \n   (idp)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mathutil 所在行数: 24"
    },
    "Global.IsLandTile:UNKNOWN": {
        "prefix": "IsLandTile",
        "body": "IsLandTile(${1:tile})",
        "description": " ※Params: \n   (tile)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/ocean_util 所在行数: 7"
    },
    "Global.c_goadventuring:UNKNOWN": {
        "prefix": "c_goadventuring",
        "body": "c_goadventuring(${1:player})",
        "description": " ※Params: \n   (player)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 1295"
    },
    "Global.modassert:UNKNOWN": {
        "prefix": "modassert",
        "body": "modassert(${1:test},${2:message})",
        "description": " ※Params: \n   (test)<>[] \n   (message)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 120"
    },
    "Global.ControllerPlacer_Boat_SpotFinder_Internal:UNKNOWN": {
        "prefix": "ControllerPlacer_Boat_SpotFinder_Internal",
        "body": "ControllerPlacer_Boat_SpotFinder_Internal(${1:placer},${2:player},${3:ox},${4:oy},${5:oz})",
        "description": " ※Params: \n   (placer)<>[] \n   (player)<>[] \n   (ox)<>[] \n   (oy)<>[] \n   (oz)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 1864"
    },
    "Global.Shard_SyncWorldSettings:UNKNOWN": {
        "prefix": "Shard_SyncWorldSettings",
        "body": "Shard_SyncWorldSettings(${1:world_id},${2:is_resync})",
        "description": " ※Params: \n   (world_id)<>[] \n   (is_resync)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/shardnetworking 所在行数: 24"
    },
    "Global.MakeHauntableGoToStateWithChanceFunction:UNKNOWN": {
        "prefix": "MakeHauntableGoToStateWithChanceFunction",
        "body": "MakeHauntableGoToStateWithChanceFunction(${1:inst},${2:state},${3:chancefn},${4:cooldown},${5:haunt_value})",
        "description": " ※Params: \n   (inst)<>[] \n   (state)<>[] \n   (chancefn)<>[] \n   (cooldown)<>[] \n   (haunt_value)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 1221"
    },
    "Global.GetEnabledModsModInfoDetails:UNKNOWN": {
        "prefix": "GetEnabledModsModInfoDetails",
        "body": "GetEnabledModsModInfoDetails(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mods 所在行数: 141"
    },
    "Global.c_pos:UNKNOWN": {
        "prefix": "c_pos",
        "body": "c_pos(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 572"
    },
    "Global.SendModRPCToServer:向服务器发RPC": {
        "prefix": "SendModRPCToServer",
        "body": "SendModRPCToServer(MOD_RPC[${1:namespace}][${2:name}])",
        "description": " ※Params: \n   (id_table)<>[MOD_RPC[命名空间][rpcID]] \n   (...)<any>[要传到服务器的数据,不可以是表,可不填] \n ※Description: 向服务器发RPC\n ※Contributor: @lan\n ※Path: scripts_en/modutil 所在行数: 887"
    },
    "Global.d_ratracers:UNKNOWN": {
        "prefix": "d_ratracers",
        "body": "d_ratracers(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 1187"
    },
    "Global.mastupgrade_lightningrod_init_fn:UNKNOWN": {
        "prefix": "mastupgrade_lightningrod_init_fn",
        "body": "mastupgrade_lightningrod_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1754"
    },
    "Global.wall_moonrock_clear_fn:UNKNOWN": {
        "prefix": "wall_moonrock_clear_fn",
        "body": "wall_moonrock_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1793"
    },
    "Global.RemoveEntity:UNKNOWN": {
        "prefix": "RemoveEntity",
        "body": "RemoveEntity(${1:guid})",
        "description": " ※Params: \n   (guid)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 508"
    },
    "Global.Wake:UNKNOWN": {
        "prefix": "Wake",
        "body": "Wake(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/scheduler 所在行数: 340"
    },
    "Global.FunctionOrValue:UNKNOWN": {
        "prefix": "FunctionOrValue",
        "body": "FunctionOrValue(${1:func_or_val},${2:...})",
        "description": " ※Params: \n   (func_or_val)<>[] \n   (...)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 1713"
    },
    "Global.ToggleOffCharacterCollisions:UNKNOWN": {
        "prefix": "ToggleOffCharacterCollisions",
        "body": "ToggleOffCharacterCollisions(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 1408"
    },
    "Global.MakeInventoryFloatable:UNKNOWN": {
        "prefix": "MakeInventoryFloatable",
        "body": "MakeInventoryFloatable(${1:inst},${2:size},${3:offset},${4:scale},${5:swap_bank},${6:float_index},${7:swap_data})",
        "description": " ※Params: \n   (inst)<>[] \n   (size)<>[] \n   (offset)<>[] \n   (scale)<>[] \n   (swap_bank)<>[] \n   (float_index)<>[] \n   (swap_data)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 1540"
    },
    "Global.GetBasicRecipeMatch:UNKNOWN": {
        "prefix": "GetBasicRecipeMatch",
        "body": "GetBasicRecipeMatch(${1:selections})",
        "description": " ※Params: \n   (selections)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinstradeutils 所在行数: 15"
    },
    "Global.GetNullFilter:UNKNOWN": {
        "prefix": "GetNullFilter",
        "body": "GetNullFilter(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1240"
    },
    "Global.Lerp:UNKNOWN": {
        "prefix": "Lerp",
        "body": "Lerp(${1:a},${2:b},${3:t})",
        "description": " ※Params: \n   (a)<>[] \n   (b)<>[] \n   (t)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mathutil 所在行数: 14"
    },
    "Global.GetWeaveableSkinFilter:UNKNOWN": {
        "prefix": "GetWeaveableSkinFilter",
        "body": "GetWeaveableSkinFilter(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1265"
    },
    "Global.GetTimeForTick:UNKNOWN": {
        "prefix": "GetTimeForTick",
        "body": "GetTimeForTick(${1:target_tick})",
        "description": " ※Params: \n   (target_tick)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 842"
    },
    "Global.VecUtil_NormalizeNoNaN:UNKNOWN": {
        "prefix": "VecUtil_NormalizeNoNaN",
        "body": "VecUtil_NormalizeNoNaN(${1:p1_x},${2:p1_z})",
        "description": " ※Params: \n   (p1_x)<>[] \n   (p1_z)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/vecutil 所在行数: 40"
    },
    "Global.mast_malbatross_init_fn:UNKNOWN": {
        "prefix": "mast_malbatross_init_fn",
        "body": "mast_malbatross_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1979"
    },
    "Global.CanEntitySeeInDark:UNKNOWN": {
        "prefix": "CanEntitySeeInDark",
        "body": "CanEntitySeeInDark(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/simutil 所在行数: 459"
    },
    "Global.d_test_skins_announce:UNKNOWN": {
        "prefix": "d_test_skins_announce",
        "body": "d_test_skins_announce(${1:param})",
        "description": " ※Params: \n   (param)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 566"
    },
    "Global.GetSpecialEventSkinTag:UNKNOWN": {
        "prefix": "GetSpecialEventSkinTag",
        "body": "GetSpecialEventSkinTag(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/constants 所在行数: 1001"
    },
    "Global.ResetControllersAndQuitGame:UNKNOWN": {
        "prefix": "ResetControllersAndQuitGame",
        "body": "ResetControllersAndQuitGame(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 2062"
    },
    "Global.OnDynamicCloudSyncReload:UNKNOWN": {
        "prefix": "OnDynamicCloudSyncReload",
        "body": "OnDynamicCloudSyncReload(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 1720"
    },
    "Global.Networking_PartyChanged:UNKNOWN": {
        "prefix": "Networking_PartyChanged",
        "body": "Networking_PartyChanged(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 986"
    },
    "Global.VecUtil_GetAngleInDegrees:UNKNOWN": {
        "prefix": "VecUtil_GetAngleInDegrees",
        "body": "VecUtil_GetAngleInDegrees(${1:p1_x},${2:p1_z})",
        "description": " ※Params: \n   (p1_x)<>[] \n   (p1_z)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/vecutil 所在行数: 64"
    },
    "Global.d_testdps:UNKNOWN": {
        "prefix": "d_testdps",
        "body": "d_testdps(${1:time},${2:target})",
        "description": " ※Params: \n   (time)<>[] \n   (target)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 3578"
    },
    "Global.MakeAllSuffixes:UNKNOWN": {
        "prefix": "MakeAllSuffixes",
        "body": "MakeAllSuffixes(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/dlcsupport_strings 所在行数: 49"
    },
    "Global.Create2DTriEmitter:UNKNOWN": {
        "prefix": "Create2DTriEmitter",
        "body": "Create2DTriEmitter(${1:tris},${2:scale})",
        "description": " ※Params: \n   (tris)<>[] \n   (scale)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/emitters 所在行数: 200"
    },
    "Global.HandleUserCmdQueue:UNKNOWN": {
        "prefix": "HandleUserCmdQueue",
        "body": "HandleUserCmdQueue(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/usercommands 所在行数: 38"
    },
    "Global.OnFocusLost:UNKNOWN": {
        "prefix": "OnFocusLost",
        "body": "OnFocusLost(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 1944"
    },
    "Global.d_turfs:UNKNOWN": {
        "prefix": "d_turfs",
        "body": "d_turfs(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 1016"
    },
    "Global.Networking_KickAnnouncement:UNKNOWN": {
        "prefix": "Networking_KickAnnouncement",
        "body": "Networking_KickAnnouncement(${1:name},${2:colour})",
        "description": " ※Params: \n   (name)<>[] \n   (colour)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 99"
    },
    "Global.RGBToPercentColor:UNKNOWN": {
        "prefix": "RGBToPercentColor",
        "body": "RGBToPercentColor(${1:r},${2:g},${3:b})",
        "description": " ※Params: \n   (r)<>[] \n   (g)<>[] \n   (b)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 1578"
    },
    "Global.IsAnyOtherPlayerNearInst:UNKNOWN": {
        "prefix": "IsAnyOtherPlayerNearInst",
        "body": "IsAnyOtherPlayerNearInst(${1:inst},${2:rangesq},${3:isalive})",
        "description": " ※Params: \n   (inst)<>[] \n   (rangesq)<>[] \n   (isalive)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/simutil 所在行数: 143"
    },
    "Global.IsSteamDeck:UNKNOWN": {
        "prefix": "IsSteamDeck",
        "body": "IsSteamDeck(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/worldgen_main 所在行数: 91"
    },
    "Global.SubtractMapKeys:UNKNOWN": {
        "prefix": "SubtractMapKeys",
        "body": "SubtractMapKeys(${1:base},${2:subtract})",
        "description": " ※Params: \n   (base)<>[] \n   (subtract)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 465"
    },
    "Global.ModReloadFrontEndAssets:UNKNOWN": {
        "prefix": "ModReloadFrontEndAssets",
        "body": "ModReloadFrontEndAssets(${1:assets},${2:modname})",
        "description": " ※Params: \n   (assets)<>[] \n   (modname)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 198"
    },
    "Global.Vec3Util_Lerp:UNKNOWN": {
        "prefix": "Vec3Util_Lerp",
        "body": "Vec3Util_Lerp(${1:p1_x},${2:p1_y},${3:p1_z},${4:p2_x},${5:p2_y},${6:p2_z},${7:percent})",
        "description": " ※Params: \n   (p1_x)<>[] \n   (p1_y)<>[] \n   (p1_z)<>[] \n   (p2_x)<>[] \n   (p2_y)<>[] \n   (p2_z)<>[] \n   (percent)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/vec3util 所在行数: 35"
    },
    "Global.MakeRoseTarget_CreateFuel:UNKNOWN": {
        "prefix": "MakeRoseTarget_CreateFuel",
        "body": "MakeRoseTarget_CreateFuel(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/componentutil 所在行数: 146"
    },
    "Global.ConsoleWorldPosition:获取指针位置的世界坐标(客户端)": {
        "prefix": "ConsoleWorldPosition",
        "body": "ConsoleWorldPosition()",
        "description": "\n ※Returns: <V3>[指针位置的世界坐标] \n ※Description: 获取指针位置的世界坐标(客户端)\n ※Contributor: @lan(若需要服务器知悉该坐标,则需要发RPC等方法,注意返回的是Vector3,可用:Get()方法来获取x,y,z)\n ※Path: scripts_en/consolecommands 所在行数: 6"
    },
    "Global.GetTableSize:UNKNOWN": {
        "prefix": "GetTableSize",
        "body": "GetTableSize(${1:table})",
        "description": " ※Params: \n   (table)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 243"
    },
    "Global.EnableExclusiveDLC:UNKNOWN": {
        "prefix": "EnableExclusiveDLC",
        "body": "EnableExclusiveDLC(${1:index})",
        "description": " ※Params: \n   (index)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/dlcsupport 所在行数: 128"
    },
    "Global.gemsocket_clear_fn:UNKNOWN": {
        "prefix": "gemsocket_clear_fn",
        "body": "gemsocket_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 2748"
    },
    "Global.IsGameInstance:UNKNOWN": {
        "prefix": "IsGameInstance",
        "body": "IsGameInstance(${1:instance_id})",
        "description": " ※Params: \n   (instance_id)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/splitscreenutils_pc 所在行数: 21"
    },
    "Global.hotswap:UNKNOWN": {
        "prefix": "hotswap",
        "body": "hotswap(${1:modname})",
        "description": " ※Params: \n   (modname)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/reload 所在行数: 27"
    },
    "Global.VecUtil_Normalize:UNKNOWN": {
        "prefix": "VecUtil_Normalize",
        "body": "VecUtil_Normalize(${1:p1_x},${2:p1_z})",
        "description": " ※Params: \n   (p1_x)<>[] \n   (p1_z)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/vecutil 所在行数: 50"
    },
    "Global.IsPurchasePackCurrency:UNKNOWN": {
        "prefix": "IsPurchasePackCurrency",
        "body": "IsPurchasePackCurrency(${1:item_key})",
        "description": " ※Params: \n   (item_key)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 499"
    },
    "Global.DataBundleFileHashes:UNKNOWN": {
        "prefix": "DataBundleFileHashes",
        "body": "DataBundleFileHashes(${1:calculatedhashes})",
        "description": " ※Params: \n   (calculatedhashes)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 2323"
    },
    "Global.AddGameMode:UNKNOWN": {
        "prefix": "AddGameMode",
        "body": "AddGameMode(${1:game_mode},${2:game_mode_text})",
        "description": " ※Params: \n   (game_mode)<>[] \n   (game_mode_text)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 311"
    },
    "Global.sorted_pairs:UNKNOWN": {
        "prefix": "sorted_pairs",
        "body": "sorted_pairs(${1:t},${2:fn})",
        "description": " ※Params: \n   (t)<>[] \n   (fn)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 1764"
    },
    "Global.GetMaxItemSlots:UNKNOWN": {
        "prefix": "GetMaxItemSlots",
        "body": "GetMaxItemSlots(${1:game_mode})",
        "description": " ※Params: \n   (game_mode)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/gamemodes 所在行数: 311"
    },
    "Global.GetCharacterSkinBases:UNKNOWN": {
        "prefix": "GetCharacterSkinBases",
        "body": "GetCharacterSkinBases(${1:hero})",
        "description": " ※Params: \n   (hero)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1396"
    },
    "Global.GetGameModeMaxPlayers:UNKNOWN": {
        "prefix": "GetGameModeMaxPlayers",
        "body": "GetGameModeMaxPlayers(${1:game_mode})",
        "description": " ※Params: \n   (game_mode)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/gamemodes 所在行数: 319"
    },
    "Global.ReplicateEntity:UNKNOWN": {
        "prefix": "ReplicateEntity",
        "body": "ReplicateEntity(${1:guid})",
        "description": " ※Params: \n   (guid)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 784"
    },
    "Global.CalcDiminishingReturns:UNKNOWN": {
        "prefix": "CalcDiminishingReturns",
        "body": "CalcDiminishingReturns(${1:current},${2:basedelta})",
        "description": " ※Params: \n   (current)<>[] \n   (basedelta)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 1587"
    },
    "Global.SetHeroNameTexture_Gold:UNKNOWN": {
        "prefix": "g+SetHeroNameTexture_Gold",
        "body": "SetHeroNameTexture_Gold(${1:image_widget},${2:character})",
        "description": " ※Params: \n   (image_widget)<>[] \n   (character)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/characterutil 所在行数: 53"
    },
    "Global.DamLevDist:UNKNOWN": {
        "prefix": "DamLevDist",
        "body": "DamLevDist(${1:a},${2:b},${3:limit})",
        "description": " ※Params: \n   (a)<>[] \n   (b)<>[] \n   (limit)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/stringutil 所在行数: 535"
    },
    "Global.GetMysteryBoxCounts:UNKNOWN": {
        "prefix": "GetMysteryBoxCounts",
        "body": "GetMysteryBoxCounts(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1273"
    },
    "Global.IsPackClothingOnly:UNKNOWN": {
        "prefix": "IsPackClothingOnly",
        "body": "IsPackClothingOnly(${1:item_key})",
        "description": " ※Params: \n   (item_key)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 417"
    },
    "Global.AddNewSkinDLCEntitlement:UNKNOWN": {
        "prefix": "AddNewSkinDLCEntitlement",
        "body": "AddNewSkinDLCEntitlement(${1:entitlement})",
        "description": " ※Params: \n   (entitlement)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1639"
    },
    "Global.IsWithinAngle:UNKNOWN": {
        "prefix": "IsWithinAngle",
        "body": "IsWithinAngle(${1:position},${2:forward},${3:width},${4:testPos})",
        "description": " ※Params: \n   (position)<>[] \n   (forward)<>[] \n   (width)<>[] \n   (testPos)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 1450"
    },
    "Global.GetClosestInstWithTag:UNKNOWN": {
        "prefix": "GetClosestInstWithTag",
        "body": "GetClosestInstWithTag(${1:tag},${2:inst},${3:radius})",
        "description": " ※Params: \n   (tag)<>[] \n   (inst)<>[] \n   (radius)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/simutil 所在行数: 202"
    },
    "Global.SpawnAttackWave:UNKNOWN": {
        "prefix": "SpawnAttackWave",
        "body": "SpawnAttackWave(${1:position},${2:rotation},${3:waveSpeed},${4:wavePrefab},${5:idleTime},${6:instantActive})",
        "description": " ※Params: \n   (position)<>[] \n   (rotation)<>[] \n   (waveSpeed)<>[] \n   (wavePrefab)<>[] \n   (idleTime)<>[] \n   (instantActive)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/ocean_util 所在行数: 74"
    },
    "Global.global:UNKNOWN": {
        "prefix": "global",
        "body": "global(${1:...})",
        "description": " ※Params: \n   (...)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/strict 所在行数: 28"
    },
    "Global.wall_moonrock_init_fn:UNKNOWN": {
        "prefix": "wall_moonrock_init_fn",
        "body": "wall_moonrock_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1787"
    },
    "Global.ChangeToInventoryPhysics:UNKNOWN": {
        "prefix": "ChangeToInventoryPhysics",
        "body": "ChangeToInventoryPhysics(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 578"
    },
    "Global.c_speedmult:UNKNOWN": {
        "prefix": "c_speedmult",
        "body": "c_speedmult(${1:multiplier})",
        "description": " ※Params: \n   (multiplier)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 952"
    },
    "Global.WorldSettings_Spawner_PreLoad:UNKNOWN": {
        "prefix": "g+WorldSettings_Spawner_PreLoad",
        "body": "WorldSettings_Spawner_PreLoad(${1:inst},${2:data},${3:maxstartdelay})",
        "description": " ※Params: \n   (inst)<>[] \n   (data)<>[] \n   (maxstartdelay)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/worldsettingsutil 所在行数: 182"
    },
    "Global.MakeTinyFlyingCharacterPhysics:UNKNOWN": {
        "prefix": "MakeTinyFlyingCharacterPhysics",
        "body": "MakeTinyFlyingCharacterPhysics(${1:inst},${2:mass},${3:rad})",
        "description": " ※Params: \n   (inst)<>[] \n   (mass)<>[] \n   (rad)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 427"
    },
    "Global.AddSimPostInit:UNKNOWN": {
        "prefix": "AddSimPostInit",
        "body": "AddSimPostInit(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 341"
    },
    "Global.d_daywalker:UNKNOWN": {
        "prefix": "d_daywalker",
        "body": "d_daywalker(${1:chain})",
        "description": " ※Params: \n   (chain)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 1764"
    },
    "Global.c_announce:UNKNOWN": {
        "prefix": "c_announce",
        "body": "c_announce(${1:msg},${2:interval},${3:category})",
        "description": " ※Params: \n   (msg)<>[] \n   (interval)<>[] \n   (category)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 46"
    },
    "Global.DeleteUserSession:UNKNOWN": {
        "prefix": "DeleteUserSession",
        "body": "DeleteUserSession(${1:player})",
        "description": " ※Params: \n   (player)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 319"
    },
    "Global.GetPackSavings:UNKNOWN": {
        "prefix": "GetPackSavings",
        "body": "GetPackSavings(${1:iap_def},${2:total_value},${3:sale_active})",
        "description": " ※Params: \n   (iap_def)<>[] \n   (total_value)<>[] \n   (sale_active)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 407"
    },
    "Global.MergeMaps:UNKNOWN": {
        "prefix": "MergeMaps",
        "body": "MergeMaps(${1:...})",
        "description": " ※Params: \n   (...)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 393"
    },
    "Global.MakeHauntable:UNKNOWN": {
        "prefix": "MakeHauntable",
        "body": "MakeHauntable(${1:inst},${2:cooldown},${3:haunt_value})",
        "description": " ※Params: \n   (inst)<>[] \n   (cooldown)<>[] \n   (haunt_value)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 829"
    },
    "Global.PlayerSub:UNKNOWN": {
        "prefix": "PlayerSub",
        "body": "PlayerSub(${1:count})",
        "description": " ※Params: \n   (count)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/maputil 所在行数: 117"
    },
    "Global.d_plant:UNKNOWN": {
        "prefix": "d_plant",
        "body": "d_plant(${1:plant},${2:num_wide},${3:grow_stage},${4:spacing})",
        "description": " ※Params: \n   (plant)<>[] \n   (num_wide)<>[] \n   (grow_stage)<>[] \n   (spacing)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 1373"
    },
    "Global.trophyscale_fish_clear_fn:UNKNOWN": {
        "prefix": "trophyscale_fish_clear_fn",
        "body": "trophyscale_fish_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 2809"
    },
    "Global.GetStackSize:UNKNOWN": {
        "prefix": "GetStackSize",
        "body": "GetStackSize(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/componentutil 所在行数: 22"
    },
    "Global.d_allsongs:UNKNOWN": {
        "prefix": "d_allsongs",
        "body": "d_allsongs(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 373"
    },
    "Global.pet_init_fn:UNKNOWN": {
        "prefix": "pet_init_fn",
        "body": "pet_init_fn(${1:inst},${2:build_name},${3:default_build})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n   (default_build)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1511"
    },
    "Global.VecUtil_Add:UNKNOWN": {
        "prefix": "VecUtil_Add",
        "body": "VecUtil_Add(${1:p1_x},${2:p1_z},${3:p2_x},${4:p2_z})",
        "description": " ※Params: \n   (p1_x)<>[] \n   (p1_z)<>[] \n   (p2_x)<>[] \n   (p2_z)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/vecutil 所在行数: 3"
    },
    "Global.InGamePlay:UNKNOWN": {
        "prefix": "InGamePlay",
        "body": "InGamePlay(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 1660"
    },
    "Global.d_mapstatistics:UNKNOWN": {
        "prefix": "d_mapstatistics",
        "body": "d_mapstatistics(${1:count_cutoff},${2:item_cutoff},${3:density_cutoff})",
        "description": " ※Params: \n   (count_cutoff)<>[] \n   (item_cutoff)<>[] \n   (density_cutoff)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 3490"
    },
    "Global.wall_stone_init_fn:UNKNOWN": {
        "prefix": "wall_stone_init_fn",
        "body": "wall_stone_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1834"
    },
    "Global.TintBackground:UNKNOWN": {
        "prefix": "TintBackground",
        "body": "TintBackground(${1:bg})",
        "description": " ※Params: \n   (bg)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 1926"
    },
    "Global.instrument_userdata:UNKNOWN": {
        "prefix": "instrument_userdata",
        "body": "instrument_userdata(${1:instance})",
        "description": " ※Params: \n   (instance)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugtools 所在行数: 81"
    },
    "Global.Networking_ModOutOfDateAnnouncement:UNKNOWN": {
        "prefix": "Networking_ModOutOfDateAnnouncement",
        "body": "Networking_ModOutOfDateAnnouncement(${1:mod})",
        "description": " ※Params: \n   (mod)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 70"
    },
    "Global.d_waxwellprotector:UNKNOWN": {
        "prefix": "d_waxwellprotector",
        "body": "d_waxwellprotector(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 991"
    },
    "Global.ResumeExistingUserSession:UNKNOWN": {
        "prefix": "ResumeExistingUserSession",
        "body": "ResumeExistingUserSession(${1:data},${2:guid})",
        "description": " ※Params: \n   (data)<>[] \n   (guid)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 2038"
    },
    "Global.RecordEventAchievementProgress:UNKNOWN": {
        "prefix": "RecordEventAchievementProgress",
        "body": "RecordEventAchievementProgress(${1:achievement},${2:src},${3:data})",
        "description": " ※Params: \n   (achievement)<>[] \n   (src)<>[] \n   (data)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/gamelogic 所在行数: 91"
    },
    "Global.IsOceanTile:UNKNOWN": {
        "prefix": "IsOceanTile",
        "body": "IsOceanTile(${1:tile})",
        "description": " ※Params: \n   (tile)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/ocean_util 所在行数: 3"
    },
    "Global.RunStaticScheduler:UNKNOWN": {
        "prefix": "RunStaticScheduler",
        "body": "RunStaticScheduler(${1:tick})",
        "description": " ※Params: \n   (tick)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/scheduler 所在行数: 417"
    },
    "Global.weighted_random_choice:UNKNOWN": {
        "prefix": "weighted_random_choice",
        "body": "weighted_random_choice(${1:choices})",
        "description": " ※Params: \n   (choices)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 708"
    },
    "Global.d_combatsimulator:UNKNOWN": {
        "prefix": "d_combatsimulator",
        "body": "d_combatsimulator(${1:prefab},${2:count},${3:force})",
        "description": " ※Params: \n   (prefab)<>[] \n   (count)<>[] \n   (force)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 497"
    },
    "Global.IsSplitScreen:UNKNOWN": {
        "prefix": "IsSplitScreen",
        "body": "IsSplitScreen(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/splitscreenutils_pc 所在行数: 25"
    },
    "Global.d_stalkersetup:UNKNOWN": {
        "prefix": "d_stalkersetup",
        "body": "d_stalkersetup(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 635"
    },
    "Global.setbit:UNKNOWN": {
        "prefix": "setbit",
        "body": "setbit(${1:x},${2:b})",
        "description": " ※Params: \n   (x)<>[] \n   (b)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 1439"
    },
    "Global.decode_scanConstant:UNKNOWN": {
        "prefix": "decode_scanConstant",
        "body": "decode_scanConstant(${1:s},${2:startPos})",
        "description": " ※Params: \n   (s)<>[] \n   (startPos)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/json 所在行数: 319"
    },
    "Global.WillUnravelBreakEnsemble:UNKNOWN": {
        "prefix": "WillUnravelBreakEnsemble",
        "body": "WillUnravelBreakEnsemble(${1:item_type})",
        "description": " ※Params: \n   (item_type)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1178"
    },
    "Global.c_inst:UNKNOWN": {
        "prefix": "c_inst",
        "body": "c_inst(${1:guid})",
        "description": " ※Params: \n   (guid)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 618"
    },
    "Global.CheckMapSaveData:UNKNOWN": {
        "prefix": "CheckMapSaveData",
        "body": "CheckMapSaveData(${1:savedata})",
        "description": " ※Params: \n   (savedata)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/worldgen_main 所在行数: 241"
    },
    "Global.SetConsoleAutopaused:UNKNOWN": {
        "prefix": "SetConsoleAutopaused",
        "body": "SetConsoleAutopaused(${1:autopause})",
        "description": " ※Params: \n   (autopause)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 879"
    },
    "Global.CountEntities:UNKNOWN": {
        "prefix": "CountEntities",
        "body": "CountEntities(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/perfutil 所在行数: 1"
    },
    "Global.IsXB1:UNKNOWN": {
        "prefix": "IsXB1",
        "body": "IsXB1(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/worldgen_main 所在行数: 75"
    },
    "Global.c_regenerateworld:UNKNOWN": {
        "prefix": "c_regenerateworld",
        "body": "c_regenerateworld(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 155"
    },
    "Global.Umlautify:UNKNOWN": {
        "prefix": "Umlautify",
        "body": "Umlautify(${1:string})",
        "description": " ※Params: \n   (string)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/stringutil 所在行数: 190"
    },
    "Global.IsClothingItem:UNKNOWN": {
        "prefix": "IsClothingItem",
        "body": "IsClothingItem(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 562"
    },
    "Global.BuildMoonPulseGradingShader:UNKNOWN": {
        "prefix": "BuildMoonPulseGradingShader",
        "body": "BuildMoonPulseGradingShader(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/postprocesseffects 所在行数: 247"
    },
    "Global.c_setrotation:UNKNOWN": {
        "prefix": "c_setrotation",
        "body": "c_setrotation(${1:angle})",
        "description": " ※Params: \n   (angle)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 1965"
    },
    "Global.ModUnloadPreloadAssets:UNKNOWN": {
        "prefix": "ModUnloadPreloadAssets",
        "body": "ModUnloadPreloadAssets(${1:modname})",
        "description": " ※Params: \n   (modname)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 217"
    },
    "Global.FindClosestPlayerInRangeSq:UNKNOWN": {
        "prefix": "FindClosestPlayerInRangeSq",
        "body": "FindClosestPlayerInRangeSq(${1:x},${2:y},${3:z},${4:rangesq},${5:isalive})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n   (rangesq)<>[] \n   (isalive)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/simutil 所在行数: 63"
    },
    "Global.DeleteCloseEntsWithTag:UNKNOWN": {
        "prefix": "DeleteCloseEntsWithTag",
        "body": "DeleteCloseEntsWithTag(${1:tag},${2:inst},${3:radius})",
        "description": " ※Params: \n   (tag)<>[] \n   (inst)<>[] \n   (radius)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/simutil 所在行数: 208"
    },
    "Global.GetWanderAwayPoint:UNKNOWN": {
        "prefix": "GetWanderAwayPoint",
        "body": "GetWanderAwayPoint(${1:pt})",
        "description": " ※Params: \n   (pt)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/giantutils 所在行数: 5"
    },
    "Global._profiler_hook_wrapper_by_time:UNKNOWN": {
        "prefix": "_profiler_hook_wrapper_by_time",
        "body": "_profiler_hook_wrapper_by_time(${1:action})",
        "description": " ※Params: \n   (action)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/profiler 所在行数: 189"
    },
    "Global.__genOrderedIndex:UNKNOWN": {
        "prefix": "__genOrderedIndex",
        "body": "__genOrderedIndex(${1:t})",
        "description": " ※Params: \n   (t)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 1616"
    },
    "Global.GetFiveRadius:UNKNOWN": {
        "prefix": "GetFiveRadius",
        "body": "GetFiveRadius(${1:x},${2:z},${3:prefab})",
        "description": " ※Params: \n   (x)<>[] \n   (z)<>[] \n   (prefab)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/regrowthutil 所在行数: 9"
    },
    "Global.critter_lamb_clear_fn:UNKNOWN": {
        "prefix": "critter_lamb_clear_fn",
        "body": "critter_lamb_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1561"
    },
    "Global.mastupgrade_lamp_init_fn:UNKNOWN": {
        "prefix": "mastupgrade_lamp_init_fn",
        "body": "mastupgrade_lamp_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1731"
    },
    "Global.Print:UNKNOWN": {
        "prefix": "Print",
        "body": "Print(${1:msg_verbosity},${2:...})",
        "description": " ※Params: \n   (msg_verbosity)<>[] \n   (...)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 48"
    },
    "Global.CanEntitySeePoint:UNKNOWN": {
        "prefix": "CanEntitySeePoint",
        "body": "CanEntitySeePoint(${1:inst},${2:x},${3:y},${4:z})",
        "description": " ※Params: \n   (inst)<>[] \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/simutil 所在行数: 487"
    },
    "Global.AwardPlayerAchievement:UNKNOWN": {
        "prefix": "AwardPlayerAchievement",
        "body": "AwardPlayerAchievement(${1:name},${2:player})",
        "description": " ※Params: \n   (name)<>[] \n   (player)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 283"
    },
    "Global.researchlab2_init_fn:UNKNOWN": {
        "prefix": "researchlab2_init_fn",
        "body": "researchlab2_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 2599"
    },
    "Global.generic_error:UNKNOWN": {
        "prefix": "generic_error",
        "body": "generic_error(${1:err})",
        "description": " ※Params: \n   (err)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 1773"
    },
    "Global.RequestedLobbyCharacter:UNKNOWN": {
        "prefix": "RequestedLobbyCharacter",
        "body": "RequestedLobbyCharacter(${1:userid},${2:prefab_name},${3:skin_base},${4:clothing_body},${5:clothing_hand},${6:clothing_legs},${7:clothing_feet})",
        "description": " ※Params: \n   (userid)<>[] \n   (prefab_name)<>[] \n   (skin_base)<>[] \n   (clothing_body)<>[] \n   (clothing_hand)<>[] \n   (clothing_legs)<>[] \n   (clothing_feet)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 294"
    },
    "Global.HideCancelTip:UNKNOWN": {
        "prefix": "HideCancelTip",
        "body": "HideCancelTip(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/gamelogic 所在行数: 162"
    },
    "Global.Vec3Util_DistSq:UNKNOWN": {
        "prefix": "Vec3Util_DistSq",
        "body": "Vec3Util_DistSq(${1:p1_x},${2:p1_y},${3:p1_z},${4:p2_x},${5:p2_y},${6:p2_z})",
        "description": " ※Params: \n   (p1_x)<>[] \n   (p1_y)<>[] \n   (p1_z)<>[] \n   (p2_x)<>[] \n   (p2_y)<>[] \n   (p2_z)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/vec3util 所在行数: 23"
    },
    "Global.IsItemInCollection:UNKNOWN": {
        "prefix": "IsItemInCollection",
        "body": "IsItemInCollection(${1:item_type})",
        "description": " ※Params: \n   (item_type)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1139"
    },
    "Global.d_spawnallhats:UNKNOWN": {
        "prefix": "d_spawnallhats",
        "body": "d_spawnallhats(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 1570"
    },
    "Global.PostUpdate:UNKNOWN": {
        "prefix": "PostUpdate",
        "body": "PostUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/update 所在行数: 142"
    },
    "Global.IsInFrontEnd:UNKNOWN": {
        "prefix": "IsInFrontEnd",
        "body": "IsInFrontEnd(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 2217"
    },
    "Global.SpringGrowthMod:UNKNOWN": {
        "prefix": "SpringGrowthMod",
        "body": "SpringGrowthMod(${1:amount},${2:forced})",
        "description": " ※Params: \n   (amount)<>[] \n   (forced)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/simutil 所在行数: 509"
    },
    "Global.d_structuresTXT:UNKNOWN": {
        "prefix": "d_structuresTXT",
        "body": "d_structuresTXT(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 1939"
    },
    "Global.GetNextOwnedSkin:UNKNOWN": {
        "prefix": "GetNextOwnedSkin",
        "body": "GetNextOwnedSkin(${1:prefab},${2:cur_skin})",
        "description": " ※Params: \n   (prefab)<>[] \n   (cur_skin)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1519"
    },
    "Global.CreateCircleEmitter:UNKNOWN": {
        "prefix": "CreateCircleEmitter",
        "body": "CreateCircleEmitter(${1:radius})",
        "description": " ※Params: \n   (radius)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/emitters 所在行数: 111"
    },
    "Global.GetBasicFilters:UNKNOWN": {
        "prefix": "GetBasicFilters",
        "body": "GetBasicFilters(${1:recipe_name})",
        "description": " ※Params: \n   (recipe_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinstradeutils 所在行数: 35"
    },
    "Global.wall_moonrock_item_init_fn:UNKNOWN": {
        "prefix": "wall_moonrock_item_init_fn",
        "body": "wall_moonrock_item_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1777"
    },
    "Global.null:UNKNOWN": {
        "prefix": "null",
        "body": "null(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/json 所在行数: 255"
    },
    "Global.OnFloatingTextInputDismissed:UNKNOWN": {
        "prefix": "OnFloatingTextInputDismissed",
        "body": "OnFloatingTextInputDismissed(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/input 所在行数: 425"
    },
    "Global.OnEntityWake:UNKNOWN": {
        "prefix": "OnEntityWake",
        "body": "OnEntityWake(${1:guid})",
        "description": " ※Params: \n   (guid)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 673"
    },
    "Global.bernie_active_init_fn:UNKNOWN": {
        "prefix": "bernie_active_init_fn",
        "body": "bernie_active_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 2005"
    },
    "Global.StopAllThreads:UNKNOWN": {
        "prefix": "StopAllThreads",
        "body": "StopAllThreads(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/scheduler 所在行数: 432"
    },
    "Global.trophyscale_fish_init_fn:UNKNOWN": {
        "prefix": "trophyscale_fish_init_fn",
        "body": "trophyscale_fish_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 2806"
    },
    "Global.dock_woodposts_item_init_fn:UNKNOWN": {
        "prefix": "dock_woodposts_item_init_fn",
        "body": "dock_woodposts_item_init_fn(${1:inst},${2:build_name},${3:anim_bank})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n   (anim_bank)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 2790"
    },
    "Global.AddClassPostConstruct:添加修改类API通用函数片段": {
        "prefix": "AddClassPostConstruct",
        "body": "AddClassPostConstruct(\"${1:package}\", function(self)\n\t${0}\nend)",
        "description": " ※Params: \n   (package)<string>[] \n   (fn)<function>[] \n ※Description: 添加修改类API通用函数片段\n ※Contributor: @月\n ※Path: scripts_en/modutil 所在行数: 351"
    },
    "Global.ProfileStatsGet:UNKNOWN": {
        "prefix": "ProfileStatsGet",
        "body": "ProfileStatsGet(${1:item})",
        "description": " ※Params: \n   (item)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/stats 所在行数: 353"
    },
    "Global.d_testruins:UNKNOWN": {
        "prefix": "d_testruins",
        "body": "d_testruins(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 455"
    },
    "Global.AddModRPCHandler:注册服务器ModRPC": {
        "prefix": "AddModRPCHandler",
        "body": "AddModRPCHandler(${1:namespace}, ${2:name}, function(player)\n\tif player and player:IsValid() and not player:HasTag(\"playerghost\") then\n\t\t$3\n\tend\nend)",
        "description": " ※Params: \n   (namespace)<string>[命名空间(写mod名即可)] \n   (name)<string>[当前命名空间下的rpc名字] \n   ()<function>[]\n      {Params:\n         (player)<table>[发rpc的玩家] \n         (...)<any>[接收的数据]} \n ※Description: 注册服务器ModRPC\n ※Contributor: @lan\n ※Path: scripts_en/modutil 所在行数: 857"
    },
    "Global.orangestaff_clear_fn:UNKNOWN": {
        "prefix": "orangestaff_clear_fn",
        "body": "orangestaff_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 2308"
    },
    "Global.GetPackGiftDLCID:UNKNOWN": {
        "prefix": "GetPackGiftDLCID",
        "body": "GetPackGiftDLCID(${1:item_key})",
        "description": " ※Params: \n   (item_key)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 459"
    },
    "Global.ControllerReticle_Blink_GetPosition_Direction:UNKNOWN": {
        "prefix": "ControllerReticle_Blink_GetPosition_Direction",
        "body": "ControllerReticle_Blink_GetPosition_Direction(${1:pos},${2:rotation},${3:maxrange},${4:validwalkablefn})",
        "description": " ※Params: \n   (pos)<>[] \n   (rotation)<>[] \n   (maxrange)<>[] \n   (validwalkablefn)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 1792"
    },
    "Global.RemoveRecipeFromFilter:UNKNOWN": {
        "prefix": "RemoveRecipeFromFilter",
        "body": "RemoveRecipeFromFilter(${1:recipe_name},${2:filter_name})",
        "description": " ※Params: \n   (recipe_name)<>[] \n   (filter_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 722"
    },
    "Global.CacheCurrentVanityItems:UNKNOWN": {
        "prefix": "CacheCurrentVanityItems",
        "body": "CacheCurrentVanityItems(${1:user_profile})",
        "description": " ※Params: \n   (user_profile)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1474"
    },
    "Global.AddFontAssets:UNKNOWN": {
        "prefix": "AddFontAssets",
        "body": "AddFontAssets(${1:asset_table},${2:font_table})",
        "description": " ※Params: \n   (asset_table)<>[] \n   (font_table)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/fonthelper 所在行数: 1"
    },
    "Global.circular_index:UNKNOWN": {
        "prefix": "circular_index",
        "body": "circular_index(${1:t},${2:index})",
        "description": " ※Params: \n   (t)<>[] \n   (index)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 1035"
    },
    "Global.VecUtil_RotateAroundPoint:UNKNOWN": {
        "prefix": "VecUtil_RotateAroundPoint",
        "body": "VecUtil_RotateAroundPoint(${1:a_x},${2:a_z},${3:b_x},${4:b_z},${5:theta})",
        "description": " ※Params: \n   (a_x)<>[] \n   (a_z)<>[] \n   (b_x)<>[] \n   (b_z)<>[] \n   (theta)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/vecutil 所在行数: 100"
    },
    "Global.WorldSettings_ChildSpawner_PreLoad:UNKNOWN": {
        "prefix": "g+WorldSettings_ChildSpawner_PreLoad",
        "body": "WorldSettings_ChildSpawner_PreLoad(${1:inst},${2:data},${3:spawnperiod_max},${4:regenperiod_max})",
        "description": " ※Params: \n   (inst)<>[] \n   (data)<>[] \n   (spawnperiod_max)<>[] \n   (regenperiod_max)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/worldsettingsutil 所在行数: 71"
    },
    "Global.WasSuUsed:UNKNOWN": {
        "prefix": "WasSuUsed",
        "body": "WasSuUsed(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/stats 所在行数: 406"
    },
    "Global.c_dumpentities:UNKNOWN": {
        "prefix": "c_dumpentities",
        "body": "c_dumpentities(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 1646"
    },
    "Global.AddModShadersSortAndEnable:UNKNOWN": {
        "prefix": "AddModShadersSortAndEnable",
        "body": "AddModShadersSortAndEnable(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 551"
    },
    "Global.DisableAllDLC:UNKNOWN": {
        "prefix": "DisableAllDLC",
        "body": "DisableAllDLC(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/dlcsupport 所在行数: 151"
    },
    "Global.GetGhostSanityDrain:UNKNOWN": {
        "prefix": "GetGhostSanityDrain",
        "body": "GetGhostSanityDrain(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/gamemodes 所在行数: 274"
    },
    "Global.ReloadFrontEndAssets:UNKNOWN": {
        "prefix": "ReloadFrontEndAssets",
        "body": "ReloadFrontEndAssets(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 187"
    },
    "Global.GetSkinInvIconName:UNKNOWN": {
        "prefix": "GetSkinInvIconName",
        "body": "GetSkinInvIconName(${1:item})",
        "description": " ※Params: \n   (item)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 868"
    },
    "Global.FindEntity:UNKNOWN": {
        "prefix": "FindEntity",
        "body": "FindEntity(${1:inst},${2:radius},${3:fn},${4:musttags},${5:canttags},${6:mustoneoftags})",
        "description": " ※Params: \n   (inst)<>[] \n   (radius)<>[] \n   (fn)<>[] \n   (musttags)<>[] \n   (canttags)<>[] \n   (mustoneoftags)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/simutil 所在行数: 31"
    },
    "Global.critter_glomling_clear_fn:UNKNOWN": {
        "prefix": "critter_glomling_clear_fn",
        "body": "critter_glomling_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1545"
    },
    "Global.MakeFeedableSmallLivestock:UNKNOWN": {
        "prefix": "MakeFeedableSmallLivestock",
        "body": "MakeFeedableSmallLivestock(${1:inst},${2:starvetime},${3:oninventory},${4:ondropped})",
        "description": " ※Params: \n   (inst)<>[] \n   (starvetime)<>[] \n   (oninventory)<>[] \n   (ondropped)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 805"
    },
    "Global.Server_IsTournamentActive:UNKNOWN": {
        "prefix": "Server_IsTournamentActive",
        "body": "Server_IsTournamentActive(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/constants 所在行数: 1067"
    },
    "Global.DefaultExtinguishCorpseFn:UNKNOWN": {
        "prefix": "DefaultExtinguishCorpseFn",
        "body": "DefaultExtinguishCorpseFn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 137"
    },
    "Global.wall_stone_item_init_fn:UNKNOWN": {
        "prefix": "wall_stone_item_init_fn",
        "body": "wall_stone_item_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1824"
    },
    "Global.FindSafeSpawnLocation:UNKNOWN": {
        "prefix": "FindSafeSpawnLocation",
        "body": "FindSafeSpawnLocation(${1:x},${2:y},${3:z})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/simutil 所在行数: 157"
    },
    "Global.DoRestart:UNKNOWN": {
        "prefix": "DoRestart",
        "body": "DoRestart(${1:save})",
        "description": " ※Params: \n   (save)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 1705"
    },
    "Global.PickSome:UNKNOWN": {
        "prefix": "PickSome",
        "body": "PickSome(${1:num},${2:choices})",
        "description": " ※Params: \n   (num)<>[] \n   (choices)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 295"
    },
    "Global.d_craftingstations:UNKNOWN": {
        "prefix": "d_craftingstations",
        "body": "d_craftingstations(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 1516"
    },
    "Global.IsRecipeValid:UNKNOWN": {
        "prefix": "IsRecipeValid",
        "body": "IsRecipeValid(${1:recname})",
        "description": " ※Params: \n   (recname)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/recipe 所在行数: 189"
    },
    "Global.ShowCancelTip:UNKNOWN": {
        "prefix": "ShowCancelTip",
        "body": "ShowCancelTip(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/gamelogic 所在行数: 156"
    },
    "Global.d_weirdfloaters:UNKNOWN": {
        "prefix": "d_weirdfloaters",
        "body": "d_weirdfloaters(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 700"
    },
    "Global.c_boatcollision:UNKNOWN": {
        "prefix": "c_boatcollision",
        "body": "c_boatcollision(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 1624"
    },
    "Global.IsDefaultMisc:UNKNOWN": {
        "prefix": "IsDefaultMisc",
        "body": "IsDefaultMisc(${1:item_key})",
        "description": " ※Params: \n   (item_key)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1391"
    },
    "Global.ReportAction:UNKNOWN": {
        "prefix": "ReportAction",
        "body": "ReportAction(${1:userid},${2:items},${3:item_counts},${4:users},${5:cb})",
        "description": " ※Params: \n   (userid)<>[] \n   (items)<>[] \n   (item_counts)<>[] \n   (users)<>[] \n   (cb)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 329"
    },
    "Global.ApplyFilters:UNKNOWN": {
        "prefix": "ApplyFilters",
        "body": "ApplyFilters(${1:full_skins_list},${2:filters})",
        "description": " ※Params: \n   (full_skins_list)<>[] \n   (filters)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsfiltersutils 所在行数: 67"
    },
    "Global.newProfiler:UNKNOWN": {
        "prefix": "newProfiler",
        "body": "newProfiler(${1:variant},${2:sampledelay})",
        "description": " ※Params: \n   (variant)<>[] \n   (sampledelay)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/profiler 所在行数: 116"
    },
    "Global.IsShopNew:UNKNOWN": {
        "prefix": "IsShopNew",
        "body": "IsShopNew(${1:user_profile})",
        "description": " ※Params: \n   (user_profile)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1331"
    },
    "Global.AddCustomizeGroup:UNKNOWN": {
        "prefix": "AddCustomizeGroup",
        "body": "AddCustomizeGroup(${1:category},${2:name},${3:text},${4:desc},${5:atlas},${6:order})",
        "description": " ※Params: \n   (category)<>[] \n   (name)<>[] \n   (text)<>[] \n   (desc)<>[] \n   (atlas)<>[] \n   (order)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 212"
    },
    "Global.cleartable:UNKNOWN": {
        "prefix": "cleartable",
        "body": "cleartable(${1:object})",
        "description": " ※Params: \n   (object)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 953"
    },
    "Global.ModInfoname:UNKNOWN": {
        "prefix": "ModInfoname",
        "body": "ModInfoname(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 3"
    },
    "Global.walkingplank_grass_clear_fn:UNKNOWN": {
        "prefix": "walkingplank_grass_clear_fn",
        "body": "walkingplank_grass_clear_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 252"
    },
    "Global.c_shutdown:UNKNOWN": {
        "prefix": "c_shutdown",
        "body": "c_shutdown(${1:save})",
        "description": " ※Params: \n   (save)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 179"
    },
    "Global.GetCharacterTitle:UNKNOWN": {
        "prefix": "GetCharacterTitle",
        "body": "GetCharacterTitle(${1:character},${2:skin})",
        "description": " ※Params: \n   (character)<>[] \n   (skin)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/characterutil 所在行数: 96"
    },
    "Global.MakeSmallObstaclePhysics:UNKNOWN": {
        "prefix": "MakeSmallObstaclePhysics",
        "body": "MakeSmallObstaclePhysics(${1:inst},${2:rad},${3:height})",
        "description": " ※Params: \n   (inst)<>[] \n   (rad)<>[] \n   (height)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 619"
    },
    "Global.GetSkilltreeIconAtlas_Internal:UNKNOWN": {
        "prefix": "GetSkilltreeIconAtlas_Internal",
        "body": "GetSkilltreeIconAtlas_Internal(${1:imagename})",
        "description": " ※Params: \n   (imagename)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/simutil 所在行数: 774"
    },
    "Global.debuglocals:UNKNOWN": {
        "prefix": "debuglocals",
        "body": "debuglocals(${1:level})",
        "description": " ※Params: \n   (level)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugtools 所在行数: 93"
    },
    "Global.VecUtil_NormalAndLength:UNKNOWN": {
        "prefix": "VecUtil_NormalAndLength",
        "body": "VecUtil_NormalAndLength(${1:p1_x},${2:p1_z})",
        "description": " ※Params: \n   (p1_x)<>[] \n   (p1_z)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/vecutil 所在行数: 57"
    },
    "Global.MetaClass:UNKNOWN": {
        "prefix": "MetaClass",
        "body": "MetaClass(${1:base},${2:_ctor})",
        "description": " ※Params: \n   (base)<>[] \n   (_ctor)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/metaclass 所在行数: 128"
    },
    "Global.GetSkilltreeIconAtlas:UNKNOWN": {
        "prefix": "GetSkilltreeIconAtlas",
        "body": "GetSkilltreeIconAtlas(${1:imagename})",
        "description": " ※Params: \n   (imagename)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/simutil 所在行数: 786"
    },
    "Global.MakeDeployableKitItem:UNKNOWN": {
        "prefix": "MakeDeployableKitItem",
        "body": "MakeDeployableKitItem(${1:name},${2:prefab_to_deploy},${3:bank},${4:build},${5:anim},${6:assets},${7:floatable_data},${8:tags},${9:burnable},${10:deployable_data},${11:stack_size},${12:PostMasterSimfn})",
        "description": " ※Params: \n   (name)<>[] \n   (prefab_to_deploy)<>[] \n   (bank)<>[] \n   (build)<>[] \n   (anim)<>[] \n   (assets)<>[] \n   (floatable_data)<>[] \n   (tags)<>[] \n   (burnable)<>[] \n   (deployable_data)<>[] \n   (stack_size)<>[] \n   (PostMasterSimfn)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabutil 所在行数: 71"
    },
    "Global.abigail_init_fn:UNKNOWN": {
        "prefix": "abigail_init_fn",
        "body": "abigail_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1308"
    },
    "Global.ErodeAway:UNKNOWN": {
        "prefix": "ErodeAway",
        "body": "ErodeAway(${1:inst},${2:erode_time})",
        "description": " ※Params: \n   (inst)<>[] \n   (erode_time)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/simutil 所在行数: 523"
    },
    "Global.boat_init_fn:UNKNOWN": {
        "prefix": "boat_init_fn",
        "body": "boat_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1646"
    },
    "Global.c_freecrafting:UNKNOWN": {
        "prefix": "c_freecrafting",
        "body": "c_freecrafting(${1:player})",
        "description": " ※Params: \n   (player)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 354"
    },
    "Global.AddRecipeTab:UNKNOWN": {
        "prefix": "AddRecipeTab",
        "body": "AddRecipeTab(${1:rec_str},${2:rec_sort},${3:rec_atlas},${4:rec_icon},${5:rec_owner_tag},${6:rec_crafting_station})",
        "description": " ※Params: \n   (rec_str)<>[] \n   (rec_sort)<>[] \n   (rec_atlas)<>[] \n   (rec_icon)<>[] \n   (rec_owner_tag)<>[] \n   (rec_crafting_station)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 823"
    },
    "Global.MakeLargeFreezableCharacter:UNKNOWN": {
        "prefix": "MakeLargeFreezableCharacter",
        "body": "MakeLargeFreezableCharacter(${1:inst},${2:sym},${3:offset})",
        "description": " ※Params: \n   (inst)<>[] \n   (sym)<>[] \n   (offset)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 348"
    },
    "Global.Vec3Util_LengthSq:UNKNOWN": {
        "prefix": "Vec3Util_LengthSq",
        "body": "Vec3Util_LengthSq(${1:p1_x},${2:p1_y},${3:p1_z})",
        "description": " ※Params: \n   (p1_x)<>[] \n   (p1_y)<>[] \n   (p1_z)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/vec3util 所在行数: 15"
    },
    "Global.DoAutopause:UNKNOWN": {
        "prefix": "DoAutopause",
        "body": "DoAutopause(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 884"
    },
    "Global.PrintTranslatedStringTableV1:UNKNOWN": {
        "prefix": "PrintTranslatedStringTableV1",
        "body": "PrintTranslatedStringTableV1(${1:base_dta},${2:tbl_dta},${3:lkp_var},${4:file})",
        "description": " ※Params: \n   (base_dta)<>[] \n   (tbl_dta)<>[] \n   (lkp_var)<>[] \n   (file)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/createstringspo_dlc 所在行数: 69"
    },
    "Global.isnan:UNKNOWN": {
        "prefix": "isnan",
        "body": "isnan(${1:x})",
        "description": " ※Params: \n   (x)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 674"
    },
    "Global.CraftMonkeySpeech:UNKNOWN": {
        "prefix": "CraftMonkeySpeech",
        "body": "CraftMonkeySpeech(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/stringutil 所在行数: 147"
    },
    "Global.OnEntitySleep:UNKNOWN": {
        "prefix": "OnEntitySleep",
        "body": "OnEntitySleep(${1:guid})",
        "description": " ※Params: \n   (guid)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 644"
    },
    "Global.clearbit:UNKNOWN": {
        "prefix": "clearbit",
        "body": "clearbit(${1:x},${2:b})",
        "description": " ※Params: \n   (x)<>[] \n   (b)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 1443"
    },
    "Global.IsSteam:UNKNOWN": {
        "prefix": "IsSteam",
        "body": "IsSteam(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/worldgen_main 所在行数: 79"
    },
    "Global.ApplyLocalWordFilter:UNKNOWN": {
        "prefix": "ApplyLocalWordFilter",
        "body": "ApplyLocalWordFilter(${1:text},${2:text_filter_context},${3:net_id})",
        "description": " ※Params: \n   (text)<>[] \n   (text_filter_context)<>[] \n   (net_id)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 1720"
    },
    "Global.GrabSubGraphAroundNode:UNKNOWN": {
        "prefix": "GrabSubGraphAroundNode",
        "body": "GrabSubGraphAroundNode(${1:node},${2:numnodes})",
        "description": " ※Params: \n   (node)<>[] \n   (numnodes)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/maputil 所在行数: 81"
    },
    "Global.FindRandomPointOnShoreFromOcean:UNKNOWN": {
        "prefix": "FindRandomPointOnShoreFromOcean",
        "body": "FindRandomPointOnShoreFromOcean(${1:x},${2:y},${3:z},${4:excludeclosest})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n   (excludeclosest)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/ocean_util 所在行数: 108"
    },
    "Global.c_maintaintemperature:UNKNOWN": {
        "prefix": "c_maintaintemperature",
        "body": "c_maintaintemperature(${1:player},${2:temp})",
        "description": " ※Params: \n   (player)<>[] \n   (temp)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 1129"
    },
    "Global.IsTechIngredient:UNKNOWN": {
        "prefix": "IsTechIngredient",
        "body": "IsTechIngredient(${1:ingredienttype})",
        "description": " ※Params: \n   (ingredienttype)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/recipe 所在行数: 55"
    },
    "Global.WorldSettings_ChildSpawner_RegenPeriod:UNKNOWN": {
        "prefix": "g+WorldSettings_ChildSpawner_RegenPeriod",
        "body": "WorldSettings_ChildSpawner_RegenPeriod(${1:inst},${2:regenperiod},${3:enabled})",
        "description": " ※Params: \n   (inst)<>[] \n   (regenperiod)<>[] \n   (enabled)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/worldsettingsutil 所在行数: 106"
    },
    "Global.DumpEntity:UNKNOWN": {
        "prefix": "DumpEntity",
        "body": "DumpEntity(${1:ent})",
        "description": " ※Params: \n   (ent)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debughelpers 所在行数: 20"
    },
    "Global.dock_woodposts_item_clear_fn:UNKNOWN": {
        "prefix": "dock_woodposts_item_clear_fn",
        "body": "dock_woodposts_item_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 2798"
    },
    "Global.IsNotConsole:UNKNOWN": {
        "prefix": "IsNotConsole",
        "body": "IsNotConsole(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/worldgen_main 所在行数: 67"
    },
    "Global.firepit_clear_fn:UNKNOWN": {
        "prefix": "firepit_clear_fn",
        "body": "firepit_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1437"
    },
    "Global.GetItemCollectionName:UNKNOWN": {
        "prefix": "GetItemCollectionName",
        "body": "GetItemCollectionName(${1:item_type})",
        "description": " ※Params: \n   (item_type)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1127"
    },
    "Global.SetMemoizedFilePaths:UNKNOWN": {
        "prefix": "SetMemoizedFilePaths",
        "body": "SetMemoizedFilePaths(${1:memoized_file_paths})",
        "description": " ※Params: \n   (memoized_file_paths)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 562"
    },
    "Global.SetSimPause:UNKNOWN": {
        "prefix": "SetSimPause",
        "body": "SetSimPause(${1:val})",
        "description": " ※Params: \n   (val)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 846"
    },
    "Global.c_gotoroom:UNKNOWN": {
        "prefix": "c_gotoroom",
        "body": "c_gotoroom(${1:roomname},${2:inst})",
        "description": " ※Params: \n   (roomname)<>[] \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 667"
    },
    "Global.d_allpillows:UNKNOWN": {
        "prefix": "d_allpillows",
        "body": "d_allpillows(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 1732"
    },
    "Global.mastupgrade_lightningrod_top_clear_fn:UNKNOWN": {
        "prefix": "mastupgrade_lightningrod_top_clear_fn",
        "body": "mastupgrade_lightningrod_top_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1769"
    },
    "Global.DrawLine:UNKNOWN": {
        "prefix": "DrawLine",
        "body": "DrawLine(${1:pos1},${2:pos2})",
        "description": " ※Params: \n   (pos1)<>[] \n   (pos2)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugtools 所在行数: 394"
    },
    "Global.GetTickForTime:UNKNOWN": {
        "prefix": "GetTickForTime",
        "body": "GetTickForTime(${1:target_time})",
        "description": " ※Params: \n   (target_time)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 838"
    },
    "Global.Networking_KickMetricsEvent:UNKNOWN": {
        "prefix": "Networking_KickMetricsEvent",
        "body": "Networking_KickMetricsEvent(${1:caller},${2:target})",
        "description": " ※Params: \n   (caller)<>[] \n   (target)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 109"
    },
    "Global.SetDefaultTimeScale:UNKNOWN": {
        "prefix": "SetDefaultTimeScale",
        "body": "SetDefaultTimeScale(${1:scale})",
        "description": " ※Params: \n   (scale)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 837"
    },
    "Global.d_allcircuits:UNKNOWN": {
        "prefix": "d_allcircuits",
        "body": "d_allcircuits(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 79"
    },
    "Global.ChangeFalloffRenderOrder:UNKNOWN": {
        "prefix": "ChangeFalloffRenderOrder",
        "body": "ChangeFalloffRenderOrder(${1:falloff_id},${2:falloff_id_id},${3:moveafter})",
        "description": " ※Params: \n   (falloff_id)<>[] \n   (falloff_id_id)<>[] \n   (moveafter)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 413"
    },
    "Global.CreateEnvironment:UNKNOWN": {
        "prefix": "CreateEnvironment",
        "body": "CreateEnvironment(${1:modname},${2:isworldgen},${3:isfrontend})",
        "description": " ※Params: \n   (modname)<>[] \n   (isworldgen)<>[] \n   (isfrontend)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mods 所在行数: 289"
    },
    "Global.DataDumper:UNKNOWN": {
        "prefix": "DataDumper",
        "body": "DataDumper(${1:value},${2:varname},${3:fastmode},${4:ident})",
        "description": " ※Params: \n   (value)<>[] \n   (varname)<>[] \n   (fastmode)<>[] \n   (ident)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/dumper 所在行数: 82"
    },
    "Global.GetPurchasePackCurrencyOutput:UNKNOWN": {
        "prefix": "GetPurchasePackCurrencyOutput",
        "body": "GetPurchasePackCurrencyOutput(${1:item_key})",
        "description": " ※Params: \n   (item_key)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 507"
    },
    "Global.ConstructAdjectivedName:UNKNOWN": {
        "prefix": "ConstructAdjectivedName",
        "body": "ConstructAdjectivedName(${1:inst},${2:name},${3:adjective})",
        "description": " ※Params: \n   (inst)<>[] \n   (name)<>[] \n   (adjective)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/dlcsupport_strings 所在行数: 77"
    },
    "Global.LaunchAt:UNKNOWN": {
        "prefix": "LaunchAt",
        "body": "LaunchAt(${1:inst},${2:launcher},${3:target},${4:speedmult},${5:startheight},${6:startradius},${7:randomangleoffset})",
        "description": " ※Params: \n   (inst)<>[] \n   (launcher)<>[] \n   (target)<>[] \n   (speedmult)<>[] \n   (startheight)<>[] \n   (startradius)<>[] \n   (randomangleoffset)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/physics 所在行数: 62"
    },
    "Global.mastupgrade_lamp_clear_fn:UNKNOWN": {
        "prefix": "mastupgrade_lamp_clear_fn",
        "body": "mastupgrade_lamp_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1737"
    },
    "Global.d_halloween:UNKNOWN": {
        "prefix": "d_halloween",
        "body": "d_halloween(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 657"
    },
    "Global.d_reloadskilltreedefs:UNKNOWN": {
        "prefix": "d_reloadskilltreedefs",
        "body": "d_reloadskilltreedefs(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 328"
    },
    "Global.checkbit:UNKNOWN": {
        "prefix": "checkbit",
        "body": "checkbit(${1:x},${2:b})",
        "description": " ※Params: \n   (x)<>[] \n   (b)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 1435"
    },
    "Global.d_spell:UNKNOWN": {
        "prefix": "d_spell",
        "body": "d_spell(${1:spellnum},${2:item})",
        "description": " ※Params: \n   (spellnum)<>[] \n   (item)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 3672"
    },
    "Global.c_makecrabboat:UNKNOWN": {
        "prefix": "c_makecrabboat",
        "body": "c_makecrabboat(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 1509"
    },
    "Global.abigail_flower_init_fn:UNKNOWN": {
        "prefix": "abigail_flower_init_fn",
        "body": "abigail_flower_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1292"
    },
    "Global.d_spawnallhats_onstands:UNKNOWN": {
        "prefix": "d_spawnallhats_onstands",
        "body": "d_spawnallhats_onstands(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 1581"
    },
    "Global.AddGlobalClassPostConstruct:UNKNOWN": {
        "prefix": "AddGlobalClassPostConstruct",
        "body": "AddGlobalClassPostConstruct(${1:package},${2:classname},${3:fn})",
        "description": " ※Params: \n   (package)<>[] \n   (classname)<>[] \n   (fn)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 346"
    },
    "Global.RecordEventAchievementProgressForAllPlayers:UNKNOWN": {
        "prefix": "RecordEventAchievementProgressForAllPlayers",
        "body": "RecordEventAchievementProgressForAllPlayers(${1:achievement},${2:data})",
        "description": " ※Params: \n   (achievement)<>[] \n   (data)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/gamelogic 所在行数: 83"
    },
    "Global.EnableDLC:UNKNOWN": {
        "prefix": "EnableDLC",
        "body": "EnableDLC(${1:index})",
        "description": " ※Params: \n   (index)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/dlcsupport 所在行数: 133"
    },
    "Global.debugstack:UNKNOWN": {
        "prefix": "debugstack",
        "body": "debugstack(${1:start},${2:top},${3:bottom})",
        "description": " ※Params: \n   (start)<>[] \n   (top)<>[] \n   (bottom)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugtools 所在行数: 40"
    },
    "Global.IsUserCommerceBuyRestrictedDueType:UNKNOWN": {
        "prefix": "IsUserCommerceBuyRestrictedDueType",
        "body": "IsUserCommerceBuyRestrictedDueType(${1:item_type})",
        "description": " ※Params: \n   (item_type)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 714"
    },
    "Global.IsWin32:UNKNOWN": {
        "prefix": "IsWin32",
        "body": "IsWin32(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/main 所在行数: 29"
    },
    "Global.GetPopupIDFromPopupCode:UNKNOWN": {
        "prefix": "GetPopupIDFromPopupCode",
        "body": "GetPopupIDFromPopupCode(${1:popupcode},${2:mod_name})",
        "description": " ※Params: \n   (popupcode)<>[] \n   (mod_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/popupmanager 所在行数: 55"
    },
    "Global.UserToName:UNKNOWN": {
        "prefix": "UserToName",
        "body": "UserToName(${1:input})",
        "description": " ※Params: \n   (input)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/usercommands 所在行数: 641"
    },
    "Global.basic_clear_fn:UNKNOWN": {
        "prefix": "basic_clear_fn",
        "body": "basic_clear_fn(${1:inst},${2:def_build})",
        "description": " ※Params: \n   (inst)<>[] \n   (def_build)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 106"
    },
    "Global.ErodeCB:UNKNOWN": {
        "prefix": "ErodeCB",
        "body": "ErodeCB(${1:inst},${2:erode_time},${3:cb},${4:restore})",
        "description": " ※Params: \n   (inst)<>[] \n   (erode_time)<>[] \n   (cb)<>[] \n   (restore)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/simutil 所在行数: 546"
    },
    "Global.c_cancelmaintaintasks:UNKNOWN": {
        "prefix": "c_cancelmaintaintasks",
        "body": "c_cancelmaintaintasks(${1:player})",
        "description": " ※Params: \n   (player)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 1161"
    },
    "Global.SaveAndShutdown:UNKNOWN": {
        "prefix": "SaveAndShutdown",
        "body": "SaveAndShutdown(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 2204"
    },
    "Global.AreServerModsEnabled:UNKNOWN": {
        "prefix": "AreServerModsEnabled",
        "body": "AreServerModsEnabled(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mods 所在行数: 58"
    },
    "Global.d_ratracer:UNKNOWN": {
        "prefix": "d_ratracer",
        "body": "d_ratracer(${1:speed},${2:stamina},${3:direction},${4:reaction})",
        "description": " ※Params: \n   (speed)<>[] \n   (stamina)<>[] \n   (direction)<>[] \n   (reaction)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 1175"
    },
    "Global.MergeMapsDeep:UNKNOWN": {
        "prefix": "MergeMapsDeep",
        "body": "MergeMapsDeep(${1:...})",
        "description": " ※Params: \n   (...)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 405"
    },
    "Global.hutch_fishbowl_clear_fn:UNKNOWN": {
        "prefix": "hutch_fishbowl_clear_fn",
        "body": "hutch_fishbowl_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1215"
    },
    "Global.GenerateNew:UNKNOWN": {
        "prefix": "GenerateNew",
        "body": "GenerateNew(${1:debug},${2:world_gen_data})",
        "description": " ※Params: \n   (debug)<>[] \n   (world_gen_data)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/worldgen_main 所在行数: 370"
    },
    "Global.GetDefaultServerData:UNKNOWN": {
        "prefix": "GetDefaultServerData",
        "body": "GetDefaultServerData(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 814"
    },
    "Global.OnAccountEvent:UNKNOWN": {
        "prefix": "OnAccountEvent",
        "body": "OnAccountEvent(${1:success},${2:event_code},${3:custom_message})",
        "description": " ※Params: \n   (success)<>[] \n   (event_code)<>[] \n   (custom_message)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 1918"
    },
    "Global.ShouldDisplayItemInCollection:UNKNOWN": {
        "prefix": "ShouldDisplayItemInCollection",
        "body": "ShouldDisplayItemInCollection(${1:item_type})",
        "description": " ※Params: \n   (item_type)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1340"
    },
    "Global.SetDailyGiftItem:UNKNOWN": {
        "prefix": "SetDailyGiftItem",
        "body": "SetDailyGiftItem(${1:item_type})",
        "description": " ※Params: \n   (item_type)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1615"
    },
    "Global.ModPreloadAssets:UNKNOWN": {
        "prefix": "ModPreloadAssets",
        "body": "ModPreloadAssets(${1:assets},${2:modname})",
        "description": " ※Params: \n   (assets)<>[] \n   (modname)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 231"
    },
    "Global.Shard_IsMaster:UNKNOWN": {
        "prefix": "Shard_IsMaster",
        "body": "Shard_IsMaster(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/shardnetworking 所在行数: 12"
    },
    "Global.GenerateSpicedFoods:UNKNOWN": {
        "prefix": "GenerateSpicedFoods",
        "body": "GenerateSpicedFoods(${1:foods})",
        "description": " ※Params: \n   (foods)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/spicedfoods 所在行数: 25"
    },
    "Global.c_record:UNKNOWN": {
        "prefix": "c_record",
        "body": "c_record(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 1997"
    },
    "Global.FlattenTree:UNKNOWN": {
        "prefix": "FlattenTree",
        "body": "FlattenTree(${1:tree},${2:unique})",
        "description": " ※Params: \n   (tree)<>[] \n   (unique)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 509"
    },
    "Global.c_move:UNKNOWN": {
        "prefix": "c_move",
        "body": "c_move(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 591"
    },
    "Global.GetInventoryItemAtlas:UNKNOWN": {
        "prefix": "GetInventoryItemAtlas",
        "body": "GetInventoryItemAtlas(${1:imagename},${2:no_fallback})",
        "description": " ※Params: \n   (imagename)<>[] \n   (no_fallback)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/simutil 所在行数: 637"
    },
    "Global.IsDLCEnabled:UNKNOWN": {
        "prefix": "IsDLCEnabled",
        "body": "IsDLCEnabled(${1:index})",
        "description": " ※Params: \n   (index)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/dlcsupport_worldgen 所在行数: 12"
    },
    "Global.d_radius:UNKNOWN": {
        "prefix": "d_radius",
        "body": "d_radius(${1:radius},${2:num},${3:lifetime})",
        "description": " ※Params: \n   (radius)<>[] \n   (num)<>[] \n   (lifetime)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 1159"
    },
    "Global.GetDailyGiftItem:UNKNOWN": {
        "prefix": "GetDailyGiftItem",
        "body": "GetDailyGiftItem(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1621"
    },
    "Global.dock_woodposts_init_fn:UNKNOWN": {
        "prefix": "dock_woodposts_init_fn",
        "body": "dock_woodposts_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 2781"
    },
    "Global.SortAndEnableShaders:UNKNOWN": {
        "prefix": "SortAndEnableShaders",
        "body": "SortAndEnableShaders(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/postprocesseffects 所在行数: 262"
    },
    "Global.MakeTinyGhostPhysics:UNKNOWN": {
        "prefix": "MakeTinyGhostPhysics",
        "body": "MakeTinyGhostPhysics(${1:inst},${2:mass},${3:rad})",
        "description": " ※Params: \n   (inst)<>[] \n   (mass)<>[] \n   (rad)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 484"
    },
    "Global.portablecookpot_clear_fn:UNKNOWN": {
        "prefix": "portablecookpot_clear_fn",
        "body": "portablecookpot_clear_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1365"
    },
    "Global.SpawnSaveRecord:UNKNOWN": {
        "prefix": "SpawnSaveRecord",
        "body": "SpawnSaveRecord(${1:saved},${2:newents})",
        "description": " ※Params: \n   (saved)<>[] \n   (newents)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 412"
    },
    "Global.EnableDebugOnEntity:UNKNOWN": {
        "prefix": "EnableDebugOnEntity",
        "body": "EnableDebugOnEntity(${1:thing},${2:items})",
        "description": " ※Params: \n   (thing)<>[] \n   (items)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugtools 所在行数: 330"
    },
    "Global.c_despawn:UNKNOWN": {
        "prefix": "c_despawn",
        "body": "c_despawn(${1:player})",
        "description": " ※Params: \n   (player)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 243"
    },
    "Global.c_dumpworldstate:UNKNOWN": {
        "prefix": "c_dumpworldstate",
        "body": "c_dumpworldstate(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 972"
    },
    "Global.Vec3Util_Scale:UNKNOWN": {
        "prefix": "Vec3Util_Scale",
        "body": "Vec3Util_Scale(${1:p1_x},${2:p1_y},${3:p1_z},${4:scale})",
        "description": " ※Params: \n   (p1_x)<>[] \n   (p1_y)<>[] \n   (p1_z)<>[] \n   (scale)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/vec3util 所在行数: 11"
    },
    "Global.c_sounddebugui:UNKNOWN": {
        "prefix": "c_sounddebugui",
        "body": "c_sounddebugui(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 1342"
    },
    "Global.MakeWaterObstaclePhysics:UNKNOWN": {
        "prefix": "MakeWaterObstaclePhysics",
        "body": "MakeWaterObstaclePhysics(${1:inst},${2:rad},${3:height},${4:restitution})",
        "description": " ※Params: \n   (inst)<>[] \n   (rad)<>[] \n   (height)<>[] \n   (restitution)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 601"
    },
    "Global.d_hidekitcoons:UNKNOWN": {
        "prefix": "d_hidekitcoons",
        "body": "d_hidekitcoons(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 916"
    },
    "Global.SoundTimeEvent:UNKNOWN": {
        "prefix": "SoundTimeEvent",
        "body": "SoundTimeEvent(${1:time},${2:sound_event})",
        "description": " ※Params: \n   (time)<>[] \n   (sound_event)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/stategraph 所在行数: 197"
    },
    "Global.Yield:UNKNOWN": {
        "prefix": "Yield",
        "body": "Yield(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/scheduler 所在行数: 352"
    },
    "Global.mast_init_fn:UNKNOWN": {
        "prefix": "mast_init_fn",
        "body": "mast_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1927"
    },
    "Global.c_stopvote:UNKNOWN": {
        "prefix": "c_stopvote",
        "body": "c_stopvote(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 1438"
    },
    "Global.Vec3Util_Normalize:UNKNOWN": {
        "prefix": "Vec3Util_Normalize",
        "body": "Vec3Util_Normalize(${1:p1_x},${2:p1_y},${3:p1_z})",
        "description": " ※Params: \n   (p1_x)<>[] \n   (p1_y)<>[] \n   (p1_z)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/vec3util 所在行数: 39"
    },
    "Global.researchlab4_init_fn:UNKNOWN": {
        "prefix": "researchlab4_init_fn",
        "body": "researchlab4_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 2037"
    },
    "Global.d_gettiles:UNKNOWN": {
        "prefix": "d_gettiles",
        "body": "d_gettiles(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugkeys 所在行数: 1723"
    },
    "Global.IfNode:UNKNOWN": {
        "prefix": "IfNode",
        "body": "IfNode(${1:cond},${2:name},${3:node})",
        "description": " ※Params: \n   (cond)<>[] \n   (name)<>[] \n   (node)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/behaviourtree 所在行数: 783"
    },
    "Global.ShowUpsellScreen:UNKNOWN": {
        "prefix": "ShowUpsellScreen",
        "body": "ShowUpsellScreen(${1:shouldquit})",
        "description": " ※Params: \n   (shouldquit)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/upsell 所在行数: 28"
    },
    "Global.Recipe:UNKNOWN": {
        "prefix": "Recipe",
        "body": "Recipe(${1:...})",
        "description": " ※Params: \n   (...)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 818"
    },
    "Global.d_anim:UNKNOWN": {
        "prefix": "d_anim",
        "body": "d_anim(${1:animname},${2:loop})",
        "description": " ※Params: \n   (animname)<>[] \n   (loop)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 484"
    },
    "Global.HandleRPC:UNKNOWN": {
        "prefix": "HandleRPC",
        "body": "HandleRPC(${1:sender},${2:tick},${3:code},${4:data})",
        "description": " ※Params: \n   (sender)<>[] \n   (tick)<>[] \n   (code)<>[] \n   (data)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networkclientrpc 所在行数: 1302"
    },
    "Global.GetActiveFestivalEventStatsFilePrefix:UNKNOWN": {
        "prefix": "GetActiveFestivalEventStatsFilePrefix",
        "body": "GetActiveFestivalEventStatsFilePrefix(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/constants 所在行数: 1055"
    },
    "Global.c_makeinvisible:UNKNOWN": {
        "prefix": "c_makeinvisible",
        "body": "c_makeinvisible(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 984"
    },
    "Global.AddCharacterRecipe:UNKNOWN": {
        "prefix": "AddCharacterRecipe",
        "body": "AddCharacterRecipe(${1:name},${2:ingredients},${3:tech},${4:config},${5:extra_filters})",
        "description": " ※Params: \n   (name)<>[] \n   (ingredients)<>[] \n   (tech)<>[] \n   (config)<>[] \n   (extra_filters)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 758"
    },
    "Global.IsUserCommerceAllowedOnItemType:UNKNOWN": {
        "prefix": "IsUserCommerceAllowedOnItemType",
        "body": "IsUserCommerceAllowedOnItemType(${1:item_key})",
        "description": " ※Params: \n   (item_key)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 693"
    },
    "Global.IsAnyItemNew:UNKNOWN": {
        "prefix": "IsAnyItemNew",
        "body": "IsAnyItemNew(${1:user_profile})",
        "description": " ※Params: \n   (user_profile)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1335"
    },
    "Global.GetModConfigData:获取当前mod配置项的值": {
        "prefix": "GetModConfigData",
        "body": "GetModConfigData(${1:optionname},${2:get_local_config})",
        "description": " ※Params: \n   (optionname)<string>[配置项] \n   (get_local_config)<any>[是否获取本地设置,一般不填] \n ※Returns: <any>[value] \n ※Description: 获取当前mod配置项的值\n ※Contributor: @lan\n ※Path: scripts_en/modutil 所在行数: 329"
    },
    "Global.IsPackRestrictedDueToOwnership:UNKNOWN": {
        "prefix": "IsPackRestrictedDueToOwnership",
        "body": "IsPackRestrictedDueToOwnership(${1:item_type})",
        "description": " ※Params: \n   (item_type)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 732"
    },
    "Global.GetProfilerPlayers:UNKNOWN": {
        "prefix": "GetProfilerPlayers",
        "body": "GetProfilerPlayers(${1:results})",
        "description": " ※Params: \n   (results)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/perfutil 所在行数: 60"
    },
    "Global.encodeString:UNKNOWN": {
        "prefix": "encodeString",
        "body": "encodeString(${1:s})",
        "description": " ※Params: \n   (s)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/json 所在行数: 474"
    },
    "Global.RaiseFlyingCreature:UNKNOWN": {
        "prefix": "RaiseFlyingCreature",
        "body": "RaiseFlyingCreature(${1:creature})",
        "description": " ※Params: \n   (creature)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/ocean_util 所在行数: 163"
    },
    "Global.d_domesticatedbeefalo:UNKNOWN": {
        "prefix": "d_domesticatedbeefalo",
        "body": "d_domesticatedbeefalo(${1:tendency},${2:saddle})",
        "description": " ※Params: \n   (tendency)<>[] \n   (saddle)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 409"
    },
    "Global.c_regenerateshard:UNKNOWN": {
        "prefix": "c_regenerateshard",
        "body": "c_regenerateshard(${1:wipesettings})",
        "description": " ※Params: \n   (wipesettings)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 139"
    },
    "Global.DistXYSq:UNKNOWN": {
        "prefix": "DistXYSq",
        "body": "DistXYSq(${1:p1},${2:p2})",
        "description": " ※Params: \n   (p1)<>[] \n   (p2)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mathutil 所在行数: 54"
    },
    "Global.WorldSettings_Spawner_SpawnDelay:UNKNOWN": {
        "prefix": "g+WorldSettings_Spawner_SpawnDelay",
        "body": "WorldSettings_Spawner_SpawnDelay(${1:inst},${2:startdelay},${3:enabled})",
        "description": " ※Params: \n   (inst)<>[] \n   (startdelay)<>[] \n   (enabled)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/worldsettingsutil 所在行数: 193"
    },
    "Global.SetPause:UNKNOWN": {
        "prefix": "SetPause",
        "body": "SetPause(${1:val},${2:reason})",
        "description": " ※Params: \n   (val)<>[] \n   (reason)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 907"
    },
    "Global.IsSpecialEventActive:UNKNOWN": {
        "prefix": "IsSpecialEventActive",
        "body": "IsSpecialEventActive(${1:event})",
        "description": " ※Params: \n   (event)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/constants 所在行数: 956"
    },
    "Global.c_tile:UNKNOWN": {
        "prefix": "c_tile",
        "body": "c_tile(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 313"
    },
    "Global.WakeTask:UNKNOWN": {
        "prefix": "WakeTask",
        "body": "WakeTask(${1:task})",
        "description": " ※Params: \n   (task)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/scheduler 所在行数: 376"
    },
    "Global.GetEntityString:UNKNOWN": {
        "prefix": "GetEntityString",
        "body": "GetEntityString(${1:guid})",
        "description": " ※Params: \n   (guid)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 582"
    },
    "Global.SetSkinnedOvalPortraitTexture:UNKNOWN": {
        "prefix": "g+SetSkinnedOvalPortraitTexture",
        "body": "SetSkinnedOvalPortraitTexture(${1:image_widget},${2:character},${3:skin})",
        "description": " ※Params: \n   (image_widget)<>[] \n   (character)<>[] \n   (skin)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/characterutil 所在行数: 11"
    },
    "Global.Dbg:UNKNOWN": {
        "prefix": "Dbg",
        "body": "Dbg(${1:thing},${2:level},${3:...})",
        "description": " ※Params: \n   (thing)<>[] \n   (level)<>[] \n   (...)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugtools 所在行数: 316"
    },
    "Global.AddLevelPreInitAny:添加修改世界配置API通用函数片段": {
        "prefix": "AddLevelPreInitAny",
        "body": "AddLevelPreInitAny(function(self)\n\t${0}\nend)",
        "description": " ※Params: \n   (fn)<function>[] \n ※Description: 添加修改世界配置API通用函数片段\n ※Contributor: @月\n ※Path: scripts_en/modutil 所在行数: 246"
    },
    "Global.RemoveOnAccountEventListener:UNKNOWN": {
        "prefix": "RemoveOnAccountEventListener",
        "body": "RemoveOnAccountEventListener(${1:listener_to_remove})",
        "description": " ※Params: \n   (listener_to_remove)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 1907"
    },
    "Global.d_clothing:UNKNOWN": {
        "prefix": "d_clothing",
        "body": "d_clothing(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 600"
    },
    "Global.GetPriceFromIAPDef:UNKNOWN": {
        "prefix": "GetPriceFromIAPDef",
        "body": "GetPriceFromIAPDef(${1:iap_def},${2:sale_active})",
        "description": " ※Params: \n   (iap_def)<>[] \n   (sale_active)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 339"
    },
    "Global.c_armour:UNKNOWN": {
        "prefix": "c_armour",
        "body": "c_armour(${1:player})",
        "description": " ※Params: \n   (player)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 837"
    },
    "Global.GetSkinName:UNKNOWN": {
        "prefix": "GetSkinName",
        "body": "GetSkinName(${1:item})",
        "description": " ※Params: \n   (item)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 855"
    },
    "Global.SetSkinDLCEntitlementReceived:UNKNOWN": {
        "prefix": "SetSkinDLCEntitlementReceived",
        "body": "SetSkinDLCEntitlementReceived(${1:entitlement})",
        "description": " ※Params: \n   (entitlement)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1633"
    },
    "Global.GetTileInfo:UNKNOWN": {
        "prefix": "GetTileInfo",
        "body": "GetTileInfo(${1:tile})",
        "description": " ※Params: \n   (tile)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/worldtiledefs 所在行数: 66"
    },
    "Global.RegisterOnAccountEventListener:UNKNOWN": {
        "prefix": "RegisterOnAccountEventListener",
        "body": "RegisterOnAccountEventListener(${1:listener})",
        "description": " ※Params: \n   (listener)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 1903"
    },
    "Global.nightsword_init_fn:UNKNOWN": {
        "prefix": "nightsword_init_fn",
        "body": "nightsword_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 2213"
    },
    "Global.Shard_UpdateWorldState:UNKNOWN": {
        "prefix": "Shard_UpdateWorldState",
        "body": "Shard_UpdateWorldState(${1:world_id},${2:state},${3:tags},${4:world_data})",
        "description": " ※Params: \n   (world_id)<>[] \n   (state)<>[] \n   (tags)<>[] \n   (world_data)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/shardnetworking 所在行数: 63"
    },
    "Global.c_sounddebug:UNKNOWN": {
        "prefix": "c_sounddebug",
        "body": "c_sounddebug(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 1333"
    },
    "Global.VecUtil_RotateDir:UNKNOWN": {
        "prefix": "VecUtil_RotateDir",
        "body": "VecUtil_RotateDir(${1:dir_x},${2:dir_z},${3:theta})",
        "description": " ※Params: \n   (dir_x)<>[] \n   (dir_z)<>[] \n   (theta)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/vecutil 所在行数: 106"
    },
    "Global.BuildZoomBlurShader:UNKNOWN": {
        "prefix": "BuildZoomBlurShader",
        "body": "BuildZoomBlurShader(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/postprocesseffects 所在行数: 174"
    },
    "Global.AddTaskSetPreInitAny:UNKNOWN": {
        "prefix": "AddTaskSetPreInitAny",
        "body": "AddTaskSetPreInitAny(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 259"
    },
    "Global.GetReleaseGroup:UNKNOWN": {
        "prefix": "GetReleaseGroup",
        "body": "GetReleaseGroup(${1:item_key})",
        "description": " ※Params: \n   (item_key)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 464"
    },
    "Global.RegisterDLC:UNKNOWN": {
        "prefix": "RegisterDLC",
        "body": "RegisterDLC(${1:index})",
        "description": " ※Params: \n   (index)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/dlcsupport 所在行数: 72"
    },
    "Global.GetEventIconForItem:UNKNOWN": {
        "prefix": "GetEventIconForItem",
        "body": "GetEventIconForItem(${1:item})",
        "description": " ※Params: \n   (item)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 633"
    },
    "Global.chester_eyebone_clear_fn:UNKNOWN": {
        "prefix": "chester_eyebone_clear_fn",
        "body": "chester_eyebone_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1186"
    },
    "Global.IsGameplayItem:UNKNOWN": {
        "prefix": "IsGameplayItem",
        "body": "IsGameplayItem(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 570"
    },
    "Global.PreventCharacterCollisionsWithPlacedObjects:UNKNOWN": {
        "prefix": "PreventCharacterCollisionsWithPlacedObjects",
        "body": "PreventCharacterCollisionsWithPlacedObjects(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 1494"
    },
    "Global.Networking_Talk:UNKNOWN": {
        "prefix": "Networking_Talk",
        "body": "Networking_Talk(${1:guid},${2:message},${3:duration},${4:text_filter_context},${5:original_author})",
        "description": " ※Params: \n   (guid)<>[] \n   (message)<>[] \n   (duration)<>[] \n   (text_filter_context)<>[] \n   (original_author)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 139"
    },
    "Global.IsDefaultSkinOwned:UNKNOWN": {
        "prefix": "IsDefaultSkinOwned",
        "body": "IsDefaultSkinOwned(${1:item_key})",
        "description": " ※Params: \n   (item_key)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1360"
    },
    "Global.d_allstscostumes:UNKNOWN": {
        "prefix": "d_allstscostumes",
        "body": "d_allstscostumes(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 384"
    },
    "Global.optuint:UNKNOWN": {
        "prefix": "optuint",
        "body": "optuint(${1:val})",
        "description": " ※Params: \n   (val)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networkclientrpc 所在行数: 11"
    },
    "Global.MakeHauntableChangePrefab:UNKNOWN": {
        "prefix": "MakeHauntableChangePrefab",
        "body": "MakeHauntableChangePrefab(${1:inst},${2:newprefab},${3:chance},${4:haunt_value},${5:nofx})",
        "description": " ※Params: \n   (inst)<>[] \n   (newprefab)<>[] \n   (chance)<>[] \n   (haunt_value)<>[] \n   (nofx)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 1037"
    },
    "Global.fence_gate_item_init_fn:UNKNOWN": {
        "prefix": "fence_gate_item_init_fn",
        "body": "fence_gate_item_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1893"
    },
    "Global.d_hunt:UNKNOWN": {
        "prefix": "d_hunt",
        "body": "d_hunt(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 948"
    },
    "Global.c_countprefabs:UNKNOWN": {
        "prefix": "c_countprefabs",
        "body": "c_countprefabs(${1:prefab},${2:noprint})",
        "description": " ※Params: \n   (prefab)<>[] \n   (noprint)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 888"
    },
    "Global.FindClosestEntity:UNKNOWN": {
        "prefix": "FindClosestEntity",
        "body": "FindClosestEntity(${1:inst},${2:radius},${3:ignoreheight},${4:musttags},${5:canttags},${6:mustoneoftags},${7:fn})",
        "description": " ※Params: \n   (inst)<>[] \n   (radius)<>[] \n   (ignoreheight)<>[] \n   (musttags)<>[] \n   (canttags)<>[] \n   (mustoneoftags)<>[] \n   (fn)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/simutil 所在行数: 44"
    },
    "Global.GetMinimapAtlas_Internal:UNKNOWN": {
        "prefix": "GetMinimapAtlas_Internal",
        "body": "GetMinimapAtlas_Internal(${1:imagename})",
        "description": " ※Params: \n   (imagename)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/simutil 所在行数: 652"
    },
    "Global.boat_grass_item_clear_fn:UNKNOWN": {
        "prefix": "boat_grass_item_clear_fn",
        "body": "boat_grass_item_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 230"
    },
    "Global.CreateEntity:UNKNOWN": {
        "prefix": "CreateEntity",
        "body": "CreateEntity(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 460"
    },
    "Global.cookpot_init_fn:UNKNOWN": {
        "prefix": "cookpot_init_fn",
        "body": "cookpot_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1339"
    },
    "Global.Shard_UpdatePortalState:UNKNOWN": {
        "prefix": "Shard_UpdatePortalState",
        "body": "Shard_UpdatePortalState(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/shardnetworking 所在行数: 114"
    },
    "Global.BuildMoonPulseShader:UNKNOWN": {
        "prefix": "BuildMoonPulseShader",
        "body": "BuildMoonPulseShader(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/postprocesseffects 所在行数: 240"
    },
    "Global.metapairs:UNKNOWN": {
        "prefix": "metapairs",
        "body": "metapairs(${1:t},${2:...})",
        "description": " ※Params: \n   (t)<>[] \n   (...)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 1668"
    },
    "Global.encode_compliant:UNKNOWN": {
        "prefix": "encode_compliant",
        "body": "encode_compliant(${1:v})",
        "description": " ※Params: \n   (v)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/json 所在行数: 163"
    },
    "Global.GroundImage:UNKNOWN": {
        "prefix": "GroundImage",
        "body": "GroundImage(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/worldtiledefs 所在行数: 7"
    },
    "Global.ipairs_reverse:UNKNOWN": {
        "prefix": "ipairs_reverse",
        "body": "ipairs_reverse(${1:t})",
        "description": " ※Params: \n   (t)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 212"
    },
    "Global.GetSelectableCharacterList:UNKNOWN": {
        "prefix": "GetSelectableCharacterList",
        "body": "GetSelectableCharacterList(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/dlcsupport 所在行数: 105"
    },
    "Global.Networking_BanAnnouncement:UNKNOWN": {
        "prefix": "Networking_BanAnnouncement",
        "body": "Networking_BanAnnouncement(${1:name},${2:colour})",
        "description": " ※Params: \n   (name)<>[] \n   (colour)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 103"
    },
    "Global.ReloadedClass:UNKNOWN": {
        "prefix": "ReloadedClass",
        "body": "ReloadedClass(${1:mt})",
        "description": " ※Params: \n   (mt)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/class 所在行数: 216"
    },
    "Global.SendRPCToClient:UNKNOWN": {
        "prefix": "SendRPCToClient",
        "body": "SendRPCToClient(${1:code},${2:...})",
        "description": " ※Params: \n   (code)<>[] \n   (...)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networkclientrpc 所在行数: 1274"
    },
    "Global.IsRecipeValidInGameMode:UNKNOWN": {
        "prefix": "IsRecipeValidInGameMode",
        "body": "IsRecipeValidInGameMode(${1:game_mode},${2:recipe_name})",
        "description": " ※Params: \n   (game_mode)<>[] \n   (recipe_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/gamemodes 所在行数: 302"
    },
    "Global.PrintTable:UNKNOWN": {
        "prefix": "PrintTable",
        "body": "PrintTable(${1:tab})",
        "description": " ※Params: \n   (tab)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 758"
    },
    "Global.OnPhysicsSleep:UNKNOWN": {
        "prefix": "OnPhysicsSleep",
        "body": "OnPhysicsSleep(${1:guid})",
        "description": " ※Params: \n   (guid)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 720"
    },
    "Global.GetStaticTime:UNKNOWN": {
        "prefix": "GetStaticTime",
        "body": "GetStaticTime(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 543"
    },
    "Global.SetCraftingAutopaused:UNKNOWN": {
        "prefix": "SetCraftingAutopaused",
        "body": "SetCraftingAutopaused(${1:autopause})",
        "description": " ※Params: \n   (autopause)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 873"
    },
    "Global.GetRarityForItem:UNKNOWN": {
        "prefix": "GetRarityForItem",
        "body": "GetRarityForItem(${1:item})",
        "description": " ※Params: \n   (item)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 622"
    },
    "Global.d_seeds:UNKNOWN": {
        "prefix": "d_seeds",
        "body": "d_seeds(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 1398"
    },
    "Global.critter_kitten_clear_fn:UNKNOWN": {
        "prefix": "critter_kitten_clear_fn",
        "body": "critter_kitten_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1554"
    },
    "Global.SetHeroNameTexture_Grey:UNKNOWN": {
        "prefix": "g+SetHeroNameTexture_Grey",
        "body": "SetHeroNameTexture_Grey(${1:image_widget},${2:character})",
        "description": " ※Params: \n   (image_widget)<>[] \n   (character)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/characterutil 所在行数: 42"
    },
    "Global.GetPlayerClientTable:UNKNOWN": {
        "prefix": "GetPlayerClientTable",
        "body": "GetPlayerClientTable(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 924"
    },
    "Global.d_allmutators:UNKNOWN": {
        "prefix": "d_allmutators",
        "body": "d_allmutators(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 70"
    },
    "Global.MakeRoseTarget_CreateFuel_IncreasedHorror:UNKNOWN": {
        "prefix": "MakeRoseTarget_CreateFuel_IncreasedHorror",
        "body": "MakeRoseTarget_CreateFuel_IncreasedHorror(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/componentutil 所在行数: 151"
    },
    "Global.d_particles:UNKNOWN": {
        "prefix": "d_particles",
        "body": "d_particles(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 145"
    },
    "Global.VecUtil_Length:UNKNOWN": {
        "prefix": "VecUtil_Length",
        "body": "VecUtil_Length(${1:p1_x},${2:p1_z})",
        "description": " ※Params: \n   (p1_x)<>[] \n   (p1_z)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/vecutil 所在行数: 19"
    },
    "Global.AddStategraphState:添加SG的状态API通用函数片段": {
        "prefix": "AddStategraphState",
        "body": "AddStategraphState(\"${1:StateGraph}\", State{\n\tname = ${2:statename},\n \ttags = {},\n \tonenter = function(inst)\n \t\tinst:PerformBufferedAction()\n \tend,\n \ttimeline=\n\t{\n\t\tTimeEvent(1*FRAMES, function(inst) end),\n\t},\n \tonexit = function(inst)\n \t\tinst.sg:GoToState(\"idle\") \n\tend\n})",
        "description": " ※Params: \n   (stategraph)<>[] \n   (state)<>[] \n ※Description: 添加SG的状态API通用函数片段\n ※Contributor: @月\n ※Path: scripts_en/modutil 所在行数: 527"
    },
    "Global.debugstack_oneline:UNKNOWN": {
        "prefix": "debugstack_oneline",
        "body": "debugstack_oneline(${1:linenum})",
        "description": " ※Params: \n   (linenum)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugtools 所在行数: 71"
    },
    "Global.GetRandomItemWithIndex:UNKNOWN": {
        "prefix": "GetRandomItemWithIndex",
        "body": "GetRandomItemWithIndex(${1:choices})",
        "description": " ※Params: \n   (choices)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 275"
    },
    "Global.tabletodictstring:UNKNOWN": {
        "prefix": "tabletodictstring",
        "body": "tabletodictstring(${1:obj},${2:fn})",
        "description": " ※Params: \n   (obj)<>[] \n   (fn)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugtools 所在行数: 161"
    },
    "Global.OnDynamicCloudSyncDelete:UNKNOWN": {
        "prefix": "OnDynamicCloudSyncDelete",
        "body": "OnDynamicCloudSyncDelete(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 1724"
    },
    "Global.SkinGridListConstructor:UNKNOWN": {
        "prefix": "SkinGridListConstructor",
        "body": "SkinGridListConstructor(${1:context},${2:parent},${3:scroll_list})",
        "description": " ※Params: \n   (context)<>[] \n   (parent)<>[] \n   (scroll_list)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 888"
    },
    "Global.UserToClient:UNKNOWN": {
        "prefix": "UserToClient",
        "body": "UserToClient(${1:input})",
        "description": " ※Params: \n   (input)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/usercommands 所在行数: 576"
    },
    "Global.lureplant_clear_fn:UNKNOWN": {
        "prefix": "lureplant_clear_fn",
        "body": "lureplant_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1053"
    },
    "Global.BuildDistortShader:UNKNOWN": {
        "prefix": "BuildDistortShader",
        "body": "BuildDistortShader(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/postprocesseffects 所在行数: 220"
    },
    "Global.GetAvailablePlayerColours:UNKNOWN": {
        "prefix": "GetAvailablePlayerColours",
        "body": "GetAvailablePlayerColours(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 668"
    },
    "Global.AddRecipeCard:UNKNOWN": {
        "prefix": "AddRecipeCard",
        "body": "AddRecipeCard(${1:cooker},${2:recipe})",
        "description": " ※Params: \n   (cooker)<>[] \n   (recipe)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/cooking 所在行数: 33"
    },
    "Global.GetSoundDebugString:UNKNOWN": {
        "prefix": "GetSoundDebugString",
        "body": "GetSoundDebugString(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugsounds 所在行数: 185"
    },
    "Global.ZipAndEncodeString:UNKNOWN": {
        "prefix": "ZipAndEncodeString",
        "body": "ZipAndEncodeString(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 1690"
    },
    "Global.d_skin_mode:UNKNOWN": {
        "prefix": "d_skin_mode",
        "body": "d_skin_mode(${1:mode})",
        "description": " ※Params: \n   (mode)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 592"
    },
    "Global.hutch_fishbowl_init_fn:UNKNOWN": {
        "prefix": "hutch_fishbowl_init_fn",
        "body": "hutch_fishbowl_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1206"
    },
    "Global.Shard_SyncMermKingCrown:UNKNOWN": {
        "prefix": "Shard_SyncMermKingCrown",
        "body": "Shard_SyncMermKingCrown(${1:exists},${2:shardid})",
        "description": " ※Params: \n   (exists)<>[] \n   (shardid)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/shardnetworking 所在行数: 243"
    },
    "Global.SnapToBoatEdge:UNKNOWN": {
        "prefix": "SnapToBoatEdge",
        "body": "SnapToBoatEdge(${1:inst},${2:boat},${3:override_pt})",
        "description": " ※Params: \n   (inst)<>[] \n   (boat)<>[] \n   (override_pt)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 1486"
    },
    "Global.DistXZSq:UNKNOWN": {
        "prefix": "DistXZSq",
        "body": "DistXZSq(${1:p1},${2:p2})",
        "description": " ※Params: \n   (p1)<>[] \n   (p2)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mathutil 所在行数: 58"
    },
    "Global.GetInventoryTimestamp:UNKNOWN": {
        "prefix": "GetInventoryTimestamp",
        "body": "GetInventoryTimestamp(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1040"
    },
    "Global.CompareItemDataForSortByName:UNKNOWN": {
        "prefix": "CompareItemDataForSortByName",
        "body": "CompareItemDataForSortByName(${1:item_key_a},${2:item_key_b})",
        "description": " ※Params: \n   (item_key_a)<>[] \n   (item_key_b)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 997"
    },
    "Global.resurrectionstatue_init_fn:UNKNOWN": {
        "prefix": "resurrectionstatue_init_fn",
        "body": "resurrectionstatue_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 2820"
    },
    "Global.DoDebugKey:UNKNOWN": {
        "prefix": "DoDebugKey",
        "body": "DoDebugKey(${1:key},${2:down})",
        "description": " ※Params: \n   (key)<>[] \n   (down)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugkeys 所在行数: 72"
    },
    "Global.AddModUserCommand:UNKNOWN": {
        "prefix": "AddModUserCommand",
        "body": "AddModUserCommand(${1:mod},${2:name},${3:data})",
        "description": " ※Params: \n   (mod)<>[] \n   (name)<>[] \n   (data)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/usercommands 所在行数: 559"
    },
    "Global.d_require:UNKNOWN": {
        "prefix": "d_require",
        "body": "d_require(${1:file})",
        "description": " ※Params: \n   (file)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 3485"
    },
    "Global.CalcQuickJoinServerScore:UNKNOWN": {
        "prefix": "CalcQuickJoinServerScore",
        "body": "CalcQuickJoinServerScore(${1:server})",
        "description": " ※Params: \n   (server)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 885"
    },
    "Global.DoesPackHaveBelongings:UNKNOWN": {
        "prefix": "DoesPackHaveBelongings",
        "body": "DoesPackHaveBelongings(${1:pack_key})",
        "description": " ※Params: \n   (pack_key)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 520"
    },
    "Global.Networking_JoinedParty:UNKNOWN": {
        "prefix": "Networking_JoinedParty",
        "body": "Networking_JoinedParty(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 974"
    },
    "Global.MakeDeployableFertilizerPristine:UNKNOWN": {
        "prefix": "MakeDeployableFertilizerPristine",
        "body": "MakeDeployableFertilizerPristine(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 1584"
    },
    "Global.c_emptyworld:UNKNOWN": {
        "prefix": "c_emptyworld",
        "body": "c_emptyworld(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 1201"
    },
    "Global.BuildBloomShader:UNKNOWN": {
        "prefix": "BuildBloomShader",
        "body": "BuildBloomShader(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/postprocesseffects 所在行数: 206"
    },
    "Global.GetPurchaseDisplayForItem:UNKNOWN": {
        "prefix": "GetPurchaseDisplayForItem",
        "body": "GetPurchaseDisplayForItem(${1:item_key})",
        "description": " ※Params: \n   (item_key)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 469"
    },
    "Global.MakeFeedableSmallLivestockPristine:UNKNOWN": {
        "prefix": "MakeFeedableSmallLivestockPristine",
        "body": "MakeFeedableSmallLivestockPristine(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 800"
    },
    "Global.d_testhashes_random:UNKNOWN": {
        "prefix": "d_testhashes_random",
        "body": "d_testhashes_random(${1:bitswanted},${2:tests})",
        "description": " ※Params: \n   (bitswanted)<>[] \n   (tests)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 3440"
    },
    "Global.decode_scanString:UNKNOWN": {
        "prefix": "decode_scanString",
        "body": "decode_scanString(${1:s},${2:startPos})",
        "description": " ※Params: \n   (s)<>[] \n   (startPos)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/json 所在行数: 417"
    },
    "Global.bernie_inactive_init_fn:UNKNOWN": {
        "prefix": "bernie_inactive_init_fn",
        "body": "bernie_inactive_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1993"
    },
    "Global.AddGamePostInit:UNKNOWN": {
        "prefix": "AddGamePostInit",
        "body": "AddGamePostInit(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 335"
    },
    "Global.coldfirepit_init_fn:UNKNOWN": {
        "prefix": "coldfirepit_init_fn",
        "body": "coldfirepit_init_fn(${1:inst},${2:build_name},${3:fxoffset})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n   (fxoffset)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1478"
    },
    "Global.portablecookpot_init_fn:UNKNOWN": {
        "prefix": "portablecookpot_init_fn",
        "body": "portablecookpot_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1358"
    },
    "Global.OnPosition:UNKNOWN": {
        "prefix": "OnPosition",
        "body": "OnPosition(${1:x},${2:y})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/input 所在行数: 429"
    },
    "Global.shuffleArray:UNKNOWN": {
        "prefix": "shuffleArray",
        "body": "shuffleArray(${1:array})",
        "description": " ※Params: \n   (array)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 860"
    },
    "Global.GetActiveFestivalProductName:UNKNOWN": {
        "prefix": "GetActiveFestivalProductName",
        "body": "GetActiveFestivalProductName(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/constants 所在行数: 1043"
    },
    "Global.ChangeTileRenderOrder:UNKNOWN": {
        "prefix": "ChangeTileRenderOrder",
        "body": "ChangeTileRenderOrder(${1:tile_id},${2:target_tile_id},${3:moveafter})",
        "description": " ※Params: \n   (tile_id)<>[] \n   (target_tile_id)<>[] \n   (moveafter)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 378"
    },
    "Global.subfmt:UNKNOWN": {
        "prefix": "subfmt",
        "body": "subfmt(${1:s},${2:tab})",
        "description": " ※Params: \n   (s)<>[] \n   (tab)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/stringutil 所在行数: 469"
    },
    "Global.LoadAchievements:UNKNOWN": {
        "prefix": "LoadAchievements",
        "body": "LoadAchievements(${1:filename})",
        "description": " ※Params: \n   (filename)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 256"
    },
    "Global.mastupgrade_lightningrod_item_clear_fn:UNKNOWN": {
        "prefix": "mastupgrade_lightningrod_item_clear_fn",
        "body": "mastupgrade_lightningrod_item_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1749"
    },
    "Global.RegisterStaticComponentLongUpdate:UNKNOWN": {
        "prefix": "RegisterStaticComponentLongUpdate",
        "body": "RegisterStaticComponentLongUpdate(${1:classname},${2:fn})",
        "description": " ※Params: \n   (classname)<>[] \n   (fn)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/update 所在行数: 159"
    },
    "Global.TintByOceanTile:UNKNOWN": {
        "prefix": "TintByOceanTile",
        "body": "TintByOceanTile(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/ocean_util 所在行数: 228"
    },
    "Global.c_startinggear:UNKNOWN": {
        "prefix": "c_startinggear",
        "body": "c_startinggear(${1:player})",
        "description": " ※Params: \n   (player)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 1318"
    },
    "Global.MakeSmallBurnable:UNKNOWN": {
        "prefix": "MakeSmallBurnable",
        "body": "MakeSmallBurnable(${1:inst},${2:time},${3:offset},${4:structure},${5:sym})",
        "description": " ※Params: \n   (inst)<>[] \n   (time)<>[] \n   (offset)<>[] \n   (structure)<>[] \n   (sym)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 159"
    },
    "Global.DefaultBurnFn:UNKNOWN": {
        "prefix": "DefaultBurnFn",
        "body": "DefaultBurnFn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 11"
    },
    "Global.GetTypeFromTag:UNKNOWN": {
        "prefix": "GetTypeFromTag",
        "body": "GetTypeFromTag(${1:tag})",
        "description": " ※Params: \n   (tag)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 831"
    },
    "Global.AddTask:UNKNOWN": {
        "prefix": "AddTask",
        "body": "AddTask(${1:arg1},${2:...})",
        "description": " ※Params: \n   (arg1)<>[] \n   (...)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 298"
    },
    "Global.d_test_skins_popup:UNKNOWN": {
        "prefix": "d_test_skins_popup",
        "body": "d_test_skins_popup(${1:param})",
        "description": " ※Params: \n   (param)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 562"
    },
    "Global.GetCircleEdgeSnapTransform:UNKNOWN": {
        "prefix": "GetCircleEdgeSnapTransform",
        "body": "GetCircleEdgeSnapTransform(${1:segments},${2:radius},${3:base_pt},${4:pt},${5:angle})",
        "description": " ※Params: \n   (segments)<>[] \n   (radius)<>[] \n   (base_pt)<>[] \n   (pt)<>[] \n   (angle)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 1469"
    },
    "Global.RailUserCommandRemove:UNKNOWN": {
        "prefix": "RailUserCommandRemove",
        "body": "RailUserCommandRemove(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/usercommands 所在行数: 546"
    },
    "Global.RegisterPrefabsImpl:UNKNOWN": {
        "prefix": "RegisterPrefabsImpl",
        "body": "RegisterPrefabsImpl(${1:prefab},${2:resolve_fn})",
        "description": " ※Params: \n   (prefab)<>[] \n   (resolve_fn)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 103"
    },
    "Global.CompareReleaseGroup:UNKNOWN": {
        "prefix": "CompareReleaseGroup",
        "body": "CompareReleaseGroup(${1:item_key_a},${2:item_key_b})",
        "description": " ※Params: \n   (item_key_a)<>[] \n   (item_key_b)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 82"
    },
    "Global.d_potions:UNKNOWN": {
        "prefix": "d_potions",
        "body": "d_potions(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 683"
    },
    "Global.checkentity:UNKNOWN": {
        "prefix": "checkentity",
        "body": "checkentity(${1:val})",
        "description": " ※Params: \n   (val)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networkclientrpc 所在行数: 8"
    },
    "Global.OnSimUnpaused:UNKNOWN": {
        "prefix": "OnSimUnpaused",
        "body": "OnSimUnpaused(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 900"
    },
    "Global.WorldSettings_Timer_PreLoad:UNKNOWN": {
        "prefix": "g+WorldSettings_Timer_PreLoad",
        "body": "WorldSettings_Timer_PreLoad(${1:inst},${2:data},${3:timername},${4:maxtimeleft})",
        "description": " ※Params: \n   (inst)<>[] \n   (data)<>[] \n   (timername)<>[] \n   (maxtimeleft)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/worldsettingsutil 所在行数: 132"
    },
    "Global.OnTwitchMessageReceived:UNKNOWN": {
        "prefix": "OnTwitchMessageReceived",
        "body": "OnTwitchMessageReceived(${1:username},${2:message},${3:colour})",
        "description": " ※Params: \n   (username)<>[] \n   (message)<>[] \n   (colour)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 146"
    },
    "Global.GetTypeForItem:UNKNOWN": {
        "prefix": "GetTypeForItem",
        "body": "GetTypeForItem(${1:item})",
        "description": " ※Params: \n   (item)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 764"
    },
    "Global.JoinArrays:UNKNOWN": {
        "prefix": "JoinArrays",
        "body": "JoinArrays(${1:...})",
        "description": " ※Params: \n   (...)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 328"
    },
    "Global.IsUserCommerceAllowedOnItemData:UNKNOWN": {
        "prefix": "IsUserCommerceAllowedOnItemData",
        "body": "IsUserCommerceAllowedOnItemData(${1:item_data})",
        "description": " ※Params: \n   (item_data)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 686"
    },
    "Global.deepcopy:UNKNOWN": {
        "prefix": "deepcopy",
        "body": "deepcopy(${1:object})",
        "description": " ※Params: \n   (object)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 900"
    },
    "Global.MakePlacer:UNKNOWN": {
        "prefix": "MakePlacer",
        "body": "MakePlacer(${1:name},${2:bank},${3:build},${4:anim},${5:onground},${6:snap},${7:metersnap},${8:scale},${9:fixedcameraoffset},${10:facing},${11:postinit_fn},${12:offset},${13:onfailedplacement})",
        "description": " ※Params: \n   (name)<>[] \n   (bank)<>[] \n   (build)<>[] \n   (anim)<>[] \n   (onground)<>[] \n   (snap)<>[] \n   (metersnap)<>[] \n   (scale)<>[] \n   (fixedcameraoffset)<>[] \n   (facing)<>[] \n   (postinit_fn)<>[] \n   (offset)<>[] \n   (onfailedplacement)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabutil 所在行数: 1"
    },
    "Global.GetModifiedRarityStringForItem:UNKNOWN": {
        "prefix": "GetModifiedRarityStringForItem",
        "body": "GetModifiedRarityStringForItem(${1:item})",
        "description": " ※Params: \n   (item)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 605"
    },
    "Global.walkingplank_clear_fn:UNKNOWN": {
        "prefix": "walkingplank_clear_fn",
        "body": "walkingplank_clear_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1666"
    },
    "Global.CreateRingEmitter:UNKNOWN": {
        "prefix": "CreateRingEmitter",
        "body": "CreateRingEmitter(${1:radius})",
        "description": " ※Params: \n   (radius)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/emitters 所在行数: 125"
    },
    "Global.SetInstanceParameters:UNKNOWN": {
        "prefix": "SetInstanceParameters",
        "body": "SetInstanceParameters(${1:settings})",
        "description": " ※Params: \n   (settings)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 924"
    },
    "Global.Shard_IsWorldAvailable:UNKNOWN": {
        "prefix": "Shard_IsWorldAvailable",
        "body": "Shard_IsWorldAvailable(${1:world_id})",
        "description": " ※Params: \n   (world_id)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/shardnetworking 所在行数: 16"
    },
    "Global.GetEnabledServerModsConfigData:UNKNOWN": {
        "prefix": "GetEnabledServerModsConfigData",
        "body": "GetEnabledServerModsConfigData(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mods 所在行数: 158"
    },
    "Global.c_teleport:UNKNOWN": {
        "prefix": "c_teleport",
        "body": "c_teleport(${1:x},${2:y},${3:z},${4:inst})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 580"
    },
    "Global.OnTwitchLoginAttempt:UNKNOWN": {
        "prefix": "OnTwitchLoginAttempt",
        "body": "OnTwitchLoginAttempt(${1:success},${2:result})",
        "description": " ※Params: \n   (success)<>[] \n   (result)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 156"
    },
    "Global.resolvefilepath_soft:UNKNOWN": {
        "prefix": "resolvefilepath_soft",
        "body": "resolvefilepath_soft(${1:filepath},${2:force_path_search},${3:search_first_path})",
        "description": " ※Params: \n   (filepath)<>[] \n   (force_path_search)<>[] \n   (search_first_path)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 612"
    },
    "Global.SuUsedAdd:UNKNOWN": {
        "prefix": "SuUsedAdd",
        "body": "SuUsedAdd(${1:item},${2:value})",
        "description": " ※Params: \n   (item)<>[] \n   (value)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/stats 所在行数: 401"
    },
    "Global.d_prizepouch:UNKNOWN": {
        "prefix": "d_prizepouch",
        "body": "d_prizepouch(${1:prefab},${2:nugget_count})",
        "description": " ※Params: \n   (prefab)<>[] \n   (nugget_count)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 3615"
    },
    "Global.DownloadMods:UNKNOWN": {
        "prefix": "DownloadMods",
        "body": "DownloadMods(${1:server_listing})",
        "description": " ※Params: \n   (server_listing)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 344"
    },
    "Global.c_repeatlastcommand:UNKNOWN": {
        "prefix": "c_repeatlastcommand",
        "body": "c_repeatlastcommand(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 1413"
    },
    "Global.GetCharacterRequiredForItem:UNKNOWN": {
        "prefix": "GetCharacterRequiredForItem",
        "body": "GetCharacterRequiredForItem(${1:item_type})",
        "description": " ※Params: \n   (item_type)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 706"
    },
    "Global.IsPackFeatured:UNKNOWN": {
        "prefix": "IsPackFeatured",
        "body": "IsPackFeatured(${1:item_key})",
        "description": " ※Params: \n   (item_key)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 449"
    },
    "Global.Class:UNKNOWN": {
        "prefix": "Class",
        "body": "Class(${1:base},${2:_ctor},${3:props})",
        "description": " ※Params: \n   (base)<>[] \n   (_ctor)<>[] \n   (props)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/class 所在行数: 83"
    },
    "Global.HandleClassInstanceTracking:UNKNOWN": {
        "prefix": "HandleClassInstanceTracking",
        "body": "HandleClassInstanceTracking(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/class 所在行数: 222"
    },
    "Global.GetStaticTick:UNKNOWN": {
        "prefix": "GetStaticTick",
        "body": "GetStaticTick(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 551"
    },
    "Global.d_combatgear:UNKNOWN": {
        "prefix": "d_combatgear",
        "body": "d_combatgear(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 474"
    },
    "Global.Networking_RegenerateMetricsEvent:UNKNOWN": {
        "prefix": "Networking_RegenerateMetricsEvent",
        "body": "Networking_RegenerateMetricsEvent(${1:caller})",
        "description": " ※Params: \n   (caller)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 118"
    },
    "Global.makereadonly:UNKNOWN": {
        "prefix": "makereadonly",
        "body": "makereadonly(${1:t},${2:k})",
        "description": " ※Params: \n   (t)<>[] \n   (k)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/class 所在行数: 51"
    },
    "Global.CreateDiscEmitter:UNKNOWN": {
        "prefix": "CreateDiscEmitter",
        "body": "CreateDiscEmitter(${1:radius})",
        "description": " ※Params: \n   (radius)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/emitters 所在行数: 105"
    },
    "Global.CreateAreaEmitter:UNKNOWN": {
        "prefix": "CreateAreaEmitter",
        "body": "CreateAreaEmitter(${1:polygon},${2:centroid})",
        "description": " ※Params: \n   (polygon)<>[] \n   (centroid)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/emitters 所在行数: 169"
    },
    "Global.DoesPackHaveSkinsForCharacter:UNKNOWN": {
        "prefix": "DoesPackHaveSkinsForCharacter",
        "body": "DoesPackHaveSkinsForCharacter(${1:pack_key},${2:character})",
        "description": " ※Params: \n   (pack_key)<>[] \n   (character)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 550"
    },
    "Global.HandleShardModRPC:UNKNOWN": {
        "prefix": "HandleShardModRPC",
        "body": "HandleShardModRPC(${1:sender},${2:tick},${3:namespace},${4:code},${5:data})",
        "description": " ※Params: \n   (sender)<>[] \n   (tick)<>[] \n   (namespace)<>[] \n   (code)<>[] \n   (data)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networkclientrpc 所在行数: 1570"
    },
    "Global.MakeDragonflyBait:UNKNOWN": {
        "prefix": "MakeDragonflyBait",
        "body": "MakeDragonflyBait(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 825"
    },
    "Global.wall_ruins_item_init_fn:UNKNOWN": {
        "prefix": "wall_ruins_item_init_fn",
        "body": "wall_ruins_item_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1801"
    },
    "Global.CreateSphereEmitter:UNKNOWN": {
        "prefix": "CreateSphereEmitter",
        "body": "CreateSphereEmitter(${1:radius})",
        "description": " ※Params: \n   (radius)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/emitters 所在行数: 140"
    },
    "Global.MakeObstaclePhysics:UNKNOWN": {
        "prefix": "MakeObstaclePhysics",
        "body": "MakeObstaclePhysics(${1:inst},${2:rad},${3:height})",
        "description": " ※Params: \n   (inst)<>[] \n   (rad)<>[] \n   (height)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 588"
    },
    "Global.GetPackTotalItems:UNKNOWN": {
        "prefix": "GetPackTotalItems",
        "body": "GetPackTotalItems(${1:item_key})",
        "description": " ※Params: \n   (item_key)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 176"
    },
    "Global.getdebuglocals:UNKNOWN": {
        "prefix": "getdebuglocals",
        "body": "getdebuglocals(${1:res},${2:level})",
        "description": " ※Params: \n   (res)<>[] \n   (level)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/stacktrace 所在行数: 31"
    },
    "Global.VecUtil_Dot:UNKNOWN": {
        "prefix": "VecUtil_Dot",
        "body": "VecUtil_Dot(${1:p1_x},${2:p1_z},${3:p2_x},${4:p2_z})",
        "description": " ※Params: \n   (p1_x)<>[] \n   (p1_z)<>[] \n   (p2_x)<>[] \n   (p2_z)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/vecutil 所在行数: 31"
    },
    "Global.minisign_drawn_init_fn:UNKNOWN": {
        "prefix": "minisign_drawn_init_fn",
        "body": "minisign_drawn_init_fn(${1:inst},${2:build_name},${3:anim_bank})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n   (anim_bank)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1601"
    },
    "Global.CraftGiberish:UNKNOWN": {
        "prefix": "CraftGiberish",
        "body": "CraftGiberish(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/stringutil 所在行数: 112"
    },
    "Global.Networking_ResurrectAnnouncement:UNKNOWN": {
        "prefix": "Networking_ResurrectAnnouncement",
        "body": "Networking_ResurrectAnnouncement(${1:message},${2:colour})",
        "description": " ※Params: \n   (message)<>[] \n   (colour)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 82"
    },
    "Global.printwrap:UNKNOWN": {
        "prefix": "printwrap",
        "body": "printwrap(${1:msg},${2:...})",
        "description": " ※Params: \n   (msg)<>[] \n   (...)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugtools 所在行数: 24"
    },
    "Global.LoadPOFile:UNKNOWN": {
        "prefix": "LoadPOFile",
        "body": "LoadPOFile(${1:path},${2:lang})",
        "description": " ※Params: \n   (path)<>[] \n   (lang)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 836"
    },
    "Global.GetConsoleOutputList:UNKNOWN": {
        "prefix": "GetConsoleOutputList",
        "body": "GetConsoleOutputList(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugprint 所在行数: 95"
    },
    "Global.Shard_SyncBossDefeated:UNKNOWN": {
        "prefix": "Shard_SyncBossDefeated",
        "body": "Shard_SyncBossDefeated(${1:bossprefab},${2:shardid})",
        "description": " ※Params: \n   (bossprefab)<>[] \n   (shardid)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/shardnetworking 所在行数: 202"
    },
    "Global.getdebugstack:UNKNOWN": {
        "prefix": "getdebugstack",
        "body": "getdebugstack(${1:res},${2:start},${3:top},${4:bottom})",
        "description": " ※Params: \n   (res)<>[] \n   (start)<>[] \n   (top)<>[] \n   (bottom)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/stacktrace 所在行数: 79"
    },
    "Global.SaveToString:UNKNOWN": {
        "prefix": "SaveToString",
        "body": "SaveToString(${1:v})",
        "description": " ※Params: \n   (v)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/stacktrace 所在行数: 13"
    },
    "Global.StackTraceToLog:UNKNOWN": {
        "prefix": "StackTraceToLog",
        "body": "StackTraceToLog(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/stacktrace 所在行数: 129"
    },
    "Global.CanEntitySeeInStorm:UNKNOWN": {
        "prefix": "CanEntitySeeInStorm",
        "body": "CanEntitySeeInStorm(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/simutil 所在行数: 473"
    },
    "Global.d_skilltreestats:UNKNOWN": {
        "prefix": "d_skilltreestats",
        "body": "d_skilltreestats(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 1796"
    },
    "Global.SetOvalPortraitTexture:UNKNOWN": {
        "prefix": "g+SetOvalPortraitTexture",
        "body": "SetOvalPortraitTexture(${1:image_widget},${2:character})",
        "description": " ※Params: \n   (image_widget)<>[] \n   (character)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/characterutil 所在行数: 31"
    },
    "Global.d_moonplant:UNKNOWN": {
        "prefix": "d_moonplant",
        "body": "d_moonplant(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 1785"
    },
    "Global.GetCharacterAvatarTextureLocation:UNKNOWN": {
        "prefix": "g+GetCharacterAvatarTextureLocation",
        "body": "GetCharacterAvatarTextureLocation(${1:character})",
        "description": " ※Params: \n   (character)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/characterutil 所在行数: 72"
    },
    "Global.mem_report:UNKNOWN": {
        "prefix": "mem_report",
        "body": "mem_report(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 689"
    },
    "Global.ShouldEntitySink:UNKNOWN": {
        "prefix": "ShouldEntitySink",
        "body": "ShouldEntitySink(${1:entity},${2:entity_sinks_in_water})",
        "description": " ※Params: \n   (entity)<>[] \n   (entity_sinks_in_water)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/ocean_util 所在行数: 174"
    },
    "Global.Launch2:UNKNOWN": {
        "prefix": "Launch2",
        "body": "Launch2(${1:inst},${2:launcher},${3:basespeed},${4:speedmult},${5:startheight},${6:startradius},${7:vertical_speed},${8:force_angle})",
        "description": " ※Params: \n   (inst)<>[] \n   (launcher)<>[] \n   (basespeed)<>[] \n   (speedmult)<>[] \n   (startheight)<>[] \n   (startradius)<>[] \n   (vertical_speed)<>[] \n   (force_angle)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/physics 所在行数: 35"
    },
    "Global.GetUniquePotentialCharacterStartingInventoryItems:UNKNOWN": {
        "prefix": "g+GetUniquePotentialCharacterStartingInventoryItems",
        "body": "GetUniquePotentialCharacterStartingInventoryItems(${1:character},${2:with_bonus_items})",
        "description": " ※Params: \n   (character)<>[] \n   (with_bonus_items)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/characterutil 所在行数: 127"
    },
    "Global.IsDefaultCharacterSkin:UNKNOWN": {
        "prefix": "IsDefaultCharacterSkin",
        "body": "IsDefaultCharacterSkin(${1:item_key})",
        "description": " ※Params: \n   (item_key)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1379"
    },
    "Global.MakeMediumFreezableCharacter:UNKNOWN": {
        "prefix": "MakeMediumFreezableCharacter",
        "body": "MakeMediumFreezableCharacter(${1:inst},${2:sym},${3:offset})",
        "description": " ※Params: \n   (inst)<>[] \n   (sym)<>[] \n   (offset)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 339"
    },
    "Global.ConsoleWorldEntityUnderMouse:UNKNOWN": {
        "prefix": "ConsoleWorldEntityUnderMouse",
        "body": "ConsoleWorldEntityUnderMouse(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 10"
    },
    "Global.MakeHauntablePanicAndIgnite:UNKNOWN": {
        "prefix": "MakeHauntablePanicAndIgnite",
        "body": "MakeHauntablePanicAndIgnite(${1:inst},${2:panictime},${3:panicchance},${4:ignitechance},${5:cooldown},${6:panic_haunt_value},${7:ignite_haunt_value})",
        "description": " ※Params: \n   (inst)<>[] \n   (panictime)<>[] \n   (panicchance)<>[] \n   (ignitechance)<>[] \n   (cooldown)<>[] \n   (panic_haunt_value)<>[] \n   (ignite_haunt_value)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 1141"
    },
    "Global.SetTileProperty:UNKNOWN": {
        "prefix": "SetTileProperty",
        "body": "SetTileProperty(${1:tile_id},${2:propertyname},${3:value})",
        "description": " ※Params: \n   (tile_id)<>[] \n   (propertyname)<>[] \n   (value)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 385"
    },
    "Global.GetFestivalEventSeasons:UNKNOWN": {
        "prefix": "GetFestivalEventSeasons",
        "body": "GetFestivalEventSeasons(${1:festival})",
        "description": " ※Params: \n   (festival)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/constants 所在行数: 1032"
    },
    "Global.PreventTargetingOnAttacked:UNKNOWN": {
        "prefix": "PreventTargetingOnAttacked",
        "body": "PreventTargetingOnAttacked(${1:inst},${2:attacker},${3:tag})",
        "description": " ※Params: \n   (inst)<>[] \n   (attacker)<>[] \n   (tag)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 1515"
    },
    "Global.ShakeAllCamerasOnPlatform:UNKNOWN": {
        "prefix": "ShakeAllCamerasOnPlatform",
        "body": "ShakeAllCamerasOnPlatform(${1:mode},${2:duration},${3:speed},${4:scale},${5:platform})",
        "description": " ※Params: \n   (mode)<>[] \n   (duration)<>[] \n   (speed)<>[] \n   (scale)<>[] \n   (platform)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/simutil 所在行数: 243"
    },
    "Global.bernie_big_clear_fn:UNKNOWN": {
        "prefix": "bernie_big_clear_fn",
        "body": "bernie_big_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 2026"
    },
    "Global.d_wintersfood:UNKNOWN": {
        "prefix": "d_wintersfood",
        "body": "d_wintersfood(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 742"
    },
    "Global.ReduceAngleRad:UNKNOWN": {
        "prefix": "ReduceAngleRad",
        "body": "ReduceAngleRad(${1:rot})",
        "description": " ※Params: \n   (rot)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mathutil 所在行数: 90"
    },
    "Global.MakeMediumPropagator:UNKNOWN": {
        "prefix": "MakeMediumPropagator",
        "body": "MakeMediumPropagator(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 210"
    },
    "Global.researchlab4_clear_fn:UNKNOWN": {
        "prefix": "researchlab4_clear_fn",
        "body": "researchlab4_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 2048"
    },
    "Global.IsDailyGiftItemPending:UNKNOWN": {
        "prefix": "IsDailyGiftItemPending",
        "body": "IsDailyGiftItemPending(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1618"
    },
    "Global.ProfileStatsAppendToField:UNKNOWN": {
        "prefix": "ProfileStatsAppendToField",
        "body": "ProfileStatsAppendToField(${1:field},${2:value})",
        "description": " ※Params: \n   (field)<>[] \n   (value)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/stats 所在行数: 383"
    },
    "Global.AddPrototyperDef:添加自定义原型机API通用函数片段,is_crafting_station在附近才能制作": {
        "prefix": "AddPrototyperDef",
        "body": "AddPrototyperDef(\"${1:prefab}\", {\n \ticon_atlas = \"images/xxxx.xml\",\n \ticon_image = \"xxxx.tex\",\n \tis_crafting_station = true,\n \taction_str = \"制作\",\n \tfilter_text = \"过滤器名称\"\n})",
        "description": " ※Params: \n   (prototyper_prefab)<>[] \n   (data)<>[] \n ※Description: 添加自定义原型机API通用函数片段,is_crafting_station在附近才能制作\n ※Contributor: @月\n ※Path: scripts_en/modutil 所在行数: 666"
    },
    "Global.chester_eyebone_init_fn:UNKNOWN": {
        "prefix": "chester_eyebone_init_fn",
        "body": "chester_eyebone_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1177"
    },
    "Global.GetGameModeProperty:UNKNOWN": {
        "prefix": "GetGameModeProperty",
        "body": "GetGameModeProperty(${1:property})",
        "description": " ※Params: \n   (property)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/gamemodes 所在行数: 205"
    },
    "Global.OnSaveLoadError:UNKNOWN": {
        "prefix": "OnSaveLoadError",
        "body": "OnSaveLoadError(${1:operation},${2:filename},${3:status})",
        "description": " ※Params: \n   (operation)<>[] \n   (filename)<>[] \n   (status)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/frontend 所在行数: 1400"
    },
    "Global.MakeGhostPhysics:UNKNOWN": {
        "prefix": "MakeGhostPhysics",
        "body": "MakeGhostPhysics(${1:inst},${2:mass},${3:rad})",
        "description": " ※Params: \n   (inst)<>[] \n   (mass)<>[] \n   (rad)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 469"
    },
    "Global.ocean_trawler_init_fn:UNKNOWN": {
        "prefix": "ocean_trawler_init_fn",
        "body": "ocean_trawler_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 270"
    },
    "Global.c_mermking:UNKNOWN": {
        "prefix": "c_mermking",
        "body": "c_mermking(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 83"
    },
    "Global.GetCandidateRecipes:UNKNOWN": {
        "prefix": "GetCandidateRecipes",
        "body": "GetCandidateRecipes(${1:cooker},${2:ingdata})",
        "description": " ※Params: \n   (cooker)<>[] \n   (ingdata)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/cooking 所在行数: 228"
    },
    "Global.HasNewSkinDLCEntitlements:UNKNOWN": {
        "prefix": "HasNewSkinDLCEntitlements",
        "body": "HasNewSkinDLCEntitlements(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1642"
    },
    "Global.BuildListOfSelectedItems:UNKNOWN": {
        "prefix": "BuildListOfSelectedItems",
        "body": "BuildListOfSelectedItems(${1:user_profile},${2:item_type})",
        "description": " ※Params: \n   (user_profile)<>[] \n   (item_type)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1507"
    },
    "Global.chester_clear_fn:UNKNOWN": {
        "prefix": "chester_clear_fn",
        "body": "chester_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1199"
    },
    "Global.MakeHeavyObstaclePhysics:UNKNOWN": {
        "prefix": "MakeHeavyObstaclePhysics",
        "body": "MakeHeavyObstaclePhysics(${1:inst},${2:rad},${3:height})",
        "description": " ※Params: \n   (inst)<>[] \n   (rad)<>[] \n   (height)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 633"
    },
    "Global.MakeFlyingCharacterPhysics:UNKNOWN": {
        "prefix": "MakeFlyingCharacterPhysics",
        "body": "MakeFlyingCharacterPhysics(${1:inst},${2:mass},${3:rad})",
        "description": " ※Params: \n   (inst)<>[] \n   (mass)<>[] \n   (rad)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 414"
    },
    "Global.MakeSnowCovered:UNKNOWN": {
        "prefix": "MakeSnowCovered",
        "body": "MakeSnowCovered(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 714"
    },
    "Global.event_server_data:UNKNOWN": {
        "prefix": "event_server_data",
        "body": "event_server_data(${1:eventname},${2:path})",
        "description": " ※Params: \n   (eventname)<>[] \n   (path)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/entityscript 所在行数: 77"
    },
    "Global.d_waxwellworker:UNKNOWN": {
        "prefix": "d_waxwellworker",
        "body": "d_waxwellworker(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 981"
    },
    "Global.GetClientModRPC:UNKNOWN": {
        "prefix": "GetClientModRPC",
        "body": "GetClientModRPC(${1:namespace},${2:name})",
        "description": " ※Params: \n   (namespace)<>[] \n   (name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 910"
    },
    "Global.MakeHauntablePerish:UNKNOWN": {
        "prefix": "MakeHauntablePerish",
        "body": "MakeHauntablePerish(${1:inst},${2:perishpct},${3:chance},${4:cooldown},${5:haunt_value})",
        "description": " ※Params: \n   (inst)<>[] \n   (perishpct)<>[] \n   (chance)<>[] \n   (cooldown)<>[] \n   (haunt_value)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 1076"
    },
    "Global.GetRandomInstWithTag:UNKNOWN": {
        "prefix": "GetRandomInstWithTag",
        "body": "GetRandomInstWithTag(${1:tag},${2:inst},${3:radius})",
        "description": " ※Params: \n   (tag)<>[] \n   (inst)<>[] \n   (radius)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/simutil 所在行数: 196"
    },
    "Global.MakeHauntableWorkAndIgnite:UNKNOWN": {
        "prefix": "MakeHauntableWorkAndIgnite",
        "body": "MakeHauntableWorkAndIgnite(${1:inst},${2:work_chance},${3:ignite_chance},${4:cooldown},${5:work_haunt_value},${6:ignite_haunt_value})",
        "description": " ※Params: \n   (inst)<>[] \n   (work_chance)<>[] \n   (ignite_chance)<>[] \n   (cooldown)<>[] \n   (work_haunt_value)<>[] \n   (ignite_haunt_value)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 906"
    },
    "Global.MakeHauntableFreeze:UNKNOWN": {
        "prefix": "MakeHauntableFreeze",
        "body": "MakeHauntableFreeze(${1:inst},${2:chance},${3:cooldown},${4:haunt_value})",
        "description": " ※Params: \n   (inst)<>[] \n   (chance)<>[] \n   (cooldown)<>[] \n   (haunt_value)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 937"
    },
    "Global.Start:UNKNOWN": {
        "prefix": "Start",
        "body": "Start(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 1380"
    },
    "Global.AddUserCommand:UNKNOWN": {
        "prefix": "AddUserCommand",
        "body": "AddUserCommand(${1:command_name},${2:data})",
        "description": " ※Params: \n   (command_name)<>[] \n   (data)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 928"
    },
    "Global.MakeHauntableLaunchAndIgnite:UNKNOWN": {
        "prefix": "MakeHauntableLaunchAndIgnite",
        "body": "MakeHauntableLaunchAndIgnite(${1:inst},${2:launchchance},${3:ignitechance},${4:speed},${5:cooldown},${6:launch_haunt_value},${7:ignite_haunt_value})",
        "description": " ※Params: \n   (inst)<>[] \n   (launchchance)<>[] \n   (ignitechance)<>[] \n   (speed)<>[] \n   (cooldown)<>[] \n   (launch_haunt_value)<>[] \n   (ignite_haunt_value)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 973"
    },
    "Global.KillThreadsWithID:UNKNOWN": {
        "prefix": "KillThreadsWithID",
        "body": "KillThreadsWithID(${1:id})",
        "description": " ※Params: \n   (id)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/scheduler 所在行数: 427"
    },
    "Global.ResolveCommandStringProperty:UNKNOWN": {
        "prefix": "ResolveCommandStringProperty",
        "body": "ResolveCommandStringProperty(${1:command},${2:property},${3:default})",
        "description": " ※Params: \n   (command)<>[] \n   (property)<>[] \n   (default)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/usercommands 所在行数: 99"
    },
    "Global.DiffAngle:UNKNOWN": {
        "prefix": "DiffAngle",
        "body": "DiffAngle(${1:rot1},${2:rot2})",
        "description": " ※Params: \n   (rot1)<>[] \n   (rot2)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mathutil 所在行数: 86"
    },
    "Global.WorldResetFromSim:UNKNOWN": {
        "prefix": "WorldResetFromSim",
        "body": "WorldResetFromSim(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 719"
    },
    "Global.MakeCharacterPhysics:UNKNOWN": {
        "prefix": "MakeCharacterPhysics",
        "body": "MakeCharacterPhysics(${1:inst},${2:mass},${3:rad})",
        "description": " ※Params: \n   (inst)<>[] \n   (mass)<>[] \n   (rad)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 398"
    },
    "Global.MakeSmallFreezableCharacter:UNKNOWN": {
        "prefix": "MakeSmallFreezableCharacter",
        "body": "MakeSmallFreezableCharacter(${1:inst},${2:sym},${3:offset})",
        "description": " ※Params: \n   (inst)<>[] \n   (sym)<>[] \n   (offset)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 331"
    },
    "Global.d_boatitems:UNKNOWN": {
        "prefix": "d_boatitems",
        "body": "d_boatitems(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 1001"
    },
    "Global.IsSimPaused:UNKNOWN": {
        "prefix": "IsSimPaused",
        "body": "IsSimPaused(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 831"
    },
    "Global.AddToRegrowthManager:UNKNOWN": {
        "prefix": "AddToRegrowthManager",
        "body": "AddToRegrowthManager(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 1611"
    },
    "Global.Shard_OnShardConnected:UNKNOWN": {
        "prefix": "Shard_OnShardConnected",
        "body": "Shard_OnShardConnected(${1:world_id},${2:tags},${3:world_data})",
        "description": " ※Params: \n   (world_id)<>[] \n   (tags)<>[] \n   (world_data)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/shardnetworking 所在行数: 43"
    },
    "Global.wall_wood_init_fn:UNKNOWN": {
        "prefix": "wall_wood_init_fn",
        "body": "wall_wood_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1857"
    },
    "Global.escape_lua_pattern:UNKNOWN": {
        "prefix": "escape_lua_pattern",
        "body": "escape_lua_pattern(${1:s})",
        "description": " ※Params: \n   (s)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugprint 所在行数: 31"
    },
    "Global.IsPrefabSkinned:UNKNOWN": {
        "prefix": "IsPrefabSkinned",
        "body": "IsPrefabSkinned(${1:prefab})",
        "description": " ※Params: \n   (prefab)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1375"
    },
    "Global.MakeWaxablePlant:UNKNOWN": {
        "prefix": "MakeWaxablePlant",
        "body": "MakeWaxablePlant(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 1656"
    },
    "Global.AddDefaultRippleSymbols:UNKNOWN": {
        "prefix": "AddDefaultRippleSymbols",
        "body": "AddDefaultRippleSymbols(${1:inst},${2:ripple},${3:shadow})",
        "description": " ※Params: \n   (inst)<>[] \n   (ripple)<>[] \n   (shadow)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 1530"
    },
    "Global.DefaultBurntStructureFn:UNKNOWN": {
        "prefix": "DefaultBurntStructureFn",
        "body": "DefaultBurntStructureFn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 51"
    },
    "Global.AddRecipeFilter:UNKNOWN": {
        "prefix": "AddRecipeFilter",
        "body": "AddRecipeFilter(${1:filter_def},${2:index})",
        "description": " ※Params: \n   (filter_def)<>[] \n   (index)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 674"
    },
    "Global.wall_ruins_item_clear_fn:UNKNOWN": {
        "prefix": "wall_ruins_item_clear_fn",
        "body": "wall_ruins_item_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1806"
    },
    "Global.ApplyKlumpToStringTable:UNKNOWN": {
        "prefix": "ApplyKlumpToStringTable",
        "body": "ApplyKlumpToStringTable(${1:string_id},${2:json_str})",
        "description": " ※Params: \n   (string_id)<>[] \n   (json_str)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/klump 所在行数: 73"
    },
    "Global.MakeSmallBurnableCorpse:UNKNOWN": {
        "prefix": "MakeSmallBurnableCorpse",
        "body": "MakeSmallBurnableCorpse(${1:inst},${2:time},${3:sym},${4:offset},${5:scale})",
        "description": " ※Params: \n   (inst)<>[] \n   (time)<>[] \n   (sym)<>[] \n   (offset)<>[] \n   (scale)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 279"
    },
    "Global.DefaultIgniteFn:UNKNOWN": {
        "prefix": "DefaultIgniteFn",
        "body": "DefaultIgniteFn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 5"
    },
    "Global.DoesItemHaveTag:UNKNOWN": {
        "prefix": "DoesItemHaveTag",
        "body": "DoesItemHaveTag(${1:item},${2:tag})",
        "description": " ※Params: \n   (item)<>[] \n   (tag)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 782"
    },
    "Global.c_selectnear:UNKNOWN": {
        "prefix": "c_selectnear",
        "body": "c_selectnear(${1:prefab},${2:rad})",
        "description": " ※Params: \n   (prefab)<>[] \n   (rad)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 994"
    },
    "Global.MakeSnowCoveredPristine:UNKNOWN": {
        "prefix": "MakeSnowCoveredPristine",
        "body": "MakeSnowCoveredPristine(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 707"
    },
    "Global.EnableAllDLC:UNKNOWN": {
        "prefix": "EnableAllDLC",
        "body": "EnableAllDLC(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/dlcsupport 所在行数: 145"
    },
    "Global.MakeHauntableDropFirstItem:UNKNOWN": {
        "prefix": "MakeHauntableDropFirstItem",
        "body": "MakeHauntableDropFirstItem(${1:inst},${2:chance},${3:cooldown},${4:haunt_value})",
        "description": " ※Params: \n   (inst)<>[] \n   (chance)<>[] \n   (cooldown)<>[] \n   (haunt_value)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 1237"
    },
    "Global.GetProfilerSave:UNKNOWN": {
        "prefix": "GetProfilerSave",
        "body": "GetProfilerSave(${1:results})",
        "description": " ※Params: \n   (results)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/perfutil 所在行数: 35"
    },
    "Global.CompareItemDataForSortByCount:UNKNOWN": {
        "prefix": "CompareItemDataForSortByCount",
        "body": "CompareItemDataForSortByCount(${1:item_key_a},${2:item_key_b},${3:item_counts})",
        "description": " ※Params: \n   (item_key_a)<>[] \n   (item_key_b)<>[] \n   (item_counts)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1023"
    },
    "Global.ToggleOnCharacterCollisions:UNKNOWN": {
        "prefix": "ToggleOnCharacterCollisions",
        "body": "ToggleOnCharacterCollisions(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 1422"
    },
    "Global.ToggleOffAllObjectCollisions:UNKNOWN": {
        "prefix": "ToggleOffAllObjectCollisions",
        "body": "ToggleOffAllObjectCollisions(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 1429"
    },
    "Global.c_rotatecw:UNKNOWN": {
        "prefix": "c_rotatecw",
        "body": "c_rotatecw(${1:delta})",
        "description": " ※Params: \n   (delta)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 1975"
    },
    "Global.AddRecipePostInitAny:UNKNOWN": {
        "prefix": "AddRecipePostInitAny",
        "body": "AddRecipePostInitAny(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 602"
    },
    "Global.d_fishing:UNKNOWN": {
        "prefix": "d_fishing",
        "body": "d_fishing(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 1105"
    },
    "Global.MakeProjectilePhysics:UNKNOWN": {
        "prefix": "MakeProjectilePhysics",
        "body": "MakeProjectilePhysics(${1:inst},${2:mass},${3:rad})",
        "description": " ※Params: \n   (inst)<>[] \n   (mass)<>[] \n   (rad)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 383"
    },
    "Global.WorldSettings_Pickable_PreLoad:UNKNOWN": {
        "prefix": "g+WorldSettings_Pickable_PreLoad",
        "body": "WorldSettings_Pickable_PreLoad(${1:inst},${2:data},${3:maxregentime})",
        "description": " ※Params: \n   (inst)<>[] \n   (data)<>[] \n   (maxregentime)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/worldsettingsutil 所在行数: 241"
    },
    "Global.MakeLargePropagator:UNKNOWN": {
        "prefix": "MakeLargePropagator",
        "body": "MakeLargePropagator(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 225"
    },
    "Global.MakeMediumBurnableCorpse:UNKNOWN": {
        "prefix": "MakeMediumBurnableCorpse",
        "body": "MakeMediumBurnableCorpse(${1:inst},${2:time},${3:sym},${4:offset},${5:scale})",
        "description": " ※Params: \n   (inst)<>[] \n   (time)<>[] \n   (sym)<>[] \n   (offset)<>[] \n   (scale)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 292"
    },
    "Global.ToggleOnAllObjectCollisionsAt:UNKNOWN": {
        "prefix": "ToggleOnAllObjectCollisionsAt",
        "body": "ToggleOnAllObjectCollisionsAt(${1:inst},${2:x},${3:z})",
        "description": " ※Params: \n   (inst)<>[] \n   (x)<>[] \n   (z)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 1447"
    },
    "Global.AddStategraphPostInit:添加修改修改状态图(SG)API通用函数片段,初始化时最后执行": {
        "prefix": "AddStategraphPostInit",
        "body": "AddStategraphPostInit(\"${1:StateGraph}\", function(self)\n\t${0}\nend)",
        "description": " ※Params: \n   (stategraph)<>[] \n   (fn)<>[] \n ※Description: 添加修改修改状态图(SG)API通用函数片段,初始化时最后执行\n ※Contributor: @月\n ※Path: scripts_en/modutil 所在行数: 557"
    },
    "Global.d_fertilizers:UNKNOWN": {
        "prefix": "d_fertilizers",
        "body": "d_fertilizers(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 1408"
    },
    "Global.DisplayCharacterUnownedPopup:UNKNOWN": {
        "prefix": "DisplayCharacterUnownedPopup",
        "body": "DisplayCharacterUnownedPopup(${1:character},${2:skins_subscreener})",
        "description": " ※Params: \n   (character)<>[] \n   (skins_subscreener)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1694"
    },
    "Global.MakeHauntableLaunchOrChangePrefab:UNKNOWN": {
        "prefix": "MakeHauntableLaunchOrChangePrefab",
        "body": "MakeHauntableLaunchOrChangePrefab(${1:inst},${2:launchchance},${3:prefabchance},${4:speed},${5:cooldown},${6:newprefab},${7:prefab_haunt_value},${8:launch_haunt_value},${9:nofx})",
        "description": " ※Params: \n   (inst)<>[] \n   (launchchance)<>[] \n   (prefabchance)<>[] \n   (speed)<>[] \n   (cooldown)<>[] \n   (newprefab)<>[] \n   (prefab_haunt_value)<>[] \n   (launch_haunt_value)<>[] \n   (nofx)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 1054"
    },
    "Global.MakeMediumBurnable:UNKNOWN": {
        "prefix": "MakeMediumBurnable",
        "body": "MakeMediumBurnable(${1:inst},${2:time},${3:offset},${4:structure},${5:sym})",
        "description": " ※Params: \n   (inst)<>[] \n   (time)<>[] \n   (offset)<>[] \n   (structure)<>[] \n   (sym)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 171"
    },
    "Global.c_simphase:UNKNOWN": {
        "prefix": "c_simphase",
        "body": "c_simphase(${1:phase})",
        "description": " ※Params: \n   (phase)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 884"
    },
    "Global.UnitRand:UNKNOWN": {
        "prefix": "UnitRand",
        "body": "UnitRand(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/emitters 所在行数: 101"
    },
    "Global.ValidateSpawnPrefabRequest:UNKNOWN": {
        "prefix": "ValidateSpawnPrefabRequest",
        "body": "ValidateSpawnPrefabRequest(${1:user_id},${2:prefab_name},${3:skin_base},${4:clothing_body},${5:clothing_hand},${6:clothing_legs},${7:clothing_feet},${8:allow_seamlessswap_characters})",
        "description": " ※Params: \n   (user_id)<>[] \n   (prefab_name)<>[] \n   (skin_base)<>[] \n   (clothing_body)<>[] \n   (clothing_hand)<>[] \n   (clothing_legs)<>[] \n   (clothing_feet)<>[] \n   (allow_seamlessswap_characters)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 192"
    },
    "Global.GetGameModesSpinnerData:UNKNOWN": {
        "prefix": "GetGameModesSpinnerData",
        "body": "GetGameModesSpinnerData(${1:enabled_mods})",
        "description": " ※Params: \n   (enabled_mods)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/gamemodes 所在行数: 213"
    },
    "Global.LoadPrefabFile:UNKNOWN": {
        "prefix": "LoadPrefabFile",
        "body": "LoadPrefabFile(${1:filename},${2:async_batch_validation},${3:search_asset_first_path})",
        "description": " ※Params: \n   (filename)<>[] \n   (async_batch_validation)<>[] \n   (search_asset_first_path)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 145"
    },
    "Global.MakeMediumBurnableCharacter:UNKNOWN": {
        "prefix": "MakeMediumBurnableCharacter",
        "body": "MakeMediumBurnableCharacter(${1:inst},${2:sym},${3:offset})",
        "description": " ※Params: \n   (inst)<>[] \n   (sym)<>[] \n   (offset)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 253"
    },
    "Global.cross:UNKNOWN": {
        "prefix": "cross",
        "body": "cross(${1:o},${2:a},${3:b})",
        "description": " ※Params: \n   (o)<>[] \n   (a)<>[] \n   (b)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/maputil 所在行数: 42"
    },
    "Global.MakeHauntablePlayAnim:UNKNOWN": {
        "prefix": "MakeHauntablePlayAnim",
        "body": "MakeHauntablePlayAnim(${1:inst},${2:anim},${3:animloop},${4:pushanim},${5:animduration},${6:endanim},${7:endanimloop},${8:soundevent},${9:soundname},${10:soundduration},${11:chance},${12:cooldown},${13:haunt_value})",
        "description": " ※Params: \n   (inst)<>[] \n   (anim)<>[] \n   (animloop)<>[] \n   (pushanim)<>[] \n   (animduration)<>[] \n   (endanim)<>[] \n   (endanimloop)<>[] \n   (soundevent)<>[] \n   (soundname)<>[] \n   (soundduration)<>[] \n   (chance)<>[] \n   (cooldown)<>[] \n   (haunt_value)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 1166"
    },
    "Global.ChangeToObstaclePhysics:UNKNOWN": {
        "prefix": "ChangeToObstaclePhysics",
        "body": "ChangeToObstaclePhysics(${1:inst},${2:rad},${3:height})",
        "description": " ※Params: \n   (inst)<>[] \n   (rad)<>[] \n   (height)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 540"
    },
    "Global.c_worldstatedebug:UNKNOWN": {
        "prefix": "c_worldstatedebug",
        "body": "c_worldstatedebug(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 980"
    },
    "Global.steeringwheel_item_init_fn:UNKNOWN": {
        "prefix": "steeringwheel_item_init_fn",
        "body": "steeringwheel_item_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1674"
    },
    "Global.d_allshells:UNKNOWN": {
        "prefix": "d_allshells",
        "body": "d_allshells(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 1294"
    },
    "Global.SetPurchases:UNKNOWN": {
        "prefix": "SetPurchases",
        "body": "SetPurchases(${1:purchases})",
        "description": " ※Params: \n   (purchases)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 932"
    },
    "Global.GetDescription_AddSpecialCases:UNKNOWN": {
        "prefix": "GetDescription_AddSpecialCases",
        "body": "GetDescription_AddSpecialCases(${1:ret},${2:charactertable},${3:inst},${4:item},${5:modifier})",
        "description": " ※Params: \n   (ret)<>[] \n   (charactertable)<>[] \n   (inst)<>[] \n   (item)<>[] \n   (modifier)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/stringutil 所在行数: 338"
    },
    "Global.DefaultBurntCorpseFn:UNKNOWN": {
        "prefix": "DefaultBurntCorpseFn",
        "body": "DefaultBurntCorpseFn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 127"
    },
    "Global.MarkUserIDRPC:UNKNOWN": {
        "prefix": "MarkUserIDRPC",
        "body": "MarkUserIDRPC(${1:namespace},${2:name})",
        "description": " ※Params: \n   (namespace)<>[] \n   (name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networkclientrpc 所在行数: 1607"
    },
    "Global.ChangeToInventoryItemPhysics:UNKNOWN": {
        "prefix": "ChangeToInventoryItemPhysics",
        "body": "ChangeToInventoryItemPhysics(${1:inst},${2:mass},${3:rad})",
        "description": " ※Params: \n   (inst)<>[] \n   (mass)<>[] \n   (rad)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 561"
    },
    "Global.AddPrintLogger:UNKNOWN": {
        "prefix": "AddPrintLogger",
        "body": "AddPrintLogger(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugprint 所在行数: 5"
    },
    "Global.heatrock_clear_fn:UNKNOWN": {
        "prefix": "heatrock_clear_fn",
        "body": "heatrock_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 2352"
    },
    "Global.c_rotateccw:UNKNOWN": {
        "prefix": "c_rotateccw",
        "body": "c_rotateccw(${1:delta})",
        "description": " ※Params: \n   (delta)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 1986"
    },
    "Global.SerializeUserSession:UNKNOWN": {
        "prefix": "SerializeUserSession",
        "body": "SerializeUserSession(${1:player},${2:isnewspawn})",
        "description": " ※Params: \n   (player)<>[] \n   (isnewspawn)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 300"
    },
    "Global.GetScrapbookIconAtlas_Internal:UNKNOWN": {
        "prefix": "GetScrapbookIconAtlas_Internal",
        "body": "GetScrapbookIconAtlas_Internal(${1:imagename})",
        "description": " ※Params: \n   (imagename)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/simutil 所在行数: 692"
    },
    "Global.IsRestrictedCharacter:UNKNOWN": {
        "prefix": "IsRestrictedCharacter",
        "body": "IsRestrictedCharacter(${1:prefab})",
        "description": " ※Params: \n   (prefab)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1351"
    },
    "Global.MakeHauntableLaunchAndDropFirstItem:UNKNOWN": {
        "prefix": "MakeHauntableLaunchAndDropFirstItem",
        "body": "MakeHauntableLaunchAndDropFirstItem(${1:inst},${2:launchchance},${3:dropchance},${4:speed},${5:cooldown},${6:launch_haunt_value},${7:drop_haunt_value})",
        "description": " ※Params: \n   (inst)<>[] \n   (launchchance)<>[] \n   (dropchance)<>[] \n   (speed)<>[] \n   (cooldown)<>[] \n   (launch_haunt_value)<>[] \n   (drop_haunt_value)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 1268"
    },
    "Global.AddHauntableCustomReaction:UNKNOWN": {
        "prefix": "AddHauntableCustomReaction",
        "body": "AddHauntableCustomReaction(${1:inst},${2:fn},${3:secondrxn},${4:ignoreinitialresult},${5:ignoresecondaryresult})",
        "description": " ※Params: \n   (inst)<>[] \n   (fn)<>[] \n   (secondrxn)<>[] \n   (ignoreinitialresult)<>[] \n   (ignoresecondaryresult)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 1310"
    },
    "Global.MakeHauntableLaunch:UNKNOWN": {
        "prefix": "MakeHauntableLaunch",
        "body": "MakeHauntableLaunch(${1:inst},${2:chance},${3:speed},${4:cooldown},${5:haunt_value})",
        "description": " ※Params: \n   (inst)<>[] \n   (chance)<>[] \n   (speed)<>[] \n   (cooldown)<>[] \n   (haunt_value)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 835"
    },
    "Global.StackTrace:UNKNOWN": {
        "prefix": "StackTrace",
        "body": "StackTrace(${1:err})",
        "description": " ※Params: \n   (err)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/stacktrace 所在行数: 122"
    },
    "Global.GetModVersion:UNKNOWN": {
        "prefix": "GetModVersion",
        "body": "GetModVersion(${1:mod_name},${2:mod_info_use})",
        "description": " ※Params: \n   (mod_name)<>[] \n   (mod_info_use)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mods 所在行数: 128"
    },
    "Global.RegisterSkilltreeBGForCharacter:UNKNOWN": {
        "prefix": "RegisterSkilltreeBGForCharacter",
        "body": "RegisterSkilltreeBGForCharacter(${1:atlas},${2:charactername})",
        "description": " ※Params: \n   (atlas)<>[] \n   (charactername)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 964"
    },
    "Global.glomling_init_fn:UNKNOWN": {
        "prefix": "glomling_init_fn",
        "body": "glomling_init_fn(${1:inst},${2:build_name},${3:default_build})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n   (default_build)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1528"
    },
    "Global.d_light:UNKNOWN": {
        "prefix": "d_light",
        "body": "d_light(${1:c1},${2:c2},${3:c3})",
        "description": " ※Params: \n   (c1)<>[] \n   (c2)<>[] \n   (c3)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 492"
    },
    "Global.DisableRPCSending:UNKNOWN": {
        "prefix": "DisableRPCSending",
        "body": "DisableRPCSending(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networkclientrpc 所在行数: 1624"
    },
    "Global.c_showradius:UNKNOWN": {
        "prefix": "c_showradius",
        "body": "c_showradius(${1:radius},${2:parent})",
        "description": " ※Params: \n   (radius)<>[] \n   (parent)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 2017"
    },
    "Global.ChangeToWaterObstaclePhysics:UNKNOWN": {
        "prefix": "ChangeToWaterObstaclePhysics",
        "body": "ChangeToWaterObstaclePhysics(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 555"
    },
    "Global.MakeSmallHeavyObstaclePhysics:UNKNOWN": {
        "prefix": "MakeSmallHeavyObstaclePhysics",
        "body": "MakeSmallHeavyObstaclePhysics(${1:inst},${2:rad},${3:height})",
        "description": " ※Params: \n   (inst)<>[] \n   (rad)<>[] \n   (height)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 653"
    },
    "Global.AreAnyClientModsEnabled:UNKNOWN": {
        "prefix": "AreAnyClientModsEnabled",
        "body": "AreAnyClientModsEnabled(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mods 所在行数: 78"
    },
    "Global.printsel:UNKNOWN": {
        "prefix": "printsel",
        "body": "printsel(${1:inst},${2:...})",
        "description": " ※Params: \n   (inst)<>[] \n   (...)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugtools 所在行数: 34"
    },
    "Global.MakeHauntableIgnite:UNKNOWN": {
        "prefix": "MakeHauntableIgnite",
        "body": "MakeHauntableIgnite(${1:inst},${2:chance},${3:cooldown},${4:haunt_value})",
        "description": " ※Params: \n   (inst)<>[] \n   (chance)<>[] \n   (cooldown)<>[] \n   (haunt_value)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 955"
    },
    "Global.CompareRarities:UNKNOWN": {
        "prefix": "CompareRarities",
        "body": "CompareRarities(${1:item_key_a},${2:item_key_b})",
        "description": " ※Params: \n   (item_key_a)<>[] \n   (item_key_b)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 88"
    },
    "Global.Shard_IsWorldFull:UNKNOWN": {
        "prefix": "Shard_IsWorldFull",
        "body": "Shard_IsWorldFull(${1:world_id})",
        "description": " ※Params: \n   (world_id)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/shardnetworking 所在行数: 20"
    },
    "Global.mastupgrade_lightningrod_clear_fn:UNKNOWN": {
        "prefix": "mastupgrade_lightningrod_clear_fn",
        "body": "mastupgrade_lightningrod_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1760"
    },
    "Global.critter_perdling_builder_clear_fn:UNKNOWN": {
        "prefix": "critter_perdling_builder_clear_fn",
        "body": "critter_perdling_builder_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1572"
    },
    "Global.MakePondPhysics:UNKNOWN": {
        "prefix": "MakePondPhysics",
        "body": "MakePondPhysics(${1:inst},${2:rad},${3:height})",
        "description": " ※Params: \n   (inst)<>[] \n   (rad)<>[] \n   (height)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 670"
    },
    "Global.MakeDeployableFertilizer:UNKNOWN": {
        "prefix": "MakeDeployableFertilizer",
        "body": "MakeDeployableFertilizer(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 1591"
    },
    "Global.AddLevel:UNKNOWN": {
        "prefix": "AddLevel",
        "body": "AddLevel(${1:arg1},${2:arg2},${3:...})",
        "description": " ※Params: \n   (arg1)<>[] \n   (arg2)<>[] \n   (...)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 287"
    },
    "Global.MakeLargeBurnableCharacter:UNKNOWN": {
        "prefix": "MakeLargeBurnableCharacter",
        "body": "MakeLargeBurnableCharacter(${1:inst},${2:sym},${3:offset},${4:scale})",
        "description": " ※Params: \n   (inst)<>[] \n   (sym)<>[] \n   (offset)<>[] \n   (scale)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 266"
    },
    "Global.WallUpdate:UNKNOWN": {
        "prefix": "WallUpdate",
        "body": "WallUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/update 所在行数: 33"
    },
    "Global.MakeGiantCharacterPhysics:UNKNOWN": {
        "prefix": "MakeGiantCharacterPhysics",
        "body": "MakeGiantCharacterPhysics(${1:inst},${2:mass},${3:rad})",
        "description": " ※Params: \n   (inst)<>[] \n   (mass)<>[] \n   (rad)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 439"
    },
    "Global.MakeNoGrowInWinter:UNKNOWN": {
        "prefix": "MakeNoGrowInWinter",
        "body": "MakeNoGrowInWinter(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 702"
    },
    "Global.RemovePhysicsColliders:UNKNOWN": {
        "prefix": "RemovePhysicsColliders",
        "body": "RemovePhysicsColliders(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 683"
    },
    "Global.GetScrapbookIconAtlas:UNKNOWN": {
        "prefix": "GetScrapbookIconAtlas",
        "body": "GetScrapbookIconAtlas(${1:imagename})",
        "description": " ※Params: \n   (imagename)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/simutil 所在行数: 702"
    },
    "Global.MakeLargeBurnable:UNKNOWN": {
        "prefix": "MakeLargeBurnable",
        "body": "MakeLargeBurnable(${1:inst},${2:time},${3:offset},${4:structure},${5:sym})",
        "description": " ※Params: \n   (inst)<>[] \n   (time)<>[] \n   (offset)<>[] \n   (structure)<>[] \n   (sym)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 183"
    },
    "Global.ChangeToGiantCharacterPhysics:UNKNOWN": {
        "prefix": "ChangeToGiantCharacterPhysics",
        "body": "ChangeToGiantCharacterPhysics(${1:inst},${2:mass},${3:rad})",
        "description": " ※Params: \n   (inst)<>[] \n   (mass)<>[] \n   (rad)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 522"
    },
    "Global.mastupgrade_lightningrod_item_init_fn:UNKNOWN": {
        "prefix": "mastupgrade_lightningrod_item_init_fn",
        "body": "mastupgrade_lightningrod_item_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1744"
    },
    "Global.RequestShutdown:UNKNOWN": {
        "prefix": "RequestShutdown",
        "body": "RequestShutdown(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 1513"
    },
    "Global.MakeHauntableWork:UNKNOWN": {
        "prefix": "MakeHauntableWork",
        "body": "MakeHauntableWork(${1:inst},${2:chance},${3:cooldown},${4:haunt_value})",
        "description": " ※Params: \n   (inst)<>[] \n   (chance)<>[] \n   (cooldown)<>[] \n   (haunt_value)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 889"
    },
    "Global.ForceAuthenticationDialog:UNKNOWN": {
        "prefix": "ForceAuthenticationDialog",
        "body": "ForceAuthenticationDialog(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/gamelogic 所在行数: 104"
    },
    "Global.decode_scanWhitespace:UNKNOWN": {
        "prefix": "decode_scanWhitespace",
        "body": "decode_scanWhitespace(${1:s},${2:startPos})",
        "description": " ※Params: \n   (s)<>[] \n   (startPos)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/json 所在行数: 461"
    },
    "Global.c_printpos:UNKNOWN": {
        "prefix": "c_printpos",
        "body": "c_printpos(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 576"
    },
    "Global.MakeHauntableLaunchAndPerish:UNKNOWN": {
        "prefix": "MakeHauntableLaunchAndPerish",
        "body": "MakeHauntableLaunchAndPerish(${1:inst},${2:launchchance},${3:perishchance},${4:speed},${5:perishpct},${6:cooldown},${7:launch_haunt_value},${8:perish_haunt_value})",
        "description": " ※Params: \n   (inst)<>[] \n   (launchchance)<>[] \n   (perishchance)<>[] \n   (speed)<>[] \n   (perishpct)<>[] \n   (cooldown)<>[] \n   (launch_haunt_value)<>[] \n   (perish_haunt_value)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 1093"
    },
    "Global.Remap:UNKNOWN": {
        "prefix": "Remap",
        "body": "Remap(${1:i},${2:a},${3:b},${4:x},${5:y})",
        "description": " ※Params: \n   (i)<>[] \n   (a)<>[] \n   (b)<>[] \n   (x)<>[] \n   (y)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mathutil 所在行数: 19"
    },
    "Global.GetDescription:UNKNOWN": {
        "prefix": "GetDescription",
        "body": "GetDescription(${1:inst},${2:item},${3:modifier})",
        "description": " ※Params: \n   (inst)<>[] \n   (item)<>[] \n   (modifier)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/stringutil 所在行数: 364"
    },
    "Global.MakeTinyFreezableCharacter:UNKNOWN": {
        "prefix": "MakeTinyFreezableCharacter",
        "body": "MakeTinyFreezableCharacter(${1:inst},${2:sym},${3:offset})",
        "description": " ※Params: \n   (inst)<>[] \n   (sym)<>[] \n   (offset)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 323"
    },
    "Global.wall_stone_clear_fn:UNKNOWN": {
        "prefix": "wall_stone_clear_fn",
        "body": "wall_stone_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1840"
    },
    "Global.SetSuper:UNKNOWN": {
        "prefix": "SetSuper",
        "body": "SetSuper(${1:value})",
        "description": " ※Params: \n   (value)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/stats 所在行数: 396"
    },
    "Global.VecUtil_GetAngleInRads:UNKNOWN": {
        "prefix": "VecUtil_GetAngleInRads",
        "body": "VecUtil_GetAngleInRads(${1:p1_x},${2:p1_z})",
        "description": " ※Params: \n   (p1_x)<>[] \n   (p1_z)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/vecutil 所在行数: 72"
    },
    "Global.c_goto:UNKNOWN": {
        "prefix": "c_goto",
        "body": "c_goto(${1:dest},${2:inst})",
        "description": " ※Params: \n   (dest)<>[] \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 599"
    },
    "Global.Shard_ReceiveVote:UNKNOWN": {
        "prefix": "Shard_ReceiveVote",
        "body": "Shard_ReceiveVote(${1:selection},${2:user_id})",
        "description": " ※Params: \n   (selection)<>[] \n   (user_id)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/shardnetworking 所在行数: 161"
    },
    "Global.SendModRPCToClient:服务器向客户端发RPC": {
        "prefix": "SendModRPCToClient",
        "body": "SendModRPCToClient(MOD_RPC[${1:namespace}][${2:name}])",
        "description": " ※Params: \n   (id_table)<>[MOD_RPC[命名空间][rpcID]] \n   (...)<any>[要传到客户端的数据,不可以是表,可不填] \n ※Description: 服务器向客户端发RPC\n ※Contributor: @lan\n ※Path: scripts_en/modutil 所在行数: 892"
    },
    "Global.SpawnPrefabFromSim:UNKNOWN": {
        "prefix": "SpawnPrefabFromSim",
        "body": "SpawnPrefabFromSim(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 325"
    },
    "Global.critter_glomling_builder_clear_fn:UNKNOWN": {
        "prefix": "critter_glomling_builder_clear_fn",
        "body": "critter_glomling_builder_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1550"
    },
    "Global.d_cycle_clothing:UNKNOWN": {
        "prefix": "d_cycle_clothing",
        "body": "d_cycle_clothing(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 607"
    },
    "Global.UserToPlayer:UNKNOWN": {
        "prefix": "UserToPlayer",
        "body": "UserToPlayer(${1:input})",
        "description": " ※Params: \n   (input)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/usercommands 所在行数: 653"
    },
    "Global.Shutdown:UNKNOWN": {
        "prefix": "Shutdown",
        "body": "Shutdown(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 1538"
    },
    "Global.d_oceanarena:UNKNOWN": {
        "prefix": "d_oceanarena",
        "body": "d_oceanarena(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 254"
    },
    "Global.RegisterAllDLC:UNKNOWN": {
        "prefix": "RegisterAllDLC",
        "body": "RegisterAllDLC(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/dlcsupport 所在行数: 58"
    },
    "Global.c_counttagged:UNKNOWN": {
        "prefix": "c_counttagged",
        "body": "c_counttagged(${1:tag},${2:noprint})",
        "description": " ※Params: \n   (tag)<>[] \n   (noprint)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 901"
    },
    "Global.Shard_SyncMermKingPauldron:UNKNOWN": {
        "prefix": "Shard_SyncMermKingPauldron",
        "body": "Shard_SyncMermKingPauldron(${1:exists},${2:shardid})",
        "description": " ※Params: \n   (exists)<>[] \n   (shardid)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/shardnetworking 所在行数: 258"
    },
    "Global.bernie_inactive_clear_fn:UNKNOWN": {
        "prefix": "bernie_inactive_clear_fn",
        "body": "bernie_inactive_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 2000"
    },
    "Global.bundlewrap_init_fn:UNKNOWN": {
        "prefix": "bundlewrap_init_fn",
        "body": "bundlewrap_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1258"
    },
    "Global.HandleClientRPC:UNKNOWN": {
        "prefix": "HandleClientRPC",
        "body": "HandleClientRPC(${1:tick},${2:code},${3:data})",
        "description": " ※Params: \n   (tick)<>[] \n   (code)<>[] \n   (data)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networkclientrpc 所在行数: 1332"
    },
    "Global.GetNewSkinDLCEntitlement:UNKNOWN": {
        "prefix": "GetNewSkinDLCEntitlement",
        "body": "GetNewSkinDLCEntitlement(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1645"
    },
    "Global.MakeLargeBurnableCorpse:UNKNOWN": {
        "prefix": "MakeLargeBurnableCorpse",
        "body": "MakeLargeBurnableCorpse(${1:inst},${2:time},${3:sym},${4:offset},${5:scale})",
        "description": " ※Params: \n   (inst)<>[] \n   (time)<>[] \n   (sym)<>[] \n   (offset)<>[] \n   (scale)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 305"
    },
    "Global.Shard_SyncMermKingTrident:UNKNOWN": {
        "prefix": "Shard_SyncMermKingTrident",
        "body": "Shard_SyncMermKingTrident(${1:exists},${2:shardid})",
        "description": " ※Params: \n   (exists)<>[] \n   (shardid)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/shardnetworking 所在行数: 228"
    },
    "Global.d_spawnallarmor_onstands:UNKNOWN": {
        "prefix": "d_spawnallarmor_onstands",
        "body": "d_spawnallarmor_onstands(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 1589"
    },
    "Global.decode_scanArray:UNKNOWN": {
        "prefix": "decode_scanArray",
        "body": "decode_scanArray(${1:s},${2:startPos})",
        "description": " ※Params: \n   (s)<>[] \n   (startPos)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/json 所在行数: 270"
    },
    "Global.Shard_GetConnectedShards:UNKNOWN": {
        "prefix": "Shard_GetConnectedShards",
        "body": "Shard_GetConnectedShards(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/shardnetworking 所在行数: 125"
    },
    "Global.d_dumpItemsTXT:UNKNOWN": {
        "prefix": "d_dumpItemsTXT",
        "body": "d_dumpItemsTXT(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 1884"
    },
    "Global.ShowWalkableGrid:UNKNOWN": {
        "prefix": "ShowWalkableGrid",
        "body": "ShowWalkableGrid(${1:graph})",
        "description": " ※Params: \n   (graph)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/maputil 所在行数: 184"
    },
    "Global.AddClientModRPCHandler:注册客户端rpc,接收服务器的数据用的": {
        "prefix": "AddClientModRPCHandler",
        "body": "AddClientModRPCHandler(${1:namespace}, ${2:name}, function(player)\n\tif player and player:IsValid() and not player:HasTag(\"playerghost\") then\n\t\t$3\n\tend\nend)",
        "description": " ※Params: \n   (namespace)<string>[命名空间(写mod名即可)] \n   (name)<string>[当前命名空间下的rpc名字] \n   ()<function>[]\n      {Params:\n         (player)<table>[发rpc的玩家] \n         (...)<any>[接收的数据]} \n ※Description: 注册客户端rpc,接收服务器的数据用的\n ※Contributor: @lan\n ※Path: scripts_en/modutil 所在行数: 862"
    },
    "Global.d_allcustomhidingspots:UNKNOWN": {
        "prefix": "d_allcustomhidingspots",
        "body": "d_allcustomhidingspots(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 937"
    },
    "Global.GetClosestNode:UNKNOWN": {
        "prefix": "GetClosestNode",
        "body": "GetClosestNode(${1:x},${2:y})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/maputil 所在行数: 12"
    },
    "Global.ShowClosestNodeToPlayer:UNKNOWN": {
        "prefix": "ShowClosestNodeToPlayer",
        "body": "ShowClosestNodeToPlayer(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/maputil 所在行数: 35"
    },
    "Global.MapHideAll:UNKNOWN": {
        "prefix": "MapHideAll",
        "body": "MapHideAll(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/maputil 所在行数: 150"
    },
    "Global.RegisterPrefabs:UNKNOWN": {
        "prefix": "RegisterPrefabs",
        "body": "RegisterPrefabs(${1:...})",
        "description": " ※Params: \n   (...)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 133"
    },
    "Global.DrawWalkableGrid:UNKNOWN": {
        "prefix": "DrawWalkableGrid",
        "body": "DrawWalkableGrid(${1:graph})",
        "description": " ※Params: \n   (graph)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/maputil 所在行数: 154"
    },
    "Global.ReconstructTopology:UNKNOWN": {
        "prefix": "ReconstructTopology",
        "body": "ReconstructTopology(${1:graph})",
        "description": " ※Params: \n   (graph)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/maputil 所在行数: 230"
    },
    "Global.GetWorkshopIdNumber:UNKNOWN": {
        "prefix": "GetWorkshopIdNumber",
        "body": "GetWorkshopIdNumber(${1:modname})",
        "description": " ※Params: \n   (modname)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modindex 所在行数: 237"
    },
    "Global.c_startvote:UNKNOWN": {
        "prefix": "c_startvote",
        "body": "c_startvote(${1:commandname},${2:playeroruserid})",
        "description": " ※Params: \n   (commandname)<>[] \n   (playeroruserid)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 1425"
    },
    "Global.ResolveModname:UNKNOWN": {
        "prefix": "ResolveModname",
        "body": "ResolveModname(${1:modname})",
        "description": " ※Params: \n   (modname)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modindex 所在行数: 216"
    },
    "Global.SetClientRequestedAction:UNKNOWN": {
        "prefix": "SetClientRequestedAction",
        "body": "SetClientRequestedAction(${1:actioncode},${2:mod_name})",
        "description": " ※Params: \n   (actioncode)<>[] \n   (mod_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/actions 所在行数: 179"
    },
    "Global.GetAllActiveEvents:UNKNOWN": {
        "prefix": "GetAllActiveEvents",
        "body": "GetAllActiveEvents(${1:special_event},${2:extra_events})",
        "description": " ※Params: \n   (special_event)<>[] \n   (extra_events)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/constants 所在行数: 975"
    },
    "Global.IsModCookingProduct:UNKNOWN": {
        "prefix": "IsModCookingProduct",
        "body": "IsModCookingProduct(${1:cooker},${2:name})",
        "description": " ※Params: \n   (cooker)<>[] \n   (name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/cooking 所在行数: 74"
    },
    "Global.LandFlyingCreature:UNKNOWN": {
        "prefix": "LandFlyingCreature",
        "body": "LandFlyingCreature(${1:creature})",
        "description": " ※Params: \n   (creature)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/ocean_util 所在行数: 152"
    },
    "Global.MakeHauntablePanic:UNKNOWN": {
        "prefix": "MakeHauntablePanic",
        "body": "MakeHauntablePanic(${1:inst},${2:panictime},${3:chance},${4:cooldown},${5:haunt_value})",
        "description": " ※Params: \n   (inst)<>[] \n   (panictime)<>[] \n   (chance)<>[] \n   (cooldown)<>[] \n   (haunt_value)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 1121"
    },
    "Global.WorldSettings_Pickable_RegenTime:UNKNOWN": {
        "prefix": "g+WorldSettings_Pickable_RegenTime",
        "body": "WorldSettings_Pickable_RegenTime(${1:inst},${2:regentime},${3:enabled})",
        "description": " ※Params: \n   (inst)<>[] \n   (regentime)<>[] \n   (enabled)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/worldsettingsutil 所在行数: 252"
    },
    "Global.SaveGame:UNKNOWN": {
        "prefix": "SaveGame",
        "body": "SaveGame(${1:isshutdown},${2:cb})",
        "description": " ※Params: \n   (isshutdown)<>[] \n   (cb)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 1038"
    },
    "Global.IsGamePurchased:UNKNOWN": {
        "prefix": "IsGamePurchased",
        "body": "IsGamePurchased(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/upsell 所在行数: 6"
    },
    "Global.WorldSettings_Timer_PreLoad_Fix:UNKNOWN": {
        "prefix": "g+WorldSettings_Timer_PreLoad_Fix",
        "body": "WorldSettings_Timer_PreLoad_Fix(${1:inst},${2:data},${3:timername},${4:maxmultiplier})",
        "description": " ※Params: \n   (inst)<>[] \n   (data)<>[] \n   (timername)<>[] \n   (maxmultiplier)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/worldsettingsutil 所在行数: 143"
    },
    "Global.campfire_clear_fn:UNKNOWN": {
        "prefix": "campfire_clear_fn",
        "body": "campfire_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1467"
    },
    "Global.WorldSettings_ChildSpawner_SpawnPeriod:UNKNOWN": {
        "prefix": "g+WorldSettings_ChildSpawner_SpawnPeriod",
        "body": "WorldSettings_ChildSpawner_SpawnPeriod(${1:inst},${2:spawnperiod},${3:enabled})",
        "description": " ※Params: \n   (inst)<>[] \n   (spawnperiod)<>[] \n   (enabled)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/worldsettingsutil 所在行数: 87"
    },
    "Global.GetHasResourceRenewal:UNKNOWN": {
        "prefix": "GetHasResourceRenewal",
        "body": "GetHasResourceRenewal(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/gamemodes 所在行数: 286"
    },
    "Global.d_showalleventservers:UNKNOWN": {
        "prefix": "d_showalleventservers",
        "body": "d_showalleventservers(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 765"
    },
    "Global.GetPortalRez:UNKNOWN": {
        "prefix": "GetPortalRez",
        "body": "GetPortalRez(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/gamemodes 所在行数: 294"
    },
    "Global.AddPrefabPostInitAny:UNKNOWN": {
        "prefix": "AddPrefabPostInitAny",
        "body": "AddPrefabPostInitAny(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 580"
    },
    "Global.GetGhostEnabled:UNKNOWN": {
        "prefix": "GetGhostEnabled",
        "body": "GetGhostEnabled(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/gamemodes 所在行数: 290"
    },
    "Global.GetRarityModifierForItem:UNKNOWN": {
        "prefix": "GetRarityModifierForItem",
        "body": "GetRarityModifierForItem(${1:item})",
        "description": " ※Params: \n   (item)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 616"
    },
    "Global.GetIsSpawnModeFixed:UNKNOWN": {
        "prefix": "GetIsSpawnModeFixed",
        "body": "GetIsSpawnModeFixed(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/gamemodes 所在行数: 278"
    },
    "Global.GetGameModeDescriptionString:UNKNOWN": {
        "prefix": "GetGameModeDescriptionString",
        "body": "GetGameModeDescriptionString(${1:game_mode})",
        "description": " ※Params: \n   (game_mode)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/gamemodes 所在行数: 255"
    },
    "Global.InitDLC:UNKNOWN": {
        "prefix": "InitDLC",
        "body": "InitDLC(${1:index})",
        "description": " ※Params: \n   (index)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/dlcsupport 所在行数: 95"
    },
    "Global.FrameEvent:UNKNOWN": {
        "prefix": "FrameEvent",
        "body": "FrameEvent(${1:frame},${2:fn})",
        "description": " ※Params: \n   (frame)<>[] \n   (fn)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/stategraph 所在行数: 193"
    },
    "Global.EnableShadeRenderer:UNKNOWN": {
        "prefix": "EnableShadeRenderer",
        "body": "EnableShadeRenderer(${1:enable})",
        "description": " ※Params: \n   (enable)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/shadeeffects 所在行数: 35"
    },
    "Global.GetModFancyName:UNKNOWN": {
        "prefix": "GetModFancyName",
        "body": "GetModFancyName(${1:mod_name})",
        "description": " ※Params: \n   (mod_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mods 所在行数: 896"
    },
    "Global.glasscutter_init_fn:UNKNOWN": {
        "prefix": "glasscutter_init_fn",
        "body": "glasscutter_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 2238"
    },
    "Global.IsKlumpLoaded:UNKNOWN": {
        "prefix": "IsKlumpLoaded",
        "body": "IsKlumpLoaded(${1:klump_file})",
        "description": " ※Params: \n   (klump_file)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/klump 所在行数: 69"
    },
    "Global.GetSkinModes:UNKNOWN": {
        "prefix": "GetSkinModes",
        "body": "GetSkinModes(${1:character})",
        "description": " ※Params: \n   (character)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1806"
    },
    "Global.AwardFrontendAchievement:UNKNOWN": {
        "prefix": "AwardFrontendAchievement",
        "body": "AwardFrontendAchievement(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 277"
    },
    "Global.IsPackABundle:UNKNOWN": {
        "prefix": "IsPackABundle",
        "body": "IsPackABundle(${1:item_key})",
        "description": " ※Params: \n   (item_key)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 311"
    },
    "Global.GetResetTime:UNKNOWN": {
        "prefix": "GetResetTime",
        "body": "GetResetTime(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/gamemodes 所在行数: 298"
    },
    "Global.AddGlobalDebugKey:UNKNOWN": {
        "prefix": "AddGlobalDebugKey",
        "body": "AddGlobalDebugKey(${1:key},${2:fn},${3:down})",
        "description": " ※Params: \n   (key)<>[] \n   (fn)<>[] \n   (down)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugkeys 所在行数: 89"
    },
    "Global.loadfile:UNKNOWN": {
        "prefix": "loadfile",
        "body": "loadfile(${1:filename})",
        "description": " ※Params: \n   (filename)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/worldgen_main 所在行数: 57"
    },
    "Global.RegisterSkilltreeIconsAtlas:UNKNOWN": {
        "prefix": "RegisterSkilltreeIconsAtlas",
        "body": "RegisterSkilltreeIconsAtlas(${1:atlas},${2:tex})",
        "description": " ※Params: \n   (atlas)<>[] \n   (tex)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 969"
    },
    "Global.d_addemotekeys:UNKNOWN": {
        "prefix": "d_addemotekeys",
        "body": "d_addemotekeys(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugkeys 所在行数: 1705"
    },
    "Global.DoDebugMouse:UNKNOWN": {
        "prefix": "DoDebugMouse",
        "body": "DoDebugMouse(${1:button},${2:down},${3:x},${4:y})",
        "description": " ※Params: \n   (button)<>[] \n   (down)<>[] \n   (x)<>[] \n   (y)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugkeys 所在行数: 1692"
    },
    "Global.d_stopsound:UNKNOWN": {
        "prefix": "d_stopsound",
        "body": "d_stopsound(${1:loopname})",
        "description": " ※Params: \n   (loopname)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 3660"
    },
    "Global.IsAnyFestivalEventActive:UNKNOWN": {
        "prefix": "IsAnyFestivalEventActive",
        "body": "IsAnyFestivalEventActive(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/constants 所在行数: 1020"
    },
    "Global.IsAnyPlayerInRangeSq:UNKNOWN": {
        "prefix": "IsAnyPlayerInRangeSq",
        "body": "IsAnyPlayerInRangeSq(${1:x},${2:y},${3:z},${4:rangesq},${5:isalive})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n   (rangesq)<>[] \n   (isalive)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/simutil 所在行数: 128"
    },
    "Global.d_checkmissingscrapbookentries:UNKNOWN": {
        "prefix": "d_checkmissingscrapbookentries",
        "body": "d_checkmissingscrapbookentries(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 3384"
    },
    "Global.MonkeyPatchClass:UNKNOWN": {
        "prefix": "MonkeyPatchClass",
        "body": "MonkeyPatchClass(${1:mt})",
        "description": " ※Params: \n   (mt)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/reload 所在行数: 105"
    },
    "Global.GetDebugTable:UNKNOWN": {
        "prefix": "GetDebugTable",
        "body": "GetDebugTable(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 636"
    },
    "Global.ScrubClass:UNKNOWN": {
        "prefix": "ScrubClass",
        "body": "ScrubClass(${1:cls},${2:inh})",
        "description": " ※Params: \n   (cls)<>[] \n   (inh)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/reload 所在行数: 94"
    },
    "Global.Client_IsTournamentActive:UNKNOWN": {
        "prefix": "Client_IsTournamentActive",
        "body": "Client_IsTournamentActive(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/constants 所在行数: 1072"
    },
    "Global.optstring:UNKNOWN": {
        "prefix": "optstring",
        "body": "optstring(${1:val})",
        "description": " ※Params: \n   (val)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networkclientrpc 所在行数: 12"
    },
    "Global.MonkeyPatchClasses:UNKNOWN": {
        "prefix": "MonkeyPatchClasses",
        "body": "MonkeyPatchClasses(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/reload 所在行数: 133"
    },
    "Global.d_skin_name:UNKNOWN": {
        "prefix": "d_skin_name",
        "body": "d_skin_name(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 596"
    },
    "Global.encodeString_compliant:UNKNOWN": {
        "prefix": "encodeString_compliant",
        "body": "encodeString_compliant(${1:s})",
        "description": " ※Params: \n   (s)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/json 所在行数: 150"
    },
    "Global.ShowLoading:UNKNOWN": {
        "prefix": "ShowLoading",
        "body": "ShowLoading(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/gamelogic 所在行数: 150"
    },
    "Global.LookupPlayerInstByUserID:UNKNOWN": {
        "prefix": "LookupPlayerInstByUserID",
        "body": "LookupPlayerInstByUserID(${1:userid})",
        "description": " ※Params: \n   (userid)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 915"
    },
    "Global.AddRecipe2:UNKNOWN": {
        "prefix": "AddRecipe2",
        "body": "AddRecipe2(${1:name},${2:ingredients},${3:tech},${4:config},${5:filters})",
        "description": " ※Params: \n   (name)<>[] \n   (ingredients)<>[] \n   (tech)<>[] \n   (config)<>[] \n   (filters)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 732"
    },
    "Global.ShowDemoExpiredDialog:UNKNOWN": {
        "prefix": "ShowDemoExpiredDialog",
        "body": "ShowDemoExpiredDialog(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/gamelogic 所在行数: 1152"
    },
    "Global.AddTuningModifier:UNKNOWN": {
        "prefix": "AddTuningModifier",
        "body": "AddTuningModifier(${1:tuning_var},${2:fn},${3:tuning_value})",
        "description": " ※Params: \n   (tuning_var)<>[] \n   (fn)<>[] \n   (tuning_value)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/tuning 所在行数: 7"
    },
    "Global.SetDebugTable:UNKNOWN": {
        "prefix": "SetDebugTable",
        "body": "SetDebugTable(${1:tbl})",
        "description": " ※Params: \n   (tbl)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 640"
    },
    "Global.Vec3Util_Dist:UNKNOWN": {
        "prefix": "Vec3Util_Dist",
        "body": "Vec3Util_Dist(${1:p1_x},${2:p1_y},${3:p1_z},${4:p2_x},${5:p2_y},${6:p2_z})",
        "description": " ※Params: \n   (p1_x)<>[] \n   (p1_y)<>[] \n   (p1_z)<>[] \n   (p2_x)<>[] \n   (p2_y)<>[] \n   (p2_z)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/vec3util 所在行数: 27"
    },
    "Global.RemapSoundEvent:UNKNOWN": {
        "prefix": "RemapSoundEvent",
        "body": "RemapSoundEvent(${1:name},${2:new_name})",
        "description": " ※Params: \n   (name)<>[] \n   (new_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 842"
    },
    "Global.AddStartLocation:UNKNOWN": {
        "prefix": "AddStartLocation",
        "body": "AddStartLocation(${1:arg1},${2:...})",
        "description": " ※Params: \n   (arg1)<>[] \n   (...)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 306"
    },
    "Global.RecordEventAchievementSharedProgress:UNKNOWN": {
        "prefix": "RecordEventAchievementSharedProgress",
        "body": "RecordEventAchievementSharedProgress(${1:achievement},${2:data})",
        "description": " ※Params: \n   (achievement)<>[] \n   (data)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/gamelogic 所在行数: 97"
    },
    "Global.DeactivateWorld:UNKNOWN": {
        "prefix": "DeactivateWorld",
        "body": "DeactivateWorld(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/gamelogic 所在行数: 740"
    },
    "Global.GetPrevOwnedSkin:UNKNOWN": {
        "prefix": "GetPrevOwnedSkin",
        "body": "GetPrevOwnedSkin(${1:prefab},${2:cur_skin})",
        "description": " ※Params: \n   (prefab)<>[] \n   (cur_skin)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1542"
    },
    "Global.OnRemoveEntity:UNKNOWN": {
        "prefix": "OnRemoveEntity",
        "body": "OnRemoveEntity(${1:entityguid})",
        "description": " ※Params: \n   (entityguid)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 475"
    },
    "Global.CalculateShopHash:UNKNOWN": {
        "prefix": "CalculateShopHash",
        "body": "CalculateShopHash(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1318"
    },
    "Global.GetTimePlaying:UNKNOWN": {
        "prefix": "GetTimePlaying",
        "body": "GetTimePlaying(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/gamelogic 所在行数: 353"
    },
    "Global._profiler_hook_wrapper_by_call:UNKNOWN": {
        "prefix": "_profiler_hook_wrapper_by_call",
        "body": "_profiler_hook_wrapper_by_call(${1:action})",
        "description": " ※Params: \n   (action)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/profiler 所在行数: 182"
    },
    "Global.Networking_PartyInvite:UNKNOWN": {
        "prefix": "Networking_PartyInvite",
        "body": "Networking_PartyInvite(${1:inviter},${2:partyid})",
        "description": " ※Params: \n   (inviter)<>[] \n   (partyid)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 968"
    },
    "Global.GetPackTotalSets:UNKNOWN": {
        "prefix": "GetPackTotalSets",
        "body": "GetPackTotalSets(${1:item_key})",
        "description": " ※Params: \n   (item_key)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 296"
    },
    "Global.tabletoliststring:UNKNOWN": {
        "prefix": "tabletoliststring",
        "body": "tabletoliststring(${1:obj},${2:fn})",
        "description": " ※Params: \n   (obj)<>[] \n   (fn)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugtools 所在行数: 179"
    },
    "Global.coldfirepit_clear_fn:UNKNOWN": {
        "prefix": "coldfirepit_clear_fn",
        "body": "coldfirepit_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1494"
    },
    "Global.GetFestivalEventServerName:UNKNOWN": {
        "prefix": "GetFestivalEventServerName",
        "body": "GetFestivalEventServerName(${1:festival},${2:season})",
        "description": " ※Params: \n   (festival)<>[] \n   (season)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/constants 所在行数: 1047"
    },
    "Global.IsPreviousFestivalEvent:UNKNOWN": {
        "prefix": "IsPreviousFestivalEvent",
        "body": "IsPreviousFestivalEvent(${1:event})",
        "description": " ※Params: \n   (event)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/constants 所在行数: 1011"
    },
    "Global.IsConsole:UNKNOWN": {
        "prefix": "IsConsole",
        "body": "IsConsole(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/worldgen_main 所在行数: 63"
    },
    "Global.GetActiveFestivalEventServerName:UNKNOWN": {
        "prefix": "GetActiveFestivalEventServerName",
        "body": "GetActiveFestivalEventServerName(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/constants 所在行数: 1037"
    },
    "Global.IsNumberEven:UNKNOWN": {
        "prefix": "IsNumberEven",
        "body": "IsNumberEven(${1:num})",
        "description": " ※Params: \n   (num)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mathutil 所在行数: 50"
    },
    "Global.glasscutter_clear_fn:UNKNOWN": {
        "prefix": "glasscutter_clear_fn",
        "body": "glasscutter_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 2247"
    },
    "Global.d_fish:UNKNOWN": {
        "prefix": "d_fish",
        "body": "d_fish(${1:swim},${2:r},${3:g},${4:b})",
        "description": " ※Params: \n   (swim)<>[] \n   (r)<>[] \n   (g)<>[] \n   (b)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 1310"
    },
    "Global.minisign_drawn_clear_fn:UNKNOWN": {
        "prefix": "minisign_drawn_clear_fn",
        "body": "minisign_drawn_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1609"
    },
    "Global.HookLoginButtonForDataBundleFileHashes:UNKNOWN": {
        "prefix": "HookLoginButtonForDataBundleFileHashes",
        "body": "HookLoginButtonForDataBundleFileHashes(${1:button})",
        "description": " ※Params: \n   (button)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 2312"
    },
    "Global.c_summondeerclops:UNKNOWN": {
        "prefix": "c_summondeerclops",
        "body": "c_summondeerclops(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 1016"
    },
    "Global.AddRecipe:UNKNOWN": {
        "prefix": "AddRecipe",
        "body": "AddRecipe(${1:arg1},${2:...})",
        "description": " ※Params: \n   (arg1)<>[] \n   (...)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 794"
    },
    "Global.LoadFonts:UNKNOWN": {
        "prefix": "LoadFonts",
        "body": "LoadFonts(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 1272"
    },
    "Global.SetWorldGenSeed:UNKNOWN": {
        "prefix": "SetWorldGenSeed",
        "body": "SetWorldGenSeed(${1:seed})",
        "description": " ※Params: \n   (seed)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/worldgen_main 所在行数: 6"
    },
    "Global.GetFestivalEventSkinTag:UNKNOWN": {
        "prefix": "GetFestivalEventSkinTag",
        "body": "GetFestivalEventSkinTag(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/constants 所在行数: 1024"
    },
    "Global.GetBigPortraitAnimForItem:UNKNOWN": {
        "prefix": "GetBigPortraitAnimForItem",
        "body": "GetBigPortraitAnimForItem(${1:item_key})",
        "description": " ※Params: \n   (item_key)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 135"
    },
    "Global.OverrideTuningVariables:UNKNOWN": {
        "prefix": "OverrideTuningVariables",
        "body": "OverrideTuningVariables(${1:tuning})",
        "description": " ※Params: \n   (tuning)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/worldsettings_overrides 所在行数: 2"
    },
    "Global.d_unlockscrapbook:UNKNOWN": {
        "prefix": "d_unlockscrapbook",
        "body": "d_unlockscrapbook(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 3344"
    },
    "Global.DecodeAndUnzipString:UNKNOWN": {
        "prefix": "DecodeAndUnzipString",
        "body": "DecodeAndUnzipString(${1:str})",
        "description": " ※Params: \n   (str)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 1698"
    },
    "Global.firesuppressor_clear_fn:UNKNOWN": {
        "prefix": "firesuppressor_clear_fn",
        "body": "firesuppressor_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1392"
    },
    "Global.AddComponentPostInit:修改已有的组件的初始化API": {
        "prefix": "AddComponentPostInit",
        "body": "AddComponentPostInit(\"${1:component}\", function(self)\n\t${0}\nend)",
        "description": " ※Params: \n   (component)<>[] \n   (fn)<>[] \n ※Description: 修改已有的组件的初始化API\n ※Contributor: @lan\n ※Path: scripts_en/modutil 所在行数: 567"
    },
    "Global.d_testwalls:UNKNOWN": {
        "prefix": "d_testwalls",
        "body": "d_testwalls(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 431"
    },
    "Global.boat_grass_init_fn:UNKNOWN": {
        "prefix": "boat_grass_init_fn",
        "body": "boat_grass_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 235"
    },
    "Global.SetUsesPrefix:UNKNOWN": {
        "prefix": "SetUsesPrefix",
        "body": "SetUsesPrefix(${1:item},${2:usePrefix})",
        "description": " ※Params: \n   (item)<>[] \n   (usePrefix)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/dlcsupport_strings 所在行数: 70"
    },
    "Global.GetTick:UNKNOWN": {
        "prefix": "GetTick",
        "body": "GetTick(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 547"
    },
    "Global.metaipairs:UNKNOWN": {
        "prefix": "metaipairs",
        "body": "metaipairs(${1:t},${2:...})",
        "description": " ※Params: \n   (t)<>[] \n   (...)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 1674"
    },
    "Global.GetValidRecipe:UNKNOWN": {
        "prefix": "GetValidRecipe",
        "body": "GetValidRecipe(${1:recname})",
        "description": " ※Params: \n   (recname)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/recipe 所在行数: 181"
    },
    "Global.GetActiveSpecialEventCount:UNKNOWN": {
        "prefix": "GetActiveSpecialEventCount",
        "body": "GetActiveSpecialEventCount(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/constants 所在行数: 964"
    },
    "Global.Sleep:UNKNOWN": {
        "prefix": "Sleep",
        "body": "Sleep(${1:time})",
        "description": " ※Params: \n   (time)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/scheduler 所在行数: 356"
    },
    "Global.weighted_random_choices:UNKNOWN": {
        "prefix": "weighted_random_choices",
        "body": "weighted_random_choices(${1:choices},${2:num_choices})",
        "description": " ※Params: \n   (choices)<>[] \n   (num_choices)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 730"
    },
    "Global.DisplayAntiAddictionNotification:UNKNOWN": {
        "prefix": "DisplayAntiAddictionNotification",
        "body": "DisplayAntiAddictionNotification(${1:notification})",
        "description": " ※Params: \n   (notification)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 2242"
    },
    "Global.MergeKeyValueList:UNKNOWN": {
        "prefix": "MergeKeyValueList",
        "body": "MergeKeyValueList(${1:...})",
        "description": " ※Params: \n   (...)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 445"
    },
    "Global.AddGameDebugKey:UNKNOWN": {
        "prefix": "AddGameDebugKey",
        "body": "AddGameDebugKey(${1:key},${2:fn},${3:down})",
        "description": " ※Params: \n   (key)<>[] \n   (fn)<>[] \n   (down)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugkeys 所在行数: 83"
    },
    "Global.GetTime:UNKNOWN": {
        "prefix": "GetTime",
        "body": "GetTime(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 539"
    },
    "Global.HandleClientModRPC:UNKNOWN": {
        "prefix": "HandleClientModRPC",
        "body": "HandleClientModRPC(${1:tick},${2:namespace},${3:code},${4:data})",
        "description": " ※Params: \n   (tick)<>[] \n   (namespace)<>[] \n   (code)<>[] \n   (data)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networkclientrpc 所在行数: 1557"
    },
    "Global.known_assert:UNKNOWN": {
        "prefix": "known_assert",
        "body": "known_assert(${1:condition},${2:key})",
        "description": " ※Params: \n   (condition)<>[] \n   (key)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/knownerrors 所在行数: 39"
    },
    "Global.dumptablequiet:UNKNOWN": {
        "prefix": "dumptablequiet",
        "body": "dumptablequiet(${1:obj},${2:indent},${3:recurse_levels},${4:visit_table})",
        "description": " ※Params: \n   (obj)<>[] \n   (indent)<>[] \n   (recurse_levels)<>[] \n   (visit_table)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugtools 所在行数: 110"
    },
    "Global.LoadMapFile:UNKNOWN": {
        "prefix": "LoadMapFile",
        "body": "LoadMapFile(${1:map_name})",
        "description": " ※Params: \n   (map_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 1441"
    },
    "Global.AddTaskPreInit:UNKNOWN": {
        "prefix": "AddTaskPreInit",
        "body": "AddTaskPreInit(${1:taskname},${2:fn})",
        "description": " ※Params: \n   (taskname)<>[] \n   (fn)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 267"
    },
    "Global.GetWorldTileMap:UNKNOWN": {
        "prefix": "GetWorldTileMap",
        "body": "GetWorldTileMap(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/constants 所在行数: 724"
    },
    "Global.IsItemInAnyPack:UNKNOWN": {
        "prefix": "IsItemInAnyPack",
        "body": "IsItemInAnyPack(${1:item_key})",
        "description": " ※Params: \n   (item_key)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 282"
    },
    "Global.GetOceanDepthAtPosition:UNKNOWN": {
        "prefix": "GetOceanDepthAtPosition",
        "body": "GetOceanDepthAtPosition(${1:x},${2:y},${3:z})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/ocean_util 所在行数: 11"
    },
    "Global.IsDLCInstalled:UNKNOWN": {
        "prefix": "IsDLCInstalled",
        "body": "IsDLCInstalled(${1:index})",
        "description": " ※Params: \n   (index)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/dlcsupport 所在行数: 141"
    },
    "Global.GetFEVisibleCharacterList:UNKNOWN": {
        "prefix": "GetFEVisibleCharacterList",
        "body": "GetFEVisibleCharacterList(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/dlcsupport 所在行数: 110"
    },
    "Global.AddReplicableComponent:UNKNOWN": {
        "prefix": "AddReplicableComponent",
        "body": "AddReplicableComponent(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/entityreplica 所在行数: 98"
    },
    "Global.DisableDLC:UNKNOWN": {
        "prefix": "DisableDLC",
        "body": "DisableDLC(${1:index})",
        "description": " ※Params: \n   (index)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/dlcsupport 所在行数: 124"
    },
    "Global.EnableAllMenuDLC:UNKNOWN": {
        "prefix": "EnableAllMenuDLC",
        "body": "EnableAllMenuDLC(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/dlcsupport 所在行数: 157"
    },
    "Global.decode:UNKNOWN": {
        "prefix": "decode",
        "body": "decode(${1:s},${2:startPos})",
        "description": " ※Params: \n   (s)<>[] \n   (startPos)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/json 所在行数: 222"
    },
    "Global.MakeSmallBurnableCharacter:UNKNOWN": {
        "prefix": "MakeSmallBurnableCharacter",
        "body": "MakeSmallBurnableCharacter(${1:inst},${2:sym},${3:offset})",
        "description": " ※Params: \n   (inst)<>[] \n   (sym)<>[] \n   (offset)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 240"
    },
    "Global.TranslateStringTable:UNKNOWN": {
        "prefix": "TranslateStringTable",
        "body": "TranslateStringTable(${1:tbl})",
        "description": " ※Params: \n   (tbl)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/translator 所在行数: 222"
    },
    "Global.BuildPriceStr:UNKNOWN": {
        "prefix": "BuildPriceStr",
        "body": "BuildPriceStr(${1:value},${2:iap_def},${3:sale_active})",
        "description": " ※Params: \n   (value)<>[] \n   (iap_def)<>[] \n   (sale_active)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 361"
    },
    "Global.AddRoomPreInit:UNKNOWN": {
        "prefix": "AddRoomPreInit",
        "body": "AddRoomPreInit(${1:roomname},${2:fn})",
        "description": " ※Params: \n   (roomname)<>[] \n   (fn)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 275"
    },
    "Global.d_islandstart:UNKNOWN": {
        "prefix": "d_islandstart",
        "body": "d_islandstart(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 958"
    },
    "Global.InitAllDLC:UNKNOWN": {
        "prefix": "InitAllDLC",
        "body": "InitAllDLC(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/dlcsupport 所在行数: 88"
    },
    "Global.Hibernate:UNKNOWN": {
        "prefix": "Hibernate",
        "body": "Hibernate(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/scheduler 所在行数: 348"
    },
    "Global.OnMouseButton:UNKNOWN": {
        "prefix": "OnMouseButton",
        "body": "OnMouseButton(${1:button},${2:is_up},${3:x},${4:y})",
        "description": " ※Params: \n   (button)<>[] \n   (is_up)<>[] \n   (x)<>[] \n   (y)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/input 所在行数: 437"
    },
    "Global.ToVector3:UNKNOWN": {
        "prefix": "ToVector3",
        "body": "ToVector3(${1:obj},${2:y},${3:z})",
        "description": " ※Params: \n   (obj)<>[] \n   (y)<>[] \n   (z)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/vector3 所在行数: 90"
    },
    "Global.IsFestivalEventActive:UNKNOWN": {
        "prefix": "IsFestivalEventActive",
        "body": "IsFestivalEventActive(${1:event})",
        "description": " ※Params: \n   (event)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/constants 所在行数: 1007"
    },
    "Global.RemoveAllRecipes:UNKNOWN": {
        "prefix": "RemoveAllRecipes",
        "body": "RemoveAllRecipes(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/recipe 所在行数: 193"
    },
    "Global.OnPhysicsWake:UNKNOWN": {
        "prefix": "OnPhysicsWake",
        "body": "OnPhysicsWake(${1:guid})",
        "description": " ※Params: \n   (guid)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 705"
    },
    "Global.IsCharacterIngredient:UNKNOWN": {
        "prefix": "IsCharacterIngredient",
        "body": "IsCharacterIngredient(${1:ingredienttype})",
        "description": " ※Params: \n   (ingredienttype)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/recipe 所在行数: 44"
    },
    "Global.OnServerPauseDirty:UNKNOWN": {
        "prefix": "OnServerPauseDirty",
        "body": "OnServerPauseDirty(${1:pause},${2:autopause},${3:gameautopause},${4:source})",
        "description": " ※Params: \n   (pause)<>[] \n   (autopause)<>[] \n   (gameautopause)<>[] \n   (source)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 739"
    },
    "Global.PlayFootstep:UNKNOWN": {
        "prefix": "PlayFootstep",
        "body": "PlayFootstep(${1:inst},${2:volume},${3:ispredicted})",
        "description": " ※Params: \n   (inst)<>[] \n   (volume)<>[] \n   (ispredicted)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/worldtiledefs 所在行数: 81"
    },
    "Global.boat_grass_clear_fn:UNKNOWN": {
        "prefix": "boat_grass_clear_fn",
        "body": "boat_grass_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 241"
    },
    "Global.chester_init_fn:UNKNOWN": {
        "prefix": "chester_init_fn",
        "body": "chester_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1193"
    },
    "Global.IsValidBeefaloClothing:UNKNOWN": {
        "prefix": "IsValidBeefaloClothing",
        "body": "IsValidBeefaloClothing(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1428"
    },
    "Global.lureplant_init_fn:UNKNOWN": {
        "prefix": "lureplant_init_fn",
        "body": "lureplant_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1038"
    },
    "Global.perdling_init_fn:UNKNOWN": {
        "prefix": "perdling_init_fn",
        "body": "perdling_init_fn(${1:inst},${2:build_name},${3:default_build},${4:hungry_sound})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n   (default_build)<>[] \n   (hungry_sound)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1519"
    },
    "Global.campfire_init_fn:UNKNOWN": {
        "prefix": "campfire_init_fn",
        "body": "campfire_init_fn(${1:inst},${2:build_name},${3:fxoffset})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n   (fxoffset)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1453"
    },
    "Global.winch_init_fn:UNKNOWN": {
        "prefix": "winch_init_fn",
        "body": "winch_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 256"
    },
    "Global.ValidatePreviewItems:UNKNOWN": {
        "prefix": "ValidatePreviewItems",
        "body": "ValidatePreviewItems(${1:currentcharacter},${2:preview_skins},${3:filter})",
        "description": " ※Params: \n   (currentcharacter)<>[] \n   (preview_skins)<>[] \n   (filter)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1432"
    },
    "Global.d_reportevent:UNKNOWN": {
        "prefix": "d_reportevent",
        "body": "d_reportevent(${1:other_ku})",
        "description": " ※Params: \n   (other_ku)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 847"
    },
    "Global.GetMostRecentlySelectedItem:UNKNOWN": {
        "prefix": "GetMostRecentlySelectedItem",
        "body": "GetMostRecentlySelectedItem(${1:user_profile},${2:item_type})",
        "description": " ※Params: \n   (user_profile)<>[] \n   (item_type)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1565"
    },
    "Global.c_removeallwithtags:UNKNOWN": {
        "prefix": "c_removeallwithtags",
        "body": "c_removeallwithtags(${1:...})",
        "description": " ※Params: \n   (...)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 1187"
    },
    "Global.MakeInventoryPhysics:UNKNOWN": {
        "prefix": "MakeInventoryPhysics",
        "body": "MakeInventoryPhysics(${1:inst},${2:mass},${3:rad})",
        "description": " ※Params: \n   (inst)<>[] \n   (mass)<>[] \n   (rad)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 366"
    },
    "Global.critter_perdling_clear_fn:UNKNOWN": {
        "prefix": "critter_perdling_clear_fn",
        "body": "critter_perdling_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1568"
    },
    "Global.critter_puppy_clear_fn:UNKNOWN": {
        "prefix": "critter_puppy_clear_fn",
        "body": "critter_puppy_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1576"
    },
    "Global.yellowstaff_clear_fn:UNKNOWN": {
        "prefix": "yellowstaff_clear_fn",
        "body": "yellowstaff_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 2325"
    },
    "Global.GetBoxBuildForItem:UNKNOWN": {
        "prefix": "GetBoxBuildForItem",
        "body": "GetBoxBuildForItem(${1:item_key})",
        "description": " ※Params: \n   (item_key)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 478"
    },
    "Global.RegisterTileRange:UNKNOWN": {
        "prefix": "RegisterTileRange",
        "body": "RegisterTileRange(${1:range_name},${2:range_start},${3:range_end})",
        "description": " ※Params: \n   (range_name)<>[] \n   (range_start)<>[] \n   (range_end)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 357"
    },
    "Global.glommerflower_clear_fn:UNKNOWN": {
        "prefix": "glommerflower_clear_fn",
        "body": "glommerflower_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1243"
    },
    "Global.RGB:UNKNOWN": {
        "prefix": "RGB",
        "body": "RGB(${1:r},${2:g},${3:b})",
        "description": " ※Params: \n   (r)<>[] \n   (g)<>[] \n   (b)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/constants 所在行数: 1527"
    },
    "Global.Networking_RollAnnouncement:UNKNOWN": {
        "prefix": "Networking_RollAnnouncement",
        "body": "Networking_RollAnnouncement(${1:userid},${2:name},${3:prefab},${4:colour},${5:rolls},${6:max})",
        "description": " ※Params: \n   (userid)<>[] \n   (name)<>[] \n   (prefab)<>[] \n   (colour)<>[] \n   (rolls)<>[] \n   (max)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 135"
    },
    "Global.IsItemMarketable:UNKNOWN": {
        "prefix": "IsItemMarketable",
        "body": "IsItemMarketable(${1:item})",
        "description": " ※Params: \n   (item)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 584"
    },
    "Global.FindPlayersInRangeSq:UNKNOWN": {
        "prefix": "FindPlayersInRangeSq",
        "body": "FindPlayersInRangeSq(${1:x},${2:y},${3:z},${4:rangesq},${5:isalive})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n   (rangesq)<>[] \n   (isalive)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/simutil 所在行数: 112"
    },
    "Global.ocean_trawler_clear_fn:UNKNOWN": {
        "prefix": "ocean_trawler_clear_fn",
        "body": "ocean_trawler_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 281"
    },
    "Global.anchor_init_fn:UNKNOWN": {
        "prefix": "anchor_init_fn",
        "body": "anchor_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1708"
    },
    "Global.mastupgrade_lamp_item_init_fn:UNKNOWN": {
        "prefix": "mastupgrade_lamp_item_init_fn",
        "body": "mastupgrade_lamp_item_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1721"
    },
    "Global.MakeSmallPerishableCreaturePristine:UNKNOWN": {
        "prefix": "MakeSmallPerishableCreaturePristine",
        "body": "MakeSmallPerishableCreaturePristine(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 772"
    },
    "Global.c_mat:UNKNOWN": {
        "prefix": "c_mat",
        "body": "c_mat(${1:recname})",
        "description": " ※Params: \n   (recname)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 558"
    },
    "Global.ShouldIgnoreResolve:UNKNOWN": {
        "prefix": "ShouldIgnoreResolve",
        "body": "ShouldIgnoreResolve(${1:filename},${2:assettype})",
        "description": " ※Params: \n   (filename)<>[] \n   (assettype)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 69"
    },
    "Global.wall_stone_item_clear_fn:UNKNOWN": {
        "prefix": "wall_stone_item_clear_fn",
        "body": "wall_stone_item_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1829"
    },
    "Global.WorldRollbackFromSim:UNKNOWN": {
        "prefix": "WorldRollbackFromSim",
        "body": "WorldRollbackFromSim(${1:count})",
        "description": " ※Params: \n   (count)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 730"
    },
    "Global.wall_ruins_init_fn:UNKNOWN": {
        "prefix": "wall_ruins_init_fn",
        "body": "wall_ruins_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1811"
    },
    "Global.AddCookerRecipe:UNKNOWN": {
        "prefix": "AddCookerRecipe",
        "body": "AddCookerRecipe(${1:cooker},${2:recipe})",
        "description": " ※Params: \n   (cooker)<>[] \n   (recipe)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 643"
    },
    "Global.str_seconds:UNKNOWN": {
        "prefix": "str_seconds",
        "body": "str_seconds(${1:time})",
        "description": " ※Params: \n   (time)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/stringutil 所在行数: 473"
    },
    "Global.TemporarilyRemovePhysics:UNKNOWN": {
        "prefix": "TemporarilyRemovePhysics",
        "body": "TemporarilyRemovePhysics(${1:obj},${2:time})",
        "description": " ※Params: \n   (obj)<>[] \n   (time)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/simutil 所在行数: 513"
    },
    "Global.portablecookpot_item_init_fn:UNKNOWN": {
        "prefix": "portablecookpot_item_init_fn",
        "body": "portablecookpot_item_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1349"
    },
    "Global.wall_wood_item_init_fn:UNKNOWN": {
        "prefix": "wall_wood_item_init_fn",
        "body": "wall_wood_item_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1847"
    },
    "Global.GetSkinDescription:UNKNOWN": {
        "prefix": "GetSkinDescription",
        "body": "GetSkinDescription(${1:item})",
        "description": " ※Params: \n   (item)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 863"
    },
    "Global.GetNextRarity:UNKNOWN": {
        "prefix": "GetNextRarity",
        "body": "GetNextRarity(${1:rarity})",
        "description": " ※Params: \n   (rarity)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 95"
    },
    "Global.d_createscrapbookdata:UNKNOWN": {
        "prefix": "d_createscrapbookdata",
        "body": "d_createscrapbookdata(${1:print_missing_icons},${2:noreset})",
        "description": " ※Params: \n   (print_missing_icons)<>[] \n   (noreset)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 2488"
    },
    "Global.CreatePrefabSkin:UNKNOWN": {
        "prefix": "CreatePrefabSkin",
        "body": "CreatePrefabSkin(${1:name},${2:info})",
        "description": " ※Params: \n   (name)<>[] \n   (info)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 2829"
    },
    "Global.ProxyInstance:UNKNOWN": {
        "prefix": "ProxyInstance",
        "body": "ProxyInstance(${1:obj})",
        "description": " ※Params: \n   (obj)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/entityscriptproxy 所在行数: 58"
    },
    "Global.fence_init_fn:UNKNOWN": {
        "prefix": "fence_init_fn",
        "body": "fence_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1880"
    },
    "Global.fence_gate_clear_fn:UNKNOWN": {
        "prefix": "fence_gate_clear_fn",
        "body": "fence_gate_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1910"
    },
    "Global.GetPackCollection:UNKNOWN": {
        "prefix": "GetPackCollection",
        "body": "GetPackCollection(${1:item_key})",
        "description": " ※Params: \n   (item_key)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 157"
    },
    "Global.mast_malbatross_item_init_fn:UNKNOWN": {
        "prefix": "mast_malbatross_item_init_fn",
        "body": "mast_malbatross_item_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1970"
    },
    "Global.KillThread:UNKNOWN": {
        "prefix": "KillThread",
        "body": "KillThread(${1:task})",
        "description": " ※Params: \n   (task)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/scheduler 所在行数: 366"
    },
    "Global.Networking_PartyChat:UNKNOWN": {
        "prefix": "Networking_PartyChat",
        "body": "Networking_PartyChat(${1:chatline})",
        "description": " ※Params: \n   (chatline)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 996"
    },
    "Global.OnControlMapped:UNKNOWN": {
        "prefix": "OnControlMapped",
        "body": "OnControlMapped(${1:deviceId},${2:controlId},${3:inputId},${4:hasChanged})",
        "description": " ※Params: \n   (deviceId)<>[] \n   (controlId)<>[] \n   (inputId)<>[] \n   (hasChanged)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/input 所在行数: 457"
    },
    "Global.abigail_flower_clear_fn:UNKNOWN": {
        "prefix": "abigail_flower_clear_fn",
        "body": "abigail_flower_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1302"
    },
    "Global.bernie_active_clear_fn:UNKNOWN": {
        "prefix": "bernie_active_clear_fn",
        "body": "bernie_active_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 2011"
    },
    "Global.DisplayInventoryFailedPopup:UNKNOWN": {
        "prefix": "DisplayInventoryFailedPopup",
        "body": "DisplayInventoryFailedPopup(${1:screen})",
        "description": " ※Params: \n   (screen)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1725"
    },
    "Global.bundle_init_fn:UNKNOWN": {
        "prefix": "bundle_init_fn",
        "body": "bundle_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1275"
    },
    "Global.firepit_init_fn:UNKNOWN": {
        "prefix": "firepit_init_fn",
        "body": "firepit_init_fn(${1:inst},${2:build_name},${3:fxoffset})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n   (fxoffset)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1404"
    },
    "Global.GetSineVal:UNKNOWN": {
        "prefix": "GetSineVal",
        "body": "GetSineVal(${1:mod},${2:abs},${3:inst})",
        "description": " ※Params: \n   (mod)<>[] \n   (abs)<>[] \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mathutil 所在行数: 3"
    },
    "Global.VecUtil_LengthSq:UNKNOWN": {
        "prefix": "VecUtil_LengthSq",
        "body": "VecUtil_LengthSq(${1:p1_x},${2:p1_z})",
        "description": " ※Params: \n   (p1_x)<>[] \n   (p1_z)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/vecutil 所在行数: 15"
    },
    "Global.GetRemotePlayerVanityItem:UNKNOWN": {
        "prefix": "GetRemotePlayerVanityItem",
        "body": "GetRemotePlayerVanityItem(${1:active_cosmetics},${2:item_type})",
        "description": " ※Params: \n   (active_cosmetics)<>[] \n   (item_type)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1486"
    },
    "Global.mast_clear_fn:UNKNOWN": {
        "prefix": "mast_clear_fn",
        "body": "mast_clear_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1933"
    },
    "Global.AddCustomizeItem:UNKNOWN": {
        "prefix": "AddCustomizeItem",
        "body": "AddCustomizeItem(${1:category},${2:group},${3:name},${4:itemsettings})",
        "description": " ※Params: \n   (category)<>[] \n   (group)<>[] \n   (name)<>[] \n   (itemsettings)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 222"
    },
    "Global.d_domestication:UNKNOWN": {
        "prefix": "d_domestication",
        "body": "d_domestication(${1:domestication},${2:obedience})",
        "description": " ※Params: \n   (domestication)<>[] \n   (obedience)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 419"
    },
    "Global.CheckForUpsellTimeout:UNKNOWN": {
        "prefix": "CheckForUpsellTimeout",
        "body": "CheckForUpsellTimeout(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/upsell 所在行数: 39"
    },
    "Global.d_test_skins_gift:UNKNOWN": {
        "prefix": "d_test_skins_gift",
        "body": "d_test_skins_gift(${1:param})",
        "description": " ※Params: \n   (param)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 569"
    },
    "Global.GetFarmTillSpacing:UNKNOWN": {
        "prefix": "GetFarmTillSpacing",
        "body": "GetFarmTillSpacing(${1:game_mode})",
        "description": " ※Params: \n   (game_mode)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/gamemodes 所在行数: 315"
    },
    "Global.yellowstaff_init_fn:UNKNOWN": {
        "prefix": "yellowstaff_init_fn",
        "body": "yellowstaff_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 2319"
    },
    "Global.AddDeconstructRecipe:添加分解配方API,供分解法杖拆解": {
        "prefix": "AddDeconstructRecipe",
        "body": "AddDeconstructRecipe(\"${1:prefab}\", {Ingredient(\"${2:prefab}\", 1)})",
        "description": " ※Params: \n   (name)<>[] \n   (return_ingredients)<>[] \n ※Description: 添加分解配方API,供分解法杖拆解\n ※Contributor: @月\n ※Path: scripts_en/modutil 所在行数: 784"
    },
    "Global.ReloadPreloadAssets:UNKNOWN": {
        "prefix": "ReloadPreloadAssets",
        "body": "ReloadPreloadAssets(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 203"
    },
    "Global.GetMemoizedFilePaths:UNKNOWN": {
        "prefix": "GetMemoizedFilePaths",
        "body": "GetMemoizedFilePaths(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 559"
    },
    "Global.c_groundtype:UNKNOWN": {
        "prefix": "c_groundtype",
        "body": "c_groundtype(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 1056"
    },
    "Global.bundlewrap_clear_fn:UNKNOWN": {
        "prefix": "bundlewrap_clear_fn",
        "body": "bundlewrap_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1268"
    },
    "Global.critter_puppy_builder_clear_fn:UNKNOWN": {
        "prefix": "critter_puppy_builder_clear_fn",
        "body": "critter_puppy_builder_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1579"
    },
    "Global.minisign_item_clear_fn:UNKNOWN": {
        "prefix": "minisign_item_clear_fn",
        "body": "minisign_item_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1595"
    },
    "Global.GetAllGameplayItems:UNKNOWN": {
        "prefix": "GetAllGameplayItems",
        "body": "GetAllGameplayItems(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1411"
    },
    "Global.TrackedAssert:UNKNOWN": {
        "prefix": "TrackedAssert",
        "body": "TrackedAssert(${1:tracking_data},${2:function_ptr},${3:function_data})",
        "description": " ※Params: \n   (tracking_data)<>[] \n   (function_ptr)<>[] \n   (function_data)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 886"
    },
    "Global.heatrock_init_fn:UNKNOWN": {
        "prefix": "heatrock_init_fn",
        "body": "heatrock_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 2344"
    },
    "Global.critter_lamb_builder_clear_fn:UNKNOWN": {
        "prefix": "critter_lamb_builder_clear_fn",
        "body": "critter_lamb_builder_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1564"
    },
    "Global.GetActionString:UNKNOWN": {
        "prefix": "GetActionString",
        "body": "GetActionString(${1:action},${2:modifier})",
        "description": " ※Params: \n   (action)<>[] \n   (modifier)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/stringutil 所在行数: 331"
    },
    "Global.DespawnLeafCanopy:UNKNOWN": {
        "prefix": "DespawnLeafCanopy",
        "body": "DespawnLeafCanopy(${1:id})",
        "description": " ※Params: \n   (id)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/shadeeffects 所在行数: 24"
    },
    "Global.icebox_clear_fn:UNKNOWN": {
        "prefix": "icebox_clear_fn",
        "body": "icebox_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 2707"
    },
    "Global.mast_malbatross_item_clear_fn:UNKNOWN": {
        "prefix": "mast_malbatross_item_clear_fn",
        "body": "mast_malbatross_item_clear_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1975"
    },
    "Global.IsDefaultBeefClothing:UNKNOWN": {
        "prefix": "IsDefaultBeefClothing",
        "body": "IsDefaultBeefClothing(${1:item_key})",
        "description": " ※Params: \n   (item_key)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1387"
    },
    "Global.lantern_clear_fn:UNKNOWN": {
        "prefix": "lantern_clear_fn",
        "body": "lantern_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 2476"
    },
    "Global.UpdateServerWorldGenDataString:UNKNOWN": {
        "prefix": "UpdateServerWorldGenDataString",
        "body": "UpdateServerWorldGenDataString(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 781"
    },
    "Global.GetSpecialCharacterString:UNKNOWN": {
        "prefix": "GetSpecialCharacterString",
        "body": "GetSpecialCharacterString(${1:character})",
        "description": " ※Params: \n   (character)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/stringutil 所在行数: 224"
    },
    "Global.GetPurchasePackDisplayItems:UNKNOWN": {
        "prefix": "GetPurchasePackDisplayItems",
        "body": "GetPurchasePackDisplayItems(${1:item_key})",
        "description": " ※Params: \n   (item_key)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 511"
    },
    "Global.RegisterSkilltreeBGAtlas:UNKNOWN": {
        "prefix": "RegisterSkilltreeBGAtlas",
        "body": "RegisterSkilltreeBGAtlas(${1:atlas},${2:imagename})",
        "description": " ※Params: \n   (atlas)<>[] \n   (imagename)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/simutil 所在行数: 721"
    },
    "Global.c_list:UNKNOWN": {
        "prefix": "c_list",
        "body": "c_list(${1:prefab})",
        "description": " ※Params: \n   (prefab)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 622"
    },
    "Global.Shard_StopVote:UNKNOWN": {
        "prefix": "Shard_StopVote",
        "body": "Shard_StopVote(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/shardnetworking 所在行数: 155"
    },
    "Global.OnPlayerLeave:UNKNOWN": {
        "prefix": "OnPlayerLeave",
        "body": "OnPlayerLeave(${1:player_guid},${2:expected})",
        "description": " ※Params: \n   (player_guid)<>[] \n   (expected)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 1731"
    },
    "Global.icebox_init_fn:UNKNOWN": {
        "prefix": "icebox_init_fn",
        "body": "icebox_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 2679"
    },
    "Global.molehat_init_fn:UNKNOWN": {
        "prefix": "molehat_init_fn",
        "body": "molehat_init_fn(${1:inst},${2:build_name},${3:opentop})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n   (opentop)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 2754"
    },
    "Global.DumpMem:UNKNOWN": {
        "prefix": "DumpMem",
        "body": "DumpMem(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 1428"
    },
    "Global.boat_item_init_fn:UNKNOWN": {
        "prefix": "boat_item_init_fn",
        "body": "boat_item_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1636"
    },
    "Global.ControllerPlacer_Boat_SpotFinder:UNKNOWN": {
        "prefix": "ControllerPlacer_Boat_SpotFinder",
        "body": "ControllerPlacer_Boat_SpotFinder(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 1889"
    },
    "Global.d_erasescrapbookentrydata:UNKNOWN": {
        "prefix": "d_erasescrapbookentrydata",
        "body": "d_erasescrapbookentrydata(${1:entry})",
        "description": " ※Params: \n   (entry)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 3348"
    },
    "Global.ConcatArrays:UNKNOWN": {
        "prefix": "ConcatArrays",
        "body": "ConcatArrays(${1:ret},${2:...})",
        "description": " ※Params: \n   (ret)<>[] \n   (...)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 317"
    },
    "Global.premiumwateringcan_clear_fn:UNKNOWN": {
        "prefix": "premiumwateringcan_clear_fn",
        "body": "premiumwateringcan_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 2770"
    },
    "Global.SetServerPaused:UNKNOWN": {
        "prefix": "SetServerPaused",
        "body": "SetServerPaused(${1:pause})",
        "description": " ※Params: \n   (pause)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 850"
    },
    "Global.VerifySpawnNewPlayerOnServerRequest:UNKNOWN": {
        "prefix": "VerifySpawnNewPlayerOnServerRequest",
        "body": "VerifySpawnNewPlayerOnServerRequest(${1:user_id})",
        "description": " ※Params: \n   (user_id)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 183"
    },
    "Global.c_netstats:UNKNOWN": {
        "prefix": "c_netstats",
        "body": "c_netstats(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 1216"
    },
    "Global.c_findtag:UNKNOWN": {
        "prefix": "c_findtag",
        "body": "c_findtag(${1:tag},${2:radius},${3:inst})",
        "description": " ※Params: \n   (tag)<>[] \n   (radius)<>[] \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 865"
    },
    "Global.mushroom_farm_init_fn:UNKNOWN": {
        "prefix": "mushroom_farm_init_fn",
        "body": "mushroom_farm_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 2774"
    },
    "Global.ApplySpecialEvent:UNKNOWN": {
        "prefix": "ApplySpecialEvent",
        "body": "ApplySpecialEvent(${1:event})",
        "description": " ※Params: \n   (event)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/simutil 所在行数: 582"
    },
    "Global.modimport:导入指定lua文件中的所有代码": {
        "prefix": "modimport",
        "body": "modimport(${1:modulename})",
        "description": " ※Params: \n   (modulename)<string>[lua文件路径] \n ※Description: 导入指定lua文件中的所有代码\n ※Contributor: @lan\n ※Path: scripts_en/mods 所在行数: 332"
    },
    "Global.ChangeToGhostPhysics:UNKNOWN": {
        "prefix": "ChangeToGhostPhysics",
        "body": "ChangeToGhostPhysics(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 496"
    },
    "Global.critter_dragonling_builder_clear_fn:UNKNOWN": {
        "prefix": "critter_dragonling_builder_clear_fn",
        "body": "critter_dragonling_builder_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1541"
    },
    "Global.wall_moonrock_item_clear_fn:UNKNOWN": {
        "prefix": "wall_moonrock_item_clear_fn",
        "body": "wall_moonrock_item_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1782"
    },
    "Global.dprint:UNKNOWN": {
        "prefix": "dprint",
        "body": "dprint(${1:...})",
        "description": " ※Params: \n   (...)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugtools 所在行数: 243"
    },
    "Global.CompareItemDataForSortByRelease:UNKNOWN": {
        "prefix": "CompareItemDataForSortByRelease",
        "body": "CompareItemDataForSortByRelease(${1:item_key_a},${2:item_key_b})",
        "description": " ※Params: \n   (item_key_a)<>[] \n   (item_key_b)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 981"
    },
    "Global.GetSkinCollectionCompletionForHero:UNKNOWN": {
        "prefix": "GetSkinCollectionCompletionForHero",
        "body": "GetSkinCollectionCompletionForHero(${1:herocharacter})",
        "description": " ※Params: \n   (herocharacter)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1215"
    },
    "Global.Networking_Announcement:UNKNOWN": {
        "prefix": "Networking_Announcement",
        "body": "Networking_Announcement(${1:message},${2:colour},${3:announce_type})",
        "description": " ※Params: \n   (message)<>[] \n   (colour)<>[] \n   (announce_type)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 31"
    },
    "Global.ExpandWorldFromProfile:UNKNOWN": {
        "prefix": "ExpandWorldFromProfile",
        "body": "ExpandWorldFromProfile(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/perfutil 所在行数: 113"
    },
    "Global.GetAffinityFilterForHero:UNKNOWN": {
        "prefix": "GetAffinityFilterForHero",
        "body": "GetAffinityFilterForHero(${1:herocharacter})",
        "description": " ※Params: \n   (herocharacter)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1247"
    },
    "Global.FindClosestPlayerOnLandInRangeSq:UNKNOWN": {
        "prefix": "FindClosestPlayerOnLandInRangeSq",
        "body": "FindClosestPlayerOnLandInRangeSq(${1:x},${2:y},${3:z},${4:rangesq},${5:isalive})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n   (rangesq)<>[] \n   (isalive)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/simutil 所在行数: 91"
    },
    "Global.RunInEnvironmentSafe:UNKNOWN": {
        "prefix": "RunInEnvironmentSafe",
        "body": "RunInEnvironmentSafe(${1:fn},${2:fnenv})",
        "description": " ※Params: \n   (fn)<>[] \n   (fnenv)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 787"
    },
    "Global.d_removeentitywithnetworkid:UNKNOWN": {
        "prefix": "d_removeentitywithnetworkid",
        "body": "d_removeentitywithnetworkid(${1:networkid},${2:x},${3:y},${4:z})",
        "description": " ※Params: \n   (networkid)<>[] \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 1524"
    },
    "Global.CreateBoxEmitter:UNKNOWN": {
        "prefix": "CreateBoxEmitter",
        "body": "CreateBoxEmitter(${1:x_min},${2:y_min},${3:z_min},${4:x_max},${5:y_max},${6:z_max})",
        "description": " ※Params: \n   (x_min)<>[] \n   (y_min)<>[] \n   (z_min)<>[] \n   (x_max)<>[] \n   (y_max)<>[] \n   (z_max)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/emitters 所在行数: 159"
    },
    "Global.Shard_WorldSave:UNKNOWN": {
        "prefix": "Shard_WorldSave",
        "body": "Shard_WorldSave(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/shardnetworking 所在行数: 137"
    },
    "Global.ocean_trawler_kit_init_fn:UNKNOWN": {
        "prefix": "ocean_trawler_kit_init_fn",
        "body": "ocean_trawler_kit_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 285"
    },
    "Global.FindNearbyLand:UNKNOWN": {
        "prefix": "FindNearbyLand",
        "body": "FindNearbyLand(${1:position},${2:range})",
        "description": " ※Params: \n   (position)<>[] \n   (range)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/simutil 所在行数: 170"
    },
    "Global.c_select:UNKNOWN": {
        "prefix": "c_select",
        "body": "c_select(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 303"
    },
    "Global.mast_item_clear_fn:UNKNOWN": {
        "prefix": "mast_item_clear_fn",
        "body": "mast_item_clear_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1923"
    },
    "Global.c_sethunger:UNKNOWN": {
        "prefix": "c_sethunger",
        "body": "c_sethunger(${1:n})",
        "description": " ※Params: \n   (n)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 412"
    },
    "Global.deepcopynometa:UNKNOWN": {
        "prefix": "deepcopynometa",
        "body": "deepcopynometa(${1:object})",
        "description": " ※Params: \n   (object)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 935"
    },
    "Global.minisign_clear_fn:UNKNOWN": {
        "prefix": "minisign_clear_fn",
        "body": "minisign_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1626"
    },
    "Global.reviver_init_fn:UNKNOWN": {
        "prefix": "reviver_init_fn",
        "body": "reviver_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 2061"
    },
    "Global.cane_clear_fn:UNKNOWN": {
        "prefix": "cane_clear_fn",
        "body": "cane_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 2185"
    },
    "Global.researchlab2_clear_fn:UNKNOWN": {
        "prefix": "researchlab2_clear_fn",
        "body": "researchlab2_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 2633"
    },
    "Global.GetFeaturedPacks:UNKNOWN": {
        "prefix": "GetFeaturedPacks",
        "body": "GetFeaturedPacks(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 193"
    },
    "Global.d_allkitcoons:UNKNOWN": {
        "prefix": "d_allkitcoons",
        "body": "d_allkitcoons(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 920"
    },
    "Global.c_makeboat:UNKNOWN": {
        "prefix": "c_makeboat",
        "body": "c_makeboat(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 1442"
    },
    "Global.IOprint:UNKNOWN": {
        "prefix": "IOprint",
        "body": "IOprint(${1:...})",
        "description": " ※Params: \n   (...)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugtools 所在行数: 275"
    },
    "Global.MakeAllPrefixes:UNKNOWN": {
        "prefix": "MakeAllPrefixes",
        "body": "MakeAllPrefixes(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/dlcsupport_strings 所在行数: 59"
    },
    "Global.c_getmaxplayers:UNKNOWN": {
        "prefix": "c_getmaxplayers",
        "body": "c_getmaxplayers(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 274"
    },
    "Global.d_clothing_clear:UNKNOWN": {
        "prefix": "d_clothing_clear",
        "body": "d_clothing_clear(${1:type})",
        "description": " ※Params: \n   (type)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 603"
    },
    "Global.c_spawn:UNKNOWN": {
        "prefix": "c_spawn",
        "body": "c_spawn(${1:prefab},${2:count},${3:dontselect})",
        "description": " ※Params: \n   (prefab)<>[] \n   (count)<>[] \n   (dontselect)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 208"
    },
    "Global.walkingplank_init_fn:UNKNOWN": {
        "prefix": "walkingplank_init_fn",
        "body": "walkingplank_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1660"
    },
    "Global.IsEntityDead:UNKNOWN": {
        "prefix": "IsEntityDead",
        "body": "IsEntityDead(${1:inst},${2:require_health})",
        "description": " ※Params: \n   (inst)<>[] \n   (require_health)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/componentutil 所在行数: 7"
    },
    "Global.checkstring:UNKNOWN": {
        "prefix": "checkstring",
        "body": "checkstring(${1:val})",
        "description": " ※Params: \n   (val)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networkclientrpc 所在行数: 7"
    },
    "Global.Networking_LeftParty:UNKNOWN": {
        "prefix": "Networking_LeftParty",
        "body": "Networking_LeftParty(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 980"
    },
    "Global.fence_clear_fn:UNKNOWN": {
        "prefix": "fence_clear_fn",
        "body": "fence_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1886"
    },
    "Global.trophyscale_oversizedveggies_init_fn:UNKNOWN": {
        "prefix": "trophyscale_oversizedveggies_init_fn",
        "body": "trophyscale_oversizedveggies_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 2813"
    },
    "Global.d_print_skin_info:UNKNOWN": {
        "prefix": "d_print_skin_info",
        "body": "d_print_skin_info(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 574"
    },
    "Global.RemoveCustomizeGroup:UNKNOWN": {
        "prefix": "RemoveCustomizeGroup",
        "body": "RemoveCustomizeGroup(${1:category},${2:name})",
        "description": " ※Params: \n   (category)<>[] \n   (name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 217"
    },
    "Global.IsUserCommerceSellAllowedOnItem:UNKNOWN": {
        "prefix": "IsUserCommerceSellAllowedOnItem",
        "body": "IsUserCommerceSellAllowedOnItem(${1:item_type})",
        "description": " ※Params: \n   (item_type)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 701"
    },
    "Global.GetSkinUsableOnString:UNKNOWN": {
        "prefix": "GetSkinUsableOnString",
        "body": "GetSkinUsableOnString(${1:item_type},${2:popup_txt})",
        "description": " ※Params: \n   (item_type)<>[] \n   (popup_txt)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 646"
    },
    "Global.TickRPCQueue:UNKNOWN": {
        "prefix": "TickRPCQueue",
        "body": "TickRPCQueue(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networkclientrpc 所在行数: 1425"
    },
    "Global.reviver_clear_fn:UNKNOWN": {
        "prefix": "reviver_clear_fn",
        "body": "reviver_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 2086"
    },
    "Global.fence_gate_init_fn:UNKNOWN": {
        "prefix": "fence_gate_init_fn",
        "body": "fence_gate_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1903"
    },
    "Global.IfThenDoWhileNode:UNKNOWN": {
        "prefix": "IfThenDoWhileNode",
        "body": "IfThenDoWhileNode(${1:ifcond},${2:whilecond},${3:name},${4:node})",
        "description": " ※Params: \n   (ifcond)<>[] \n   (whilecond)<>[] \n   (name)<>[] \n   (node)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/behaviourtree 所在行数: 792"
    },
    "Global.hutch_init_fn:UNKNOWN": {
        "prefix": "hutch_init_fn",
        "body": "hutch_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1222"
    },
    "Global.gemsocket_init_fn:UNKNOWN": {
        "prefix": "gemsocket_init_fn",
        "body": "gemsocket_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 2742"
    },
    "Global.OnNetworkDisconnect:UNKNOWN": {
        "prefix": "OnNetworkDisconnect",
        "body": "OnNetworkDisconnect(${1:message},${2:should_reset},${3:force_immediate_reset},${4:details},${5:miscdata})",
        "description": " ※Params: \n   (message)<>[] \n   (should_reset)<>[] \n   (force_immediate_reset)<>[] \n   (details)<>[] \n   (miscdata)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 1780"
    },
    "Global.bundle_clear_fn:UNKNOWN": {
        "prefix": "bundle_clear_fn",
        "body": "bundle_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1281"
    },
    "Global.bugnet_clear_fn:UNKNOWN": {
        "prefix": "bugnet_clear_fn",
        "body": "bugnet_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1330"
    },
    "Global.d_tables:UNKNOWN": {
        "prefix": "d_tables",
        "body": "d_tables(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 1129"
    },
    "Global.IsAnySpecialEventActive:UNKNOWN": {
        "prefix": "IsAnySpecialEventActive",
        "body": "IsAnySpecialEventActive(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/constants 所在行数: 960"
    },
    "Global.c_setmightiness:UNKNOWN": {
        "prefix": "c_setmightiness",
        "body": "c_setmightiness(${1:n})",
        "description": " ※Params: \n   (n)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 420"
    },
    "Global.LoadKlumpString:UNKNOWN": {
        "prefix": "LoadKlumpString",
        "body": "LoadKlumpString(${1:klump_file},${2:cipher},${3:suppress_print})",
        "description": " ※Params: \n   (klump_file)<>[] \n   (cipher)<>[] \n   (suppress_print)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/klump 所在行数: 58"
    },
    "Global.firesuppressor_init_fn:UNKNOWN": {
        "prefix": "firesuppressor_init_fn",
        "body": "firesuppressor_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1374"
    },
    "Global.steeringwheel_item_clear_fn:UNKNOWN": {
        "prefix": "steeringwheel_item_clear_fn",
        "body": "steeringwheel_item_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1679"
    },
    "Global.d_farmplants:UNKNOWN": {
        "prefix": "d_farmplants",
        "body": "d_farmplants(${1:grow_stage},${2:oversized})",
        "description": " ※Params: \n   (grow_stage)<>[] \n   (oversized)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 1350"
    },
    "Global.FindClosestPlayerToInstOnLand:UNKNOWN": {
        "prefix": "FindClosestPlayerToInstOnLand",
        "body": "FindClosestPlayerToInstOnLand(${1:inst},${2:range},${3:isalive})",
        "description": " ※Params: \n   (inst)<>[] \n   (range)<>[] \n   (isalive)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/simutil 所在行数: 107"
    },
    "Global.nightsword_clear_fn:UNKNOWN": {
        "prefix": "nightsword_clear_fn",
        "body": "nightsword_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 2230"
    },
    "Global.steeringwheel_init_fn:UNKNOWN": {
        "prefix": "steeringwheel_init_fn",
        "body": "steeringwheel_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1684"
    },
    "Global.mast_malbatross_clear_fn:UNKNOWN": {
        "prefix": "mast_malbatross_clear_fn",
        "body": "mast_malbatross_clear_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1985"
    },
    "Global.GetTimeRealSeconds:UNKNOWN": {
        "prefix": "GetTimeRealSeconds",
        "body": "GetTimeRealSeconds(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 559"
    },
    "Global.IsValidClothing:UNKNOWN": {
        "prefix": "IsValidClothing",
        "body": "IsValidClothing(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1424"
    },
    "Global.c_rollback:UNKNOWN": {
        "prefix": "c_rollback",
        "body": "c_rollback(${1:count})",
        "description": " ※Params: \n   (count)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 116"
    },
    "Global.Shard_SyncMermKingExists:UNKNOWN": {
        "prefix": "Shard_SyncMermKingExists",
        "body": "Shard_SyncMermKingExists(${1:exists},${2:shardid})",
        "description": " ※Params: \n   (exists)<>[] \n   (shardid)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/shardnetworking 所在行数: 214"
    },
    "Global.fence_item_init_fn:UNKNOWN": {
        "prefix": "fence_item_init_fn",
        "body": "fence_item_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1870"
    },
    "Global.UpsellShowing:UNKNOWN": {
        "prefix": "UpsellShowing",
        "body": "UpsellShowing(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/upsell 所在行数: 19"
    },
    "Global.c_giveingredients:UNKNOWN": {
        "prefix": "c_giveingredients",
        "body": "c_giveingredients(${1:prefab})",
        "description": " ※Params: \n   (prefab)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 545"
    },
    "Global.boat_grass_item_init_fn:UNKNOWN": {
        "prefix": "boat_grass_item_init_fn",
        "body": "boat_grass_item_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 225"
    },
    "Global.steeringwheel_clear_fn:UNKNOWN": {
        "prefix": "steeringwheel_clear_fn",
        "body": "steeringwheel_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1690"
    },
    "Global.rawstring:UNKNOWN": {
        "prefix": "rawstring",
        "body": "rawstring(${1:t})",
        "description": " ※Params: \n   (t)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 1733"
    },
    "Global.d_startmoonstorm:UNKNOWN": {
        "prefix": "d_startmoonstorm",
        "body": "d_startmoonstorm(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 1422"
    },
    "Global.FindPlayersInRange:UNKNOWN": {
        "prefix": "FindPlayersInRange",
        "body": "FindPlayersInRange(${1:x},${2:y},${3:z},${4:range},${5:isalive})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n   (range)<>[] \n   (isalive)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/simutil 所在行数: 124"
    },
    "Global.GetRandomKey:UNKNOWN": {
        "prefix": "GetRandomKey",
        "body": "GetRandomKey(${1:choices})",
        "description": " ※Params: \n   (choices)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 513"
    },
    "Global.isinf:UNKNOWN": {
        "prefix": "isinf",
        "body": "isinf(${1:x})",
        "description": " ※Params: \n   (x)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 676"
    },
    "Global.d_cookbook:UNKNOWN": {
        "prefix": "d_cookbook",
        "body": "d_cookbook(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 1450"
    },
    "Global.HandleRPCQueue:UNKNOWN": {
        "prefix": "HandleRPCQueue",
        "body": "HandleRPCQueue(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networkclientrpc 所在行数: 1351"
    },
    "Global.GetRandomItem:UNKNOWN": {
        "prefix": "GetRandomItem",
        "body": "GetRandomItem(${1:choices})",
        "description": " ※Params: \n   (choices)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 253"
    },
    "Global.PushEntityEvent:UNKNOWN": {
        "prefix": "PushEntityEvent",
        "body": "PushEntityEvent(${1:guid},${2:event},${3:data})",
        "description": " ※Params: \n   (guid)<>[] \n   (event)<>[] \n   (data)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 520"
    },
    "Global.IsHeirloomRarity:UNKNOWN": {
        "prefix": "IsHeirloomRarity",
        "body": "IsHeirloomRarity(${1:rarity})",
        "description": " ※Params: \n   (rarity)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 106"
    },
    "Global.walkingplank_grass_init_fn:UNKNOWN": {
        "prefix": "walkingplank_grass_init_fn",
        "body": "walkingplank_grass_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 246"
    },
    "Global.critter_builder_init_fn:UNKNOWN": {
        "prefix": "critter_builder_init_fn",
        "body": "critter_builder_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1507"
    },
    "Global.FindValidPositionByFan:UNKNOWN": {
        "prefix": "FindValidPositionByFan",
        "body": "FindValidPositionByFan(${1:start_angle},${2:radius},${3:attempts},${4:test_fn})",
        "description": " ※Params: \n   (start_angle)<>[] \n   (radius)<>[] \n   (attempts)<>[] \n   (test_fn)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/simutil 所在行数: 255"
    },
    "Global.IsAny_YearOfThe_EventActive:UNKNOWN": {
        "prefix": "IsAny_YearOfThe_EventActive",
        "body": "IsAny_YearOfThe_EventActive(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/constants 所在行数: 989"
    },
    "Global.anchor_clear_fn:UNKNOWN": {
        "prefix": "anchor_clear_fn",
        "body": "anchor_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1714"
    },
    "Global.BuildColourCubeShader:UNKNOWN": {
        "prefix": "BuildColourCubeShader",
        "body": "BuildColourCubeShader(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/postprocesseffects 所在行数: 131"
    },
    "Global.cookpot_clear_fn:UNKNOWN": {
        "prefix": "cookpot_clear_fn",
        "body": "cookpot_clear_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1345"
    },
    "Global.telebase_clear_fn:UNKNOWN": {
        "prefix": "telebase_clear_fn",
        "body": "telebase_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 2737"
    },
    "Global.d_shadowrift:UNKNOWN": {
        "prefix": "d_shadowrift",
        "body": "d_shadowrift(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 245"
    },
    "Global.c_maintainhunger:UNKNOWN": {
        "prefix": "c_maintainhunger",
        "body": "c_maintainhunger(${1:player},${2:percent})",
        "description": " ※Params: \n   (player)<>[] \n   (percent)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 1119"
    },
    "Global.AddBrainPostInit:修改脑子API": {
        "prefix": "AddBrainPostInit",
        "body": "AddBrainPostInit(\"${1:brain}\", function(self)\n\t${0}\nend)",
        "description": " ※Params: \n   (brain)<>[] \n   (fn)<>[] \n ※Description: 修改脑子API\n ※Contributor: @lan\n ※Path: scripts_en/modutil 所在行数: 627"
    },
    "Global.RemoveCustomizeItem:UNKNOWN": {
        "prefix": "RemoveCustomizeItem",
        "body": "RemoveCustomizeItem(${1:category},${2:name})",
        "description": " ※Params: \n   (category)<>[] \n   (name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 227"
    },
    "Global.d_resetruins:UNKNOWN": {
        "prefix": "d_resetruins",
        "body": "d_resetruins(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 647"
    },
    "Global.Networking_VoteAnnouncement:UNKNOWN": {
        "prefix": "Networking_VoteAnnouncement",
        "body": "Networking_VoteAnnouncement(${1:commandid},${2:targetname},${3:passed})",
        "description": " ※Params: \n   (commandid)<>[] \n   (targetname)<>[] \n   (passed)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 122"
    },
    "Global.c_godmode:UNKNOWN": {
        "prefix": "c_godmode",
        "body": "c_godmode(${1:player})",
        "description": " ※Params: \n   (player)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 776"
    },
    "Global.metanext:UNKNOWN": {
        "prefix": "metanext",
        "body": "metanext(${1:t},${2:k},${3:...})",
        "description": " ※Params: \n   (t)<>[] \n   (k)<>[] \n   (...)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 1662"
    },
    "Global.d_resetskilltree:UNKNOWN": {
        "prefix": "d_resetskilltree",
        "body": "d_resetskilltree(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 310"
    },
    "Global.Networking_SystemMessage:UNKNOWN": {
        "prefix": "Networking_SystemMessage",
        "body": "Networking_SystemMessage(${1:message})",
        "description": " ※Params: \n   (message)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 47"
    },
    "Global.LoadAccessibleKlumpFiles:UNKNOWN": {
        "prefix": "LoadAccessibleKlumpFiles",
        "body": "LoadAccessibleKlumpFiles(${1:minimal_load})",
        "description": " ※Params: \n   (minimal_load)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/klump 所在行数: 5"
    },
    "Global.wall_wood_clear_fn:UNKNOWN": {
        "prefix": "wall_wood_clear_fn",
        "body": "wall_wood_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1863"
    },
    "Global.CreateStringsPOTv2:UNKNOWN": {
        "prefix": "CreateStringsPOTv2",
        "body": "CreateStringsPOTv2(${1:filename},${2:root},${3:tbl_dta},${4:tbl_lkp})",
        "description": " ※Params: \n   (filename)<>[] \n   (root)<>[] \n   (tbl_dta)<>[] \n   (tbl_lkp)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/createstringspo_dlc 所在行数: 245"
    },
    "Global.c_equip:UNKNOWN": {
        "prefix": "c_equip",
        "body": "c_equip(${1:prefab},${2:count},${3:dontselect})",
        "description": " ※Params: \n   (prefab)<>[] \n   (count)<>[] \n   (dontselect)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 503"
    },
    "Global.c_mermthrone:UNKNOWN": {
        "prefix": "c_mermthrone",
        "body": "c_mermthrone(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 88"
    },
    "Global.c_kitcoon:UNKNOWN": {
        "prefix": "c_kitcoon",
        "body": "c_kitcoon(${1:name},${2:age},${3:build})",
        "description": " ※Params: \n   (name)<>[] \n   (age)<>[] \n   (build)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 641"
    },
    "Global.c_gatherplayers:UNKNOWN": {
        "prefix": "c_gatherplayers",
        "body": "c_gatherplayers(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 1039"
    },
    "Global.AddStategraphActionHandler:添加SG的动作触发器API通用函数片段": {
        "prefix": "AddStategraphActionHandler",
        "body": "AddStategraphActionHandler(\"${1:StateGraph}\", ActionHandler(ACTIONS.${2:XXX}, \"give\"))",
        "description": " ※Params: \n   (stategraph)<>[] \n   (handler)<>[] \n ※Description: 添加SG的动作触发器API通用函数片段\n ※Contributor: @月\n ※Path: scripts_en/modutil 所在行数: 518"
    },
    "Global.c_setinspiration:UNKNOWN": {
        "prefix": "c_setinspiration",
        "body": "c_setinspiration(${1:n})",
        "description": " ※Params: \n   (n)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 380"
    },
    "Global.ConsoleCommandPlayer:UNKNOWN": {
        "prefix": "ConsoleCommandPlayer",
        "body": "ConsoleCommandPlayer(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 2"
    },
    "Global.GetSkilltreeBG_Internal:UNKNOWN": {
        "prefix": "GetSkilltreeBG_Internal",
        "body": "GetSkilltreeBG_Internal(${1:imagename})",
        "description": " ※Params: \n   (imagename)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/simutil 所在行数: 733"
    },
    "Global.d_spiders:UNKNOWN": {
        "prefix": "d_spiders",
        "body": "d_spiders(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 127"
    },
    "Global.c_save:UNKNOWN": {
        "prefix": "c_save",
        "body": "c_save(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 167"
    },
    "Global.c_debugshards:UNKNOWN": {
        "prefix": "c_debugshards",
        "body": "c_debugshards(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 1362"
    },
    "Global.c_guitartab:UNKNOWN": {
        "prefix": "c_guitartab",
        "body": "c_guitartab(${1:songdata},${2:overrides},${3:dont_spawn_shells})",
        "description": " ※Params: \n   (songdata)<>[] \n   (overrides)<>[] \n   (dont_spawn_shells)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 1909"
    },
    "Global.AddTaskSet:UNKNOWN": {
        "prefix": "AddTaskSet",
        "body": "AddTaskSet(${1:arg1},${2:...})",
        "description": " ※Params: \n   (arg1)<>[] \n   (...)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 294"
    },
    "Global.c_supergodmode:UNKNOWN": {
        "prefix": "c_supergodmode",
        "body": "c_supergodmode(${1:player})",
        "description": " ※Params: \n   (player)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 802"
    },
    "Global.c_maintainsanity:UNKNOWN": {
        "prefix": "c_maintainsanity",
        "body": "c_maintainsanity(${1:player},${2:percent})",
        "description": " ※Params: \n   (player)<>[] \n   (percent)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 1109"
    },
    "Global.EraseFiles:UNKNOWN": {
        "prefix": "EraseFiles",
        "body": "EraseFiles(${1:cb},${2:files})",
        "description": " ※Params: \n   (cb)<>[] \n   (files)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/fileutil 所在行数: 1"
    },
    "Global.d_teleportboat:UNKNOWN": {
        "prefix": "d_teleportboat",
        "body": "d_teleportboat(${1:x},${2:y},${3:z})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 268"
    },
    "Global.c_selectnext:UNKNOWN": {
        "prefix": "c_selectnext",
        "body": "c_selectnext(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 990"
    },
    "Global.IsMigrating:UNKNOWN": {
        "prefix": "IsMigrating",
        "body": "IsMigrating(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 1664"
    },
    "Global.c_summonbearger:UNKNOWN": {
        "prefix": "c_summonbearger",
        "body": "c_summonbearger(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 1023"
    },
    "Global.c_summonmalbatross:UNKNOWN": {
        "prefix": "c_summonmalbatross",
        "body": "c_summonmalbatross(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 1031"
    },
    "Global.ProfileStatsAdd:UNKNOWN": {
        "prefix": "ProfileStatsAdd",
        "body": "ProfileStatsAdd(${1:item},${2:value})",
        "description": " ※Params: \n   (item)<>[] \n   (value)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/stats 所在行数: 324"
    },
    "Global.c_findnext:UNKNOWN": {
        "prefix": "c_findnext",
        "body": "c_findnext(${1:prefab},${2:radius},${3:inst})",
        "description": " ※Params: \n   (prefab)<>[] \n   (radius)<>[] \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 714"
    },
    "Global.GetCustomizeDescription:UNKNOWN": {
        "prefix": "GetCustomizeDescription",
        "body": "GetCustomizeDescription(${1:description})",
        "description": " ※Params: \n   (description)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 232"
    },
    "Global.DoLoadingPortal:UNKNOWN": {
        "prefix": "DoLoadingPortal",
        "body": "DoLoadingPortal(${1:cb})",
        "description": " ※Params: \n   (cb)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 1429"
    },
    "Global.ChangeToCharacterPhysics:UNKNOWN": {
        "prefix": "ChangeToCharacterPhysics",
        "body": "ChangeToCharacterPhysics(${1:inst},${2:mass},${3:rad})",
        "description": " ※Params: \n   (inst)<>[] \n   (mass)<>[] \n   (rad)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 507"
    },
    "Global.SetModHUDFocus:UNKNOWN": {
        "prefix": "SetModHUDFocus",
        "body": "SetModHUDFocus(${1:focusid},${2:hasfocus})",
        "description": " ※Params: \n   (focusid)<>[] \n   (hasfocus)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 919"
    },
    "Global.c_skip:UNKNOWN": {
        "prefix": "c_skip",
        "body": "c_skip(${1:num})",
        "description": " ※Params: \n   (num)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 1051"
    },
    "Global.c_reset:UNKNOWN": {
        "prefix": "c_reset",
        "body": "c_reset(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 123"
    },
    "Global.c_searchprefabs:UNKNOWN": {
        "prefix": "c_searchprefabs",
        "body": "c_searchprefabs(${1:str})",
        "description": " ※Params: \n   (str)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 1065"
    },
    "Global.SpawnAttackWaves:UNKNOWN": {
        "prefix": "SpawnAttackWaves",
        "body": "SpawnAttackWaves(${1:position},${2:rotation},${3:spawn_radius},${4:numWaves},${5:totalAngle},${6:waveSpeed},${7:wavePrefab},${8:idleTime},${9:instantActive})",
        "description": " ※Params: \n   (position)<>[] \n   (rotation)<>[] \n   (spawn_radius)<>[] \n   (numWaves)<>[] \n   (totalAngle)<>[] \n   (waveSpeed)<>[] \n   (wavePrefab)<>[] \n   (idleTime)<>[] \n   (instantActive)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/ocean_util 所在行数: 30"
    },
    "Global.c_dumpseasons:UNKNOWN": {
        "prefix": "c_dumpseasons",
        "body": "c_dumpseasons(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 967"
    },
    "Global.c_listtag:UNKNOWN": {
        "prefix": "c_listtag",
        "body": "c_listtag(${1:tag})",
        "description": " ※Params: \n   (tag)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 632"
    },
    "Global.c_setmoisture:UNKNOWN": {
        "prefix": "c_setmoisture",
        "body": "c_setmoisture(${1:n})",
        "description": " ※Params: \n   (n)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 447"
    },
    "Global.DumpComponent:UNKNOWN": {
        "prefix": "DumpComponent",
        "body": "DumpComponent(${1:comp})",
        "description": " ※Params: \n   (comp)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debughelpers 所在行数: 5"
    },
    "Global.DecayCharlieResidueAndGoOnCooldownIfItExists:UNKNOWN": {
        "prefix": "DecayCharlieResidueAndGoOnCooldownIfItExists",
        "body": "DecayCharlieResidueAndGoOnCooldownIfItExists(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/componentutil 所在行数: 93"
    },
    "Global.NotifyPlayerProgress:UNKNOWN": {
        "prefix": "NotifyPlayerProgress",
        "body": "NotifyPlayerProgress(${1:name},${2:value},${3:player})",
        "description": " ※Params: \n   (name)<>[] \n   (value)<>[] \n   (player)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 293"
    },
    "Global.c_addelectricity:UNKNOWN": {
        "prefix": "c_addelectricity",
        "body": "c_addelectricity(${1:n})",
        "description": " ※Params: \n   (n)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 427"
    },
    "Global.c_maintainmoisture:UNKNOWN": {
        "prefix": "c_maintainmoisture",
        "body": "c_maintainmoisture(${1:player},${2:percent})",
        "description": " ※Params: \n   (player)<>[] \n   (percent)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 1139"
    },
    "Global.OnPushPopupDialog:UNKNOWN": {
        "prefix": "OnPushPopupDialog",
        "body": "OnPushPopupDialog(${1:message})",
        "description": " ※Params: \n   (message)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 1750"
    },
    "Global.c_gonext:UNKNOWN": {
        "prefix": "c_gonext",
        "body": "c_gonext(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 870"
    },
    "Global.critter_dragonling_clear_fn:UNKNOWN": {
        "prefix": "critter_dragonling_clear_fn",
        "body": "critter_dragonling_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1538"
    },
    "Global.lureplantbulb_clear_fn:UNKNOWN": {
        "prefix": "lureplantbulb_clear_fn",
        "body": "lureplantbulb_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1032"
    },
    "Global.c_dump:UNKNOWN": {
        "prefix": "c_dump",
        "body": "c_dump(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 959"
    },
    "Global.AddTile:UNKNOWN": {
        "prefix": "AddTile",
        "body": "AddTile(${1:tile_name},${2:tile_range},${3:tile_data},${4:ground_tile_def},${5:minimap_tile_def},${6:turf_def})",
        "description": " ※Params: \n   (tile_name)<>[] \n   (tile_range)<>[] \n   (tile_data)<>[] \n   (ground_tile_def)<>[] \n   (minimap_tile_def)<>[] \n   (turf_def)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 364"
    },
    "Global.c_removeall:UNKNOWN": {
        "prefix": "c_removeall",
        "body": "c_removeall(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 1252"
    },
    "Global.c_armor:UNKNOWN": {
        "prefix": "c_armor",
        "body": "c_armor(${1:player})",
        "description": " ※Params: \n   (player)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 828"
    },
    "Global.c_removeat:UNKNOWN": {
        "prefix": "c_removeat",
        "body": "c_removeat(${1:x},${2:y},${3:z})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 1245"
    },
    "Global.c_reregisterportals:UNKNOWN": {
        "prefix": "c_reregisterportals",
        "body": "c_reregisterportals(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 1406"
    },
    "Global.bugnet_init_fn:UNKNOWN": {
        "prefix": "bugnet_init_fn",
        "body": "bugnet_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1321"
    },
    "Global.GetTimeReal:UNKNOWN": {
        "prefix": "GetTimeReal",
        "body": "GetTimeReal(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 555"
    },
    "Global.c_find:UNKNOWN": {
        "prefix": "c_find",
        "body": "c_find(${1:prefab},${2:radius},${3:inst})",
        "description": " ※Params: \n   (prefab)<>[] \n   (radius)<>[] \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 841"
    },
    "Global.ExecuteConsoleCommand:UNKNOWN": {
        "prefix": "ExecuteConsoleCommand",
        "body": "ExecuteConsoleCommand(${1:fnstr},${2:guid},${3:x},${4:z})",
        "description": " ※Params: \n   (fnstr)<>[] \n   (guid)<>[] \n   (x)<>[] \n   (z)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 2093"
    },
    "Global.IsUserCommerceBuyRestrictedDueToOwnership:UNKNOWN": {
        "prefix": "IsUserCommerceBuyRestrictedDueToOwnership",
        "body": "IsUserCommerceBuyRestrictedDueToOwnership(${1:item_type})",
        "description": " ※Params: \n   (item_type)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 722"
    },
    "Global.d_decodedata:UNKNOWN": {
        "prefix": "d_decodedata",
        "body": "d_decodedata(${1:path})",
        "description": " ※Params: \n   (path)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 206"
    },
    "Global.Asset:加载资源": {
        "prefix": "Asset",
        "body": "Asset(${1|\"ANIM\"\\,\"anim/path.zip\",\"ATLAS\"\\,\"images/path.xml\",\"IMAGE\"\\,\"images/path.tex\",\"SCRIPT\"\\,\"scripts/path.lua\",\"SOUND\"\\,\"sound/path.fsb\",\"SOUNDPACKAGE\"\\,\"sound/path.fev\",\"SHADER\"\\,\"shaders/path.ksh\",\"MINIMAP_IMAGE\"\\,\"path\"|})",
        "description": " ※Params: \n   (asset_type)<string>[资源类型] \n   (path)<string>[路径] \n ※Description: 加载资源\n ※Contributor: @lan\n ※Path: scripts_en/i_dont_know_path "
    },
    "Global.fastdump:UNKNOWN": {
        "prefix": "fastdump",
        "body": "fastdump(${1:value})",
        "description": " ※Params: \n   (value)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 967"
    },
    "Global.ProfileStatsAddToField:UNKNOWN": {
        "prefix": "ProfileStatsAddToField",
        "body": "ProfileStatsAddToField(${1:field},${2:value})",
        "description": " ※Params: \n   (field)<>[] \n   (value)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/stats 所在行数: 361"
    },
    "Global.c_allbooks:UNKNOWN": {
        "prefix": "c_allbooks",
        "body": "c_allbooks(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 97"
    },
    "Global.c_connect:UNKNOWN": {
        "prefix": "c_connect",
        "body": "c_connect(${1:ip},${2:port},${3:password})",
        "description": " ※Params: \n   (ip)<>[] \n   (port)<>[] \n   (password)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 470"
    },
    "Global.c_listplayers:UNKNOWN": {
        "prefix": "c_listplayers",
        "body": "c_listplayers(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 279"
    },
    "Global.telebase_init_fn:UNKNOWN": {
        "prefix": "telebase_init_fn",
        "body": "telebase_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 2720"
    },
    "Global.ShakeAllCameras:UNKNOWN": {
        "prefix": "ShakeAllCameras",
        "body": "ShakeAllCameras(${1:mode},${2:duration},${3:speed},${4:scale},${5:source_or_pt},${6:maxDist})",
        "description": " ※Params: \n   (mode)<>[] \n   (duration)<>[] \n   (speed)<>[] \n   (scale)<>[] \n   (source_or_pt)<>[] \n   (maxDist)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/simutil 所在行数: 237"
    },
    "Global.GetLevelType:UNKNOWN": {
        "prefix": "GetLevelType",
        "body": "GetLevelType(${1:game_mode})",
        "description": " ※Params: \n   (game_mode)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/gamemodes 所在行数: 307"
    },
    "Global.ForceAssetReset:UNKNOWN": {
        "prefix": "ForceAssetReset",
        "body": "ForceAssetReset(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 1484"
    },
    "Global.c_speedup:UNKNOWN": {
        "prefix": "c_speedup",
        "body": "c_speedup(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 1046"
    },
    "Global.HexToRGB:UNKNOWN": {
        "prefix": "HexToRGB",
        "body": "HexToRGB(${1:hex})",
        "description": " ※Params: \n   (hex)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 1572"
    },
    "Global.DefaultBurntFn:UNKNOWN": {
        "prefix": "DefaultBurntFn",
        "body": "DefaultBurntFn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 17"
    },
    "Global.c_printtextureinfo:UNKNOWN": {
        "prefix": "c_printtextureinfo",
        "body": "c_printtextureinfo(${1:filename})",
        "description": " ※Params: \n   (filename)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 880"
    },
    "Global.c_autoteleportplayers:UNKNOWN": {
        "prefix": "c_autoteleportplayers",
        "body": "c_autoteleportplayers(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 1641"
    },
    "Global.GetSpecialCharacterPostProcess:UNKNOWN": {
        "prefix": "GetSpecialCharacterPostProcess",
        "body": "GetSpecialCharacterPostProcess(${1:character},${2:string})",
        "description": " ※Params: \n   (character)<>[] \n   (string)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/stringutil 所在行数: 240"
    },
    "Global.bernie_big_init_fn:UNKNOWN": {
        "prefix": "bernie_big_init_fn",
        "body": "bernie_big_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 2015"
    },
    "Global.minisign_init_fn:UNKNOWN": {
        "prefix": "minisign_init_fn",
        "body": "minisign_init_fn(${1:inst},${2:build_name},${3:anim_bank})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n   (anim_bank)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1615"
    },
    "Global.VecUtil_Sub:UNKNOWN": {
        "prefix": "VecUtil_Sub",
        "body": "VecUtil_Sub(${1:p1_x},${2:p1_z},${3:p2_x},${4:p2_z})",
        "description": " ※Params: \n   (p1_x)<>[] \n   (p1_z)<>[] \n   (p2_x)<>[] \n   (p2_z)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/vecutil 所在行数: 7"
    },
    "Global.c_shellsfromtable:UNKNOWN": {
        "prefix": "c_shellsfromtable",
        "body": "c_shellsfromtable(${1:song},${2:startpos},${3:placementfn},${4:spacing_multiplier},${5:out_of_range_mode})",
        "description": " ※Params: \n   (song)<>[] \n   (startpos)<>[] \n   (placementfn)<>[] \n   (spacing_multiplier)<>[] \n   (out_of_range_mode)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 1712"
    },
    "Global.dock_woodposts_clear_fn:UNKNOWN": {
        "prefix": "dock_woodposts_clear_fn",
        "body": "dock_woodposts_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 2785"
    },
    "Global.c_setwereness:UNKNOWN": {
        "prefix": "c_setwereness",
        "body": "c_setwereness(${1:n})",
        "description": " ※Params: \n   (n)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 434"
    },
    "Global.AnimateUIScale:UNKNOWN": {
        "prefix": "AnimateUIScale",
        "body": "AnimateUIScale(${1:item},${2:total_time},${3:start_scale},${4:end_scale})",
        "description": " ※Params: \n   (item)<>[] \n   (total_time)<>[] \n   (start_scale)<>[] \n   (end_scale)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/simutil 所在行数: 216"
    },
    "Global.IsCharacterOwned:UNKNOWN": {
        "prefix": "IsCharacterOwned",
        "body": "IsCharacterOwned(${1:prefab})",
        "description": " ※Params: \n   (prefab)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1356"
    },
    "Global.Shard_StartVote:UNKNOWN": {
        "prefix": "Shard_StartVote",
        "body": "Shard_StartVote(${1:command_id},${2:starter_id},${3:target_id})",
        "description": " ※Params: \n   (command_id)<>[] \n   (starter_id)<>[] \n   (target_id)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/shardnetworking 所在行数: 145"
    },
    "Global.SerializeWorldSession:UNKNOWN": {
        "prefix": "SerializeWorldSession",
        "body": "SerializeWorldSession(${1:data},${2:session_identifier},${3:callback},${4:metadataStr})",
        "description": " ※Params: \n   (data)<>[] \n   (session_identifier)<>[] \n   (callback)<>[] \n   (metadataStr)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 325"
    },
    "Global.GetClosestNodeToPlayer:UNKNOWN": {
        "prefix": "GetClosestNodeToPlayer",
        "body": "GetClosestNodeToPlayer(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/maputil 所在行数: 30"
    },
    "Global.d_spawnallhandequipment_onstands:UNKNOWN": {
        "prefix": "d_spawnallhandequipment_onstands",
        "body": "d_spawnallhandequipment_onstands(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 1640"
    },
    "Global.GetModRPC:UNKNOWN": {
        "prefix": "GetModRPC",
        "body": "GetModRPC(${1:namespace},${2:name})",
        "description": " ※Params: \n   (namespace)<>[] \n   (name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 906"
    },
    "Global.c_doscenario:UNKNOWN": {
        "prefix": "c_doscenario",
        "body": "c_doscenario(${1:scenario})",
        "description": " ※Params: \n   (scenario)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 333"
    },
    "Global.IsDefaultClothing:UNKNOWN": {
        "prefix": "IsDefaultClothing",
        "body": "IsDefaultClothing(${1:item_key})",
        "description": " ※Params: \n   (item_key)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1383"
    },
    "Global.ResumeRequestLoadComplete:UNKNOWN": {
        "prefix": "ResumeRequestLoadComplete",
        "body": "ResumeRequestLoadComplete(${1:success})",
        "description": " ※Params: \n   (success)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 1997"
    },
    "Global.LookupTileInfo:UNKNOWN": {
        "prefix": "LookupTileInfo",
        "body": "LookupTileInfo(${1:tile})",
        "description": " ※Params: \n   (tile)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/worldtiledefs 所在行数: 71"
    },
    "Global.removesetter:UNKNOWN": {
        "prefix": "removesetter",
        "body": "removesetter(${1:t},${2:k})",
        "description": " ※Params: \n   (t)<>[] \n   (k)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/class 所在行数: 75"
    },
    "Global.Shard_UpdateMasterSessionId:UNKNOWN": {
        "prefix": "Shard_UpdateMasterSessionId",
        "body": "Shard_UpdateMasterSessionId(${1:session_id})",
        "description": " ※Params: \n   (session_id)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/shardnetworking 所在行数: 131"
    },
    "Global.d_waxplant:UNKNOWN": {
        "prefix": "d_waxplant",
        "body": "d_waxplant(${1:plant})",
        "description": " ※Params: \n   (plant)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 3360"
    },
    "Global.GetInventorySkinsList:UNKNOWN": {
        "prefix": "GetInventorySkinsList",
        "body": "GetInventorySkinsList(${1:do_sort})",
        "description": " ※Params: \n   (do_sort)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1056"
    },
    "Global.CopySkinsList:UNKNOWN": {
        "prefix": "CopySkinsList",
        "body": "CopySkinsList(${1:list})",
        "description": " ※Params: \n   (list)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1113"
    },
    "Global.RemoveLoadingTip:UNKNOWN": {
        "prefix": "RemoveLoadingTip",
        "body": "RemoveLoadingTip(${1:stringtable},${2:id})",
        "description": " ※Params: \n   (stringtable)<>[] \n   (id)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 990"
    },
    "Global.GetMinimapAtlas:UNKNOWN": {
        "prefix": "GetMinimapAtlas",
        "body": "GetMinimapAtlas(${1:imagename})",
        "description": " ※Params: \n   (imagename)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/simutil 所在行数: 661"
    },
    "Global.TrimString:UNKNOWN": {
        "prefix": "TrimString",
        "body": "TrimString(${1:s})",
        "description": " ※Params: \n   (s)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/stringutil 所在行数: 462"
    },
    "Global.c_migrationportal:UNKNOWN": {
        "prefix": "c_migrationportal",
        "body": "c_migrationportal(${1:worldId},${2:portalId})",
        "description": " ※Params: \n   (worldId)<>[] \n   (portalId)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 1286"
    },
    "Global.StartNextInstance:UNKNOWN": {
        "prefix": "StartNextInstance",
        "body": "StartNextInstance(${1:in_params})",
        "description": " ※Params: \n   (in_params)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 1462"
    },
    "Global.ApplyExtraEvent:UNKNOWN": {
        "prefix": "ApplyExtraEvent",
        "body": "ApplyExtraEvent(${1:event})",
        "description": " ※Params: \n   (event)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/simutil 所在行数: 596"
    },
    "Global.mastupgrade_lamp_item_clear_fn:UNKNOWN": {
        "prefix": "mastupgrade_lamp_item_clear_fn",
        "body": "mastupgrade_lamp_item_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1726"
    },
    "Global.GetSkinData:UNKNOWN": {
        "prefix": "GetSkinData",
        "body": "GetSkinData(${1:item})",
        "description": " ※Params: \n   (item)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 589"
    },
    "Global.HandleUpsellClose:UNKNOWN": {
        "prefix": "HandleUpsellClose",
        "body": "HandleUpsellClose(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/upsell 所在行数: 66"
    },
    "Global.AddVoteCommand:UNKNOWN": {
        "prefix": "AddVoteCommand",
        "body": "AddVoteCommand(${1:command_name},${2:init_options_fn},${3:process_result_fn},${4:vote_timeout})",
        "description": " ※Params: \n   (command_name)<>[] \n   (init_options_fn)<>[] \n   (process_result_fn)<>[] \n   (vote_timeout)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 933"
    },
    "Global.CheckFiles:UNKNOWN": {
        "prefix": "CheckFiles",
        "body": "CheckFiles(${1:cb},${2:files})",
        "description": " ※Params: \n   (cb)<>[] \n   (files)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/fileutil 所在行数: 54"
    },
    "Global.DistPointToSegmentXYSq:UNKNOWN": {
        "prefix": "DistPointToSegmentXYSq",
        "body": "DistPointToSegmentXYSq(${1:p},${2:v1},${3:v2})",
        "description": " ※Params: \n   (p)<>[] \n   (v1)<>[] \n   (v2)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 1599"
    },
    "Global.fence_item_clear_fn:UNKNOWN": {
        "prefix": "fence_item_clear_fn",
        "body": "fence_item_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1875"
    },
    "Global.AddShardModRPCHandler:注册服务器分片rpc": {
        "prefix": "AddShardModRPCHandler",
        "body": "AddShardModRPCHandler(\"${1:name}\",\"${2:$1}\", function(wordid, str)\n\tif wordid == nil or str == nil then return end\n\tlocal success, savedata = RunInSandboxSafe(str)\n\tif success then\n\n\telse\n\t\tprint(\"分片接收RPC失败\")\n\tend\nend)",
        "description": " ※Params: \n   (namespace)<>[] \n   (name)<>[] \n   (fn)<>[] \n ※Description: 注册服务器分片rpc\n ※Contributor: @月 \n\t参数1:命名空间;参数2:RPC名称;参数3:执行函数(...).前两个是唯一标识符\n ※Path: scripts_en/modutil 所在行数: 867"
    },
    "Global.ReplacePrefab:UNKNOWN": {
        "prefix": "ReplacePrefab",
        "body": "ReplacePrefab(${1:original_inst},${2:name},${3:skin},${4:skin_id},${5:creator})",
        "description": " ※Params: \n   (original_inst)<>[] \n   (name)<>[] \n   (skin)<>[] \n   (skin_id)<>[] \n   (creator)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 387"
    },
    "Global.c_migrateto:UNKNOWN": {
        "prefix": "c_migrateto",
        "body": "c_migrateto(${1:worldId},${2:portalId})",
        "description": " ※Params: \n   (worldId)<>[] \n   (portalId)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 1351"
    },
    "Global.GetLoaderAtlasAndTex:UNKNOWN": {
        "prefix": "GetLoaderAtlasAndTex",
        "body": "GetLoaderAtlasAndTex(${1:item_key})",
        "description": " ※Params: \n   (item_key)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1578"
    },
    "Global.GetEmotesWordPredictionDictionary:UNKNOWN": {
        "prefix": "GetEmotesWordPredictionDictionary",
        "body": "GetEmotesWordPredictionDictionary(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/usercommands 所在行数: 666"
    },
    "Global.AddRecipeToFilter:UNKNOWN": {
        "prefix": "AddRecipeToFilter",
        "body": "AddRecipeToFilter(${1:recipe_name},${2:filter_name})",
        "description": " ※Params: \n   (recipe_name)<>[] \n   (filter_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 713"
    },
    "Global.PostPhysicsWallUpdate:UNKNOWN": {
        "prefix": "PostPhysicsWallUpdate",
        "body": "PostPhysicsWallUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/update 所在行数: 149"
    },
    "Global.IsRail:UNKNOWN": {
        "prefix": "IsRail",
        "body": "IsRail(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/worldgen_main 所在行数: 87"
    },
    "Global.IsLinux:UNKNOWN": {
        "prefix": "IsLinux",
        "body": "IsLinux(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/worldgen_main 所在行数: 83"
    },
    "Global.RunInEnvironment:UNKNOWN": {
        "prefix": "RunInEnvironment",
        "body": "RunInEnvironment(${1:fn},${2:fnenv})",
        "description": " ※Params: \n   (fn)<>[] \n   (fnenv)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 782"
    },
    "Global.GetSpecialFilters:UNKNOWN": {
        "prefix": "GetSpecialFilters",
        "body": "GetSpecialFilters(${1:recipe_data},${2:selected_items})",
        "description": " ※Params: \n   (recipe_data)<>[] \n   (selected_items)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinstradeutils 所在行数: 43"
    },
    "Global.AddLevelPreInit:UNKNOWN": {
        "prefix": "AddLevelPreInit",
        "body": "AddLevelPreInit(${1:levelid},${2:fn})",
        "description": " ※Params: \n   (levelid)<>[] \n   (fn)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 238"
    },
    "Global._IsPackInsideOther:UNKNOWN": {
        "prefix": "_IsPackInsideOther",
        "body": "_IsPackInsideOther(${1:pack_a},${2:pack_b})",
        "description": " ※Params: \n   (pack_a)<>[] \n   (pack_b)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 181"
    },
    "Global.RunInSandboxSafe:UNKNOWN": {
        "prefix": "RunInSandboxSafe",
        "body": "RunInSandboxSafe(${1:untrusted_code},${2:error_handler})",
        "description": " ※Params: \n   (untrusted_code)<>[] \n   (error_handler)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 804"
    },
    "Global.GetAngleFromBoat:UNKNOWN": {
        "prefix": "GetAngleFromBoat",
        "body": "GetAngleFromBoat(${1:boat},${2:x},${3:z})",
        "description": " ※Params: \n   (boat)<>[] \n   (x)<>[] \n   (z)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 1510"
    },
    "Global.Vec3Util_Add:UNKNOWN": {
        "prefix": "Vec3Util_Add",
        "body": "Vec3Util_Add(${1:p1_x},${2:p1_y},${3:p1_z},${4:p2_x},${5:p2_y},${6:p2_z})",
        "description": " ※Params: \n   (p1_x)<>[] \n   (p1_y)<>[] \n   (p1_z)<>[] \n   (p2_x)<>[] \n   (p2_y)<>[] \n   (p2_z)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/vec3util 所在行数: 3"
    },
    "Global.Vec3Util_Length:UNKNOWN": {
        "prefix": "Vec3Util_Length",
        "body": "Vec3Util_Length(${1:p1_x},${2:p1_y},${3:p1_z})",
        "description": " ※Params: \n   (p1_x)<>[] \n   (p1_y)<>[] \n   (p1_z)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/vec3util 所在行数: 19"
    },
    "Global.GetSkinsDataFromClientTableData:UNKNOWN": {
        "prefix": "GetSkinsDataFromClientTableData",
        "body": "GetSkinsDataFromClientTableData(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1494"
    },
    "Global.AddModShadersInit:UNKNOWN": {
        "prefix": "AddModShadersInit",
        "body": "AddModShadersInit(${1:fn})",
        "description": " ※Params: \n   (fn)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 545"
    },
    "Global.bushhat_init_fn:UNKNOWN": {
        "prefix": "bushhat_init_fn",
        "body": "bushhat_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 997"
    },
    "Global.Networking_JoinAnnouncement:UNKNOWN": {
        "prefix": "Networking_JoinAnnouncement",
        "body": "Networking_JoinAnnouncement(${1:name},${2:colour})",
        "description": " ※Params: \n   (name)<>[] \n   (colour)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 91"
    },
    "Global.decode_scanObject:UNKNOWN": {
        "prefix": "decode_scanObject",
        "body": "decode_scanObject(${1:s},${2:startPos})",
        "description": " ※Params: \n   (s)<>[] \n   (startPos)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/json 所在行数: 365"
    },
    "Global.UpdateSkinGrid:UNKNOWN": {
        "prefix": "UpdateSkinGrid",
        "body": "UpdateSkinGrid(${1:context},${2:list_widget},${3:data},${4:data_index})",
        "description": " ※Params: \n   (context)<>[] \n   (list_widget)<>[] \n   (data)<>[] \n   (data_index)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 940"
    },
    "Global.CalledFrom:UNKNOWN": {
        "prefix": "CalledFrom",
        "body": "CalledFrom(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/simutil 所在行数: 16"
    },
    "Global.d_recipecards:UNKNOWN": {
        "prefix": "d_recipecards",
        "body": "d_recipecards(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 1535"
    },
    "Global.Networking_BanMetricsEvent:UNKNOWN": {
        "prefix": "Networking_BanMetricsEvent",
        "body": "Networking_BanMetricsEvent(${1:caller},${2:target})",
        "description": " ※Params: \n   (caller)<>[] \n   (target)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 112"
    },
    "Global.JapaneseOnPS4:UNKNOWN": {
        "prefix": "JapaneseOnPS4",
        "body": "JapaneseOnPS4(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 1455"
    },
    "Global.AddLoadingTip:UNKNOWN": {
        "prefix": "AddLoadingTip",
        "body": "AddLoadingTip(${1:stringtable},${2:id},${3:tipstring},${4:controltipdata})",
        "description": " ※Params: \n   (stringtable)<>[] \n   (id)<>[] \n   (tipstring)<>[] \n   (controltipdata)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 975"
    },
    "Global.d_unlockfoodachievements:UNKNOWN": {
        "prefix": "d_unlockfoodachievements",
        "body": "d_unlockfoodachievements(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 817"
    },
    "Global.fence_gate_item_clear_fn:UNKNOWN": {
        "prefix": "fence_gate_item_clear_fn",
        "body": "fence_gate_item_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1898"
    },
    "Global.CalculateFiveRadius:UNKNOWN": {
        "prefix": "CalculateFiveRadius",
        "body": "CalculateFiveRadius(${1:density})",
        "description": " ※Params: \n   (density)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/regrowthutil 所在行数: 2"
    },
    "Global.d_lavaarena_skip:UNKNOWN": {
        "prefix": "d_lavaarena_skip",
        "body": "d_lavaarena_skip(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 769"
    },
    "Global.GetInventoryItemAtlas_Internal:UNKNOWN": {
        "prefix": "GetInventoryItemAtlas_Internal",
        "body": "GetInventoryItemAtlas_Internal(${1:imagename},${2:no_fallback})",
        "description": " ※Params: \n   (imagename)<>[] \n   (no_fallback)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/simutil 所在行数: 622"
    },
    "Global.SetFalloffProperty:UNKNOWN": {
        "prefix": "SetFalloffProperty",
        "body": "SetFalloffProperty(${1:falloff_id},${2:propertyname},${3:value})",
        "description": " ※Params: \n   (falloff_id)<>[] \n   (propertyname)<>[] \n   (value)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 420"
    },
    "Global.AddRoom:UNKNOWN": {
        "prefix": "AddRoom",
        "body": "AddRoom(${1:arg1},${2:...})",
        "description": " ※Params: \n   (arg1)<>[] \n   (...)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 302"
    },
    "Global.ShowDebug:UNKNOWN": {
        "prefix": "ShowDebug",
        "body": "ShowDebug(${1:savedata})",
        "description": " ※Params: \n   (savedata)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/worldgen_main 所在行数: 223"
    },
    "Global.UpdateGamePurchasedState:UNKNOWN": {
        "prefix": "UpdateGamePurchasedState",
        "body": "UpdateGamePurchasedState(${1:complete_callback})",
        "description": " ※Params: \n   (complete_callback)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/upsell 所在行数: 11"
    },
    "Global._BonusItemRewarded:UNKNOWN": {
        "prefix": "_BonusItemRewarded",
        "body": "_BonusItemRewarded(${1:bonus_item},${2:item_counts})",
        "description": " ※Params: \n   (bonus_item)<>[] \n   (item_counts)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1163"
    },
    "Global.GetProfilerServerStats:UNKNOWN": {
        "prefix": "GetProfilerServerStats",
        "body": "GetProfilerServerStats(${1:results})",
        "description": " ※Params: \n   (results)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/perfutil 所在行数: 78"
    },
    "Global.GetClientModRPCHandler:UNKNOWN": {
        "prefix": "GetClientModRPCHandler",
        "body": "GetClientModRPCHandler(${1:namespace},${2:name})",
        "description": " ※Params: \n   (namespace)<>[] \n   (name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 877"
    },
    "Global.FindSwimmableOffset:UNKNOWN": {
        "prefix": "FindSwimmableOffset",
        "body": "FindSwimmableOffset(${1:position},${2:start_angle},${3:radius},${4:attempts},${5:check_los},${6:ignore_walls},${7:customcheckfn},${8:allow_boats})",
        "description": " ※Params: \n   (position)<>[] \n   (start_angle)<>[] \n   (radius)<>[] \n   (attempts)<>[] \n   (check_los)<>[] \n   (ignore_walls)<>[] \n   (customcheckfn)<>[] \n   (allow_boats)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/simutil 所在行数: 308"
    },
    "Global.GetProfilerModInfo:UNKNOWN": {
        "prefix": "GetProfilerModInfo",
        "body": "GetProfilerModInfo(${1:results})",
        "description": " ※Params: \n   (results)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/perfutil 所在行数: 90"
    },
    "Global.d_test_thank_you:UNKNOWN": {
        "prefix": "d_test_thank_you",
        "body": "d_test_thank_you(${1:param})",
        "description": " ※Params: \n   (param)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 557"
    },
    "Global.d_oversized:UNKNOWN": {
        "prefix": "d_oversized",
        "body": "d_oversized(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 1412"
    },
    "Global.ProbeReload:UNKNOWN": {
        "prefix": "ProbeReload",
        "body": "ProbeReload(${1:ispressed})",
        "description": " ※Params: \n   (ispressed)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/reload 所在行数: 200"
    },
    "Global.GetNumberSelectedItems:UNKNOWN": {
        "prefix": "GetNumberSelectedItems",
        "body": "GetNumberSelectedItems(${1:selections})",
        "description": " ※Params: \n   (selections)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinstradeutils 所在行数: 4"
    },
    "Global.VecUtil_Lerp:UNKNOWN": {
        "prefix": "VecUtil_Lerp",
        "body": "VecUtil_Lerp(${1:p1_x},${2:p1_z},${3:p2_x},${4:p2_z},${5:percent})",
        "description": " ※Params: \n   (p1_x)<>[] \n   (p1_z)<>[] \n   (p2_x)<>[] \n   (p2_z)<>[] \n   (percent)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/vecutil 所在行数: 35"
    },
    "Global.AddIngredientValues:UNKNOWN": {
        "prefix": "AddIngredientValues",
        "body": "AddIngredientValues(${1:names},${2:tags},${3:cancook},${4:candry})",
        "description": " ※Params: \n   (names)<>[] \n   (tags)<>[] \n   (cancook)<>[] \n   (candry)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 636"
    },
    "Global.FirstToUpper:UNKNOWN": {
        "prefix": "FirstToUpper",
        "body": "FirstToUpper(${1:str})",
        "description": " ※Params: \n   (str)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/stringutil 所在行数: 458"
    },
    "Global.VecUtil_Scale:UNKNOWN": {
        "prefix": "VecUtil_Scale",
        "body": "VecUtil_Scale(${1:p1_x},${2:p1_z},${3:scale})",
        "description": " ※Params: \n   (p1_x)<>[] \n   (p1_z)<>[] \n   (scale)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/vecutil 所在行数: 11"
    },
    "Global.d_stopmoonstorm:UNKNOWN": {
        "prefix": "d_stopmoonstorm",
        "body": "d_stopmoonstorm(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 1427"
    },
    "Global.trophyscale_oversizedveggies_clear_fn:UNKNOWN": {
        "prefix": "trophyscale_oversizedveggies_clear_fn",
        "body": "trophyscale_oversizedveggies_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 2816"
    },
    "Global.SpringCombatMod:UNKNOWN": {
        "prefix": "SpringCombatMod",
        "body": "SpringCombatMod(${1:amount},${2:forced})",
        "description": " ※Params: \n   (amount)<>[] \n   (forced)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/simutil 所在行数: 506"
    },
    "Global.softresolvefilepath:UNKNOWN": {
        "prefix": "softresolvefilepath",
        "body": "softresolvefilepath(${1:filepath},${2:force_path_search},${3:search_first_path})",
        "description": " ※Params: \n   (filepath)<>[] \n   (force_path_search)<>[] \n   (search_first_path)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 628"
    },
    "Global.AddAction:添加动作API": {
        "prefix": "AddAction",
        "body": "AddAction(\"${1:id}\", \"${2:动作译名}\", function(act)\n\tlocal doer = act.doer\n\tlocal tar = act.target\n\tlocal invobj = act.invobject\n\tlocal pos = act.pos\n\t$3\n\treturn true\nend)",
        "description": " ※Params: \n   (id)<string>[动作id] \n   (str)<string>[动作译名] \n   (fn)<function>[]\n      {Params:\n         (act)<table>[] \n      Returns:} \n ※Description: 添加动作API\n ※Contributor: @lan\n ※Path: scripts_en/modutil 所在行数: 442"
    },
    "Global.PROFILE_world_gen:UNKNOWN": {
        "prefix": "PROFILE_world_gen",
        "body": "PROFILE_world_gen(${1:debug})",
        "description": " ※Params: \n   (debug)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/worldgen_main 所在行数: 203"
    },
    "Global.metarawset:UNKNOWN": {
        "prefix": "metarawset",
        "body": "metarawset(${1:t},${2:k},${3:v})",
        "description": " ※Params: \n   (t)<>[] \n   (k)<>[] \n   (v)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 1680"
    },
    "Global.IsItemId:UNKNOWN": {
        "prefix": "IsItemId",
        "body": "IsItemId(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 575"
    },
    "Global.GetFlattenedSparse:UNKNOWN": {
        "prefix": "GetFlattenedSparse",
        "body": "GetFlattenedSparse(${1:tab})",
        "description": " ※Params: \n   (tab)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 217"
    },
    "Global.GetTickTime:UNKNOWN": {
        "prefix": "GetTickTime",
        "body": "GetTickTime(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 534"
    },
    "Global.GetPopupFromPopupCode:UNKNOWN": {
        "prefix": "GetPopupFromPopupCode",
        "body": "GetPopupFromPopupCode(${1:popupcode},${2:mod_name})",
        "description": " ※Params: \n   (popupcode)<>[] \n   (mod_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/popupmanager 所在行数: 47"
    },
    "Global.d_getwidget:UNKNOWN": {
        "prefix": "d_getwidget",
        "body": "d_getwidget(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 653"
    },
    "Global.DoStackTrace:UNKNOWN": {
        "prefix": "DoStackTrace",
        "body": "DoStackTrace(${1:err})",
        "description": " ※Params: \n   (err)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/stacktrace 所在行数: 109"
    },
    "Global.AddMinimapAtlas:添加小地图图标": {
        "prefix": "AddMinimapAtlas",
        "body": "AddMinimapAtlas(\"map_icons/${1:prefab}.xml\")",
        "description": " ※Params: \n   (atlaspath)<string>[路径] \n ※Description: 添加小地图图标\n ※Contributor: @lan\n ※Path: scripts_en/modutil 所在行数: 512"
    },
    "Global.SecondsToTimeString:UNKNOWN": {
        "prefix": "SecondsToTimeString",
        "body": "SecondsToTimeString(${1:total_seconds})",
        "description": " ※Params: \n   (total_seconds)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 54"
    },
    "Global.GetLine:UNKNOWN": {
        "prefix": "GetLine",
        "body": "GetLine(${1:inst},${2:line},${3:modifier},${4:nil_missing})",
        "description": " ※Params: \n   (inst)<>[] \n   (line)<>[] \n   (modifier)<>[] \n   (nil_missing)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/stringutil 所在行数: 300"
    },
    "Global.d_allfish:UNKNOWN": {
        "prefix": "d_allfish",
        "body": "d_allfish(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 1081"
    },
    "Global.isArray:UNKNOWN": {
        "prefix": "isArray",
        "body": "isArray(${1:t})",
        "description": " ※Params: \n   (t)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/json 所在行数: 492"
    },
    "Global.StartDedicatedServer:UNKNOWN": {
        "prefix": "StartDedicatedServer",
        "body": "StartDedicatedServer(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 846"
    },
    "Global.StartThread:UNKNOWN": {
        "prefix": "StartThread",
        "body": "StartThread(${1:fn},${2:id},${3:param})",
        "description": " ※Params: \n   (fn)<>[] \n   (id)<>[] \n   (param)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/scheduler 所在行数: 387"
    },
    "Global.IsPackBelongingsOnly:UNKNOWN": {
        "prefix": "IsPackBelongingsOnly",
        "body": "IsPackBelongingsOnly(${1:item_key})",
        "description": " ※Params: \n   (item_key)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 435"
    },
    "Global.GetTotalMysteryBoxCount:UNKNOWN": {
        "prefix": "GetTotalMysteryBoxCount",
        "body": "GetTotalMysteryBoxCount(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1291"
    },
    "Global.encode:UNKNOWN": {
        "prefix": "encode",
        "body": "encode(${1:v})",
        "description": " ※Params: \n   (v)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/json 所在行数: 97"
    },
    "Global.resurrectionstatue_clear_fn:UNKNOWN": {
        "prefix": "resurrectionstatue_clear_fn",
        "body": "resurrectionstatue_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 2823"
    },
    "Global.IsItemIsReward:UNKNOWN": {
        "prefix": "IsItemIsReward",
        "body": "IsItemIsReward(${1:item_type})",
        "description": " ※Params: \n   (item_type)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1154"
    },
    "Global.GetFirstOwnedItemId:UNKNOWN": {
        "prefix": "GetFirstOwnedItemId",
        "body": "GetFirstOwnedItemId(${1:item_key})",
        "description": " ※Params: \n   (item_key)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1103"
    },
    "Global.d_portalfx:UNKNOWN": {
        "prefix": "d_portalfx",
        "body": "d_portalfx(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 885"
    },
    "Global.GetLockedSkinFilter:UNKNOWN": {
        "prefix": "GetLockedSkinFilter",
        "body": "GetLockedSkinFilter(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1258"
    },
    "Global.DoWorldOverseerShutdown:UNKNOWN": {
        "prefix": "DoWorldOverseerShutdown",
        "body": "DoWorldOverseerShutdown(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 1532"
    },
    "Global.MakeSmallPropagator:UNKNOWN": {
        "prefix": "MakeSmallPropagator",
        "body": "MakeSmallPropagator(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 195"
    },
    "Global.GetShardModRPCHandler:UNKNOWN": {
        "prefix": "GetShardModRPCHandler",
        "body": "GetShardModRPCHandler(${1:namespace},${2:name})",
        "description": " ※Params: \n   (namespace)<>[] \n   (name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 882"
    },
    "Global.RunInSandbox:UNKNOWN": {
        "prefix": "RunInSandbox",
        "body": "RunInSandbox(${1:untrusted_code})",
        "description": " ※Params: \n   (untrusted_code)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 793"
    },
    "Global.RailUserCommandInject:UNKNOWN": {
        "prefix": "RailUserCommandInject",
        "body": "RailUserCommandInject(${1:name},${2:displayname},${3:displayparams},${4:extra_alias})",
        "description": " ※Params: \n   (name)<>[] \n   (displayname)<>[] \n   (displayparams)<>[] \n   (extra_alias)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/usercommands 所在行数: 530"
    },
    "Global.SetPauseFromCode:UNKNOWN": {
        "prefix": "SetPauseFromCode",
        "body": "SetPauseFromCode(${1:pause})",
        "description": " ※Params: \n   (pause)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 1651"
    },
    "Global.FindWalkableOffset:UNKNOWN": {
        "prefix": "FindWalkableOffset",
        "body": "FindWalkableOffset(${1:position},${2:start_angle},${3:radius},${4:attempts},${5:check_los},${6:ignore_walls},${7:customcheckfn},${8:allow_water},${9:allow_boats})",
        "description": " ※Params: \n   (position)<>[] \n   (start_angle)<>[] \n   (radius)<>[] \n   (attempts)<>[] \n   (check_los)<>[] \n   (ignore_walls)<>[] \n   (customcheckfn)<>[] \n   (allow_water)<>[] \n   (allow_boats)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/simutil 所在行数: 291"
    },
    "Global.ProcessJsonMessage:UNKNOWN": {
        "prefix": "ProcessJsonMessage",
        "body": "ProcessJsonMessage(${1:message})",
        "description": " ※Params: \n   (message)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 1246"
    },
    "Global.wall_ruins_clear_fn:UNKNOWN": {
        "prefix": "wall_ruins_clear_fn",
        "body": "wall_ruins_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1817"
    },
    "Global.DumpTableXML:UNKNOWN": {
        "prefix": "DumpTableXML",
        "body": "DumpTableXML(${1:t},${2:name})",
        "description": " ※Params: \n   (t)<>[] \n   (name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 1"
    },
    "Global.DestroyEntity:UNKNOWN": {
        "prefix": "DestroyEntity",
        "body": "DestroyEntity(${1:ent},${2:destroyer},${3:kill_all_creatures},${4:remove_entity_as_fallback})",
        "description": " ※Params: \n   (ent)<>[] \n   (destroyer)<>[] \n   (kill_all_creatures)<>[] \n   (remove_entity_as_fallback)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/physics 所在行数: 94"
    },
    "Global.d_teststate:UNKNOWN": {
        "prefix": "d_teststate",
        "body": "d_teststate(${1:state})",
        "description": " ※Params: \n   (state)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 480"
    },
    "Global.d_allheavy:UNKNOWN": {
        "prefix": "d_allheavy",
        "body": "d_allheavy(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 97"
    },
    "Global.isbadnumber:UNKNOWN": {
        "prefix": "isbadnumber",
        "body": "isbadnumber(${1:x})",
        "description": " ※Params: \n   (x)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 677"
    },
    "Global.GetOwnedItemCounts:UNKNOWN": {
        "prefix": "GetOwnedItemCounts",
        "body": "GetOwnedItemCounts(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1086"
    },
    "Global.c_forcecrash:UNKNOWN": {
        "prefix": "c_forcecrash",
        "body": "c_forcecrash(${1:unique})",
        "description": " ※Params: \n   (unique)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 1263"
    },
    "Global.MakeHugeFreezableCharacter:UNKNOWN": {
        "prefix": "MakeHugeFreezableCharacter",
        "body": "MakeHugeFreezableCharacter(${1:inst},${2:sym},${3:offset})",
        "description": " ※Params: \n   (inst)<>[] \n   (sym)<>[] \n   (offset)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 357"
    },
    "Global.ValidateItemsLocal:UNKNOWN": {
        "prefix": "ValidateItemsLocal",
        "body": "ValidateItemsLocal(${1:currentcharacter},${2:selected_skins})",
        "description": " ※Params: \n   (currentcharacter)<>[] \n   (selected_skins)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1440"
    },
    "Global.SimBreakPoint:UNKNOWN": {
        "prefix": "SimBreakPoint",
        "body": "SimBreakPoint(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugkeys 所在行数: 95"
    },
    "Global.GetFirstActiveSpecialEvent:UNKNOWN": {
        "prefix": "GetFirstActiveSpecialEvent",
        "body": "GetFirstActiveSpecialEvent(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/constants 所在行数: 968"
    },
    "Global.IsAnyPlayerInRange:UNKNOWN": {
        "prefix": "IsAnyPlayerInRange",
        "body": "IsAnyPlayerInRange(${1:x},${2:y},${3:z},${4:range},${5:isalive})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n   (range)<>[] \n   (isalive)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/simutil 所在行数: 139"
    },
    "Global.AreAnyModsEnabled:UNKNOWN": {
        "prefix": "AreAnyModsEnabled",
        "body": "AreAnyModsEnabled(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mods 所在行数: 68"
    },
    "Global.distsq:UNKNOWN": {
        "prefix": "distsq",
        "body": "distsq(${1:v1},${2:v2},${3:v3},${4:v4})",
        "description": " ※Params: \n   (v1)<>[] \n   (v2)<>[] \n   (v3)<>[] \n   (v4)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 536"
    },
    "Global.resolvefilepath:UNKNOWN": {
        "prefix": "resolvefilepath",
        "body": "resolvefilepath(${1:filepath},${2:force_path_search},${3:search_first_path})",
        "description": " ※Params: \n   (filepath)<>[] \n   (force_path_search)<>[] \n   (search_first_path)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 619"
    },
    "Global.CheckDemoTimeout:UNKNOWN": {
        "prefix": "CheckDemoTimeout",
        "body": "CheckDemoTimeout(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/upsell 所在行数: 57"
    },
    "Global.d_testhashes_prefabs:UNKNOWN": {
        "prefix": "d_testhashes_prefabs",
        "body": "d_testhashes_prefabs(${1:bitswanted})",
        "description": " ※Params: \n   (bitswanted)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 3468"
    },
    "Global.c_listallplayers:UNKNOWN": {
        "prefix": "c_listallplayers",
        "body": "c_listallplayers(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 291"
    },
    "Global.IsEntityDeadOrGhost:UNKNOWN": {
        "prefix": "IsEntityDeadOrGhost",
        "body": "IsEntityDeadOrGhost(${1:inst},${2:require_health})",
        "description": " ※Params: \n   (inst)<>[] \n   (require_health)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/componentutil 所在行数: 15"
    },
    "Global.portablecookpot_item_clear_fn:UNKNOWN": {
        "prefix": "portablecookpot_item_clear_fn",
        "body": "portablecookpot_item_clear_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1354"
    },
    "Global.DecodeAndUnzipSaveData:UNKNOWN": {
        "prefix": "DecodeAndUnzipSaveData",
        "body": "DecodeAndUnzipSaveData(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 1709"
    },
    "Global.SendRPCToShard:UNKNOWN": {
        "prefix": "SendRPCToShard",
        "body": "SendRPCToShard(${1:code},${2:...})",
        "description": " ※Params: \n   (code)<>[] \n   (...)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networkclientrpc 所在行数: 1284"
    },
    "Global.SpawnAt:UNKNOWN": {
        "prefix": "SpawnAt",
        "body": "SpawnAt(${1:prefab},${2:loc},${3:scale},${4:offset})",
        "description": " ※Params: \n   (prefab)<>[] \n   (loc)<>[] \n   (scale)<>[] \n   (offset)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 51"
    },
    "Global.c_remote:UNKNOWN": {
        "prefix": "c_remote",
        "body": "c_remote(${1:fnstr})",
        "description": " ※Params: \n   (fnstr)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 201"
    },
    "Global.GetColorForItem:UNKNOWN": {
        "prefix": "GetColorForItem",
        "body": "GetColorForItem(${1:item})",
        "description": " ※Params: \n   (item)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 600"
    },
    "Global.orderedNext:UNKNOWN": {
        "prefix": "orderedNext",
        "body": "orderedNext(${1:t},${2:state})",
        "description": " ※Params: \n   (t)<>[] \n   (state)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 1625"
    },
    "Global.AddModReleaseID:UNKNOWN": {
        "prefix": "AddModReleaseID",
        "body": "AddModReleaseID(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 18"
    },
    "Global.CompareItemDataForSortByRarity:UNKNOWN": {
        "prefix": "CompareItemDataForSortByRarity",
        "body": "CompareItemDataForSortByRarity(${1:item_key_a},${2:item_key_b})",
        "description": " ※Params: \n   (item_key_a)<>[] \n   (item_key_b)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1009"
    },
    "Global.ExcludeClothingSymbolForModCharacter:UNKNOWN": {
        "prefix": "ExcludeClothingSymbolForModCharacter",
        "body": "ExcludeClothingSymbolForModCharacter(${1:name},${2:symbol})",
        "description": " ※Params: \n   (name)<>[] \n   (symbol)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 942"
    },
    "Global.ArrayIntersection:UNKNOWN": {
        "prefix": "ArrayIntersection",
        "body": "ArrayIntersection(${1:...})",
        "description": " ※Params: \n   (...)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 364"
    },
    "Global.IsPS4:UNKNOWN": {
        "prefix": "IsPS4",
        "body": "IsPS4(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/worldgen_main 所在行数: 71"
    },
    "Global.mushroom_farm_clear_fn:UNKNOWN": {
        "prefix": "mushroom_farm_clear_fn",
        "body": "mushroom_farm_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 2777"
    },
    "Global.bushhat_clear_fn:UNKNOWN": {
        "prefix": "bushhat_clear_fn",
        "body": "bushhat_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1014"
    },
    "Global.IsSaleActive:UNKNOWN": {
        "prefix": "IsSaleActive",
        "body": "IsSaleActive(${1:iap_def})",
        "description": " ※Params: \n   (iap_def)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 396"
    },
    "Global.anchor_item_clear_fn:UNKNOWN": {
        "prefix": "anchor_item_clear_fn",
        "body": "anchor_item_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1703"
    },
    "Global.ModUnloadFrontEndAssets:UNKNOWN": {
        "prefix": "ModUnloadFrontEndAssets",
        "body": "ModUnloadFrontEndAssets(${1:modname})",
        "description": " ※Params: \n   (modname)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 184"
    },
    "Global.DisableLoadingProtection:UNKNOWN": {
        "prefix": "DisableLoadingProtection",
        "body": "DisableLoadingProtection(${1:guid})",
        "description": " ※Params: \n   (guid)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 800"
    },
    "Global.DiffAngleRad:UNKNOWN": {
        "prefix": "DiffAngleRad",
        "body": "DiffAngleRad(${1:rot1},${2:rot2})",
        "description": " ※Params: \n   (rot1)<>[] \n   (rot2)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mathutil 所在行数: 100"
    },
    "Global.d_playeritems:UNKNOWN": {
        "prefix": "d_playeritems",
        "body": "d_playeritems(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 45"
    },
    "Global.AddModCharacter:添加Mod角色API": {
        "prefix": "AddModCharacter",
        "body": "AddModCharacter(${1:name},${2:gender},${3:modes})",
        "description": " ※Params: \n   (name)<>[] \n   (gender)<>[] \n   (modes)<>[] \n ※Description: 添加Mod角色API\n ※Contributor: @lan 所有MOD角色都要注册\n ※Path: scripts_en/modutil 所在行数: 655"
    },
    "Global.RemoveFromRegrowthManager:UNKNOWN": {
        "prefix": "RemoveFromRegrowthManager",
        "body": "RemoveFromRegrowthManager(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 1606"
    },
    "Global.c_sel_health:UNKNOWN": {
        "prefix": "c_sel_health",
        "body": "c_sel_health(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 366"
    },
    "Global.DoReload:UNKNOWN": {
        "prefix": "DoReload",
        "body": "DoReload(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugkeys 所在行数: 105"
    },
    "Global.IsTableEmpty:UNKNOWN": {
        "prefix": "IsTableEmpty",
        "body": "IsTableEmpty(${1:t})",
        "description": " ※Params: \n   (t)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 962"
    },
    "Global.RoundBiasedDown:UNKNOWN": {
        "prefix": "RoundBiasedDown",
        "body": "RoundBiasedDown(${1:num},${2:idp})",
        "description": " ※Params: \n   (num)<>[] \n   (idp)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mathutil 所在行数: 30"
    },
    "Global.Networking_PartyServer:UNKNOWN": {
        "prefix": "Networking_PartyServer",
        "body": "Networking_PartyServer(${1:ip},${2:port})",
        "description": " ※Params: \n   (ip)<>[] \n   (port)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 992"
    },
    "Global.DoesPackHaveItem:UNKNOWN": {
        "prefix": "DoesPackHaveItem",
        "body": "DoesPackHaveItem(${1:pack_key},${2:item_key})",
        "description": " ※Params: \n   (pack_key)<>[] \n   (item_key)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 530"
    },
    "Global.JoinServer:UNKNOWN": {
        "prefix": "JoinServer",
        "body": "JoinServer(${1:server_listing},${2:optional_password_override})",
        "description": " ※Params: \n   (server_listing)<>[] \n   (optional_password_override)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 495"
    },
    "Global.GetPortraitNameForItem:UNKNOWN": {
        "prefix": "GetPortraitNameForItem",
        "body": "GetPortraitNameForItem(${1:item_key})",
        "description": " ※Params: \n   (item_key)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 147"
    },
    "Global.optnumber:UNKNOWN": {
        "prefix": "optnumber",
        "body": "optnumber(${1:val})",
        "description": " ※Params: \n   (val)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networkclientrpc 所在行数: 10"
    },
    "Global.MakeHauntableGoToState:UNKNOWN": {
        "prefix": "MakeHauntableGoToState",
        "body": "MakeHauntableGoToState(${1:inst},${2:state},${3:chance},${4:cooldown},${5:haunt_value})",
        "description": " ※Params: \n   (inst)<>[] \n   (state)<>[] \n   (chance)<>[] \n   (cooldown)<>[] \n   (haunt_value)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 1204"
    },
    "Global.SetLoadingTipCategoryIcon:UNKNOWN": {
        "prefix": "SetLoadingTipCategoryIcon",
        "body": "SetLoadingTipCategoryIcon(${1:category},${2:categoryatlas},${3:categoryicon})",
        "description": " ※Params: \n   (category)<>[] \n   (categoryatlas)<>[] \n   (categoryicon)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 1008"
    },
    "Global.RoundToNearest:UNKNOWN": {
        "prefix": "RoundToNearest",
        "body": "RoundToNearest(${1:numToRound},${2:multiple})",
        "description": " ※Params: \n   (numToRound)<>[] \n   (multiple)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mathutil 所在行数: 36"
    },
    "Global.FindClosestPlayerInRange:UNKNOWN": {
        "prefix": "FindClosestPlayerInRange",
        "body": "FindClosestPlayerInRange(${1:x},${2:y},${3:z},${4:range},${5:isalive})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n   (range)<>[] \n   (isalive)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/simutil 所在行数: 78"
    },
    "Global.d_punchingbags:UNKNOWN": {
        "prefix": "d_punchingbags",
        "body": "d_punchingbags(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 1791"
    },
    "Global.boat_item_clear_fn:UNKNOWN": {
        "prefix": "boat_item_clear_fn",
        "body": "boat_item_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1641"
    },
    "Global.d_spawnlayout:UNKNOWN": {
        "prefix": "d_spawnlayout",
        "body": "d_spawnlayout(${1:name},${2:offset})",
        "description": " ※Params: \n   (name)<>[] \n   (offset)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 1065"
    },
    "Global.IsDefaultSkin:UNKNOWN": {
        "prefix": "IsDefaultSkin",
        "body": "IsDefaultSkin(${1:item_key})",
        "description": " ※Params: \n   (item_key)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1371"
    },
    "Global.do_search_subwords:UNKNOWN": {
        "prefix": "do_search_subwords",
        "body": "do_search_subwords(${1:...})",
        "description": " ※Params: \n   (...)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/stringutil 所在行数: 611"
    },
    "Global.critter_kitten_builder_clear_fn:UNKNOWN": {
        "prefix": "critter_kitten_builder_clear_fn",
        "body": "critter_kitten_builder_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1557"
    },
    "Global.dtable:UNKNOWN": {
        "prefix": "dtable",
        "body": "dtable(${1:tab},${2:depth})",
        "description": " ※Params: \n   (tab)<>[] \n   (depth)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugtools 所在行数: 384"
    },
    "Global.ProfileStatsSetField:UNKNOWN": {
        "prefix": "ProfileStatsSetField",
        "body": "ProfileStatsSetField(${1:field},${2:value})",
        "description": " ※Params: \n   (field)<>[] \n   (value)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/stats 所在行数: 375"
    },
    "Global.Networking_DeathAnnouncement:UNKNOWN": {
        "prefix": "Networking_DeathAnnouncement",
        "body": "Networking_DeathAnnouncement(${1:message},${2:colour})",
        "description": " ※Params: \n   (message)<>[] \n   (colour)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 78"
    },
    "Global.MakeFlyingGiantCharacterPhysics:UNKNOWN": {
        "prefix": "MakeFlyingGiantCharacterPhysics",
        "body": "MakeFlyingGiantCharacterPhysics(${1:inst},${2:mass},${3:rad})",
        "description": " ※Params: \n   (inst)<>[] \n   (mass)<>[] \n   (rad)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 454"
    },
    "Global.Networking_LeaveAnnouncement:UNKNOWN": {
        "prefix": "Networking_LeaveAnnouncement",
        "body": "Networking_LeaveAnnouncement(${1:name},${2:colour})",
        "description": " ※Params: \n   (name)<>[] \n   (colour)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 95"
    },
    "Global.d_timeddebugprefab:UNKNOWN": {
        "prefix": "d_timeddebugprefab",
        "body": "d_timeddebugprefab(${1:x},${2:y},${3:z},${4:lifetime},${5:prefab})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n   (lifetime)<>[] \n   (prefab)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 3604"
    },
    "Global.ddump:UNKNOWN": {
        "prefix": "ddump",
        "body": "ddump(${1:obj},${2:indent},${3:recurse_levels},${4:root})",
        "description": " ※Params: \n   (obj)<>[] \n   (indent)<>[] \n   (recurse_levels)<>[] \n   (root)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugtools 所在行数: 356"
    },
    "Global.CreateStringsPOTv1:UNKNOWN": {
        "prefix": "CreateStringsPOTv1",
        "body": "CreateStringsPOTv1(${1:filename},${2:root},${3:tbl_dta},${4:tbl_lkp})",
        "description": " ※Params: \n   (filename)<>[] \n   (root)<>[] \n   (tbl_dta)<>[] \n   (tbl_lkp)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/createstringspo_dlc 所在行数: 229"
    },
    "Global.ShowConnectingToGamePopup:UNKNOWN": {
        "prefix": "ShowConnectingToGamePopup",
        "body": "ShowConnectingToGamePopup(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 488"
    },
    "Global.ValidateRecipeSkinRequest:UNKNOWN": {
        "prefix": "ValidateRecipeSkinRequest",
        "body": "ValidateRecipeSkinRequest(${1:user_id},${2:prefab_name},${3:skin})",
        "description": " ※Params: \n   (user_id)<>[] \n   (prefab_name)<>[] \n   (skin)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 173"
    },
    "Global.Vec3Util_NormalAndLength:UNKNOWN": {
        "prefix": "Vec3Util_NormalAndLength",
        "body": "Vec3Util_NormalAndLength(${1:p1_x},${2:p1_y},${3:p1_z})",
        "description": " ※Params: \n   (p1_x)<>[] \n   (p1_y)<>[] \n   (p1_z)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/vec3util 所在行数: 44"
    },
    "Global.d_lunarrift:UNKNOWN": {
        "prefix": "d_lunarrift",
        "body": "d_lunarrift(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 236"
    },
    "Global.CanEntitySeeTarget:UNKNOWN": {
        "prefix": "CanEntitySeeTarget",
        "body": "CanEntitySeeTarget(${1:inst},${2:target})",
        "description": " ※Params: \n   (inst)<>[] \n   (target)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/simutil 所在行数: 498"
    },
    "Global.d_spawnlist:UNKNOWN": {
        "prefix": "d_spawnlist",
        "body": "d_spawnlist(${1:list},${2:spacing},${3:fn})",
        "description": " ※Params: \n   (list)<>[] \n   (spacing)<>[] \n   (fn)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 3"
    },
    "Global.cane_init_fn:UNKNOWN": {
        "prefix": "cane_init_fn",
        "body": "cane_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 2163"
    },
    "Global.Clamp:UNKNOWN": {
        "prefix": "Clamp",
        "body": "Clamp(${1:num},${2:min},${3:max})",
        "description": " ※Params: \n   (num)<>[] \n   (min)<>[] \n   (max)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mathutil 所在行数: 46"
    },
    "Global.GetProfileFlairAtlasAndTex:UNKNOWN": {
        "prefix": "GetProfileFlairAtlasAndTex",
        "body": "GetProfileFlairAtlasAndTex(${1:item_key})",
        "description": " ※Params: \n   (item_key)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1588"
    },
    "Global.Shard_OnDiceRollRequest:UNKNOWN": {
        "prefix": "Shard_OnDiceRollRequest",
        "body": "Shard_OnDiceRollRequest(${1:user_id})",
        "description": " ※Params: \n   (user_id)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/shardnetworking 所在行数: 174"
    },
    "Global.RegisterStaticComponentUpdate:UNKNOWN": {
        "prefix": "RegisterStaticComponentUpdate",
        "body": "RegisterStaticComponentUpdate(${1:classname},${2:fn})",
        "description": " ※Params: \n   (classname)<>[] \n   (fn)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/update 所在行数: 164"
    },
    "Global.OnFocusGained:UNKNOWN": {
        "prefix": "OnFocusGained",
        "body": "OnFocusGained(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 1955"
    },
    "Global.SpawnPrefab:生成预制物": {
        "prefix": "SpawnPrefab",
        "body": "SpawnPrefab(${1:prefab_id})",
        "description": " ※Params: \n   (name)<>[] \n   (skin)<>[] \n   (skin_id)<>[] \n   (creator)<>[] \n ※Description: 生成预制物\n ※Contributor: @lan\n ※Path: scripts_en/mainfunctions 所在行数: 377"
    },
    "Global.RemoveRemapSoundEvent:UNKNOWN": {
        "prefix": "RemoveRemapSoundEvent",
        "body": "RemoveRemapSoundEvent(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 847"
    },
    "Global.NotifyLoadingState:UNKNOWN": {
        "prefix": "NotifyLoadingState",
        "body": "NotifyLoadingState(${1:loading_state},${2:match_results})",
        "description": " ※Params: \n   (loading_state)<>[] \n   (match_results)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 2121"
    },
    "Global.checkuint:UNKNOWN": {
        "prefix": "checkuint",
        "body": "checkuint(${1:val})",
        "description": " ※Params: \n   (val)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networkclientrpc 所在行数: 6"
    },
    "Global.OnSimPaused:UNKNOWN": {
        "prefix": "OnSimPaused",
        "body": "OnSimPaused(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 895"
    },
    "Global.boat_clear_fn:UNKNOWN": {
        "prefix": "boat_clear_fn",
        "body": "boat_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1652"
    },
    "Global.Networking_Say:UNKNOWN": {
        "prefix": "Networking_Say",
        "body": "Networking_Say(${1:guid},${2:userid},${3:name},${4:prefab},${5:message},${6:colour},${7:whisper},${8:isemote},${9:user_vanity})",
        "description": " ※Params: \n   (guid)<>[] \n   (userid)<>[] \n   (name)<>[] \n   (prefab)<>[] \n   (message)<>[] \n   (colour)<>[] \n   (whisper)<>[] \n   (isemote)<>[] \n   (user_vanity)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 53"
    },
    "Global.SpawnSecondInstance:UNKNOWN": {
        "prefix": "SpawnSecondInstance",
        "body": "SpawnSecondInstance(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 12"
    },
    "Global.Networking_SkinAnnouncement:UNKNOWN": {
        "prefix": "Networking_SkinAnnouncement",
        "body": "Networking_SkinAnnouncement(${1:user_name},${2:user_colour},${3:skin_name})",
        "description": " ※Params: \n   (user_name)<>[] \n   (user_colour)<>[] \n   (skin_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 41"
    },
    "Global.VecUtil_Dist:UNKNOWN": {
        "prefix": "VecUtil_Dist",
        "body": "VecUtil_Dist(${1:p1_x},${2:p1_z},${3:p2_x},${4:p2_z})",
        "description": " ※Params: \n   (p1_x)<>[] \n   (p1_z)<>[] \n   (p2_x)<>[] \n   (p2_z)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/vecutil 所在行数: 27"
    },
    "Global.ClientDisconnected:UNKNOWN": {
        "prefix": "ClientDisconnected",
        "body": "ClientDisconnected(${1:userid})",
        "description": " ※Params: \n   (userid)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 948"
    },
    "Global.GetString:UNKNOWN": {
        "prefix": "GetString",
        "body": "GetString(${1:inst},${2:stringtype},${3:modifier},${4:nil_missing})",
        "description": " ※Params: \n   (inst)<>[] \n   (stringtype)<>[] \n   (modifier)<>[] \n   (nil_missing)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/stringutil 所在行数: 265"
    },
    "Global.GetExtendedDebugString:UNKNOWN": {
        "prefix": "GetExtendedDebugString",
        "body": "GetExtendedDebugString(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 592"
    },
    "Global.d_lavaarena_speech:UNKNOWN": {
        "prefix": "d_lavaarena_speech",
        "body": "d_lavaarena_speech(${1:dialog},${2:banter_line})",
        "description": " ※Params: \n   (dialog)<>[] \n   (banter_line)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 773"
    },
    "Global.HexToPercentColor:UNKNOWN": {
        "prefix": "HexToPercentColor",
        "body": "HexToPercentColor(${1:hex})",
        "description": " ※Params: \n   (hex)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 1583"
    },
    "Global.hutch_clear_fn:UNKNOWN": {
        "prefix": "hutch_clear_fn",
        "body": "hutch_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1228"
    },
    "Global.molehat_clear_fn:UNKNOWN": {
        "prefix": "molehat_clear_fn",
        "body": "molehat_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 2761"
    },
    "Global.RegisterFriendsManager:UNKNOWN": {
        "prefix": "RegisterFriendsManager",
        "body": "RegisterFriendsManager(${1:widg})",
        "description": " ※Params: \n   (widg)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 961"
    },
    "Global.MakeSkinDLCPopup:UNKNOWN": {
        "prefix": "MakeSkinDLCPopup",
        "body": "MakeSkinDLCPopup(${1:_cb})",
        "description": " ※Params: \n   (_cb)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1652"
    },
    "Global.RemoveByValue:UNKNOWN": {
        "prefix": "RemoveByValue",
        "body": "RemoveByValue(${1:t},${2:value})",
        "description": " ※Params: \n   (t)<>[] \n   (value)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 232"
    },
    "Global.d_boatracepointers:UNKNOWN": {
        "prefix": "d_boatracepointers",
        "body": "d_boatracepointers(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 3634"
    },
    "Global.str_play_time:UNKNOWN": {
        "prefix": "str_play_time",
        "body": "str_play_time(${1:time})",
        "description": " ※Params: \n   (time)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/stringutil 所在行数: 507"
    },
    "Global.d_giveturfs:UNKNOWN": {
        "prefix": "d_giveturfs",
        "body": "d_giveturfs(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 1009"
    },
    "Global.GetGenderStrings:UNKNOWN": {
        "prefix": "GetGenderStrings",
        "body": "GetGenderStrings(${1:charactername})",
        "description": " ※Params: \n   (charactername)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/stringutil 所在行数: 51"
    },
    "Global.MigrateToServer:UNKNOWN": {
        "prefix": "MigrateToServer",
        "body": "MigrateToServer(${1:serverIp},${2:serverPort},${3:serverPassword},${4:serverNetId})",
        "description": " ※Params: \n   (serverIp)<>[] \n   (serverPort)<>[] \n   (serverPassword)<>[] \n   (serverNetId)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 643"
    },
    "Global.d_testsound:UNKNOWN": {
        "prefix": "d_testsound",
        "body": "d_testsound(${1:soundpath},${2:loopname},${3:volume})",
        "description": " ※Params: \n   (soundpath)<>[] \n   (loopname)<>[] \n   (volume)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 3648"
    },
    "Global.GetSkilltreeBG:UNKNOWN": {
        "prefix": "GetSkilltreeBG",
        "body": "GetSkilltreeBG(${1:imagename})",
        "description": " ※Params: \n   (imagename)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/simutil 所在行数: 745"
    },
    "Global.DebugSpawn:UNKNOWN": {
        "prefix": "DebugSpawn",
        "body": "DebugSpawn(${1:prefab})",
        "description": " ※Params: \n   (prefab)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 20"
    },
    "Global.basic_init_fn:UNKNOWN": {
        "prefix": "basic_init_fn",
        "body": "basic_init_fn(${1:inst},${2:build_name},${3:def_build},${4:filter_fn})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n   (def_build)<>[] \n   (filter_fn)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 82"
    },
    "Global.SpawnSeamlessPlayerReplacementFromSim:UNKNOWN": {
        "prefix": "SpawnSeamlessPlayerReplacementFromSim",
        "body": "SpawnSeamlessPlayerReplacementFromSim(${1:player_guid},${2:old_player_guid},${3:skin_base},${4:clothing_body},${5:clothing_hand},${6:clothing_legs},${7:clothing_feet})",
        "description": " ※Params: \n   (player_guid)<>[] \n   (old_player_guid)<>[] \n   (skin_base)<>[] \n   (clothing_body)<>[] \n   (clothing_hand)<>[] \n   (clothing_legs)<>[] \n   (clothing_feet)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 272"
    },
    "Global.AddPopup:UNKNOWN": {
        "prefix": "AddPopup",
        "body": "AddPopup(${1:id})",
        "description": " ※Params: \n   (id)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 483"
    },
    "Global.ReduceAngle:UNKNOWN": {
        "prefix": "ReduceAngle",
        "body": "ReduceAngle(${1:rot})",
        "description": " ※Params: \n   (rot)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mathutil 所在行数: 76"
    },
    "Global.dumpinternal:UNKNOWN": {
        "prefix": "dumpinternal",
        "body": "dumpinternal(${1:t},${2:outstr},${3:indent})",
        "description": " ※Params: \n   (t)<>[] \n   (outstr)<>[] \n   (indent)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 3"
    },
    "Global.shuffledKeys:UNKNOWN": {
        "prefix": "shuffledKeys",
        "body": "shuffledKeys(${1:dict})",
        "description": " ※Params: \n   (dict)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 869"
    },
    "Global.circular_index_number:UNKNOWN": {
        "prefix": "circular_index_number",
        "body": "circular_index_number(${1:count},${2:index})",
        "description": " ※Params: \n   (count)<>[] \n   (index)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 1025"
    },
    "Global.GetRandomMinMax:UNKNOWN": {
        "prefix": "GetRandomMinMax",
        "body": "GetRandomMinMax(${1:min},${2:max})",
        "description": " ※Params: \n   (min)<>[] \n   (max)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 532"
    },
    "Global.DumpUpvalues:UNKNOWN": {
        "prefix": "DumpUpvalues",
        "body": "DumpUpvalues(${1:func})",
        "description": " ※Params: \n   (func)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debughelpers 所在行数: 44"
    },
    "Global.Launch:UNKNOWN": {
        "prefix": "Launch",
        "body": "Launch(${1:inst},${2:launcher},${3:basespeed})",
        "description": " ※Params: \n   (inst)<>[] \n   (launcher)<>[] \n   (basespeed)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/physics 所在行数: 19"
    },
    "Global.ZipAndEncodeSaveData:UNKNOWN": {
        "prefix": "ZipAndEncodeSaveData",
        "body": "ZipAndEncodeSaveData(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 1694"
    },
    "Global.d_spawn_ds:UNKNOWN": {
        "prefix": "d_spawn_ds",
        "body": "d_spawn_ds(${1:prefab},${2:scenario})",
        "description": " ※Params: \n   (prefab)<>[] \n   (scenario)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 528"
    },
    "Global.GetTaskRemaining:UNKNOWN": {
        "prefix": "GetTaskRemaining",
        "body": "GetTaskRemaining(${1:task})",
        "description": " ※Params: \n   (task)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 847"
    },
    "Global.UpdateServerTagsString:UNKNOWN": {
        "prefix": "UpdateServerTagsString",
        "body": "UpdateServerTagsString(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 745"
    },
    "Global.d_unlockallachievements:UNKNOWN": {
        "prefix": "d_unlockallachievements",
        "body": "d_unlockallachievements(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 793"
    },
    "Global.dumplua:UNKNOWN": {
        "prefix": "dumplua",
        "body": "dumplua(${1:value},${2:ident},${3:path})",
        "description": " ※Params: \n   (value)<>[] \n   (ident)<>[] \n   (path)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/dumper 所在行数: 249"
    },
    "Global.premiumwateringcan_init_fn:UNKNOWN": {
        "prefix": "premiumwateringcan_init_fn",
        "body": "premiumwateringcan_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 2767"
    },
    "Global.RunScript:UNKNOWN": {
        "prefix": "RunScript",
        "body": "RunScript(${1:filename})",
        "description": " ※Params: \n   (filename)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 575"
    },
    "Global.Networking_SlashCmd:UNKNOWN": {
        "prefix": "Networking_SlashCmd",
        "body": "Networking_SlashCmd(${1:guid},${2:userid},${3:cmd})",
        "description": " ※Params: \n   (guid)<>[] \n   (userid)<>[] \n   (cmd)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 24"
    },
    "Global.StringContainsAnyInArray:UNKNOWN": {
        "prefix": "StringContainsAnyInArray",
        "body": "StringContainsAnyInArray(${1:input},${2:array})",
        "description": " ※Params: \n   (input)<>[] \n   (array)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 383"
    },
    "Global.GetSkinModeFromBuild:UNKNOWN": {
        "prefix": "GetSkinModeFromBuild",
        "body": "GetSkinModeFromBuild(${1:player})",
        "description": " ※Params: \n   (player)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1899"
    },
    "Global.d_sinkhole:UNKNOWN": {
        "prefix": "d_sinkhole",
        "body": "d_sinkhole(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 631"
    },
    "Global.OwnsSkinPack:UNKNOWN": {
        "prefix": "OwnsSkinPack",
        "body": "OwnsSkinPack(${1:item_key})",
        "description": " ※Params: \n   (item_key)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 486"
    },
    "Global.ExceptionArrays:UNKNOWN": {
        "prefix": "ExceptionArrays",
        "body": "ExceptionArrays(${1:tSource},${2:tException})",
        "description": " ※Params: \n   (tSource)<>[] \n   (tException)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 339"
    },
    "Global.GetPlayer:UNKNOWN": {
        "prefix": "GetPlayer",
        "body": "GetPlayer(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/simutil 所在行数: 26"
    },
    "Global.sortedKeys:UNKNOWN": {
        "prefix": "sortedKeys",
        "body": "sortedKeys(${1:dict})",
        "description": " ※Params: \n   (dict)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 877"
    },
    "Global.modprint:UNKNOWN": {
        "prefix": "modprint",
        "body": "modprint(${1:...})",
        "description": " ※Params: \n   (...)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 128"
    },
    "Global.ChangeMiniMapTileRenderOrder:UNKNOWN": {
        "prefix": "ChangeMiniMapTileRenderOrder",
        "body": "ChangeMiniMapTileRenderOrder(${1:tile_id},${2:target_tile_id},${3:moveafter})",
        "description": " ※Params: \n   (tile_id)<>[] \n   (target_tile_id)<>[] \n   (moveafter)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 392"
    },
    "Global.GetActiveCharacterList:UNKNOWN": {
        "prefix": "GetActiveCharacterList",
        "body": "GetActiveCharacterList(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/dlcsupport 所在行数: 101"
    },
    "Global.checkbool:UNKNOWN": {
        "prefix": "checkbool",
        "body": "checkbool(${1:val})",
        "description": " ※Params: \n   (val)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networkclientrpc 所在行数: 4"
    },
    "Global.RegisterAchievements:UNKNOWN": {
        "prefix": "RegisterAchievements",
        "body": "RegisterAchievements(${1:achievements})",
        "description": " ※Params: \n   (achievements)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 249"
    },
    "Global.GetTaskTime:UNKNOWN": {
        "prefix": "GetTaskTime",
        "body": "GetTaskTime(${1:task})",
        "description": " ※Params: \n   (task)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 854"
    },
    "Global.OnInputText:UNKNOWN": {
        "prefix": "OnInputText",
        "body": "OnInputText(${1:text})",
        "description": " ※Params: \n   (text)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/input 所在行数: 449"
    },
    "Global.LaunchAndClearArea:UNKNOWN": {
        "prefix": "LaunchAndClearArea",
        "body": "LaunchAndClearArea(${1:inst},${2:radius},${3:launch_basespeed},${4:launch_speedmult},${5:launch_startheight},${6:launch_startradius})",
        "description": " ※Params: \n   (inst)<>[] \n   (radius)<>[] \n   (launch_basespeed)<>[] \n   (launch_speedmult)<>[] \n   (launch_startheight)<>[] \n   (launch_startradius)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/physics 所在行数: 135"
    },
    "Global.FindCharlieRezSpotFor:UNKNOWN": {
        "prefix": "FindCharlieRezSpotFor",
        "body": "FindCharlieRezSpotFor(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/simutil 所在行数: 327"
    },
    "Global.AreClientModsDisabled:UNKNOWN": {
        "prefix": "AreClientModsDisabled",
        "body": "AreClientModsDisabled(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mods 所在行数: 93"
    },
    "Global.GetOceanDepthAtPoint:UNKNOWN": {
        "prefix": "GetOceanDepthAtPoint",
        "body": "GetOceanDepthAtPoint(${1:pt})",
        "description": " ※Params: \n   (pt)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/ocean_util 所在行数: 25"
    },
    "Global.c_maintainhealth:UNKNOWN": {
        "prefix": "c_maintainhealth",
        "body": "c_maintainhealth(${1:player},${2:percent})",
        "description": " ※Params: \n   (player)<>[] \n   (percent)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 1099"
    },
    "Global.TrackMem:UNKNOWN": {
        "prefix": "TrackMem",
        "body": "TrackMem(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 1422"
    },
    "Global.GetPlayerBadgeData:UNKNOWN": {
        "prefix": "GetPlayerBadgeData",
        "body": "GetPlayerBadgeData(${1:character},${2:ghost},${3:state_1},${4:state_2},${5:state_3})",
        "description": " ※Params: \n   (character)<>[] \n   (ghost)<>[] \n   (state_1)<>[] \n   (state_2)<>[] \n   (state_3)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1853"
    },
    "Global.orangestaff_init_fn:UNKNOWN": {
        "prefix": "orangestaff_init_fn",
        "body": "orangestaff_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 2283"
    },
    "Global.GetKilledByFromMorgueRow:UNKNOWN": {
        "prefix": "GetKilledByFromMorgueRow",
        "body": "GetKilledByFromMorgueRow(${1:data})",
        "description": " ※Params: \n   (data)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/characterutil 所在行数: 108"
    },
    "Global.SinkEntity:UNKNOWN": {
        "prefix": "SinkEntity",
        "body": "SinkEntity(${1:entity})",
        "description": " ※Params: \n   (entity)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/ocean_util 所在行数: 182"
    },
    "Global.ProfileStatsAddItemChunk:UNKNOWN": {
        "prefix": "ProfileStatsAddItemChunk",
        "body": "ProfileStatsAddItemChunk(${1:item},${2:chunk})",
        "description": " ※Params: \n   (item)<>[] \n   (chunk)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/stats 所在行数: 337"
    },
    "Global.AddTaskSetPreInit:UNKNOWN": {
        "prefix": "AddTaskSetPreInit",
        "body": "AddTaskSetPreInit(${1:tasksetname},${2:fn})",
        "description": " ※Params: \n   (tasksetname)<>[] \n   (fn)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 251"
    },
    "Global.GetClientMetricsData:UNKNOWN": {
        "prefix": "GetClientMetricsData",
        "body": "GetClientMetricsData(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/stats 所在行数: 13"
    },
    "Global.RegisterSinglePrefab:UNKNOWN": {
        "prefix": "RegisterSinglePrefab",
        "body": "RegisterSinglePrefab(${1:prefab})",
        "description": " ※Params: \n   (prefab)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 139"
    },
    "Global.decode_scanComment:UNKNOWN": {
        "prefix": "decode_scanComment",
        "body": "decode_scanComment(${1:s},${2:startPos})",
        "description": " ※Params: \n   (s)<>[] \n   (startPos)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/json 所在行数: 302"
    },
    "Global.GetPurchasePackOutputItems:UNKNOWN": {
        "prefix": "GetPurchasePackOutputItems",
        "body": "GetPurchasePackOutputItems(${1:item_key})",
        "description": " ※Params: \n   (item_key)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 515"
    },
    "Global.ClearClientRequestedAction:UNKNOWN": {
        "prefix": "ClearClientRequestedAction",
        "body": "ClearClientRequestedAction(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/actions 所在行数: 187"
    },
    "Global.ControllerReticle_Blink_GetPosition_Oneshot:UNKNOWN": {
        "prefix": "ControllerReticle_Blink_GetPosition_Oneshot",
        "body": "ControllerReticle_Blink_GetPosition_Oneshot(${1:pos},${2:rotation},${3:rmin},${4:rmax},${5:riter},${6:validwalkablefn})",
        "description": " ※Params: \n   (pos)<>[] \n   (rotation)<>[] \n   (rmin)<>[] \n   (rmax)<>[] \n   (riter)<>[] \n   (validwalkablefn)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 1779"
    },
    "Global.c_spawnrift:UNKNOWN": {
        "prefix": "c_spawnrift",
        "body": "c_spawnrift(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 2008"
    },
    "Global.BuildLunacyShader:UNKNOWN": {
        "prefix": "BuildLunacyShader",
        "body": "BuildLunacyShader(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/postprocesseffects 所在行数: 228"
    },
    "Global.GlobalInit:UNKNOWN": {
        "prefix": "GlobalInit",
        "body": "GlobalInit(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 1417"
    },
    "Global.ArrayUnion:UNKNOWN": {
        "prefix": "ArrayUnion",
        "body": "ArrayUnion(${1:...})",
        "description": " ※Params: \n   (...)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 351"
    },
    "Global.ocean_trawler_kit_clear_fn:UNKNOWN": {
        "prefix": "ocean_trawler_kit_clear_fn",
        "body": "ocean_trawler_kit_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 290"
    },
    "Global.GetShardModRPC:UNKNOWN": {
        "prefix": "GetShardModRPC",
        "body": "GetShardModRPC(${1:namespace},${2:name})",
        "description": " ※Params: \n   (namespace)<>[] \n   (name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 914"
    },
    "Global.ValidateItemsInProfile:UNKNOWN": {
        "prefix": "ValidateItemsInProfile",
        "body": "ValidateItemsInProfile(${1:user_profile})",
        "description": " ※Params: \n   (user_profile)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1456"
    },
    "Global.WhileNode:UNKNOWN": {
        "prefix": "WhileNode",
        "body": "WhileNode(${1:cond},${2:name},${3:node})",
        "description": " ※Params: \n   (cond)<>[] \n   (name)<>[] \n   (node)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/behaviourtree 所在行数: 771"
    },
    "Global.IsPaused:UNKNOWN": {
        "prefix": "IsPaused",
        "body": "IsPaused(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 827"
    },
    "Global.GetRandomWithVariance:UNKNOWN": {
        "prefix": "GetRandomWithVariance",
        "body": "GetRandomWithVariance(${1:baseval},${2:randomval})",
        "description": " ※Params: \n   (baseval)<>[] \n   (randomval)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 528"
    },
    "Global.CanProbablyReachTargetFromShore:UNKNOWN": {
        "prefix": "CanProbablyReachTargetFromShore",
        "body": "CanProbablyReachTargetFromShore(${1:inst},${2:target},${3:max_distance})",
        "description": " ※Params: \n   (inst)<>[] \n   (target)<>[] \n   (max_distance)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/ocean_util 所在行数: 221"
    },
    "Global.OnControl:UNKNOWN": {
        "prefix": "OnControl",
        "body": "OnControl(${1:control},${2:digitalvalue},${3:analogvalue})",
        "description": " ※Params: \n   (control)<>[] \n   (digitalvalue)<>[] \n   (analogvalue)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/input 所在行数: 433"
    },
    "Global.Networking_Announcement_GetDisplayName:UNKNOWN": {
        "prefix": "Networking_Announcement_GetDisplayName",
        "body": "Networking_Announcement_GetDisplayName(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 87"
    },
    "Global.StartStaticThread:UNKNOWN": {
        "prefix": "StartStaticThread",
        "body": "StartStaticThread(${1:fn},${2:id},${3:param})",
        "description": " ※Params: \n   (fn)<>[] \n   (id)<>[] \n   (param)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/scheduler 所在行数: 397"
    },
    "Global.ShowBadHashUI:UNKNOWN": {
        "prefix": "ShowBadHashUI",
        "body": "ShowBadHashUI(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 2269"
    },
    "Global.GetFestivalEventInfo:UNKNOWN": {
        "prefix": "GetFestivalEventInfo",
        "body": "GetFestivalEventInfo(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/constants 所在行数: 1028"
    },
    "Global.RunScheduler:UNKNOWN": {
        "prefix": "RunScheduler",
        "body": "RunScheduler(${1:tick})",
        "description": " ※Params: \n   (tick)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/scheduler 所在行数: 407"
    },
    "Global.GetEnabledModNamesDetailed:UNKNOWN": {
        "prefix": "GetEnabledModNamesDetailed",
        "body": "GetEnabledModNamesDetailed(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mods 所在行数: 101"
    },
    "Global.GetGameModeString:UNKNOWN": {
        "prefix": "GetGameModeString",
        "body": "GetGameModeString(${1:game_mode})",
        "description": " ※Params: \n   (game_mode)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/gamemodes 所在行数: 245"
    },
    "Global.AddFalloffTexture:UNKNOWN": {
        "prefix": "AddFalloffTexture",
        "body": "AddFalloffTexture(${1:falloff_id},${2:falloff_def})",
        "description": " ※Params: \n   (falloff_id)<>[] \n   (falloff_def)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 406"
    },
    "Global.orderedPairs:UNKNOWN": {
        "prefix": "orderedPairs",
        "body": "orderedPairs(${1:t})",
        "description": " ※Params: \n   (t)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 1655"
    },
    "Global.Tune:UNKNOWN": {
        "prefix": "Tune",
        "body": "Tune(${1:overrides})",
        "description": " ※Params: \n   (overrides)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/tuning 所在行数: 14"
    },
    "Global.decode_scanNumber:UNKNOWN": {
        "prefix": "decode_scanNumber",
        "body": "decode_scanNumber(${1:s},${2:startPos})",
        "description": " ※Params: \n   (s)<>[] \n   (startPos)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/json 所在行数: 342"
    },
    "Global.GetBuildForItem:UNKNOWN": {
        "prefix": "GetBuildForItem",
        "body": "GetBuildForItem(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 125"
    },
    "Global.SimReset:UNKNOWN": {
        "prefix": "SimReset",
        "body": "SimReset(${1:instanceparameters})",
        "description": " ※Params: \n   (instanceparameters)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 1491"
    },
    "Global.GetCharacterDescription:UNKNOWN": {
        "prefix": "GetCharacterDescription",
        "body": "GetCharacterDescription(${1:herocharacter})",
        "description": " ※Params: \n   (herocharacter)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/stringutil 所在行数: 416"
    },
    "Global.GetPlayerPortraitAtlasAndTex:UNKNOWN": {
        "prefix": "GetPlayerPortraitAtlasAndTex",
        "body": "GetPlayerPortraitAtlasAndTex(${1:item_key})",
        "description": " ※Params: \n   (item_key)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1599"
    },
    "Global.OnPhysicsCollision:UNKNOWN": {
        "prefix": "OnPhysicsCollision",
        "body": "OnPhysicsCollision(${1:guid1},${2:guid2},${3:world_position_on_a_x},${4:world_position_on_a_y},${5:world_position_on_a_z},${6:world_position_on_b_x},${7:world_position_on_b_y},${8:world_position_on_b_z},${9:world_normal_on_b_x},${10:world_normal_on_b_y},${11:world_normal_on_b_z},${12:lifetime_in_frames})",
        "description": " ※Params: \n   (guid1)<>[] \n   (guid2)<>[] \n   (world_position_on_a_x)<>[] \n   (world_position_on_a_y)<>[] \n   (world_position_on_a_z)<>[] \n   (world_position_on_b_x)<>[] \n   (world_position_on_b_y)<>[] \n   (world_position_on_b_z)<>[] \n   (world_normal_on_b_x)<>[] \n   (world_normal_on_b_y)<>[] \n   (world_normal_on_b_z)<>[] \n   (lifetime_in_frames)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/physics 所在行数: 4"
    },
    "Global.ProfileStatsSet:UNKNOWN": {
        "prefix": "ProfileStatsSet",
        "body": "ProfileStatsSet(${1:item},${2:value})",
        "description": " ※Params: \n   (item)<>[] \n   (value)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/stats 所在行数: 349"
    },
    "Global.wall_wood_item_clear_fn:UNKNOWN": {
        "prefix": "wall_wood_item_clear_fn",
        "body": "wall_wood_item_clear_fn(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1852"
    },
    "Global.LongUpdate:UNKNOWN": {
        "prefix": "LongUpdate",
        "body": "LongUpdate(${1:dt},${2:ignore_player})",
        "description": " ※Params: \n   (dt)<>[] \n   (ignore_player)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/update 所在行数: 301"
    },
    "Global.FindClosestPlayer:UNKNOWN": {
        "prefix": "FindClosestPlayer",
        "body": "FindClosestPlayer(${1:x},${2:y},${3:z},${4:isalive})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n   (isalive)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/simutil 所在行数: 82"
    },
    "Global.RunInSandboxSafeCatchInfiniteLoops:UNKNOWN": {
        "prefix": "RunInSandboxSafeCatchInfiniteLoops",
        "body": "RunInSandboxSafeCatchInfiniteLoops(${1:untrusted_code},${2:error_handler})",
        "description": " ※Params: \n   (untrusted_code)<>[] \n   (error_handler)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 813"
    },
    "Global.d_hidekitcoon:UNKNOWN": {
        "prefix": "d_hidekitcoon",
        "body": "d_hidekitcoon(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 908"
    },
    "Global.GetProfilerMetaData:UNKNOWN": {
        "prefix": "GetProfilerMetaData",
        "body": "GetProfilerMetaData(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/perfutil 所在行数: 104"
    },
    "Global.GetModRPCHandler:UNKNOWN": {
        "prefix": "GetModRPCHandler",
        "body": "GetModRPCHandler(${1:namespace},${2:name})",
        "description": " ※Params: \n   (namespace)<>[] \n   (name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 872"
    },
    "Global.JoinServerFilter:UNKNOWN": {
        "prefix": "JoinServerFilter",
        "body": "JoinServerFilter(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 881"
    },
    "Global.optentity:UNKNOWN": {
        "prefix": "optentity",
        "body": "optentity(${1:val})",
        "description": " ※Params: \n   (val)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networkclientrpc 所在行数: 13"
    },
    "Global.GetDebugString:UNKNOWN": {
        "prefix": "GetDebugString",
        "body": "GetDebugString(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 607"
    },
    "Global.shallowcopy:UNKNOWN": {
        "prefix": "shallowcopy",
        "body": "shallowcopy(${1:orig},${2:dest})",
        "description": " ※Params: \n   (orig)<>[] \n   (dest)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 940"
    },
    "Global.str_date:UNKNOWN": {
        "prefix": "str_date",
        "body": "str_date(${1:os_time})",
        "description": " ※Params: \n   (os_time)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/stringutil 所在行数: 501"
    },
    "Global.ProcessString:UNKNOWN": {
        "prefix": "ProcessString",
        "body": "ProcessString(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/stringutil 所在行数: 246"
    },
    "Global.FindNearbyOcean:UNKNOWN": {
        "prefix": "FindNearbyOcean",
        "body": "FindNearbyOcean(${1:position},${2:range})",
        "description": " ※Params: \n   (position)<>[] \n   (range)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/simutil 所在行数: 183"
    },
    "Global.StaticUpdate:UNKNOWN": {
        "prefix": "StaticUpdate",
        "body": "StaticUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/update 所在行数: 169"
    },
    "Global.Vector3FromTheta:UNKNOWN": {
        "prefix": "Vector3FromTheta",
        "body": "Vector3FromTheta(${1:theta},${2:radius})",
        "description": " ※Params: \n   (theta)<>[] \n   (radius)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/vector3 所在行数: 104"
    },
    "Global.BuildTagsStringCommon:UNKNOWN": {
        "prefix": "BuildTagsStringCommon",
        "body": "BuildTagsStringCommon(${1:tagsTable})",
        "description": " ※Params: \n   (tagsTable)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 2158"
    },
    "Global.AwardRadialAchievement:UNKNOWN": {
        "prefix": "AwardRadialAchievement",
        "body": "AwardRadialAchievement(${1:name},${2:pos},${3:radius})",
        "description": " ※Params: \n   (name)<>[] \n   (pos)<>[] \n   (radius)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 314"
    },
    "Global.lantern_init_fn:UNKNOWN": {
        "prefix": "lantern_init_fn",
        "body": "lantern_init_fn(${1:inst},${2:build_name},${3:overridesymbols},${4:followoffset})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n   (overridesymbols)<>[] \n   (followoffset)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 2450"
    },
    "Global.WillUnravelBreakRestrictedCharacter:UNKNOWN": {
        "prefix": "WillUnravelBreakRestrictedCharacter",
        "body": "WillUnravelBreakRestrictedCharacter(${1:item_type})",
        "description": " ※Params: \n   (item_type)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1194"
    },
    "Global.d_riftspawns:UNKNOWN": {
        "prefix": "d_riftspawns",
        "body": "d_riftspawns(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 220"
    },
    "Global.moderror:UNKNOWN": {
        "prefix": "moderror",
        "body": "moderror(${1:message},${2:level})",
        "description": " ※Params: \n   (message)<>[] \n   (level)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 105"
    },
    "Global.PreloadSoundList:UNKNOWN": {
        "prefix": "PreloadSoundList",
        "body": "PreloadSoundList(${1:list})",
        "description": " ※Params: \n   (list)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/preloadsounds 所在行数: 230"
    },
    "Global.ControllerReticle_Blink_GetPosition:UNKNOWN": {
        "prefix": "ControllerReticle_Blink_GetPosition",
        "body": "ControllerReticle_Blink_GetPosition(${1:player},${2:validwalkablefn})",
        "description": " ※Params: \n   (player)<>[] \n   (validwalkablefn)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 1805"
    },
    "Global.AddHauntableDropItemOrWork:UNKNOWN": {
        "prefix": "AddHauntableDropItemOrWork",
        "body": "AddHauntableDropItemOrWork(${1:inst})",
        "description": " ※Params: \n   (inst)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/standardcomponents 所在行数: 1336"
    },
    "Global.ClientAuthenticationComplete:UNKNOWN": {
        "prefix": "ClientAuthenticationComplete",
        "body": "ClientAuthenticationComplete(${1:userid})",
        "description": " ※Params: \n   (userid)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 942"
    },
    "Global.SoundFrameEvent:UNKNOWN": {
        "prefix": "SoundFrameEvent",
        "body": "SoundFrameEvent(${1:frame},${2:sound_event})",
        "description": " ※Params: \n   (frame)<>[] \n   (sound_event)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/stategraph 所在行数: 203"
    },
    "Global.GetWorld:UNKNOWN": {
        "prefix": "GetWorld",
        "body": "GetWorld(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/simutil 所在行数: 21"
    },
    "Global.GetGameModeTag:UNKNOWN": {
        "prefix": "GetGameModeTag",
        "body": "GetGameModeTag(${1:game_mode})",
        "description": " ※Params: \n   (game_mode)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/gamemodes 所在行数: 237"
    },
    "Global.GetClosest:UNKNOWN": {
        "prefix": "GetClosest",
        "body": "GetClosest(${1:target},${2:entities})",
        "description": " ※Params: \n   (target)<>[] \n   (entities)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 33"
    },
    "Global.mast_item_init_fn:UNKNOWN": {
        "prefix": "mast_item_init_fn",
        "body": "mast_item_init_fn(${1:inst},${2:build_name})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1918"
    },
    "Global.SpawnNewPlayerOnServerFromSim:UNKNOWN": {
        "prefix": "SpawnNewPlayerOnServerFromSim",
        "body": "SpawnNewPlayerOnServerFromSim(${1:player_guid},${2:skin_base},${3:clothing_body},${4:clothing_hand},${5:clothing_legs},${6:clothing_feet},${7:starting_item_skins},${8:skillselection})",
        "description": " ※Params: \n   (player_guid)<>[] \n   (skin_base)<>[] \n   (clothing_body)<>[] \n   (clothing_hand)<>[] \n   (clothing_legs)<>[] \n   (clothing_feet)<>[] \n   (starting_item_skins)<>[] \n   (skillselection)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/networking 所在行数: 247"
    },
    "Global.FindVirtualOceanEntity:UNKNOWN": {
        "prefix": "FindVirtualOceanEntity",
        "body": "FindVirtualOceanEntity(${1:x},${2:y},${3:z},${4:r})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n   (r)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/componentutil 所在行数: 46"
    },
    "Global.BuildModShaders:UNKNOWN": {
        "prefix": "BuildModShaders",
        "body": "BuildModShaders(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/postprocesseffects 所在行数: 254"
    },
    "Global.SendModRPCToShard:发送服务器其他世界RPC调用": {
        "prefix": "SendModRPCToShard",
        "body": "SendModRPCToShard(GetShardModRPC(\"${1:name}\", \"${2:$1}\"), sender_list or nil, DataDumper({\"参数\"}, nil, true))",
        "description": " ※Params: \n   (id_table)<>[] \n   (...)<>[] \n ※Description: 发送服务器其他世界RPC调用\n ※Contributor: @月 \n\t从主机分片发送指令给主机其他分片.参数1:GetShardModRPC(形参1:命名空间,形参2:RPC名称)获取对应RPC;参数2:sender_list<code>可为nil|字符串|字符串表</code>;参数3:附带参数对应str\n ※Path: scripts_en/modutil 所在行数: 897"
    },
    "Global.d_dumpCreatureTXT:UNKNOWN": {
        "prefix": "d_dumpCreatureTXT",
        "body": "d_dumpCreatureTXT(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 1852"
    },
    "Global.Vec3Util_Sub:UNKNOWN": {
        "prefix": "Vec3Util_Sub",
        "body": "Vec3Util_Sub(${1:p1_x},${2:p1_y},${3:p1_z},${4:p2_x},${5:p2_y},${6:p2_z})",
        "description": " ※Params: \n   (p1_x)<>[] \n   (p1_y)<>[] \n   (p1_z)<>[] \n   (p2_x)<>[] \n   (p2_y)<>[] \n   (p2_z)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/vec3util 所在行数: 7"
    },
    "Global.d_gofishing:UNKNOWN": {
        "prefix": "d_gofishing",
        "body": "d_gofishing(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 1150"
    },
    "Global.PlayNIS:UNKNOWN": {
        "prefix": "PlayNIS",
        "body": "PlayNIS(${1:nisname},${2:lines})",
        "description": " ※Params: \n   (nisname)<>[] \n   (lines)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 809"
    },
    "Global.d_spawnequipment_onstand:UNKNOWN": {
        "prefix": "d_spawnequipment_onstand",
        "body": "d_spawnequipment_onstand(${1:...})",
        "description": " ※Params: \n   (...)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 1752"
    },
    "Global.AddLocation:UNKNOWN": {
        "prefix": "AddLocation",
        "body": "AddLocation(${1:arg1},${2:...})",
        "description": " ※Params: \n   (arg1)<>[] \n   (...)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 283"
    },
    "Global.NotifyPlayerPresence:UNKNOWN": {
        "prefix": "NotifyPlayerPresence",
        "body": "NotifyPlayerPresence(${1:name},${2:level},${3:days},${4:player})",
        "description": " ※Params: \n   (name)<>[] \n   (level)<>[] \n   (days)<>[] \n   (player)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 303"
    },
    "Global.GroundAtlas:UNKNOWN": {
        "prefix": "GroundAtlas",
        "body": "GroundAtlas(${1:name})",
        "description": " ※Params: \n   (name)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/worldtiledefs 所在行数: 11"
    },
    "Global.GetActionFailString:UNKNOWN": {
        "prefix": "GetActionFailString",
        "body": "GetActionFailString(${1:inst},${2:action},${3:reason})",
        "description": " ※Params: \n   (inst)<>[] \n   (action)<>[] \n   (reason)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/stringutil 所在行数: 434"
    },
    "Global.OnDemoTimeout:UNKNOWN": {
        "prefix": "OnDemoTimeout",
        "body": "OnDemoTimeout(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 1765"
    },
    "Global.AddRecipePostInit:修改配方API": {
        "prefix": "AddRecipePostInit",
        "body": "AddRecipePostInit(\"${1:recipename}\", function(self)\n\t${0}\nend)",
        "description": " ※Params: \n   (recipename)<>[] \n   (fn)<>[] \n ※Description: 修改配方API\n ※Contributor: @lan\n ※Path: scripts_en/modutil 所在行数: 613"
    },
    "Global.IsSkinDLCEntitlementReceived:UNKNOWN": {
        "prefix": "IsSkinDLCEntitlementReceived",
        "body": "IsSkinDLCEntitlementReceived(${1:entitlement})",
        "description": " ※Params: \n   (entitlement)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 1630"
    },
    "Global.AddComponentAction:组件绑定动作": {
        "prefix": "AddComponentAction",
        "body": "AddComponentAction(\"${1:EQUIPPED}\", \"${2:componentname}\", function(inst, doer, target, actions, right)\n \tif right then\n \t\ttable.insert(actions, ACTIONS.xxx)\n \tend\nend)",
        "description": " ※Params: \n   (actiontype)<string>[动作类型] \n   (component)<string>[组件] \n   (fn)<function>[]\n      {Params:\n         (inst)<>[] \n         (doer)<>[] \n         (pos)<V3>[] \n         (target)<>[] \n         (actions)<>[] \n         (right)<boolean>[右键动作] \n      Returns:} \n   (modname)<>[] \n ※Description: 组件绑定动作\n ※Contributor: @lan\n\tSCENE args: inst, doer, actions, right 点击物品栏物品或世界上的物品时执行\n\tUSEITEM args: inst, doer, target, actions, right 拿起某物品放到另一物品上执行\n\tPOINT args: inst, doer, pos, actions, right 对地面执行\n\tEQUIPPED args: inst, doer, target, actions, right 装备某物品后激活,如装备火把点火\n\tINVENTORY args: inst, doer, actions, right 右键物品栏执行\n ※Path: scripts_en/componentactions 所在行数: 2580"
    },
    "Global.ErasePersistentString:UNKNOWN": {
        "prefix": "ErasePersistentString",
        "body": "ErasePersistentString(${1:name},${2:callback})",
        "description": " ※Params: \n   (name)<>[] \n   (callback)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 33"
    },
    "Global.HaveMultipleViewports:UNKNOWN": {
        "prefix": "HaveMultipleViewports",
        "body": "HaveMultipleViewports(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/splitscreenutils_pc 所在行数: 29"
    },
    "Global.GetFrameSymbolForRarity:UNKNOWN": {
        "prefix": "GetFrameSymbolForRarity",
        "body": "GetFrameSymbolForRarity(${1:rarity})",
        "description": " ※Params: \n   (rarity)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 114"
    },
    "Global.CreateRepeatedSoundVolumeReduction:UNKNOWN": {
        "prefix": "CreateRepeatedSoundVolumeReduction",
        "body": "CreateRepeatedSoundVolumeReduction(${1:repeat_time},${2:lowered_volume_percent})",
        "description": " ※Params: \n   (repeat_time)<>[] \n   (lowered_volume_percent)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 2221"
    },
    "Global.BeginDataBundleFileHashes:UNKNOWN": {
        "prefix": "BeginDataBundleFileHashes",
        "body": "BeginDataBundleFileHashes(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 2317"
    },
    "Global.c_makeboatspiral:UNKNOWN": {
        "prefix": "c_makeboatspiral",
        "body": "c_makeboatspiral(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 1561"
    },
    "Global.d_togglelunarhail:UNKNOWN": {
        "prefix": "d_togglelunarhail",
        "body": "d_togglelunarhail(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/debugcommands 所在行数: 359"
    },
    "Global.metarawget:UNKNOWN": {
        "prefix": "metarawget",
        "body": "metarawget(${1:t},${2:k})",
        "description": " ※Params: \n   (t)<>[] \n   (k)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/util 所在行数: 1685"
    },
    "Global.VecUtil_Slerp:UNKNOWN": {
        "prefix": "VecUtil_Slerp",
        "body": "VecUtil_Slerp(${1:p1_x},${2:p1_z},${3:p2_x},${4:p2_z},${5:percent})",
        "description": " ※Params: \n   (p1_x)<>[] \n   (p1_z)<>[] \n   (p2_x)<>[] \n   (p2_z)<>[] \n   (percent)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/vecutil 所在行数: 80"
    },
    "Global.minisign_item_init_fn:UNKNOWN": {
        "prefix": "minisign_item_init_fn",
        "body": "minisign_item_init_fn(${1:inst},${2:build_name},${3:anim_bank})",
        "description": " ※Params: \n   (inst)<>[] \n   (build_name)<>[] \n   (anim_bank)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/prefabskin 所在行数: 1587"
    },
    "Global.AddStategraphEvent:添加SG的事件监听器API通用函数片段": {
        "prefix": "AddStategraphEvent",
        "body": "AddStategraphEvent(\"${1:StateGraph}\", EventHandler(\"event\", function(inst)\n\nend))",
        "description": " ※Params: \n   (stategraph)<>[] \n   (event)<>[] \n ※Description: 添加SG的事件监听器API通用函数片段\n ※Contributor: @月\n ※Path: scripts_en/modutil 所在行数: 536"
    },
    "Global.RegisterScrapbookIconAtlas:UNKNOWN": {
        "prefix": "RegisterScrapbookIconAtlas",
        "body": "RegisterScrapbookIconAtlas(${1:atlas},${2:tex})",
        "description": " ※Params: \n   (atlas)<>[] \n   (tex)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 959"
    },
    "Global.ShadeEffectUpdate:UNKNOWN": {
        "prefix": "ShadeEffectUpdate",
        "body": "ShadeEffectUpdate(${1:dt})",
        "description": " ※Params: \n   (dt)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/shadeeffects 所在行数: 28"
    },
    "Global.c_setminhealth:UNKNOWN": {
        "prefix": "c_setminhealth",
        "body": "c_setminhealth(${1:n})",
        "description": " ※Params: \n   (n)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/consolecommands 所在行数: 396"
    },
    "Global.SetMiniMapTileProperty:UNKNOWN": {
        "prefix": "SetMiniMapTileProperty",
        "body": "SetMiniMapTileProperty(${1:tile_id},${2:propertyname},${3:value})",
        "description": " ※Params: \n   (tile_id)<>[] \n   (propertyname)<>[] \n   (value)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/modutil 所在行数: 399"
    },
    "Global.SetAutopaused:UNKNOWN": {
        "prefix": "SetAutopaused",
        "body": "SetAutopaused(${1:autopause})",
        "description": " ※Params: \n   (autopause)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 863"
    },
    "Global.GetDebugEntity:UNKNOWN": {
        "prefix": "GetDebugEntity",
        "body": "GetDebugEntity(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 620"
    },
    "Global.IsPackGiftable:UNKNOWN": {
        "prefix": "IsPackGiftable",
        "body": "IsPackGiftable(${1:item_key})",
        "description": " ※Params: \n   (item_key)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/skinsutils 所在行数: 454"
    },
    "Global.OnMouseMove:UNKNOWN": {
        "prefix": "OnMouseMove",
        "body": "OnMouseMove(${1:x},${2:y})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/input 所在行数: 441"
    },
    "Global.DisplayError:UNKNOWN": {
        "prefix": "DisplayError",
        "body": "DisplayError(${1:error})",
        "description": " ※Params: \n   (error)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 1556"
    },
    "Global.UserToClientID:UNKNOWN": {
        "prefix": "UserToClientID",
        "body": "UserToClientID(${1:input})",
        "description": " ※Params: \n   (input)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/usercommands 所在行数: 647"
    },
    "Global.UnloadFonts:UNKNOWN": {
        "prefix": "UnloadFonts",
        "body": "UnloadFonts(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/mainfunctions 所在行数: 1287"
    },
    "Global.FindPickupableItem:UNKNOWN": {
        "prefix": "FindPickupableItem",
        "body": "FindPickupableItem(${1:owner},${2:radius},${3:furthestfirst},${4:positionoverride},${5:ignorethese},${6:onlytheseprefabs},${7:allowpickables},${8:worker},${9:extra_filter})",
        "description": " ※Params: \n   (owner)<>[] \n   (radius)<>[] \n   (furthestfirst)<>[] \n   (positionoverride)<>[] \n   (ignorethese)<>[] \n   (onlytheseprefabs)<>[] \n   (allowpickables)<>[] \n   (worker)<>[] \n   (extra_filter)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/simutil 所在行数: 423"
    },
    "Global.SetDLCEnabled:UNKNOWN": {
        "prefix": "SetDLCEnabled",
        "body": "SetDLCEnabled(${1:tbl})",
        "description": " ※Params: \n   (tbl)<>[] \n ※Description: UNKNOWN\n ※Contributor: @\n ※Path: scripts_en/dlcsupport_worldgen 所在行数: 16"
    },
    "dst-lan:help": {
        "prefix": "help",
        "body": "help",
        "description": " ※Extension Version: v0.4.0\n ※To avoid logging into GitHub, I will post the completion prompts and update information here.\n --------------------\n ※Trigger/Complete\n p+prefab ID/Prefab ID completion, you can search for translation names\n tag+tagname/tag+tagname\n g+methodname/g+methodname\n com+componentname/com+componentname\n normal trigger method+i/normal trigger method+i\n  \n contri+components/contri+components\n lan+param/lan+param\n lan+return/lan+return\n --------------------\n ※Theme/...\n DST LAN ICON/Icon designed for DST MOD folders\n --------------------\n ※Others/...\n User custom comment/-- @user: comment\n ※Todo\n Collect mod code, calculate the usage frequency of api, and put the low-frequency api into the non-common method\n "
    },
    "dst-lan:help:tree": {
        "prefix": "help+tree",
        "body": "scripts_en\\n├── components-Component\\n│   └── ...-All Components\\n├── system_components-System Components\\n│   ├── AnimState-Animation\\n│   ├── Transform-Transform\\n│   ├── Physics-Physics\\n│   └── SoundEmitter-Sound\\n├── constant-Constant\\n├── entityscript-Inst Method\\n├── global_fn_maybe-Possible GLOBAL Methods\\n├── method_custom-Can not find the parent\\n├── tags-Tag\\n├── var_name_components-Component Name Translate\\n├── var_name_dst-DST Vocabulary Translate\\n└── var_name_custom-Custom Vocabulary\\n",
        "description": "Comment Proj Tree"
    },
    "prefab:orangemooneye(ID Complete)": {
        "prefix": "p+orangemooneye",
        "body": "\"orangemooneye\"",
        "description": " ※prefab ID: orangemooneye\n ※Name: Orange Moonlens\n ※Recipe: \n\t+ 1 x: Cratered Moonrock/moonrockcrater\n\t+ 1 x: Orange Gem/orangegem\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:orangemooneye(ReverseSearch)": {
        "prefix": "p+Orange Moonlens",
        "body": "\"orangemooneye\"",
        "description": " ※prefab ID: orangemooneye\n ※Name: Orange Moonlens\n ※Recipe: \n\t+ 1 x: Cratered Moonrock/moonrockcrater\n\t+ 1 x: Orange Gem/orangegem\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:houndmound(ID Complete)": {
        "prefix": "p+houndmound",
        "body": "\"houndmound\"",
        "description": " ※prefab ID: houndmound\n ※Name: Hound Mound\n ※prefab Version: DST-632551 "
    },
    "prefab:houndmound(ReverseSearch)": {
        "prefix": "p+Hound Mound",
        "body": "\"houndmound\"",
        "description": " ※prefab ID: houndmound\n ※Name: Hound Mound\n ※prefab Version: DST-632551 "
    },
    "prefab:houndstooth(ID Complete)": {
        "prefix": "p+houndstooth",
        "body": "\"houndstooth\"",
        "description": " ※prefab ID: houndstooth\n ※Name: Hound's Tooth\n ※prefab Version: DST-632551 "
    },
    "prefab:houndstooth(ReverseSearch)": {
        "prefix": "p+Hound's Tooth",
        "body": "\"houndstooth\"",
        "description": " ※prefab ID: houndstooth\n ※Name: Hound's Tooth\n ※prefab Version: DST-632551 "
    },
    "prefab:wes(ID Complete)": {
        "prefix": "p+wes",
        "body": "\"wes\"",
        "description": " ※prefab ID: wes\n ※Name: Wes\n ※prefab Version: DST-632551 "
    },
    "prefab:wes(ReverseSearch)": {
        "prefix": "p+Wes",
        "body": "\"wes\"",
        "description": " ※prefab ID: wes\n ※Name: Wes\n ※prefab Version: DST-632551 "
    },
    "prefab:miasma(ID Complete)": {
        "prefix": "p+miasma",
        "body": "\"miasma\"",
        "description": " ※prefab ID: miasma\n ※Name: Miasma\n ※prefab Version: DST-632551 "
    },
    "prefab:miasma(ReverseSearch)": {
        "prefix": "p+Miasma",
        "body": "\"miasma\"",
        "description": " ※prefab ID: miasma\n ※Name: Miasma\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_medium_2_inv(ID Complete)": {
        "prefix": "p+oceanfish_medium_2_inv",
        "body": "\"oceanfish_medium_2_inv\"",
        "description": " ※prefab ID: oceanfish_medium_2_inv\n ※Name: Deep Bass\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_medium_2_inv(ReverseSearch)": {
        "prefix": "p+Deep Bass",
        "body": "\"oceanfish_medium_2_inv\"",
        "description": " ※prefab ID: oceanfish_medium_2_inv\n ※Name: Deep Bass\n ※prefab Version: DST-632551 "
    },
    "prefab:glommerflower(ID Complete)": {
        "prefix": "p+glommerflower",
        "body": "\"glommerflower\"",
        "description": " ※prefab ID: glommerflower\n ※Name: Glommer's Flower\n ※prefab Version: DST-632551 "
    },
    "prefab:glommerflower(ReverseSearch)": {
        "prefix": "p+Glommer's Flower",
        "body": "\"glommerflower\"",
        "description": " ※prefab ID: glommerflower\n ※Name: Glommer's Flower\n ※prefab Version: DST-632551 "
    },
    "prefab:wall_wood_item(ID Complete)": {
        "prefix": "p+wall_wood_item",
        "body": "\"wall_wood_item\"",
        "description": " ※prefab ID: wall_wood_item\n ※Name: Wood Wall\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 1 x: Rope/rope\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:wall_wood_item(ReverseSearch)": {
        "prefix": "p+Wood Wall",
        "body": "\"wall_wood_item\"",
        "description": " ※prefab ID: wall_wood_item\n ※Name: Wood Wall\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 1 x: Rope/rope\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:worm_dirt(ID Complete)": {
        "prefix": "p+worm_dirt",
        "body": "\"worm_dirt\"",
        "description": " ※prefab ID: worm_dirt\n ※Name: Dirt Mound\n ※prefab Version: DST-632551 "
    },
    "prefab:worm_dirt(ReverseSearch)": {
        "prefix": "p+Dirt Mound",
        "body": "\"worm_dirt\"",
        "description": " ※prefab ID: worm_dirt\n ※Name: Dirt Mound\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishingrod(ID Complete)": {
        "prefix": "p+oceanfishingrod",
        "body": "\"oceanfishingrod\"",
        "description": " ※prefab ID: oceanfishingrod\n ※Name: Sea Fishing Rod\n ※Recipe: \n\t+ 1 x: Boards/boards\n\t+ 3 x: Silk/silk\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishingrod(ReverseSearch)": {
        "prefix": "p+Sea Fishing Rod",
        "body": "\"oceanfishingrod\"",
        "description": " ※prefab ID: oceanfishingrod\n ※Name: Sea Fishing Rod\n ※Recipe: \n\t+ 1 x: Boards/boards\n\t+ 3 x: Silk/silk\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_salt(ID Complete)": {
        "prefix": "p+quagmire_salt",
        "body": "\"quagmire_salt\"",
        "description": " ※prefab ID: quagmire_salt\n ※Name: Salt\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_salt(ReverseSearch)": {
        "prefix": "p+Salt",
        "body": "\"quagmire_salt\"",
        "description": " ※prefab ID: quagmire_salt\n ※Name: Salt\n ※prefab Version: DST-632551 "
    },
    "prefab:sculpture_rookbody(ID Complete)": {
        "prefix": "p+sculpture_rookbody",
        "body": "\"sculpture_rookbody\"",
        "description": " ※prefab ID: sculpture_rookbody\n ※Name: Marble Sculpture\n ※prefab Version: DST-632551 "
    },
    "prefab:sculpture_rookbody(ReverseSearch)": {
        "prefix": "p+Marble Sculpture",
        "body": "\"sculpture_rookbody\"",
        "description": " ※prefab ID: sculpture_rookbody\n ※Name: Marble Sculpture\n ※prefab Version: DST-632551 "
    },
    "prefab:crabking_cannontower(ID Complete)": {
        "prefix": "p+crabking_cannontower",
        "body": "\"crabking_cannontower\"",
        "description": " ※prefab ID: crabking_cannontower\n ※Name: Cannon Tower\n ※prefab Version: DST-632551 "
    },
    "prefab:crabking_cannontower(ReverseSearch)": {
        "prefix": "p+Cannon Tower",
        "body": "\"crabking_cannontower\"",
        "description": " ※prefab ID: crabking_cannontower\n ※Name: Cannon Tower\n ※prefab Version: DST-632551 "
    },
    "prefab:icehat(ID Complete)": {
        "prefix": "p+icehat",
        "body": "\"icehat\"",
        "description": " ※prefab ID: icehat\n ※Name: Ice Cube\n ※Recipe: \n\t+ 2 x: Electrical Doodad/transistor\n\t+ 4 x: Rope/rope\n\t+ 10 x: Ice/ice\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:icehat(ReverseSearch)": {
        "prefix": "p+Ice Cube",
        "body": "\"icehat\"",
        "description": " ※prefab ID: icehat\n ※Name: Ice Cube\n ※Recipe: \n\t+ 2 x: Electrical Doodad/transistor\n\t+ 4 x: Rope/rope\n\t+ 10 x: Ice/ice\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:crabking_mob_knight(ID Complete)": {
        "prefix": "p+crabking_mob_knight",
        "body": "\"crabking_mob_knight\"",
        "description": " ※prefab ID: crabking_mob_knight\n ※Name: Crab Knight\n ※prefab Version: DST-632551 "
    },
    "prefab:crabking_mob_knight(ReverseSearch)": {
        "prefix": "p+Crab Knight",
        "body": "\"crabking_mob_knight\"",
        "description": " ※prefab ID: crabking_mob_knight\n ※Name: Crab Knight\n ※prefab Version: DST-632551 "
    },
    "prefab:mastupgrade_lamp_yotd(ID Complete)": {
        "prefix": "p+mastupgrade_lamp_yotd",
        "body": "\"mastupgrade_lamp_yotd\"",
        "description": " ※prefab ID: mastupgrade_lamp_yotd\n ※Name: Dragonfly Light\n ※Recipe: \n\t+ 3 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:mastupgrade_lamp_yotd(ReverseSearch)": {
        "prefix": "p+Dragonfly Light",
        "body": "\"mastupgrade_lamp_yotd\"",
        "description": " ※prefab ID: mastupgrade_lamp_yotd\n ※Name: Dragonfly Light\n ※Recipe: \n\t+ 3 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:dug_sapling(ID Complete)": {
        "prefix": "p+dug_sapling",
        "body": "\"dug_sapling\"",
        "description": " ※prefab ID: dug_sapling\n ※Name: Sapling\n ※prefab Version: DST-632551 "
    },
    "prefab:dug_sapling(ReverseSearch)": {
        "prefix": "p+Sapling",
        "body": "\"dug_sapling\"",
        "description": " ※prefab ID: dug_sapling\n ※Name: Sapling\n ※prefab Version: DST-632551 "
    },
    "prefab:battlesong_healthgain(ID Complete)": {
        "prefix": "p+battlesong_healthgain",
        "body": "\"battlesong_healthgain\"",
        "description": " ※prefab ID: battlesong_healthgain\n ※Name: Heartrending Ballad\n ※Recipe: \n\t+ 1 x: Papyrus/papyrus\n\t+ 1 x: Feather Pencil/featherpencil\n\t+ 1 x: Life Giving Amulet/amulet\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:battlesong_healthgain(ReverseSearch)": {
        "prefix": "p+Heartrending Ballad",
        "body": "\"battlesong_healthgain\"",
        "description": " ※prefab ID: battlesong_healthgain\n ※Name: Heartrending Ballad\n ※Recipe: \n\t+ 1 x: Papyrus/papyrus\n\t+ 1 x: Feather Pencil/featherpencil\n\t+ 1 x: Life Giving Amulet/amulet\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:mermguard_lunar(ID Complete)": {
        "prefix": "p+mermguard_lunar",
        "body": "\"mermguard_lunar\"",
        "description": " ※prefab ID: mermguard_lunar\n ※Name: Mutated Merm Guard\n ※prefab Version: DST-632551 "
    },
    "prefab:mermguard_lunar(ReverseSearch)": {
        "prefix": "p+Mutated Merm Guard",
        "body": "\"mermguard_lunar\"",
        "description": " ※prefab ID: mermguard_lunar\n ※Name: Mutated Merm Guard\n ※prefab Version: DST-632551 "
    },
    "prefab:wx78module_taser(ID Complete)": {
        "prefix": "p+wx78module_taser",
        "body": "\"wx78module_taser\"",
        "description": " ※prefab ID: wx78module_taser\n ※Name: Electrification Circuit\n ※Recipe: \n\t+ 5 x: Bio Data/scandata\n\t+ 1 x: Electric Milk/goatmilk\n ※Required Tech: \n\t+ LV.1 : Circuitry/ROBOTMODULECRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:wx78module_taser(ReverseSearch)": {
        "prefix": "p+Electrification Circuit",
        "body": "\"wx78module_taser\"",
        "description": " ※prefab ID: wx78module_taser\n ※Name: Electrification Circuit\n ※Recipe: \n\t+ 5 x: Bio Data/scandata\n\t+ 1 x: Electric Milk/goatmilk\n ※Required Tech: \n\t+ LV.1 : Circuitry/ROBOTMODULECRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:yotc_owned_carrat(ID Complete)": {
        "prefix": "p+yotc_owned_carrat",
        "body": "\"yotc_owned_carrat\"",
        "description": " ※prefab ID: yotc_owned_carrat\n ※Name: {trainer}'s Carrat\n ※prefab Version: DST-632551 "
    },
    "prefab:yotc_owned_carrat(ReverseSearch)": {
        "prefix": "p+{trainer}'s Carrat",
        "body": "\"yotc_owned_carrat\"",
        "description": " ※prefab ID: yotc_owned_carrat\n ※Name: {trainer}'s Carrat\n ※prefab Version: DST-632551 "
    },
    "prefab:gestalt_guard(ID Complete)": {
        "prefix": "p+gestalt_guard",
        "body": "\"gestalt_guard\"",
        "description": " ※prefab ID: gestalt_guard\n ※Name: Greater Gestalt\n ※prefab Version: DST-632551 "
    },
    "prefab:gestalt_guard(ReverseSearch)": {
        "prefix": "p+Greater Gestalt",
        "body": "\"gestalt_guard\"",
        "description": " ※prefab ID: gestalt_guard\n ※Name: Greater Gestalt\n ※prefab Version: DST-632551 "
    },
    "prefab:costume_tree_body(ID Complete)": {
        "prefix": "p+costume_tree_body",
        "body": "\"costume_tree_body\"",
        "description": " ※prefab ID: costume_tree_body\n ※Name: Tree Costume\n ※prefab Version: DST-632551 "
    },
    "prefab:costume_tree_body(ReverseSearch)": {
        "prefix": "p+Tree Costume",
        "body": "\"costume_tree_body\"",
        "description": " ※prefab ID: costume_tree_body\n ※Name: Tree Costume\n ※prefab Version: DST-632551 "
    },
    "prefab:seacocoon_top(ID Complete)": {
        "prefix": "p+seacocoon_top",
        "body": "\"seacocoon_top\"",
        "description": " ※prefab ID: seacocoon_top\n ※Name: Sea Cocoon\n ※prefab Version: DST-632551 "
    },
    "prefab:seacocoon_top(ReverseSearch)": {
        "prefix": "p+Sea Cocoon",
        "body": "\"seacocoon_top\"",
        "description": " ※prefab ID: seacocoon_top\n ※Name: Sea Cocoon\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_salty_food_fmt(ID Complete)": {
        "prefix": "p+quagmire_salty_food_fmt",
        "body": "\"quagmire_salty_food_fmt\"",
        "description": " ※prefab ID: quagmire_salty_food_fmt\n ※Name: Salty {food}\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_salty_food_fmt(ReverseSearch)": {
        "prefix": "p+Salty {food}",
        "body": "\"quagmire_salty_food_fmt\"",
        "description": " ※prefab ID: quagmire_salty_food_fmt\n ※Name: Salty {food}\n ※prefab Version: DST-632551 "
    },
    "prefab:plantmeat(ID Complete)": {
        "prefix": "p+plantmeat",
        "body": "\"plantmeat\"",
        "description": " ※prefab ID: plantmeat\n ※Name: Leafy Meat\n ※prefab Version: DST-632551 "
    },
    "prefab:plantmeat(ReverseSearch)": {
        "prefix": "p+Leafy Meat",
        "body": "\"plantmeat\"",
        "description": " ※prefab ID: plantmeat\n ※Name: Leafy Meat\n ※prefab Version: DST-632551 "
    },
    "prefab:boatpatch_kelp(ID Complete)": {
        "prefix": "p+boatpatch_kelp",
        "body": "\"boatpatch_kelp\"",
        "description": " ※prefab ID: boatpatch_kelp\n ※Name: Kelp Patch\n ※Recipe: \n\t+ 3 x: Kelp Fronds/kelp\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:boatpatch_kelp(ReverseSearch)": {
        "prefix": "p+Kelp Patch",
        "body": "\"boatpatch_kelp\"",
        "description": " ※prefab ID: boatpatch_kelp\n ※Name: Kelp Patch\n ※Recipe: \n\t+ 3 x: Kelp Fronds/kelp\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:kelp(ID Complete)": {
        "prefix": "p+kelp",
        "body": "\"kelp\"",
        "description": " ※prefab ID: kelp\n ※Name: Kelp Fronds\n ※prefab Version: DST-632551 "
    },
    "prefab:kelp(ReverseSearch)": {
        "prefix": "p+Kelp Fronds",
        "body": "\"kelp\"",
        "description": " ※prefab ID: kelp\n ※Name: Kelp Fronds\n ※prefab Version: DST-632551 "
    },
    "prefab:wintercooking_polishcookie(ID Complete)": {
        "prefix": "p+wintercooking_polishcookie",
        "body": "\"wintercooking_polishcookie\"",
        "description": " ※prefab ID: wintercooking_polishcookie\n ※Name: Polish Cookies\n ※Recipe: \n\t+ 1 x: Holiday Cheer/wintersfeastfuel\n\t+ 2 x: Butterfly Wings/butterflywings\n ※Required Tech: \n\t+ LV.1 : Feast/WINTERSFEASTCOOKING\n ※prefab Version: DST-632551 "
    },
    "prefab:wintercooking_polishcookie(ReverseSearch)": {
        "prefix": "p+Polish Cookies",
        "body": "\"wintercooking_polishcookie\"",
        "description": " ※prefab ID: wintercooking_polishcookie\n ※Name: Polish Cookies\n ※Recipe: \n\t+ 1 x: Holiday Cheer/wintersfeastfuel\n\t+ 2 x: Butterfly Wings/butterflywings\n ※Required Tech: \n\t+ LV.1 : Feast/WINTERSFEASTCOOKING\n ※prefab Version: DST-632551 "
    },
    "prefab:pomegranate_oversized_rotten(ID Complete)": {
        "prefix": "p+pomegranate_oversized_rotten",
        "body": "\"pomegranate_oversized_rotten\"",
        "description": " ※prefab ID: pomegranate_oversized_rotten\n ※Name: Giant Rotting Pomegranate\n ※prefab Version: DST-632551 "
    },
    "prefab:pomegranate_oversized_rotten(ReverseSearch)": {
        "prefix": "p+Giant Rotting Pomegranate",
        "body": "\"pomegranate_oversized_rotten\"",
        "description": " ※prefab ID: pomegranate_oversized_rotten\n ※Name: Giant Rotting Pomegranate\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_healinggarlandhat(ID Complete)": {
        "prefix": "p+lavaarena_healinggarlandhat",
        "body": "\"lavaarena_healinggarlandhat\"",
        "description": " ※prefab ID: lavaarena_healinggarlandhat\n ※Name: Blossomed Wreath\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_healinggarlandhat(ReverseSearch)": {
        "prefix": "p+Blossomed Wreath",
        "body": "\"lavaarena_healinggarlandhat\"",
        "description": " ※prefab ID: lavaarena_healinggarlandhat\n ※Name: Blossomed Wreath\n ※prefab Version: DST-632551 "
    },
    "prefab:winter_food4(ID Complete)": {
        "prefix": "p+winter_food4",
        "body": "\"winter_food4\"",
        "description": " ※prefab ID: winter_food4\n ※Name: Eternal Fruitcake\n ※prefab Version: DST-632551 "
    },
    "prefab:winter_food4(ReverseSearch)": {
        "prefix": "p+Eternal Fruitcake",
        "body": "\"winter_food4\"",
        "description": " ※prefab ID: winter_food4\n ※Name: Eternal Fruitcake\n ※prefab Version: DST-632551 "
    },
    "prefab:seafaring_prototyper(ID Complete)": {
        "prefix": "p+seafaring_prototyper",
        "body": "\"seafaring_prototyper\"",
        "description": " ※prefab ID: seafaring_prototyper\n ※Name: Think Tank\n ※Recipe: \n\t+ 4 x: Boards/boards\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:seafaring_prototyper(ReverseSearch)": {
        "prefix": "p+Think Tank",
        "body": "\"seafaring_prototyper\"",
        "description": " ※prefab ID: seafaring_prototyper\n ※Name: Think Tank\n ※Recipe: \n\t+ 4 x: Boards/boards\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:bishop(ID Complete)": {
        "prefix": "p+bishop",
        "body": "\"bishop\"",
        "description": " ※prefab ID: bishop\n ※Name: Clockwork Bishop\n ※prefab Version: DST-632551 "
    },
    "prefab:bishop(ReverseSearch)": {
        "prefix": "p+Clockwork Bishop",
        "body": "\"bishop\"",
        "description": " ※prefab ID: bishop\n ※Name: Clockwork Bishop\n ※prefab Version: DST-632551 "
    },
    "prefab:transistor(ID Complete)": {
        "prefix": "p+transistor",
        "body": "\"transistor\"",
        "description": " ※prefab ID: transistor\n ※Name: Electrical Doodad\n ※Recipe: \n\t+ 2 x: Gold Nugget/goldnugget\n\t+ 1 x: Cut Stone/cutstone\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:transistor(ReverseSearch)": {
        "prefix": "p+Electrical Doodad",
        "body": "\"transistor\"",
        "description": " ※prefab ID: transistor\n ※Name: Electrical Doodad\n ※Recipe: \n\t+ 2 x: Gold Nugget/goldnugget\n\t+ 1 x: Cut Stone/cutstone\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:rabbitkinghorn(ID Complete)": {
        "prefix": "p+rabbitkinghorn",
        "body": "\"rabbitkinghorn\"",
        "description": " ※prefab ID: rabbitkinghorn\n ※Name: Burrowing Horn\n ※Recipe: \n\t+ 4 x: Carrot/carrot\n\t+ 1 x: Cut Reeds/cutreeds\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:rabbitkinghorn(ReverseSearch)": {
        "prefix": "p+Burrowing Horn",
        "body": "\"rabbitkinghorn\"",
        "description": " ※prefab ID: rabbitkinghorn\n ※Name: Burrowing Horn\n ※Recipe: \n\t+ 4 x: Carrot/carrot\n\t+ 1 x: Cut Reeds/cutreeds\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:shadowthrall_mouth_allegiance(ID Complete)": {
        "prefix": "p+shadowthrall_mouth_allegiance",
        "body": "\"shadowthrall_mouth_allegiance\"",
        "description": " ※prefab ID: shadowthrall_mouth_allegiance\n ※Name: Rictus\n ※prefab Version: DST-632551 "
    },
    "prefab:shadowthrall_mouth_allegiance(ReverseSearch)": {
        "prefix": "p+Rictus",
        "body": "\"shadowthrall_mouth_allegiance\"",
        "description": " ※prefab ID: shadowthrall_mouth_allegiance\n ※Name: Rictus\n ※prefab Version: DST-632551 "
    },
    "prefab:tourtiere(ID Complete)": {
        "prefix": "p+tourtiere",
        "body": "\"tourtiere\"",
        "description": " ※prefab ID: tourtiere\n ※Name: Tourtiere\n ※prefab Version: DST-632551 "
    },
    "prefab:tourtiere(ReverseSearch)": {
        "prefix": "p+Tourtiere",
        "body": "\"tourtiere\"",
        "description": " ※prefab ID: tourtiere\n ※Name: Tourtiere\n ※prefab Version: DST-632551 "
    },
    "prefab:turnip_seeds(ID Complete)": {
        "prefix": "p+turnip_seeds",
        "body": "\"turnip_seeds\"",
        "description": " ※prefab ID: turnip_seeds\n ※Name: Round Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:turnip_seeds(ReverseSearch)": {
        "prefix": "p+Round Seeds",
        "body": "\"turnip_seeds\"",
        "description": " ※prefab ID: turnip_seeds\n ※Name: Round Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_061(ID Complete)": {
        "prefix": "p+quagmire_food_061",
        "body": "\"quagmire_food_061\"",
        "description": " ※prefab ID: quagmire_food_061\n ※Name: Shooter Sandwich\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_061(ReverseSearch)": {
        "prefix": "p+Shooter Sandwich",
        "body": "\"quagmire_food_061\"",
        "description": " ※prefab ID: quagmire_food_061\n ※Name: Shooter Sandwich\n ※prefab Version: DST-632551 "
    },
    "prefab:squid(ID Complete)": {
        "prefix": "p+squid",
        "body": "\"squid\"",
        "description": " ※prefab ID: squid\n ※Name: Skittersquid\n ※prefab Version: DST-632551 "
    },
    "prefab:squid(ReverseSearch)": {
        "prefix": "p+Skittersquid",
        "body": "\"squid\"",
        "description": " ※prefab ID: squid\n ※Name: Skittersquid\n ※prefab Version: DST-632551 "
    },
    "prefab:fig(ID Complete)": {
        "prefix": "p+fig",
        "body": "\"fig\"",
        "description": " ※prefab ID: fig\n ※Name: Fig\n ※prefab Version: DST-632551 "
    },
    "prefab:fig(ReverseSearch)": {
        "prefix": "p+Fig",
        "body": "\"fig\"",
        "description": " ※prefab ID: fig\n ※Name: Fig\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalcannon_sparkle_kit(ID Complete)": {
        "prefix": "p+carnivalcannon_sparkle_kit",
        "body": "\"carnivalcannon_sparkle_kit\"",
        "description": " ※prefab ID: carnivalcannon_sparkle_kit\n ※Name: Glitter Cannon Kit\n ※Recipe: \n\t+ 18 x: Prize Tickets/carnival_prizeticket\n ※Required Tech: \n\t+ LV.1 : Trinket Trove/CARNIVAL_PRIZESHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalcannon_sparkle_kit(ReverseSearch)": {
        "prefix": "p+Glitter Cannon Kit",
        "body": "\"carnivalcannon_sparkle_kit\"",
        "description": " ※prefab ID: carnivalcannon_sparkle_kit\n ※Name: Glitter Cannon Kit\n ※Recipe: \n\t+ 18 x: Prize Tickets/carnival_prizeticket\n ※Required Tech: \n\t+ LV.1 : Trinket Trove/CARNIVAL_PRIZESHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:charlie_heckler(ID Complete)": {
        "prefix": "p+charlie_heckler",
        "body": "\"charlie_heckler\"",
        "description": " ※prefab ID: charlie_heckler\n ※Name: Mockingbird\n ※prefab Version: DST-632551 "
    },
    "prefab:charlie_heckler(ReverseSearch)": {
        "prefix": "p+Mockingbird",
        "body": "\"charlie_heckler\"",
        "description": " ※prefab ID: charlie_heckler\n ※Name: Mockingbird\n ※prefab Version: DST-632551 "
    },
    "prefab:hivehat(ID Complete)": {
        "prefix": "p+hivehat",
        "body": "\"hivehat\"",
        "description": " ※prefab ID: hivehat\n ※Name: Bee Queen Crown\n ※Recipe: \n\t+ 4 x: Honeycomb/honeycomb\n\t+ 3 x: Honey/honey\n\t+ 2 x: Royal Jelly/royal_jelly\n\t+ 4 x: Bee/bee\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:hivehat(ReverseSearch)": {
        "prefix": "p+Bee Queen Crown",
        "body": "\"hivehat\"",
        "description": " ※prefab ID: hivehat\n ※Name: Bee Queen Crown\n ※Recipe: \n\t+ 4 x: Honeycomb/honeycomb\n\t+ 3 x: Honey/honey\n\t+ 2 x: Royal Jelly/royal_jelly\n\t+ 4 x: Bee/bee\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:nightmarefuel(ID Complete)": {
        "prefix": "p+nightmarefuel",
        "body": "\"nightmarefuel\"",
        "description": " ※prefab ID: nightmarefuel\n ※Name: Nightmare Fuel\n ※Recipe: \n\t+ 4 x: Dark Petals/petals_evil\n ※Required Tech: \n\t+ LV.2 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:nightmarefuel(ReverseSearch)": {
        "prefix": "p+Nightmare Fuel",
        "body": "\"nightmarefuel\"",
        "description": " ※prefab ID: nightmarefuel\n ※Name: Nightmare Fuel\n ※Recipe: \n\t+ 4 x: Dark Petals/petals_evil\n ※Required Tech: \n\t+ LV.2 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:orangestaff(ID Complete)": {
        "prefix": "p+orangestaff",
        "body": "\"orangestaff\"",
        "description": " ※prefab ID: orangestaff\n ※Name: The Lazy Explorer\n ※Recipe: \n\t+ 2 x: Nightmare Fuel/nightmarefuel\n\t+ 1 x: Walking Cane/cane\n\t+ 2 x: Orange Gem/orangegem\n ※Required Tech: \n\t+ LV.4 : Ancient/ANCIENT\n ※prefab Version: DST-632551 "
    },
    "prefab:orangestaff(ReverseSearch)": {
        "prefix": "p+The Lazy Explorer",
        "body": "\"orangestaff\"",
        "description": " ※prefab ID: orangestaff\n ※Name: The Lazy Explorer\n ※Recipe: \n\t+ 2 x: Nightmare Fuel/nightmarefuel\n\t+ 1 x: Walking Cane/cane\n\t+ 2 x: Orange Gem/orangegem\n ※Required Tech: \n\t+ LV.4 : Ancient/ANCIENT\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_strongdamagerhat(ID Complete)": {
        "prefix": "p+lavaarena_strongdamagerhat",
        "body": "\"lavaarena_strongdamagerhat\"",
        "description": " ※prefab ID: lavaarena_strongdamagerhat\n ※Name: Nox Helm\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_strongdamagerhat(ReverseSearch)": {
        "prefix": "p+Nox Helm",
        "body": "\"lavaarena_strongdamagerhat\"",
        "description": " ※prefab ID: lavaarena_strongdamagerhat\n ※Name: Nox Helm\n ※prefab Version: DST-632551 "
    },
    "prefab:onion_cooked(ID Complete)": {
        "prefix": "p+onion_cooked",
        "body": "\"onion_cooked\"",
        "description": " ※prefab ID: onion_cooked\n ※Name: Roasted Onion\n ※prefab Version: DST-632551 "
    },
    "prefab:onion_cooked(ReverseSearch)": {
        "prefix": "p+Roasted Onion",
        "body": "\"onion_cooked\"",
        "description": " ※prefab ID: onion_cooked\n ※Name: Roasted Onion\n ※prefab Version: DST-632551 "
    },
    "prefab:durian(ID Complete)": {
        "prefix": "p+durian",
        "body": "\"durian\"",
        "description": " ※prefab ID: durian\n ※Name: Durian\n ※prefab Version: DST-632551 "
    },
    "prefab:durian(ReverseSearch)": {
        "prefix": "p+Durian",
        "body": "\"durian\"",
        "description": " ※prefab ID: durian\n ※Name: Durian\n ※prefab Version: DST-632551 "
    },
    "prefab:decrease_oldage(ID Complete)": {
        "prefix": "p+decrease_oldage",
        "body": "\"decrease_oldage\"",
        "description": " ※prefab ID: decrease_oldage\n ※Name: Years\n ※prefab Version: DST-632551 "
    },
    "prefab:decrease_oldage(ReverseSearch)": {
        "prefix": "p+Years",
        "body": "\"decrease_oldage\"",
        "description": " ※prefab ID: decrease_oldage\n ※Name: Years\n ※prefab Version: DST-632551 "
    },
    "prefab:farm_plant_randomseed(ID Complete)": {
        "prefix": "p+farm_plant_randomseed",
        "body": "\"farm_plant_randomseed\"",
        "description": " ※prefab ID: farm_plant_randomseed\n ※Name: Planted Seed\n ※prefab Version: DST-632551 "
    },
    "prefab:farm_plant_randomseed(ReverseSearch)": {
        "prefix": "p+Planted Seed",
        "body": "\"farm_plant_randomseed\"",
        "description": " ※prefab ID: farm_plant_randomseed\n ※Name: Planted Seed\n ※prefab Version: DST-632551 "
    },
    "prefab:trunk_winter(ID Complete)": {
        "prefix": "p+trunk_winter",
        "body": "\"trunk_winter\"",
        "description": " ※prefab ID: trunk_winter\n ※Name: Winter Koalefant Trunk\n ※prefab Version: DST-632551 "
    },
    "prefab:trunk_winter(ReverseSearch)": {
        "prefix": "p+Winter Koalefant Trunk",
        "body": "\"trunk_winter\"",
        "description": " ※prefab ID: trunk_winter\n ※Name: Winter Koalefant Trunk\n ※prefab Version: DST-632551 "
    },
    "prefab:book_elemental(ID Complete)": {
        "prefix": "p+book_elemental",
        "body": "\"book_elemental\"",
        "description": " ※prefab ID: book_elemental\n ※Name: Tome of Beckoning\n ※prefab Version: DST-632551 "
    },
    "prefab:book_elemental(ReverseSearch)": {
        "prefix": "p+Tome of Beckoning",
        "body": "\"book_elemental\"",
        "description": " ※prefab ID: book_elemental\n ※Name: Tome of Beckoning\n ※prefab Version: DST-632551 "
    },
    "prefab:lunarplant_kit(ID Complete)": {
        "prefix": "p+lunarplant_kit",
        "body": "\"lunarplant_kit\"",
        "description": " ※prefab ID: lunarplant_kit\n ※Name: Brightshade Repair Kit\n ※Recipe: \n\t+ 1 x: Pure Brilliance/purebrilliance\n\t+ 1 x: Brightshade Husk/lunarplant_husk\n ※Required Tech: \n\t+ LV.2 : Brightsmithy/LUNARFORGING\n ※prefab Version: DST-632551 "
    },
    "prefab:lunarplant_kit(ReverseSearch)": {
        "prefix": "p+Brightshade Repair Kit",
        "body": "\"lunarplant_kit\"",
        "description": " ※prefab ID: lunarplant_kit\n ※Name: Brightshade Repair Kit\n ※Recipe: \n\t+ 1 x: Pure Brilliance/purebrilliance\n\t+ 1 x: Brightshade Husk/lunarplant_husk\n ※Required Tech: \n\t+ LV.2 : Brightsmithy/LUNARFORGING\n ※prefab Version: DST-632551 "
    },
    "prefab:pighead(ID Complete)": {
        "prefix": "p+pighead",
        "body": "\"pighead\"",
        "description": " ※prefab ID: pighead\n ※Name: Pig Head\n ※Recipe: \n\t+ 4 x: Pig Skin/pigskin\n\t+ 4 x: Twigs/twigs\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:pighead(ReverseSearch)": {
        "prefix": "p+Pig Head",
        "body": "\"pighead\"",
        "description": " ※prefab ID: pighead\n ※Name: Pig Head\n ※Recipe: \n\t+ 4 x: Pig Skin/pigskin\n\t+ 4 x: Twigs/twigs\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:smallbird(ID Complete)": {
        "prefix": "p+smallbird",
        "body": "\"smallbird\"",
        "description": " ※prefab ID: smallbird\n ※Name: Smallbird\n ※prefab Version: DST-632551 "
    },
    "prefab:smallbird(ReverseSearch)": {
        "prefix": "p+Smallbird",
        "body": "\"smallbird\"",
        "description": " ※prefab ID: smallbird\n ※Name: Smallbird\n ※prefab Version: DST-632551 "
    },
    "prefab:beehat(ID Complete)": {
        "prefix": "p+beehat",
        "body": "\"beehat\"",
        "description": " ※prefab ID: beehat\n ※Name: Beekeeper Hat\n ※Recipe: \n\t+ 8 x: Silk/silk\n\t+ 1 x: Rope/rope\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:beehat(ReverseSearch)": {
        "prefix": "p+Beekeeper Hat",
        "body": "\"beehat\"",
        "description": " ※prefab ID: beehat\n ※Name: Beekeeper Hat\n ※Recipe: \n\t+ 8 x: Silk/silk\n\t+ 1 x: Rope/rope\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:lost_toy_10(ID Complete)": {
        "prefix": "p+lost_toy_10",
        "body": "\"lost_toy_10\"",
        "description": " ※prefab ID: lost_toy_10\n ※Name: Missing Teeth\n ※prefab Version: DST-632551 "
    },
    "prefab:lost_toy_10(ReverseSearch)": {
        "prefix": "p+Missing Teeth",
        "body": "\"lost_toy_10\"",
        "description": " ※prefab ID: lost_toy_10\n ※Name: Missing Teeth\n ※prefab Version: DST-632551 "
    },
    "prefab:moonstorm_static(ID Complete)": {
        "prefix": "p+moonstorm_static",
        "body": "\"moonstorm_static\"",
        "description": " ※prefab ID: moonstorm_static\n ※Name: Energetic Static\n ※prefab Version: DST-632551 "
    },
    "prefab:moonstorm_static(ReverseSearch)": {
        "prefix": "p+Energetic Static",
        "body": "\"moonstorm_static\"",
        "description": " ※prefab ID: moonstorm_static\n ※Name: Energetic Static\n ※prefab Version: DST-632551 "
    },
    "prefab:fishingrod(ID Complete)": {
        "prefix": "p+fishingrod",
        "body": "\"fishingrod\"",
        "description": " ※prefab ID: fishingrod\n ※Name: Freshwater Fishing Rod\n ※Recipe: \n\t+ 2 x: Twigs/twigs\n\t+ 2 x: Silk/silk\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:fishingrod(ReverseSearch)": {
        "prefix": "p+Freshwater Fishing Rod",
        "body": "\"fishingrod\"",
        "description": " ※prefab ID: fishingrod\n ※Name: Freshwater Fishing Rod\n ※Recipe: \n\t+ 2 x: Twigs/twigs\n\t+ 2 x: Silk/silk\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:mushroomhat(ID Complete)": {
        "prefix": "p+mushroomhat",
        "body": "\"mushroomhat\"",
        "description": " ※prefab ID: mushroomhat\n ※Name: Funcap\n ※prefab Version: DST-632551 "
    },
    "prefab:mushroomhat(ReverseSearch)": {
        "prefix": "p+Funcap",
        "body": "\"mushroomhat\"",
        "description": " ※prefab ID: mushroomhat\n ※Name: Funcap\n ※prefab Version: DST-632551 "
    },
    "prefab:beeguard(ID Complete)": {
        "prefix": "p+beeguard",
        "body": "\"beeguard\"",
        "description": " ※prefab ID: beeguard\n ※Name: Grumble Bee\n ※prefab Version: DST-632551 "
    },
    "prefab:beeguard(ReverseSearch)": {
        "prefix": "p+Grumble Bee",
        "body": "\"beeguard\"",
        "description": " ※prefab ID: beeguard\n ※Name: Grumble Bee\n ※prefab Version: DST-632551 "
    },
    "prefab:cotl_tabernacle_level2(ID Complete)": {
        "prefix": "p+cotl_tabernacle_level2",
        "body": "\"cotl_tabernacle_level2\"",
        "description": " ※prefab ID: cotl_tabernacle_level2\n ※Name: Improved Lamb Idol\n ※prefab Version: DST-632551 "
    },
    "prefab:cotl_tabernacle_level2(ReverseSearch)": {
        "prefix": "p+Improved Lamb Idol",
        "body": "\"cotl_tabernacle_level2\"",
        "description": " ※prefab ID: cotl_tabernacle_level2\n ※Name: Improved Lamb Idol\n ※prefab Version: DST-632551 "
    },
    "prefab:moon_tree(ID Complete)": {
        "prefix": "p+moon_tree",
        "body": "\"moon_tree\"",
        "description": " ※prefab ID: moon_tree\n ※Name: Lune Tree\n ※prefab Version: DST-632551 "
    },
    "prefab:moon_tree(ReverseSearch)": {
        "prefix": "p+Lune Tree",
        "body": "\"moon_tree\"",
        "description": " ※prefab ID: moon_tree\n ※Name: Lune Tree\n ※prefab Version: DST-632551 "
    },
    "prefab:wall_ruins_2(ID Complete)": {
        "prefix": "p+wall_ruins_2",
        "body": "\"wall_ruins_2\"",
        "description": " ※prefab ID: wall_ruins_2\n ※Name: Archival Thulecite Wall\n ※prefab Version: DST-632551 "
    },
    "prefab:wall_ruins_2(ReverseSearch)": {
        "prefix": "p+Archival Thulecite Wall",
        "body": "\"wall_ruins_2\"",
        "description": " ※prefab ID: wall_ruins_2\n ※Name: Archival Thulecite Wall\n ※prefab Version: DST-632551 "
    },
    "prefab:fishsticks(ID Complete)": {
        "prefix": "p+fishsticks",
        "body": "\"fishsticks\"",
        "description": " ※prefab ID: fishsticks\n ※Name: Fishsticks\n ※prefab Version: DST-632551 "
    },
    "prefab:fishsticks(ReverseSearch)": {
        "prefix": "p+Fishsticks",
        "body": "\"fishsticks\"",
        "description": " ※prefab ID: fishsticks\n ※Name: Fishsticks\n ※prefab Version: DST-632551 "
    },
    "prefab:dug_rock_avocado_bush(ID Complete)": {
        "prefix": "p+dug_rock_avocado_bush",
        "body": "\"dug_rock_avocado_bush\"",
        "description": " ※prefab ID: dug_rock_avocado_bush\n ※Name: Stone Fruit Bush\n ※prefab Version: DST-632551 "
    },
    "prefab:dug_rock_avocado_bush(ReverseSearch)": {
        "prefix": "p+Stone Fruit Bush",
        "body": "\"dug_rock_avocado_bush\"",
        "description": " ※prefab ID: dug_rock_avocado_bush\n ※Name: Stone Fruit Bush\n ※prefab Version: DST-632551 "
    },
    "prefab:halloweencandy_12(ID Complete)": {
        "prefix": "p+halloweencandy_12",
        "body": "\"halloweencandy_12\"",
        "description": " ※prefab ID: halloweencandy_12\n ※Name: Candy Lice\n ※prefab Version: DST-632551 "
    },
    "prefab:halloweencandy_12(ReverseSearch)": {
        "prefix": "p+Candy Lice",
        "body": "\"halloweencandy_12\"",
        "description": " ※prefab ID: halloweencandy_12\n ※Name: Candy Lice\n ※prefab Version: DST-632551 "
    },
    "prefab:trunkvest_summer(ID Complete)": {
        "prefix": "p+trunkvest_summer",
        "body": "\"trunkvest_summer\"",
        "description": " ※prefab ID: trunkvest_summer\n ※Name: Breezy Vest\n ※Recipe: \n\t+ 1 x: Koalefant Trunk/trunk_summer\n\t+ 8 x: Silk/silk\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:trunkvest_summer(ReverseSearch)": {
        "prefix": "p+Breezy Vest",
        "body": "\"trunkvest_summer\"",
        "description": " ※prefab ID: trunkvest_summer\n ※Name: Breezy Vest\n ※Recipe: \n\t+ 1 x: Koalefant Trunk/trunk_summer\n\t+ 8 x: Silk/silk\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_malbatross_builder(ID Complete)": {
        "prefix": "p+chesspiece_malbatross_builder",
        "body": "\"chesspiece_malbatross_builder\"",
        "description": " ※prefab ID: chesspiece_malbatross_builder\n ※Name: Malbatross Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_malbatross_builder(ReverseSearch)": {
        "prefix": "p+Malbatross Figure",
        "body": "\"chesspiece_malbatross_builder\"",
        "description": " ※prefab ID: chesspiece_malbatross_builder\n ※Name: Malbatross Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_armorlightspeed(ID Complete)": {
        "prefix": "p+lavaarena_armorlightspeed",
        "body": "\"lavaarena_armorlightspeed\"",
        "description": " ※prefab ID: lavaarena_armorlightspeed\n ※Name: Feathered Reed Tunic\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_armorlightspeed(ReverseSearch)": {
        "prefix": "p+Feathered Reed Tunic",
        "body": "\"lavaarena_armorlightspeed\"",
        "description": " ※prefab ID: lavaarena_armorlightspeed\n ※Name: Feathered Reed Tunic\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_park_obelisk(ID Complete)": {
        "prefix": "p+quagmire_park_obelisk",
        "body": "\"quagmire_park_obelisk\"",
        "description": " ※prefab ID: quagmire_park_obelisk\n ※Name: Stone Pillar\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_park_obelisk(ReverseSearch)": {
        "prefix": "p+Stone Pillar",
        "body": "\"quagmire_park_obelisk\"",
        "description": " ※prefab ID: quagmire_park_obelisk\n ※Name: Stone Pillar\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_027(ID Complete)": {
        "prefix": "p+quagmire_food_027",
        "body": "\"quagmire_food_027\"",
        "description": " ※prefab ID: quagmire_food_027\n ※Name: Sausage\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_027(ReverseSearch)": {
        "prefix": "p+Sausage",
        "body": "\"quagmire_food_027\"",
        "description": " ※prefab ID: quagmire_food_027\n ※Name: Sausage\n ※prefab Version: DST-632551 "
    },
    "prefab:cactus(ID Complete)": {
        "prefix": "p+cactus",
        "body": "\"cactus\"",
        "description": " ※prefab ID: cactus\n ※Name: Cactus\n ※prefab Version: DST-632551 "
    },
    "prefab:cactus(ReverseSearch)": {
        "prefix": "p+Cactus",
        "body": "\"cactus\"",
        "description": " ※prefab ID: cactus\n ※Name: Cactus\n ※prefab Version: DST-632551 "
    },
    "prefab:yotr_food3(ID Complete)": {
        "prefix": "p+yotr_food3",
        "body": "\"yotr_food3\"",
        "description": " ※prefab ID: yotr_food3\n ※Name: Moon Jelly\n ※Recipe: \n\t+ 5 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /RABBITOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:yotr_food3(ReverseSearch)": {
        "prefix": "p+Moon Jelly",
        "body": "\"yotr_food3\"",
        "description": " ※prefab ID: yotr_food3\n ※Name: Moon Jelly\n ※Recipe: \n\t+ 5 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /RABBITOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:halloweenpotion_bravery_small(ID Complete)": {
        "prefix": "p+halloweenpotion_bravery_small",
        "body": "\"halloweenpotion_bravery_small\"",
        "description": " ※prefab ID: halloweenpotion_bravery_small\n ※Name: Brew of Phobic Abatement\n ※prefab Version: DST-632551 "
    },
    "prefab:halloweenpotion_bravery_small(ReverseSearch)": {
        "prefix": "p+Brew of Phobic Abatement",
        "body": "\"halloweenpotion_bravery_small\"",
        "description": " ※prefab ID: halloweenpotion_bravery_small\n ※Name: Brew of Phobic Abatement\n ※prefab Version: DST-632551 "
    },
    "prefab:yotr_token(ID Complete)": {
        "prefix": "p+yotr_token",
        "body": "\"yotr_token\"",
        "description": " ※prefab ID: yotr_token\n ※Name: Glove of Challenge\n ※Recipe: \n\t+ 1 x: Gold Nugget/goldnugget\n ※Required Tech: \n\t+ LV.3 : /RABBITOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:yotr_token(ReverseSearch)": {
        "prefix": "p+Glove of Challenge",
        "body": "\"yotr_token\"",
        "description": " ※prefab ID: yotr_token\n ※Name: Glove of Challenge\n ※Recipe: \n\t+ 1 x: Gold Nugget/goldnugget\n ※Required Tech: \n\t+ LV.3 : /RABBITOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_antchovy(ID Complete)": {
        "prefix": "p+oceanfish_antchovy",
        "body": "\"oceanfish_antchovy\"",
        "description": " ※prefab ID: oceanfish_antchovy\n ※Name: Antchovy\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_antchovy(ReverseSearch)": {
        "prefix": "p+Antchovy",
        "body": "\"oceanfish_antchovy\"",
        "description": " ※prefab ID: oceanfish_antchovy\n ※Name: Antchovy\n ※prefab Version: DST-632551 "
    },
    "prefab:book_fish(ID Complete)": {
        "prefix": "p+book_fish",
        "body": "\"book_fish\"",
        "description": " ※prefab ID: book_fish\n ※Name: The Angler's Survival Guide\n ※Recipe: \n\t+ 2 x: Papyrus/papyrus\n\t+ 2 x: Wooden Ball Bobber/oceanfishingbobber_ball\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:book_fish(ReverseSearch)": {
        "prefix": "p+The Angler's Survival Guide",
        "body": "\"book_fish\"",
        "description": " ※prefab ID: book_fish\n ※Name: The Angler's Survival Guide\n ※Recipe: \n\t+ 2 x: Papyrus/papyrus\n\t+ 2 x: Wooden Ball Bobber/oceanfishingbobber_ball\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:armordragonfly(ID Complete)": {
        "prefix": "p+armordragonfly",
        "body": "\"armordragonfly\"",
        "description": " ※prefab ID: armordragonfly\n ※Name: Scalemail\n ※Recipe: \n\t+ 1 x: Scales/dragon_scales\n\t+ 1 x: Log Suit/armorwood\n\t+ 3 x: Pig Skin/pigskin\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:armordragonfly(ReverseSearch)": {
        "prefix": "p+Scalemail",
        "body": "\"armordragonfly\"",
        "description": " ※prefab ID: armordragonfly\n ※Name: Scalemail\n ※Recipe: \n\t+ 1 x: Scales/dragon_scales\n\t+ 1 x: Log Suit/armorwood\n\t+ 3 x: Pig Skin/pigskin\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_hornucopia(ID Complete)": {
        "prefix": "p+chesspiece_hornucopia",
        "body": "\"chesspiece_hornucopia\"",
        "description": " ※prefab ID: chesspiece_hornucopia\n ※Name: Carved Hornucopia\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_hornucopia(ReverseSearch)": {
        "prefix": "p+Carved Hornucopia",
        "body": "\"chesspiece_hornucopia\"",
        "description": " ※prefab ID: chesspiece_hornucopia\n ※Name: Carved Hornucopia\n ※prefab Version: DST-632551 "
    },
    "prefab:mermthrone_construction(ID Complete)": {
        "prefix": "p+mermthrone_construction",
        "body": "\"mermthrone_construction\"",
        "description": " ※prefab ID: mermthrone_construction\n ※Name: DIY Royalty Kit\n ※Recipe: \n\t+ 5 x: Boards/boards\n\t+ 5 x: Rope/rope\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:mermthrone_construction(ReverseSearch)": {
        "prefix": "p+DIY Royalty Kit",
        "body": "\"mermthrone_construction\"",
        "description": " ※prefab ID: mermthrone_construction\n ※Name: DIY Royalty Kit\n ※Recipe: \n\t+ 5 x: Boards/boards\n\t+ 5 x: Rope/rope\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:book_gardening(ID Complete)": {
        "prefix": "p+book_gardening",
        "body": "\"book_gardening\"",
        "description": " ※prefab ID: book_gardening\n ※Name: Applied Horticulture\n ※Recipe: \n\t+ 2 x: Papyrus/papyrus\n\t+ 1 x: Seeds/seeds\n\t+ 1 x: Manure/poop\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:book_gardening(ReverseSearch)": {
        "prefix": "p+Applied Horticulture",
        "body": "\"book_gardening\"",
        "description": " ※prefab ID: book_gardening\n ※Name: Applied Horticulture\n ※Recipe: \n\t+ 2 x: Papyrus/papyrus\n\t+ 1 x: Seeds/seeds\n\t+ 1 x: Manure/poop\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:wx78_scanner(ID Complete)": {
        "prefix": "p+wx78_scanner",
        "body": "\"wx78_scanner\"",
        "description": " ※prefab ID: wx78_scanner\n ※Name: Bio Scanalyzer\n ※prefab Version: DST-632551 "
    },
    "prefab:wx78_scanner(ReverseSearch)": {
        "prefix": "p+Bio Scanalyzer",
        "body": "\"wx78_scanner\"",
        "description": " ※prefab ID: wx78_scanner\n ※Name: Bio Scanalyzer\n ※prefab Version: DST-632551 "
    },
    "prefab:dragontailhat(ID Complete)": {
        "prefix": "p+dragontailhat",
        "body": "\"dragontailhat\"",
        "description": " ※prefab ID: dragontailhat\n ※Name: Lucky Beast Tail\n ※Recipe: \n\t+ 8 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.1 : Offerings/PERDOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:dragontailhat(ReverseSearch)": {
        "prefix": "p+Lucky Beast Tail",
        "body": "\"dragontailhat\"",
        "description": " ※prefab ID: dragontailhat\n ※Name: Lucky Beast Tail\n ※Recipe: \n\t+ 8 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.1 : Offerings/PERDOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:pigman(ID Complete)": {
        "prefix": "p+pigman",
        "body": "\"pigman\"",
        "description": " ※prefab ID: pigman\n ※Name: Pig Man\n ※prefab Version: DST-632551 "
    },
    "prefab:pigman(ReverseSearch)": {
        "prefix": "p+Pig Man",
        "body": "\"pigman\"",
        "description": " ※prefab ID: pigman\n ※Name: Pig Man\n ※prefab Version: DST-632551 "
    },
    "prefab:moonglass_rock(ID Complete)": {
        "prefix": "p+moonglass_rock",
        "body": "\"moonglass_rock\"",
        "description": " ※prefab ID: moonglass_rock\n ※Name: Moon Glass\n ※prefab Version: DST-632551 "
    },
    "prefab:moonglass_rock(ReverseSearch)": {
        "prefix": "p+Moon Glass",
        "body": "\"moonglass_rock\"",
        "description": " ※prefab ID: moonglass_rock\n ※Name: Moon Glass\n ※prefab Version: DST-632551 "
    },
    "prefab:blueprint_craftingset_ruinsglow_builder(ID Complete)": {
        "prefix": "p+blueprint_craftingset_ruinsglow_builder",
        "body": "\"blueprint_craftingset_ruinsglow_builder\"",
        "description": " ※prefab ID: blueprint_craftingset_ruinsglow_builder\n ※Name: Imitation Ruins Turf Blueprints\n ※Recipe: \n\t+ 3 x: Papyrus/papyrus\n ※Required Tech: \n\t+ LV.2 : Ancient/ANCIENT\n ※prefab Version: DST-632551 "
    },
    "prefab:blueprint_craftingset_ruinsglow_builder(ReverseSearch)": {
        "prefix": "p+Imitation Ruins Turf Blueprints",
        "body": "\"blueprint_craftingset_ruinsglow_builder\"",
        "description": " ※prefab ID: blueprint_craftingset_ruinsglow_builder\n ※Name: Imitation Ruins Turf Blueprints\n ※Recipe: \n\t+ 3 x: Papyrus/papyrus\n ※Required Tech: \n\t+ LV.2 : Ancient/ANCIENT\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_daywalker_sketch(ID Complete)": {
        "prefix": "p+chesspiece_daywalker_sketch",
        "body": "\"chesspiece_daywalker_sketch\"",
        "description": " ※prefab ID: chesspiece_daywalker_sketch\n ※Name: Nightmare Werepig Figure Sketch\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_daywalker_sketch(ReverseSearch)": {
        "prefix": "p+Nightmare Werepig Figure Sketch",
        "body": "\"chesspiece_daywalker_sketch\"",
        "description": " ※prefab ID: chesspiece_daywalker_sketch\n ※Name: Nightmare Werepig Figure Sketch\n ※prefab Version: DST-632551 "
    },
    "prefab:moonstorm_glass(ID Complete)": {
        "prefix": "p+moonstorm_glass",
        "body": "\"moonstorm_glass\"",
        "description": " ※prefab ID: moonstorm_glass\n ※Name: Charged Glassy Rock\n ※prefab Version: DST-632551 "
    },
    "prefab:moonstorm_glass(ReverseSearch)": {
        "prefix": "p+Charged Glassy Rock",
        "body": "\"moonstorm_glass\"",
        "description": " ※prefab ID: moonstorm_glass\n ※Name: Charged Glassy Rock\n ※prefab Version: DST-632551 "
    },
    "prefab:powder_monkey(ID Complete)": {
        "prefix": "p+powder_monkey",
        "body": "\"powder_monkey\"",
        "description": " ※prefab ID: powder_monkey\n ※Name: Powder Monkey\n ※prefab Version: DST-632551 "
    },
    "prefab:powder_monkey(ReverseSearch)": {
        "prefix": "p+Powder Monkey",
        "body": "\"powder_monkey\"",
        "description": " ※prefab ID: powder_monkey\n ※Name: Powder Monkey\n ※prefab Version: DST-632551 "
    },
    "prefab:merm_toolshed(ID Complete)": {
        "prefix": "p+merm_toolshed",
        "body": "\"merm_toolshed\"",
        "description": " ※prefab ID: merm_toolshed\n ※Name: Shoddy Tool Shed\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 5 x: Twigs/twigs\n\t+ 5 x: Rocks/rocks\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:merm_toolshed(ReverseSearch)": {
        "prefix": "p+Shoddy Tool Shed",
        "body": "\"merm_toolshed\"",
        "description": " ※prefab ID: merm_toolshed\n ※Name: Shoddy Tool Shed\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 5 x: Twigs/twigs\n\t+ 5 x: Rocks/rocks\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:book_web(ID Complete)": {
        "prefix": "p+book_web",
        "body": "\"book_web\"",
        "description": " ※prefab ID: book_web\n ※Name: Overcoming Arachnophobia\n ※Recipe: \n\t+ 2 x: Papyrus/papyrus\n\t+ 8 x: Silk/silk\n ※Required Tech: \n\t+ LV.1 : /BOOKCRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:book_web(ReverseSearch)": {
        "prefix": "p+Overcoming Arachnophobia",
        "body": "\"book_web\"",
        "description": " ※prefab ID: book_web\n ※Name: Overcoming Arachnophobia\n ※Recipe: \n\t+ 2 x: Papyrus/papyrus\n\t+ 8 x: Silk/silk\n ※Required Tech: \n\t+ LV.1 : /BOOKCRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:offering_pot(ID Complete)": {
        "prefix": "p+offering_pot",
        "body": "\"offering_pot\"",
        "description": " ※prefab ID: offering_pot\n ※Name: Communal Kelp Dish\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 2 x: Cut Reeds/cutreeds\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:offering_pot(ReverseSearch)": {
        "prefix": "p+Communal Kelp Dish",
        "body": "\"offering_pot\"",
        "description": " ※prefab ID: offering_pot\n ※Name: Communal Kelp Dish\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 2 x: Cut Reeds/cutreeds\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:boat_leak(ID Complete)": {
        "prefix": "p+boat_leak",
        "body": "\"boat_leak\"",
        "description": " ※prefab ID: boat_leak\n ※Name: Leak\n ※prefab Version: DST-632551 "
    },
    "prefab:boat_leak(ReverseSearch)": {
        "prefix": "p+Leak",
        "body": "\"boat_leak\"",
        "description": " ※prefab ID: boat_leak\n ※Name: Leak\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivaldecor_lamp_kit(ID Complete)": {
        "prefix": "p+carnivaldecor_lamp_kit",
        "body": "\"carnivaldecor_lamp_kit\"",
        "description": " ※prefab ID: carnivaldecor_lamp_kit\n ※Name: Midsummer Night Light Kit\n ※Recipe: \n\t+ 48 x: Prize Tickets/carnival_prizeticket\n ※Required Tech: \n\t+ LV.1 : Trinket Trove/CARNIVAL_PRIZESHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivaldecor_lamp_kit(ReverseSearch)": {
        "prefix": "p+Midsummer Night Light Kit",
        "body": "\"carnivaldecor_lamp_kit\"",
        "description": " ※prefab ID: carnivaldecor_lamp_kit\n ※Name: Midsummer Night Light Kit\n ※Recipe: \n\t+ 48 x: Prize Tickets/carnival_prizeticket\n ※Required Tech: \n\t+ LV.1 : Trinket Trove/CARNIVAL_PRIZESHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalgame_feedchicks_food(ID Complete)": {
        "prefix": "p+carnivalgame_feedchicks_food",
        "body": "\"carnivalgame_feedchicks_food\"",
        "description": " ※prefab ID: carnivalgame_feedchicks_food\n ※Name: Grub\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalgame_feedchicks_food(ReverseSearch)": {
        "prefix": "p+Grub",
        "body": "\"carnivalgame_feedchicks_food\"",
        "description": " ※prefab ID: carnivalgame_feedchicks_food\n ※Name: Grub\n ※prefab Version: DST-632551 "
    },
    "prefab:lunarrift_crystal_big(ID Complete)": {
        "prefix": "p+lunarrift_crystal_big",
        "body": "\"lunarrift_crystal_big\"",
        "description": " ※prefab ID: lunarrift_crystal_big\n ※Name: Ryftstal\n ※prefab Version: DST-632551 "
    },
    "prefab:lunarrift_crystal_big(ReverseSearch)": {
        "prefix": "p+Ryftstal",
        "body": "\"lunarrift_crystal_big\"",
        "description": " ※prefab ID: lunarrift_crystal_big\n ※Name: Ryftstal\n ※prefab Version: DST-632551 "
    },
    "prefab:boneshard(ID Complete)": {
        "prefix": "p+boneshard",
        "body": "\"boneshard\"",
        "description": " ※prefab ID: boneshard\n ※Name: Bone Shards\n ※prefab Version: DST-632551 "
    },
    "prefab:boneshard(ReverseSearch)": {
        "prefix": "p+Bone Shards",
        "body": "\"boneshard\"",
        "description": " ※prefab ID: boneshard\n ※Name: Bone Shards\n ※prefab Version: DST-632551 "
    },
    "prefab:wonkey(ID Complete)": {
        "prefix": "p+wonkey",
        "body": "\"wonkey\"",
        "description": " ※prefab ID: wonkey\n ※Name: Wonkey\n ※prefab Version: DST-632551 "
    },
    "prefab:wonkey(ReverseSearch)": {
        "prefix": "p+Wonkey",
        "body": "\"wonkey\"",
        "description": " ※prefab ID: wonkey\n ※Name: Wonkey\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_klaus(ID Complete)": {
        "prefix": "p+chesspiece_klaus",
        "body": "\"chesspiece_klaus\"",
        "description": " ※prefab ID: chesspiece_klaus\n ※Name: Klaus Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_klaus(ReverseSearch)": {
        "prefix": "p+Klaus Figure",
        "body": "\"chesspiece_klaus\"",
        "description": " ※prefab ID: chesspiece_klaus\n ※Name: Klaus Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:moonrockseed(ID Complete)": {
        "prefix": "p+moonrockseed",
        "body": "\"moonrockseed\"",
        "description": " ※prefab ID: moonrockseed\n ※Name: Celestial Orb\n ※prefab Version: DST-632551 "
    },
    "prefab:moonrockseed(ReverseSearch)": {
        "prefix": "p+Celestial Orb",
        "body": "\"moonrockseed\"",
        "description": " ※prefab ID: moonrockseed\n ※Name: Celestial Orb\n ※prefab Version: DST-632551 "
    },
    "prefab:bonestew(ID Complete)": {
        "prefix": "p+bonestew",
        "body": "\"bonestew\"",
        "description": " ※prefab ID: bonestew\n ※Name: Meaty Stew\n ※prefab Version: DST-632551 "
    },
    "prefab:bonestew(ReverseSearch)": {
        "prefix": "p+Meaty Stew",
        "body": "\"bonestew\"",
        "description": " ※prefab ID: bonestew\n ※Name: Meaty Stew\n ※prefab Version: DST-632551 "
    },
    "prefab:trap_teeth(ID Complete)": {
        "prefix": "p+trap_teeth",
        "body": "\"trap_teeth\"",
        "description": " ※prefab ID: trap_teeth\n ※Name: Tooth Trap\n ※Recipe: \n\t+ 1 x: Log/log\n\t+ 1 x: Rope/rope\n\t+ 1 x: Hound's Tooth/houndstooth\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:trap_teeth(ReverseSearch)": {
        "prefix": "p+Tooth Trap",
        "body": "\"trap_teeth\"",
        "description": " ※prefab ID: trap_teeth\n ※Name: Tooth Trap\n ※Recipe: \n\t+ 1 x: Log/log\n\t+ 1 x: Rope/rope\n\t+ 1 x: Hound's Tooth/houndstooth\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_carrat_sketch(ID Complete)": {
        "prefix": "p+chesspiece_carrat_sketch",
        "body": "\"chesspiece_carrat_sketch\"",
        "description": " ※prefab ID: chesspiece_carrat_sketch\n ※Name: Carrat Figure Sketch\n ※Recipe: \n\t+ 8 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /CARRATOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_carrat_sketch(ReverseSearch)": {
        "prefix": "p+Carrat Figure Sketch",
        "body": "\"chesspiece_carrat_sketch\"",
        "description": " ※prefab ID: chesspiece_carrat_sketch\n ※Name: Carrat Figure Sketch\n ※Recipe: \n\t+ 8 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /CARRATOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:carnival_plaza_kit(ID Complete)": {
        "prefix": "p+carnival_plaza_kit",
        "body": "\"carnival_plaza_kit\"",
        "description": " ※prefab ID: carnival_plaza_kit\n ※Name: Cawnival Sapling\n ※Recipe: \n\t+ 1 x: Gold Nugget/goldnugget\n\t+ 3 x: Seeds/seeds\n ※Required Tech: \n\t+ LV.1 : Cawnival Creation/CARNIVAL_HOSTSHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:carnival_plaza_kit(ReverseSearch)": {
        "prefix": "p+Cawnival Sapling",
        "body": "\"carnival_plaza_kit\"",
        "description": " ※prefab ID: carnival_plaza_kit\n ※Name: Cawnival Sapling\n ※Recipe: \n\t+ 1 x: Gold Nugget/goldnugget\n\t+ 3 x: Seeds/seeds\n ※Required Tech: \n\t+ LV.1 : Cawnival Creation/CARNIVAL_HOSTSHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_park_angel2(ID Complete)": {
        "prefix": "p+quagmire_park_angel2",
        "body": "\"quagmire_park_angel2\"",
        "description": " ※prefab ID: quagmire_park_angel2\n ※Name: Gnaw Worshipper\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_park_angel2(ReverseSearch)": {
        "prefix": "p+Gnaw Worshipper",
        "body": "\"quagmire_park_angel2\"",
        "description": " ※prefab ID: quagmire_park_angel2\n ※Name: Gnaw Worshipper\n ※prefab Version: DST-632551 "
    },
    "prefab:cookingrecipecard(ID Complete)": {
        "prefix": "p+cookingrecipecard",
        "body": "\"cookingrecipecard\"",
        "description": " ※prefab ID: cookingrecipecard\n ※Name: {item} Recipe Card\n ※prefab Version: DST-632551 "
    },
    "prefab:cookingrecipecard(ReverseSearch)": {
        "prefix": "p+{item} Recipe Card",
        "body": "\"cookingrecipecard\"",
        "description": " ※prefab ID: cookingrecipecard\n ※Name: {item} Recipe Card\n ※prefab Version: DST-632551 "
    },
    "prefab:goggleshat(ID Complete)": {
        "prefix": "p+goggleshat",
        "body": "\"goggleshat\"",
        "description": " ※prefab ID: goggleshat\n ※Name: Fashion Goggles\n ※Recipe: \n\t+ 1 x: Gold Nugget/goldnugget\n\t+ 1 x: Pig Skin/pigskin\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:goggleshat(ReverseSearch)": {
        "prefix": "p+Fashion Goggles",
        "body": "\"goggleshat\"",
        "description": " ※prefab ID: goggleshat\n ※Name: Fashion Goggles\n ※Recipe: \n\t+ 1 x: Gold Nugget/goldnugget\n\t+ 1 x: Pig Skin/pigskin\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:wagstaff_tool_3_layman(ID Complete)": {
        "prefix": "p+wagstaff_tool_3_layman",
        "body": "\"wagstaff_tool_3_layman\"",
        "description": " ※prefab ID: wagstaff_tool_3_layman\n ※Name: Strange Tool\n ※prefab Version: DST-632551 "
    },
    "prefab:wagstaff_tool_3_layman(ReverseSearch)": {
        "prefix": "p+Strange Tool",
        "body": "\"wagstaff_tool_3_layman\"",
        "description": " ※prefab ID: wagstaff_tool_3_layman\n ※Name: Strange Tool\n ※prefab Version: DST-632551 "
    },
    "prefab:armorgrass(ID Complete)": {
        "prefix": "p+armorgrass",
        "body": "\"armorgrass\"",
        "description": " ※prefab ID: armorgrass\n ※Name: Grass Suit\n ※Recipe: \n\t+ 10 x: Cut Grass/cutgrass\n\t+ 2 x: Twigs/twigs\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:armorgrass(ReverseSearch)": {
        "prefix": "p+Grass Suit",
        "body": "\"armorgrass\"",
        "description": " ※prefab ID: armorgrass\n ※Name: Grass Suit\n ※Recipe: \n\t+ 10 x: Cut Grass/cutgrass\n\t+ 2 x: Twigs/twigs\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:yellowmooneye(ID Complete)": {
        "prefix": "p+yellowmooneye",
        "body": "\"yellowmooneye\"",
        "description": " ※prefab ID: yellowmooneye\n ※Name: Yellow Moonlens\n ※Recipe: \n\t+ 1 x: Cratered Moonrock/moonrockcrater\n\t+ 1 x: Yellow Gem/yellowgem\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:yellowmooneye(ReverseSearch)": {
        "prefix": "p+Yellow Moonlens",
        "body": "\"yellowmooneye\"",
        "description": " ※prefab ID: yellowmooneye\n ※Name: Yellow Moonlens\n ※Recipe: \n\t+ 1 x: Cratered Moonrock/moonrockcrater\n\t+ 1 x: Yellow Gem/yellowgem\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:saddle_wathgrithr(ID Complete)": {
        "prefix": "p+saddle_wathgrithr",
        "body": "\"saddle_wathgrithr\"",
        "description": " ※prefab ID: saddle_wathgrithr\n ※Name: Battle Saddle\n ※Recipe: \n\t+ 4 x: Gold Nugget/goldnugget\n\t+ 3 x: Marble/marble\n\t+ 6 x: Azure Feather/feather_robin_winter\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:saddle_wathgrithr(ReverseSearch)": {
        "prefix": "p+Battle Saddle",
        "body": "\"saddle_wathgrithr\"",
        "description": " ※prefab ID: saddle_wathgrithr\n ※Name: Battle Saddle\n ※Recipe: \n\t+ 4 x: Gold Nugget/goldnugget\n\t+ 3 x: Marble/marble\n\t+ 6 x: Azure Feather/feather_robin_winter\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:alterguardianhat_projectile(ID Complete)": {
        "prefix": "p+alterguardianhat_projectile",
        "body": "\"alterguardianhat_projectile\"",
        "description": " ※prefab ID: alterguardianhat_projectile\n ※Name: Minor Gestalt\n ※prefab Version: DST-632551 "
    },
    "prefab:alterguardianhat_projectile(ReverseSearch)": {
        "prefix": "p+Minor Gestalt",
        "body": "\"alterguardianhat_projectile\"",
        "description": " ※prefab ID: alterguardianhat_projectile\n ※Name: Minor Gestalt\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_004(ID Complete)": {
        "prefix": "p+quagmire_food_004",
        "body": "\"quagmire_food_004\"",
        "description": " ※prefab ID: quagmire_food_004\n ※Name: Jelly Sandwich\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_004(ReverseSearch)": {
        "prefix": "p+Jelly Sandwich",
        "body": "\"quagmire_food_004\"",
        "description": " ※prefab ID: quagmire_food_004\n ※Name: Jelly Sandwich\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_013(ID Complete)": {
        "prefix": "p+quagmire_food_013",
        "body": "\"quagmire_food_013\"",
        "description": " ※prefab ID: quagmire_food_013\n ※Name: Croquette\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_013(ReverseSearch)": {
        "prefix": "p+Croquette",
        "body": "\"quagmire_food_013\"",
        "description": " ※prefab ID: quagmire_food_013\n ※Name: Croquette\n ※prefab Version: DST-632551 "
    },
    "prefab:critter_puppy(ID Complete)": {
        "prefix": "p+critter_puppy",
        "body": "\"critter_puppy\"",
        "description": " ※prefab ID: critter_puppy\n ※Name: Vargling\n ※prefab Version: DST-632551 "
    },
    "prefab:critter_puppy(ReverseSearch)": {
        "prefix": "p+Vargling",
        "body": "\"critter_puppy\"",
        "description": " ※prefab ID: critter_puppy\n ※Name: Vargling\n ※prefab Version: DST-632551 "
    },
    "prefab:dragonpie(ID Complete)": {
        "prefix": "p+dragonpie",
        "body": "\"dragonpie\"",
        "description": " ※prefab ID: dragonpie\n ※Name: Dragonpie\n ※prefab Version: DST-632551 "
    },
    "prefab:dragonpie(ReverseSearch)": {
        "prefix": "p+Dragonpie",
        "body": "\"dragonpie\"",
        "description": " ※prefab ID: dragonpie\n ※Name: Dragonpie\n ※prefab Version: DST-632551 "
    },
    "prefab:turnip(ID Complete)": {
        "prefix": "p+turnip",
        "body": "\"turnip\"",
        "description": " ※prefab ID: turnip\n ※Name: Turnip\n ※prefab Version: DST-632551 "
    },
    "prefab:turnip(ReverseSearch)": {
        "prefix": "p+Turnip",
        "body": "\"turnip\"",
        "description": " ※prefab ID: turnip\n ※Name: Turnip\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_medium_5_inv(ID Complete)": {
        "prefix": "p+oceanfish_medium_5_inv",
        "body": "\"oceanfish_medium_5_inv\"",
        "description": " ※prefab ID: oceanfish_medium_5_inv\n ※Name: Corn Cod\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_medium_5_inv(ReverseSearch)": {
        "prefix": "p+Corn Cod",
        "body": "\"oceanfish_medium_5_inv\"",
        "description": " ※prefab ID: oceanfish_medium_5_inv\n ※Name: Corn Cod\n ※prefab Version: DST-632551 "
    },
    "prefab:scandata(ID Complete)": {
        "prefix": "p+scandata",
        "body": "\"scandata\"",
        "description": " ※prefab ID: scandata\n ※Name: Bio Data\n ※prefab Version: DST-632551 "
    },
    "prefab:scandata(ReverseSearch)": {
        "prefix": "p+Bio Data",
        "body": "\"scandata\"",
        "description": " ※prefab ID: scandata\n ※Name: Bio Data\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_pot_hanger(ID Complete)": {
        "prefix": "p+quagmire_pot_hanger",
        "body": "\"quagmire_pot_hanger\"",
        "description": " ※prefab ID: quagmire_pot_hanger\n ※Name: Pot Hanger\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_pot_hanger(ReverseSearch)": {
        "prefix": "p+Pot Hanger",
        "body": "\"quagmire_pot_hanger\"",
        "description": " ※prefab ID: quagmire_pot_hanger\n ※Name: Pot Hanger\n ※prefab Version: DST-632551 "
    },
    "prefab:charlie_stage_post(ID Complete)": {
        "prefix": "p+charlie_stage_post",
        "body": "\"charlie_stage_post\"",
        "description": " ※prefab ID: charlie_stage_post\n ※Name: Stage\n ※prefab Version: DST-632551 "
    },
    "prefab:charlie_stage_post(ReverseSearch)": {
        "prefix": "p+Stage",
        "body": "\"charlie_stage_post\"",
        "description": " ※prefab ID: charlie_stage_post\n ※Name: Stage\n ※prefab Version: DST-632551 "
    },
    "prefab:boards(ID Complete)": {
        "prefix": "p+boards",
        "body": "\"boards\"",
        "description": " ※prefab ID: boards\n ※Name: Boards\n ※Recipe: \n\t+ 4 x: Log/log\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:boards(ReverseSearch)": {
        "prefix": "p+Boards",
        "body": "\"boards\"",
        "description": " ※prefab ID: boards\n ※Name: Boards\n ※Recipe: \n\t+ 4 x: Log/log\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivaldecor_eggride1(ID Complete)": {
        "prefix": "p+carnivaldecor_eggride1",
        "body": "\"carnivaldecor_eggride1\"",
        "description": " ※prefab ID: carnivaldecor_eggride1\n ※Name: Mini Ferris Wheel\n ※Recipe: \n\t+ 1 x: Mini Ferris Wheel Kit/carnivaldecor_eggride1_kit\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:carnivaldecor_eggride1(ReverseSearch)": {
        "prefix": "p+Mini Ferris Wheel",
        "body": "\"carnivaldecor_eggride1\"",
        "description": " ※prefab ID: carnivaldecor_eggride1\n ※Name: Mini Ferris Wheel\n ※Recipe: \n\t+ 1 x: Mini Ferris Wheel Kit/carnivaldecor_eggride1_kit\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:wolfgang_whistle(ID Complete)": {
        "prefix": "p+wolfgang_whistle",
        "body": "\"wolfgang_whistle\"",
        "description": " ※prefab ID: wolfgang_whistle\n ※Name: Coaching Whistle\n ※Recipe: \n\t+ 1 x: Flint/flint\n\t+ 1 x: Rope/rope\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:wolfgang_whistle(ReverseSearch)": {
        "prefix": "p+Coaching Whistle",
        "body": "\"wolfgang_whistle\"",
        "description": " ※prefab ID: wolfgang_whistle\n ※Name: Coaching Whistle\n ※Recipe: \n\t+ 1 x: Flint/flint\n\t+ 1 x: Rope/rope\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:staff_lunarplant(ID Complete)": {
        "prefix": "p+staff_lunarplant",
        "body": "\"staff_lunarplant\"",
        "description": " ※prefab ID: staff_lunarplant\n ※Name: Brightshade Staff\n ※Recipe: \n\t+ 3 x: Pure Brilliance/purebrilliance\n\t+ 6 x: Brightshade Husk/lunarplant_husk\n ※Required Tech: \n\t+ LV.2 : Brightsmithy/LUNARFORGING\n ※prefab Version: DST-632551 "
    },
    "prefab:staff_lunarplant(ReverseSearch)": {
        "prefix": "p+Brightshade Staff",
        "body": "\"staff_lunarplant\"",
        "description": " ※prefab ID: staff_lunarplant\n ※Name: Brightshade Staff\n ※Recipe: \n\t+ 3 x: Pure Brilliance/purebrilliance\n\t+ 6 x: Brightshade Husk/lunarplant_husk\n ※Required Tech: \n\t+ LV.2 : Brightsmithy/LUNARFORGING\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_10(ID Complete)": {
        "prefix": "p+trinket_10",
        "body": "\"trinket_10\"",
        "description": " ※prefab ID: trinket_10\n ※Name: Second-hand Dentures\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_10(ReverseSearch)": {
        "prefix": "p+Second-hand Dentures",
        "body": "\"trinket_10\"",
        "description": " ※prefab ID: trinket_10\n ※Name: Second-hand Dentures\n ※prefab Version: DST-632551 "
    },
    "prefab:record_efs(ID Complete)": {
        "prefix": "p+record_efs",
        "body": "\"record_efs\"",
        "description": " ※prefab ID: record_efs\n ※Name: E.F.S.\n ※prefab Version: DST-632551 "
    },
    "prefab:record_efs(ReverseSearch)": {
        "prefix": "p+E.F.S.",
        "body": "\"record_efs\"",
        "description": " ※prefab ID: record_efs\n ※Name: E.F.S.\n ※prefab Version: DST-632551 "
    },
    "prefab:shadowmeteor(ID Complete)": {
        "prefix": "p+shadowmeteor",
        "body": "\"shadowmeteor\"",
        "description": " ※prefab ID: shadowmeteor\n ※Name: Meteor\n ※prefab Version: DST-632551 "
    },
    "prefab:shadowmeteor(ReverseSearch)": {
        "prefix": "p+Meteor",
        "body": "\"shadowmeteor\"",
        "description": " ※prefab ID: shadowmeteor\n ※Name: Meteor\n ※prefab Version: DST-632551 "
    },
    "prefab:support_pillar_broken(ID Complete)": {
        "prefix": "p+support_pillar_broken",
        "body": "\"support_pillar_broken\"",
        "description": " ※prefab ID: support_pillar_broken\n ※Name: Support Pillar Wreckage\n ※prefab Version: DST-632551 "
    },
    "prefab:support_pillar_broken(ReverseSearch)": {
        "prefix": "p+Support Pillar Wreckage",
        "body": "\"support_pillar_broken\"",
        "description": " ※prefab ID: support_pillar_broken\n ※Name: Support Pillar Wreckage\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_medium_9(ID Complete)": {
        "prefix": "p+oceanfish_medium_9",
        "body": "\"oceanfish_medium_9\"",
        "description": " ※prefab ID: oceanfish_medium_9\n ※Name: Sweetish Fish\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_medium_9(ReverseSearch)": {
        "prefix": "p+Sweetish Fish",
        "body": "\"oceanfish_medium_9\"",
        "description": " ※prefab ID: oceanfish_medium_9\n ※Name: Sweetish Fish\n ※prefab Version: DST-632551 "
    },
    "prefab:barnaclesushi(ID Complete)": {
        "prefix": "p+barnaclesushi",
        "body": "\"barnaclesushi\"",
        "description": " ※prefab ID: barnaclesushi\n ※Name: Barnacle Nigiri\n ※prefab Version: DST-632551 "
    },
    "prefab:barnaclesushi(ReverseSearch)": {
        "prefix": "p+Barnacle Nigiri",
        "body": "\"barnaclesushi\"",
        "description": " ※prefab ID: barnaclesushi\n ※Name: Barnacle Nigiri\n ※prefab Version: DST-632551 "
    },
    "prefab:halloweenpotion_sparks(ID Complete)": {
        "prefix": "p+halloweenpotion_sparks",
        "body": "\"halloweenpotion_sparks\"",
        "description": " ※prefab ID: halloweenpotion_sparks\n ※Name: Sulfuric Crystals of Saltpeter\n ※prefab Version: DST-632551 "
    },
    "prefab:halloweenpotion_sparks(ReverseSearch)": {
        "prefix": "p+Sulfuric Crystals of Saltpeter",
        "body": "\"halloweenpotion_sparks\"",
        "description": " ※prefab ID: halloweenpotion_sparks\n ※Name: Sulfuric Crystals of Saltpeter\n ※prefab Version: DST-632551 "
    },
    "prefab:fireballstaff(ID Complete)": {
        "prefix": "p+fireballstaff",
        "body": "\"fireballstaff\"",
        "description": " ※prefab ID: fireballstaff\n ※Name: Infernal Staff\n ※prefab Version: DST-632551 "
    },
    "prefab:fireballstaff(ReverseSearch)": {
        "prefix": "p+Infernal Staff",
        "body": "\"fireballstaff\"",
        "description": " ※prefab ID: fireballstaff\n ※Name: Infernal Staff\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_053(ID Complete)": {
        "prefix": "p+quagmire_food_053",
        "body": "\"quagmire_food_053\"",
        "description": " ※prefab ID: quagmire_food_053\n ※Name: Creamy Fettuccine\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_053(ReverseSearch)": {
        "prefix": "p+Creamy Fettuccine",
        "body": "\"quagmire_food_053\"",
        "description": " ※prefab ID: quagmire_food_053\n ※Name: Creamy Fettuccine\n ※prefab Version: DST-632551 "
    },
    "prefab:malbatross(ID Complete)": {
        "prefix": "p+malbatross",
        "body": "\"malbatross\"",
        "description": " ※prefab ID: malbatross\n ※Name: Malbatross\n ※prefab Version: DST-632551 "
    },
    "prefab:malbatross(ReverseSearch)": {
        "prefix": "p+Malbatross",
        "body": "\"malbatross\"",
        "description": " ※prefab ID: malbatross\n ※Name: Malbatross\n ※prefab Version: DST-632551 "
    },
    "prefab:kitcoon_rocky(ID Complete)": {
        "prefix": "p+kitcoon_rocky",
        "body": "\"kitcoon_rocky\"",
        "description": " ※prefab ID: kitcoon_rocky\n ※Name: Kitcoon\n ※prefab Version: DST-632551 "
    },
    "prefab:kitcoon_rocky(ReverseSearch)": {
        "prefix": "p+Kitcoon",
        "body": "\"kitcoon_rocky\"",
        "description": " ※prefab ID: kitcoon_rocky\n ※Name: Kitcoon\n ※prefab Version: DST-632551 "
    },
    "prefab:devtool(ID Complete)": {
        "prefix": "p+devtool",
        "body": "\"devtool\"",
        "description": " ※prefab ID: devtool\n ※Name: Dev Tool\n ※prefab Version: DST-632551 "
    },
    "prefab:devtool(ReverseSearch)": {
        "prefix": "p+Dev Tool",
        "body": "\"devtool\"",
        "description": " ※prefab ID: devtool\n ※Name: Dev Tool\n ※prefab Version: DST-632551 "
    },
    "prefab:decor_portraitframe(ID Complete)": {
        "prefix": "p+decor_portraitframe",
        "body": "\"decor_portraitframe\"",
        "description": " ※prefab ID: decor_portraitframe\n ※Name: Pleasant Portrait\n ※Recipe: \n\t+ 2 x: Log/log\n\t+ 2 x: Twigs/twigs\n\t+ 1 x: Gold Nugget/goldnugget\n\t+ 1 x: Feather Pencil/featherpencil\n ※Required Tech: \n\t+ LV.2 : Carpentry/CARPENTRY\n ※prefab Version: DST-632551 "
    },
    "prefab:decor_portraitframe(ReverseSearch)": {
        "prefix": "p+Pleasant Portrait",
        "body": "\"decor_portraitframe\"",
        "description": " ※prefab ID: decor_portraitframe\n ※Name: Pleasant Portrait\n ※Recipe: \n\t+ 2 x: Log/log\n\t+ 2 x: Twigs/twigs\n\t+ 1 x: Gold Nugget/goldnugget\n\t+ 1 x: Feather Pencil/featherpencil\n ※Required Tech: \n\t+ LV.2 : Carpentry/CARPENTRY\n ※prefab Version: DST-632551 "
    },
    "prefab:monkeybarrel(ID Complete)": {
        "prefix": "p+monkeybarrel",
        "body": "\"monkeybarrel\"",
        "description": " ※prefab ID: monkeybarrel\n ※Name: Splumonkey Pod\n ※prefab Version: DST-632551 "
    },
    "prefab:monkeybarrel(ReverseSearch)": {
        "prefix": "p+Splumonkey Pod",
        "body": "\"monkeybarrel\"",
        "description": " ※prefab ID: monkeybarrel\n ※Name: Splumonkey Pod\n ※prefab Version: DST-632551 "
    },
    "prefab:crabking_claw(ID Complete)": {
        "prefix": "p+crabking_claw",
        "body": "\"crabking_claw\"",
        "description": " ※prefab ID: crabking_claw\n ※Name: Imposing Claw\n ※prefab Version: DST-632551 "
    },
    "prefab:crabking_claw(ReverseSearch)": {
        "prefix": "p+Imposing Claw",
        "body": "\"crabking_claw\"",
        "description": " ※prefab ID: crabking_claw\n ※Name: Imposing Claw\n ※prefab Version: DST-632551 "
    },
    "prefab:farm_plant_seed(ID Complete)": {
        "prefix": "p+farm_plant_seed",
        "body": "\"farm_plant_seed\"",
        "description": " ※prefab ID: farm_plant_seed\n ※Name: Planted {seed}\n ※prefab Version: DST-632551 "
    },
    "prefab:farm_plant_seed(ReverseSearch)": {
        "prefix": "p+Planted {seed}",
        "body": "\"farm_plant_seed\"",
        "description": " ※prefab ID: farm_plant_seed\n ※Name: Planted {seed}\n ※prefab Version: DST-632551 "
    },
    "prefab:rabbitking_aggressive(ID Complete)": {
        "prefix": "p+rabbitking_aggressive",
        "body": "\"rabbitking_aggressive\"",
        "description": " ※prefab ID: rabbitking_aggressive\n ※Name: Wrathful Rabbit King\n ※prefab Version: DST-632551 "
    },
    "prefab:rabbitking_aggressive(ReverseSearch)": {
        "prefix": "p+Wrathful Rabbit King",
        "body": "\"rabbitking_aggressive\"",
        "description": " ※prefab ID: rabbitking_aggressive\n ※Name: Wrathful Rabbit King\n ※prefab Version: DST-632551 "
    },
    "prefab:onion_oversized_rotten(ID Complete)": {
        "prefix": "p+onion_oversized_rotten",
        "body": "\"onion_oversized_rotten\"",
        "description": " ※prefab ID: onion_oversized_rotten\n ※Name: Giant Rotting Onion\n ※prefab Version: DST-632551 "
    },
    "prefab:onion_oversized_rotten(ReverseSearch)": {
        "prefix": "p+Giant Rotting Onion",
        "body": "\"onion_oversized_rotten\"",
        "description": " ※prefab ID: onion_oversized_rotten\n ※Name: Giant Rotting Onion\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivaldecor_eggride2(ID Complete)": {
        "prefix": "p+carnivaldecor_eggride2",
        "body": "\"carnivaldecor_eggride2\"",
        "description": " ※prefab ID: carnivaldecor_eggride2\n ※Name: Mini Swing Carousel\n ※Recipe: \n\t+ 1 x: Mini Swing Carousel Kit/carnivaldecor_eggride2_kit\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:carnivaldecor_eggride2(ReverseSearch)": {
        "prefix": "p+Mini Swing Carousel",
        "body": "\"carnivaldecor_eggride2\"",
        "description": " ※prefab ID: carnivaldecor_eggride2\n ※Name: Mini Swing Carousel\n ※Recipe: \n\t+ 1 x: Mini Swing Carousel Kit/carnivaldecor_eggride2_kit\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:boat_bumper_yotd_kit(ID Complete)": {
        "prefix": "p+boat_bumper_yotd_kit",
        "body": "\"boat_bumper_yotd_kit\"",
        "description": " ※prefab ID: boat_bumper_yotd_kit\n ※Name: Fanged Bumper Kit\n ※Recipe: \n\t+ 3 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /DRAGONOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:boat_bumper_yotd_kit(ReverseSearch)": {
        "prefix": "p+Fanged Bumper Kit",
        "body": "\"boat_bumper_yotd_kit\"",
        "description": " ※prefab ID: boat_bumper_yotd_kit\n ※Name: Fanged Bumper Kit\n ※Recipe: \n\t+ 3 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /DRAGONOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:known_carrot_seeds(ID Complete)": {
        "prefix": "p+known_carrot_seeds",
        "body": "\"known_carrot_seeds\"",
        "description": " ※prefab ID: known_carrot_seeds\n ※Name: Carrot Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:known_carrot_seeds(ReverseSearch)": {
        "prefix": "p+Carrot Seeds",
        "body": "\"known_carrot_seeds\"",
        "description": " ※prefab ID: known_carrot_seeds\n ※Name: Carrot Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:oceantree(ID Complete)": {
        "prefix": "p+oceantree",
        "body": "\"oceantree\"",
        "description": " ※prefab ID: oceantree\n ※Name: Knobbly Tree\n ※prefab Version: DST-632551 "
    },
    "prefab:oceantree(ReverseSearch)": {
        "prefix": "p+Knobbly Tree",
        "body": "\"oceantree\"",
        "description": " ※prefab ID: oceantree\n ※Name: Knobbly Tree\n ※prefab Version: DST-632551 "
    },
    "prefab:nightstick(ID Complete)": {
        "prefix": "p+nightstick",
        "body": "\"nightstick\"",
        "description": " ※prefab ID: nightstick\n ※Name: Morning Star\n ※Recipe: \n\t+ 1 x: Volt Goat Horn/lightninggoathorn\n\t+ 2 x: Electrical Doodad/transistor\n\t+ 2 x: Nitre/nitre\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:nightstick(ReverseSearch)": {
        "prefix": "p+Morning Star",
        "body": "\"nightstick\"",
        "description": " ※prefab ID: nightstick\n ※Name: Morning Star\n ※Recipe: \n\t+ 1 x: Volt Goat Horn/lightninggoathorn\n\t+ 2 x: Electrical Doodad/transistor\n\t+ 2 x: Nitre/nitre\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:pepper_seeds(ID Complete)": {
        "prefix": "p+pepper_seeds",
        "body": "\"pepper_seeds\"",
        "description": " ※prefab ID: pepper_seeds\n ※Name: Lumpy Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:pepper_seeds(ReverseSearch)": {
        "prefix": "p+Lumpy Seeds",
        "body": "\"pepper_seeds\"",
        "description": " ※prefab ID: pepper_seeds\n ※Name: Lumpy Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_cotl_brick(ID Complete)": {
        "prefix": "p+turf_cotl_brick",
        "body": "\"turf_cotl_brick\"",
        "description": " ※prefab ID: turf_cotl_brick\n ※Name: Brick Flooring\n ※Recipe: \n\t+ 1 x: Cut Stone/cutstone\n\t+ 2 x: Flint/flint\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_cotl_brick(ReverseSearch)": {
        "prefix": "p+Brick Flooring",
        "body": "\"turf_cotl_brick\"",
        "description": " ※prefab ID: turf_cotl_brick\n ※Name: Brick Flooring\n ※Recipe: \n\t+ 1 x: Cut Stone/cutstone\n\t+ 2 x: Flint/flint\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:wx78(ID Complete)": {
        "prefix": "p+wx78",
        "body": "\"wx78\"",
        "description": " ※prefab ID: wx78\n ※Name: WX-78\n ※prefab Version: DST-632551 "
    },
    "prefab:wx78(ReverseSearch)": {
        "prefix": "p+WX-78",
        "body": "\"wx78\"",
        "description": " ※prefab ID: wx78\n ※Name: WX-78\n ※prefab Version: DST-632551 "
    },
    "prefab:californiaroll(ID Complete)": {
        "prefix": "p+californiaroll",
        "body": "\"californiaroll\"",
        "description": " ※prefab ID: californiaroll\n ※Name: California Roll\n ※prefab Version: DST-632551 "
    },
    "prefab:californiaroll(ReverseSearch)": {
        "prefix": "p+California Roll",
        "body": "\"californiaroll\"",
        "description": " ※prefab ID: californiaroll\n ※Name: California Roll\n ※prefab Version: DST-632551 "
    },
    "prefab:support_pillar_dreadstone_scaffold(ID Complete)": {
        "prefix": "p+support_pillar_dreadstone_scaffold",
        "body": "\"support_pillar_dreadstone_scaffold\"",
        "description": " ※prefab ID: support_pillar_dreadstone_scaffold\n ※Name: Dreadstone Pillar Scaffold\n ※Recipe: \n\t+ 4 x: Dreadstone/dreadstone\n\t+ 2 x: Boards/boards\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:support_pillar_dreadstone_scaffold(ReverseSearch)": {
        "prefix": "p+Dreadstone Pillar Scaffold",
        "body": "\"support_pillar_dreadstone_scaffold\"",
        "description": " ※prefab ID: support_pillar_dreadstone_scaffold\n ※Name: Dreadstone Pillar Scaffold\n ※Recipe: \n\t+ 4 x: Dreadstone/dreadstone\n\t+ 2 x: Boards/boards\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:deer(ID Complete)": {
        "prefix": "p+deer",
        "body": "\"deer\"",
        "description": " ※prefab ID: deer\n ※Name: No-Eyed Deer\n ※prefab Version: DST-632551 "
    },
    "prefab:deer(ReverseSearch)": {
        "prefix": "p+No-Eyed Deer",
        "body": "\"deer\"",
        "description": " ※prefab ID: deer\n ※Name: No-Eyed Deer\n ※prefab Version: DST-632551 "
    },
    "prefab:pigelite3(ID Complete)": {
        "prefix": "p+pigelite3",
        "body": "\"pigelite3\"",
        "description": " ※prefab ID: pigelite3\n ※Name: Dmitri\n ※prefab Version: DST-632551 "
    },
    "prefab:pigelite3(ReverseSearch)": {
        "prefix": "p+Dmitri",
        "body": "\"pigelite3\"",
        "description": " ※prefab ID: pigelite3\n ※Name: Dmitri\n ※prefab Version: DST-632551 "
    },
    "prefab:abigail(ID Complete)": {
        "prefix": "p+abigail",
        "body": "\"abigail\"",
        "description": " ※prefab ID: abigail\n ※Name: Abigail\n ※prefab Version: DST-632551 "
    },
    "prefab:abigail(ReverseSearch)": {
        "prefix": "p+Abigail",
        "body": "\"abigail\"",
        "description": " ※prefab ID: abigail\n ※Name: Abigail\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_guardianphase3(ID Complete)": {
        "prefix": "p+chesspiece_guardianphase3",
        "body": "\"chesspiece_guardianphase3\"",
        "description": " ※prefab ID: chesspiece_guardianphase3\n ※Name: Celestial Champion Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_guardianphase3(ReverseSearch)": {
        "prefix": "p+Celestial Champion Figure",
        "body": "\"chesspiece_guardianphase3\"",
        "description": " ※prefab ID: chesspiece_guardianphase3\n ※Name: Celestial Champion Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:sacred_chest(ID Complete)": {
        "prefix": "p+sacred_chest",
        "body": "\"sacred_chest\"",
        "description": " ※prefab ID: sacred_chest\n ※Name: Ancient Chest\n ※prefab Version: DST-632551 "
    },
    "prefab:sacred_chest(ReverseSearch)": {
        "prefix": "p+Ancient Chest",
        "body": "\"sacred_chest\"",
        "description": " ※prefab ID: sacred_chest\n ※Name: Ancient Chest\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_park_gate_locked(ID Complete)": {
        "prefix": "p+quagmire_park_gate_locked",
        "body": "\"quagmire_park_gate_locked\"",
        "description": " ※prefab ID: quagmire_park_gate_locked\n ※Name: Locked Iron Gate\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_park_gate_locked(ReverseSearch)": {
        "prefix": "p+Locked Iron Gate",
        "body": "\"quagmire_park_gate_locked\"",
        "description": " ※prefab ID: quagmire_park_gate_locked\n ※Name: Locked Iron Gate\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_052(ID Complete)": {
        "prefix": "p+quagmire_food_052",
        "body": "\"quagmire_food_052\"",
        "description": " ※prefab ID: quagmire_food_052\n ※Name: Cheeseburger\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_052(ReverseSearch)": {
        "prefix": "p+Cheeseburger",
        "body": "\"quagmire_food_052\"",
        "description": " ※prefab ID: quagmire_food_052\n ※Name: Cheeseburger\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalgame_memory_card(ID Complete)": {
        "prefix": "p+carnivalgame_memory_card",
        "body": "\"carnivalgame_memory_card\"",
        "description": " ※prefab ID: carnivalgame_memory_card\n ※Name: Egg Basket\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalgame_memory_card(ReverseSearch)": {
        "prefix": "p+Egg Basket",
        "body": "\"carnivalgame_memory_card\"",
        "description": " ※prefab ID: carnivalgame_memory_card\n ※Name: Egg Basket\n ※prefab Version: DST-632551 "
    },
    "prefab:rabbithat(ID Complete)": {
        "prefix": "p+rabbithat",
        "body": "\"rabbithat\"",
        "description": " ※prefab ID: rabbithat\n ※Name: Warren Wreath\n ※Recipe: \n\t+ 1 x: Rabbit/rabbit\n\t+ 6 x: Cut Grass/cutgrass\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:rabbithat(ReverseSearch)": {
        "prefix": "p+Warren Wreath",
        "body": "\"rabbithat\"",
        "description": " ※prefab ID: rabbithat\n ※Name: Warren Wreath\n ※Recipe: \n\t+ 1 x: Rabbit/rabbit\n\t+ 6 x: Cut Grass/cutgrass\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:hermit_cracked_pearl(ID Complete)": {
        "prefix": "p+hermit_cracked_pearl",
        "body": "\"hermit_cracked_pearl\"",
        "description": " ※prefab ID: hermit_cracked_pearl\n ※Name: Cracked Pearl\n ※prefab Version: DST-632551 "
    },
    "prefab:hermit_cracked_pearl(ReverseSearch)": {
        "prefix": "p+Cracked Pearl",
        "body": "\"hermit_cracked_pearl\"",
        "description": " ※prefab ID: hermit_cracked_pearl\n ※Name: Cracked Pearl\n ※prefab Version: DST-632551 "
    },
    "prefab:hammer(ID Complete)": {
        "prefix": "p+hammer",
        "body": "\"hammer\"",
        "description": " ※prefab ID: hammer\n ※Name: Hammer\n ※Recipe: \n\t+ 3 x: Twigs/twigs\n\t+ 3 x: Rocks/rocks\n\t+ 6 x: Cut Grass/cutgrass\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:hammer(ReverseSearch)": {
        "prefix": "p+Hammer",
        "body": "\"hammer\"",
        "description": " ※prefab ID: hammer\n ※Name: Hammer\n ※Recipe: \n\t+ 3 x: Twigs/twigs\n\t+ 3 x: Rocks/rocks\n\t+ 6 x: Cut Grass/cutgrass\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_crabking(ID Complete)": {
        "prefix": "p+chesspiece_crabking",
        "body": "\"chesspiece_crabking\"",
        "description": " ※prefab ID: chesspiece_crabking\n ※Name: Crab King Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_crabking(ReverseSearch)": {
        "prefix": "p+Crab King Figure",
        "body": "\"chesspiece_crabking\"",
        "description": " ※prefab ID: chesspiece_crabking\n ※Name: Crab King Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_wheat(ID Complete)": {
        "prefix": "p+quagmire_wheat",
        "body": "\"quagmire_wheat\"",
        "description": " ※prefab ID: quagmire_wheat\n ※Name: Wheat\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_wheat(ReverseSearch)": {
        "prefix": "p+Wheat",
        "body": "\"quagmire_wheat\"",
        "description": " ※prefab ID: quagmire_wheat\n ※Name: Wheat\n ※prefab Version: DST-632551 "
    },
    "prefab:wall_scrap(ID Complete)": {
        "prefix": "p+wall_scrap",
        "body": "\"wall_scrap\"",
        "description": " ※prefab ID: wall_scrap\n ※Name: Scrap Wall\n ※prefab Version: DST-632551 "
    },
    "prefab:wall_scrap(ReverseSearch)": {
        "prefix": "p+Scrap Wall",
        "body": "\"wall_scrap\"",
        "description": " ※prefab ID: wall_scrap\n ※Name: Scrap Wall\n ※prefab Version: DST-632551 "
    },
    "prefab:yotb_beefalo_doll_ice(ID Complete)": {
        "prefix": "p+yotb_beefalo_doll_ice",
        "body": "\"yotb_beefalo_doll_ice\"",
        "description": " ※prefab ID: yotb_beefalo_doll_ice\n ※Name: Frostbitten Beefalo Doll\n ※prefab Version: DST-632551 "
    },
    "prefab:yotb_beefalo_doll_ice(ReverseSearch)": {
        "prefix": "p+Frostbitten Beefalo Doll",
        "body": "\"yotb_beefalo_doll_ice\"",
        "description": " ※prefab ID: yotb_beefalo_doll_ice\n ※Name: Frostbitten Beefalo Doll\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_crabking_sketch(ID Complete)": {
        "prefix": "p+chesspiece_crabking_sketch",
        "body": "\"chesspiece_crabking_sketch\"",
        "description": " ※prefab ID: chesspiece_crabking_sketch\n ※Name: Crab King Figure Sketch\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_crabking_sketch(ReverseSearch)": {
        "prefix": "p+Crab King Figure Sketch",
        "body": "\"chesspiece_crabking_sketch\"",
        "description": " ※prefab ID: chesspiece_crabking_sketch\n ※Name: Crab King Figure Sketch\n ※prefab Version: DST-632551 "
    },
    "prefab:cactus_flower(ID Complete)": {
        "prefix": "p+cactus_flower",
        "body": "\"cactus_flower\"",
        "description": " ※prefab ID: cactus_flower\n ※Name: Cactus Flower\n ※prefab Version: DST-632551 "
    },
    "prefab:cactus_flower(ReverseSearch)": {
        "prefix": "p+Cactus Flower",
        "body": "\"cactus_flower\"",
        "description": " ※prefab ID: cactus_flower\n ※Name: Cactus Flower\n ※prefab Version: DST-632551 "
    },
    "prefab:corn_oversized_rotten(ID Complete)": {
        "prefix": "p+corn_oversized_rotten",
        "body": "\"corn_oversized_rotten\"",
        "description": " ※prefab ID: corn_oversized_rotten\n ※Name: Giant Rotting Corn\n ※prefab Version: DST-632551 "
    },
    "prefab:corn_oversized_rotten(ReverseSearch)": {
        "prefix": "p+Giant Rotting Corn",
        "body": "\"corn_oversized_rotten\"",
        "description": " ※prefab ID: corn_oversized_rotten\n ※Name: Giant Rotting Corn\n ※prefab Version: DST-632551 "
    },
    "prefab:cactus_meat_cooked(ID Complete)": {
        "prefix": "p+cactus_meat_cooked",
        "body": "\"cactus_meat_cooked\"",
        "description": " ※prefab ID: cactus_meat_cooked\n ※Name: Cooked Cactus Flesh\n ※prefab Version: DST-632551 "
    },
    "prefab:cactus_meat_cooked(ReverseSearch)": {
        "prefix": "p+Cooked Cactus Flesh",
        "body": "\"cactus_meat_cooked\"",
        "description": " ※prefab ID: cactus_meat_cooked\n ※Name: Cooked Cactus Flesh\n ※prefab Version: DST-632551 "
    },
    "prefab:multitool_axe_pickaxe(ID Complete)": {
        "prefix": "p+multitool_axe_pickaxe",
        "body": "\"multitool_axe_pickaxe\"",
        "description": " ※prefab ID: multitool_axe_pickaxe\n ※Name: Pick/Axe\n ※Recipe: \n\t+ 1 x: Luxury Axe/goldenaxe\n\t+ 1 x: Opulent Pickaxe/goldenpickaxe\n\t+ 2 x: Thulecite/thulecite\n ※Required Tech: \n\t+ LV.4 : Ancient/ANCIENT\n ※prefab Version: DST-632551 "
    },
    "prefab:multitool_axe_pickaxe(ReverseSearch)": {
        "prefix": "p+Pick/Axe",
        "body": "\"multitool_axe_pickaxe\"",
        "description": " ※prefab ID: multitool_axe_pickaxe\n ※Name: Pick/Axe\n ※Recipe: \n\t+ 1 x: Luxury Axe/goldenaxe\n\t+ 1 x: Opulent Pickaxe/goldenpickaxe\n\t+ 2 x: Thulecite/thulecite\n ※Required Tech: \n\t+ LV.4 : Ancient/ANCIENT\n ※prefab Version: DST-632551 "
    },
    "prefab:fence_junk(ID Complete)": {
        "prefix": "p+fence_junk",
        "body": "\"fence_junk\"",
        "description": " ※prefab ID: fence_junk\n ※Name: Junky Fence\n ※prefab Version: DST-632551 "
    },
    "prefab:fence_junk(ReverseSearch)": {
        "prefix": "p+Junky Fence",
        "body": "\"fence_junk\"",
        "description": " ※prefab ID: fence_junk\n ※Name: Junky Fence\n ※prefab Version: DST-632551 "
    },
    "prefab:mutatedhound(ID Complete)": {
        "prefix": "p+mutatedhound",
        "body": "\"mutatedhound\"",
        "description": " ※prefab ID: mutatedhound\n ※Name: Horror Hound\n ※prefab Version: DST-632551 "
    },
    "prefab:mutatedhound(ReverseSearch)": {
        "prefix": "p+Horror Hound",
        "body": "\"mutatedhound\"",
        "description": " ※prefab ID: mutatedhound\n ※Name: Horror Hound\n ※prefab Version: DST-632551 "
    },
    "prefab:fish_box(ID Complete)": {
        "prefix": "p+fish_box",
        "body": "\"fish_box\"",
        "description": " ※prefab ID: fish_box\n ※Name: Tin Fishin' Bin\n ※Recipe: \n\t+ 1 x: Cut Stone/cutstone\n\t+ 3 x: Rope/rope\n ※Required Tech: \n\t+ LV.1 : Seafaring/SEAFARING\n ※prefab Version: DST-632551 "
    },
    "prefab:fish_box(ReverseSearch)": {
        "prefix": "p+Tin Fishin' Bin",
        "body": "\"fish_box\"",
        "description": " ※prefab ID: fish_box\n ※Name: Tin Fishin' Bin\n ※Recipe: \n\t+ 1 x: Cut Stone/cutstone\n\t+ 3 x: Rope/rope\n ※Required Tech: \n\t+ LV.1 : Seafaring/SEAFARING\n ※prefab Version: DST-632551 "
    },
    "prefab:polishcookie(ID Complete)": {
        "prefix": "p+polishcookie",
        "body": "\"polishcookie\"",
        "description": " ※prefab ID: polishcookie\n ※Name: Polish Cookies\n ※prefab Version: DST-632551 "
    },
    "prefab:polishcookie(ReverseSearch)": {
        "prefix": "p+Polish Cookies",
        "body": "\"polishcookie\"",
        "description": " ※prefab ID: polishcookie\n ※Name: Polish Cookies\n ※prefab Version: DST-632551 "
    },
    "prefab:book_light_upgraded(ID Complete)": {
        "prefix": "p+book_light_upgraded",
        "body": "\"book_light_upgraded\"",
        "description": " ※prefab ID: book_light_upgraded\n ※Name: Lux Aeterna Redux\n ※Recipe: \n\t+ 1 x: Lux Aeterna/book_light\n\t+ 1 x: Feather Pencil/featherpencil\n\t+ 2 x: Papyrus/papyrus\n ※Required Tech: \n\t+ LV.1 : /BOOKCRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:book_light_upgraded(ReverseSearch)": {
        "prefix": "p+Lux Aeterna Redux",
        "body": "\"book_light_upgraded\"",
        "description": " ※prefab ID: book_light_upgraded\n ※Name: Lux Aeterna Redux\n ※Recipe: \n\t+ 1 x: Lux Aeterna/book_light\n\t+ 1 x: Feather Pencil/featherpencil\n\t+ 2 x: Papyrus/papyrus\n ※Required Tech: \n\t+ LV.1 : /BOOKCRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:spore_small(ID Complete)": {
        "prefix": "p+spore_small",
        "body": "\"spore_small\"",
        "description": " ※prefab ID: spore_small\n ※Name: Green Spore\n ※prefab Version: DST-632551 "
    },
    "prefab:spore_small(ReverseSearch)": {
        "prefix": "p+Green Spore",
        "body": "\"spore_small\"",
        "description": " ※prefab ID: spore_small\n ※Name: Green Spore\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_46(ID Complete)": {
        "prefix": "p+trinket_46",
        "body": "\"trinket_46\"",
        "description": " ※prefab ID: trinket_46\n ※Name: Broken Hairdryer\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_46(ReverseSearch)": {
        "prefix": "p+Broken Hairdryer",
        "body": "\"trinket_46\"",
        "description": " ※prefab ID: trinket_46\n ※Name: Broken Hairdryer\n ※prefab Version: DST-632551 "
    },
    "prefab:chester(ID Complete)": {
        "prefix": "p+chester",
        "body": "\"chester\"",
        "description": " ※prefab ID: chester\n ※Name: Chester\n ※prefab Version: DST-632551 "
    },
    "prefab:chester(ReverseSearch)": {
        "prefix": "p+Chester",
        "body": "\"chester\"",
        "description": " ※prefab ID: chester\n ※Name: Chester\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_medium_1(ID Complete)": {
        "prefix": "p+oceanfish_medium_1",
        "body": "\"oceanfish_medium_1\"",
        "description": " ※prefab ID: oceanfish_medium_1\n ※Name: Mudfish\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_medium_1(ReverseSearch)": {
        "prefix": "p+Mudfish",
        "body": "\"oceanfish_medium_1\"",
        "description": " ※prefab ID: oceanfish_medium_1\n ※Name: Mudfish\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_rubble_bike(ID Complete)": {
        "prefix": "p+quagmire_rubble_bike",
        "body": "\"quagmire_rubble_bike\"",
        "description": " ※prefab ID: quagmire_rubble_bike\n ※Name: Wrecked Bicycle\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_rubble_bike(ReverseSearch)": {
        "prefix": "p+Wrecked Bicycle",
        "body": "\"quagmire_rubble_bike\"",
        "description": " ※prefab ID: quagmire_rubble_bike\n ※Name: Wrecked Bicycle\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_kitcoon(ID Complete)": {
        "prefix": "p+chesspiece_kitcoon",
        "body": "\"chesspiece_kitcoon\"",
        "description": " ※prefab ID: chesspiece_kitcoon\n ※Name: Kitcoon Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_kitcoon(ReverseSearch)": {
        "prefix": "p+Kitcoon Figure",
        "body": "\"chesspiece_kitcoon\"",
        "description": " ※prefab ID: chesspiece_kitcoon\n ※Name: Kitcoon Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_spotspice_ground(ID Complete)": {
        "prefix": "p+quagmire_spotspice_ground",
        "body": "\"quagmire_spotspice_ground\"",
        "description": " ※prefab ID: quagmire_spotspice_ground\n ※Name: Spot Spice\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_spotspice_ground(ReverseSearch)": {
        "prefix": "p+Spot Spice",
        "body": "\"quagmire_spotspice_ground\"",
        "description": " ※prefab ID: quagmire_spotspice_ground\n ※Name: Spot Spice\n ※prefab Version: DST-632551 "
    },
    "prefab:handpillow_kelp(ID Complete)": {
        "prefix": "p+handpillow_kelp",
        "body": "\"handpillow_kelp\"",
        "description": " ※prefab ID: handpillow_kelp\n ※Name: Kelp-Stuffed Pillow\n ※Recipe: \n\t+ 2 x: Lucky Gold Nugget/lucky_goldnugget\n\t+ 2 x: Silk/silk\n\t+ 3 x: Kelp Fronds/kelp\n ※Required Tech: \n\t+ LV.3 : /RABBITOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:handpillow_kelp(ReverseSearch)": {
        "prefix": "p+Kelp-Stuffed Pillow",
        "body": "\"handpillow_kelp\"",
        "description": " ※prefab ID: handpillow_kelp\n ※Name: Kelp-Stuffed Pillow\n ※Recipe: \n\t+ 2 x: Lucky Gold Nugget/lucky_goldnugget\n\t+ 2 x: Silk/silk\n\t+ 3 x: Kelp Fronds/kelp\n ※Required Tech: \n\t+ LV.3 : /RABBITOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:spear_gungnir(ID Complete)": {
        "prefix": "p+spear_gungnir",
        "body": "\"spear_gungnir\"",
        "description": " ※prefab ID: spear_gungnir\n ※Name: Pith Pike\n ※prefab Version: DST-632551 "
    },
    "prefab:spear_gungnir(ReverseSearch)": {
        "prefix": "p+Pith Pike",
        "body": "\"spear_gungnir\"",
        "description": " ※prefab ID: spear_gungnir\n ※Name: Pith Pike\n ※prefab Version: DST-632551 "
    },
    "prefab:yellowstaff(ID Complete)": {
        "prefix": "p+yellowstaff",
        "body": "\"yellowstaff\"",
        "description": " ※prefab ID: yellowstaff\n ※Name: Star Caller's Staff\n ※Recipe: \n\t+ 4 x: Nightmare Fuel/nightmarefuel\n\t+ 2 x: Living Log/livinglog\n\t+ 2 x: Yellow Gem/yellowgem\n ※Required Tech: \n\t+ LV.2 : Ancient/ANCIENT\n ※prefab Version: DST-632551 "
    },
    "prefab:yellowstaff(ReverseSearch)": {
        "prefix": "p+Star Caller's Staff",
        "body": "\"yellowstaff\"",
        "description": " ※prefab ID: yellowstaff\n ※Name: Star Caller's Staff\n ※Recipe: \n\t+ 4 x: Nightmare Fuel/nightmarefuel\n\t+ 2 x: Living Log/livinglog\n\t+ 2 x: Yellow Gem/yellowgem\n ※Required Tech: \n\t+ LV.2 : Ancient/ANCIENT\n ※prefab Version: DST-632551 "
    },
    "prefab:lunar_forge_kit(ID Complete)": {
        "prefix": "p+lunar_forge_kit",
        "body": "\"lunar_forge_kit\"",
        "description": " ※prefab ID: lunar_forge_kit\n ※Name: Brightsmithy Kit\n ※Recipe: \n\t+ 5 x: Moon Rock/moonrocknugget\n\t+ 5 x: Moon Shard/moonglass\n\t+ 1 x: Pure Brilliance/purebrilliance\n ※Required Tech: \n\t+ LV.1 : Celestial/CELESTIAL\n ※prefab Version: DST-632551 "
    },
    "prefab:lunar_forge_kit(ReverseSearch)": {
        "prefix": "p+Brightsmithy Kit",
        "body": "\"lunar_forge_kit\"",
        "description": " ※prefab ID: lunar_forge_kit\n ※Name: Brightsmithy Kit\n ※Recipe: \n\t+ 5 x: Moon Rock/moonrocknugget\n\t+ 5 x: Moon Shard/moonglass\n\t+ 1 x: Pure Brilliance/purebrilliance\n ※Required Tech: \n\t+ LV.1 : Celestial/CELESTIAL\n ※prefab Version: DST-632551 "
    },
    "prefab:bundle(ID Complete)": {
        "prefix": "p+bundle",
        "body": "\"bundle\"",
        "description": " ※prefab ID: bundle\n ※Name: Bundled Supplies\n ※prefab Version: DST-632551 "
    },
    "prefab:bundle(ReverseSearch)": {
        "prefix": "p+Bundled Supplies",
        "body": "\"bundle\"",
        "description": " ※prefab ID: bundle\n ※Name: Bundled Supplies\n ※prefab Version: DST-632551 "
    },
    "prefab:mutator_healer(ID Complete)": {
        "prefix": "p+mutator_healer",
        "body": "\"mutator_healer\"",
        "description": " ※prefab ID: mutator_healer\n ※Name: Nurse Switcherdoodle\n ※Recipe: \n\t+ 2 x: Monster Meat/monstermeat\n\t+ 2 x: Silk/silk\n\t+ 2 x: Honey/honey\n ※Required Tech: \n\t+ LV.1 : Spider Care/SPIDERCRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:mutator_healer(ReverseSearch)": {
        "prefix": "p+Nurse Switcherdoodle",
        "body": "\"mutator_healer\"",
        "description": " ※prefab ID: mutator_healer\n ※Name: Nurse Switcherdoodle\n ※Recipe: \n\t+ 2 x: Monster Meat/monstermeat\n\t+ 2 x: Silk/silk\n\t+ 2 x: Honey/honey\n ※Required Tech: \n\t+ LV.1 : Spider Care/SPIDERCRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:slingshotammo_slow(ID Complete)": {
        "prefix": "p+slingshotammo_slow",
        "body": "\"slingshotammo_slow\"",
        "description": " ※prefab ID: slingshotammo_slow\n ※Name: Slow-Down Rounds\n ※Recipe: \n\t+ 1 x: Moon Rock/moonrocknugget\n\t+ 1 x: Purple Gem/purplegem\n ※Required Tech: \n\t+ LV.3 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:slingshotammo_slow(ReverseSearch)": {
        "prefix": "p+Slow-Down Rounds",
        "body": "\"slingshotammo_slow\"",
        "description": " ※prefab ID: slingshotammo_slow\n ※Name: Slow-Down Rounds\n ※Recipe: \n\t+ 1 x: Moon Rock/moonrocknugget\n\t+ 1 x: Purple Gem/purplegem\n ※Required Tech: \n\t+ LV.3 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_cave(ID Complete)": {
        "prefix": "p+turf_cave",
        "body": "\"turf_cave\"",
        "description": " ※prefab ID: turf_cave\n ※Name: Guano Turf\n ※Recipe: \n\t+ 2 x: Guano/guano\n ※Required Tech: \n\t+ LV.2 : Landscaping/TURFCRAFTING\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_cave(ReverseSearch)": {
        "prefix": "p+Guano Turf",
        "body": "\"turf_cave\"",
        "description": " ※prefab ID: turf_cave\n ※Name: Guano Turf\n ※Recipe: \n\t+ 2 x: Guano/guano\n ※Required Tech: \n\t+ LV.2 : Landscaping/TURFCRAFTING\n ※prefab Version: DST-632551 "
    },
    "prefab:spider_whistle(ID Complete)": {
        "prefix": "p+spider_whistle",
        "body": "\"spider_whistle\"",
        "description": " ※prefab ID: spider_whistle\n ※Name: Webby Whistle\n ※Recipe: \n\t+ 3 x: Silk/silk\n\t+ 2 x: Twigs/twigs\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:spider_whistle(ReverseSearch)": {
        "prefix": "p+Webby Whistle",
        "body": "\"spider_whistle\"",
        "description": " ※prefab ID: spider_whistle\n ※Name: Webby Whistle\n ※Recipe: \n\t+ 3 x: Silk/silk\n\t+ 2 x: Twigs/twigs\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:gingerbreadpig(ID Complete)": {
        "prefix": "p+gingerbreadpig",
        "body": "\"gingerbreadpig\"",
        "description": " ※prefab ID: gingerbreadpig\n ※Name: Gingerbread Pig\n ※prefab Version: DST-632551 "
    },
    "prefab:gingerbreadpig(ReverseSearch)": {
        "prefix": "p+Gingerbread Pig",
        "body": "\"gingerbreadpig\"",
        "description": " ※prefab ID: gingerbreadpig\n ※Name: Gingerbread Pig\n ※prefab Version: DST-632551 "
    },
    "prefab:koalefig_trunk(ID Complete)": {
        "prefix": "p+koalefig_trunk",
        "body": "\"koalefig_trunk\"",
        "description": " ※prefab ID: koalefig_trunk\n ※Name: Fig-Stuffed Trunk\n ※prefab Version: DST-632551 "
    },
    "prefab:koalefig_trunk(ReverseSearch)": {
        "prefix": "p+Fig-Stuffed Trunk",
        "body": "\"koalefig_trunk\"",
        "description": " ※prefab ID: koalefig_trunk\n ※Name: Fig-Stuffed Trunk\n ※prefab Version: DST-632551 "
    },
    "prefab:hambat(ID Complete)": {
        "prefix": "p+hambat",
        "body": "\"hambat\"",
        "description": " ※prefab ID: hambat\n ※Name: Ham Bat\n ※Recipe: \n\t+ 1 x: Pig Skin/pigskin\n\t+ 2 x: Twigs/twigs\n\t+ 2 x: Meat/meat\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:hambat(ReverseSearch)": {
        "prefix": "p+Ham Bat",
        "body": "\"hambat\"",
        "description": " ※prefab ID: hambat\n ※Name: Ham Bat\n ※Recipe: \n\t+ 1 x: Pig Skin/pigskin\n\t+ 2 x: Twigs/twigs\n\t+ 2 x: Meat/meat\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:moon_altar_astral(ID Complete)": {
        "prefix": "p+moon_altar_astral",
        "body": "\"moon_altar_astral\"",
        "description": " ※prefab ID: moon_altar_astral\n ※Name: Celestial Sanctum\n ※prefab Version: DST-632551 "
    },
    "prefab:moon_altar_astral(ReverseSearch)": {
        "prefix": "p+Celestial Sanctum",
        "body": "\"moon_altar_astral\"",
        "description": " ※prefab ID: moon_altar_astral\n ※Name: Celestial Sanctum\n ※prefab Version: DST-632551 "
    },
    "prefab:koalefant_summer(ID Complete)": {
        "prefix": "p+koalefant_summer",
        "body": "\"koalefant_summer\"",
        "description": " ※prefab ID: koalefant_summer\n ※Name: Koalefant\n ※prefab Version: DST-632551 "
    },
    "prefab:koalefant_summer(ReverseSearch)": {
        "prefix": "p+Koalefant",
        "body": "\"koalefant_summer\"",
        "description": " ※prefab ID: koalefant_summer\n ※Name: Koalefant\n ※prefab Version: DST-632551 "
    },
    "prefab:yotp_food3(ID Complete)": {
        "prefix": "p+yotp_food3",
        "body": "\"yotp_food3\"",
        "description": " ※prefab ID: yotp_food3\n ※Name: Fish Heads on a Stick\n ※Recipe: \n\t+ 4 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /PIGOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:yotp_food3(ReverseSearch)": {
        "prefix": "p+Fish Heads on a Stick",
        "body": "\"yotp_food3\"",
        "description": " ※prefab ID: yotp_food3\n ※Name: Fish Heads on a Stick\n ※Recipe: \n\t+ 4 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /PIGOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:cactus_meat(ID Complete)": {
        "prefix": "p+cactus_meat",
        "body": "\"cactus_meat\"",
        "description": " ※prefab ID: cactus_meat\n ※Name: Cactus Flesh\n ※prefab Version: DST-632551 "
    },
    "prefab:cactus_meat(ReverseSearch)": {
        "prefix": "p+Cactus Flesh",
        "body": "\"cactus_meat\"",
        "description": " ※prefab ID: cactus_meat\n ※Name: Cactus Flesh\n ※prefab Version: DST-632551 "
    },
    "prefab:feather_crow(ID Complete)": {
        "prefix": "p+feather_crow",
        "body": "\"feather_crow\"",
        "description": " ※prefab ID: feather_crow\n ※Name: Jet Feather\n ※prefab Version: DST-632551 "
    },
    "prefab:feather_crow(ReverseSearch)": {
        "prefix": "p+Jet Feather",
        "body": "\"feather_crow\"",
        "description": " ※prefab ID: feather_crow\n ※Name: Jet Feather\n ※prefab Version: DST-632551 "
    },
    "prefab:wereitem_beaver(ID Complete)": {
        "prefix": "p+wereitem_beaver",
        "body": "\"wereitem_beaver\"",
        "description": " ※prefab ID: wereitem_beaver\n ※Name: Kitschy Beaver Idol\n ※Recipe: \n\t+ 3 x: Monster Meat/monstermeat\n\t+ 2 x: Log/log\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:wereitem_beaver(ReverseSearch)": {
        "prefix": "p+Kitschy Beaver Idol",
        "body": "\"wereitem_beaver\"",
        "description": " ※prefab ID: wereitem_beaver\n ※Name: Kitschy Beaver Idol\n ※Recipe: \n\t+ 3 x: Monster Meat/monstermeat\n\t+ 2 x: Log/log\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:dock_woodposts(ID Complete)": {
        "prefix": "p+dock_woodposts",
        "body": "\"dock_woodposts\"",
        "description": " ※prefab ID: dock_woodposts\n ※Name: Dock Piling\n ※Recipe: \n\t+ 2 x: Log/log\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:dock_woodposts(ReverseSearch)": {
        "prefix": "p+Dock Piling",
        "body": "\"dock_woodposts\"",
        "description": " ※prefab ID: dock_woodposts\n ※Name: Dock Piling\n ※Recipe: \n\t+ 2 x: Log/log\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:rock_avocado_fruit_ripe_cooked(ID Complete)": {
        "prefix": "p+rock_avocado_fruit_ripe_cooked",
        "body": "\"rock_avocado_fruit_ripe_cooked\"",
        "description": " ※prefab ID: rock_avocado_fruit_ripe_cooked\n ※Name: Cooked Stone Fruit\n ※prefab Version: DST-632551 "
    },
    "prefab:rock_avocado_fruit_ripe_cooked(ReverseSearch)": {
        "prefix": "p+Cooked Stone Fruit",
        "body": "\"rock_avocado_fruit_ripe_cooked\"",
        "description": " ※prefab ID: rock_avocado_fruit_ripe_cooked\n ※Name: Cooked Stone Fruit\n ※prefab Version: DST-632551 "
    },
    "prefab:potato_seeds(ID Complete)": {
        "prefix": "p+potato_seeds",
        "body": "\"potato_seeds\"",
        "description": " ※prefab ID: potato_seeds\n ※Name: Fluffy Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:potato_seeds(ReverseSearch)": {
        "prefix": "p+Fluffy Seeds",
        "body": "\"potato_seeds\"",
        "description": " ※prefab ID: potato_seeds\n ※Name: Fluffy Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:potato_oversized(ID Complete)": {
        "prefix": "p+potato_oversized",
        "body": "\"potato_oversized\"",
        "description": " ※prefab ID: potato_oversized\n ※Name: Giant Potato\n ※prefab Version: DST-632551 "
    },
    "prefab:potato_oversized(ReverseSearch)": {
        "prefix": "p+Giant Potato",
        "body": "\"potato_oversized\"",
        "description": " ※prefab ID: potato_oversized\n ※Name: Giant Potato\n ※prefab Version: DST-632551 "
    },
    "prefab:book_horticulture_upgraded(ID Complete)": {
        "prefix": "p+book_horticulture_upgraded",
        "body": "\"book_horticulture_upgraded\"",
        "description": " ※prefab ID: book_horticulture_upgraded\n ※Name: Horticulture, Expanded\n ※Recipe: \n\t+ 1 x: Horticulture, Abridged/book_horticulture\n\t+ 1 x: Feather Pencil/featherpencil\n\t+ 2 x: Papyrus/papyrus\n ※Required Tech: \n\t+ LV.1 : /BOOKCRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:book_horticulture_upgraded(ReverseSearch)": {
        "prefix": "p+Horticulture, Expanded",
        "body": "\"book_horticulture_upgraded\"",
        "description": " ※prefab ID: book_horticulture_upgraded\n ※Name: Horticulture, Expanded\n ※Recipe: \n\t+ 1 x: Horticulture, Abridged/book_horticulture\n\t+ 1 x: Feather Pencil/featherpencil\n\t+ 2 x: Papyrus/papyrus\n ※Required Tech: \n\t+ LV.1 : /BOOKCRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:heatrock(ID Complete)": {
        "prefix": "p+heatrock",
        "body": "\"heatrock\"",
        "description": " ※prefab ID: heatrock\n ※Name: Thermal Stone\n ※Recipe: \n\t+ 10 x: Rocks/rocks\n\t+ 1 x: Pickaxe/pickaxe\n\t+ 3 x: Flint/flint\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:heatrock(ReverseSearch)": {
        "prefix": "p+Thermal Stone",
        "body": "\"heatrock\"",
        "description": " ※prefab ID: heatrock\n ※Name: Thermal Stone\n ※Recipe: \n\t+ 10 x: Rocks/rocks\n\t+ 1 x: Pickaxe/pickaxe\n\t+ 3 x: Flint/flint\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:strawhat(ID Complete)": {
        "prefix": "p+strawhat",
        "body": "\"strawhat\"",
        "description": " ※prefab ID: strawhat\n ※Name: Straw Hat\n ※Recipe: \n\t+ 12 x: Cut Grass/cutgrass\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:strawhat(ReverseSearch)": {
        "prefix": "p+Straw Hat",
        "body": "\"strawhat\"",
        "description": " ※prefab ID: strawhat\n ※Name: Straw Hat\n ※Recipe: \n\t+ 12 x: Cut Grass/cutgrass\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:turf_fungus_moon(ID Complete)": {
        "prefix": "p+turf_fungus_moon",
        "body": "\"turf_fungus_moon\"",
        "description": " ※prefab ID: turf_fungus_moon\n ※Name: Mutated Fungal Turf\n ※Recipe: \n\t+ 1 x: Moon Rock/moonrocknugget\n\t+ 2 x: Moon Shroom/moon_cap\n ※Required Tech: \n\t+ LV.3 : Celestial/CELESTIAL\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_fungus_moon(ReverseSearch)": {
        "prefix": "p+Mutated Fungal Turf",
        "body": "\"turf_fungus_moon\"",
        "description": " ※prefab ID: turf_fungus_moon\n ※Name: Mutated Fungal Turf\n ※Recipe: \n\t+ 1 x: Moon Rock/moonrocknugget\n\t+ 2 x: Moon Shroom/moon_cap\n ※Required Tech: \n\t+ LV.3 : Celestial/CELESTIAL\n ※prefab Version: DST-632551 "
    },
    "prefab:ruins_shadeling(ID Complete)": {
        "prefix": "p+ruins_shadeling",
        "body": "\"ruins_shadeling\"",
        "description": " ※prefab ID: ruins_shadeling\n ※Name: Resting Horror\n ※prefab Version: DST-632551 "
    },
    "prefab:ruins_shadeling(ReverseSearch)": {
        "prefix": "p+Resting Horror",
        "body": "\"ruins_shadeling\"",
        "description": " ※prefab ID: ruins_shadeling\n ※Name: Resting Horror\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_eyeofterror(ID Complete)": {
        "prefix": "p+chesspiece_eyeofterror",
        "body": "\"chesspiece_eyeofterror\"",
        "description": " ※prefab ID: chesspiece_eyeofterror\n ※Name: Eye Of Terror Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_eyeofterror(ReverseSearch)": {
        "prefix": "p+Eye Of Terror Figure",
        "body": "\"chesspiece_eyeofterror\"",
        "description": " ※prefab ID: chesspiece_eyeofterror\n ※Name: Eye Of Terror Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:pomegranate_oversized(ID Complete)": {
        "prefix": "p+pomegranate_oversized",
        "body": "\"pomegranate_oversized\"",
        "description": " ※prefab ID: pomegranate_oversized\n ※Name: Giant Pomegranate\n ※prefab Version: DST-632551 "
    },
    "prefab:pomegranate_oversized(ReverseSearch)": {
        "prefix": "p+Giant Pomegranate",
        "body": "\"pomegranate_oversized\"",
        "description": " ※prefab ID: pomegranate_oversized\n ※Name: Giant Pomegranate\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_road(ID Complete)": {
        "prefix": "p+turf_road",
        "body": "\"turf_road\"",
        "description": " ※prefab ID: turf_road\n ※Name: Cobblestones\n ※Recipe: \n\t+ 1 x: Cut Stone/cutstone\n\t+ 2 x: Flint/flint\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_road(ReverseSearch)": {
        "prefix": "p+Cobblestones",
        "body": "\"turf_road\"",
        "description": " ※prefab ID: turf_road\n ※Name: Cobblestones\n ※Recipe: \n\t+ 1 x: Cut Stone/cutstone\n\t+ 2 x: Flint/flint\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_onion(ID Complete)": {
        "prefix": "p+quagmire_onion",
        "body": "\"quagmire_onion\"",
        "description": " ※prefab ID: quagmire_onion\n ※Name: Onion\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_onion(ReverseSearch)": {
        "prefix": "p+Onion",
        "body": "\"quagmire_onion\"",
        "description": " ※prefab ID: quagmire_onion\n ※Name: Onion\n ※prefab Version: DST-632551 "
    },
    "prefab:gears(ID Complete)": {
        "prefix": "p+gears",
        "body": "\"gears\"",
        "description": " ※prefab ID: gears\n ※Name: Gears\n ※prefab Version: DST-632551 "
    },
    "prefab:gears(ReverseSearch)": {
        "prefix": "p+Gears",
        "body": "\"gears\"",
        "description": " ※prefab ID: gears\n ※Name: Gears\n ※prefab Version: DST-632551 "
    },
    "prefab:sweetpotato(ID Complete)": {
        "prefix": "p+sweetpotato",
        "body": "\"sweetpotato\"",
        "description": " ※prefab ID: sweetpotato\n ※Name: Sweet Potato Casserole\n ※prefab Version: DST-632551 "
    },
    "prefab:sweetpotato(ReverseSearch)": {
        "prefix": "p+Sweet Potato Casserole",
        "body": "\"sweetpotato\"",
        "description": " ※prefab ID: sweetpotato\n ※Name: Sweet Potato Casserole\n ※prefab Version: DST-632551 "
    },
    "prefab:mast_malbatross(ID Complete)": {
        "prefix": "p+mast_malbatross",
        "body": "\"mast_malbatross\"",
        "description": " ※prefab ID: mast_malbatross\n ※Name: Winged Sail\n ※Recipe: \n\t+ 3 x: Driftwood Piece/driftwood_log\n\t+ 3 x: Rope/rope\n\t+ 4 x: Feathery Canvas/malbatross_feathered_weave\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:mast_malbatross(ReverseSearch)": {
        "prefix": "p+Winged Sail",
        "body": "\"mast_malbatross\"",
        "description": " ※prefab ID: mast_malbatross\n ※Name: Winged Sail\n ※Recipe: \n\t+ 3 x: Driftwood Piece/driftwood_log\n\t+ 3 x: Rope/rope\n\t+ 4 x: Feathery Canvas/malbatross_feathered_weave\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:cotl_tabernacle_level3(ID Complete)": {
        "prefix": "p+cotl_tabernacle_level3",
        "body": "\"cotl_tabernacle_level3\"",
        "description": " ※prefab ID: cotl_tabernacle_level3\n ※Name: Immaculate Lamb Idol\n ※prefab Version: DST-632551 "
    },
    "prefab:cotl_tabernacle_level3(ReverseSearch)": {
        "prefix": "p+Immaculate Lamb Idol",
        "body": "\"cotl_tabernacle_level3\"",
        "description": " ※prefab ID: cotl_tabernacle_level3\n ※Name: Immaculate Lamb Idol\n ※prefab Version: DST-632551 "
    },
    "prefab:cane(ID Complete)": {
        "prefix": "p+cane",
        "body": "\"cane\"",
        "description": " ※prefab ID: cane\n ※Name: Walking Cane\n ※Recipe: \n\t+ 2 x: Gold Nugget/goldnugget\n\t+ 1 x: Walrus Tusk/walrus_tusk\n\t+ 4 x: Twigs/twigs\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:cane(ReverseSearch)": {
        "prefix": "p+Walking Cane",
        "body": "\"cane\"",
        "description": " ※prefab ID: cane\n ※Name: Walking Cane\n ※Recipe: \n\t+ 2 x: Gold Nugget/goldnugget\n\t+ 1 x: Walrus Tusk/walrus_tusk\n\t+ 4 x: Twigs/twigs\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:eggplant_oversized(ID Complete)": {
        "prefix": "p+eggplant_oversized",
        "body": "\"eggplant_oversized\"",
        "description": " ※prefab ID: eggplant_oversized\n ※Name: Giant Eggplant\n ※prefab Version: DST-632551 "
    },
    "prefab:eggplant_oversized(ReverseSearch)": {
        "prefix": "p+Giant Eggplant",
        "body": "\"eggplant_oversized\"",
        "description": " ※prefab ID: eggplant_oversized\n ※Name: Giant Eggplant\n ※prefab Version: DST-632551 "
    },
    "prefab:ancienttree_nightvision(ID Complete)": {
        "prefix": "p+ancienttree_nightvision",
        "body": "\"ancienttree_nightvision\"",
        "description": " ※prefab ID: ancienttree_nightvision\n ※Name: Gloomthorn\n ※prefab Version: DST-632551 "
    },
    "prefab:ancienttree_nightvision(ReverseSearch)": {
        "prefix": "p+Gloomthorn",
        "body": "\"ancienttree_nightvision\"",
        "description": " ※prefab ID: ancienttree_nightvision\n ※Name: Gloomthorn\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalcannon_streamer(ID Complete)": {
        "prefix": "p+carnivalcannon_streamer",
        "body": "\"carnivalcannon_streamer\"",
        "description": " ※prefab ID: carnivalcannon_streamer\n ※Name: Streamer Cannon\n ※Recipe: \n\t+ 1 x: Streamer Cannon Kit/carnivalcannon_streamer_kit\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalcannon_streamer(ReverseSearch)": {
        "prefix": "p+Streamer Cannon",
        "body": "\"carnivalcannon_streamer\"",
        "description": " ※prefab ID: carnivalcannon_streamer\n ※Name: Streamer Cannon\n ※Recipe: \n\t+ 1 x: Streamer Cannon Kit/carnivalcannon_streamer_kit\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:dragonheadhat(ID Complete)": {
        "prefix": "p+dragonheadhat",
        "body": "\"dragonheadhat\"",
        "description": " ※prefab ID: dragonheadhat\n ※Name: Lucky Beast Head\n ※Recipe: \n\t+ 8 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.1 : Offerings/PERDOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:dragonheadhat(ReverseSearch)": {
        "prefix": "p+Lucky Beast Head",
        "body": "\"dragonheadhat\"",
        "description": " ※prefab ID: dragonheadhat\n ※Name: Lucky Beast Head\n ※Recipe: \n\t+ 8 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.1 : Offerings/PERDOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:charlie_hand(ID Complete)": {
        "prefix": "p+charlie_hand",
        "body": "\"charlie_hand\"",
        "description": " ※prefab ID: charlie_hand\n ※Name: Beckoning Hand\n ※prefab Version: DST-632551 "
    },
    "prefab:charlie_hand(ReverseSearch)": {
        "prefix": "p+Beckoning Hand",
        "body": "\"charlie_hand\"",
        "description": " ※prefab ID: charlie_hand\n ※Name: Beckoning Hand\n ※prefab Version: DST-632551 "
    },
    "prefab:green_cap_cooked(ID Complete)": {
        "prefix": "p+green_cap_cooked",
        "body": "\"green_cap_cooked\"",
        "description": " ※prefab ID: green_cap_cooked\n ※Name: Cooked Green Cap\n ※prefab Version: DST-632551 "
    },
    "prefab:green_cap_cooked(ReverseSearch)": {
        "prefix": "p+Cooked Green Cap",
        "body": "\"green_cap_cooked\"",
        "description": " ※prefab ID: green_cap_cooked\n ※Name: Cooked Green Cap\n ※prefab Version: DST-632551 "
    },
    "prefab:dock_kit(ID Complete)": {
        "prefix": "p+dock_kit",
        "body": "\"dock_kit\"",
        "description": " ※prefab ID: dock_kit\n ※Name: Dock Kit\n ※Recipe: \n\t+ 4 x: Boards/boards\n\t+ 1 x: Cut Stone/cutstone\n\t+ 2 x: Stinger/stinger\n\t+ 1 x: Palmcone Scale/palmcone_scale\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:dock_kit(ReverseSearch)": {
        "prefix": "p+Dock Kit",
        "body": "\"dock_kit\"",
        "description": " ※prefab ID: dock_kit\n ※Name: Dock Kit\n ※Recipe: \n\t+ 4 x: Boards/boards\n\t+ 1 x: Cut Stone/cutstone\n\t+ 2 x: Stinger/stinger\n\t+ 1 x: Palmcone Scale/palmcone_scale\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:critter_dragonling_builder(ID Complete)": {
        "prefix": "p+critter_dragonling_builder",
        "body": "\"critter_dragonling_builder\"",
        "description": " ※prefab ID: critter_dragonling_builder\n ※Name: Broodling\n ※Recipe: \n\t+ 1 x: Chilled Lavae/lavae_cocoon\n\t+ 1 x: Spicy Chili/hotchili\n ※Required Tech: \n\t+ LV.1 : Critters/ORPHANAGE\n ※prefab Version: DST-632551 "
    },
    "prefab:critter_dragonling_builder(ReverseSearch)": {
        "prefix": "p+Broodling",
        "body": "\"critter_dragonling_builder\"",
        "description": " ※prefab ID: critter_dragonling_builder\n ※Name: Broodling\n ※Recipe: \n\t+ 1 x: Chilled Lavae/lavae_cocoon\n\t+ 1 x: Spicy Chili/hotchili\n ※Required Tech: \n\t+ LV.1 : Critters/ORPHANAGE\n ※prefab Version: DST-632551 "
    },
    "prefab:ghostlyelixir_shield(ID Complete)": {
        "prefix": "p+ghostlyelixir_shield",
        "body": "\"ghostlyelixir_shield\"",
        "description": " ※prefab ID: ghostlyelixir_shield\n ※Name: Unyielding Draught\n ※Recipe: \n\t+ 1 x: Log/log\n\t+ 1 x: Mourning Glory/ghostflower\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:ghostlyelixir_shield(ReverseSearch)": {
        "prefix": "p+Unyielding Draught",
        "body": "\"ghostlyelixir_shield\"",
        "description": " ※prefab ID: ghostlyelixir_shield\n ※Name: Unyielding Draught\n ※Recipe: \n\t+ 1 x: Log/log\n\t+ 1 x: Mourning Glory/ghostflower\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:humanmeat_cooked(ID Complete)": {
        "prefix": "p+humanmeat_cooked",
        "body": "\"humanmeat_cooked\"",
        "description": " ※prefab ID: humanmeat_cooked\n ※Name: Cooked Long Pig\n ※prefab Version: DST-632551 "
    },
    "prefab:humanmeat_cooked(ReverseSearch)": {
        "prefix": "p+Cooked Long Pig",
        "body": "\"humanmeat_cooked\"",
        "description": " ※prefab ID: humanmeat_cooked\n ※Name: Cooked Long Pig\n ※prefab Version: DST-632551 "
    },
    "prefab:archive_security_desk(ID Complete)": {
        "prefix": "p+archive_security_desk",
        "body": "\"archive_security_desk\"",
        "description": " ※prefab ID: archive_security_desk\n ※Name: Ancient Guard Post\n ※prefab Version: DST-632551 "
    },
    "prefab:archive_security_desk(ReverseSearch)": {
        "prefix": "p+Ancient Guard Post",
        "body": "\"archive_security_desk\"",
        "description": " ※prefab ID: archive_security_desk\n ※Name: Ancient Guard Post\n ※prefab Version: DST-632551 "
    },
    "prefab:ruinsrelic_plate(ID Complete)": {
        "prefix": "p+ruinsrelic_plate",
        "body": "\"ruinsrelic_plate\"",
        "description": " ※prefab ID: ruinsrelic_plate\n ※Name: Replica Relic Plate\n ※Recipe: \n\t+ 1 x: Cut Stone/cutstone\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:ruinsrelic_plate(ReverseSearch)": {
        "prefix": "p+Replica Relic Plate",
        "body": "\"ruinsrelic_plate\"",
        "description": " ※prefab ID: ruinsrelic_plate\n ※Name: Replica Relic Plate\n ※Recipe: \n\t+ 1 x: Cut Stone/cutstone\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:slingshotammo_marble(ID Complete)": {
        "prefix": "p+slingshotammo_marble",
        "body": "\"slingshotammo_marble\"",
        "description": " ※prefab ID: slingshotammo_marble\n ※Name: Marbles\n ※Recipe: \n\t+ 1 x: Marble/marble\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:slingshotammo_marble(ReverseSearch)": {
        "prefix": "p+Marbles",
        "body": "\"slingshotammo_marble\"",
        "description": " ※prefab ID: slingshotammo_marble\n ※Name: Marbles\n ※Recipe: \n\t+ 1 x: Marble/marble\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:teleportato_potato(ID Complete)": {
        "prefix": "p+teleportato_potato",
        "body": "\"teleportato_potato\"",
        "description": " ※prefab ID: teleportato_potato\n ※Name: Metal Potato Thing\n ※prefab Version: DST-632551 "
    },
    "prefab:teleportato_potato(ReverseSearch)": {
        "prefix": "p+Metal Potato Thing",
        "body": "\"teleportato_potato\"",
        "description": " ※prefab ID: teleportato_potato\n ※Name: Metal Potato Thing\n ※prefab Version: DST-632551 "
    },
    "prefab:wathgrithr_improvedhat(ID Complete)": {
        "prefix": "p+wathgrithr_improvedhat",
        "body": "\"wathgrithr_improvedhat\"",
        "description": " ※prefab ID: wathgrithr_improvedhat\n ※Name: Commander's Helm\n ※Recipe: \n\t+ 2 x: Gold Nugget/goldnugget\n\t+ 2 x: Beefalo Wool/beefalowool\n\t+ 1 x: Marble/marble\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:wathgrithr_improvedhat(ReverseSearch)": {
        "prefix": "p+Commander's Helm",
        "body": "\"wathgrithr_improvedhat\"",
        "description": " ※prefab ID: wathgrithr_improvedhat\n ※Name: Commander's Helm\n ※Recipe: \n\t+ 2 x: Gold Nugget/goldnugget\n\t+ 2 x: Beefalo Wool/beefalowool\n\t+ 1 x: Marble/marble\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:accomplishment_shrine(ID Complete)": {
        "prefix": "p+accomplishment_shrine",
        "body": "\"accomplishment_shrine\"",
        "description": " ※prefab ID: accomplishment_shrine\n ※Name: Accomploshrine\n ※prefab Version: DST-632551 "
    },
    "prefab:accomplishment_shrine(ReverseSearch)": {
        "prefix": "p+Accomploshrine",
        "body": "\"accomplishment_shrine\"",
        "description": " ※prefab ID: accomplishment_shrine\n ※Name: Accomploshrine\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_medium_3(ID Complete)": {
        "prefix": "p+oceanfish_medium_3",
        "body": "\"oceanfish_medium_3\"",
        "description": " ※prefab ID: oceanfish_medium_3\n ※Name: Dandy Lionfish\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_medium_3(ReverseSearch)": {
        "prefix": "p+Dandy Lionfish",
        "body": "\"oceanfish_medium_3\"",
        "description": " ※prefab ID: oceanfish_medium_3\n ※Name: Dandy Lionfish\n ※prefab Version: DST-632551 "
    },
    "prefab:butterflymuffin(ID Complete)": {
        "prefix": "p+butterflymuffin",
        "body": "\"butterflymuffin\"",
        "description": " ※prefab ID: butterflymuffin\n ※Name: Butter Muffin\n ※prefab Version: DST-632551 "
    },
    "prefab:butterflymuffin(ReverseSearch)": {
        "prefix": "p+Butter Muffin",
        "body": "\"butterflymuffin\"",
        "description": " ※prefab ID: butterflymuffin\n ※Name: Butter Muffin\n ※prefab Version: DST-632551 "
    },
    "prefab:shadow_battleaxe(ID Complete)": {
        "prefix": "p+shadow_battleaxe",
        "body": "\"shadow_battleaxe\"",
        "description": " ※prefab ID: shadow_battleaxe\n ※Name: Shadow Maul\n ※Recipe: \n\t+ 1 x: Possessed Shadow Atrium/shadowheart_infused\n\t+ 5 x: Pure Horror/horrorfuel\n\t+ 3 x: Dreadstone/dreadstone\n\t+ 2 x: Dark Tatters/voidcloth\n ※Required Tech: \n\t+ LV.2 : Shadowcraft/SHADOWFORGING\n ※prefab Version: DST-632551 "
    },
    "prefab:shadow_battleaxe(ReverseSearch)": {
        "prefix": "p+Shadow Maul",
        "body": "\"shadow_battleaxe\"",
        "description": " ※prefab ID: shadow_battleaxe\n ※Name: Shadow Maul\n ※Recipe: \n\t+ 1 x: Possessed Shadow Atrium/shadowheart_infused\n\t+ 5 x: Pure Horror/horrorfuel\n\t+ 3 x: Dreadstone/dreadstone\n\t+ 2 x: Dark Tatters/voidcloth\n ※Required Tech: \n\t+ LV.2 : Shadowcraft/SHADOWFORGING\n ※prefab Version: DST-632551 "
    },
    "prefab:giftwrap(ID Complete)": {
        "prefix": "p+giftwrap",
        "body": "\"giftwrap\"",
        "description": " ※prefab ID: giftwrap\n ※Name: Gift Wrap\n ※Recipe: \n\t+ 1 x: Papyrus/papyrus\n\t+ 1 x: Petals/petals\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:giftwrap(ReverseSearch)": {
        "prefix": "p+Gift Wrap",
        "body": "\"giftwrap\"",
        "description": " ※prefab ID: giftwrap\n ※Name: Gift Wrap\n ※Recipe: \n\t+ 1 x: Papyrus/papyrus\n\t+ 1 x: Petals/petals\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:moon_altar_seed(ID Complete)": {
        "prefix": "p+moon_altar_seed",
        "body": "\"moon_altar_seed\"",
        "description": " ※prefab ID: moon_altar_seed\n ※Name: Celestial Altar Orb\n ※prefab Version: DST-632551 "
    },
    "prefab:moon_altar_seed(ReverseSearch)": {
        "prefix": "p+Celestial Altar Orb",
        "body": "\"moon_altar_seed\"",
        "description": " ※prefab ID: moon_altar_seed\n ※Name: Celestial Altar Orb\n ※prefab Version: DST-632551 "
    },
    "prefab:pepper_cooked(ID Complete)": {
        "prefix": "p+pepper_cooked",
        "body": "\"pepper_cooked\"",
        "description": " ※prefab ID: pepper_cooked\n ※Name: Roasted Pepper\n ※prefab Version: DST-632551 "
    },
    "prefab:pepper_cooked(ReverseSearch)": {
        "prefix": "p+Roasted Pepper",
        "body": "\"pepper_cooked\"",
        "description": " ※prefab ID: pepper_cooked\n ※Name: Roasted Pepper\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_mealingstone(ID Complete)": {
        "prefix": "p+quagmire_mealingstone",
        "body": "\"quagmire_mealingstone\"",
        "description": " ※prefab ID: quagmire_mealingstone\n ※Name: Mealing Stone\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_mealingstone(ReverseSearch)": {
        "prefix": "p+Mealing Stone",
        "body": "\"quagmire_mealingstone\"",
        "description": " ※prefab ID: quagmire_mealingstone\n ※Name: Mealing Stone\n ※prefab Version: DST-632551 "
    },
    "prefab:nightcaphat(ID Complete)": {
        "prefix": "p+nightcaphat",
        "body": "\"nightcaphat\"",
        "description": " ※prefab ID: nightcaphat\n ※Name: Nightcap\n ※Recipe: \n\t+ 4 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /RABBITOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:nightcaphat(ReverseSearch)": {
        "prefix": "p+Nightcap",
        "body": "\"nightcaphat\"",
        "description": " ※prefab ID: nightcaphat\n ※Name: Nightcap\n ※Recipe: \n\t+ 4 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /RABBITOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:moonglass_wobster_den(ID Complete)": {
        "prefix": "p+moonglass_wobster_den",
        "body": "\"moonglass_wobster_den\"",
        "description": " ※prefab ID: moonglass_wobster_den\n ※Name: Moon Glass Mound\n ※prefab Version: DST-632551 "
    },
    "prefab:moonglass_wobster_den(ReverseSearch)": {
        "prefix": "p+Moon Glass Mound",
        "body": "\"moonglass_wobster_den\"",
        "description": " ※prefab ID: moonglass_wobster_den\n ※Name: Moon Glass Mound\n ※prefab Version: DST-632551 "
    },
    "prefab:butterfly(ID Complete)": {
        "prefix": "p+butterfly",
        "body": "\"butterfly\"",
        "description": " ※prefab ID: butterfly\n ※Name: Butterfly\n ※prefab Version: DST-632551 "
    },
    "prefab:butterfly(ReverseSearch)": {
        "prefix": "p+Butterfly",
        "body": "\"butterfly\"",
        "description": " ※prefab ID: butterfly\n ※Name: Butterfly\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_19(ID Complete)": {
        "prefix": "p+trinket_19",
        "body": "\"trinket_19\"",
        "description": " ※prefab ID: trinket_19\n ※Name: Unbalanced Top\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_19(ReverseSearch)": {
        "prefix": "p+Unbalanced Top",
        "body": "\"trinket_19\"",
        "description": " ※prefab ID: trinket_19\n ※Name: Unbalanced Top\n ※prefab Version: DST-632551 "
    },
    "prefab:bedroll_straw(ID Complete)": {
        "prefix": "p+bedroll_straw",
        "body": "\"bedroll_straw\"",
        "description": " ※prefab ID: bedroll_straw\n ※Name: Straw Roll\n ※Recipe: \n\t+ 6 x: Cut Grass/cutgrass\n\t+ 1 x: Rope/rope\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:bedroll_straw(ReverseSearch)": {
        "prefix": "p+Straw Roll",
        "body": "\"bedroll_straw\"",
        "description": " ※prefab ID: bedroll_straw\n ※Name: Straw Roll\n ※Recipe: \n\t+ 6 x: Cut Grass/cutgrass\n\t+ 1 x: Rope/rope\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:winter_food3(ID Complete)": {
        "prefix": "p+winter_food3",
        "body": "\"winter_food3\"",
        "description": " ※prefab ID: winter_food3\n ※Name: Candy Cane\n ※prefab Version: DST-632551 "
    },
    "prefab:winter_food3(ReverseSearch)": {
        "prefix": "p+Candy Cane",
        "body": "\"winter_food3\"",
        "description": " ※prefab ID: winter_food3\n ※Name: Candy Cane\n ※prefab Version: DST-632551 "
    },
    "prefab:dragonfly(ID Complete)": {
        "prefix": "p+dragonfly",
        "body": "\"dragonfly\"",
        "description": " ※prefab ID: dragonfly\n ※Name: Dragonfly\n ※prefab Version: DST-632551 "
    },
    "prefab:dragonfly(ReverseSearch)": {
        "prefix": "p+Dragonfly",
        "body": "\"dragonfly\"",
        "description": " ※prefab ID: dragonfly\n ※Name: Dragonfly\n ※prefab Version: DST-632551 "
    },
    "prefab:wintercooking_cabbagerolls(ID Complete)": {
        "prefix": "p+wintercooking_cabbagerolls",
        "body": "\"wintercooking_cabbagerolls\"",
        "description": " ※prefab ID: wintercooking_cabbagerolls\n ※Name: Cabbage Rolls\n ※Recipe: \n\t+ 1 x: Holiday Cheer/wintersfeastfuel\n\t+ 2 x: Cut Reeds/cutreeds\n ※Required Tech: \n\t+ LV.1 : Feast/WINTERSFEASTCOOKING\n ※prefab Version: DST-632551 "
    },
    "prefab:wintercooking_cabbagerolls(ReverseSearch)": {
        "prefix": "p+Cabbage Rolls",
        "body": "\"wintercooking_cabbagerolls\"",
        "description": " ※prefab ID: wintercooking_cabbagerolls\n ※Name: Cabbage Rolls\n ※Recipe: \n\t+ 1 x: Holiday Cheer/wintersfeastfuel\n\t+ 2 x: Cut Reeds/cutreeds\n ※Required Tech: \n\t+ LV.1 : Feast/WINTERSFEASTCOOKING\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_2(ID Complete)": {
        "prefix": "p+trinket_2",
        "body": "\"trinket_2\"",
        "description": " ※prefab ID: trinket_2\n ※Name: Fake Kazoo\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_2(ReverseSearch)": {
        "prefix": "p+Fake Kazoo",
        "body": "\"trinket_2\"",
        "description": " ※prefab ID: trinket_2\n ※Name: Fake Kazoo\n ※prefab Version: DST-632551 "
    },
    "prefab:red_cap_cooked(ID Complete)": {
        "prefix": "p+red_cap_cooked",
        "body": "\"red_cap_cooked\"",
        "description": " ※prefab ID: red_cap_cooked\n ※Name: Cooked Red Cap\n ※prefab Version: DST-632551 "
    },
    "prefab:red_cap_cooked(ReverseSearch)": {
        "prefix": "p+Cooked Red Cap",
        "body": "\"red_cap_cooked\"",
        "description": " ※prefab ID: red_cap_cooked\n ※Name: Cooked Red Cap\n ※prefab Version: DST-632551 "
    },
    "prefab:waxpaper(ID Complete)": {
        "prefix": "p+waxpaper",
        "body": "\"waxpaper\"",
        "description": " ※prefab ID: waxpaper\n ※Name: Wax Paper\n ※Recipe: \n\t+ 1 x: Papyrus/papyrus\n\t+ 1 x: Beeswax/beeswax\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:waxpaper(ReverseSearch)": {
        "prefix": "p+Wax Paper",
        "body": "\"waxpaper\"",
        "description": " ※prefab ID: waxpaper\n ※Name: Wax Paper\n ※Recipe: \n\t+ 1 x: Papyrus/papyrus\n\t+ 1 x: Beeswax/beeswax\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:boat_grass(ID Complete)": {
        "prefix": "p+boat_grass",
        "body": "\"boat_grass\"",
        "description": " ※prefab ID: boat_grass\n ※Name: Grass Raft\n ※prefab Version: DST-632551 "
    },
    "prefab:boat_grass(ReverseSearch)": {
        "prefix": "p+Grass Raft",
        "body": "\"boat_grass\"",
        "description": " ※prefab ID: boat_grass\n ※Name: Grass Raft\n ※prefab Version: DST-632551 "
    },
    "prefab:costume_mirror_body(ID Complete)": {
        "prefix": "p+costume_mirror_body",
        "body": "\"costume_mirror_body\"",
        "description": " ※prefab ID: costume_mirror_body\n ※Name: Mirror Costume\n ※prefab Version: DST-632551 "
    },
    "prefab:costume_mirror_body(ReverseSearch)": {
        "prefix": "p+Mirror Costume",
        "body": "\"costume_mirror_body\"",
        "description": " ※prefab ID: costume_mirror_body\n ※Name: Mirror Costume\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_small_6(ID Complete)": {
        "prefix": "p+oceanfish_small_6",
        "body": "\"oceanfish_small_6\"",
        "description": " ※prefab ID: oceanfish_small_6\n ※Name: Fallounder\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_small_6(ReverseSearch)": {
        "prefix": "p+Fallounder",
        "body": "\"oceanfish_small_6\"",
        "description": " ※prefab ID: oceanfish_small_6\n ※Name: Fallounder\n ※prefab Version: DST-632551 "
    },
    "prefab:slurper_pelt(ID Complete)": {
        "prefix": "p+slurper_pelt",
        "body": "\"slurper_pelt\"",
        "description": " ※prefab ID: slurper_pelt\n ※Name: Slurper Pelt\n ※prefab Version: DST-632551 "
    },
    "prefab:slurper_pelt(ReverseSearch)": {
        "prefix": "p+Slurper Pelt",
        "body": "\"slurper_pelt\"",
        "description": " ※prefab ID: slurper_pelt\n ※Name: Slurper Pelt\n ※prefab Version: DST-632551 "
    },
    "prefab:fireflies(ID Complete)": {
        "prefix": "p+fireflies",
        "body": "\"fireflies\"",
        "description": " ※prefab ID: fireflies\n ※Name: Fireflies\n ※prefab Version: DST-632551 "
    },
    "prefab:fireflies(ReverseSearch)": {
        "prefix": "p+Fireflies",
        "body": "\"fireflies\"",
        "description": " ※prefab ID: fireflies\n ※Name: Fireflies\n ※prefab Version: DST-632551 "
    },
    "prefab:fused_shadeling(ID Complete)": {
        "prefix": "p+fused_shadeling",
        "body": "\"fused_shadeling\"",
        "description": " ※prefab ID: fused_shadeling\n ※Name: Fused Shadeling\n ※prefab Version: DST-632551 "
    },
    "prefab:fused_shadeling(ReverseSearch)": {
        "prefix": "p+Fused Shadeling",
        "body": "\"fused_shadeling\"",
        "description": " ※prefab ID: fused_shadeling\n ※Name: Fused Shadeling\n ※prefab Version: DST-632551 "
    },
    "prefab:blue_cap(ID Complete)": {
        "prefix": "p+blue_cap",
        "body": "\"blue_cap\"",
        "description": " ※prefab ID: blue_cap\n ※Name: Blue Cap\n ※prefab Version: DST-632551 "
    },
    "prefab:blue_cap(ReverseSearch)": {
        "prefix": "p+Blue Cap",
        "body": "\"blue_cap\"",
        "description": " ※prefab ID: blue_cap\n ※Name: Blue Cap\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_salmon_cooked(ID Complete)": {
        "prefix": "p+quagmire_salmon_cooked",
        "body": "\"quagmire_salmon_cooked\"",
        "description": " ※prefab ID: quagmire_salmon_cooked\n ※Name: Cooked Salmon\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_salmon_cooked(ReverseSearch)": {
        "prefix": "p+Cooked Salmon",
        "body": "\"quagmire_salmon_cooked\"",
        "description": " ※prefab ID: quagmire_salmon_cooked\n ※Name: Cooked Salmon\n ※prefab Version: DST-632551 "
    },
    "prefab:farm_plant_tomato(ID Complete)": {
        "prefix": "p+farm_plant_tomato",
        "body": "\"farm_plant_tomato\"",
        "description": " ※prefab ID: farm_plant_tomato\n ※Name: Toma Root Plant\n ※prefab Version: DST-632551 "
    },
    "prefab:farm_plant_tomato(ReverseSearch)": {
        "prefix": "p+Toma Root Plant",
        "body": "\"farm_plant_tomato\"",
        "description": " ※prefab ID: farm_plant_tomato\n ※Name: Toma Root Plant\n ※prefab Version: DST-632551 "
    },
    "prefab:carrot(ID Complete)": {
        "prefix": "p+carrot",
        "body": "\"carrot\"",
        "description": " ※prefab ID: carrot\n ※Name: Carrot\n ※prefab Version: DST-632551 "
    },
    "prefab:carrot(ReverseSearch)": {
        "prefix": "p+Carrot",
        "body": "\"carrot\"",
        "description": " ※prefab ID: carrot\n ※Name: Carrot\n ※prefab Version: DST-632551 "
    },
    "prefab:wintercooking_roastturkey(ID Complete)": {
        "prefix": "p+wintercooking_roastturkey",
        "body": "\"wintercooking_roastturkey\"",
        "description": " ※prefab ID: wintercooking_roastturkey\n ※Name: Roasted Turkey\n ※Recipe: \n\t+ 1 x: Holiday Cheer/wintersfeastfuel\n\t+ 1 x: Log/log\n\t+ 1 x: Charcoal/charcoal\n ※Required Tech: \n\t+ LV.1 : Feast/WINTERSFEASTCOOKING\n ※prefab Version: DST-632551 "
    },
    "prefab:wintercooking_roastturkey(ReverseSearch)": {
        "prefix": "p+Roasted Turkey",
        "body": "\"wintercooking_roastturkey\"",
        "description": " ※prefab ID: wintercooking_roastturkey\n ※Name: Roasted Turkey\n ※Recipe: \n\t+ 1 x: Holiday Cheer/wintersfeastfuel\n\t+ 1 x: Log/log\n\t+ 1 x: Charcoal/charcoal\n ※Required Tech: \n\t+ LV.1 : Feast/WINTERSFEASTCOOKING\n ※prefab Version: DST-632551 "
    },
    "prefab:moosenest2(ID Complete)": {
        "prefix": "p+moosenest2",
        "body": "\"moosenest2\"",
        "description": " ※prefab ID: moosenest2\n ※Name: Goose Nest\n ※prefab Version: DST-632551 "
    },
    "prefab:moosenest2(ReverseSearch)": {
        "prefix": "p+Goose Nest",
        "body": "\"moosenest2\"",
        "description": " ※prefab ID: moosenest2\n ※Name: Goose Nest\n ※prefab Version: DST-632551 "
    },
    "prefab:rock_ice_melted(ID Complete)": {
        "prefix": "p+rock_ice_melted",
        "body": "\"rock_ice_melted\"",
        "description": " ※prefab ID: rock_ice_melted\n ※Name: Melted Mini Glacier\n ※prefab Version: DST-632551 "
    },
    "prefab:rock_ice_melted(ReverseSearch)": {
        "prefix": "p+Melted Mini Glacier",
        "body": "\"rock_ice_melted\"",
        "description": " ※prefab ID: rock_ice_melted\n ※Name: Melted Mini Glacier\n ※prefab Version: DST-632551 "
    },
    "prefab:green_cap(ID Complete)": {
        "prefix": "p+green_cap",
        "body": "\"green_cap\"",
        "description": " ※prefab ID: green_cap\n ※Name: Green Cap\n ※prefab Version: DST-632551 "
    },
    "prefab:green_cap(ReverseSearch)": {
        "prefix": "p+Green Cap",
        "body": "\"green_cap\"",
        "description": " ※prefab ID: green_cap\n ※Name: Green Cap\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_manrabbit(ID Complete)": {
        "prefix": "p+chesspiece_manrabbit",
        "body": "\"chesspiece_manrabbit\"",
        "description": " ※prefab ID: chesspiece_manrabbit\n ※Name: Bunnyman Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_manrabbit(ReverseSearch)": {
        "prefix": "p+Bunnyman Figure",
        "body": "\"chesspiece_manrabbit\"",
        "description": " ※prefab ID: chesspiece_manrabbit\n ※Name: Bunnyman Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:junk_pile_big(ID Complete)": {
        "prefix": "p+junk_pile_big",
        "body": "\"junk_pile_big\"",
        "description": " ※prefab ID: junk_pile_big\n ※Name: Teetering Junk Pile\n ※prefab Version: DST-632551 "
    },
    "prefab:junk_pile_big(ReverseSearch)": {
        "prefix": "p+Teetering Junk Pile",
        "body": "\"junk_pile_big\"",
        "description": " ※prefab ID: junk_pile_big\n ※Name: Teetering Junk Pile\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_checkerfloor(ID Complete)": {
        "prefix": "p+turf_checkerfloor",
        "body": "\"turf_checkerfloor\"",
        "description": " ※prefab ID: turf_checkerfloor\n ※Name: Checkered Flooring\n ※Recipe: \n\t+ 1 x: Marble/marble\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_checkerfloor(ReverseSearch)": {
        "prefix": "p+Checkered Flooring",
        "body": "\"turf_checkerfloor\"",
        "description": " ※prefab ID: turf_checkerfloor\n ※Name: Checkered Flooring\n ※Recipe: \n\t+ 1 x: Marble/marble\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:hammer_mjolnir(ID Complete)": {
        "prefix": "p+hammer_mjolnir",
        "body": "\"hammer_mjolnir\"",
        "description": " ※prefab ID: hammer_mjolnir\n ※Name: Forging Hammer\n ※prefab Version: DST-632551 "
    },
    "prefab:hammer_mjolnir(ReverseSearch)": {
        "prefix": "p+Forging Hammer",
        "body": "\"hammer_mjolnir\"",
        "description": " ※prefab ID: hammer_mjolnir\n ※Name: Forging Hammer\n ※prefab Version: DST-632551 "
    },
    "prefab:slurtleslime(ID Complete)": {
        "prefix": "p+slurtleslime",
        "body": "\"slurtleslime\"",
        "description": " ※prefab ID: slurtleslime\n ※Name: Slurtle Slime\n ※prefab Version: DST-632551 "
    },
    "prefab:slurtleslime(ReverseSearch)": {
        "prefix": "p+Slurtle Slime",
        "body": "\"slurtleslime\"",
        "description": " ※prefab ID: slurtleslime\n ※Name: Slurtle Slime\n ※prefab Version: DST-632551 "
    },
    "prefab:fused_shadeling_bomb(ID Complete)": {
        "prefix": "p+fused_shadeling_bomb",
        "body": "\"fused_shadeling_bomb\"",
        "description": " ※prefab ID: fused_shadeling_bomb\n ※Name: Dread Mite\n ※prefab Version: DST-632551 "
    },
    "prefab:fused_shadeling_bomb(ReverseSearch)": {
        "prefix": "p+Dread Mite",
        "body": "\"fused_shadeling_bomb\"",
        "description": " ※prefab ID: fused_shadeling_bomb\n ※Name: Dread Mite\n ※prefab Version: DST-632551 "
    },
    "prefab:gestalt_alterguardian_projectile(ID Complete)": {
        "prefix": "p+gestalt_alterguardian_projectile",
        "body": "\"gestalt_alterguardian_projectile\"",
        "description": " ※prefab ID: gestalt_alterguardian_projectile\n ※Name: Gestalt\n ※prefab Version: DST-632551 "
    },
    "prefab:gestalt_alterguardian_projectile(ReverseSearch)": {
        "prefix": "p+Gestalt",
        "body": "\"gestalt_alterguardian_projectile\"",
        "description": " ※prefab ID: gestalt_alterguardian_projectile\n ※Name: Gestalt\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_small_2(ID Complete)": {
        "prefix": "p+oceanfish_small_2",
        "body": "\"oceanfish_small_2\"",
        "description": " ※prefab ID: oceanfish_small_2\n ※Name: Needlenosed Squirt\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_small_2(ReverseSearch)": {
        "prefix": "p+Needlenosed Squirt",
        "body": "\"oceanfish_small_2\"",
        "description": " ※prefab ID: oceanfish_small_2\n ※Name: Needlenosed Squirt\n ※prefab Version: DST-632551 "
    },
    "prefab:kitcoondecor2(ID Complete)": {
        "prefix": "p+kitcoondecor2",
        "body": "\"kitcoondecor2\"",
        "description": " ※prefab ID: kitcoondecor2\n ※Name: Kit Teaser\n ※Recipe: \n\t+ 12 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:kitcoondecor2(ReverseSearch)": {
        "prefix": "p+Kit Teaser",
        "body": "\"kitcoondecor2\"",
        "description": " ※prefab ID: kitcoondecor2\n ※Name: Kit Teaser\n ※Recipe: \n\t+ 12 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_35(ID Complete)": {
        "prefix": "p+trinket_35",
        "body": "\"trinket_35\"",
        "description": " ※prefab ID: trinket_35\n ※Name: Empty Elixir\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_35(ReverseSearch)": {
        "prefix": "p+Empty Elixir",
        "body": "\"trinket_35\"",
        "description": " ※prefab ID: trinket_35\n ※Name: Empty Elixir\n ※prefab Version: DST-632551 "
    },
    "prefab:battlesong_sanityaura(ID Complete)": {
        "prefix": "p+battlesong_sanityaura",
        "body": "\"battlesong_sanityaura\"",
        "description": " ※prefab ID: battlesong_sanityaura\n ※Name: Bel Canto of Courage\n ※Recipe: \n\t+ 1 x: Papyrus/papyrus\n\t+ 1 x: Feather Pencil/featherpencil\n\t+ 1 x: Thulecite Medallion/nightmare_timepiece\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:battlesong_sanityaura(ReverseSearch)": {
        "prefix": "p+Bel Canto of Courage",
        "body": "\"battlesong_sanityaura\"",
        "description": " ※prefab ID: battlesong_sanityaura\n ※Name: Bel Canto of Courage\n ※Recipe: \n\t+ 1 x: Papyrus/papyrus\n\t+ 1 x: Feather Pencil/featherpencil\n\t+ 1 x: Thulecite Medallion/nightmare_timepiece\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:meatrack(ID Complete)": {
        "prefix": "p+meatrack",
        "body": "\"meatrack\"",
        "description": " ※prefab ID: meatrack\n ※Name: Drying Rack\n ※Recipe: \n\t+ 3 x: Twigs/twigs\n\t+ 2 x: Charcoal/charcoal\n\t+ 3 x: Rope/rope\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:meatrack(ReverseSearch)": {
        "prefix": "p+Drying Rack",
        "body": "\"meatrack\"",
        "description": " ※prefab ID: meatrack\n ※Name: Drying Rack\n ※Recipe: \n\t+ 3 x: Twigs/twigs\n\t+ 2 x: Charcoal/charcoal\n\t+ 3 x: Rope/rope\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:bluemooneye(ID Complete)": {
        "prefix": "p+bluemooneye",
        "body": "\"bluemooneye\"",
        "description": " ※prefab ID: bluemooneye\n ※Name: Blue Moonlens\n ※Recipe: \n\t+ 1 x: Cratered Moonrock/moonrockcrater\n\t+ 1 x: Blue Gem/bluegem\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:bluemooneye(ReverseSearch)": {
        "prefix": "p+Blue Moonlens",
        "body": "\"bluemooneye\"",
        "description": " ※prefab ID: bluemooneye\n ※Name: Blue Moonlens\n ※Recipe: \n\t+ 1 x: Cratered Moonrock/moonrockcrater\n\t+ 1 x: Blue Gem/bluegem\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_bishop(ID Complete)": {
        "prefix": "p+chesspiece_bishop",
        "body": "\"chesspiece_bishop\"",
        "description": " ※prefab ID: chesspiece_bishop\n ※Name: Bishop Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_bishop(ReverseSearch)": {
        "prefix": "p+Bishop Figure",
        "body": "\"chesspiece_bishop\"",
        "description": " ※prefab ID: chesspiece_bishop\n ※Name: Bishop Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:pumpkin_lantern(ID Complete)": {
        "prefix": "p+pumpkin_lantern",
        "body": "\"pumpkin_lantern\"",
        "description": " ※prefab ID: pumpkin_lantern\n ※Name: Pumpkin Lantern\n ※Recipe: \n\t+ 1 x: Pumpkin/pumpkin\n\t+ 1 x: Fireflies/fireflies\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:pumpkin_lantern(ReverseSearch)": {
        "prefix": "p+Pumpkin Lantern",
        "body": "\"pumpkin_lantern\"",
        "description": " ※prefab ID: pumpkin_lantern\n ※Name: Pumpkin Lantern\n ※Recipe: \n\t+ 1 x: Pumpkin/pumpkin\n\t+ 1 x: Fireflies/fireflies\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:spider_dropper(ID Complete)": {
        "prefix": "p+spider_dropper",
        "body": "\"spider_dropper\"",
        "description": " ※prefab ID: spider_dropper\n ※Name: Dangling Depth Dweller\n ※prefab Version: DST-632551 "
    },
    "prefab:spider_dropper(ReverseSearch)": {
        "prefix": "p+Dangling Depth Dweller",
        "body": "\"spider_dropper\"",
        "description": " ※prefab ID: spider_dropper\n ※Name: Dangling Depth Dweller\n ※prefab Version: DST-632551 "
    },
    "prefab:balloonparty(ID Complete)": {
        "prefix": "p+balloonparty",
        "body": "\"balloonparty\"",
        "description": " ※prefab ID: balloonparty\n ※Name: Party Balloon\n ※Recipe: \n\t+ 0 x: Pile o' Balloons/balloons_empty\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:balloonparty(ReverseSearch)": {
        "prefix": "p+Party Balloon",
        "body": "\"balloonparty\"",
        "description": " ※prefab ID: balloonparty\n ※Name: Party Balloon\n ※Recipe: \n\t+ 0 x: Pile o' Balloons/balloons_empty\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:wendy(ID Complete)": {
        "prefix": "p+wendy",
        "body": "\"wendy\"",
        "description": " ※prefab ID: wendy\n ※Name: Wendy\n ※prefab Version: DST-632551 "
    },
    "prefab:wendy(ReverseSearch)": {
        "prefix": "p+Wendy",
        "body": "\"wendy\"",
        "description": " ※prefab ID: wendy\n ※Name: Wendy\n ※prefab Version: DST-632551 "
    },
    "prefab:rock_avocado_bush(ID Complete)": {
        "prefix": "p+rock_avocado_bush",
        "body": "\"rock_avocado_bush\"",
        "description": " ※prefab ID: rock_avocado_bush\n ※Name: Stone Fruit Bush\n ※prefab Version: DST-632551 "
    },
    "prefab:rock_avocado_bush(ReverseSearch)": {
        "prefix": "p+Stone Fruit Bush",
        "body": "\"rock_avocado_bush\"",
        "description": " ※prefab ID: rock_avocado_bush\n ※Name: Stone Fruit Bush\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_seedpacket_6(ID Complete)": {
        "prefix": "p+quagmire_seedpacket_6",
        "body": "\"quagmire_seedpacket_6\"",
        "description": " ※prefab ID: quagmire_seedpacket_6\n ※Name: Packet of Oblong Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_seedpacket_6(ReverseSearch)": {
        "prefix": "p+Packet of Oblong Seeds",
        "body": "\"quagmire_seedpacket_6\"",
        "description": " ※prefab ID: quagmire_seedpacket_6\n ※Name: Packet of Oblong Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:beargerfur_sack(ID Complete)": {
        "prefix": "p+beargerfur_sack",
        "body": "\"beargerfur_sack\"",
        "description": " ※prefab ID: beargerfur_sack\n ※Name: Polar Bearger Bin\n ※Recipe: \n\t+ 1 x: Spark Ark/security_pulse_cage_full\n\t+ 1 x: Thick Fur/bearger_fur\n\t+ 3 x: Pure Brilliance/purebrilliance\n\t+ 5 x: Moon Rock/moonrocknugget\n ※Required Tech: \n\t+ LV.2 : Brightsmithy/LUNARFORGING\n ※prefab Version: DST-632551 "
    },
    "prefab:beargerfur_sack(ReverseSearch)": {
        "prefix": "p+Polar Bearger Bin",
        "body": "\"beargerfur_sack\"",
        "description": " ※prefab ID: beargerfur_sack\n ※Name: Polar Bearger Bin\n ※Recipe: \n\t+ 1 x: Spark Ark/security_pulse_cage_full\n\t+ 1 x: Thick Fur/bearger_fur\n\t+ 3 x: Pure Brilliance/purebrilliance\n\t+ 5 x: Moon Rock/moonrocknugget\n ※Required Tech: \n\t+ LV.2 : Brightsmithy/LUNARFORGING\n ※prefab Version: DST-632551 "
    },
    "prefab:mutator_water(ID Complete)": {
        "prefix": "p+mutator_water",
        "body": "\"mutator_water\"",
        "description": " ※prefab ID: mutator_water\n ※Name: Strider Switcherdoodle\n ※Recipe: \n\t+ 2 x: Monster Meat/monstermeat\n\t+ 2 x: Silk/silk\n\t+ 2 x: Fig/fig\n ※Required Tech: \n\t+ LV.1 : Spider Care/SPIDERCRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:mutator_water(ReverseSearch)": {
        "prefix": "p+Strider Switcherdoodle",
        "body": "\"mutator_water\"",
        "description": " ※prefab ID: mutator_water\n ※Name: Strider Switcherdoodle\n ※Recipe: \n\t+ 2 x: Monster Meat/monstermeat\n\t+ 2 x: Silk/silk\n\t+ 2 x: Fig/fig\n ※Required Tech: \n\t+ LV.1 : Spider Care/SPIDERCRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:lightning_rod(ID Complete)": {
        "prefix": "p+lightning_rod",
        "body": "\"lightning_rod\"",
        "description": " ※prefab ID: lightning_rod\n ※Name: Lightning Rod\n ※Recipe: \n\t+ 4 x: Gold Nugget/goldnugget\n\t+ 1 x: Cut Stone/cutstone\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:lightning_rod(ReverseSearch)": {
        "prefix": "p+Lightning Rod",
        "body": "\"lightning_rod\"",
        "description": " ※prefab ID: lightning_rod\n ※Name: Lightning Rod\n ※Recipe: \n\t+ 4 x: Gold Nugget/goldnugget\n\t+ 1 x: Cut Stone/cutstone\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:green_mushroomhat(ID Complete)": {
        "prefix": "p+green_mushroomhat",
        "body": "\"green_mushroomhat\"",
        "description": " ※prefab ID: green_mushroomhat\n ※Name: Green Funcap\n ※Recipe: \n\t+ 6 x: Green Cap/green_cap\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:green_mushroomhat(ReverseSearch)": {
        "prefix": "p+Green Funcap",
        "body": "\"green_mushroomhat\"",
        "description": " ※prefab ID: green_mushroomhat\n ※Name: Green Funcap\n ※Recipe: \n\t+ 6 x: Green Cap/green_cap\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:burnt_marsh_bush(ID Complete)": {
        "prefix": "p+burnt_marsh_bush",
        "body": "\"burnt_marsh_bush\"",
        "description": " ※prefab ID: burnt_marsh_bush\n ※Name: Spiky Bush\n ※prefab Version: DST-632551 "
    },
    "prefab:burnt_marsh_bush(ReverseSearch)": {
        "prefix": "p+Spiky Bush",
        "body": "\"burnt_marsh_bush\"",
        "description": " ※prefab ID: burnt_marsh_bush\n ※Name: Spiky Bush\n ※prefab Version: DST-632551 "
    },
    "prefab:moonbutterfly(ID Complete)": {
        "prefix": "p+moonbutterfly",
        "body": "\"moonbutterfly\"",
        "description": " ※prefab ID: moonbutterfly\n ※Name: Moon Moth\n ※prefab Version: DST-632551 "
    },
    "prefab:moonbutterfly(ReverseSearch)": {
        "prefix": "p+Moon Moth",
        "body": "\"moonbutterfly\"",
        "description": " ※prefab ID: moonbutterfly\n ※Name: Moon Moth\n ※prefab Version: DST-632551 "
    },
    "prefab:durian_oversized_rotten(ID Complete)": {
        "prefix": "p+durian_oversized_rotten",
        "body": "\"durian_oversized_rotten\"",
        "description": " ※prefab ID: durian_oversized_rotten\n ※Name: Giant Rotting Durian\n ※prefab Version: DST-632551 "
    },
    "prefab:durian_oversized_rotten(ReverseSearch)": {
        "prefix": "p+Giant Rotting Durian",
        "body": "\"durian_oversized_rotten\"",
        "description": " ※prefab ID: durian_oversized_rotten\n ※Name: Giant Rotting Durian\n ※prefab Version: DST-632551 "
    },
    "prefab:wall_dreadstone_item(ID Complete)": {
        "prefix": "p+wall_dreadstone_item",
        "body": "\"wall_dreadstone_item\"",
        "description": " ※prefab ID: wall_dreadstone_item\n ※Name: Dreadstone Wall\n ※Recipe: \n\t+ 4 x: Dreadstone/dreadstone\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:wall_dreadstone_item(ReverseSearch)": {
        "prefix": "p+Dreadstone Wall",
        "body": "\"wall_dreadstone_item\"",
        "description": " ※prefab ID: wall_dreadstone_item\n ※Name: Dreadstone Wall\n ※Recipe: \n\t+ 4 x: Dreadstone/dreadstone\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:mutator_warrior(ID Complete)": {
        "prefix": "p+mutator_warrior",
        "body": "\"mutator_warrior\"",
        "description": " ※prefab ID: mutator_warrior\n ※Name: Warrior Switcherdoodle\n ※Recipe: \n\t+ 2 x: Monster Meat/monstermeat\n\t+ 1 x: Silk/silk\n\t+ 1 x: Pig Skin/pigskin\n ※Required Tech: \n\t+ LV.1 : Spider Care/SPIDERCRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:mutator_warrior(ReverseSearch)": {
        "prefix": "p+Warrior Switcherdoodle",
        "body": "\"mutator_warrior\"",
        "description": " ※prefab ID: mutator_warrior\n ※Name: Warrior Switcherdoodle\n ※Recipe: \n\t+ 2 x: Monster Meat/monstermeat\n\t+ 1 x: Silk/silk\n\t+ 1 x: Pig Skin/pigskin\n ※Required Tech: \n\t+ LV.1 : Spider Care/SPIDERCRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_002(ID Complete)": {
        "prefix": "p+quagmire_food_002",
        "body": "\"quagmire_food_002\"",
        "description": " ※prefab ID: quagmire_food_002\n ※Name: Potato Chips\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_002(ReverseSearch)": {
        "prefix": "p+Potato Chips",
        "body": "\"quagmire_food_002\"",
        "description": " ※prefab ID: quagmire_food_002\n ※Name: Potato Chips\n ※prefab Version: DST-632551 "
    },
    "prefab:dragonchilisalad(ID Complete)": {
        "prefix": "p+dragonchilisalad",
        "body": "\"dragonchilisalad\"",
        "description": " ※prefab ID: dragonchilisalad\n ※Name: Hot Dragon Chili Salad\n ※prefab Version: DST-632551 "
    },
    "prefab:dragonchilisalad(ReverseSearch)": {
        "prefix": "p+Hot Dragon Chili Salad",
        "body": "\"dragonchilisalad\"",
        "description": " ※prefab ID: dragonchilisalad\n ※Name: Hot Dragon Chili Salad\n ※prefab Version: DST-632551 "
    },
    "prefab:buzzard(ID Complete)": {
        "prefix": "p+buzzard",
        "body": "\"buzzard\"",
        "description": " ※prefab ID: buzzard\n ※Name: Buzzard\n ※prefab Version: DST-632551 "
    },
    "prefab:buzzard(ReverseSearch)": {
        "prefix": "p+Buzzard",
        "body": "\"buzzard\"",
        "description": " ※prefab ID: buzzard\n ※Name: Buzzard\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_rubble_pubdoor(ID Complete)": {
        "prefix": "p+quagmire_rubble_pubdoor",
        "body": "\"quagmire_rubble_pubdoor\"",
        "description": " ※prefab ID: quagmire_rubble_pubdoor\n ※Name: Dilapidated Door\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_rubble_pubdoor(ReverseSearch)": {
        "prefix": "p+Dilapidated Door",
        "body": "\"quagmire_rubble_pubdoor\"",
        "description": " ※prefab ID: quagmire_rubble_pubdoor\n ※Name: Dilapidated Door\n ※prefab Version: DST-632551 "
    },
    "prefab:spoiled_food(ID Complete)": {
        "prefix": "p+spoiled_food",
        "body": "\"spoiled_food\"",
        "description": " ※prefab ID: spoiled_food\n ※Name: Rot\n ※prefab Version: DST-632551 "
    },
    "prefab:spoiled_food(ReverseSearch)": {
        "prefix": "p+Rot",
        "body": "\"spoiled_food\"",
        "description": " ※prefab ID: spoiled_food\n ※Name: Rot\n ※prefab Version: DST-632551 "
    },
    "prefab:bundlewrap(ID Complete)": {
        "prefix": "p+bundlewrap",
        "body": "\"bundlewrap\"",
        "description": " ※prefab ID: bundlewrap\n ※Name: Bundling Wrap\n ※Recipe: \n\t+ 1 x: Wax Paper/waxpaper\n\t+ 1 x: Rope/rope\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:bundlewrap(ReverseSearch)": {
        "prefix": "p+Bundling Wrap",
        "body": "\"bundlewrap\"",
        "description": " ※prefab ID: bundlewrap\n ※Name: Bundling Wrap\n ※Recipe: \n\t+ 1 x: Wax Paper/waxpaper\n\t+ 1 x: Rope/rope\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:skeleton(ID Complete)": {
        "prefix": "p+skeleton",
        "body": "\"skeleton\"",
        "description": " ※prefab ID: skeleton\n ※Name: Skeleton\n ※prefab Version: DST-632551 "
    },
    "prefab:skeleton(ReverseSearch)": {
        "prefix": "p+Skeleton",
        "body": "\"skeleton\"",
        "description": " ※prefab ID: skeleton\n ※Name: Skeleton\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_tomato_cooked(ID Complete)": {
        "prefix": "p+quagmire_tomato_cooked",
        "body": "\"quagmire_tomato_cooked\"",
        "description": " ※prefab ID: quagmire_tomato_cooked\n ※Name: Roast Toma Root\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_tomato_cooked(ReverseSearch)": {
        "prefix": "p+Roast Toma Root",
        "body": "\"quagmire_tomato_cooked\"",
        "description": " ※prefab ID: quagmire_tomato_cooked\n ※Name: Roast Toma Root\n ※prefab Version: DST-632551 "
    },
    "prefab:known_garlic_seeds(ID Complete)": {
        "prefix": "p+known_garlic_seeds",
        "body": "\"known_garlic_seeds\"",
        "description": " ※prefab ID: known_garlic_seeds\n ※Name: Garlic Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:known_garlic_seeds(ReverseSearch)": {
        "prefix": "p+Garlic Seeds",
        "body": "\"known_garlic_seeds\"",
        "description": " ※prefab ID: known_garlic_seeds\n ※Name: Garlic Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:sword_lunarplant(ID Complete)": {
        "prefix": "p+sword_lunarplant",
        "body": "\"sword_lunarplant\"",
        "description": " ※prefab ID: sword_lunarplant\n ※Name: Brightshade Sword\n ※Recipe: \n\t+ 4 x: Pure Brilliance/purebrilliance\n\t+ 3 x: Brightshade Husk/lunarplant_husk\n ※Required Tech: \n\t+ LV.2 : Brightsmithy/LUNARFORGING\n ※prefab Version: DST-632551 "
    },
    "prefab:sword_lunarplant(ReverseSearch)": {
        "prefix": "p+Brightshade Sword",
        "body": "\"sword_lunarplant\"",
        "description": " ※prefab ID: sword_lunarplant\n ※Name: Brightshade Sword\n ※Recipe: \n\t+ 4 x: Pure Brilliance/purebrilliance\n\t+ 3 x: Brightshade Husk/lunarplant_husk\n ※Required Tech: \n\t+ LV.2 : Brightsmithy/LUNARFORGING\n ※prefab Version: DST-632551 "
    },
    "prefab:armor_sanity(ID Complete)": {
        "prefix": "p+armor_sanity",
        "body": "\"armor_sanity\"",
        "description": " ※prefab ID: armor_sanity\n ※Name: Night Armor\n ※Recipe: \n\t+ 5 x: Nightmare Fuel/nightmarefuel\n\t+ 3 x: Papyrus/papyrus\n ※Required Tech: \n\t+ LV.3 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:armor_sanity(ReverseSearch)": {
        "prefix": "p+Night Armor",
        "body": "\"armor_sanity\"",
        "description": " ※prefab ID: armor_sanity\n ※Name: Night Armor\n ※Recipe: \n\t+ 5 x: Nightmare Fuel/nightmarefuel\n\t+ 3 x: Papyrus/papyrus\n ※Required Tech: \n\t+ LV.3 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:phlegm(ID Complete)": {
        "prefix": "p+phlegm",
        "body": "\"phlegm\"",
        "description": " ※prefab ID: phlegm\n ※Name: Phlegm\n ※prefab Version: DST-632551 "
    },
    "prefab:phlegm(ReverseSearch)": {
        "prefix": "p+Phlegm",
        "body": "\"phlegm\"",
        "description": " ※prefab ID: phlegm\n ※Name: Phlegm\n ※prefab Version: DST-632551 "
    },
    "prefab:animal_track(ID Complete)": {
        "prefix": "p+animal_track",
        "body": "\"animal_track\"",
        "description": " ※prefab ID: animal_track\n ※Name: Animal Track\n ※prefab Version: DST-632551 "
    },
    "prefab:animal_track(ReverseSearch)": {
        "prefix": "p+Animal Track",
        "body": "\"animal_track\"",
        "description": " ※prefab ID: animal_track\n ※Name: Animal Track\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_oven(ID Complete)": {
        "prefix": "p+quagmire_oven",
        "body": "\"quagmire_oven\"",
        "description": " ※prefab ID: quagmire_oven\n ※Name: Oven\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_oven(ReverseSearch)": {
        "prefix": "p+Oven",
        "body": "\"quagmire_oven\"",
        "description": " ※prefab ID: quagmire_oven\n ※Name: Oven\n ※prefab Version: DST-632551 "
    },
    "prefab:yotc_carrat_race_finish_item(ID Complete)": {
        "prefix": "p+yotc_carrat_race_finish_item",
        "body": "\"yotc_carrat_race_finish_item\"",
        "description": " ※prefab ID: yotc_carrat_race_finish_item\n ※Name: Finish Line Kit\n ※Recipe: \n\t+ 1 x: Gold Nugget/goldnugget\n ※Required Tech: \n\t+ LV.3 : /CARRATOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:yotc_carrat_race_finish_item(ReverseSearch)": {
        "prefix": "p+Finish Line Kit",
        "body": "\"yotc_carrat_race_finish_item\"",
        "description": " ※prefab ID: yotc_carrat_race_finish_item\n ※Name: Finish Line Kit\n ※Recipe: \n\t+ 1 x: Gold Nugget/goldnugget\n ※Required Tech: \n\t+ LV.3 : /CARRATOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:hotchili(ID Complete)": {
        "prefix": "p+hotchili",
        "body": "\"hotchili\"",
        "description": " ※prefab ID: hotchili\n ※Name: Spicy Chili\n ※prefab Version: DST-632551 "
    },
    "prefab:hotchili(ReverseSearch)": {
        "prefix": "p+Spicy Chili",
        "body": "\"hotchili\"",
        "description": " ※prefab ID: hotchili\n ※Name: Spicy Chili\n ※prefab Version: DST-632551 "
    },
    "prefab:winona_spotlight(ID Complete)": {
        "prefix": "p+winona_spotlight",
        "body": "\"winona_spotlight\"",
        "description": " ※prefab ID: winona_spotlight\n ※Name: Winona's Spotlight\n ※Recipe: \n\t+ 1 x: Trusty Tape/sewing_tape\n\t+ 2 x: Gold Nugget/goldnugget\n\t+ 1 x: Fireflies/fireflies\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:winona_spotlight(ReverseSearch)": {
        "prefix": "p+Winona's Spotlight",
        "body": "\"winona_spotlight\"",
        "description": " ※prefab ID: winona_spotlight\n ※Name: Winona's Spotlight\n ※Recipe: \n\t+ 1 x: Trusty Tape/sewing_tape\n\t+ 2 x: Gold Nugget/goldnugget\n\t+ 1 x: Fireflies/fireflies\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_formal_builder(ID Complete)": {
        "prefix": "p+chesspiece_formal_builder",
        "body": "\"chesspiece_formal_builder\"",
        "description": " ※prefab ID: chesspiece_formal_builder\n ※Name: Kingly Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_formal_builder(ReverseSearch)": {
        "prefix": "p+Kingly Figure",
        "body": "\"chesspiece_formal_builder\"",
        "description": " ※prefab ID: chesspiece_formal_builder\n ※Name: Kingly Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:moonglass(ID Complete)": {
        "prefix": "p+moonglass",
        "body": "\"moonglass\"",
        "description": " ※prefab ID: moonglass\n ※Name: Moon Shard\n ※prefab Version: DST-632551 "
    },
    "prefab:moonglass(ReverseSearch)": {
        "prefix": "p+Moon Shard",
        "body": "\"moonglass\"",
        "description": " ※prefab ID: moonglass\n ※Name: Moon Shard\n ※prefab Version: DST-632551 "
    },
    "prefab:spice_salt_food(ID Complete)": {
        "prefix": "p+spice_salt_food",
        "body": "\"spice_salt_food\"",
        "description": " ※prefab ID: spice_salt_food\n ※Name: Salty {food}\n ※prefab Version: DST-632551 "
    },
    "prefab:spice_salt_food(ReverseSearch)": {
        "prefix": "p+Salty {food}",
        "body": "\"spice_salt_food\"",
        "description": " ※prefab ID: spice_salt_food\n ※Name: Salty {food}\n ※prefab Version: DST-632551 "
    },
    "prefab:butterflywings(ID Complete)": {
        "prefix": "p+butterflywings",
        "body": "\"butterflywings\"",
        "description": " ※prefab ID: butterflywings\n ※Name: Butterfly Wings\n ※prefab Version: DST-632551 "
    },
    "prefab:butterflywings(ReverseSearch)": {
        "prefix": "p+Butterfly Wings",
        "body": "\"butterflywings\"",
        "description": " ※prefab ID: butterflywings\n ※Name: Butterfly Wings\n ※prefab Version: DST-632551 "
    },
    "prefab:sleepbomb(ID Complete)": {
        "prefix": "p+sleepbomb",
        "body": "\"sleepbomb\"",
        "description": " ※prefab ID: sleepbomb\n ※Name: Napsack\n ※Recipe: \n\t+ 1 x: Shroom Skin/shroom_skin\n\t+ 1 x: Canary (Volatile)/canary_poisoned\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:sleepbomb(ReverseSearch)": {
        "prefix": "p+Napsack",
        "body": "\"sleepbomb\"",
        "description": " ※prefab ID: sleepbomb\n ※Name: Napsack\n ※Recipe: \n\t+ 1 x: Shroom Skin/shroom_skin\n\t+ 1 x: Canary (Volatile)/canary_poisoned\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_twinsofterror_builder(ID Complete)": {
        "prefix": "p+chesspiece_twinsofterror_builder",
        "body": "\"chesspiece_twinsofterror_builder\"",
        "description": " ※prefab ID: chesspiece_twinsofterror_builder\n ※Name: Twins of Terror Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_twinsofterror_builder(ReverseSearch)": {
        "prefix": "p+Twins of Terror Figure",
        "body": "\"chesspiece_twinsofterror_builder\"",
        "description": " ※prefab ID: chesspiece_twinsofterror_builder\n ※Name: Twins of Terror Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:slurtlehat(ID Complete)": {
        "prefix": "p+slurtlehat",
        "body": "\"slurtlehat\"",
        "description": " ※prefab ID: slurtlehat\n ※Name: Shelmet\n ※prefab Version: DST-632551 "
    },
    "prefab:slurtlehat(ReverseSearch)": {
        "prefix": "p+Shelmet",
        "body": "\"slurtlehat\"",
        "description": " ※prefab ID: slurtlehat\n ※Name: Shelmet\n ※prefab Version: DST-632551 "
    },
    "prefab:ghostlyelixir_retaliation(ID Complete)": {
        "prefix": "p+ghostlyelixir_retaliation",
        "body": "\"ghostlyelixir_retaliation\"",
        "description": " ※prefab ID: ghostlyelixir_retaliation\n ※Name: Distilled Vengeance\n ※Recipe: \n\t+ 1 x: Living Log/livinglog\n\t+ 3 x: Mourning Glory/ghostflower\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:ghostlyelixir_retaliation(ReverseSearch)": {
        "prefix": "p+Distilled Vengeance",
        "body": "\"ghostlyelixir_retaliation\"",
        "description": " ※prefab ID: ghostlyelixir_retaliation\n ※Name: Distilled Vengeance\n ※Recipe: \n\t+ 1 x: Living Log/livinglog\n\t+ 3 x: Mourning Glory/ghostflower\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:mosquitosack(ID Complete)": {
        "prefix": "p+mosquitosack",
        "body": "\"mosquitosack\"",
        "description": " ※prefab ID: mosquitosack\n ※Name: Mosquito Sack\n ※prefab Version: DST-632551 "
    },
    "prefab:mosquitosack(ReverseSearch)": {
        "prefix": "p+Mosquito Sack",
        "body": "\"mosquitosack\"",
        "description": " ※prefab ID: mosquitosack\n ※Name: Mosquito Sack\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_37(ID Complete)": {
        "prefix": "p+trinket_37",
        "body": "\"trinket_37\"",
        "description": " ※prefab ID: trinket_37\n ※Name: Broken Stake\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_37(ReverseSearch)": {
        "prefix": "p+Broken Stake",
        "body": "\"trinket_37\"",
        "description": " ※prefab ID: trinket_37\n ※Name: Broken Stake\n ※prefab Version: DST-632551 "
    },
    "prefab:bushhat(ID Complete)": {
        "prefix": "p+bushhat",
        "body": "\"bushhat\"",
        "description": " ※prefab ID: bushhat\n ※Name: Bush Hat\n ※Recipe: \n\t+ 1 x: Straw Hat/strawhat\n\t+ 1 x: Rope/rope\n\t+ 1 x: Berry Bush/dug_berrybush\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:bushhat(ReverseSearch)": {
        "prefix": "p+Bush Hat",
        "body": "\"bushhat\"",
        "description": " ※prefab ID: bushhat\n ※Name: Bush Hat\n ※Recipe: \n\t+ 1 x: Straw Hat/strawhat\n\t+ 1 x: Rope/rope\n\t+ 1 x: Berry Bush/dug_berrybush\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:pigelitefighter4(ID Complete)": {
        "prefix": "p+pigelitefighter4",
        "body": "\"pigelitefighter4\"",
        "description": " ※prefab ID: pigelitefighter4\n ※Name: Sawyer\n ※prefab Version: DST-632551 "
    },
    "prefab:pigelitefighter4(ReverseSearch)": {
        "prefix": "p+Sawyer",
        "body": "\"pigelitefighter4\"",
        "description": " ※prefab ID: pigelitefighter4\n ※Name: Sawyer\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalgame_memory_card_off(ID Complete)": {
        "prefix": "p+carnivalgame_memory_card_off",
        "body": "\"carnivalgame_memory_card_off\"",
        "description": " ※prefab ID: carnivalgame_memory_card_off\n ※Name: Trapdoor\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalgame_memory_card_off(ReverseSearch)": {
        "prefix": "p+Trapdoor",
        "body": "\"carnivalgame_memory_card_off\"",
        "description": " ※prefab ID: carnivalgame_memory_card_off\n ※Name: Trapdoor\n ※prefab Version: DST-632551 "
    },
    "prefab:marsh_plant(ID Complete)": {
        "prefix": "p+marsh_plant",
        "body": "\"marsh_plant\"",
        "description": " ※prefab ID: marsh_plant\n ※Name: Plant\n ※prefab Version: DST-632551 "
    },
    "prefab:marsh_plant(ReverseSearch)": {
        "prefix": "p+Plant",
        "body": "\"marsh_plant\"",
        "description": " ※prefab ID: marsh_plant\n ※Name: Plant\n ※prefab Version: DST-632551 "
    },
    "prefab:hutch(ID Complete)": {
        "prefix": "p+hutch",
        "body": "\"hutch\"",
        "description": " ※prefab ID: hutch\n ※Name: Hutch\n ※prefab Version: DST-632551 "
    },
    "prefab:hutch(ReverseSearch)": {
        "prefix": "p+Hutch",
        "body": "\"hutch\"",
        "description": " ※prefab ID: hutch\n ※Name: Hutch\n ※prefab Version: DST-632551 "
    },
    "prefab:mermarmorupgradedhat(ID Complete)": {
        "prefix": "p+mermarmorupgradedhat",
        "body": "\"mermarmorupgradedhat\"",
        "description": " ※prefab ID: mermarmorupgradedhat\n ※Name: Swamp Warrior Helmet\n ※Recipe: \n\t+ 1 x: Log/log\n\t+ 1 x: Cut Grass/cutgrass\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:mermarmorupgradedhat(ReverseSearch)": {
        "prefix": "p+Swamp Warrior Helmet",
        "body": "\"mermarmorupgradedhat\"",
        "description": " ※prefab ID: mermarmorupgradedhat\n ※Name: Swamp Warrior Helmet\n ※Recipe: \n\t+ 1 x: Log/log\n\t+ 1 x: Cut Grass/cutgrass\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:healingsalve_acid(ID Complete)": {
        "prefix": "p+healingsalve_acid",
        "body": "\"healingsalve_acid\"",
        "description": " ※prefab ID: healingsalve_acid\n ※Name: Slimy Salve\n ※Recipe: \n\t+ 1 x: Healing Salve/healingsalve\n\t+ 1 x: Nitre/nitre\n\t+ 1 x: Marble/marble\n\t+ 1 x: Slurtle Slime/slurtleslime\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:healingsalve_acid(ReverseSearch)": {
        "prefix": "p+Slimy Salve",
        "body": "\"healingsalve_acid\"",
        "description": " ※prefab ID: healingsalve_acid\n ※Name: Slimy Salve\n ※Recipe: \n\t+ 1 x: Healing Salve/healingsalve\n\t+ 1 x: Nitre/nitre\n\t+ 1 x: Marble/marble\n\t+ 1 x: Slurtle Slime/slurtleslime\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:berries(ID Complete)": {
        "prefix": "p+berries",
        "body": "\"berries\"",
        "description": " ※prefab ID: berries\n ※Name: Berries\n ※prefab Version: DST-632551 "
    },
    "prefab:berries(ReverseSearch)": {
        "prefix": "p+Berries",
        "body": "\"berries\"",
        "description": " ※prefab ID: berries\n ※Name: Berries\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_13(ID Complete)": {
        "prefix": "p+trinket_13",
        "body": "\"trinket_13\"",
        "description": " ※prefab ID: trinket_13\n ※Name: Gnomette\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_13(ReverseSearch)": {
        "prefix": "p+Gnomette",
        "body": "\"trinket_13\"",
        "description": " ※prefab ID: trinket_13\n ※Name: Gnomette\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_9(ID Complete)": {
        "prefix": "p+trinket_9",
        "body": "\"trinket_9\"",
        "description": " ※prefab ID: trinket_9\n ※Name: Mismatched Buttons\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_9(ReverseSearch)": {
        "prefix": "p+Mismatched Buttons",
        "body": "\"trinket_9\"",
        "description": " ※prefab ID: trinket_9\n ※Name: Mismatched Buttons\n ※prefab Version: DST-632551 "
    },
    "prefab:hot(ID Complete)": {
        "prefix": "p+hot",
        "body": "\"hot\"",
        "description": " ※prefab ID: hot\n ※Name: Overheating\n ※prefab Version: DST-632551 "
    },
    "prefab:hot(ReverseSearch)": {
        "prefix": "p+Overheating",
        "body": "\"hot\"",
        "description": " ※prefab ID: hot\n ※Name: Overheating\n ※prefab Version: DST-632551 "
    },
    "prefab:knight_nightmare(ID Complete)": {
        "prefix": "p+knight_nightmare",
        "body": "\"knight_nightmare\"",
        "description": " ※prefab ID: knight_nightmare\n ※Name: Damaged Knight\n ※prefab Version: DST-632551 "
    },
    "prefab:knight_nightmare(ReverseSearch)": {
        "prefix": "p+Damaged Knight",
        "body": "\"knight_nightmare\"",
        "description": " ※prefab ID: knight_nightmare\n ※Name: Damaged Knight\n ※prefab Version: DST-632551 "
    },
    "prefab:beebox_hermit(ID Complete)": {
        "prefix": "p+beebox_hermit",
        "body": "\"beebox_hermit\"",
        "description": " ※prefab ID: beebox_hermit\n ※Name: Bee Box\n ※prefab Version: DST-632551 "
    },
    "prefab:beebox_hermit(ReverseSearch)": {
        "prefix": "p+Bee Box",
        "body": "\"beebox_hermit\"",
        "description": " ※prefab ID: beebox_hermit\n ※Name: Bee Box\n ※prefab Version: DST-632551 "
    },
    "prefab:krampus(ID Complete)": {
        "prefix": "p+krampus",
        "body": "\"krampus\"",
        "description": " ※prefab ID: krampus\n ※Name: Krampus\n ※prefab Version: DST-632551 "
    },
    "prefab:krampus(ReverseSearch)": {
        "prefix": "p+Krampus",
        "body": "\"krampus\"",
        "description": " ※prefab ID: krampus\n ※Name: Krampus\n ※prefab Version: DST-632551 "
    },
    "prefab:stuffedeggplant(ID Complete)": {
        "prefix": "p+stuffedeggplant",
        "body": "\"stuffedeggplant\"",
        "description": " ※prefab ID: stuffedeggplant\n ※Name: Stuffed Eggplant\n ※prefab Version: DST-632551 "
    },
    "prefab:stuffedeggplant(ReverseSearch)": {
        "prefix": "p+Stuffed Eggplant",
        "body": "\"stuffedeggplant\"",
        "description": " ※prefab ID: stuffedeggplant\n ※Name: Stuffed Eggplant\n ※prefab Version: DST-632551 "
    },
    "prefab:trunkvest_winter(ID Complete)": {
        "prefix": "p+trunkvest_winter",
        "body": "\"trunkvest_winter\"",
        "description": " ※prefab ID: trunkvest_winter\n ※Name: Puffy Vest\n ※Recipe: \n\t+ 1 x: Winter Koalefant Trunk/trunk_winter\n\t+ 8 x: Silk/silk\n\t+ 2 x: Beefalo Wool/beefalowool\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:trunkvest_winter(ReverseSearch)": {
        "prefix": "p+Puffy Vest",
        "body": "\"trunkvest_winter\"",
        "description": " ※prefab ID: trunkvest_winter\n ※Name: Puffy Vest\n ※Recipe: \n\t+ 1 x: Winter Koalefant Trunk/trunk_winter\n\t+ 8 x: Silk/silk\n\t+ 2 x: Beefalo Wool/beefalowool\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:pottedfern(ID Complete)": {
        "prefix": "p+pottedfern",
        "body": "\"pottedfern\"",
        "description": " ※prefab ID: pottedfern\n ※Name: Potted Fern\n ※Recipe: \n\t+ 2 x: Foliage/foliage\n\t+ 1 x: Broken Shell/slurtle_shellpieces\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:pottedfern(ReverseSearch)": {
        "prefix": "p+Potted Fern",
        "body": "\"pottedfern\"",
        "description": " ※prefab ID: pottedfern\n ※Name: Potted Fern\n ※Recipe: \n\t+ 2 x: Foliage/foliage\n\t+ 1 x: Broken Shell/slurtle_shellpieces\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:mask_mirrorhat(ID Complete)": {
        "prefix": "p+mask_mirrorhat",
        "body": "\"mask_mirrorhat\"",
        "description": " ※prefab ID: mask_mirrorhat\n ※Name: Mirror Mask\n ※prefab Version: DST-632551 "
    },
    "prefab:mask_mirrorhat(ReverseSearch)": {
        "prefix": "p+Mirror Mask",
        "body": "\"mask_mirrorhat\"",
        "description": " ※prefab ID: mask_mirrorhat\n ※Name: Mirror Mask\n ※prefab Version: DST-632551 "
    },
    "prefab:dragonboat_kit(ID Complete)": {
        "prefix": "p+dragonboat_kit",
        "body": "\"dragonboat_kit\"",
        "description": " ※prefab ID: dragonboat_kit\n ※Name: Dragonfly Boat Kit\n ※Recipe: \n\t+ 3 x: Gold Nugget/goldnugget\n ※Required Tech: \n\t+ LV.3 : /DRAGONOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:dragonboat_kit(ReverseSearch)": {
        "prefix": "p+Dragonfly Boat Kit",
        "body": "\"dragonboat_kit\"",
        "description": " ※prefab ID: dragonboat_kit\n ※Name: Dragonfly Boat Kit\n ※Recipe: \n\t+ 3 x: Gold Nugget/goldnugget\n ※Required Tech: \n\t+ LV.3 : /DRAGONOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishableflotsam(ID Complete)": {
        "prefix": "p+oceanfishableflotsam",
        "body": "\"oceanfishableflotsam\"",
        "description": " ※prefab ID: oceanfishableflotsam\n ※Name: Ocean Debris\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishableflotsam(ReverseSearch)": {
        "prefix": "p+Ocean Debris",
        "body": "\"oceanfishableflotsam\"",
        "description": " ※prefab ID: oceanfishableflotsam\n ※Name: Ocean Debris\n ※prefab Version: DST-632551 "
    },
    "prefab:archive_resonator_item(ID Complete)": {
        "prefix": "p+archive_resonator_item",
        "body": "\"archive_resonator_item\"",
        "description": " ※prefab ID: archive_resonator_item\n ※Name: Astral Detector\n ※Recipe: \n\t+ 1 x: Moon Rock/moonrocknugget\n\t+ 1 x: Thulecite/thulecite\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:archive_resonator_item(ReverseSearch)": {
        "prefix": "p+Astral Detector",
        "body": "\"archive_resonator_item\"",
        "description": " ※prefab ID: archive_resonator_item\n ※Name: Astral Detector\n ※Recipe: \n\t+ 1 x: Moon Rock/moonrocknugget\n\t+ 1 x: Thulecite/thulecite\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:wintersfeastoven(ID Complete)": {
        "prefix": "p+wintersfeastoven",
        "body": "\"wintersfeastoven\"",
        "description": " ※prefab ID: wintersfeastoven\n ※Name: Masonry Oven\n ※Recipe: \n\t+ 1 x: Cut Stone/cutstone\n\t+ 1 x: Marble/marble\n\t+ 1 x: Log/log\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:wintersfeastoven(ReverseSearch)": {
        "prefix": "p+Masonry Oven",
        "body": "\"wintersfeastoven\"",
        "description": " ※prefab ID: wintersfeastoven\n ※Name: Masonry Oven\n ※Recipe: \n\t+ 1 x: Cut Stone/cutstone\n\t+ 1 x: Marble/marble\n\t+ 1 x: Log/log\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_15(ID Complete)": {
        "prefix": "p+trinket_15",
        "body": "\"trinket_15\"",
        "description": " ※prefab ID: trinket_15\n ※Name: White Bishop\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_15(ReverseSearch)": {
        "prefix": "p+White Bishop",
        "body": "\"trinket_15\"",
        "description": " ※prefab ID: trinket_15\n ※Name: White Bishop\n ※prefab Version: DST-632551 "
    },
    "prefab:blueprint(ID Complete)": {
        "prefix": "p+blueprint",
        "body": "\"blueprint\"",
        "description": " ※prefab ID: blueprint\n ※Name: Blueprint\n ※prefab Version: DST-632551 "
    },
    "prefab:blueprint(ReverseSearch)": {
        "prefix": "p+Blueprint",
        "body": "\"blueprint\"",
        "description": " ※prefab ID: blueprint\n ※Name: Blueprint\n ※prefab Version: DST-632551 "
    },
    "prefab:ocean_trawler_kit(ID Complete)": {
        "prefix": "p+ocean_trawler_kit",
        "body": "\"ocean_trawler_kit\"",
        "description": " ※prefab ID: ocean_trawler_kit\n ※Name: Ocean Trawler Kit\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 2 x: Rope/rope\n\t+ 6 x: Silk/silk\n ※Required Tech: \n\t+ LV.1 : Seafaring/SEAFARING\n ※prefab Version: DST-632551 "
    },
    "prefab:ocean_trawler_kit(ReverseSearch)": {
        "prefix": "p+Ocean Trawler Kit",
        "body": "\"ocean_trawler_kit\"",
        "description": " ※prefab ID: ocean_trawler_kit\n ※Name: Ocean Trawler Kit\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 2 x: Rope/rope\n\t+ 6 x: Silk/silk\n ※Required Tech: \n\t+ LV.1 : Seafaring/SEAFARING\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_turnip_cooked(ID Complete)": {
        "prefix": "p+quagmire_turnip_cooked",
        "body": "\"quagmire_turnip_cooked\"",
        "description": " ※prefab ID: quagmire_turnip_cooked\n ※Name: Roast Turnip\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_turnip_cooked(ReverseSearch)": {
        "prefix": "p+Roast Turnip",
        "body": "\"quagmire_turnip_cooked\"",
        "description": " ※prefab ID: quagmire_turnip_cooked\n ※Name: Roast Turnip\n ※prefab Version: DST-632551 "
    },
    "prefab:dead_sea_bones(ID Complete)": {
        "prefix": "p+dead_sea_bones",
        "body": "\"dead_sea_bones\"",
        "description": " ※prefab ID: dead_sea_bones\n ※Name: Sea Bones\n ※prefab Version: DST-632551 "
    },
    "prefab:dead_sea_bones(ReverseSearch)": {
        "prefix": "p+Sea Bones",
        "body": "\"dead_sea_bones\"",
        "description": " ※prefab ID: dead_sea_bones\n ※Name: Sea Bones\n ※prefab Version: DST-632551 "
    },
    "prefab:yotb_sewingmachine_item(ID Complete)": {
        "prefix": "p+yotb_sewingmachine_item",
        "body": "\"yotb_sewingmachine_item\"",
        "description": " ※prefab ID: yotb_sewingmachine_item\n ※Name: Sewing Machine Kit\n ※Recipe: \n\t+ 1 x: Stinger/stinger\n\t+ 1 x: Gold Nugget/goldnugget\n\t+ 2 x: Silk/silk\n ※Required Tech: \n\t+ LV.3 : /BEEFOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:yotb_sewingmachine_item(ReverseSearch)": {
        "prefix": "p+Sewing Machine Kit",
        "body": "\"yotb_sewingmachine_item\"",
        "description": " ※prefab ID: yotb_sewingmachine_item\n ※Name: Sewing Machine Kit\n ※Recipe: \n\t+ 1 x: Stinger/stinger\n\t+ 1 x: Gold Nugget/goldnugget\n\t+ 2 x: Silk/silk\n ※Required Tech: \n\t+ LV.3 : /BEEFOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:horrorfuel(ID Complete)": {
        "prefix": "p+horrorfuel",
        "body": "\"horrorfuel\"",
        "description": " ※prefab ID: horrorfuel\n ※Name: Pure Horror\n ※prefab Version: DST-632551 "
    },
    "prefab:horrorfuel(ReverseSearch)": {
        "prefix": "p+Pure Horror",
        "body": "\"horrorfuel\"",
        "description": " ※prefab ID: horrorfuel\n ※Name: Pure Horror\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishingbobber_oval(ID Complete)": {
        "prefix": "p+oceanfishingbobber_oval",
        "body": "\"oceanfishingbobber_oval\"",
        "description": " ※prefab ID: oceanfishingbobber_oval\n ※Name: Hardened Slip Bobber\n ※Recipe: \n\t+ 1 x: Driftwood Piece/driftwood_log\n ※Required Tech: \n\t+ LV.1 : Fishing/FISHING\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishingbobber_oval(ReverseSearch)": {
        "prefix": "p+Hardened Slip Bobber",
        "body": "\"oceanfishingbobber_oval\"",
        "description": " ※prefab ID: oceanfishingbobber_oval\n ※Name: Hardened Slip Bobber\n ※Recipe: \n\t+ 1 x: Driftwood Piece/driftwood_log\n ※Required Tech: \n\t+ LV.1 : Fishing/FISHING\n ※prefab Version: DST-632551 "
    },
    "prefab:book_temperature(ID Complete)": {
        "prefix": "p+book_temperature",
        "body": "\"book_temperature\"",
        "description": " ※prefab ID: book_temperature\n ※Name: Tempering Temperatures\n ※Recipe: \n\t+ 2 x: Papyrus/papyrus\n\t+ 1 x: Thermal Stone/heatrock\n ※Required Tech: \n\t+ LV.1 : /BOOKCRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:book_temperature(ReverseSearch)": {
        "prefix": "p+Tempering Temperatures",
        "body": "\"book_temperature\"",
        "description": " ※prefab ID: book_temperature\n ※Name: Tempering Temperatures\n ※Recipe: \n\t+ 2 x: Papyrus/papyrus\n\t+ 1 x: Thermal Stone/heatrock\n ※Required Tech: \n\t+ LV.1 : /BOOKCRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:half_health(ID Complete)": {
        "prefix": "p+half_health",
        "body": "\"half_health\"",
        "description": " ※prefab ID: half_health\n ※Name: Maximum Health\n ※prefab Version: DST-632551 "
    },
    "prefab:half_health(ReverseSearch)": {
        "prefix": "p+Maximum Health",
        "body": "\"half_health\"",
        "description": " ※prefab ID: half_health\n ※Name: Maximum Health\n ※prefab Version: DST-632551 "
    },
    "prefab:wagstaff_tool_4(ID Complete)": {
        "prefix": "p+wagstaff_tool_4",
        "body": "\"wagstaff_tool_4\"",
        "description": " ※prefab ID: wagstaff_tool_4\n ※Name: Conceptual Scrubber\n ※prefab Version: DST-632551 "
    },
    "prefab:wagstaff_tool_4(ReverseSearch)": {
        "prefix": "p+Conceptual Scrubber",
        "body": "\"wagstaff_tool_4\"",
        "description": " ※prefab ID: wagstaff_tool_4\n ※Name: Conceptual Scrubber\n ※prefab Version: DST-632551 "
    },
    "prefab:palmcone_scale(ID Complete)": {
        "prefix": "p+palmcone_scale",
        "body": "\"palmcone_scale\"",
        "description": " ※prefab ID: palmcone_scale\n ※Name: Palmcone Scale\n ※prefab Version: DST-632551 "
    },
    "prefab:palmcone_scale(ReverseSearch)": {
        "prefix": "p+Palmcone Scale",
        "body": "\"palmcone_scale\"",
        "description": " ※prefab ID: palmcone_scale\n ※Name: Palmcone Scale\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_small_3(ID Complete)": {
        "prefix": "p+oceanfish_small_3",
        "body": "\"oceanfish_small_3\"",
        "description": " ※prefab ID: oceanfish_small_3\n ※Name: Bitty Baitfish\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_small_3(ReverseSearch)": {
        "prefix": "p+Bitty Baitfish",
        "body": "\"oceanfish_small_3\"",
        "description": " ※prefab ID: oceanfish_small_3\n ※Name: Bitty Baitfish\n ※prefab Version: DST-632551 "
    },
    "prefab:halloweencandy_9(ID Complete)": {
        "prefix": "p+halloweencandy_9",
        "body": "\"halloweencandy_9\"",
        "description": " ※prefab ID: halloweencandy_9\n ※Name: Jelly Worm\n ※prefab Version: DST-632551 "
    },
    "prefab:halloweencandy_9(ReverseSearch)": {
        "prefix": "p+Jelly Worm",
        "body": "\"halloweencandy_9\"",
        "description": " ※prefab ID: halloweencandy_9\n ※Name: Jelly Worm\n ※prefab Version: DST-632551 "
    },
    "prefab:seafoodgumbo(ID Complete)": {
        "prefix": "p+seafoodgumbo",
        "body": "\"seafoodgumbo\"",
        "description": " ※prefab ID: seafoodgumbo\n ※Name: Seafood Gumbo\n ※prefab Version: DST-632551 "
    },
    "prefab:seafoodgumbo(ReverseSearch)": {
        "prefix": "p+Seafood Gumbo",
        "body": "\"seafoodgumbo\"",
        "description": " ※prefab ID: seafoodgumbo\n ※Name: Seafood Gumbo\n ※prefab Version: DST-632551 "
    },
    "prefab:rabbitkinghorn_chest(ID Complete)": {
        "prefix": "p+rabbitkinghorn_chest",
        "body": "\"rabbitkinghorn_chest\"",
        "description": " ※prefab ID: rabbitkinghorn_chest\n ※Name: Portable Den\n ※prefab Version: DST-632551 "
    },
    "prefab:rabbitkinghorn_chest(ReverseSearch)": {
        "prefix": "p+Portable Den",
        "body": "\"rabbitkinghorn_chest\"",
        "description": " ※prefab ID: rabbitkinghorn_chest\n ※Name: Portable Den\n ※prefab Version: DST-632551 "
    },
    "prefab:perdfan(ID Complete)": {
        "prefix": "p+perdfan",
        "body": "\"perdfan\"",
        "description": " ※prefab ID: perdfan\n ※Name: Lucky Fan\n ※Recipe: \n\t+ 3 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : Offerings/PERDOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:perdfan(ReverseSearch)": {
        "prefix": "p+Lucky Fan",
        "body": "\"perdfan\"",
        "description": " ※prefab ID: perdfan\n ※Name: Lucky Fan\n ※Recipe: \n\t+ 3 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : Offerings/PERDOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:cutlichen(ID Complete)": {
        "prefix": "p+cutlichen",
        "body": "\"cutlichen\"",
        "description": " ※prefab ID: cutlichen\n ※Name: Lichen\n ※prefab Version: DST-632551 "
    },
    "prefab:cutlichen(ReverseSearch)": {
        "prefix": "p+Lichen",
        "body": "\"cutlichen\"",
        "description": " ※prefab ID: cutlichen\n ※Name: Lichen\n ※prefab Version: DST-632551 "
    },
    "prefab:hermithouse(ID Complete)": {
        "prefix": "p+hermithouse",
        "body": "\"hermithouse\"",
        "description": " ※prefab ID: hermithouse\n ※Name: Hermit Home\n ※prefab Version: DST-632551 "
    },
    "prefab:hermithouse(ReverseSearch)": {
        "prefix": "p+Hermit Home",
        "body": "\"hermithouse\"",
        "description": " ※prefab ID: hermithouse\n ※Name: Hermit Home\n ※prefab Version: DST-632551 "
    },
    "prefab:dragonflychest(ID Complete)": {
        "prefix": "p+dragonflychest",
        "body": "\"dragonflychest\"",
        "description": " ※prefab ID: dragonflychest\n ※Name: Scaled Chest\n ※Recipe: \n\t+ 1 x: Scales/dragon_scales\n\t+ 4 x: Boards/boards\n\t+ 10 x: Gold Nugget/goldnugget\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:dragonflychest(ReverseSearch)": {
        "prefix": "p+Scaled Chest",
        "body": "\"dragonflychest\"",
        "description": " ※prefab ID: dragonflychest\n ※Name: Scaled Chest\n ※Recipe: \n\t+ 1 x: Scales/dragon_scales\n\t+ 4 x: Boards/boards\n\t+ 10 x: Gold Nugget/goldnugget\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:gingerbreadhouse(ID Complete)": {
        "prefix": "p+gingerbreadhouse",
        "body": "\"gingerbreadhouse\"",
        "description": " ※prefab ID: gingerbreadhouse\n ※Name: Gingerbread Pig House\n ※prefab Version: DST-632551 "
    },
    "prefab:gingerbreadhouse(ReverseSearch)": {
        "prefix": "p+Gingerbread Pig House",
        "body": "\"gingerbreadhouse\"",
        "description": " ※prefab ID: gingerbreadhouse\n ※Name: Gingerbread Pig House\n ※prefab Version: DST-632551 "
    },
    "prefab:nightlight(ID Complete)": {
        "prefix": "p+nightlight",
        "body": "\"nightlight\"",
        "description": " ※prefab ID: nightlight\n ※Name: Night Light\n ※Recipe: \n\t+ 8 x: Gold Nugget/goldnugget\n\t+ 2 x: Nightmare Fuel/nightmarefuel\n\t+ 1 x: Red Gem/redgem\n ※Required Tech: \n\t+ LV.2 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:nightlight(ReverseSearch)": {
        "prefix": "p+Night Light",
        "body": "\"nightlight\"",
        "description": " ※prefab ID: nightlight\n ※Name: Night Light\n ※Recipe: \n\t+ 8 x: Gold Nugget/goldnugget\n\t+ 2 x: Nightmare Fuel/nightmarefuel\n\t+ 1 x: Red Gem/redgem\n ※Required Tech: \n\t+ LV.2 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:ash(ID Complete)": {
        "prefix": "p+ash",
        "body": "\"ash\"",
        "description": " ※prefab ID: ash\n ※Name: Ashes\n ※prefab Version: DST-632551 "
    },
    "prefab:ash(ReverseSearch)": {
        "prefix": "p+Ashes",
        "body": "\"ash\"",
        "description": " ※prefab ID: ash\n ※Name: Ashes\n ※prefab Version: DST-632551 "
    },
    "prefab:shark(ID Complete)": {
        "prefix": "p+shark",
        "body": "\"shark\"",
        "description": " ※prefab ID: shark\n ※Name: Rockjaw\n ※prefab Version: DST-632551 "
    },
    "prefab:shark(ReverseSearch)": {
        "prefix": "p+Rockjaw",
        "body": "\"shark\"",
        "description": " ※prefab ID: shark\n ※Name: Rockjaw\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivaldecor_eggride4_kit(ID Complete)": {
        "prefix": "p+carnivaldecor_eggride4_kit",
        "body": "\"carnivaldecor_eggride4_kit\"",
        "description": " ※prefab ID: carnivaldecor_eggride4_kit\n ※Name: Mini Tower Drop Kit\n ※Recipe: \n\t+ 36 x: Prize Tickets/carnival_prizeticket\n ※Required Tech: \n\t+ LV.1 : Trinket Trove/CARNIVAL_PRIZESHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivaldecor_eggride4_kit(ReverseSearch)": {
        "prefix": "p+Mini Tower Drop Kit",
        "body": "\"carnivaldecor_eggride4_kit\"",
        "description": " ※prefab ID: carnivaldecor_eggride4_kit\n ※Name: Mini Tower Drop Kit\n ※Recipe: \n\t+ 36 x: Prize Tickets/carnival_prizeticket\n ※Required Tech: \n\t+ LV.1 : Trinket Trove/CARNIVAL_PRIZESHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_023(ID Complete)": {
        "prefix": "p+quagmire_food_023",
        "body": "\"quagmire_food_023\"",
        "description": " ※prefab ID: quagmire_food_023\n ※Name: Carrot Cake\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_023(ReverseSearch)": {
        "prefix": "p+Carrot Cake",
        "body": "\"quagmire_food_023\"",
        "description": " ※prefab ID: quagmire_food_023\n ※Name: Carrot Cake\n ※prefab Version: DST-632551 "
    },
    "prefab:battlesong_instant_panic(ID Complete)": {
        "prefix": "p+battlesong_instant_panic",
        "body": "\"battlesong_instant_panic\"",
        "description": " ※prefab ID: battlesong_instant_panic\n ※Name: Startling Soliloquy\n ※Recipe: \n\t+ 1 x: Papyrus/papyrus\n\t+ 1 x: Feather Pencil/featherpencil\n\t+ 1 x: Purple Gem/purplegem\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:battlesong_instant_panic(ReverseSearch)": {
        "prefix": "p+Startling Soliloquy",
        "body": "\"battlesong_instant_panic\"",
        "description": " ※prefab ID: battlesong_instant_panic\n ※Name: Startling Soliloquy\n ※Recipe: \n\t+ 1 x: Papyrus/papyrus\n\t+ 1 x: Feather Pencil/featherpencil\n\t+ 1 x: Purple Gem/purplegem\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalgame_shooting_target(ID Complete)": {
        "prefix": "p+carnivalgame_shooting_target",
        "body": "\"carnivalgame_shooting_target\"",
        "description": " ※prefab ID: carnivalgame_shooting_target\n ※Name: Target\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalgame_shooting_target(ReverseSearch)": {
        "prefix": "p+Target",
        "body": "\"carnivalgame_shooting_target\"",
        "description": " ※prefab ID: carnivalgame_shooting_target\n ※Name: Target\n ※prefab Version: DST-632551 "
    },
    "prefab:onion(ID Complete)": {
        "prefix": "p+onion",
        "body": "\"onion\"",
        "description": " ※prefab ID: onion\n ※Name: Onion\n ※prefab Version: DST-632551 "
    },
    "prefab:onion(ReverseSearch)": {
        "prefix": "p+Onion",
        "body": "\"onion\"",
        "description": " ※prefab ID: onion\n ※Name: Onion\n ※prefab Version: DST-632551 "
    },
    "prefab:red_mushroomhat(ID Complete)": {
        "prefix": "p+red_mushroomhat",
        "body": "\"red_mushroomhat\"",
        "description": " ※prefab ID: red_mushroomhat\n ※Name: Red Funcap\n ※Recipe: \n\t+ 6 x: Red Cap/red_cap\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:red_mushroomhat(ReverseSearch)": {
        "prefix": "p+Red Funcap",
        "body": "\"red_mushroomhat\"",
        "description": " ※prefab ID: red_mushroomhat\n ※Name: Red Funcap\n ※Recipe: \n\t+ 6 x: Red Cap/red_cap\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:wall_moonrock_item(ID Complete)": {
        "prefix": "p+wall_moonrock_item",
        "body": "\"wall_moonrock_item\"",
        "description": " ※prefab ID: wall_moonrock_item\n ※Name: Moon Rock Wall\n ※Recipe: \n\t+ 4 x: Moon Rock/moonrocknugget\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:wall_moonrock_item(ReverseSearch)": {
        "prefix": "p+Moon Rock Wall",
        "body": "\"wall_moonrock_item\"",
        "description": " ※prefab ID: wall_moonrock_item\n ※Name: Moon Rock Wall\n ※Recipe: \n\t+ 4 x: Moon Rock/moonrocknugget\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:wormlight_plant(ID Complete)": {
        "prefix": "p+wormlight_plant",
        "body": "\"wormlight_plant\"",
        "description": " ※prefab ID: wormlight_plant\n ※Name: Mysterious Plant\n ※prefab Version: DST-632551 "
    },
    "prefab:wormlight_plant(ReverseSearch)": {
        "prefix": "p+Mysterious Plant",
        "body": "\"wormlight_plant\"",
        "description": " ※prefab ID: wormlight_plant\n ※Name: Mysterious Plant\n ※prefab Version: DST-632551 "
    },
    "prefab:battlesong_instant_revive(ID Complete)": {
        "prefix": "p+battlesong_instant_revive",
        "body": "\"battlesong_instant_revive\"",
        "description": " ※prefab ID: battlesong_instant_revive\n ※Name: Warrior's Reprise\n ※Recipe: \n\t+ 1 x: Papyrus/papyrus\n\t+ 1 x: Feather Pencil/featherpencil\n\t+ 3 x: Down Feather/goose_feather\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:battlesong_instant_revive(ReverseSearch)": {
        "prefix": "p+Warrior's Reprise",
        "body": "\"battlesong_instant_revive\"",
        "description": " ※prefab ID: battlesong_instant_revive\n ※Name: Warrior's Reprise\n ※Recipe: \n\t+ 1 x: Papyrus/papyrus\n\t+ 1 x: Feather Pencil/featherpencil\n\t+ 3 x: Down Feather/goose_feather\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_25(ID Complete)": {
        "prefix": "p+trinket_25",
        "body": "\"trinket_25\"",
        "description": " ※prefab ID: trinket_25\n ※Name: Air Unfreshener\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_25(ReverseSearch)": {
        "prefix": "p+Air Unfreshener",
        "body": "\"trinket_25\"",
        "description": " ※prefab ID: trinket_25\n ※Name: Air Unfreshener\n ※prefab Version: DST-632551 "
    },
    "prefab:halloweencandy_2(ID Complete)": {
        "prefix": "p+halloweencandy_2",
        "body": "\"halloweencandy_2\"",
        "description": " ※prefab ID: halloweencandy_2\n ※Name: Candy Corn\n ※prefab Version: DST-632551 "
    },
    "prefab:halloweencandy_2(ReverseSearch)": {
        "prefix": "p+Candy Corn",
        "body": "\"halloweencandy_2\"",
        "description": " ※prefab ID: halloweencandy_2\n ※Name: Candy Corn\n ※prefab Version: DST-632551 "
    },
    "prefab:trophyscale_fish(ID Complete)": {
        "prefix": "p+trophyscale_fish",
        "body": "\"trophyscale_fish\"",
        "description": " ※prefab ID: trophyscale_fish\n ※Name: Fish Scale-O-Matic\n ※Recipe: \n\t+ 4 x: Ice/ice\n\t+ 2 x: Boards/boards\n\t+ 1 x: Cut Stone/cutstone\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:trophyscale_fish(ReverseSearch)": {
        "prefix": "p+Fish Scale-O-Matic",
        "body": "\"trophyscale_fish\"",
        "description": " ※prefab ID: trophyscale_fish\n ※Name: Fish Scale-O-Matic\n ※Recipe: \n\t+ 4 x: Ice/ice\n\t+ 2 x: Boards/boards\n\t+ 1 x: Cut Stone/cutstone\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:marbletree(ID Complete)": {
        "prefix": "p+marbletree",
        "body": "\"marbletree\"",
        "description": " ※prefab ID: marbletree\n ※Name: Marble Tree\n ※prefab Version: DST-632551 "
    },
    "prefab:marbletree(ReverseSearch)": {
        "prefix": "p+Marble Tree",
        "body": "\"marbletree\"",
        "description": " ※prefab ID: marbletree\n ※Name: Marble Tree\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_045(ID Complete)": {
        "prefix": "p+quagmire_food_045",
        "body": "\"quagmire_food_045\"",
        "description": " ※prefab ID: quagmire_food_045\n ※Name: Berry Tart\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_045(ReverseSearch)": {
        "prefix": "p+Berry Tart",
        "body": "\"quagmire_food_045\"",
        "description": " ※prefab ID: quagmire_food_045\n ※Name: Berry Tart\n ※prefab Version: DST-632551 "
    },
    "prefab:wintercooking_sweetpotato(ID Complete)": {
        "prefix": "p+wintercooking_sweetpotato",
        "body": "\"wintercooking_sweetpotato\"",
        "description": " ※prefab ID: wintercooking_sweetpotato\n ※Name: Sweet Potato Casserole\n ※Recipe: \n\t+ 1 x: Holiday Cheer/wintersfeastfuel\n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.1 : Feast/WINTERSFEASTCOOKING\n ※prefab Version: DST-632551 "
    },
    "prefab:wintercooking_sweetpotato(ReverseSearch)": {
        "prefix": "p+Sweet Potato Casserole",
        "body": "\"wintercooking_sweetpotato\"",
        "description": " ※prefab ID: wintercooking_sweetpotato\n ※Name: Sweet Potato Casserole\n ※Recipe: \n\t+ 1 x: Holiday Cheer/wintersfeastfuel\n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.1 : Feast/WINTERSFEASTCOOKING\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_small_1_inv(ID Complete)": {
        "prefix": "p+oceanfish_small_1_inv",
        "body": "\"oceanfish_small_1_inv\"",
        "description": " ※prefab ID: oceanfish_small_1_inv\n ※Name: Runty Guppy\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_small_1_inv(ReverseSearch)": {
        "prefix": "p+Runty Guppy",
        "body": "\"oceanfish_small_1_inv\"",
        "description": " ※prefab ID: oceanfish_small_1_inv\n ※Name: Runty Guppy\n ※prefab Version: DST-632551 "
    },
    "prefab:featherpencil(ID Complete)": {
        "prefix": "p+featherpencil",
        "body": "\"featherpencil\"",
        "description": " ※prefab ID: featherpencil\n ※Name: Feather Pencil\n ※Recipe: \n\t+ 1 x: Twigs/twigs\n\t+ 1 x: Charcoal/charcoal\n\t+ 1 x: Jet Feather/feather_crow\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:featherpencil(ReverseSearch)": {
        "prefix": "p+Feather Pencil",
        "body": "\"featherpencil\"",
        "description": " ※prefab ID: featherpencil\n ※Name: Feather Pencil\n ※Recipe: \n\t+ 1 x: Twigs/twigs\n\t+ 1 x: Charcoal/charcoal\n\t+ 1 x: Jet Feather/feather_crow\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:armor_lunarplant_husk(ID Complete)": {
        "prefix": "p+armor_lunarplant_husk",
        "body": "\"armor_lunarplant_husk\"",
        "description": " ※prefab ID: armor_lunarplant_husk\n ※Name: Brambleshade Armor\n ※Recipe: \n\t+ 1 x: Brightshade Armor/armor_lunarplant\n\t+ 1 x: Bramble Husk/armor_bramble\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:armor_lunarplant_husk(ReverseSearch)": {
        "prefix": "p+Brambleshade Armor",
        "body": "\"armor_lunarplant_husk\"",
        "description": " ※prefab ID: armor_lunarplant_husk\n ※Name: Brambleshade Armor\n ※Recipe: \n\t+ 1 x: Brightshade Armor/armor_lunarplant\n\t+ 1 x: Bramble Husk/armor_bramble\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:killerbee(ID Complete)": {
        "prefix": "p+killerbee",
        "body": "\"killerbee\"",
        "description": " ※prefab ID: killerbee\n ※Name: Killer Bee\n ※prefab Version: DST-632551 "
    },
    "prefab:killerbee(ReverseSearch)": {
        "prefix": "p+Killer Bee",
        "body": "\"killerbee\"",
        "description": " ※prefab ID: killerbee\n ※Name: Killer Bee\n ※prefab Version: DST-632551 "
    },
    "prefab:support_pillar_scaffold(ID Complete)": {
        "prefix": "p+support_pillar_scaffold",
        "body": "\"support_pillar_scaffold\"",
        "description": " ※prefab ID: support_pillar_scaffold\n ※Name: Pillar Scaffold\n ※Recipe: \n\t+ 1 x: Cut Stone/cutstone\n\t+ 2 x: Boards/boards\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:support_pillar_scaffold(ReverseSearch)": {
        "prefix": "p+Pillar Scaffold",
        "body": "\"support_pillar_scaffold\"",
        "description": " ※prefab ID: support_pillar_scaffold\n ※Name: Pillar Scaffold\n ※Recipe: \n\t+ 1 x: Cut Stone/cutstone\n\t+ 2 x: Boards/boards\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:shadowwaxwell(ID Complete)": {
        "prefix": "p+shadowwaxwell",
        "body": "\"shadowwaxwell\"",
        "description": " ※prefab ID: shadowwaxwell\n ※Name: Shadow\n ※prefab Version: DST-632551 "
    },
    "prefab:shadowwaxwell(ReverseSearch)": {
        "prefix": "p+Shadow",
        "body": "\"shadowwaxwell\"",
        "description": " ※prefab ID: shadowwaxwell\n ※Name: Shadow\n ※prefab Version: DST-632551 "
    },
    "prefab:spider_repellent(ID Complete)": {
        "prefix": "p+spider_repellent",
        "body": "\"spider_repellent\"",
        "description": " ※prefab ID: spider_repellent\n ※Name: Shoo Box\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 2 x: Gold Nugget/goldnugget\n\t+ 1 x: Rope/rope\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:spider_repellent(ReverseSearch)": {
        "prefix": "p+Shoo Box",
        "body": "\"spider_repellent\"",
        "description": " ※prefab ID: spider_repellent\n ※Name: Shoo Box\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 2 x: Gold Nugget/goldnugget\n\t+ 1 x: Rope/rope\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:anchor_item(ID Complete)": {
        "prefix": "p+anchor_item",
        "body": "\"anchor_item\"",
        "description": " ※prefab ID: anchor_item\n ※Name: Anchor Kit\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 3 x: Rope/rope\n\t+ 3 x: Cut Stone/cutstone\n ※Required Tech: \n\t+ LV.1 : Seafaring/SEAFARING\n ※prefab Version: DST-632551 "
    },
    "prefab:anchor_item(ReverseSearch)": {
        "prefix": "p+Anchor Kit",
        "body": "\"anchor_item\"",
        "description": " ※prefab ID: anchor_item\n ※Name: Anchor Kit\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 3 x: Rope/rope\n\t+ 3 x: Cut Stone/cutstone\n ※Required Tech: \n\t+ LV.1 : Seafaring/SEAFARING\n ※prefab Version: DST-632551 "
    },
    "prefab:junk_pile(ID Complete)": {
        "prefix": "p+junk_pile",
        "body": "\"junk_pile\"",
        "description": " ※prefab ID: junk_pile\n ※Name: Junk Pile\n ※prefab Version: DST-632551 "
    },
    "prefab:junk_pile(ReverseSearch)": {
        "prefix": "p+Junk Pile",
        "body": "\"junk_pile\"",
        "description": " ※prefab ID: junk_pile\n ※Name: Junk Pile\n ※prefab Version: DST-632551 "
    },
    "prefab:wagstaff_machinery(ID Complete)": {
        "prefix": "p+wagstaff_machinery",
        "body": "\"wagstaff_machinery\"",
        "description": " ※prefab ID: wagstaff_machinery\n ※Name: Abandoned Junk\n ※prefab Version: DST-632551 "
    },
    "prefab:wagstaff_machinery(ReverseSearch)": {
        "prefix": "p+Abandoned Junk",
        "body": "\"wagstaff_machinery\"",
        "description": " ※prefab ID: wagstaff_machinery\n ※Name: Abandoned Junk\n ※prefab Version: DST-632551 "
    },
    "prefab:pepperpopper(ID Complete)": {
        "prefix": "p+pepperpopper",
        "body": "\"pepperpopper\"",
        "description": " ※prefab ID: pepperpopper\n ※Name: Stuffed Pepper Poppers\n ※prefab Version: DST-632551 "
    },
    "prefab:pepperpopper(ReverseSearch)": {
        "prefix": "p+Stuffed Pepper Poppers",
        "body": "\"pepperpopper\"",
        "description": " ※prefab ID: pepperpopper\n ※Name: Stuffed Pepper Poppers\n ※prefab Version: DST-632551 "
    },
    "prefab:flint(ID Complete)": {
        "prefix": "p+flint",
        "body": "\"flint\"",
        "description": " ※prefab ID: flint\n ※Name: Flint\n ※prefab Version: DST-632551 "
    },
    "prefab:flint(ReverseSearch)": {
        "prefix": "p+Flint",
        "body": "\"flint\"",
        "description": " ※prefab ID: flint\n ※Name: Flint\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalgame_shooting_station(ID Complete)": {
        "prefix": "p+carnivalgame_shooting_station",
        "body": "\"carnivalgame_shooting_station\"",
        "description": " ※prefab ID: carnivalgame_shooting_station\n ※Name: Nest Defender\n ※Recipe: \n\t+ 1 x: Nest Defender Kit/carnivalgame_shooting_kit\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalgame_shooting_station(ReverseSearch)": {
        "prefix": "p+Nest Defender",
        "body": "\"carnivalgame_shooting_station\"",
        "description": " ※prefab ID: carnivalgame_shooting_station\n ※Name: Nest Defender\n ※Recipe: \n\t+ 1 x: Nest Defender Kit/carnivalgame_shooting_kit\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:mast(ID Complete)": {
        "prefix": "p+mast",
        "body": "\"mast\"",
        "description": " ※prefab ID: mast\n ※Name: Mast\n ※Recipe: \n\t+ 3 x: Boards/boards\n\t+ 3 x: Rope/rope\n\t+ 8 x: Silk/silk\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:mast(ReverseSearch)": {
        "prefix": "p+Mast",
        "body": "\"mast\"",
        "description": " ※prefab ID: mast\n ※Name: Mast\n ※Recipe: \n\t+ 3 x: Boards/boards\n\t+ 3 x: Rope/rope\n\t+ 8 x: Silk/silk\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_009(ID Complete)": {
        "prefix": "p+quagmire_food_009",
        "body": "\"quagmire_food_009\"",
        "description": " ※prefab ID: quagmire_food_009\n ※Name: Fishball Skewers\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_009(ReverseSearch)": {
        "prefix": "p+Fishball Skewers",
        "body": "\"quagmire_food_009\"",
        "description": " ※prefab ID: quagmire_food_009\n ※Name: Fishball Skewers\n ※prefab Version: DST-632551 "
    },
    "prefab:chestupgrade_stacksize(ID Complete)": {
        "prefix": "p+chestupgrade_stacksize",
        "body": "\"chestupgrade_stacksize\"",
        "description": " ※prefab ID: chestupgrade_stacksize\n ※Name: Elastispacer\n ※Recipe: \n\t+ 4 x: Scrap/wagpunk_bits\n\t+ 2 x: Pure Brilliance/purebrilliance\n\t+ 1 x: Enlightened Shard/alterguardianhatshard\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:chestupgrade_stacksize(ReverseSearch)": {
        "prefix": "p+Elastispacer",
        "body": "\"chestupgrade_stacksize\"",
        "description": " ※prefab ID: chestupgrade_stacksize\n ※Name: Elastispacer\n ※Recipe: \n\t+ 4 x: Scrap/wagpunk_bits\n\t+ 2 x: Pure Brilliance/purebrilliance\n\t+ 1 x: Enlightened Shard/alterguardianhatshard\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_clayhound(ID Complete)": {
        "prefix": "p+chesspiece_clayhound",
        "body": "\"chesspiece_clayhound\"",
        "description": " ※prefab ID: chesspiece_clayhound\n ※Name: Hound Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_clayhound(ReverseSearch)": {
        "prefix": "p+Hound Figure",
        "body": "\"chesspiece_clayhound\"",
        "description": " ※prefab ID: chesspiece_clayhound\n ※Name: Hound Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:purebrilliance(ID Complete)": {
        "prefix": "p+purebrilliance",
        "body": "\"purebrilliance\"",
        "description": " ※prefab ID: purebrilliance\n ※Name: Pure Brilliance\n ※prefab Version: DST-632551 "
    },
    "prefab:purebrilliance(ReverseSearch)": {
        "prefix": "p+Pure Brilliance",
        "body": "\"purebrilliance\"",
        "description": " ※prefab ID: purebrilliance\n ※Name: Pure Brilliance\n ※prefab Version: DST-632551 "
    },
    "prefab:moon_altar_cosmic(ID Complete)": {
        "prefix": "p+moon_altar_cosmic",
        "body": "\"moon_altar_cosmic\"",
        "description": " ※prefab ID: moon_altar_cosmic\n ※Name: Celestial Tribute\n ※prefab Version: DST-632551 "
    },
    "prefab:moon_altar_cosmic(ReverseSearch)": {
        "prefix": "p+Celestial Tribute",
        "body": "\"moon_altar_cosmic\"",
        "description": " ※prefab ID: moon_altar_cosmic\n ※Name: Celestial Tribute\n ※prefab Version: DST-632551 "
    },
    "prefab:lumpy_sapling(ID Complete)": {
        "prefix": "p+lumpy_sapling",
        "body": "\"lumpy_sapling\"",
        "description": " ※prefab ID: lumpy_sapling\n ※Name: Lumpy Sapling\n ※prefab Version: DST-632551 "
    },
    "prefab:lumpy_sapling(ReverseSearch)": {
        "prefix": "p+Lumpy Sapling",
        "body": "\"lumpy_sapling\"",
        "description": " ※prefab ID: lumpy_sapling\n ※Name: Lumpy Sapling\n ※prefab Version: DST-632551 "
    },
    "prefab:dug_sapling_moon(ID Complete)": {
        "prefix": "p+dug_sapling_moon",
        "body": "\"dug_sapling_moon\"",
        "description": " ※prefab ID: dug_sapling_moon\n ※Name: Sapling\n ※prefab Version: DST-632551 "
    },
    "prefab:dug_sapling_moon(ReverseSearch)": {
        "prefix": "p+Sapling",
        "body": "\"dug_sapling_moon\"",
        "description": " ※prefab ID: dug_sapling_moon\n ※Name: Sapling\n ※prefab Version: DST-632551 "
    },
    "prefab:slingshot(ID Complete)": {
        "prefix": "p+slingshot",
        "body": "\"slingshot\"",
        "description": " ※prefab ID: slingshot\n ※Name: Trusty Slingshot\n ※Recipe: \n\t+ 1 x: Twigs/twigs\n\t+ 2 x: Mosquito Sack/mosquitosack\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:slingshot(ReverseSearch)": {
        "prefix": "p+Trusty Slingshot",
        "body": "\"slingshot\"",
        "description": " ※prefab ID: slingshot\n ※Name: Trusty Slingshot\n ※Recipe: \n\t+ 1 x: Twigs/twigs\n\t+ 2 x: Mosquito Sack/mosquitosack\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:wereitem_goose(ID Complete)": {
        "prefix": "p+wereitem_goose",
        "body": "\"wereitem_goose\"",
        "description": " ※prefab ID: wereitem_goose\n ※Name: Kitschy Goose Idol\n ※Recipe: \n\t+ 3 x: Monster Meat/monstermeat\n\t+ 3 x: Seeds/seeds\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:wereitem_goose(ReverseSearch)": {
        "prefix": "p+Kitschy Goose Idol",
        "body": "\"wereitem_goose\"",
        "description": " ※prefab ID: wereitem_goose\n ※Name: Kitschy Goose Idol\n ※Recipe: \n\t+ 3 x: Monster Meat/monstermeat\n\t+ 3 x: Seeds/seeds\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:alterguardian_phase3trap(ID Complete)": {
        "prefix": "p+alterguardian_phase3trap",
        "body": "\"alterguardian_phase3trap\"",
        "description": " ※prefab ID: alterguardian_phase3trap\n ※Name: Enlightening Snare\n ※prefab Version: DST-632551 "
    },
    "prefab:alterguardian_phase3trap(ReverseSearch)": {
        "prefix": "p+Enlightening Snare",
        "body": "\"alterguardian_phase3trap\"",
        "description": " ※prefab ID: alterguardian_phase3trap\n ※Name: Enlightening Snare\n ※prefab Version: DST-632551 "
    },
    "prefab:gelblob(ID Complete)": {
        "prefix": "p+gelblob",
        "body": "\"gelblob\"",
        "description": " ※prefab ID: gelblob\n ※Name: Icker\n ※prefab Version: DST-632551 "
    },
    "prefab:gelblob(ReverseSearch)": {
        "prefix": "p+Icker",
        "body": "\"gelblob\"",
        "description": " ※prefab ID: gelblob\n ※Name: Icker\n ※prefab Version: DST-632551 "
    },
    "prefab:daywalker2(ID Complete)": {
        "prefix": "p+daywalker2",
        "body": "\"daywalker2\"",
        "description": " ※prefab ID: daywalker2\n ※Name: Scrappy Werepig\n ※prefab Version: DST-632551 "
    },
    "prefab:daywalker2(ReverseSearch)": {
        "prefix": "p+Scrappy Werepig",
        "body": "\"daywalker2\"",
        "description": " ※prefab ID: daywalker2\n ※Name: Scrappy Werepig\n ※prefab Version: DST-632551 "
    },
    "prefab:figkabab(ID Complete)": {
        "prefix": "p+figkabab",
        "body": "\"figkabab\"",
        "description": " ※prefab ID: figkabab\n ※Name: Figkabab\n ※prefab Version: DST-632551 "
    },
    "prefab:figkabab(ReverseSearch)": {
        "prefix": "p+Figkabab",
        "body": "\"figkabab\"",
        "description": " ※prefab ID: figkabab\n ※Name: Figkabab\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_grass(ID Complete)": {
        "prefix": "p+turf_grass",
        "body": "\"turf_grass\"",
        "description": " ※prefab ID: turf_grass\n ※Name: Grass Turf\n ※Recipe: \n\t+ 1 x: Cut Grass/cutgrass\n\t+ 1 x: Petals/petals\n ※Required Tech: \n\t+ LV.2 : Landscaping/TURFCRAFTING\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_grass(ReverseSearch)": {
        "prefix": "p+Grass Turf",
        "body": "\"turf_grass\"",
        "description": " ※prefab ID: turf_grass\n ※Name: Grass Turf\n ※Recipe: \n\t+ 1 x: Cut Grass/cutgrass\n\t+ 1 x: Petals/petals\n ※Required Tech: \n\t+ LV.2 : Landscaping/TURFCRAFTING\n ※prefab Version: DST-632551 "
    },
    "prefab:featherfan(ID Complete)": {
        "prefix": "p+featherfan",
        "body": "\"featherfan\"",
        "description": " ※prefab ID: featherfan\n ※Name: Luxury Fan\n ※Recipe: \n\t+ 5 x: Down Feather/goose_feather\n\t+ 2 x: Cut Reeds/cutreeds\n\t+ 2 x: Rope/rope\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:featherfan(ReverseSearch)": {
        "prefix": "p+Luxury Fan",
        "body": "\"featherfan\"",
        "description": " ※prefab ID: featherfan\n ※Name: Luxury Fan\n ※Recipe: \n\t+ 5 x: Down Feather/goose_feather\n\t+ 2 x: Cut Reeds/cutreeds\n\t+ 2 x: Rope/rope\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:icehound(ID Complete)": {
        "prefix": "p+icehound",
        "body": "\"icehound\"",
        "description": " ※prefab ID: icehound\n ※Name: Blue Hound\n ※prefab Version: DST-632551 "
    },
    "prefab:icehound(ReverseSearch)": {
        "prefix": "p+Blue Hound",
        "body": "\"icehound\"",
        "description": " ※prefab ID: icehound\n ※Name: Blue Hound\n ※prefab Version: DST-632551 "
    },
    "prefab:wall_stone(ID Complete)": {
        "prefix": "p+wall_stone",
        "body": "\"wall_stone\"",
        "description": " ※prefab ID: wall_stone\n ※Name: Stone Wall\n ※prefab Version: DST-632551 "
    },
    "prefab:wall_stone(ReverseSearch)": {
        "prefix": "p+Stone Wall",
        "body": "\"wall_stone\"",
        "description": " ※prefab ID: wall_stone\n ※Name: Stone Wall\n ※prefab Version: DST-632551 "
    },
    "prefab:reskin_tool(ID Complete)": {
        "prefix": "p+reskin_tool",
        "body": "\"reskin_tool\"",
        "description": " ※prefab ID: reskin_tool\n ※Name: Clean Sweeper\n ※Recipe: \n\t+ 1 x: Twigs/twigs\n\t+ 4 x: Petals/petals\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:reskin_tool(ReverseSearch)": {
        "prefix": "p+Clean Sweeper",
        "body": "\"reskin_tool\"",
        "description": " ※prefab ID: reskin_tool\n ※Name: Clean Sweeper\n ※Recipe: \n\t+ 1 x: Twigs/twigs\n\t+ 4 x: Petals/petals\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:pocketwatch_portal(ID Complete)": {
        "prefix": "p+pocketwatch_portal",
        "body": "\"pocketwatch_portal\"",
        "description": " ※prefab ID: pocketwatch_portal\n ※Name: Rift Watch\n ※Recipe: \n\t+ 1 x: Backtrek Watch/pocketwatch_recall\n\t+ 1 x: Purple Gem/purplegem\n ※Required Tech: \n\t+ LV.2 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:pocketwatch_portal(ReverseSearch)": {
        "prefix": "p+Rift Watch",
        "body": "\"pocketwatch_portal\"",
        "description": " ※prefab ID: pocketwatch_portal\n ※Name: Rift Watch\n ※Recipe: \n\t+ 1 x: Backtrek Watch/pocketwatch_recall\n\t+ 1 x: Purple Gem/purplegem\n ※Required Tech: \n\t+ LV.2 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:durian_cooked(ID Complete)": {
        "prefix": "p+durian_cooked",
        "body": "\"durian_cooked\"",
        "description": " ※prefab ID: durian_cooked\n ※Name: Extra Smelly Durian\n ※prefab Version: DST-632551 "
    },
    "prefab:durian_cooked(ReverseSearch)": {
        "prefix": "p+Extra Smelly Durian",
        "body": "\"durian_cooked\"",
        "description": " ※prefab ID: durian_cooked\n ※Name: Extra Smelly Durian\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_046(ID Complete)": {
        "prefix": "p+quagmire_food_046",
        "body": "\"quagmire_food_046\"",
        "description": " ※prefab ID: quagmire_food_046\n ※Name: Macaroni and Cheese\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_046(ReverseSearch)": {
        "prefix": "p+Macaroni and Cheese",
        "body": "\"quagmire_food_046\"",
        "description": " ※prefab ID: quagmire_food_046\n ※Name: Macaroni and Cheese\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_merm_cart1(ID Complete)": {
        "prefix": "p+quagmire_merm_cart1",
        "body": "\"quagmire_merm_cart1\"",
        "description": " ※prefab ID: quagmire_merm_cart1\n ※Name: Sammy's Wagon\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_merm_cart1(ReverseSearch)": {
        "prefix": "p+Sammy's Wagon",
        "body": "\"quagmire_merm_cart1\"",
        "description": " ※prefab ID: quagmire_merm_cart1\n ※Name: Sammy's Wagon\n ※prefab Version: DST-632551 "
    },
    "prefab:saddle_basic(ID Complete)": {
        "prefix": "p+saddle_basic",
        "body": "\"saddle_basic\"",
        "description": " ※prefab ID: saddle_basic\n ※Name: Saddle\n ※Recipe: \n\t+ 4 x: Beefalo Wool/beefalowool\n\t+ 4 x: Pig Skin/pigskin\n\t+ 4 x: Gold Nugget/goldnugget\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:saddle_basic(ReverseSearch)": {
        "prefix": "p+Saddle",
        "body": "\"saddle_basic\"",
        "description": " ※prefab ID: saddle_basic\n ※Name: Saddle\n ※Recipe: \n\t+ 4 x: Beefalo Wool/beefalowool\n\t+ 4 x: Pig Skin/pigskin\n\t+ 4 x: Gold Nugget/goldnugget\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:pumpkin(ID Complete)": {
        "prefix": "p+pumpkin",
        "body": "\"pumpkin\"",
        "description": " ※prefab ID: pumpkin\n ※Name: Pumpkin\n ※prefab Version: DST-632551 "
    },
    "prefab:pumpkin(ReverseSearch)": {
        "prefix": "p+Pumpkin",
        "body": "\"pumpkin\"",
        "description": " ※prefab ID: pumpkin\n ※Name: Pumpkin\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishinglure_spoon_red(ID Complete)": {
        "prefix": "p+oceanfishinglure_spoon_red",
        "body": "\"oceanfishinglure_spoon_red\"",
        "description": " ※prefab ID: oceanfishinglure_spoon_red\n ※Name: Sunrise Spoon\n ※Recipe: \n\t+ 2 x: Flint/flint\n\t+ 1 x: Red Cap/red_cap\n ※Required Tech: \n\t+ LV.1 : Fishing/FISHING\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishinglure_spoon_red(ReverseSearch)": {
        "prefix": "p+Sunrise Spoon",
        "body": "\"oceanfishinglure_spoon_red\"",
        "description": " ※prefab ID: oceanfishinglure_spoon_red\n ※Name: Sunrise Spoon\n ※Recipe: \n\t+ 2 x: Flint/flint\n\t+ 1 x: Red Cap/red_cap\n ※Required Tech: \n\t+ LV.1 : Fishing/FISHING\n ※prefab Version: DST-632551 "
    },
    "prefab:spider_hider(ID Complete)": {
        "prefix": "p+spider_hider",
        "body": "\"spider_hider\"",
        "description": " ※prefab ID: spider_hider\n ※Name: Cave Spider\n ※prefab Version: DST-632551 "
    },
    "prefab:spider_hider(ReverseSearch)": {
        "prefix": "p+Cave Spider",
        "body": "\"spider_hider\"",
        "description": " ※prefab ID: spider_hider\n ※Name: Cave Spider\n ※prefab Version: DST-632551 "
    },
    "prefab:rook_nightmare(ID Complete)": {
        "prefix": "p+rook_nightmare",
        "body": "\"rook_nightmare\"",
        "description": " ※prefab ID: rook_nightmare\n ※Name: Damaged Rook\n ※prefab Version: DST-632551 "
    },
    "prefab:rook_nightmare(ReverseSearch)": {
        "prefix": "p+Damaged Rook",
        "body": "\"rook_nightmare\"",
        "description": " ※prefab ID: rook_nightmare\n ※Name: Damaged Rook\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_goatmilk(ID Complete)": {
        "prefix": "p+quagmire_goatmilk",
        "body": "\"quagmire_goatmilk\"",
        "description": " ※prefab ID: quagmire_goatmilk\n ※Name: Goat Milk\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_goatmilk(ReverseSearch)": {
        "prefix": "p+Goat Milk",
        "body": "\"quagmire_goatmilk\"",
        "description": " ※prefab ID: quagmire_goatmilk\n ※Name: Goat Milk\n ※prefab Version: DST-632551 "
    },
    "prefab:spear(ID Complete)": {
        "prefix": "p+spear",
        "body": "\"spear\"",
        "description": " ※prefab ID: spear\n ※Name: Spear\n ※Recipe: \n\t+ 2 x: Twigs/twigs\n\t+ 1 x: Rope/rope\n\t+ 1 x: Flint/flint\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:spear(ReverseSearch)": {
        "prefix": "p+Spear",
        "body": "\"spear\"",
        "description": " ※prefab ID: spear\n ※Name: Spear\n ※Recipe: \n\t+ 2 x: Twigs/twigs\n\t+ 1 x: Rope/rope\n\t+ 1 x: Flint/flint\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:figatoni(ID Complete)": {
        "prefix": "p+figatoni",
        "body": "\"figatoni\"",
        "description": " ※prefab ID: figatoni\n ※Name: Figatoni\n ※prefab Version: DST-632551 "
    },
    "prefab:figatoni(ReverseSearch)": {
        "prefix": "p+Figatoni",
        "body": "\"figatoni\"",
        "description": " ※prefab ID: figatoni\n ※Name: Figatoni\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_064(ID Complete)": {
        "prefix": "p+quagmire_food_064",
        "body": "\"quagmire_food_064\"",
        "description": " ※prefab ID: quagmire_food_064\n ※Name: Meat Wellington\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_064(ReverseSearch)": {
        "prefix": "p+Meat Wellington",
        "body": "\"quagmire_food_064\"",
        "description": " ※prefab ID: quagmire_food_064\n ※Name: Meat Wellington\n ※prefab Version: DST-632551 "
    },
    "prefab:halloween_ornament_6(ID Complete)": {
        "prefix": "p+halloween_ornament_6",
        "body": "\"halloween_ornament_6\"",
        "description": " ※prefab ID: halloween_ornament_6\n ※Name: Crow Decoration\n ※prefab Version: DST-632551 "
    },
    "prefab:halloween_ornament_6(ReverseSearch)": {
        "prefix": "p+Crow Decoration",
        "body": "\"halloween_ornament_6\"",
        "description": " ※prefab ID: halloween_ornament_6\n ※Name: Crow Decoration\n ※prefab Version: DST-632551 "
    },
    "prefab:potatotornado(ID Complete)": {
        "prefix": "p+potatotornado",
        "body": "\"potatotornado\"",
        "description": " ※prefab ID: potatotornado\n ※Name: Fancy Spiralled Tubers\n ※prefab Version: DST-632551 "
    },
    "prefab:potatotornado(ReverseSearch)": {
        "prefix": "p+Fancy Spiralled Tubers",
        "body": "\"potatotornado\"",
        "description": " ※prefab ID: potatotornado\n ※Name: Fancy Spiralled Tubers\n ※prefab Version: DST-632551 "
    },
    "prefab:cotl_tabernacle_level1(ID Complete)": {
        "prefix": "p+cotl_tabernacle_level1",
        "body": "\"cotl_tabernacle_level1\"",
        "description": " ※prefab ID: cotl_tabernacle_level1\n ※Name: Humble Lamb Idol\n ※Recipe: \n\t+ 10 x: Rocks/rocks\n\t+ 2 x: Log/log\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:cotl_tabernacle_level1(ReverseSearch)": {
        "prefix": "p+Humble Lamb Idol",
        "body": "\"cotl_tabernacle_level1\"",
        "description": " ※prefab ID: cotl_tabernacle_level1\n ※Name: Humble Lamb Idol\n ※Recipe: \n\t+ 10 x: Rocks/rocks\n\t+ 2 x: Log/log\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:lichen(ID Complete)": {
        "prefix": "p+lichen",
        "body": "\"lichen\"",
        "description": " ※prefab ID: lichen\n ※Name: Cave Lichen\n ※prefab Version: DST-632551 "
    },
    "prefab:lichen(ReverseSearch)": {
        "prefix": "p+Cave Lichen",
        "body": "\"lichen\"",
        "description": " ※prefab ID: lichen\n ※Name: Cave Lichen\n ※prefab Version: DST-632551 "
    },
    "prefab:blueamulet(ID Complete)": {
        "prefix": "p+blueamulet",
        "body": "\"blueamulet\"",
        "description": " ※prefab ID: blueamulet\n ※Name: Chilled Amulet\n ※Recipe: \n\t+ 3 x: Gold Nugget/goldnugget\n\t+ 1 x: Blue Gem/bluegem\n ※Required Tech: \n\t+ LV.2 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:blueamulet(ReverseSearch)": {
        "prefix": "p+Chilled Amulet",
        "body": "\"blueamulet\"",
        "description": " ※prefab ID: blueamulet\n ※Name: Chilled Amulet\n ※Recipe: \n\t+ 3 x: Gold Nugget/goldnugget\n\t+ 1 x: Blue Gem/bluegem\n ※Required Tech: \n\t+ LV.2 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:wx78module_maxhealth(ID Complete)": {
        "prefix": "p+wx78module_maxhealth",
        "body": "\"wx78module_maxhealth\"",
        "description": " ※prefab ID: wx78module_maxhealth\n ※Name: Hardy Circuit\n ※Recipe: \n\t+ 2 x: Bio Data/scandata\n\t+ 1 x: Spider Gland/spidergland\n ※Required Tech: \n\t+ LV.1 : Circuitry/ROBOTMODULECRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:wx78module_maxhealth(ReverseSearch)": {
        "prefix": "p+Hardy Circuit",
        "body": "\"wx78module_maxhealth\"",
        "description": " ※prefab ID: wx78module_maxhealth\n ※Name: Hardy Circuit\n ※Recipe: \n\t+ 2 x: Bio Data/scandata\n\t+ 1 x: Spider Gland/spidergland\n ※Required Tech: \n\t+ LV.1 : Circuitry/ROBOTMODULECRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:shadowminer_builder(ID Complete)": {
        "prefix": "p+shadowminer_builder",
        "body": "\"shadowminer_builder\"",
        "description": " ※prefab ID: shadowminer_builder\n ※Name: Shadow Miner\n ※Recipe: \n\t+ 2 x: Nightmare Fuel/nightmarefuel\n\t+ 1 x: Pickaxe/pickaxe\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:shadowminer_builder(ReverseSearch)": {
        "prefix": "p+Shadow Miner",
        "body": "\"shadowminer_builder\"",
        "description": " ※prefab ID: shadowminer_builder\n ※Name: Shadow Miner\n ※Recipe: \n\t+ 2 x: Nightmare Fuel/nightmarefuel\n\t+ 1 x: Pickaxe/pickaxe\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:yotc_carratshrine(ID Complete)": {
        "prefix": "p+yotc_carratshrine",
        "body": "\"yotc_carratshrine\"",
        "description": " ※prefab ID: yotc_carratshrine\n ※Name: Carrat Shrine\n ※Recipe: \n\t+ 4 x: Gold Nugget/goldnugget\n\t+ 2 x: Boards/boards\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:yotc_carratshrine(ReverseSearch)": {
        "prefix": "p+Carrat Shrine",
        "body": "\"yotc_carratshrine\"",
        "description": " ※prefab ID: yotc_carratshrine\n ※Name: Carrat Shrine\n ※Recipe: \n\t+ 4 x: Gold Nugget/goldnugget\n\t+ 2 x: Boards/boards\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:mask_foolhat(ID Complete)": {
        "prefix": "p+mask_foolhat",
        "body": "\"mask_foolhat\"",
        "description": " ※prefab ID: mask_foolhat\n ※Name: Fool Mask\n ※prefab Version: DST-632551 "
    },
    "prefab:mask_foolhat(ReverseSearch)": {
        "prefix": "p+Fool Mask",
        "body": "\"mask_foolhat\"",
        "description": " ※prefab ID: mask_foolhat\n ※Name: Fool Mask\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_spotspice_sprig(ID Complete)": {
        "prefix": "p+quagmire_spotspice_sprig",
        "body": "\"quagmire_spotspice_sprig\"",
        "description": " ※prefab ID: quagmire_spotspice_sprig\n ※Name: Spotty Sprig\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_spotspice_sprig(ReverseSearch)": {
        "prefix": "p+Spotty Sprig",
        "body": "\"quagmire_spotspice_sprig\"",
        "description": " ※prefab ID: quagmire_spotspice_sprig\n ※Name: Spotty Sprig\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivaldecor_eggride2_kit(ID Complete)": {
        "prefix": "p+carnivaldecor_eggride2_kit",
        "body": "\"carnivaldecor_eggride2_kit\"",
        "description": " ※prefab ID: carnivaldecor_eggride2_kit\n ※Name: Mini Swing Carousel Kit\n ※Recipe: \n\t+ 36 x: Prize Tickets/carnival_prizeticket\n ※Required Tech: \n\t+ LV.1 : Trinket Trove/CARNIVAL_PRIZESHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivaldecor_eggride2_kit(ReverseSearch)": {
        "prefix": "p+Mini Swing Carousel Kit",
        "body": "\"carnivaldecor_eggride2_kit\"",
        "description": " ※prefab ID: carnivaldecor_eggride2_kit\n ※Name: Mini Swing Carousel Kit\n ※Recipe: \n\t+ 36 x: Prize Tickets/carnival_prizeticket\n ※Required Tech: \n\t+ LV.1 : Trinket Trove/CARNIVAL_PRIZESHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalgame_feedchicks_nest(ID Complete)": {
        "prefix": "p+carnivalgame_feedchicks_nest",
        "body": "\"carnivalgame_feedchicks_nest\"",
        "description": " ※prefab ID: carnivalgame_feedchicks_nest\n ※Name: Hungry Crow\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalgame_feedchicks_nest(ReverseSearch)": {
        "prefix": "p+Hungry Crow",
        "body": "\"carnivalgame_feedchicks_nest\"",
        "description": " ※prefab ID: carnivalgame_feedchicks_nest\n ※Name: Hungry Crow\n ※prefab Version: DST-632551 "
    },
    "prefab:driftwood_tree(ID Complete)": {
        "prefix": "p+driftwood_tree",
        "body": "\"driftwood_tree\"",
        "description": " ※prefab ID: driftwood_tree\n ※Name: Driftwood\n ※prefab Version: DST-632551 "
    },
    "prefab:driftwood_tree(ReverseSearch)": {
        "prefix": "p+Driftwood",
        "body": "\"driftwood_tree\"",
        "description": " ※prefab ID: driftwood_tree\n ※Name: Driftwood\n ※prefab Version: DST-632551 "
    },
    "prefab:boatrace_seastack(ID Complete)": {
        "prefix": "p+boatrace_seastack",
        "body": "\"boatrace_seastack\"",
        "description": " ※prefab ID: boatrace_seastack\n ※Name: Golden Buoy\n ※prefab Version: DST-632551 "
    },
    "prefab:boatrace_seastack(ReverseSearch)": {
        "prefix": "p+Golden Buoy",
        "body": "\"boatrace_seastack\"",
        "description": " ※prefab ID: boatrace_seastack\n ※Name: Golden Buoy\n ※prefab Version: DST-632551 "
    },
    "prefab:teleportato_ring(ID Complete)": {
        "prefix": "p+teleportato_ring",
        "body": "\"teleportato_ring\"",
        "description": " ※prefab ID: teleportato_ring\n ※Name: Ring Thing\n ※prefab Version: DST-632551 "
    },
    "prefab:teleportato_ring(ReverseSearch)": {
        "prefix": "p+Ring Thing",
        "body": "\"teleportato_ring\"",
        "description": " ※prefab ID: teleportato_ring\n ※Name: Ring Thing\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_bishop_builder(ID Complete)": {
        "prefix": "p+chesspiece_bishop_builder",
        "body": "\"chesspiece_bishop_builder\"",
        "description": " ※prefab ID: chesspiece_bishop_builder\n ※Name: Bishop Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_bishop_builder(ReverseSearch)": {
        "prefix": "p+Bishop Figure",
        "body": "\"chesspiece_bishop_builder\"",
        "description": " ※prefab ID: chesspiece_bishop_builder\n ※Name: Bishop Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:mermking(ID Complete)": {
        "prefix": "p+mermking",
        "body": "\"mermking\"",
        "description": " ※prefab ID: mermking\n ※Name: King of the Merms\n ※prefab Version: DST-632551 "
    },
    "prefab:mermking(ReverseSearch)": {
        "prefix": "p+King of the Merms",
        "body": "\"mermking\"",
        "description": " ※prefab ID: mermking\n ※Name: King of the Merms\n ※prefab Version: DST-632551 "
    },
    "prefab:carnival_ball(ID Complete)": {
        "prefix": "p+carnival_ball",
        "body": "\"carnival_ball\"",
        "description": " ※prefab ID: carnival_ball\n ※Name: Shiny Red Ball\n ※prefab Version: DST-632551 "
    },
    "prefab:carnival_ball(ReverseSearch)": {
        "prefix": "p+Shiny Red Ball",
        "body": "\"carnival_ball\"",
        "description": " ※prefab ID: carnival_ball\n ※Name: Shiny Red Ball\n ※prefab Version: DST-632551 "
    },
    "prefab:mushroomsprout_dark(ID Complete)": {
        "prefix": "p+mushroomsprout_dark",
        "body": "\"mushroomsprout_dark\"",
        "description": " ※prefab ID: mushroomsprout_dark\n ※Name: Misery Sporecap\n ※prefab Version: DST-632551 "
    },
    "prefab:mushroomsprout_dark(ReverseSearch)": {
        "prefix": "p+Misery Sporecap",
        "body": "\"mushroomsprout_dark\"",
        "description": " ※prefab ID: mushroomsprout_dark\n ※Name: Misery Sporecap\n ※prefab Version: DST-632551 "
    },
    "prefab:armor_bramble(ID Complete)": {
        "prefix": "p+armor_bramble",
        "body": "\"armor_bramble\"",
        "description": " ※prefab ID: armor_bramble\n ※Name: Bramble Husk\n ※Recipe: \n\t+ 2 x: Living Log/livinglog\n\t+ 4 x: Stinger/stinger\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:armor_bramble(ReverseSearch)": {
        "prefix": "p+Bramble Husk",
        "body": "\"armor_bramble\"",
        "description": " ※prefab ID: armor_bramble\n ※Name: Bramble Husk\n ※Recipe: \n\t+ 2 x: Living Log/livinglog\n\t+ 4 x: Stinger/stinger\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:justeggs(ID Complete)": {
        "prefix": "p+justeggs",
        "body": "\"justeggs\"",
        "description": " ※prefab ID: justeggs\n ※Name: Plain Omelette\n ※prefab Version: DST-632551 "
    },
    "prefab:justeggs(ReverseSearch)": {
        "prefix": "p+Plain Omelette",
        "body": "\"justeggs\"",
        "description": " ※prefab ID: justeggs\n ※Name: Plain Omelette\n ※prefab Version: DST-632551 "
    },
    "prefab:inspectacleshat(ID Complete)": {
        "prefix": "p+inspectacleshat",
        "body": "\"inspectacleshat\"",
        "description": " ※prefab ID: inspectacleshat\n ※Name: Inspectacles\n ※Recipe: \n\t+ 1 x: Fashion Goggles/goggleshat\n\t+ 2 x: Electrical Doodad/transistor\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:inspectacleshat(ReverseSearch)": {
        "prefix": "p+Inspectacles",
        "body": "\"inspectacleshat\"",
        "description": " ※prefab ID: inspectacleshat\n ※Name: Inspectacles\n ※Recipe: \n\t+ 1 x: Fashion Goggles/goggleshat\n\t+ 2 x: Electrical Doodad/transistor\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:mutateddeerclops(ID Complete)": {
        "prefix": "p+mutateddeerclops",
        "body": "\"mutateddeerclops\"",
        "description": " ※prefab ID: mutateddeerclops\n ※Name: Crystal Deerclops\n ※prefab Version: DST-632551 "
    },
    "prefab:mutateddeerclops(ReverseSearch)": {
        "prefix": "p+Crystal Deerclops",
        "body": "\"mutateddeerclops\"",
        "description": " ※prefab ID: mutateddeerclops\n ※Name: Crystal Deerclops\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_seeds_1(ID Complete)": {
        "prefix": "p+quagmire_seeds_1",
        "body": "\"quagmire_seeds_1\"",
        "description": " ※prefab ID: quagmire_seeds_1\n ※Name: Blue Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_seeds_1(ReverseSearch)": {
        "prefix": "p+Blue Seeds",
        "body": "\"quagmire_seeds_1\"",
        "description": " ※prefab ID: quagmire_seeds_1\n ※Name: Blue Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:saddle_shadow(ID Complete)": {
        "prefix": "p+saddle_shadow",
        "body": "\"saddle_shadow\"",
        "description": " ※prefab ID: saddle_shadow\n ※Name: Nightmare Saddle\n ※Recipe: \n\t+ 1 x: Possessed Shadow Atrium/shadowheart_infused\n\t+ 8 x: Pure Horror/horrorfuel\n\t+ 8 x: Dreadstone/dreadstone\n\t+ 5 x: Dark Tatters/voidcloth\n ※Required Tech: \n\t+ LV.2 : Shadowcraft/SHADOWFORGING\n ※prefab Version: DST-632551 "
    },
    "prefab:saddle_shadow(ReverseSearch)": {
        "prefix": "p+Nightmare Saddle",
        "body": "\"saddle_shadow\"",
        "description": " ※prefab ID: saddle_shadow\n ※Name: Nightmare Saddle\n ※Recipe: \n\t+ 1 x: Possessed Shadow Atrium/shadowheart_infused\n\t+ 8 x: Pure Horror/horrorfuel\n\t+ 8 x: Dreadstone/dreadstone\n\t+ 5 x: Dark Tatters/voidcloth\n ※Required Tech: \n\t+ LV.2 : Shadowcraft/SHADOWFORGING\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivaldecor_eggride3(ID Complete)": {
        "prefix": "p+carnivaldecor_eggride3",
        "body": "\"carnivaldecor_eggride3\"",
        "description": " ※prefab ID: carnivaldecor_eggride3\n ※Name: Mini Pendulum Ride\n ※Recipe: \n\t+ 1 x: Mini Pendulum Ride Kit/carnivaldecor_eggride3_kit\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:carnivaldecor_eggride3(ReverseSearch)": {
        "prefix": "p+Mini Pendulum Ride",
        "body": "\"carnivaldecor_eggride3\"",
        "description": " ※prefab ID: carnivaldecor_eggride3\n ※Name: Mini Pendulum Ride\n ※Recipe: \n\t+ 1 x: Mini Pendulum Ride Kit/carnivaldecor_eggride3_kit\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_medium_7(ID Complete)": {
        "prefix": "p+oceanfish_medium_7",
        "body": "\"oceanfish_medium_7\"",
        "description": " ※prefab ID: oceanfish_medium_7\n ※Name: Golden Koi\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_medium_7(ReverseSearch)": {
        "prefix": "p+Golden Koi",
        "body": "\"oceanfish_medium_7\"",
        "description": " ※prefab ID: oceanfish_medium_7\n ※Name: Golden Koi\n ※prefab Version: DST-632551 "
    },
    "prefab:hound(ID Complete)": {
        "prefix": "p+hound",
        "body": "\"hound\"",
        "description": " ※prefab ID: hound\n ※Name: Hound\n ※prefab Version: DST-632551 "
    },
    "prefab:hound(ReverseSearch)": {
        "prefix": "p+Hound",
        "body": "\"hound\"",
        "description": " ※prefab ID: hound\n ※Name: Hound\n ※prefab Version: DST-632551 "
    },
    "prefab:adventure_portal(ID Complete)": {
        "prefix": "p+adventure_portal",
        "body": "\"adventure_portal\"",
        "description": " ※prefab ID: adventure_portal\n ※Name: Maxwell's Door\n ※prefab Version: DST-632551 "
    },
    "prefab:adventure_portal(ReverseSearch)": {
        "prefix": "p+Maxwell's Door",
        "body": "\"adventure_portal\"",
        "description": " ※prefab ID: adventure_portal\n ※Name: Maxwell's Door\n ※prefab Version: DST-632551 "
    },
    "prefab:chest_mimic_revealed(ID Complete)": {
        "prefix": "p+chest_mimic_revealed",
        "body": "\"chest_mimic_revealed\"",
        "description": " ※prefab ID: chest_mimic_revealed\n ※Name: Ornery Chest\n ※prefab Version: DST-632551 "
    },
    "prefab:chest_mimic_revealed(ReverseSearch)": {
        "prefix": "p+Ornery Chest",
        "body": "\"chest_mimic_revealed\"",
        "description": " ※prefab ID: chest_mimic_revealed\n ※Name: Ornery Chest\n ※prefab Version: DST-632551 "
    },
    "prefab:halloweencandy_6(ID Complete)": {
        "prefix": "p+halloweencandy_6",
        "body": "\"halloweencandy_6\"",
        "description": " ※prefab ID: halloweencandy_6\n ※Name: 'Raisins'\n ※prefab Version: DST-632551 "
    },
    "prefab:halloweencandy_6(ReverseSearch)": {
        "prefix": "p+'Raisins'",
        "body": "\"halloweencandy_6\"",
        "description": " ※prefab ID: halloweencandy_6\n ※Name: 'Raisins'\n ※prefab Version: DST-632551 "
    },
    "prefab:catcoonden(ID Complete)": {
        "prefix": "p+catcoonden",
        "body": "\"catcoonden\"",
        "description": " ※prefab ID: catcoonden\n ※Name: Hollow Stump\n ※prefab Version: DST-632551 "
    },
    "prefab:catcoonden(ReverseSearch)": {
        "prefix": "p+Hollow Stump",
        "body": "\"catcoonden\"",
        "description": " ※prefab ID: catcoonden\n ※Name: Hollow Stump\n ※prefab Version: DST-632551 "
    },
    "prefab:otter(ID Complete)": {
        "prefix": "p+otter",
        "body": "\"otter\"",
        "description": " ※prefab ID: otter\n ※Name: Marotter\n ※prefab Version: DST-632551 "
    },
    "prefab:otter(ReverseSearch)": {
        "prefix": "p+Marotter",
        "body": "\"otter\"",
        "description": " ※prefab ID: otter\n ※Name: Marotter\n ※prefab Version: DST-632551 "
    },
    "prefab:spiderden(ID Complete)": {
        "prefix": "p+spiderden",
        "body": "\"spiderden\"",
        "description": " ※prefab ID: spiderden\n ※Name: Spider Den\n ※prefab Version: DST-632551 "
    },
    "prefab:spiderden(ReverseSearch)": {
        "prefix": "p+Spider Den",
        "body": "\"spiderden\"",
        "description": " ※prefab ID: spiderden\n ※Name: Spider Den\n ※prefab Version: DST-632551 "
    },
    "prefab:mask_blacksmithhat(ID Complete)": {
        "prefix": "p+mask_blacksmithhat",
        "body": "\"mask_blacksmithhat\"",
        "description": " ※prefab ID: mask_blacksmithhat\n ※Name: Blacksmith Mask\n ※prefab Version: DST-632551 "
    },
    "prefab:mask_blacksmithhat(ReverseSearch)": {
        "prefix": "p+Blacksmith Mask",
        "body": "\"mask_blacksmithhat\"",
        "description": " ※prefab ID: mask_blacksmithhat\n ※Name: Blacksmith Mask\n ※prefab Version: DST-632551 "
    },
    "prefab:eyeofterror(ID Complete)": {
        "prefix": "p+eyeofterror",
        "body": "\"eyeofterror\"",
        "description": " ※prefab ID: eyeofterror\n ※Name: Eye Of Terror\n ※prefab Version: DST-632551 "
    },
    "prefab:eyeofterror(ReverseSearch)": {
        "prefix": "p+Eye Of Terror",
        "body": "\"eyeofterror\"",
        "description": " ※prefab ID: eyeofterror\n ※Name: Eye Of Terror\n ※prefab Version: DST-632551 "
    },
    "prefab:tillweedsalve(ID Complete)": {
        "prefix": "p+tillweedsalve",
        "body": "\"tillweedsalve\"",
        "description": " ※prefab ID: tillweedsalve\n ※Name: Tillweed Salve\n ※Recipe: \n\t+ 4 x: Tillweeds/tillweed\n\t+ 4 x: Petals/petals\n\t+ 1 x: Charcoal/charcoal\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:tillweedsalve(ReverseSearch)": {
        "prefix": "p+Tillweed Salve",
        "body": "\"tillweedsalve\"",
        "description": " ※prefab ID: tillweedsalve\n ※Name: Tillweed Salve\n ※Recipe: \n\t+ 4 x: Tillweeds/tillweed\n\t+ 4 x: Petals/petals\n\t+ 1 x: Charcoal/charcoal\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:rock2(ID Complete)": {
        "prefix": "p+rock2",
        "body": "\"rock2\"",
        "description": " ※prefab ID: rock2\n ※Name: Boulder\n ※prefab Version: DST-632551 "
    },
    "prefab:rock2(ReverseSearch)": {
        "prefix": "p+Boulder",
        "body": "\"rock2\"",
        "description": " ※prefab ID: rock2\n ※Name: Boulder\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_017(ID Complete)": {
        "prefix": "p+quagmire_food_017",
        "body": "\"quagmire_food_017\"",
        "description": " ※prefab ID: quagmire_food_017\n ※Name: Fish Pie\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_017(ReverseSearch)": {
        "prefix": "p+Fish Pie",
        "body": "\"quagmire_food_017\"",
        "description": " ※prefab ID: quagmire_food_017\n ※Name: Fish Pie\n ※prefab Version: DST-632551 "
    },
    "prefab:bird_mutant_spitter(ID Complete)": {
        "prefix": "p+bird_mutant_spitter",
        "body": "\"bird_mutant_spitter\"",
        "description": " ※prefab ID: bird_mutant_spitter\n ※Name: Misshapen Bird\n ※prefab Version: DST-632551 "
    },
    "prefab:bird_mutant_spitter(ReverseSearch)": {
        "prefix": "p+Misshapen Bird",
        "body": "\"bird_mutant_spitter\"",
        "description": " ※prefab ID: bird_mutant_spitter\n ※Name: Misshapen Bird\n ※prefab Version: DST-632551 "
    },
    "prefab:fence_gate_item(ID Complete)": {
        "prefix": "p+fence_gate_item",
        "body": "\"fence_gate_item\"",
        "description": " ※prefab ID: fence_gate_item\n ※Name: Wood Gate\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 1 x: Rope/rope\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:fence_gate_item(ReverseSearch)": {
        "prefix": "p+Wood Gate",
        "body": "\"fence_gate_item\"",
        "description": " ※prefab ID: fence_gate_item\n ※Name: Wood Gate\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 1 x: Rope/rope\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_plate_silver(ID Complete)": {
        "prefix": "p+quagmire_plate_silver",
        "body": "\"quagmire_plate_silver\"",
        "description": " ※prefab ID: quagmire_plate_silver\n ※Name: Silver Plate\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_plate_silver(ReverseSearch)": {
        "prefix": "p+Silver Plate",
        "body": "\"quagmire_plate_silver\"",
        "description": " ※prefab ID: quagmire_plate_silver\n ※Name: Silver Plate\n ※prefab Version: DST-632551 "
    },
    "prefab:archive_lockbox_dispencer(ID Complete)": {
        "prefix": "p+archive_lockbox_dispencer",
        "body": "\"archive_lockbox_dispencer\"",
        "description": " ※prefab ID: archive_lockbox_dispencer\n ※Name: Fountain of Knowledge\n ※prefab Version: DST-632551 "
    },
    "prefab:archive_lockbox_dispencer(ReverseSearch)": {
        "prefix": "p+Fountain of Knowledge",
        "body": "\"archive_lockbox_dispencer\"",
        "description": " ※prefab ID: archive_lockbox_dispencer\n ※Name: Fountain of Knowledge\n ※prefab Version: DST-632551 "
    },
    "prefab:balloonhat(ID Complete)": {
        "prefix": "p+balloonhat",
        "body": "\"balloonhat\"",
        "description": " ※prefab ID: balloonhat\n ※Name: Balloon Hat\n ※Recipe: \n\t+ 0 x: Pile o' Balloons/balloons_empty\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:balloonhat(ReverseSearch)": {
        "prefix": "p+Balloon Hat",
        "body": "\"balloonhat\"",
        "description": " ※prefab ID: balloonhat\n ※Name: Balloon Hat\n ※Recipe: \n\t+ 0 x: Pile o' Balloons/balloons_empty\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:mound(ID Complete)": {
        "prefix": "p+mound",
        "body": "\"mound\"",
        "description": " ※prefab ID: mound\n ※Name: Grave\n ※prefab Version: DST-632551 "
    },
    "prefab:mound(ReverseSearch)": {
        "prefix": "p+Grave",
        "body": "\"mound\"",
        "description": " ※prefab ID: mound\n ※Name: Grave\n ※prefab Version: DST-632551 "
    },
    "prefab:resurrection_penalty(ID Complete)": {
        "prefix": "p+resurrection_penalty",
        "body": "\"resurrection_penalty\"",
        "description": " ※prefab ID: resurrection_penalty\n ※Name: Resurrection Sickness\n ※prefab Version: DST-632551 "
    },
    "prefab:resurrection_penalty(ReverseSearch)": {
        "prefix": "p+Resurrection Sickness",
        "body": "\"resurrection_penalty\"",
        "description": " ※prefab ID: resurrection_penalty\n ※Name: Resurrection Sickness\n ※prefab Version: DST-632551 "
    },
    "prefab:pumpkin_cooked(ID Complete)": {
        "prefix": "p+pumpkin_cooked",
        "body": "\"pumpkin_cooked\"",
        "description": " ※prefab ID: pumpkin_cooked\n ※Name: Hot Pumpkin\n ※prefab Version: DST-632551 "
    },
    "prefab:pumpkin_cooked(ReverseSearch)": {
        "prefix": "p+Hot Pumpkin",
        "body": "\"pumpkin_cooked\"",
        "description": " ※prefab ID: pumpkin_cooked\n ※Name: Hot Pumpkin\n ※prefab Version: DST-632551 "
    },
    "prefab:cookedmonstermeat(ID Complete)": {
        "prefix": "p+cookedmonstermeat",
        "body": "\"cookedmonstermeat\"",
        "description": " ※prefab ID: cookedmonstermeat\n ※Name: Cooked Monster Meat\n ※prefab Version: DST-632551 "
    },
    "prefab:cookedmonstermeat(ReverseSearch)": {
        "prefix": "p+Cooked Monster Meat",
        "body": "\"cookedmonstermeat\"",
        "description": " ※prefab ID: cookedmonstermeat\n ※Name: Cooked Monster Meat\n ※prefab Version: DST-632551 "
    },
    "prefab:balloonspeed(ID Complete)": {
        "prefix": "p+balloonspeed",
        "body": "\"balloonspeed\"",
        "description": " ※prefab ID: balloonspeed\n ※Name: Speedy Balloon\n ※Recipe: \n\t+ 0 x: Pile o' Balloons/balloons_empty\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:balloonspeed(ReverseSearch)": {
        "prefix": "p+Speedy Balloon",
        "body": "\"balloonspeed\"",
        "description": " ※prefab ID: balloonspeed\n ※Name: Speedy Balloon\n ※Recipe: \n\t+ 0 x: Pile o' Balloons/balloons_empty\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:carnival_prizebooth_kit(ID Complete)": {
        "prefix": "p+carnival_prizebooth_kit",
        "body": "\"carnival_prizebooth_kit\"",
        "description": " ※prefab ID: carnival_prizebooth_kit\n ※Name: Prize Booth Kit\n ※Recipe: \n\t+ 1 x: Gold Nugget/goldnugget\n\t+ 3 x: Seeds/seeds\n ※Required Tech: \n\t+ LV.3 : Cawnival Creation/CARNIVAL_HOSTSHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:carnival_prizebooth_kit(ReverseSearch)": {
        "prefix": "p+Prize Booth Kit",
        "body": "\"carnival_prizebooth_kit\"",
        "description": " ※prefab ID: carnival_prizebooth_kit\n ※Name: Prize Booth Kit\n ※Recipe: \n\t+ 1 x: Gold Nugget/goldnugget\n\t+ 3 x: Seeds/seeds\n ※Required Tech: \n\t+ LV.3 : Cawnival Creation/CARNIVAL_HOSTSHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:lavae_pet(ID Complete)": {
        "prefix": "p+lavae_pet",
        "body": "\"lavae_pet\"",
        "description": " ※prefab ID: lavae_pet\n ※Name: Extra-Adorable Lavae\n ※prefab Version: DST-632551 "
    },
    "prefab:lavae_pet(ReverseSearch)": {
        "prefix": "p+Extra-Adorable Lavae",
        "body": "\"lavae_pet\"",
        "description": " ※prefab ID: lavae_pet\n ※Name: Extra-Adorable Lavae\n ※prefab Version: DST-632551 "
    },
    "prefab:mast_item(ID Complete)": {
        "prefix": "p+mast_item",
        "body": "\"mast_item\"",
        "description": " ※prefab ID: mast_item\n ※Name: Mast Kit\n ※Recipe: \n\t+ 3 x: Boards/boards\n\t+ 3 x: Rope/rope\n\t+ 8 x: Silk/silk\n ※Required Tech: \n\t+ LV.1 : Seafaring/SEAFARING\n ※prefab Version: DST-632551 "
    },
    "prefab:mast_item(ReverseSearch)": {
        "prefix": "p+Mast Kit",
        "body": "\"mast_item\"",
        "description": " ※prefab ID: mast_item\n ※Name: Mast Kit\n ※Recipe: \n\t+ 3 x: Boards/boards\n\t+ 3 x: Rope/rope\n\t+ 8 x: Silk/silk\n ※Required Tech: \n\t+ LV.1 : Seafaring/SEAFARING\n ※prefab Version: DST-632551 "
    },
    "prefab:froglegs(ID Complete)": {
        "prefix": "p+froglegs",
        "body": "\"froglegs\"",
        "description": " ※prefab ID: froglegs\n ※Name: Frog Legs\n ※prefab Version: DST-632551 "
    },
    "prefab:froglegs(ReverseSearch)": {
        "prefix": "p+Frog Legs",
        "body": "\"froglegs\"",
        "description": " ※prefab ID: froglegs\n ※Name: Frog Legs\n ※prefab Version: DST-632551 "
    },
    "prefab:malbatross_feathered_weave(ID Complete)": {
        "prefix": "p+malbatross_feathered_weave",
        "body": "\"malbatross_feathered_weave\"",
        "description": " ※prefab ID: malbatross_feathered_weave\n ※Name: Feathery Canvas\n ※Recipe: \n\t+ 6 x: Malbatross Feather/malbatross_feather\n\t+ 1 x: Silk/silk\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:malbatross_feathered_weave(ReverseSearch)": {
        "prefix": "p+Feathery Canvas",
        "body": "\"malbatross_feathered_weave\"",
        "description": " ※prefab ID: malbatross_feathered_weave\n ※Name: Feathery Canvas\n ※Recipe: \n\t+ 6 x: Malbatross Feather/malbatross_feather\n\t+ 1 x: Silk/silk\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:wurt(ID Complete)": {
        "prefix": "p+wurt",
        "body": "\"wurt\"",
        "description": " ※prefab ID: wurt\n ※Name: Wurt\n ※prefab Version: DST-632551 "
    },
    "prefab:wurt(ReverseSearch)": {
        "prefix": "p+Wurt",
        "body": "\"wurt\"",
        "description": " ※prefab ID: wurt\n ※Name: Wurt\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_crabking_builder(ID Complete)": {
        "prefix": "p+chesspiece_crabking_builder",
        "body": "\"chesspiece_crabking_builder\"",
        "description": " ※prefab ID: chesspiece_crabking_builder\n ※Name: Crab King Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_crabking_builder(ReverseSearch)": {
        "prefix": "p+Crab King Figure",
        "body": "\"chesspiece_crabking_builder\"",
        "description": " ※prefab ID: chesspiece_crabking_builder\n ※Name: Crab King Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:known_tomato_seeds(ID Complete)": {
        "prefix": "p+known_tomato_seeds",
        "body": "\"known_tomato_seeds\"",
        "description": " ※prefab ID: known_tomato_seeds\n ※Name: Toma Root Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:known_tomato_seeds(ReverseSearch)": {
        "prefix": "p+Toma Root Seeds",
        "body": "\"known_tomato_seeds\"",
        "description": " ※prefab ID: known_tomato_seeds\n ※Name: Toma Root Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:boat_cannon(ID Complete)": {
        "prefix": "p+boat_cannon",
        "body": "\"boat_cannon\"",
        "description": " ※prefab ID: boat_cannon\n ※Name: Cannon\n ※Recipe: \n\t+ 4 x: Palmcone Scale/palmcone_scale\n\t+ 1 x: Rope/rope\n\t+ 4 x: Charcoal/charcoal\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:boat_cannon(ReverseSearch)": {
        "prefix": "p+Cannon",
        "body": "\"boat_cannon\"",
        "description": " ※prefab ID: boat_cannon\n ※Name: Cannon\n ※Recipe: \n\t+ 4 x: Palmcone Scale/palmcone_scale\n\t+ 1 x: Rope/rope\n\t+ 4 x: Charcoal/charcoal\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:yotc_carrat_gym_stamina(ID Complete)": {
        "prefix": "p+yotc_carrat_gym_stamina",
        "body": "\"yotc_carrat_gym_stamina\"",
        "description": " ※prefab ID: yotc_carrat_gym_stamina\n ※Name: Endurance Gym\n ※Recipe: \n\t+ 4 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:yotc_carrat_gym_stamina(ReverseSearch)": {
        "prefix": "p+Endurance Gym",
        "body": "\"yotc_carrat_gym_stamina\"",
        "description": " ※prefab ID: yotc_carrat_gym_stamina\n ※Name: Endurance Gym\n ※Recipe: \n\t+ 4 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:insanityrock(ID Complete)": {
        "prefix": "p+insanityrock",
        "body": "\"insanityrock\"",
        "description": " ※prefab ID: insanityrock\n ※Name: Obelisk\n ※prefab Version: DST-632551 "
    },
    "prefab:insanityrock(ReverseSearch)": {
        "prefix": "p+Obelisk",
        "body": "\"insanityrock\"",
        "description": " ※prefab ID: insanityrock\n ※Name: Obelisk\n ※prefab Version: DST-632551 "
    },
    "prefab:tallbird(ID Complete)": {
        "prefix": "p+tallbird",
        "body": "\"tallbird\"",
        "description": " ※prefab ID: tallbird\n ※Name: Tallbird\n ※prefab Version: DST-632551 "
    },
    "prefab:tallbird(ReverseSearch)": {
        "prefix": "p+Tallbird",
        "body": "\"tallbird\"",
        "description": " ※prefab ID: tallbird\n ※Name: Tallbird\n ※prefab Version: DST-632551 "
    },
    "prefab:wintercooking_bibingka(ID Complete)": {
        "prefix": "p+wintercooking_bibingka",
        "body": "\"wintercooking_bibingka\"",
        "description": " ※prefab ID: wintercooking_bibingka\n ※Name: Bibingka\n ※Recipe: \n\t+ 1 x: Holiday Cheer/wintersfeastfuel\n\t+ 2 x: Foliage/foliage\n ※Required Tech: \n\t+ LV.1 : Feast/WINTERSFEASTCOOKING\n ※prefab Version: DST-632551 "
    },
    "prefab:wintercooking_bibingka(ReverseSearch)": {
        "prefix": "p+Bibingka",
        "body": "\"wintercooking_bibingka\"",
        "description": " ※prefab ID: wintercooking_bibingka\n ※Name: Bibingka\n ※Recipe: \n\t+ 1 x: Holiday Cheer/wintersfeastfuel\n\t+ 2 x: Foliage/foliage\n ※Required Tech: \n\t+ LV.1 : Feast/WINTERSFEASTCOOKING\n ※prefab Version: DST-632551 "
    },
    "prefab:bodypillow_petals(ID Complete)": {
        "prefix": "p+bodypillow_petals",
        "body": "\"bodypillow_petals\"",
        "description": " ※prefab ID: bodypillow_petals\n ※Name: Flowery Pillow Armor\n ※Recipe: \n\t+ 2 x: Silk/silk\n\t+ 5 x: Petals/petals\n ※Required Tech: \n\t+ LV.3 : /RABBITOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:bodypillow_petals(ReverseSearch)": {
        "prefix": "p+Flowery Pillow Armor",
        "body": "\"bodypillow_petals\"",
        "description": " ※prefab ID: bodypillow_petals\n ※Name: Flowery Pillow Armor\n ※Recipe: \n\t+ 2 x: Silk/silk\n\t+ 5 x: Petals/petals\n ※Required Tech: \n\t+ LV.3 : /RABBITOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:dug_berrybush(ID Complete)": {
        "prefix": "p+dug_berrybush",
        "body": "\"dug_berrybush\"",
        "description": " ※prefab ID: dug_berrybush\n ※Name: Berry Bush\n ※prefab Version: DST-632551 "
    },
    "prefab:dug_berrybush(ReverseSearch)": {
        "prefix": "p+Berry Bush",
        "body": "\"dug_berrybush\"",
        "description": " ※prefab ID: dug_berrybush\n ※Name: Berry Bush\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_small_8(ID Complete)": {
        "prefix": "p+oceanfish_small_8",
        "body": "\"oceanfish_small_8\"",
        "description": " ※prefab ID: oceanfish_small_8\n ※Name: Scorching Sunfish\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_small_8(ReverseSearch)": {
        "prefix": "p+Scorching Sunfish",
        "body": "\"oceanfish_small_8\"",
        "description": " ※prefab ID: oceanfish_small_8\n ※Name: Scorching Sunfish\n ※prefab Version: DST-632551 "
    },
    "prefab:wathgrithrhat(ID Complete)": {
        "prefix": "p+wathgrithrhat",
        "body": "\"wathgrithrhat\"",
        "description": " ※prefab ID: wathgrithrhat\n ※Name: Battle Helm\n ※Recipe: \n\t+ 2 x: Gold Nugget/goldnugget\n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:wathgrithrhat(ReverseSearch)": {
        "prefix": "p+Battle Helm",
        "body": "\"wathgrithrhat\"",
        "description": " ※prefab ID: wathgrithrhat\n ※Name: Battle Helm\n ※Recipe: \n\t+ 2 x: Gold Nugget/goldnugget\n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:handpillow_petals(ID Complete)": {
        "prefix": "p+handpillow_petals",
        "body": "\"handpillow_petals\"",
        "description": " ※prefab ID: handpillow_petals\n ※Name: Flowery Pillow\n ※Recipe: \n\t+ 2 x: Silk/silk\n\t+ 3 x: Petals/petals\n ※Required Tech: \n\t+ LV.3 : /RABBITOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:handpillow_petals(ReverseSearch)": {
        "prefix": "p+Flowery Pillow",
        "body": "\"handpillow_petals\"",
        "description": " ※prefab ID: handpillow_petals\n ※Name: Flowery Pillow\n ※Recipe: \n\t+ 2 x: Silk/silk\n\t+ 3 x: Petals/petals\n ※Required Tech: \n\t+ LV.3 : /RABBITOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:nightmaregrowth(ID Complete)": {
        "prefix": "p+nightmaregrowth",
        "body": "\"nightmaregrowth\"",
        "description": " ※prefab ID: nightmaregrowth\n ※Name: Nightmare Rampart\n ※prefab Version: DST-632551 "
    },
    "prefab:nightmaregrowth(ReverseSearch)": {
        "prefix": "p+Nightmare Rampart",
        "body": "\"nightmaregrowth\"",
        "description": " ※prefab ID: nightmaregrowth\n ※Name: Nightmare Rampart\n ※prefab Version: DST-632551 "
    },
    "prefab:siestahut(ID Complete)": {
        "prefix": "p+siestahut",
        "body": "\"siestahut\"",
        "description": " ※prefab ID: siestahut\n ※Name: Siesta Lean-to\n ※Recipe: \n\t+ 2 x: Silk/silk\n\t+ 4 x: Boards/boards\n\t+ 3 x: Rope/rope\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:siestahut(ReverseSearch)": {
        "prefix": "p+Siesta Lean-to",
        "body": "\"siestahut\"",
        "description": " ※prefab ID: siestahut\n ※Name: Siesta Lean-to\n ※Recipe: \n\t+ 2 x: Silk/silk\n\t+ 4 x: Boards/boards\n\t+ 3 x: Rope/rope\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:watermelon_oversized(ID Complete)": {
        "prefix": "p+watermelon_oversized",
        "body": "\"watermelon_oversized\"",
        "description": " ※prefab ID: watermelon_oversized\n ※Name: Giant Watermelon\n ※prefab Version: DST-632551 "
    },
    "prefab:watermelon_oversized(ReverseSearch)": {
        "prefix": "p+Giant Watermelon",
        "body": "\"watermelon_oversized\"",
        "description": " ※prefab ID: watermelon_oversized\n ※Name: Giant Watermelon\n ※prefab Version: DST-632551 "
    },
    "prefab:boatrace_start_throwable_deploykit(ID Complete)": {
        "prefix": "p+boatrace_start_throwable_deploykit",
        "body": "\"boatrace_start_throwable_deploykit\"",
        "description": " ※prefab ID: boatrace_start_throwable_deploykit\n ※Name: Start Tower Kit\n ※Recipe: \n\t+ 4 x: Gold Nugget/goldnugget\n ※Required Tech: \n\t+ LV.3 : /DRAGONOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:boatrace_start_throwable_deploykit(ReverseSearch)": {
        "prefix": "p+Start Tower Kit",
        "body": "\"boatrace_start_throwable_deploykit\"",
        "description": " ※prefab ID: boatrace_start_throwable_deploykit\n ※Name: Start Tower Kit\n ※Recipe: \n\t+ 4 x: Gold Nugget/goldnugget\n ※Required Tech: \n\t+ LV.3 : /DRAGONOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:merm_tool(ID Complete)": {
        "prefix": "p+merm_tool",
        "body": "\"merm_tool\"",
        "description": " ※prefab ID: merm_tool\n ※Name: Shoddy Tool\n ※Recipe: \n\t+ 1 x: Twigs/twigs\n\t+ 1 x: Rocks/rocks\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:merm_tool(ReverseSearch)": {
        "prefix": "p+Shoddy Tool",
        "body": "\"merm_tool\"",
        "description": " ※prefab ID: merm_tool\n ※Name: Shoddy Tool\n ※Recipe: \n\t+ 1 x: Twigs/twigs\n\t+ 1 x: Rocks/rocks\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_rotten_crop(ID Complete)": {
        "prefix": "p+quagmire_rotten_crop",
        "body": "\"quagmire_rotten_crop\"",
        "description": " ※prefab ID: quagmire_rotten_crop\n ※Name: Rotten Crop\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_rotten_crop(ReverseSearch)": {
        "prefix": "p+Rotten Crop",
        "body": "\"quagmire_rotten_crop\"",
        "description": " ※prefab ID: quagmire_rotten_crop\n ※Name: Rotten Crop\n ※prefab Version: DST-632551 "
    },
    "prefab:meat(ID Complete)": {
        "prefix": "p+meat",
        "body": "\"meat\"",
        "description": " ※prefab ID: meat\n ※Name: Meat\n ※prefab Version: DST-632551 "
    },
    "prefab:meat(ReverseSearch)": {
        "prefix": "p+Meat",
        "body": "\"meat\"",
        "description": " ※prefab ID: meat\n ※Name: Meat\n ※prefab Version: DST-632551 "
    },
    "prefab:winterhat(ID Complete)": {
        "prefix": "p+winterhat",
        "body": "\"winterhat\"",
        "description": " ※prefab ID: winterhat\n ※Name: Winter Hat\n ※Recipe: \n\t+ 4 x: Beefalo Wool/beefalowool\n\t+ 4 x: Silk/silk\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:winterhat(ReverseSearch)": {
        "prefix": "p+Winter Hat",
        "body": "\"winterhat\"",
        "description": " ※prefab ID: winterhat\n ※Name: Winter Hat\n ※Recipe: \n\t+ 4 x: Beefalo Wool/beefalowool\n\t+ 4 x: Silk/silk\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:book_light(ID Complete)": {
        "prefix": "p+book_light",
        "body": "\"book_light\"",
        "description": " ※prefab ID: book_light\n ※Name: Lux Aeterna\n ※Recipe: \n\t+ 2 x: Papyrus/papyrus\n\t+ 2 x: Light Bulb/lightbulb\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:book_light(ReverseSearch)": {
        "prefix": "p+Lux Aeterna",
        "body": "\"book_light\"",
        "description": " ※prefab ID: book_light\n ※Name: Lux Aeterna\n ※Recipe: \n\t+ 2 x: Papyrus/papyrus\n\t+ 2 x: Light Bulb/lightbulb\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:sculpting_material(ID Complete)": {
        "prefix": "p+sculpting_material",
        "body": "\"sculpting_material\"",
        "description": " ※prefab ID: sculpting_material\n ※Name: Sculpting Block\n ※prefab Version: DST-632551 "
    },
    "prefab:sculpting_material(ReverseSearch)": {
        "prefix": "p+Sculpting Block",
        "body": "\"sculpting_material\"",
        "description": " ※prefab ID: sculpting_material\n ※Name: Sculpting Block\n ※prefab Version: DST-632551 "
    },
    "prefab:moonstorm_spark(ID Complete)": {
        "prefix": "p+moonstorm_spark",
        "body": "\"moonstorm_spark\"",
        "description": " ※prefab ID: moonstorm_spark\n ※Name: Moongleam\n ※prefab Version: DST-632551 "
    },
    "prefab:moonstorm_spark(ReverseSearch)": {
        "prefix": "p+Moongleam",
        "body": "\"moonstorm_spark\"",
        "description": " ※prefab ID: moonstorm_spark\n ※Name: Moongleam\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_14(ID Complete)": {
        "prefix": "p+trinket_14",
        "body": "\"trinket_14\"",
        "description": " ※prefab ID: trinket_14\n ※Name: Leaky Teacup\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_14(ReverseSearch)": {
        "prefix": "p+Leaky Teacup",
        "body": "\"trinket_14\"",
        "description": " ※prefab ID: trinket_14\n ※Name: Leaky Teacup\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_malbatross_sketch(ID Complete)": {
        "prefix": "p+chesspiece_malbatross_sketch",
        "body": "\"chesspiece_malbatross_sketch\"",
        "description": " ※prefab ID: chesspiece_malbatross_sketch\n ※Name: Malbatross Figure Sketch\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_malbatross_sketch(ReverseSearch)": {
        "prefix": "p+Malbatross Figure Sketch",
        "body": "\"chesspiece_malbatross_sketch\"",
        "description": " ※prefab ID: chesspiece_malbatross_sketch\n ※Name: Malbatross Figure Sketch\n ※prefab Version: DST-632551 "
    },
    "prefab:ghostflower(ID Complete)": {
        "prefix": "p+ghostflower",
        "body": "\"ghostflower\"",
        "description": " ※prefab ID: ghostflower\n ※Name: Mourning Glory\n ※prefab Version: DST-632551 "
    },
    "prefab:ghostflower(ReverseSearch)": {
        "prefix": "p+Mourning Glory",
        "body": "\"ghostflower\"",
        "description": " ※prefab ID: ghostflower\n ※Name: Mourning Glory\n ※prefab Version: DST-632551 "
    },
    "prefab:half_sanity(ID Complete)": {
        "prefix": "p+half_sanity",
        "body": "\"half_sanity\"",
        "description": " ※prefab ID: half_sanity\n ※Name: Maximum Sanity\n ※prefab Version: DST-632551 "
    },
    "prefab:half_sanity(ReverseSearch)": {
        "prefix": "p+Maximum Sanity",
        "body": "\"half_sanity\"",
        "description": " ※prefab ID: half_sanity\n ※Name: Maximum Sanity\n ※prefab Version: DST-632551 "
    },
    "prefab:shroombait(ID Complete)": {
        "prefix": "p+shroombait",
        "body": "\"shroombait\"",
        "description": " ※prefab ID: shroombait\n ※Name: Stuffed Night Cap\n ※prefab Version: DST-632551 "
    },
    "prefab:shroombait(ReverseSearch)": {
        "prefix": "p+Stuffed Night Cap",
        "body": "\"shroombait\"",
        "description": " ※prefab ID: shroombait\n ※Name: Stuffed Night Cap\n ※prefab Version: DST-632551 "
    },
    "prefab:alterguardian_phase3dead(ID Complete)": {
        "prefix": "p+alterguardian_phase3dead",
        "body": "\"alterguardian_phase3dead\"",
        "description": " ※prefab ID: alterguardian_phase3dead\n ※Name: Defeated Celestial Champion\n ※prefab Version: DST-632551 "
    },
    "prefab:alterguardian_phase3dead(ReverseSearch)": {
        "prefix": "p+Defeated Celestial Champion",
        "body": "\"alterguardian_phase3dead\"",
        "description": " ※prefab ID: alterguardian_phase3dead\n ※Name: Defeated Celestial Champion\n ※prefab Version: DST-632551 "
    },
    "prefab:fishtacos(ID Complete)": {
        "prefix": "p+fishtacos",
        "body": "\"fishtacos\"",
        "description": " ※prefab ID: fishtacos\n ※Name: Fish Tacos\n ※prefab Version: DST-632551 "
    },
    "prefab:fishtacos(ReverseSearch)": {
        "prefix": "p+Fish Tacos",
        "body": "\"fishtacos\"",
        "description": " ※prefab ID: fishtacos\n ※Name: Fish Tacos\n ※prefab Version: DST-632551 "
    },
    "prefab:wagstaff_tool_2(ID Complete)": {
        "prefix": "p+wagstaff_tool_2",
        "body": "\"wagstaff_tool_2\"",
        "description": " ※prefab ID: wagstaff_tool_2\n ※Name: Widget Deflubber\n ※prefab Version: DST-632551 "
    },
    "prefab:wagstaff_tool_2(ReverseSearch)": {
        "prefix": "p+Widget Deflubber",
        "body": "\"wagstaff_tool_2\"",
        "description": " ※prefab ID: wagstaff_tool_2\n ※Name: Widget Deflubber\n ※prefab Version: DST-632551 "
    },
    "prefab:garlic_cooked(ID Complete)": {
        "prefix": "p+garlic_cooked",
        "body": "\"garlic_cooked\"",
        "description": " ※prefab ID: garlic_cooked\n ※Name: Roasted Garlic\n ※prefab Version: DST-632551 "
    },
    "prefab:garlic_cooked(ReverseSearch)": {
        "prefix": "p+Roasted Garlic",
        "body": "\"garlic_cooked\"",
        "description": " ※prefab ID: garlic_cooked\n ※Name: Roasted Garlic\n ※prefab Version: DST-632551 "
    },
    "prefab:drumstick(ID Complete)": {
        "prefix": "p+drumstick",
        "body": "\"drumstick\"",
        "description": " ※prefab ID: drumstick\n ※Name: Drumstick\n ※prefab Version: DST-632551 "
    },
    "prefab:drumstick(ReverseSearch)": {
        "prefix": "p+Drumstick",
        "body": "\"drumstick\"",
        "description": " ※prefab ID: drumstick\n ※Name: Drumstick\n ※prefab Version: DST-632551 "
    },
    "prefab:winter_food7(ID Complete)": {
        "prefix": "p+winter_food7",
        "body": "\"winter_food7\"",
        "description": " ※prefab ID: winter_food7\n ※Name: Apple Cider\n ※prefab Version: DST-632551 "
    },
    "prefab:winter_food7(ReverseSearch)": {
        "prefix": "p+Apple Cider",
        "body": "\"winter_food7\"",
        "description": " ※prefab ID: winter_food7\n ※Name: Apple Cider\n ※prefab Version: DST-632551 "
    },
    "prefab:wagstaff_npc_mutations(ID Complete)": {
        "prefix": "p+wagstaff_npc_mutations",
        "body": "\"wagstaff_npc_mutations\"",
        "description": " ※prefab ID: wagstaff_npc_mutations\n ※Name: Grainy Transmission\n ※prefab Version: DST-632551 "
    },
    "prefab:wagstaff_npc_mutations(ReverseSearch)": {
        "prefix": "p+Grainy Transmission",
        "body": "\"wagstaff_npc_mutations\"",
        "description": " ※prefab ID: wagstaff_npc_mutations\n ※Name: Grainy Transmission\n ※prefab Version: DST-632551 "
    },
    "prefab:premiumwateringcan(ID Complete)": {
        "prefix": "p+premiumwateringcan",
        "body": "\"premiumwateringcan\"",
        "description": " ※prefab ID: premiumwateringcan\n ※Name: Empty Waterfowl Can\n ※Recipe: \n\t+ 2 x: Driftwood Piece/driftwood_log\n\t+ 1 x: Rope/rope\n\t+ 1 x: Malbatross Bill/malbatross_beak\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:premiumwateringcan(ReverseSearch)": {
        "prefix": "p+Empty Waterfowl Can",
        "body": "\"premiumwateringcan\"",
        "description": " ※prefab ID: premiumwateringcan\n ※Name: Empty Waterfowl Can\n ※Recipe: \n\t+ 2 x: Driftwood Piece/driftwood_log\n\t+ 1 x: Rope/rope\n\t+ 1 x: Malbatross Bill/malbatross_beak\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:scorched_skeleton(ID Complete)": {
        "prefix": "p+scorched_skeleton",
        "body": "\"scorched_skeleton\"",
        "description": " ※prefab ID: scorched_skeleton\n ※Name: Crispy Skeleton\n ※prefab Version: DST-632551 "
    },
    "prefab:scorched_skeleton(ReverseSearch)": {
        "prefix": "p+Crispy Skeleton",
        "body": "\"scorched_skeleton\"",
        "description": " ※prefab ID: scorched_skeleton\n ※Name: Crispy Skeleton\n ※prefab Version: DST-632551 "
    },
    "prefab:tallbirdegg_cracked(ID Complete)": {
        "prefix": "p+tallbirdegg_cracked",
        "body": "\"tallbirdegg_cracked\"",
        "description": " ※prefab ID: tallbirdegg_cracked\n ※Name: Hatching Tallbird Egg\n ※prefab Version: DST-632551 "
    },
    "prefab:tallbirdegg_cracked(ReverseSearch)": {
        "prefix": "p+Hatching Tallbird Egg",
        "body": "\"tallbirdegg_cracked\"",
        "description": " ※prefab ID: tallbirdegg_cracked\n ※Name: Hatching Tallbird Egg\n ※prefab Version: DST-632551 "
    },
    "prefab:farm_plant_dragonfruit(ID Complete)": {
        "prefix": "p+farm_plant_dragonfruit",
        "body": "\"farm_plant_dragonfruit\"",
        "description": " ※prefab ID: farm_plant_dragonfruit\n ※Name: Dragon Fruit Vine\n ※prefab Version: DST-632551 "
    },
    "prefab:farm_plant_dragonfruit(ReverseSearch)": {
        "prefix": "p+Dragon Fruit Vine",
        "body": "\"farm_plant_dragonfruit\"",
        "description": " ※prefab ID: farm_plant_dragonfruit\n ※Name: Dragon Fruit Vine\n ※prefab Version: DST-632551 "
    },
    "prefab:statueharp_hedgespawner(ID Complete)": {
        "prefix": "p+statueharp_hedgespawner",
        "body": "\"statueharp_hedgespawner\"",
        "description": " ※prefab ID: statueharp_hedgespawner\n ※Name: Overgrown Statue\n ※prefab Version: DST-632551 "
    },
    "prefab:statueharp_hedgespawner(ReverseSearch)": {
        "prefix": "p+Overgrown Statue",
        "body": "\"statueharp_hedgespawner\"",
        "description": " ※prefab ID: statueharp_hedgespawner\n ※Name: Overgrown Statue\n ※prefab Version: DST-632551 "
    },
    "prefab:book_moon(ID Complete)": {
        "prefix": "p+book_moon",
        "body": "\"book_moon\"",
        "description": " ※prefab ID: book_moon\n ※Name: Lunar Grimoire\n ※Recipe: \n\t+ 2 x: Papyrus/papyrus\n\t+ 1 x: Iridescent Gem/opalpreciousgem\n\t+ 2 x: Moon Moth Wings/moonbutterflywings\n ※Required Tech: \n\t+ LV.1 : /BOOKCRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:book_moon(ReverseSearch)": {
        "prefix": "p+Lunar Grimoire",
        "body": "\"book_moon\"",
        "description": " ※prefab ID: book_moon\n ※Name: Lunar Grimoire\n ※Recipe: \n\t+ 2 x: Papyrus/papyrus\n\t+ 1 x: Iridescent Gem/opalpreciousgem\n\t+ 2 x: Moon Moth Wings/moonbutterflywings\n ※Required Tech: \n\t+ LV.1 : /BOOKCRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:smallmeat_dried(ID Complete)": {
        "prefix": "p+smallmeat_dried",
        "body": "\"smallmeat_dried\"",
        "description": " ※prefab ID: smallmeat_dried\n ※Name: Small Jerky\n ※prefab Version: DST-632551 "
    },
    "prefab:smallmeat_dried(ReverseSearch)": {
        "prefix": "p+Small Jerky",
        "body": "\"smallmeat_dried\"",
        "description": " ※prefab ID: smallmeat_dried\n ※Name: Small Jerky\n ※prefab Version: DST-632551 "
    },
    "prefab:yotr_food4(ID Complete)": {
        "prefix": "p+yotr_food4",
        "body": "\"yotr_food4\"",
        "description": " ※prefab ID: yotr_food4\n ※Name: Skewered Puffs\n ※Recipe: \n\t+ 5 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /RABBITOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:yotr_food4(ReverseSearch)": {
        "prefix": "p+Skewered Puffs",
        "body": "\"yotr_food4\"",
        "description": " ※prefab ID: yotr_food4\n ※Name: Skewered Puffs\n ※Recipe: \n\t+ 5 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /RABBITOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_050(ID Complete)": {
        "prefix": "p+quagmire_food_050",
        "body": "\"quagmire_food_050\"",
        "description": " ※prefab ID: quagmire_food_050\n ※Name: Pierogi\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_050(ReverseSearch)": {
        "prefix": "p+Pierogi",
        "body": "\"quagmire_food_050\"",
        "description": " ※prefab ID: quagmire_food_050\n ※Name: Pierogi\n ※prefab Version: DST-632551 "
    },
    "prefab:birdcage(ID Complete)": {
        "prefix": "p+birdcage",
        "body": "\"birdcage\"",
        "description": " ※prefab ID: birdcage\n ※Name: Birdcage\n ※Recipe: \n\t+ 2 x: Papyrus/papyrus\n\t+ 6 x: Gold Nugget/goldnugget\n\t+ 2 x: Seeds/seeds\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:birdcage(ReverseSearch)": {
        "prefix": "p+Birdcage",
        "body": "\"birdcage\"",
        "description": " ※prefab ID: birdcage\n ※Name: Birdcage\n ※Recipe: \n\t+ 2 x: Papyrus/papyrus\n\t+ 6 x: Gold Nugget/goldnugget\n\t+ 2 x: Seeds/seeds\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:tacklecontainer(ID Complete)": {
        "prefix": "p+tacklecontainer",
        "body": "\"tacklecontainer\"",
        "description": " ※prefab ID: tacklecontainer\n ※Name: Tackle Box\n ※Recipe: \n\t+ 2 x: Cookie Cutter Shell/cookiecuttershell\n\t+ 1 x: Rope/rope\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:tacklecontainer(ReverseSearch)": {
        "prefix": "p+Tackle Box",
        "body": "\"tacklecontainer\"",
        "description": " ※prefab ID: tacklecontainer\n ※Name: Tackle Box\n ※Recipe: \n\t+ 2 x: Cookie Cutter Shell/cookiecuttershell\n\t+ 1 x: Rope/rope\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:turf_cotl_gold(ID Complete)": {
        "prefix": "p+turf_cotl_gold",
        "body": "\"turf_cotl_gold\"",
        "description": " ※prefab ID: turf_cotl_gold\n ※Name: Gold Flooring\n ※Recipe: \n\t+ 1 x: Rocks/rocks\n\t+ 1 x: Gold Nugget/goldnugget\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_cotl_gold(ReverseSearch)": {
        "prefix": "p+Gold Flooring",
        "body": "\"turf_cotl_gold\"",
        "description": " ※prefab ID: turf_cotl_gold\n ※Name: Gold Flooring\n ※Recipe: \n\t+ 1 x: Rocks/rocks\n\t+ 1 x: Gold Nugget/goldnugget\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_crate_grill(ID Complete)": {
        "prefix": "p+quagmire_crate_grill",
        "body": "\"quagmire_crate_grill\"",
        "description": " ※prefab ID: quagmire_crate_grill\n ※Name: Large Grill Kit\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_crate_grill(ReverseSearch)": {
        "prefix": "p+Large Grill Kit",
        "body": "\"quagmire_crate_grill\"",
        "description": " ※prefab ID: quagmire_crate_grill\n ※Name: Large Grill Kit\n ※prefab Version: DST-632551 "
    },
    "prefab:powcake(ID Complete)": {
        "prefix": "p+powcake",
        "body": "\"powcake\"",
        "description": " ※prefab ID: powcake\n ※Name: Powdercake\n ※prefab Version: DST-632551 "
    },
    "prefab:powcake(ReverseSearch)": {
        "prefix": "p+Powdercake",
        "body": "\"powcake\"",
        "description": " ※prefab ID: powcake\n ※Name: Powdercake\n ※prefab Version: DST-632551 "
    },
    "prefab:mushgnome(ID Complete)": {
        "prefix": "p+mushgnome",
        "body": "\"mushgnome\"",
        "description": " ※prefab ID: mushgnome\n ※Name: Mush Gnome\n ※prefab Version: DST-632551 "
    },
    "prefab:mushgnome(ReverseSearch)": {
        "prefix": "p+Mush Gnome",
        "body": "\"mushgnome\"",
        "description": " ※prefab ID: mushgnome\n ※Name: Mush Gnome\n ※prefab Version: DST-632551 "
    },
    "prefab:yotb_beefaloshrine(ID Complete)": {
        "prefix": "p+yotb_beefaloshrine",
        "body": "\"yotb_beefaloshrine\"",
        "description": " ※prefab ID: yotb_beefaloshrine\n ※Name: Beefalo Shrine\n ※Recipe: \n\t+ 4 x: Gold Nugget/goldnugget\n\t+ 2 x: Boards/boards\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:yotb_beefaloshrine(ReverseSearch)": {
        "prefix": "p+Beefalo Shrine",
        "body": "\"yotb_beefaloshrine\"",
        "description": " ※prefab ID: yotb_beefaloshrine\n ※Name: Beefalo Shrine\n ※Recipe: \n\t+ 4 x: Gold Nugget/goldnugget\n\t+ 2 x: Boards/boards\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:onemanband(ID Complete)": {
        "prefix": "p+onemanband",
        "body": "\"onemanband\"",
        "description": " ※prefab ID: onemanband\n ※Name: One-man Band\n ※Recipe: \n\t+ 2 x: Gold Nugget/goldnugget\n\t+ 4 x: Nightmare Fuel/nightmarefuel\n\t+ 2 x: Pig Skin/pigskin\n ※Required Tech: \n\t+ LV.2 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:onemanband(ReverseSearch)": {
        "prefix": "p+One-man Band",
        "body": "\"onemanband\"",
        "description": " ※prefab ID: onemanband\n ※Name: One-man Band\n ※Recipe: \n\t+ 2 x: Gold Nugget/goldnugget\n\t+ 4 x: Nightmare Fuel/nightmarefuel\n\t+ 2 x: Pig Skin/pigskin\n ※Required Tech: \n\t+ LV.2 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:livingtree(ID Complete)": {
        "prefix": "p+livingtree",
        "body": "\"livingtree\"",
        "description": " ※prefab ID: livingtree\n ※Name: Totally Normal Tree\n ※prefab Version: DST-632551 "
    },
    "prefab:livingtree(ReverseSearch)": {
        "prefix": "p+Totally Normal Tree",
        "body": "\"livingtree\"",
        "description": " ※prefab ID: livingtree\n ※Name: Totally Normal Tree\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_mosaic_blue(ID Complete)": {
        "prefix": "p+turf_mosaic_blue",
        "body": "\"turf_mosaic_blue\"",
        "description": " ※prefab ID: turf_mosaic_blue\n ※Name: Blue Mosaic Flooring\n ※Recipe: \n\t+ 1 x: Marble/marble\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_mosaic_blue(ReverseSearch)": {
        "prefix": "p+Blue Mosaic Flooring",
        "body": "\"turf_mosaic_blue\"",
        "description": " ※prefab ID: turf_mosaic_blue\n ※Name: Blue Mosaic Flooring\n ※Recipe: \n\t+ 1 x: Marble/marble\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:battlesong_sanitygain(ID Complete)": {
        "prefix": "p+battlesong_sanitygain",
        "body": "\"battlesong_sanitygain\"",
        "description": " ※prefab ID: battlesong_sanitygain\n ※Name: Clear Minded Cadenza\n ※Recipe: \n\t+ 1 x: Papyrus/papyrus\n\t+ 1 x: Feather Pencil/featherpencil\n\t+ 1 x: Moon Moth Wings/moonbutterflywings\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:battlesong_sanitygain(ReverseSearch)": {
        "prefix": "p+Clear Minded Cadenza",
        "body": "\"battlesong_sanitygain\"",
        "description": " ※prefab ID: battlesong_sanitygain\n ※Name: Clear Minded Cadenza\n ※Recipe: \n\t+ 1 x: Papyrus/papyrus\n\t+ 1 x: Feather Pencil/featherpencil\n\t+ 1 x: Moon Moth Wings/moonbutterflywings\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:moose2(ID Complete)": {
        "prefix": "p+moose2",
        "body": "\"moose2\"",
        "description": " ※prefab ID: moose2\n ※Name: Goose\n ※prefab Version: DST-632551 "
    },
    "prefab:moose2(ReverseSearch)": {
        "prefix": "p+Goose",
        "body": "\"moose2\"",
        "description": " ※prefab ID: moose2\n ※Name: Goose\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_moosegoose(ID Complete)": {
        "prefix": "p+chesspiece_moosegoose",
        "body": "\"chesspiece_moosegoose\"",
        "description": " ※prefab ID: chesspiece_moosegoose\n ※Name: Moose Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_moosegoose(ReverseSearch)": {
        "prefix": "p+Moose Figure",
        "body": "\"chesspiece_moosegoose\"",
        "description": " ※prefab ID: chesspiece_moosegoose\n ※Name: Moose Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:mastupgrade_lightningrod(ID Complete)": {
        "prefix": "p+mastupgrade_lightningrod",
        "body": "\"mastupgrade_lightningrod\"",
        "description": " ※prefab ID: mastupgrade_lightningrod\n ※Name: Lightning Conductor\n ※Recipe: \n\t+ 5 x: Gold Nugget/goldnugget\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:mastupgrade_lightningrod(ReverseSearch)": {
        "prefix": "p+Lightning Conductor",
        "body": "\"mastupgrade_lightningrod\"",
        "description": " ※prefab ID: mastupgrade_lightningrod\n ※Name: Lightning Conductor\n ※Recipe: \n\t+ 5 x: Gold Nugget/goldnugget\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:stinger(ID Complete)": {
        "prefix": "p+stinger",
        "body": "\"stinger\"",
        "description": " ※prefab ID: stinger\n ※Name: Stinger\n ※prefab Version: DST-632551 "
    },
    "prefab:stinger(ReverseSearch)": {
        "prefix": "p+Stinger",
        "body": "\"stinger\"",
        "description": " ※prefab ID: stinger\n ※Name: Stinger\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_potato(ID Complete)": {
        "prefix": "p+quagmire_potato",
        "body": "\"quagmire_potato\"",
        "description": " ※prefab ID: quagmire_potato\n ※Name: Potato\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_potato(ReverseSearch)": {
        "prefix": "p+Potato",
        "body": "\"quagmire_potato\"",
        "description": " ※prefab ID: quagmire_potato\n ※Name: Potato\n ※prefab Version: DST-632551 "
    },
    "prefab:table_winters_feast(ID Complete)": {
        "prefix": "p+table_winters_feast",
        "body": "\"table_winters_feast\"",
        "description": " ※prefab ID: table_winters_feast\n ※Name: Winter's Feast Table\n ※Recipe: \n\t+ 1 x: Boards/boards\n\t+ 1 x: Beefalo Wool/beefalowool\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:table_winters_feast(ReverseSearch)": {
        "prefix": "p+Winter's Feast Table",
        "body": "\"table_winters_feast\"",
        "description": " ※prefab ID: table_winters_feast\n ※Name: Winter's Feast Table\n ※Recipe: \n\t+ 1 x: Boards/boards\n\t+ 1 x: Beefalo Wool/beefalowool\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:tophat_magician(ID Complete)": {
        "prefix": "p+tophat_magician",
        "body": "\"tophat_magician\"",
        "description": " ※prefab ID: tophat_magician\n ※Name: Magician's Top Hat\n ※Recipe: \n\t+ 1 x: Top Hat/tophat\n\t+ 2 x: Nightmare Fuel/nightmarefuel\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:tophat_magician(ReverseSearch)": {
        "prefix": "p+Magician's Top Hat",
        "body": "\"tophat_magician\"",
        "description": " ※prefab ID: tophat_magician\n ※Name: Magician's Top Hat\n ※Recipe: \n\t+ 1 x: Top Hat/tophat\n\t+ 2 x: Nightmare Fuel/nightmarefuel\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:compass(ID Complete)": {
        "prefix": "p+compass",
        "body": "\"compass\"",
        "description": " ※prefab ID: compass\n ※Name: Compass\n ※Recipe: \n\t+ 1 x: Gold Nugget/goldnugget\n\t+ 1 x: Flint/flint\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:compass(ReverseSearch)": {
        "prefix": "p+Compass",
        "body": "\"compass\"",
        "description": " ※prefab ID: compass\n ※Name: Compass\n ※Recipe: \n\t+ 1 x: Gold Nugget/goldnugget\n\t+ 1 x: Flint/flint\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:minotaurhorn(ID Complete)": {
        "prefix": "p+minotaurhorn",
        "body": "\"minotaurhorn\"",
        "description": " ※prefab ID: minotaurhorn\n ※Name: Guardian's Horn\n ※prefab Version: DST-632551 "
    },
    "prefab:minotaurhorn(ReverseSearch)": {
        "prefix": "p+Guardian's Horn",
        "body": "\"minotaurhorn\"",
        "description": " ※prefab ID: minotaurhorn\n ※Name: Guardian's Horn\n ※prefab Version: DST-632551 "
    },
    "prefab:hunger(ID Complete)": {
        "prefix": "p+hunger",
        "body": "\"hunger\"",
        "description": " ※prefab ID: hunger\n ※Name: Starvation\n ※prefab Version: DST-632551 "
    },
    "prefab:hunger(ReverseSearch)": {
        "prefix": "p+Starvation",
        "body": "\"hunger\"",
        "description": " ※prefab ID: hunger\n ※Name: Starvation\n ※prefab Version: DST-632551 "
    },
    "prefab:beeswax(ID Complete)": {
        "prefix": "p+beeswax",
        "body": "\"beeswax\"",
        "description": " ※prefab ID: beeswax\n ※Name: Beeswax\n ※Recipe: \n\t+ 1 x: Honeycomb/honeycomb\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:beeswax(ReverseSearch)": {
        "prefix": "p+Beeswax",
        "body": "\"beeswax\"",
        "description": " ※prefab ID: beeswax\n ※Name: Beeswax\n ※Recipe: \n\t+ 1 x: Honeycomb/honeycomb\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:atrium_key(ID Complete)": {
        "prefix": "p+atrium_key",
        "body": "\"atrium_key\"",
        "description": " ※prefab ID: atrium_key\n ※Name: Ancient Key\n ※prefab Version: DST-632551 "
    },
    "prefab:atrium_key(ReverseSearch)": {
        "prefix": "p+Ancient Key",
        "body": "\"atrium_key\"",
        "description": " ※prefab ID: atrium_key\n ※Name: Ancient Key\n ※prefab Version: DST-632551 "
    },
    "prefab:butterfly_sketch(ID Complete)": {
        "prefix": "p+butterfly_sketch",
        "body": "\"butterfly_sketch\"",
        "description": " ※prefab ID: butterfly_sketch\n ※Name: Moon Moth Sketch\n ※prefab Version: DST-632551 "
    },
    "prefab:butterfly_sketch(ReverseSearch)": {
        "prefix": "p+Moon Moth Sketch",
        "body": "\"butterfly_sketch\"",
        "description": " ※prefab ID: butterfly_sketch\n ※Name: Moon Moth Sketch\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalgame_feedchicks_kit(ID Complete)": {
        "prefix": "p+carnivalgame_feedchicks_kit",
        "body": "\"carnivalgame_feedchicks_kit\"",
        "description": " ※prefab ID: carnivalgame_feedchicks_kit\n ※Name: Hubbub for Grub Kit\n ※Recipe: \n\t+ 1 x: Gold Nugget/goldnugget\n\t+ 3 x: Seeds/seeds\n ※Required Tech: \n\t+ LV.3 : Cawnival Creation/CARNIVAL_HOSTSHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalgame_feedchicks_kit(ReverseSearch)": {
        "prefix": "p+Hubbub for Grub Kit",
        "body": "\"carnivalgame_feedchicks_kit\"",
        "description": " ※prefab ID: carnivalgame_feedchicks_kit\n ※Name: Hubbub for Grub Kit\n ※Recipe: \n\t+ 1 x: Gold Nugget/goldnugget\n\t+ 3 x: Seeds/seeds\n ※Required Tech: \n\t+ LV.3 : Cawnival Creation/CARNIVAL_HOSTSHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:livingtree_sapling(ID Complete)": {
        "prefix": "p+livingtree_sapling",
        "body": "\"livingtree_sapling\"",
        "description": " ※prefab ID: livingtree_sapling\n ※Name: Totally Normal Sapling\n ※prefab Version: DST-632551 "
    },
    "prefab:livingtree_sapling(ReverseSearch)": {
        "prefix": "p+Totally Normal Sapling",
        "body": "\"livingtree_sapling\"",
        "description": " ※prefab ID: livingtree_sapling\n ※Name: Totally Normal Sapling\n ※prefab Version: DST-632551 "
    },
    "prefab:pigskin(ID Complete)": {
        "prefix": "p+pigskin",
        "body": "\"pigskin\"",
        "description": " ※prefab ID: pigskin\n ※Name: Pig Skin\n ※prefab Version: DST-632551 "
    },
    "prefab:pigskin(ReverseSearch)": {
        "prefix": "p+Pig Skin",
        "body": "\"pigskin\"",
        "description": " ※prefab ID: pigskin\n ※Name: Pig Skin\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_sinkhole(ID Complete)": {
        "prefix": "p+turf_sinkhole",
        "body": "\"turf_sinkhole\"",
        "description": " ※prefab ID: turf_sinkhole\n ※Name: Slimy Turf\n ※Recipe: \n\t+ 1 x: Cut Grass/cutgrass\n\t+ 1 x: Foliage/foliage\n ※Required Tech: \n\t+ LV.2 : Landscaping/TURFCRAFTING\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_sinkhole(ReverseSearch)": {
        "prefix": "p+Slimy Turf",
        "body": "\"turf_sinkhole\"",
        "description": " ※prefab ID: turf_sinkhole\n ※Name: Slimy Turf\n ※Recipe: \n\t+ 1 x: Cut Grass/cutgrass\n\t+ 1 x: Foliage/foliage\n ※Required Tech: \n\t+ LV.2 : Landscaping/TURFCRAFTING\n ※prefab Version: DST-632551 "
    },
    "prefab:critter_kitten_builder(ID Complete)": {
        "prefix": "p+critter_kitten_builder",
        "body": "\"critter_kitten_builder\"",
        "description": " ※prefab ID: critter_kitten_builder\n ※Name: Kittykit\n ※Recipe: \n\t+ 1 x: Cat Tail/coontail\n\t+ 1 x: Fishsticks/fishsticks\n ※Required Tech: \n\t+ LV.1 : Critters/ORPHANAGE\n ※prefab Version: DST-632551 "
    },
    "prefab:critter_kitten_builder(ReverseSearch)": {
        "prefix": "p+Kittykit",
        "body": "\"critter_kitten_builder\"",
        "description": " ※prefab ID: critter_kitten_builder\n ※Name: Kittykit\n ※Recipe: \n\t+ 1 x: Cat Tail/coontail\n\t+ 1 x: Fishsticks/fishsticks\n ※Required Tech: \n\t+ LV.1 : Critters/ORPHANAGE\n ※prefab Version: DST-632551 "
    },
    "prefab:crumbs(ID Complete)": {
        "prefix": "p+crumbs",
        "body": "\"crumbs\"",
        "description": " ※prefab ID: crumbs\n ※Name: Cookie Crumbles\n ※prefab Version: DST-632551 "
    },
    "prefab:crumbs(ReverseSearch)": {
        "prefix": "p+Cookie Crumbles",
        "body": "\"crumbs\"",
        "description": " ※prefab ID: crumbs\n ※Name: Cookie Crumbles\n ※prefab Version: DST-632551 "
    },
    "prefab:book_brimstone(ID Complete)": {
        "prefix": "p+book_brimstone",
        "body": "\"book_brimstone\"",
        "description": " ※prefab ID: book_brimstone\n ※Name: The End is Nigh!\n ※Recipe: \n\t+ 2 x: Papyrus/papyrus\n\t+ 1 x: Red Gem/redgem\n ※Required Tech: \n\t+ LV.3 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:book_brimstone(ReverseSearch)": {
        "prefix": "p+The End is Nigh!",
        "body": "\"book_brimstone\"",
        "description": " ※prefab ID: book_brimstone\n ※Name: The End is Nigh!\n ※Recipe: \n\t+ 2 x: Papyrus/papyrus\n\t+ 1 x: Red Gem/redgem\n ※Required Tech: \n\t+ LV.3 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_rubble_chimney2(ID Complete)": {
        "prefix": "p+quagmire_rubble_chimney2",
        "body": "\"quagmire_rubble_chimney2\"",
        "description": " ※prefab ID: quagmire_rubble_chimney2\n ※Name: Dilapidated Chimney\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_rubble_chimney2(ReverseSearch)": {
        "prefix": "p+Dilapidated Chimney",
        "body": "\"quagmire_rubble_chimney2\"",
        "description": " ※prefab ID: quagmire_rubble_chimney2\n ※Name: Dilapidated Chimney\n ※prefab Version: DST-632551 "
    },
    "prefab:spider_warrior(ID Complete)": {
        "prefix": "p+spider_warrior",
        "body": "\"spider_warrior\"",
        "description": " ※prefab ID: spider_warrior\n ※Name: Spider Warrior\n ※prefab Version: DST-632551 "
    },
    "prefab:spider_warrior(ReverseSearch)": {
        "prefix": "p+Spider Warrior",
        "body": "\"spider_warrior\"",
        "description": " ※prefab ID: spider_warrior\n ※Name: Spider Warrior\n ※prefab Version: DST-632551 "
    },
    "prefab:yotc_carrat_race_start(ID Complete)": {
        "prefix": "p+yotc_carrat_race_start",
        "body": "\"yotc_carrat_race_start\"",
        "description": " ※prefab ID: yotc_carrat_race_start\n ※Name: Starting Point\n ※Recipe: \n\t+ 1 x: Gold Nugget/goldnugget\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:yotc_carrat_race_start(ReverseSearch)": {
        "prefix": "p+Starting Point",
        "body": "\"yotc_carrat_race_start\"",
        "description": " ※prefab ID: yotc_carrat_race_start\n ※Name: Starting Point\n ※Recipe: \n\t+ 1 x: Gold Nugget/goldnugget\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_021(ID Complete)": {
        "prefix": "p+quagmire_food_021",
        "body": "\"quagmire_food_021\"",
        "description": " ※prefab ID: quagmire_food_021\n ※Name: Fist Full of Jam\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_021(ReverseSearch)": {
        "prefix": "p+Fist Full of Jam",
        "body": "\"quagmire_food_021\"",
        "description": " ※prefab ID: quagmire_food_021\n ※Name: Fist Full of Jam\n ※prefab Version: DST-632551 "
    },
    "prefab:wagstaff_tool_5(ID Complete)": {
        "prefix": "p+wagstaff_tool_5",
        "body": "\"wagstaff_tool_5\"",
        "description": " ※prefab ID: wagstaff_tool_5\n ※Name: Calibrated Perceiver\n ※prefab Version: DST-632551 "
    },
    "prefab:wagstaff_tool_5(ReverseSearch)": {
        "prefix": "p+Calibrated Perceiver",
        "body": "\"wagstaff_tool_5\"",
        "description": " ※prefab ID: wagstaff_tool_5\n ※Name: Calibrated Perceiver\n ※prefab Version: DST-632551 "
    },
    "prefab:lavae_tooth(ID Complete)": {
        "prefix": "p+lavae_tooth",
        "body": "\"lavae_tooth\"",
        "description": " ※prefab ID: lavae_tooth\n ※Name: Lavae Tooth\n ※prefab Version: DST-632551 "
    },
    "prefab:lavae_tooth(ReverseSearch)": {
        "prefix": "p+Lavae Tooth",
        "body": "\"lavae_tooth\"",
        "description": " ※prefab ID: lavae_tooth\n ※Name: Lavae Tooth\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_burnt(ID Complete)": {
        "prefix": "p+quagmire_food_burnt",
        "body": "\"quagmire_food_burnt\"",
        "description": " ※prefab ID: quagmire_food_burnt\n ※Name: Burnt Food\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_burnt(ReverseSearch)": {
        "prefix": "p+Burnt Food",
        "body": "\"quagmire_food_burnt\"",
        "description": " ※prefab ID: quagmire_food_burnt\n ※Name: Burnt Food\n ※prefab Version: DST-632551 "
    },
    "prefab:collapsedchest(ID Complete)": {
        "prefix": "p+collapsedchest",
        "body": "\"collapsedchest\"",
        "description": " ※prefab ID: collapsedchest\n ※Name: Broken-down Chest\n ※prefab Version: DST-632551 "
    },
    "prefab:collapsedchest(ReverseSearch)": {
        "prefix": "p+Broken-down Chest",
        "body": "\"collapsedchest\"",
        "description": " ※prefab ID: collapsedchest\n ※Name: Broken-down Chest\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_medium_8(ID Complete)": {
        "prefix": "p+oceanfish_medium_8",
        "body": "\"oceanfish_medium_8\"",
        "description": " ※prefab ID: oceanfish_medium_8\n ※Name: Ice Bream\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_medium_8(ReverseSearch)": {
        "prefix": "p+Ice Bream",
        "body": "\"oceanfish_medium_8\"",
        "description": " ※prefab ID: oceanfish_medium_8\n ※Name: Ice Bream\n ※prefab Version: DST-632551 "
    },
    "prefab:wall_wood(ID Complete)": {
        "prefix": "p+wall_wood",
        "body": "\"wall_wood\"",
        "description": " ※prefab ID: wall_wood\n ※Name: Wood Wall\n ※prefab Version: DST-632551 "
    },
    "prefab:wall_wood(ReverseSearch)": {
        "prefix": "p+Wood Wall",
        "body": "\"wall_wood\"",
        "description": " ※prefab ID: wall_wood\n ※Name: Wood Wall\n ※prefab Version: DST-632551 "
    },
    "prefab:minisign_item(ID Complete)": {
        "prefix": "p+minisign_item",
        "body": "\"minisign_item\"",
        "description": " ※prefab ID: minisign_item\n ※Name: Mini Sign\n ※Recipe: \n\t+ 1 x: Boards/boards\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:minisign_item(ReverseSearch)": {
        "prefix": "p+Mini Sign",
        "body": "\"minisign_item\"",
        "description": " ※prefab ID: minisign_item\n ※Name: Mini Sign\n ※Recipe: \n\t+ 1 x: Boards/boards\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:rock_light(ID Complete)": {
        "prefix": "p+rock_light",
        "body": "\"rock_light\"",
        "description": " ※prefab ID: rock_light\n ※Name: Lava Pit\n ※prefab Version: DST-632551 "
    },
    "prefab:rock_light(ReverseSearch)": {
        "prefix": "p+Lava Pit",
        "body": "\"rock_light\"",
        "description": " ※prefab ID: rock_light\n ※Name: Lava Pit\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_024(ID Complete)": {
        "prefix": "p+quagmire_food_024",
        "body": "\"quagmire_food_024\"",
        "description": " ※prefab ID: quagmire_food_024\n ※Name: Garlic Mashed Potatoes\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_024(ReverseSearch)": {
        "prefix": "p+Garlic Mashed Potatoes",
        "body": "\"quagmire_food_024\"",
        "description": " ※prefab ID: quagmire_food_024\n ※Name: Garlic Mashed Potatoes\n ※prefab Version: DST-632551 "
    },
    "prefab:saddlehorn(ID Complete)": {
        "prefix": "p+saddlehorn",
        "body": "\"saddlehorn\"",
        "description": " ※prefab ID: saddlehorn\n ※Name: Saddlehorn\n ※Recipe: \n\t+ 2 x: Twigs/twigs\n\t+ 2 x: Bone Shards/boneshard\n\t+ 1 x: Jet Feather/feather_crow\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:saddlehorn(ReverseSearch)": {
        "prefix": "p+Saddlehorn",
        "body": "\"saddlehorn\"",
        "description": " ※prefab ID: saddlehorn\n ※Name: Saddlehorn\n ※Recipe: \n\t+ 2 x: Twigs/twigs\n\t+ 2 x: Bone Shards/boneshard\n\t+ 1 x: Jet Feather/feather_crow\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:pocket_scale(ID Complete)": {
        "prefix": "p+pocket_scale",
        "body": "\"pocket_scale\"",
        "description": " ※prefab ID: pocket_scale\n ※Name: Pocket Scale\n ※Recipe: \n\t+ 1 x: Log/log\n\t+ 1 x: Cut Stone/cutstone\n\t+ 1 x: Gold Nugget/goldnugget\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:pocket_scale(ReverseSearch)": {
        "prefix": "p+Pocket Scale",
        "body": "\"pocket_scale\"",
        "description": " ※prefab ID: pocket_scale\n ※Name: Pocket Scale\n ※Recipe: \n\t+ 1 x: Log/log\n\t+ 1 x: Cut Stone/cutstone\n\t+ 1 x: Gold Nugget/goldnugget\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:otterden_dead(ID Complete)": {
        "prefix": "p+otterden_dead",
        "body": "\"otterden_dead\"",
        "description": " ※prefab ID: otterden_dead\n ※Name: Demolished Marotter Den\n ※prefab Version: DST-632551 "
    },
    "prefab:otterden_dead(ReverseSearch)": {
        "prefix": "p+Demolished Marotter Den",
        "body": "\"otterden_dead\"",
        "description": " ※prefab ID: otterden_dead\n ※Name: Demolished Marotter Den\n ※prefab Version: DST-632551 "
    },
    "prefab:lunarfrog(ID Complete)": {
        "prefix": "p+lunarfrog",
        "body": "\"lunarfrog\"",
        "description": " ※prefab ID: lunarfrog\n ※Name: Bright-Eyed Frog\n ※prefab Version: DST-632551 "
    },
    "prefab:lunarfrog(ReverseSearch)": {
        "prefix": "p+Bright-Eyed Frog",
        "body": "\"lunarfrog\"",
        "description": " ※prefab ID: lunarfrog\n ※Name: Bright-Eyed Frog\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_8(ID Complete)": {
        "prefix": "p+trinket_8",
        "body": "\"trinket_8\"",
        "description": " ※prefab ID: trinket_8\n ※Name: Hardened Rubber Bung\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_8(ReverseSearch)": {
        "prefix": "p+Hardened Rubber Bung",
        "body": "\"trinket_8\"",
        "description": " ※prefab ID: trinket_8\n ※Name: Hardened Rubber Bung\n ※prefab Version: DST-632551 "
    },
    "prefab:lucy(ID Complete)": {
        "prefix": "p+lucy",
        "body": "\"lucy\"",
        "description": " ※prefab ID: lucy\n ※Name: Lucy the Axe\n ※prefab Version: DST-632551 "
    },
    "prefab:lucy(ReverseSearch)": {
        "prefix": "p+Lucy the Axe",
        "body": "\"lucy\"",
        "description": " ※prefab ID: lucy\n ※Name: Lucy the Axe\n ※prefab Version: DST-632551 "
    },
    "prefab:farm_plant_garlic(ID Complete)": {
        "prefix": "p+farm_plant_garlic",
        "body": "\"farm_plant_garlic\"",
        "description": " ※prefab ID: farm_plant_garlic\n ※Name: Garlic Plant\n ※prefab Version: DST-632551 "
    },
    "prefab:farm_plant_garlic(ReverseSearch)": {
        "prefix": "p+Garlic Plant",
        "body": "\"farm_plant_garlic\"",
        "description": " ※prefab ID: farm_plant_garlic\n ※Name: Garlic Plant\n ※prefab Version: DST-632551 "
    },
    "prefab:sweatervest(ID Complete)": {
        "prefix": "p+sweatervest",
        "body": "\"sweatervest\"",
        "description": " ※prefab ID: sweatervest\n ※Name: Dapper Vest\n ※Recipe: \n\t+ 8 x: Hound's Tooth/houndstooth\n\t+ 6 x: Silk/silk\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:sweatervest(ReverseSearch)": {
        "prefix": "p+Dapper Vest",
        "body": "\"sweatervest\"",
        "description": " ※prefab ID: sweatervest\n ※Name: Dapper Vest\n ※Recipe: \n\t+ 8 x: Hound's Tooth/houndstooth\n\t+ 6 x: Silk/silk\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:toadstool(ID Complete)": {
        "prefix": "p+toadstool",
        "body": "\"toadstool\"",
        "description": " ※prefab ID: toadstool\n ※Name: Toadstool\n ※prefab Version: DST-632551 "
    },
    "prefab:toadstool(ReverseSearch)": {
        "prefix": "p+Toadstool",
        "body": "\"toadstool\"",
        "description": " ※prefab ID: toadstool\n ※Name: Toadstool\n ※prefab Version: DST-632551 "
    },
    "prefab:bedroll_furry(ID Complete)": {
        "prefix": "p+bedroll_furry",
        "body": "\"bedroll_furry\"",
        "description": " ※prefab ID: bedroll_furry\n ※Name: Fur Roll\n ※Recipe: \n\t+ 1 x: Straw Roll/bedroll_straw\n\t+ 2 x: Bunny Puff/manrabbit_tail\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:bedroll_furry(ReverseSearch)": {
        "prefix": "p+Fur Roll",
        "body": "\"bedroll_furry\"",
        "description": " ※prefab ID: bedroll_furry\n ※Name: Fur Roll\n ※Recipe: \n\t+ 1 x: Straw Roll/bedroll_straw\n\t+ 2 x: Bunny Puff/manrabbit_tail\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:kitcoon_moon(ID Complete)": {
        "prefix": "p+kitcoon_moon",
        "body": "\"kitcoon_moon\"",
        "description": " ※prefab ID: kitcoon_moon\n ※Name: Kitcoon\n ※prefab Version: DST-632551 "
    },
    "prefab:kitcoon_moon(ReverseSearch)": {
        "prefix": "p+Kitcoon",
        "body": "\"kitcoon_moon\"",
        "description": " ※prefab ID: kitcoon_moon\n ※Name: Kitcoon\n ※prefab Version: DST-632551 "
    },
    "prefab:durian_oversized(ID Complete)": {
        "prefix": "p+durian_oversized",
        "body": "\"durian_oversized\"",
        "description": " ※prefab ID: durian_oversized\n ※Name: Giant Durian\n ※prefab Version: DST-632551 "
    },
    "prefab:durian_oversized(ReverseSearch)": {
        "prefix": "p+Giant Durian",
        "body": "\"durian_oversized\"",
        "description": " ※prefab ID: durian_oversized\n ※Name: Giant Durian\n ※prefab Version: DST-632551 "
    },
    "prefab:mosquitomusk(ID Complete)": {
        "prefix": "p+mosquitomusk",
        "body": "\"mosquitomusk\"",
        "description": " ※prefab ID: mosquitomusk\n ※Name: Lil' Itchy\n ※Recipe: \n\t+ 1 x: Mosquito Sack/mosquitosack\n\t+ 1 x: Beefalo Wool/beefalowool\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:mosquitomusk(ReverseSearch)": {
        "prefix": "p+Lil' Itchy",
        "body": "\"mosquitomusk\"",
        "description": " ※prefab ID: mosquitomusk\n ※Name: Lil' Itchy\n ※Recipe: \n\t+ 1 x: Mosquito Sack/mosquitosack\n\t+ 1 x: Beefalo Wool/beefalowool\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:carnival_host(ID Complete)": {
        "prefix": "p+carnival_host",
        "body": "\"carnival_host\"",
        "description": " ※prefab ID: carnival_host\n ※Name: Corvus Goodfeather\n ※prefab Version: DST-632551 "
    },
    "prefab:carnival_host(ReverseSearch)": {
        "prefix": "p+Corvus Goodfeather",
        "body": "\"carnival_host\"",
        "description": " ※prefab ID: carnival_host\n ※Name: Corvus Goodfeather\n ※prefab Version: DST-632551 "
    },
    "prefab:cattoy_mouse(ID Complete)": {
        "prefix": "p+cattoy_mouse",
        "body": "\"cattoy_mouse\"",
        "description": " ※prefab ID: cattoy_mouse\n ※Name: Wind-up Mouse Toy\n ※Recipe: \n\t+ 6 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /CATCOONOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:cattoy_mouse(ReverseSearch)": {
        "prefix": "p+Wind-up Mouse Toy",
        "body": "\"cattoy_mouse\"",
        "description": " ※prefab ID: cattoy_mouse\n ※Name: Wind-up Mouse Toy\n ※Recipe: \n\t+ 6 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /CATCOONOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_garlic(ID Complete)": {
        "prefix": "p+quagmire_garlic",
        "body": "\"quagmire_garlic\"",
        "description": " ※prefab ID: quagmire_garlic\n ※Name: Garlic\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_garlic(ReverseSearch)": {
        "prefix": "p+Garlic",
        "body": "\"quagmire_garlic\"",
        "description": " ※prefab ID: quagmire_garlic\n ※Name: Garlic\n ※prefab Version: DST-632551 "
    },
    "prefab:wx78module_maxsanity1(ID Complete)": {
        "prefix": "p+wx78module_maxsanity1",
        "body": "\"wx78module_maxsanity1\"",
        "description": " ※prefab ID: wx78module_maxsanity1\n ※Name: Processing Circuit\n ※Recipe: \n\t+ 1 x: Bio Data/scandata\n\t+ 1 x: Petals/petals\n ※Required Tech: \n\t+ LV.1 : Circuitry/ROBOTMODULECRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:wx78module_maxsanity1(ReverseSearch)": {
        "prefix": "p+Processing Circuit",
        "body": "\"wx78module_maxsanity1\"",
        "description": " ※prefab ID: wx78module_maxsanity1\n ※Name: Processing Circuit\n ※Recipe: \n\t+ 1 x: Bio Data/scandata\n\t+ 1 x: Petals/petals\n ※Required Tech: \n\t+ LV.1 : Circuitry/ROBOTMODULECRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:unagi(ID Complete)": {
        "prefix": "p+unagi",
        "body": "\"unagi\"",
        "description": " ※prefab ID: unagi\n ※Name: Unagi\n ※prefab Version: DST-632551 "
    },
    "prefab:unagi(ReverseSearch)": {
        "prefix": "p+Unagi",
        "body": "\"unagi\"",
        "description": " ※prefab ID: unagi\n ※Name: Unagi\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_mud(ID Complete)": {
        "prefix": "p+turf_mud",
        "body": "\"turf_mud\"",
        "description": " ※prefab ID: turf_mud\n ※Name: Mud Turf\n ※Recipe: \n\t+ 1 x: Rocks/rocks\n\t+ 1 x: Ice/ice\n ※Required Tech: \n\t+ LV.2 : Landscaping/TURFCRAFTING\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_mud(ReverseSearch)": {
        "prefix": "p+Mud Turf",
        "body": "\"turf_mud\"",
        "description": " ※prefab ID: turf_mud\n ※Name: Mud Turf\n ※Recipe: \n\t+ 1 x: Rocks/rocks\n\t+ 1 x: Ice/ice\n ※Required Tech: \n\t+ LV.2 : Landscaping/TURFCRAFTING\n ※prefab Version: DST-632551 "
    },
    "prefab:bird_egg(ID Complete)": {
        "prefix": "p+bird_egg",
        "body": "\"bird_egg\"",
        "description": " ※prefab ID: bird_egg\n ※Name: Egg\n ※prefab Version: DST-632551 "
    },
    "prefab:bird_egg(ReverseSearch)": {
        "prefix": "p+Egg",
        "body": "\"bird_egg\"",
        "description": " ※prefab ID: bird_egg\n ※Name: Egg\n ※prefab Version: DST-632551 "
    },
    "prefab:yotc_carrat_race_start_item(ID Complete)": {
        "prefix": "p+yotc_carrat_race_start_item",
        "body": "\"yotc_carrat_race_start_item\"",
        "description": " ※prefab ID: yotc_carrat_race_start_item\n ※Name: Starting Point Kit\n ※Recipe: \n\t+ 1 x: Gold Nugget/goldnugget\n ※Required Tech: \n\t+ LV.3 : /CARRATOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:yotc_carrat_race_start_item(ReverseSearch)": {
        "prefix": "p+Starting Point Kit",
        "body": "\"yotc_carrat_race_start_item\"",
        "description": " ※prefab ID: yotc_carrat_race_start_item\n ※Name: Starting Point Kit\n ※Recipe: \n\t+ 1 x: Gold Nugget/goldnugget\n ※Required Tech: \n\t+ LV.3 : /CARRATOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:winona_battery_low(ID Complete)": {
        "prefix": "p+winona_battery_low",
        "body": "\"winona_battery_low\"",
        "description": " ※prefab ID: winona_battery_low\n ※Name: Winona's Generator\n ※Recipe: \n\t+ 1 x: Trusty Tape/sewing_tape\n\t+ 2 x: Log/log\n\t+ 2 x: Nitre/nitre\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:winona_battery_low(ReverseSearch)": {
        "prefix": "p+Winona's Generator",
        "body": "\"winona_battery_low\"",
        "description": " ※prefab ID: winona_battery_low\n ※Name: Winona's Generator\n ※Recipe: \n\t+ 1 x: Trusty Tape/sewing_tape\n\t+ 2 x: Log/log\n\t+ 2 x: Nitre/nitre\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:cozy_bunnyman(ID Complete)": {
        "prefix": "p+cozy_bunnyman",
        "body": "\"cozy_bunnyman\"",
        "description": " ※prefab ID: cozy_bunnyman\n ※Name: Cozy Bunnyman\n ※prefab Version: DST-632551 "
    },
    "prefab:cozy_bunnyman(ReverseSearch)": {
        "prefix": "p+Cozy Bunnyman",
        "body": "\"cozy_bunnyman\"",
        "description": " ※prefab ID: cozy_bunnyman\n ※Name: Cozy Bunnyman\n ※prefab Version: DST-632551 "
    },
    "prefab:farm_hoe(ID Complete)": {
        "prefix": "p+farm_hoe",
        "body": "\"farm_hoe\"",
        "description": " ※prefab ID: farm_hoe\n ※Name: Garden Hoe\n ※Recipe: \n\t+ 2 x: Twigs/twigs\n\t+ 2 x: Flint/flint\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:farm_hoe(ReverseSearch)": {
        "prefix": "p+Garden Hoe",
        "body": "\"farm_hoe\"",
        "description": " ※prefab ID: farm_hoe\n ※Name: Garden Hoe\n ※Recipe: \n\t+ 2 x: Twigs/twigs\n\t+ 2 x: Flint/flint\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:smallmeat(ID Complete)": {
        "prefix": "p+smallmeat",
        "body": "\"smallmeat\"",
        "description": " ※prefab ID: smallmeat\n ※Name: Morsel\n ※prefab Version: DST-632551 "
    },
    "prefab:smallmeat(ReverseSearch)": {
        "prefix": "p+Morsel",
        "body": "\"smallmeat\"",
        "description": " ※prefab ID: smallmeat\n ※Name: Morsel\n ※prefab Version: DST-632551 "
    },
    "prefab:winter_treestand(ID Complete)": {
        "prefix": "p+winter_treestand",
        "body": "\"winter_treestand\"",
        "description": " ※prefab ID: winter_treestand\n ※Name: Festive Tree Planter\n ※Recipe: \n\t+ 2 x: Manure/poop\n\t+ 1 x: Boards/boards\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:winter_treestand(ReverseSearch)": {
        "prefix": "p+Festive Tree Planter",
        "body": "\"winter_treestand\"",
        "description": " ※prefab ID: winter_treestand\n ※Name: Festive Tree Planter\n ※Recipe: \n\t+ 2 x: Manure/poop\n\t+ 1 x: Boards/boards\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:unknown(ID Complete)": {
        "prefix": "p+unknown",
        "body": "\"unknown\"",
        "description": " ※prefab ID: unknown\n ※Name: Unknown\n ※prefab Version: DST-632551 "
    },
    "prefab:unknown(ReverseSearch)": {
        "prefix": "p+Unknown",
        "body": "\"unknown\"",
        "description": " ※prefab ID: unknown\n ※Name: Unknown\n ※prefab Version: DST-632551 "
    },
    "prefab:lunarplant_husk(ID Complete)": {
        "prefix": "p+lunarplant_husk",
        "body": "\"lunarplant_husk\"",
        "description": " ※prefab ID: lunarplant_husk\n ※Name: Brightshade Husk\n ※prefab Version: DST-632551 "
    },
    "prefab:lunarplant_husk(ReverseSearch)": {
        "prefix": "p+Brightshade Husk",
        "body": "\"lunarplant_husk\"",
        "description": " ※prefab ID: lunarplant_husk\n ※Name: Brightshade Husk\n ※prefab Version: DST-632551 "
    },
    "prefab:asparagus_oversized(ID Complete)": {
        "prefix": "p+asparagus_oversized",
        "body": "\"asparagus_oversized\"",
        "description": " ※prefab ID: asparagus_oversized\n ※Name: Giant Asparagus\n ※prefab Version: DST-632551 "
    },
    "prefab:asparagus_oversized(ReverseSearch)": {
        "prefix": "p+Giant Asparagus",
        "body": "\"asparagus_oversized\"",
        "description": " ※prefab ID: asparagus_oversized\n ※Name: Giant Asparagus\n ※prefab Version: DST-632551 "
    },
    "prefab:wanda(ID Complete)": {
        "prefix": "p+wanda",
        "body": "\"wanda\"",
        "description": " ※prefab ID: wanda\n ※Name: Wanda\n ※prefab Version: DST-632551 "
    },
    "prefab:wanda(ReverseSearch)": {
        "prefix": "p+Wanda",
        "body": "\"wanda\"",
        "description": " ※prefab ID: wanda\n ※Name: Wanda\n ※prefab Version: DST-632551 "
    },
    "prefab:stone_table_round(ID Complete)": {
        "prefix": "p+stone_table_round",
        "body": "\"stone_table_round\"",
        "description": " ※prefab ID: stone_table_round\n ※Name: Stone Round Table\n ※Recipe: \n\t+ 3 x: Cut Stone/cutstone\n\t+ 2 x: Rope/rope\n ※Required Tech: \n\t+ LV.3 : Carpentry/CARPENTRY\n ※prefab Version: DST-632551 "
    },
    "prefab:stone_table_round(ReverseSearch)": {
        "prefix": "p+Stone Round Table",
        "body": "\"stone_table_round\"",
        "description": " ※prefab ID: stone_table_round\n ※Name: Stone Round Table\n ※Recipe: \n\t+ 3 x: Cut Stone/cutstone\n\t+ 2 x: Rope/rope\n ※Required Tech: \n\t+ LV.3 : Carpentry/CARPENTRY\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_beefalo_builder(ID Complete)": {
        "prefix": "p+chesspiece_beefalo_builder",
        "body": "\"chesspiece_beefalo_builder\"",
        "description": " ※prefab ID: chesspiece_beefalo_builder\n ※Name: Beefalo Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_beefalo_builder(ReverseSearch)": {
        "prefix": "p+Beefalo Figure",
        "body": "\"chesspiece_beefalo_builder\"",
        "description": " ※prefab ID: chesspiece_beefalo_builder\n ※Name: Beefalo Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:icebox(ID Complete)": {
        "prefix": "p+icebox",
        "body": "\"icebox\"",
        "description": " ※prefab ID: icebox\n ※Name: Ice Box\n ※Recipe: \n\t+ 2 x: Gold Nugget/goldnugget\n\t+ 1 x: Gears/gears\n\t+ 1 x: Cut Stone/cutstone\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:icebox(ReverseSearch)": {
        "prefix": "p+Ice Box",
        "body": "\"icebox\"",
        "description": " ※prefab ID: icebox\n ※Name: Ice Box\n ※Recipe: \n\t+ 2 x: Gold Nugget/goldnugget\n\t+ 1 x: Gears/gears\n\t+ 1 x: Cut Stone/cutstone\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:statueglommer(ID Complete)": {
        "prefix": "p+statueglommer",
        "body": "\"statueglommer\"",
        "description": " ※prefab ID: statueglommer\n ※Name: Glommer's Statue\n ※prefab Version: DST-632551 "
    },
    "prefab:statueglommer(ReverseSearch)": {
        "prefix": "p+Glommer's Statue",
        "body": "\"statueglommer\"",
        "description": " ※prefab ID: statueglommer\n ※Name: Glommer's Statue\n ※prefab Version: DST-632551 "
    },
    "prefab:yotd_dragonshrine(ID Complete)": {
        "prefix": "p+yotd_dragonshrine",
        "body": "\"yotd_dragonshrine\"",
        "description": " ※prefab ID: yotd_dragonshrine\n ※Name: Dragonfly Shrine\n ※Recipe: \n\t+ 4 x: Gold Nugget/goldnugget\n\t+ 2 x: Boards/boards\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:yotd_dragonshrine(ReverseSearch)": {
        "prefix": "p+Dragonfly Shrine",
        "body": "\"yotd_dragonshrine\"",
        "description": " ※prefab ID: yotd_dragonshrine\n ※Name: Dragonfly Shrine\n ※Recipe: \n\t+ 4 x: Gold Nugget/goldnugget\n\t+ 2 x: Boards/boards\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_altar_queen(ID Complete)": {
        "prefix": "p+quagmire_altar_queen",
        "body": "\"quagmire_altar_queen\"",
        "description": " ※prefab ID: quagmire_altar_queen\n ※Name: Queen Beast\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_altar_queen(ReverseSearch)": {
        "prefix": "p+Queen Beast",
        "body": "\"quagmire_altar_queen\"",
        "description": " ※prefab ID: quagmire_altar_queen\n ※Name: Queen Beast\n ※prefab Version: DST-632551 "
    },
    "prefab:bodypillow_beefalowool(ID Complete)": {
        "prefix": "p+bodypillow_beefalowool",
        "body": "\"bodypillow_beefalowool\"",
        "description": " ※prefab ID: bodypillow_beefalowool\n ※Name: Beefalo Pillow Armor\n ※Recipe: \n\t+ 4 x: Lucky Gold Nugget/lucky_goldnugget\n\t+ 2 x: Silk/silk\n\t+ 3 x: Beefalo Wool/beefalowool\n ※Required Tech: \n\t+ LV.3 : /RABBITOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:bodypillow_beefalowool(ReverseSearch)": {
        "prefix": "p+Beefalo Pillow Armor",
        "body": "\"bodypillow_beefalowool\"",
        "description": " ※prefab ID: bodypillow_beefalowool\n ※Name: Beefalo Pillow Armor\n ※Recipe: \n\t+ 4 x: Lucky Gold Nugget/lucky_goldnugget\n\t+ 2 x: Silk/silk\n\t+ 3 x: Beefalo Wool/beefalowool\n ※Required Tech: \n\t+ LV.3 : /RABBITOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:berrybush(ID Complete)": {
        "prefix": "p+berrybush",
        "body": "\"berrybush\"",
        "description": " ※prefab ID: berrybush\n ※Name: Berry Bush\n ※prefab Version: DST-632551 "
    },
    "prefab:berrybush(ReverseSearch)": {
        "prefix": "p+Berry Bush",
        "body": "\"berrybush\"",
        "description": " ※prefab ID: berrybush\n ※Name: Berry Bush\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_seeds_7(ID Complete)": {
        "prefix": "p+quagmire_seeds_7",
        "body": "\"quagmire_seeds_7\"",
        "description": " ※prefab ID: quagmire_seeds_7\n ※Name: Seed Pods\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_seeds_7(ReverseSearch)": {
        "prefix": "p+Seed Pods",
        "body": "\"quagmire_seeds_7\"",
        "description": " ※prefab ID: quagmire_seeds_7\n ※Name: Seed Pods\n ※prefab Version: DST-632551 "
    },
    "prefab:bandage(ID Complete)": {
        "prefix": "p+bandage",
        "body": "\"bandage\"",
        "description": " ※prefab ID: bandage\n ※Name: Honey Poultice\n ※Recipe: \n\t+ 1 x: Papyrus/papyrus\n\t+ 2 x: Honey/honey\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:bandage(ReverseSearch)": {
        "prefix": "p+Honey Poultice",
        "body": "\"bandage\"",
        "description": " ※prefab ID: bandage\n ※Name: Honey Poultice\n ※Recipe: \n\t+ 1 x: Papyrus/papyrus\n\t+ 2 x: Honey/honey\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_056(ID Complete)": {
        "prefix": "p+quagmire_food_056",
        "body": "\"quagmire_food_056\"",
        "description": " ※prefab ID: quagmire_food_056\n ※Name: Creamy Fish\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_056(ReverseSearch)": {
        "prefix": "p+Creamy Fish",
        "body": "\"quagmire_food_056\"",
        "description": " ※prefab ID: quagmire_food_056\n ※Name: Creamy Fish\n ※prefab Version: DST-632551 "
    },
    "prefab:winter_ornament_boss_hermithouse(ID Complete)": {
        "prefix": "p+winter_ornament_boss_hermithouse",
        "body": "\"winter_ornament_boss_hermithouse\"",
        "description": " ※prefab ID: winter_ornament_boss_hermithouse\n ※Name: Sentimental Adornment\n ※prefab Version: DST-632551 "
    },
    "prefab:winter_ornament_boss_hermithouse(ReverseSearch)": {
        "prefix": "p+Sentimental Adornment",
        "body": "\"winter_ornament_boss_hermithouse\"",
        "description": " ※prefab ID: winter_ornament_boss_hermithouse\n ※Name: Sentimental Adornment\n ※prefab Version: DST-632551 "
    },
    "prefab:cookiecutter(ID Complete)": {
        "prefix": "p+cookiecutter",
        "body": "\"cookiecutter\"",
        "description": " ※prefab ID: cookiecutter\n ※Name: Cookie Cutter\n ※prefab Version: DST-632551 "
    },
    "prefab:cookiecutter(ReverseSearch)": {
        "prefix": "p+Cookie Cutter",
        "body": "\"cookiecutter\"",
        "description": " ※prefab ID: cookiecutter\n ※Name: Cookie Cutter\n ※prefab Version: DST-632551 "
    },
    "prefab:chest_mimic(ID Complete)": {
        "prefix": "p+chest_mimic",
        "body": "\"chest_mimic\"",
        "description": " ※prefab ID: chest_mimic\n ※Name: Ornate Chest\n ※prefab Version: DST-632551 "
    },
    "prefab:chest_mimic(ReverseSearch)": {
        "prefix": "p+Ornate Chest",
        "body": "\"chest_mimic\"",
        "description": " ※prefab ID: chest_mimic\n ※Name: Ornate Chest\n ※prefab Version: DST-632551 "
    },
    "prefab:monkeyisland_portal(ID Complete)": {
        "prefix": "p+monkeyisland_portal",
        "body": "\"monkeyisland_portal\"",
        "description": " ※prefab ID: monkeyisland_portal\n ※Name: Unnatural Portal\n ※prefab Version: DST-632551 "
    },
    "prefab:monkeyisland_portal(ReverseSearch)": {
        "prefix": "p+Unnatural Portal",
        "body": "\"monkeyisland_portal\"",
        "description": " ※prefab ID: monkeyisland_portal\n ※Name: Unnatural Portal\n ※prefab Version: DST-632551 "
    },
    "prefab:walking_stick(ID Complete)": {
        "prefix": "p+walking_stick",
        "body": "\"walking_stick\"",
        "description": " ※prefab ID: walking_stick\n ※Name: Wooden Walking Stick\n ※Recipe: \n\t+ 0 x: Lucy the Axe/lucy\n\t+ 3 x: Log/log\n\t+ 1 x: Charcoal/charcoal\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:walking_stick(ReverseSearch)": {
        "prefix": "p+Wooden Walking Stick",
        "body": "\"walking_stick\"",
        "description": " ※prefab ID: walking_stick\n ※Name: Wooden Walking Stick\n ※Recipe: \n\t+ 0 x: Lucy the Axe/lucy\n\t+ 3 x: Log/log\n\t+ 1 x: Charcoal/charcoal\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:alterguardianhat(ID Complete)": {
        "prefix": "p+alterguardianhat",
        "body": "\"alterguardianhat\"",
        "description": " ※prefab ID: alterguardianhat\n ※Name: Enlightened Crown\n ※Recipe: \n\t+ 5 x: Enlightened Shard/alterguardianhatshard\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:alterguardianhat(ReverseSearch)": {
        "prefix": "p+Enlightened Crown",
        "body": "\"alterguardianhat\"",
        "description": " ※prefab ID: alterguardianhat\n ※Name: Enlightened Crown\n ※Recipe: \n\t+ 5 x: Enlightened Shard/alterguardianhatshard\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:oceanhorror(ID Complete)": {
        "prefix": "p+oceanhorror",
        "body": "\"oceanhorror\"",
        "description": " ※prefab ID: oceanhorror\n ※Name: Terrorclaw\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanhorror(ReverseSearch)": {
        "prefix": "p+Terrorclaw",
        "body": "\"oceanhorror\"",
        "description": " ※prefab ID: oceanhorror\n ※Name: Terrorclaw\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_crate_oven(ID Complete)": {
        "prefix": "p+quagmire_crate_oven",
        "body": "\"quagmire_crate_oven\"",
        "description": " ※prefab ID: quagmire_crate_oven\n ※Name: Oven Kit\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_crate_oven(ReverseSearch)": {
        "prefix": "p+Oven Kit",
        "body": "\"quagmire_crate_oven\"",
        "description": " ※prefab ID: quagmire_crate_oven\n ※Name: Oven Kit\n ※prefab Version: DST-632551 "
    },
    "prefab:nil(ID Complete)": {
        "prefix": "p+nil",
        "body": "\"nil\"",
        "description": " ※prefab ID: nil\n ※Name: Darkness\n ※prefab Version: DST-632551 "
    },
    "prefab:nil(ReverseSearch)": {
        "prefix": "p+Darkness",
        "body": "\"nil\"",
        "description": " ※prefab ID: nil\n ※Name: Darkness\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_merm(ID Complete)": {
        "prefix": "p+quagmire_merm",
        "body": "\"quagmire_merm\"",
        "description": " ※prefab ID: quagmire_merm\n ※Name: Bog Merm\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_merm(ReverseSearch)": {
        "prefix": "p+Bog Merm",
        "body": "\"quagmire_merm\"",
        "description": " ※prefab ID: quagmire_merm\n ※Name: Bog Merm\n ※prefab Version: DST-632551 "
    },
    "prefab:batwing_cooked(ID Complete)": {
        "prefix": "p+batwing_cooked",
        "body": "\"batwing_cooked\"",
        "description": " ※prefab ID: batwing_cooked\n ※Name: Cooked Batilisk Wing\n ※prefab Version: DST-632551 "
    },
    "prefab:batwing_cooked(ReverseSearch)": {
        "prefix": "p+Cooked Batilisk Wing",
        "body": "\"batwing_cooked\"",
        "description": " ※prefab ID: batwing_cooked\n ※Name: Cooked Batilisk Wing\n ※prefab Version: DST-632551 "
    },
    "prefab:wall_scrap_item(ID Complete)": {
        "prefix": "p+wall_scrap_item",
        "body": "\"wall_scrap_item\"",
        "description": " ※prefab ID: wall_scrap_item\n ※Name: Scrap Wall\n ※Recipe: \n\t+ 4 x: Scrap/wagpunk_bits\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:wall_scrap_item(ReverseSearch)": {
        "prefix": "p+Scrap Wall",
        "body": "\"wall_scrap_item\"",
        "description": " ※prefab ID: wall_scrap_item\n ※Name: Scrap Wall\n ※Recipe: \n\t+ 4 x: Scrap/wagpunk_bits\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:mandrake_active(ID Complete)": {
        "prefix": "p+mandrake_active",
        "body": "\"mandrake_active\"",
        "description": " ※prefab ID: mandrake_active\n ※Name: Mandrake\n ※prefab Version: DST-632551 "
    },
    "prefab:mandrake_active(ReverseSearch)": {
        "prefix": "p+Mandrake",
        "body": "\"mandrake_active\"",
        "description": " ※prefab ID: mandrake_active\n ※Name: Mandrake\n ※prefab Version: DST-632551 "
    },
    "prefab:roseglasseshat(ID Complete)": {
        "prefix": "p+roseglasseshat",
        "body": "\"roseglasseshat\"",
        "description": " ※prefab ID: roseglasseshat\n ※Name: Rose-Colored Glasses\n ※Recipe: \n\t+ 12 x: Petals/petals\n\t+ 3 x: Twigs/twigs\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:roseglasseshat(ReverseSearch)": {
        "prefix": "p+Rose-Colored Glasses",
        "body": "\"roseglasseshat\"",
        "description": " ※prefab ID: roseglasseshat\n ※Name: Rose-Colored Glasses\n ※Recipe: \n\t+ 12 x: Petals/petals\n\t+ 3 x: Twigs/twigs\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:winter_ornamentforge(ID Complete)": {
        "prefix": "p+winter_ornamentforge",
        "body": "\"winter_ornamentforge\"",
        "description": " ※prefab ID: winter_ornamentforge\n ※Name: Champion Adornment\n ※prefab Version: DST-632551 "
    },
    "prefab:winter_ornamentforge(ReverseSearch)": {
        "prefix": "p+Champion Adornment",
        "body": "\"winter_ornamentforge\"",
        "description": " ※prefab ID: winter_ornamentforge\n ※Name: Champion Adornment\n ※prefab Version: DST-632551 "
    },
    "prefab:soil_amender(ID Complete)": {
        "prefix": "p+soil_amender",
        "body": "\"soil_amender\"",
        "description": " ※prefab ID: soil_amender\n ※Name: Growth Formula Starter\n ※Recipe: \n\t+ 1 x: Empty Bottle/messagebottleempty\n\t+ 1 x: Kelp Fronds/kelp\n\t+ 1 x: Ashes/ash\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:soil_amender(ReverseSearch)": {
        "prefix": "p+Growth Formula Starter",
        "body": "\"soil_amender\"",
        "description": " ※prefab ID: soil_amender\n ※Name: Growth Formula Starter\n ※Recipe: \n\t+ 1 x: Empty Bottle/messagebottleempty\n\t+ 1 x: Kelp Fronds/kelp\n\t+ 1 x: Ashes/ash\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_4(ID Complete)": {
        "prefix": "p+trinket_4",
        "body": "\"trinket_4\"",
        "description": " ※prefab ID: trinket_4\n ※Name: Gnome\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_4(ReverseSearch)": {
        "prefix": "p+Gnome",
        "body": "\"trinket_4\"",
        "description": " ※prefab ID: trinket_4\n ※Name: Gnome\n ※prefab Version: DST-632551 "
    },
    "prefab:boat_cannon_kit(ID Complete)": {
        "prefix": "p+boat_cannon_kit",
        "body": "\"boat_cannon_kit\"",
        "description": " ※prefab ID: boat_cannon_kit\n ※Name: Cannon Kit\n ※Recipe: \n\t+ 4 x: Palmcone Scale/palmcone_scale\n\t+ 1 x: Rope/rope\n\t+ 4 x: Charcoal/charcoal\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:boat_cannon_kit(ReverseSearch)": {
        "prefix": "p+Cannon Kit",
        "body": "\"boat_cannon_kit\"",
        "description": " ※prefab ID: boat_cannon_kit\n ※Name: Cannon Kit\n ※Recipe: \n\t+ 4 x: Palmcone Scale/palmcone_scale\n\t+ 1 x: Rope/rope\n\t+ 4 x: Charcoal/charcoal\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:cutless(ID Complete)": {
        "prefix": "p+cutless",
        "body": "\"cutless\"",
        "description": " ※prefab ID: cutless\n ※Name: Cutless\n ※prefab Version: DST-632551 "
    },
    "prefab:cutless(ReverseSearch)": {
        "prefix": "p+Cutless",
        "body": "\"cutless\"",
        "description": " ※prefab ID: cutless\n ※Name: Cutless\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_onion_cooked(ID Complete)": {
        "prefix": "p+quagmire_onion_cooked",
        "body": "\"quagmire_onion_cooked\"",
        "description": " ※prefab ID: quagmire_onion_cooked\n ※Name: Roast Onion\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_onion_cooked(ReverseSearch)": {
        "prefix": "p+Roast Onion",
        "body": "\"quagmire_onion_cooked\"",
        "description": " ※prefab ID: quagmire_onion_cooked\n ※Name: Roast Onion\n ※prefab Version: DST-632551 "
    },
    "prefab:blueprint_rare(ID Complete)": {
        "prefix": "p+blueprint_rare",
        "body": "\"blueprint_rare\"",
        "description": " ※prefab ID: blueprint_rare\n ※Name: {item} Blueprint\n ※prefab Version: DST-632551 "
    },
    "prefab:blueprint_rare(ReverseSearch)": {
        "prefix": "p+{item} Blueprint",
        "body": "\"blueprint_rare\"",
        "description": " ※prefab ID: blueprint_rare\n ※Name: {item} Blueprint\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanwhirlportal(ID Complete)": {
        "prefix": "p+oceanwhirlportal",
        "body": "\"oceanwhirlportal\"",
        "description": " ※prefab ID: oceanwhirlportal\n ※Name: Whirlportal\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanwhirlportal(ReverseSearch)": {
        "prefix": "p+Whirlportal",
        "body": "\"oceanwhirlportal\"",
        "description": " ※prefab ID: oceanwhirlportal\n ※Name: Whirlportal\n ※prefab Version: DST-632551 "
    },
    "prefab:asparagus_cooked(ID Complete)": {
        "prefix": "p+asparagus_cooked",
        "body": "\"asparagus_cooked\"",
        "description": " ※prefab ID: asparagus_cooked\n ※Name: Roasted Asparagus\n ※prefab Version: DST-632551 "
    },
    "prefab:asparagus_cooked(ReverseSearch)": {
        "prefix": "p+Roasted Asparagus",
        "body": "\"asparagus_cooked\"",
        "description": " ※prefab ID: asparagus_cooked\n ※Name: Roasted Asparagus\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_crabmeat_cooked(ID Complete)": {
        "prefix": "p+quagmire_crabmeat_cooked",
        "body": "\"quagmire_crabmeat_cooked\"",
        "description": " ※prefab ID: quagmire_crabmeat_cooked\n ※Name: Cooked Crab Meat\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_crabmeat_cooked(ReverseSearch)": {
        "prefix": "p+Cooked Crab Meat",
        "body": "\"quagmire_crabmeat_cooked\"",
        "description": " ※prefab ID: quagmire_crabmeat_cooked\n ※Name: Cooked Crab Meat\n ※prefab Version: DST-632551 "
    },
    "prefab:puffin(ID Complete)": {
        "prefix": "p+puffin",
        "body": "\"puffin\"",
        "description": " ※prefab ID: puffin\n ※Name: Puffin\n ※prefab Version: DST-632551 "
    },
    "prefab:puffin(ReverseSearch)": {
        "prefix": "p+Puffin",
        "body": "\"puffin\"",
        "description": " ※prefab ID: puffin\n ※Name: Puffin\n ※prefab Version: DST-632551 "
    },
    "prefab:pumpkin_seeds(ID Complete)": {
        "prefix": "p+pumpkin_seeds",
        "body": "\"pumpkin_seeds\"",
        "description": " ※prefab ID: pumpkin_seeds\n ※Name: Sharp Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:pumpkin_seeds(ReverseSearch)": {
        "prefix": "p+Sharp Seeds",
        "body": "\"pumpkin_seeds\"",
        "description": " ※prefab ID: pumpkin_seeds\n ※Name: Sharp Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:rottenegg(ID Complete)": {
        "prefix": "p+rottenegg",
        "body": "\"rottenegg\"",
        "description": " ※prefab ID: rottenegg\n ※Name: Rotten Egg\n ※prefab Version: DST-632551 "
    },
    "prefab:rottenegg(ReverseSearch)": {
        "prefix": "p+Rotten Egg",
        "body": "\"rottenegg\"",
        "description": " ※prefab ID: rottenegg\n ※Name: Rotten Egg\n ※prefab Version: DST-632551 "
    },
    "prefab:firepen(ID Complete)": {
        "prefix": "p+firepen",
        "body": "\"firepen\"",
        "description": " ※prefab ID: firepen\n ※Name: Fiery Pen\n ※prefab Version: DST-632551 "
    },
    "prefab:firepen(ReverseSearch)": {
        "prefix": "p+Fiery Pen",
        "body": "\"firepen\"",
        "description": " ※prefab ID: firepen\n ※Name: Fiery Pen\n ※prefab Version: DST-632551 "
    },
    "prefab:saltrock(ID Complete)": {
        "prefix": "p+saltrock",
        "body": "\"saltrock\"",
        "description": " ※prefab ID: saltrock\n ※Name: Salt Crystals\n ※prefab Version: DST-632551 "
    },
    "prefab:saltrock(ReverseSearch)": {
        "prefix": "p+Salt Crystals",
        "body": "\"saltrock\"",
        "description": " ※prefab ID: saltrock\n ※Name: Salt Crystals\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_deciduous(ID Complete)": {
        "prefix": "p+turf_deciduous",
        "body": "\"turf_deciduous\"",
        "description": " ※prefab ID: turf_deciduous\n ※Name: Deciduous Turf\n ※Recipe: \n\t+ 1 x: Twigs/twigs\n\t+ 1 x: Birchnut/acorn\n ※Required Tech: \n\t+ LV.2 : Landscaping/TURFCRAFTING\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_deciduous(ReverseSearch)": {
        "prefix": "p+Deciduous Turf",
        "body": "\"turf_deciduous\"",
        "description": " ※prefab ID: turf_deciduous\n ※Name: Deciduous Turf\n ※Recipe: \n\t+ 1 x: Twigs/twigs\n\t+ 1 x: Birchnut/acorn\n ※Required Tech: \n\t+ LV.2 : Landscaping/TURFCRAFTING\n ※prefab Version: DST-632551 "
    },
    "prefab:cave_banana(ID Complete)": {
        "prefix": "p+cave_banana",
        "body": "\"cave_banana\"",
        "description": " ※prefab ID: cave_banana\n ※Name: Banana\n ※prefab Version: DST-632551 "
    },
    "prefab:cave_banana(ReverseSearch)": {
        "prefix": "p+Banana",
        "body": "\"cave_banana\"",
        "description": " ※prefab ID: cave_banana\n ※Name: Banana\n ※prefab Version: DST-632551 "
    },
    "prefab:beefalo_groomer_item(ID Complete)": {
        "prefix": "p+beefalo_groomer_item",
        "body": "\"beefalo_groomer_item\"",
        "description": " ※prefab ID: beefalo_groomer_item\n ※Name: Grooming Station Kit\n ※prefab Version: DST-632551 "
    },
    "prefab:beefalo_groomer_item(ReverseSearch)": {
        "prefix": "p+Grooming Station Kit",
        "body": "\"beefalo_groomer_item\"",
        "description": " ※prefab ID: beefalo_groomer_item\n ※Name: Grooming Station Kit\n ※prefab Version: DST-632551 "
    },
    "prefab:trails2(ID Complete)": {
        "prefix": "p+trails2",
        "body": "\"trails2\"",
        "description": " ※prefab ID: trails2\n ※Name: Boarilla\n ※prefab Version: DST-632551 "
    },
    "prefab:trails2(ReverseSearch)": {
        "prefix": "p+Boarilla",
        "body": "\"trails2\"",
        "description": " ※prefab ID: trails2\n ※Name: Boarilla\n ※prefab Version: DST-632551 "
    },
    "prefab:farm_plant_rotten(ID Complete)": {
        "prefix": "p+farm_plant_rotten",
        "body": "\"farm_plant_rotten\"",
        "description": " ※prefab ID: farm_plant_rotten\n ※Name: Rotting Plant\n ※prefab Version: DST-632551 "
    },
    "prefab:farm_plant_rotten(ReverseSearch)": {
        "prefix": "p+Rotting Plant",
        "body": "\"farm_plant_rotten\"",
        "description": " ※prefab ID: farm_plant_rotten\n ※Name: Rotting Plant\n ※prefab Version: DST-632551 "
    },
    "prefab:beebox(ID Complete)": {
        "prefix": "p+beebox",
        "body": "\"beebox\"",
        "description": " ※prefab ID: beebox\n ※Name: Bee Box\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 1 x: Honeycomb/honeycomb\n\t+ 4 x: Bee/bee\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:beebox(ReverseSearch)": {
        "prefix": "p+Bee Box",
        "body": "\"beebox\"",
        "description": " ※prefab ID: beebox\n ※Name: Bee Box\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 1 x: Honeycomb/honeycomb\n\t+ 4 x: Bee/bee\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:ratatouille(ID Complete)": {
        "prefix": "p+ratatouille",
        "body": "\"ratatouille\"",
        "description": " ※prefab ID: ratatouille\n ※Name: Ratatouille\n ※prefab Version: DST-632551 "
    },
    "prefab:ratatouille(ReverseSearch)": {
        "prefix": "p+Ratatouille",
        "body": "\"ratatouille\"",
        "description": " ※prefab ID: ratatouille\n ※Name: Ratatouille\n ※prefab Version: DST-632551 "
    },
    "prefab:pigelitefighter3(ID Complete)": {
        "prefix": "p+pigelitefighter3",
        "body": "\"pigelitefighter3\"",
        "description": " ※prefab ID: pigelitefighter3\n ※Name: Dmitri\n ※prefab Version: DST-632551 "
    },
    "prefab:pigelitefighter3(ReverseSearch)": {
        "prefix": "p+Dmitri",
        "body": "\"pigelitefighter3\"",
        "description": " ※prefab ID: pigelitefighter3\n ※Name: Dmitri\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_moon(ID Complete)": {
        "prefix": "p+chesspiece_moon",
        "body": "\"chesspiece_moon\"",
        "description": " ※prefab ID: chesspiece_moon\n ※Name: 'Moon' Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_moon(ReverseSearch)": {
        "prefix": "p+'Moon' Figure",
        "body": "\"chesspiece_moon\"",
        "description": " ※prefab ID: chesspiece_moon\n ※Name: 'Moon' Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:eyeplant(ID Complete)": {
        "prefix": "p+eyeplant",
        "body": "\"eyeplant\"",
        "description": " ※prefab ID: eyeplant\n ※Name: Eye Plant\n ※prefab Version: DST-632551 "
    },
    "prefab:eyeplant(ReverseSearch)": {
        "prefix": "p+Eye Plant",
        "body": "\"eyeplant\"",
        "description": " ※prefab ID: eyeplant\n ※Name: Eye Plant\n ※prefab Version: DST-632551 "
    },
    "prefab:winona_battery_high(ID Complete)": {
        "prefix": "p+winona_battery_high",
        "body": "\"winona_battery_high\"",
        "description": " ※prefab ID: winona_battery_high\n ※Name: Winona's G.E.M.erator\n ※Recipe: \n\t+ 1 x: Trusty Tape/sewing_tape\n\t+ 2 x: Boards/boards\n\t+ 2 x: Electrical Doodad/transistor\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:winona_battery_high(ReverseSearch)": {
        "prefix": "p+Winona's G.E.M.erator",
        "body": "\"winona_battery_high\"",
        "description": " ※prefab ID: winona_battery_high\n ※Name: Winona's G.E.M.erator\n ※Recipe: \n\t+ 1 x: Trusty Tape/sewing_tape\n\t+ 2 x: Boards/boards\n\t+ 2 x: Electrical Doodad/transistor\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:dumbbell_golden(ID Complete)": {
        "prefix": "p+dumbbell_golden",
        "body": "\"dumbbell_golden\"",
        "description": " ※prefab ID: dumbbell_golden\n ※Name: Golden Dumbbell\n ※Recipe: \n\t+ 4 x: Gold Nugget/goldnugget\n\t+ 1 x: Twigs/twigs\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:dumbbell_golden(ReverseSearch)": {
        "prefix": "p+Golden Dumbbell",
        "body": "\"dumbbell_golden\"",
        "description": " ※prefab ID: dumbbell_golden\n ※Name: Golden Dumbbell\n ※Recipe: \n\t+ 4 x: Gold Nugget/goldnugget\n\t+ 1 x: Twigs/twigs\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_019(ID Complete)": {
        "prefix": "p+quagmire_food_019",
        "body": "\"quagmire_food_019\"",
        "description": " ※prefab ID: quagmire_food_019\n ※Name: Meat Pie\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_019(ReverseSearch)": {
        "prefix": "p+Meat Pie",
        "body": "\"quagmire_food_019\"",
        "description": " ※prefab ID: quagmire_food_019\n ※Name: Meat Pie\n ※prefab Version: DST-632551 "
    },
    "prefab:log(ID Complete)": {
        "prefix": "p+log",
        "body": "\"log\"",
        "description": " ※prefab ID: log\n ※Name: Log\n ※prefab Version: DST-632551 "
    },
    "prefab:log(ReverseSearch)": {
        "prefix": "p+Log",
        "body": "\"log\"",
        "description": " ※prefab ID: log\n ※Name: Log\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_28(ID Complete)": {
        "prefix": "p+trinket_28",
        "body": "\"trinket_28\"",
        "description": " ※prefab ID: trinket_28\n ※Name: White Rook\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_28(ReverseSearch)": {
        "prefix": "p+White Rook",
        "body": "\"trinket_28\"",
        "description": " ※prefab ID: trinket_28\n ※Name: White Rook\n ※prefab Version: DST-632551 "
    },
    "prefab:known_turnip_seeds(ID Complete)": {
        "prefix": "p+known_turnip_seeds",
        "body": "\"known_turnip_seeds\"",
        "description": " ※prefab ID: known_turnip_seeds\n ※Name: Turnip Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:known_turnip_seeds(ReverseSearch)": {
        "prefix": "p+Turnip Seeds",
        "body": "\"known_turnip_seeds\"",
        "description": " ※prefab ID: known_turnip_seeds\n ※Name: Turnip Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:ruins_bat(ID Complete)": {
        "prefix": "p+ruins_bat",
        "body": "\"ruins_bat\"",
        "description": " ※prefab ID: ruins_bat\n ※Name: Thulecite Club\n ※Recipe: \n\t+ 3 x: Living Log/livinglog\n\t+ 4 x: Thulecite/thulecite\n\t+ 4 x: Nightmare Fuel/nightmarefuel\n ※Required Tech: \n\t+ LV.4 : Ancient/ANCIENT\n ※prefab Version: DST-632551 "
    },
    "prefab:ruins_bat(ReverseSearch)": {
        "prefix": "p+Thulecite Club",
        "body": "\"ruins_bat\"",
        "description": " ※prefab ID: ruins_bat\n ※Name: Thulecite Club\n ※Recipe: \n\t+ 3 x: Living Log/livinglog\n\t+ 4 x: Thulecite/thulecite\n\t+ 4 x: Nightmare Fuel/nightmarefuel\n ※Required Tech: \n\t+ LV.4 : Ancient/ANCIENT\n ※prefab Version: DST-632551 "
    },
    "prefab:asparagus(ID Complete)": {
        "prefix": "p+asparagus",
        "body": "\"asparagus\"",
        "description": " ※prefab ID: asparagus\n ※Name: Asparagus\n ※prefab Version: DST-632551 "
    },
    "prefab:asparagus(ReverseSearch)": {
        "prefix": "p+Asparagus",
        "body": "\"asparagus\"",
        "description": " ※prefab ID: asparagus\n ※Name: Asparagus\n ※prefab Version: DST-632551 "
    },
    "prefab:cannonball_rock_item(ID Complete)": {
        "prefix": "p+cannonball_rock_item",
        "body": "\"cannonball_rock_item\"",
        "description": " ※prefab ID: cannonball_rock_item\n ※Name: Cannonball\n ※Recipe: \n\t+ 2 x: Cut Stone/cutstone\n\t+ 1 x: Gunpowder/gunpowder\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:cannonball_rock_item(ReverseSearch)": {
        "prefix": "p+Cannonball",
        "body": "\"cannonball_rock_item\"",
        "description": " ※prefab ID: cannonball_rock_item\n ※Name: Cannonball\n ※Recipe: \n\t+ 2 x: Cut Stone/cutstone\n\t+ 1 x: Gunpowder/gunpowder\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:willow_ember(ID Complete)": {
        "prefix": "p+willow_ember",
        "body": "\"willow_ember\"",
        "description": " ※prefab ID: willow_ember\n ※Name: Ethereal Ember\n ※prefab Version: DST-632551 "
    },
    "prefab:willow_ember(ReverseSearch)": {
        "prefix": "p+Ethereal Ember",
        "body": "\"willow_ember\"",
        "description": " ※prefab ID: willow_ember\n ※Name: Ethereal Ember\n ※prefab Version: DST-632551 "
    },
    "prefab:statue_marble(ID Complete)": {
        "prefix": "p+statue_marble",
        "body": "\"statue_marble\"",
        "description": " ※prefab ID: statue_marble\n ※Name: Marble Sculpture\n ※prefab Version: DST-632551 "
    },
    "prefab:statue_marble(ReverseSearch)": {
        "prefix": "p+Marble Sculpture",
        "body": "\"statue_marble\"",
        "description": " ※prefab ID: statue_marble\n ※Name: Marble Sculpture\n ※prefab Version: DST-632551 "
    },
    "prefab:glommerwings(ID Complete)": {
        "prefix": "p+glommerwings",
        "body": "\"glommerwings\"",
        "description": " ※prefab ID: glommerwings\n ※Name: Glommer's Wings\n ※prefab Version: DST-632551 "
    },
    "prefab:glommerwings(ReverseSearch)": {
        "prefix": "p+Glommer's Wings",
        "body": "\"glommerwings\"",
        "description": " ※prefab ID: glommerwings\n ※Name: Glommer's Wings\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_stalker_builder(ID Complete)": {
        "prefix": "p+chesspiece_stalker_builder",
        "body": "\"chesspiece_stalker_builder\"",
        "description": " ※prefab ID: chesspiece_stalker_builder\n ※Name: Ancient Fuelweaver Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_stalker_builder(ReverseSearch)": {
        "prefix": "p+Ancient Fuelweaver Figure",
        "body": "\"chesspiece_stalker_builder\"",
        "description": " ※prefab ID: chesspiece_stalker_builder\n ※Name: Ancient Fuelweaver Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:mushroombomb(ID Complete)": {
        "prefix": "p+mushroombomb",
        "body": "\"mushroombomb\"",
        "description": " ※prefab ID: mushroombomb\n ※Name: Boomshroom\n ※prefab Version: DST-632551 "
    },
    "prefab:mushroombomb(ReverseSearch)": {
        "prefix": "p+Boomshroom",
        "body": "\"mushroombomb\"",
        "description": " ※prefab ID: mushroombomb\n ※Name: Boomshroom\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_pot_small(ID Complete)": {
        "prefix": "p+quagmire_pot_small",
        "body": "\"quagmire_pot_small\"",
        "description": " ※prefab ID: quagmire_pot_small\n ※Name: Cookpot\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_pot_small(ReverseSearch)": {
        "prefix": "p+Cookpot",
        "body": "\"quagmire_pot_small\"",
        "description": " ※prefab ID: quagmire_pot_small\n ※Name: Cookpot\n ※prefab Version: DST-632551 "
    },
    "prefab:monkey_smallhat(ID Complete)": {
        "prefix": "p+monkey_smallhat",
        "body": "\"monkey_smallhat\"",
        "description": " ※prefab ID: monkey_smallhat\n ※Name: Pirate's Bandana\n ※prefab Version: DST-632551 "
    },
    "prefab:monkey_smallhat(ReverseSearch)": {
        "prefix": "p+Pirate's Bandana",
        "body": "\"monkey_smallhat\"",
        "description": " ※prefab ID: monkey_smallhat\n ※Name: Pirate's Bandana\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_028(ID Complete)": {
        "prefix": "p+quagmire_food_028",
        "body": "\"quagmire_food_028\"",
        "description": " ※prefab ID: quagmire_food_028\n ※Name: Candied Fish\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_028(ReverseSearch)": {
        "prefix": "p+Candied Fish",
        "body": "\"quagmire_food_028\"",
        "description": " ※prefab ID: quagmire_food_028\n ※Name: Candied Fish\n ※prefab Version: DST-632551 "
    },
    "prefab:blueprint_craftingset_ruins_builder(ID Complete)": {
        "prefix": "p+blueprint_craftingset_ruins_builder",
        "body": "\"blueprint_craftingset_ruins_builder\"",
        "description": " ※prefab ID: blueprint_craftingset_ruins_builder\n ※Name: Ruins Turf Blueprints\n ※Recipe: \n\t+ 3 x: Papyrus/papyrus\n ※Required Tech: \n\t+ LV.2 : Ancient/ANCIENT\n ※prefab Version: DST-632551 "
    },
    "prefab:blueprint_craftingset_ruins_builder(ReverseSearch)": {
        "prefix": "p+Ruins Turf Blueprints",
        "body": "\"blueprint_craftingset_ruins_builder\"",
        "description": " ※prefab ID: blueprint_craftingset_ruins_builder\n ※Name: Ruins Turf Blueprints\n ※Recipe: \n\t+ 3 x: Papyrus/papyrus\n ※Required Tech: \n\t+ LV.2 : Ancient/ANCIENT\n ※prefab Version: DST-632551 "
    },
    "prefab:weed_tillweed(ID Complete)": {
        "prefix": "p+weed_tillweed",
        "body": "\"weed_tillweed\"",
        "description": " ※prefab ID: weed_tillweed\n ※Name: Tillweed\n ※prefab Version: DST-632551 "
    },
    "prefab:weed_tillweed(ReverseSearch)": {
        "prefix": "p+Tillweed",
        "body": "\"weed_tillweed\"",
        "description": " ※prefab ID: weed_tillweed\n ※Name: Tillweed\n ※prefab Version: DST-632551 "
    },
    "prefab:halloween_ornament_4(ID Complete)": {
        "prefix": "p+halloween_ornament_4",
        "body": "\"halloween_ornament_4\"",
        "description": " ※prefab ID: halloween_ornament_4\n ※Name: Tentacle Decoration\n ※prefab Version: DST-632551 "
    },
    "prefab:halloween_ornament_4(ReverseSearch)": {
        "prefix": "p+Tentacle Decoration",
        "body": "\"halloween_ornament_4\"",
        "description": " ※prefab ID: halloween_ornament_4\n ※Name: Tentacle Decoration\n ※prefab Version: DST-632551 "
    },
    "prefab:fruitfly(ID Complete)": {
        "prefix": "p+fruitfly",
        "body": "\"fruitfly\"",
        "description": " ※prefab ID: fruitfly\n ※Name: Fruit Fly\n ※prefab Version: DST-632551 "
    },
    "prefab:fruitfly(ReverseSearch)": {
        "prefix": "p+Fruit Fly",
        "body": "\"fruitfly\"",
        "description": " ※prefab ID: fruitfly\n ※Name: Fruit Fly\n ※prefab Version: DST-632551 "
    },
    "prefab:wintercooking_pavlova(ID Complete)": {
        "prefix": "p+wintercooking_pavlova",
        "body": "\"wintercooking_pavlova\"",
        "description": " ※prefab ID: wintercooking_pavlova\n ※Name: Pavlova\n ※Recipe: \n\t+ 1 x: Holiday Cheer/wintersfeastfuel\n\t+ 2 x: Lune Tree Blossom/moon_tree_blossom\n ※Required Tech: \n\t+ LV.1 : Feast/WINTERSFEASTCOOKING\n ※prefab Version: DST-632551 "
    },
    "prefab:wintercooking_pavlova(ReverseSearch)": {
        "prefix": "p+Pavlova",
        "body": "\"wintercooking_pavlova\"",
        "description": " ※prefab ID: wintercooking_pavlova\n ※Name: Pavlova\n ※Recipe: \n\t+ 1 x: Holiday Cheer/wintersfeastfuel\n\t+ 2 x: Lune Tree Blossom/moon_tree_blossom\n ※Required Tech: \n\t+ LV.1 : Feast/WINTERSFEASTCOOKING\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_seedpacket_5(ID Complete)": {
        "prefix": "p+quagmire_seedpacket_5",
        "body": "\"quagmire_seedpacket_5\"",
        "description": " ※prefab ID: quagmire_seedpacket_5\n ※Name: Packet of Round Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_seedpacket_5(ReverseSearch)": {
        "prefix": "p+Packet of Round Seeds",
        "body": "\"quagmire_seedpacket_5\"",
        "description": " ※prefab ID: quagmire_seedpacket_5\n ※Name: Packet of Round Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:halloween_experiment_root(ID Complete)": {
        "prefix": "p+halloween_experiment_root",
        "body": "\"halloween_experiment_root\"",
        "description": " ※prefab ID: halloween_experiment_root\n ※Name: Arboretum Experiment\n ※Recipe: \n\t+ 1 x: Batilisk Wing/batwing\n\t+ 1 x: Living Log/livinglog\n ※Required Tech: \n\t+ LV.1 : Mad Science/MADSCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:halloween_experiment_root(ReverseSearch)": {
        "prefix": "p+Arboretum Experiment",
        "body": "\"halloween_experiment_root\"",
        "description": " ※prefab ID: halloween_experiment_root\n ※Name: Arboretum Experiment\n ※Recipe: \n\t+ 1 x: Batilisk Wing/batwing\n\t+ 1 x: Living Log/livinglog\n ※Required Tech: \n\t+ LV.1 : Mad Science/MADSCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:batnosehat(ID Complete)": {
        "prefix": "p+batnosehat",
        "body": "\"batnosehat\"",
        "description": " ※prefab ID: batnosehat\n ※Name: Milkmade Hat\n ※prefab Version: DST-632551 "
    },
    "prefab:batnosehat(ReverseSearch)": {
        "prefix": "p+Milkmade Hat",
        "body": "\"batnosehat\"",
        "description": " ※prefab ID: batnosehat\n ※Name: Milkmade Hat\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_crate_grill_small(ID Complete)": {
        "prefix": "p+quagmire_crate_grill_small",
        "body": "\"quagmire_crate_grill_small\"",
        "description": " ※prefab ID: quagmire_crate_grill_small\n ※Name: Grill Kit\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_crate_grill_small(ReverseSearch)": {
        "prefix": "p+Grill Kit",
        "body": "\"quagmire_crate_grill_small\"",
        "description": " ※prefab ID: quagmire_crate_grill_small\n ※Name: Grill Kit\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_altar(ID Complete)": {
        "prefix": "p+quagmire_altar",
        "body": "\"quagmire_altar\"",
        "description": " ※prefab ID: quagmire_altar\n ※Name: The Altar of Gnaw\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_altar(ReverseSearch)": {
        "prefix": "p+The Altar of Gnaw",
        "body": "\"quagmire_altar\"",
        "description": " ※prefab ID: quagmire_altar\n ※Name: The Altar of Gnaw\n ※prefab Version: DST-632551 "
    },
    "prefab:dug_trap_starfish(ID Complete)": {
        "prefix": "p+dug_trap_starfish",
        "body": "\"dug_trap_starfish\"",
        "description": " ※prefab ID: dug_trap_starfish\n ※Name: Anenemy Trap\n ※prefab Version: DST-632551 "
    },
    "prefab:dug_trap_starfish(ReverseSearch)": {
        "prefix": "p+Anenemy Trap",
        "body": "\"dug_trap_starfish\"",
        "description": " ※prefab ID: dug_trap_starfish\n ※Name: Anenemy Trap\n ※prefab Version: DST-632551 "
    },
    "prefab:potatosouffle(ID Complete)": {
        "prefix": "p+potatosouffle",
        "body": "\"potatosouffle\"",
        "description": " ※prefab ID: potatosouffle\n ※Name: Puffed Potato Soufflé\n ※prefab Version: DST-632551 "
    },
    "prefab:potatosouffle(ReverseSearch)": {
        "prefix": "p+Puffed Potato Soufflé",
        "body": "\"potatosouffle\"",
        "description": " ※prefab ID: potatosouffle\n ※Name: Puffed Potato Soufflé\n ※prefab Version: DST-632551 "
    },
    "prefab:snurtle(ID Complete)": {
        "prefix": "p+snurtle",
        "body": "\"snurtle\"",
        "description": " ※prefab ID: snurtle\n ※Name: Snurtle\n ※prefab Version: DST-632551 "
    },
    "prefab:snurtle(ReverseSearch)": {
        "prefix": "p+Snurtle",
        "body": "\"snurtle\"",
        "description": " ※prefab ID: snurtle\n ※Name: Snurtle\n ※prefab Version: DST-632551 "
    },
    "prefab:eggplant_cooked(ID Complete)": {
        "prefix": "p+eggplant_cooked",
        "body": "\"eggplant_cooked\"",
        "description": " ※prefab ID: eggplant_cooked\n ※Name: Braised Eggplant\n ※prefab Version: DST-632551 "
    },
    "prefab:eggplant_cooked(ReverseSearch)": {
        "prefix": "p+Braised Eggplant",
        "body": "\"eggplant_cooked\"",
        "description": " ※prefab ID: eggplant_cooked\n ※Name: Braised Eggplant\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_mushrooms(ID Complete)": {
        "prefix": "p+quagmire_mushrooms",
        "body": "\"quagmire_mushrooms\"",
        "description": " ※prefab ID: quagmire_mushrooms\n ※Name: Mushroom\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_mushrooms(ReverseSearch)": {
        "prefix": "p+Mushroom",
        "body": "\"quagmire_mushrooms\"",
        "description": " ※prefab ID: quagmire_mushrooms\n ※Name: Mushroom\n ※prefab Version: DST-632551 "
    },
    "prefab:pumpkin_oversized_rotten(ID Complete)": {
        "prefix": "p+pumpkin_oversized_rotten",
        "body": "\"pumpkin_oversized_rotten\"",
        "description": " ※prefab ID: pumpkin_oversized_rotten\n ※Name: Giant Rotting Pumpkin\n ※prefab Version: DST-632551 "
    },
    "prefab:pumpkin_oversized_rotten(ReverseSearch)": {
        "prefix": "p+Giant Rotting Pumpkin",
        "body": "\"pumpkin_oversized_rotten\"",
        "description": " ※prefab ID: pumpkin_oversized_rotten\n ※Name: Giant Rotting Pumpkin\n ※prefab Version: DST-632551 "
    },
    "prefab:fishmeat_small_cooked(ID Complete)": {
        "prefix": "p+fishmeat_small_cooked",
        "body": "\"fishmeat_small_cooked\"",
        "description": " ※prefab ID: fishmeat_small_cooked\n ※Name: Cooked Fish Morsel\n ※prefab Version: DST-632551 "
    },
    "prefab:fishmeat_small_cooked(ReverseSearch)": {
        "prefix": "p+Cooked Fish Morsel",
        "body": "\"fishmeat_small_cooked\"",
        "description": " ※prefab ID: fishmeat_small_cooked\n ※Name: Cooked Fish Morsel\n ※prefab Version: DST-632551 "
    },
    "prefab:eel(ID Complete)": {
        "prefix": "p+eel",
        "body": "\"eel\"",
        "description": " ※prefab ID: eel\n ※Name: Eel\n ※prefab Version: DST-632551 "
    },
    "prefab:eel(ReverseSearch)": {
        "prefix": "p+Eel",
        "body": "\"eel\"",
        "description": " ※prefab ID: eel\n ※Name: Eel\n ※prefab Version: DST-632551 "
    },
    "prefab:shadowthrall_hands(ID Complete)": {
        "prefix": "p+shadowthrall_hands",
        "body": "\"shadowthrall_hands\"",
        "description": " ※prefab ID: shadowthrall_hands\n ※Name: Ink Blight\n ※prefab Version: DST-632551 "
    },
    "prefab:shadowthrall_hands(ReverseSearch)": {
        "prefix": "p+Ink Blight",
        "body": "\"shadowthrall_hands\"",
        "description": " ※prefab ID: shadowthrall_hands\n ※Name: Ink Blight\n ※prefab Version: DST-632551 "
    },
    "prefab:wagstaff_npc(ID Complete)": {
        "prefix": "p+wagstaff_npc",
        "body": "\"wagstaff_npc\"",
        "description": " ※prefab ID: wagstaff_npc\n ※Name: Grainy Transmission\n ※prefab Version: DST-632551 "
    },
    "prefab:wagstaff_npc(ReverseSearch)": {
        "prefix": "p+Grainy Transmission",
        "body": "\"wagstaff_npc\"",
        "description": " ※prefab ID: wagstaff_npc\n ※Name: Grainy Transmission\n ※prefab Version: DST-632551 "
    },
    "prefab:rain(ID Complete)": {
        "prefix": "p+rain",
        "body": "\"rain\"",
        "description": " ※prefab ID: rain\n ※Name: Short Circuit\n ※prefab Version: DST-632551 "
    },
    "prefab:rain(ReverseSearch)": {
        "prefix": "p+Short Circuit",
        "body": "\"rain\"",
        "description": " ※prefab ID: rain\n ※Name: Short Circuit\n ※prefab Version: DST-632551 "
    },
    "prefab:molebat(ID Complete)": {
        "prefix": "p+molebat",
        "body": "\"molebat\"",
        "description": " ※prefab ID: molebat\n ※Name: Naked Mole Bat\n ※prefab Version: DST-632551 "
    },
    "prefab:molebat(ReverseSearch)": {
        "prefix": "p+Naked Mole Bat",
        "body": "\"molebat\"",
        "description": " ※prefab ID: molebat\n ※Name: Naked Mole Bat\n ※prefab Version: DST-632551 "
    },
    "prefab:malbatross_beak(ID Complete)": {
        "prefix": "p+malbatross_beak",
        "body": "\"malbatross_beak\"",
        "description": " ※prefab ID: malbatross_beak\n ※Name: Malbatross Bill\n ※prefab Version: DST-632551 "
    },
    "prefab:malbatross_beak(ReverseSearch)": {
        "prefix": "p+Malbatross Bill",
        "body": "\"malbatross_beak\"",
        "description": " ※prefab ID: malbatross_beak\n ※Name: Malbatross Bill\n ※prefab Version: DST-632551 "
    },
    "prefab:scrapbook_page(ID Complete)": {
        "prefix": "p+scrapbook_page",
        "body": "\"scrapbook_page\"",
        "description": " ※prefab ID: scrapbook_page\n ※Name: Lost Scrapbook Page\n ※prefab Version: DST-632551 "
    },
    "prefab:scrapbook_page(ReverseSearch)": {
        "prefix": "p+Lost Scrapbook Page",
        "body": "\"scrapbook_page\"",
        "description": " ※prefab ID: scrapbook_page\n ※Name: Lost Scrapbook Page\n ※prefab Version: DST-632551 "
    },
    "prefab:archive_orchestrina_main(ID Complete)": {
        "prefix": "p+archive_orchestrina_main",
        "body": "\"archive_orchestrina_main\"",
        "description": " ※prefab ID: archive_orchestrina_main\n ※Name: Ancient Orchestrina\n ※prefab Version: DST-632551 "
    },
    "prefab:archive_orchestrina_main(ReverseSearch)": {
        "prefix": "p+Ancient Orchestrina",
        "body": "\"archive_orchestrina_main\"",
        "description": " ※prefab ID: archive_orchestrina_main\n ※Name: Ancient Orchestrina\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_20(ID Complete)": {
        "prefix": "p+trinket_20",
        "body": "\"trinket_20\"",
        "description": " ※prefab ID: trinket_20\n ※Name: Back Scratcher\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_20(ReverseSearch)": {
        "prefix": "p+Back Scratcher",
        "body": "\"trinket_20\"",
        "description": " ※prefab ID: trinket_20\n ※Name: Back Scratcher\n ※prefab Version: DST-632551 "
    },
    "prefab:pomegranate_seeds(ID Complete)": {
        "prefix": "p+pomegranate_seeds",
        "body": "\"pomegranate_seeds\"",
        "description": " ※prefab ID: pomegranate_seeds\n ※Name: Windblown Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:pomegranate_seeds(ReverseSearch)": {
        "prefix": "p+Windblown Seeds",
        "body": "\"pomegranate_seeds\"",
        "description": " ※prefab ID: pomegranate_seeds\n ※Name: Windblown Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:teleportato_box(ID Complete)": {
        "prefix": "p+teleportato_box",
        "body": "\"teleportato_box\"",
        "description": " ※prefab ID: teleportato_box\n ※Name: Box Thing\n ※prefab Version: DST-632551 "
    },
    "prefab:teleportato_box(ReverseSearch)": {
        "prefix": "p+Box Thing",
        "body": "\"teleportato_box\"",
        "description": " ※prefab ID: teleportato_box\n ※Name: Box Thing\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_sharkboi(ID Complete)": {
        "prefix": "p+chesspiece_sharkboi",
        "body": "\"chesspiece_sharkboi\"",
        "description": " ※prefab ID: chesspiece_sharkboi\n ※Name: Frostjaw Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_sharkboi(ReverseSearch)": {
        "prefix": "p+Frostjaw Figure",
        "body": "\"chesspiece_sharkboi\"",
        "description": " ※prefab ID: chesspiece_sharkboi\n ※Name: Frostjaw Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:rock_moon(ID Complete)": {
        "prefix": "p+rock_moon",
        "body": "\"rock_moon\"",
        "description": " ※prefab ID: rock_moon\n ※Name: Boulder\n ※prefab Version: DST-632551 "
    },
    "prefab:rock_moon(ReverseSearch)": {
        "prefix": "p+Boulder",
        "body": "\"rock_moon\"",
        "description": " ※prefab ID: rock_moon\n ※Name: Boulder\n ※prefab Version: DST-632551 "
    },
    "prefab:teleportato_base(ID Complete)": {
        "prefix": "p+teleportato_base",
        "body": "\"teleportato_base\"",
        "description": " ※prefab ID: teleportato_base\n ※Name: Wooden Thing\n ※prefab Version: DST-632551 "
    },
    "prefab:teleportato_base(ReverseSearch)": {
        "prefix": "p+Wooden Thing",
        "body": "\"teleportato_base\"",
        "description": " ※prefab ID: teleportato_base\n ※Name: Wooden Thing\n ※prefab Version: DST-632551 "
    },
    "prefab:baconeggs(ID Complete)": {
        "prefix": "p+baconeggs",
        "body": "\"baconeggs\"",
        "description": " ※prefab ID: baconeggs\n ※Name: Bacon and Eggs\n ※prefab Version: DST-632551 "
    },
    "prefab:baconeggs(ReverseSearch)": {
        "prefix": "p+Bacon and Eggs",
        "body": "\"baconeggs\"",
        "description": " ※prefab ID: baconeggs\n ※Name: Bacon and Eggs\n ※prefab Version: DST-632551 "
    },
    "prefab:watermelonicle(ID Complete)": {
        "prefix": "p+watermelonicle",
        "body": "\"watermelonicle\"",
        "description": " ※prefab ID: watermelonicle\n ※Name: Melonsicle\n ※prefab Version: DST-632551 "
    },
    "prefab:watermelonicle(ReverseSearch)": {
        "prefix": "p+Melonsicle",
        "body": "\"watermelonicle\"",
        "description": " ※prefab ID: watermelonicle\n ※Name: Melonsicle\n ※prefab Version: DST-632551 "
    },
    "prefab:spider_water(ID Complete)": {
        "prefix": "p+spider_water",
        "body": "\"spider_water\"",
        "description": " ※prefab ID: spider_water\n ※Name: Sea Strider\n ※prefab Version: DST-632551 "
    },
    "prefab:spider_water(ReverseSearch)": {
        "prefix": "p+Sea Strider",
        "body": "\"spider_water\"",
        "description": " ※prefab ID: spider_water\n ※Name: Sea Strider\n ※prefab Version: DST-632551 "
    },
    "prefab:winter_tree(ID Complete)": {
        "prefix": "p+winter_tree",
        "body": "\"winter_tree\"",
        "description": " ※prefab ID: winter_tree\n ※Name: Winter's Feast Tree\n ※prefab Version: DST-632551 "
    },
    "prefab:winter_tree(ReverseSearch)": {
        "prefix": "p+Winter's Feast Tree",
        "body": "\"winter_tree\"",
        "description": " ※prefab ID: winter_tree\n ※Name: Winter's Feast Tree\n ※prefab Version: DST-632551 "
    },
    "prefab:mastupgrade_lamp_item(ID Complete)": {
        "prefix": "p+mastupgrade_lamp_item",
        "body": "\"mastupgrade_lamp_item\"",
        "description": " ※prefab ID: mastupgrade_lamp_item\n ※Name: Deck Illuminator\n ※Recipe: \n\t+ 1 x: Boards/boards\n\t+ 2 x: Rope/rope\n\t+ 4 x: Flint/flint\n ※Required Tech: \n\t+ LV.1 : Seafaring/SEAFARING\n ※prefab Version: DST-632551 "
    },
    "prefab:mastupgrade_lamp_item(ReverseSearch)": {
        "prefix": "p+Deck Illuminator",
        "body": "\"mastupgrade_lamp_item\"",
        "description": " ※prefab ID: mastupgrade_lamp_item\n ※Name: Deck Illuminator\n ※Recipe: \n\t+ 1 x: Boards/boards\n\t+ 2 x: Rope/rope\n\t+ 4 x: Flint/flint\n ※Required Tech: \n\t+ LV.1 : Seafaring/SEAFARING\n ※prefab Version: DST-632551 "
    },
    "prefab:megaflare(ID Complete)": {
        "prefix": "p+megaflare",
        "body": "\"megaflare\"",
        "description": " ※prefab ID: megaflare\n ※Name: Hostile Flare\n ※Recipe: \n\t+ 3 x: Flare/miniflare\n\t+ 1 x: Glommer's Goop/glommerfuel\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:megaflare(ReverseSearch)": {
        "prefix": "p+Hostile Flare",
        "body": "\"megaflare\"",
        "description": " ※prefab ID: megaflare\n ※Name: Hostile Flare\n ※Recipe: \n\t+ 3 x: Flare/miniflare\n\t+ 1 x: Glommer's Goop/glommerfuel\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:slow_farmplot(ID Complete)": {
        "prefix": "p+slow_farmplot",
        "body": "\"slow_farmplot\"",
        "description": " ※prefab ID: slow_farmplot\n ※Name: Basic Farm\n ※Recipe: \n\t+ 8 x: Cut Grass/cutgrass\n\t+ 4 x: Manure/poop\n\t+ 4 x: Log/log\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:slow_farmplot(ReverseSearch)": {
        "prefix": "p+Basic Farm",
        "body": "\"slow_farmplot\"",
        "description": " ※prefab ID: slow_farmplot\n ※Name: Basic Farm\n ※Recipe: \n\t+ 8 x: Cut Grass/cutgrass\n\t+ 4 x: Manure/poop\n\t+ 4 x: Log/log\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:lightning(ID Complete)": {
        "prefix": "p+lightning",
        "body": "\"lightning\"",
        "description": " ※prefab ID: lightning\n ※Name: Lightning\n ※prefab Version: DST-632551 "
    },
    "prefab:lightning(ReverseSearch)": {
        "prefix": "p+Lightning",
        "body": "\"lightning\"",
        "description": " ※prefab ID: lightning\n ※Name: Lightning\n ※prefab Version: DST-632551 "
    },
    "prefab:coontail(ID Complete)": {
        "prefix": "p+coontail",
        "body": "\"coontail\"",
        "description": " ※prefab ID: coontail\n ※Name: Cat Tail\n ※prefab Version: DST-632551 "
    },
    "prefab:coontail(ReverseSearch)": {
        "prefix": "p+Cat Tail",
        "body": "\"coontail\"",
        "description": " ※prefab ID: coontail\n ※Name: Cat Tail\n ※prefab Version: DST-632551 "
    },
    "prefab:kitcoondecor2_kit(ID Complete)": {
        "prefix": "p+kitcoondecor2_kit",
        "body": "\"kitcoondecor2_kit\"",
        "description": " ※prefab ID: kitcoondecor2_kit\n ※Name: Kit Teaser Kit\n ※Recipe: \n\t+ 12 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /CATCOONOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:kitcoondecor2_kit(ReverseSearch)": {
        "prefix": "p+Kit Teaser Kit",
        "body": "\"kitcoondecor2_kit\"",
        "description": " ※prefab ID: kitcoondecor2_kit\n ※Name: Kit Teaser Kit\n ※Recipe: \n\t+ 12 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /CATCOONOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:punchingbag_lunar(ID Complete)": {
        "prefix": "p+punchingbag_lunar",
        "body": "\"punchingbag_lunar\"",
        "description": " ※prefab ID: punchingbag_lunar\n ※Name: Bright Boxer\n ※Recipe: \n\t+ 3 x: Cut Grass/cutgrass\n\t+ 1 x: Boards/boards\n\t+ 1 x: Pure Brilliance/purebrilliance\n ※Required Tech: \n\t+ LV.2 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:punchingbag_lunar(ReverseSearch)": {
        "prefix": "p+Bright Boxer",
        "body": "\"punchingbag_lunar\"",
        "description": " ※prefab ID: punchingbag_lunar\n ※Name: Bright Boxer\n ※Recipe: \n\t+ 3 x: Cut Grass/cutgrass\n\t+ 1 x: Boards/boards\n\t+ 1 x: Pure Brilliance/purebrilliance\n ※Required Tech: \n\t+ LV.2 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_seedpacket_1(ID Complete)": {
        "prefix": "p+quagmire_seedpacket_1",
        "body": "\"quagmire_seedpacket_1\"",
        "description": " ※prefab ID: quagmire_seedpacket_1\n ※Name: Packet of Blue Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_seedpacket_1(ReverseSearch)": {
        "prefix": "p+Packet of Blue Seeds",
        "body": "\"quagmire_seedpacket_1\"",
        "description": " ※prefab ID: quagmire_seedpacket_1\n ※Name: Packet of Blue Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:mutator_spitter(ID Complete)": {
        "prefix": "p+mutator_spitter",
        "body": "\"mutator_spitter\"",
        "description": " ※prefab ID: mutator_spitter\n ※Name: Spitter Switcherdoodle\n ※Recipe: \n\t+ 1 x: Monster Meat/monstermeat\n\t+ 2 x: Silk/silk\n\t+ 4 x: Nitre/nitre\n ※Required Tech: \n\t+ LV.1 : Spider Care/SPIDERCRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:mutator_spitter(ReverseSearch)": {
        "prefix": "p+Spitter Switcherdoodle",
        "body": "\"mutator_spitter\"",
        "description": " ※prefab ID: mutator_spitter\n ※Name: Spitter Switcherdoodle\n ※Recipe: \n\t+ 1 x: Monster Meat/monstermeat\n\t+ 2 x: Silk/silk\n\t+ 4 x: Nitre/nitre\n ※Required Tech: \n\t+ LV.1 : Spider Care/SPIDERCRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:asparagussoup(ID Complete)": {
        "prefix": "p+asparagussoup",
        "body": "\"asparagussoup\"",
        "description": " ※prefab ID: asparagussoup\n ※Name: Asparagus Soup\n ※prefab Version: DST-632551 "
    },
    "prefab:asparagussoup(ReverseSearch)": {
        "prefix": "p+Asparagus Soup",
        "body": "\"asparagussoup\"",
        "description": " ※prefab ID: asparagussoup\n ※Name: Asparagus Soup\n ※prefab Version: DST-632551 "
    },
    "prefab:sculptingtable(ID Complete)": {
        "prefix": "p+sculptingtable",
        "body": "\"sculptingtable\"",
        "description": " ※prefab ID: sculptingtable\n ※Name: Potter's Wheel\n ※Recipe: \n\t+ 2 x: Cut Stone/cutstone\n\t+ 2 x: Boards/boards\n\t+ 4 x: Twigs/twigs\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:sculptingtable(ReverseSearch)": {
        "prefix": "p+Potter's Wheel",
        "body": "\"sculptingtable\"",
        "description": " ※prefab ID: sculptingtable\n ※Name: Potter's Wheel\n ※Recipe: \n\t+ 2 x: Cut Stone/cutstone\n\t+ 2 x: Boards/boards\n\t+ 4 x: Twigs/twigs\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:kitcoon_nametag(ID Complete)": {
        "prefix": "p+kitcoon_nametag",
        "body": "\"kitcoon_nametag\"",
        "description": " ※prefab ID: kitcoon_nametag\n ※Name: Kit Collar\n ※Recipe: \n\t+ 6 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /CATCOONOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:kitcoon_nametag(ReverseSearch)": {
        "prefix": "p+Kit Collar",
        "body": "\"kitcoon_nametag\"",
        "description": " ※prefab ID: kitcoon_nametag\n ※Name: Kit Collar\n ※Recipe: \n\t+ 6 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /CATCOONOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:moqueca(ID Complete)": {
        "prefix": "p+moqueca",
        "body": "\"moqueca\"",
        "description": " ※prefab ID: moqueca\n ※Name: Moqueca\n ※prefab Version: DST-632551 "
    },
    "prefab:moqueca(ReverseSearch)": {
        "prefix": "p+Moqueca",
        "body": "\"moqueca\"",
        "description": " ※prefab ID: moqueca\n ※Name: Moqueca\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_armorlight(ID Complete)": {
        "prefix": "p+lavaarena_armorlight",
        "body": "\"lavaarena_armorlight\"",
        "description": " ※prefab ID: lavaarena_armorlight\n ※Name: Reed Tunic\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_armorlight(ReverseSearch)": {
        "prefix": "p+Reed Tunic",
        "body": "\"lavaarena_armorlight\"",
        "description": " ※prefab ID: lavaarena_armorlight\n ※Name: Reed Tunic\n ※prefab Version: DST-632551 "
    },
    "prefab:moondial(ID Complete)": {
        "prefix": "p+moondial",
        "body": "\"moondial\"",
        "description": " ※prefab ID: moondial\n ※Name: Moon Dial\n ※Recipe: \n\t+ 1 x: Blue Moonlens/bluemooneye\n\t+ 2 x: Moon Rock/moonrocknugget\n\t+ 2 x: Ice/ice\n ※Required Tech: \n\t+ LV.2 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:moondial(ReverseSearch)": {
        "prefix": "p+Moon Dial",
        "body": "\"moondial\"",
        "description": " ※prefab ID: moondial\n ※Name: Moon Dial\n ※Recipe: \n\t+ 1 x: Blue Moonlens/bluemooneye\n\t+ 2 x: Moon Rock/moonrocknugget\n\t+ 2 x: Ice/ice\n ※Required Tech: \n\t+ LV.2 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:war_blueprint(ID Complete)": {
        "prefix": "p+war_blueprint",
        "body": "\"war_blueprint\"",
        "description": " ※prefab ID: war_blueprint\n ※Name: Warrior Costume Pattern\n ※prefab Version: DST-632551 "
    },
    "prefab:war_blueprint(ReverseSearch)": {
        "prefix": "p+Warrior Costume Pattern",
        "body": "\"war_blueprint\"",
        "description": " ※prefab ID: war_blueprint\n ※Name: Warrior Costume Pattern\n ※prefab Version: DST-632551 "
    },
    "prefab:critter_lamb(ID Complete)": {
        "prefix": "p+critter_lamb",
        "body": "\"critter_lamb\"",
        "description": " ※prefab ID: critter_lamb\n ※Name: Ewelet\n ※prefab Version: DST-632551 "
    },
    "prefab:critter_lamb(ReverseSearch)": {
        "prefix": "p+Ewelet",
        "body": "\"critter_lamb\"",
        "description": " ※prefab ID: critter_lamb\n ※Name: Ewelet\n ※prefab Version: DST-632551 "
    },
    "prefab:tent(ID Complete)": {
        "prefix": "p+tent",
        "body": "\"tent\"",
        "description": " ※prefab ID: tent\n ※Name: Tent\n ※Recipe: \n\t+ 6 x: Silk/silk\n\t+ 4 x: Twigs/twigs\n\t+ 3 x: Rope/rope\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:tent(ReverseSearch)": {
        "prefix": "p+Tent",
        "body": "\"tent\"",
        "description": " ※prefab ID: tent\n ※Name: Tent\n ※Recipe: \n\t+ 6 x: Silk/silk\n\t+ 4 x: Twigs/twigs\n\t+ 3 x: Rope/rope\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_underrock(ID Complete)": {
        "prefix": "p+turf_underrock",
        "body": "\"turf_underrock\"",
        "description": " ※prefab ID: turf_underrock\n ※Name: Cave Rock Turf\n ※Recipe: \n\t+ 3 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.2 : Landscaping/TURFCRAFTING\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_underrock(ReverseSearch)": {
        "prefix": "p+Cave Rock Turf",
        "body": "\"turf_underrock\"",
        "description": " ※prefab ID: turf_underrock\n ※Name: Cave Rock Turf\n ※Recipe: \n\t+ 3 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.2 : Landscaping/TURFCRAFTING\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_moosegoose_builder(ID Complete)": {
        "prefix": "p+chesspiece_moosegoose_builder",
        "body": "\"chesspiece_moosegoose_builder\"",
        "description": " ※prefab ID: chesspiece_moosegoose_builder\n ※Name: Moose/Goose Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_moosegoose_builder(ReverseSearch)": {
        "prefix": "p+Moose/Goose Figure",
        "body": "\"chesspiece_moosegoose_builder\"",
        "description": " ※prefab ID: chesspiece_moosegoose_builder\n ※Name: Moose/Goose Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:moon_fissure(ID Complete)": {
        "prefix": "p+moon_fissure",
        "body": "\"moon_fissure\"",
        "description": " ※prefab ID: moon_fissure\n ※Name: Celestial Fissure\n ※prefab Version: DST-632551 "
    },
    "prefab:moon_fissure(ReverseSearch)": {
        "prefix": "p+Celestial Fissure",
        "body": "\"moon_fissure\"",
        "description": " ※prefab ID: moon_fissure\n ※Name: Celestial Fissure\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_rubble_clocktower(ID Complete)": {
        "prefix": "p+quagmire_rubble_clocktower",
        "body": "\"quagmire_rubble_clocktower\"",
        "description": " ※prefab ID: quagmire_rubble_clocktower\n ※Name: Dilapidated Clocktower\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_rubble_clocktower(ReverseSearch)": {
        "prefix": "p+Dilapidated Clocktower",
        "body": "\"quagmire_rubble_clocktower\"",
        "description": " ※prefab ID: quagmire_rubble_clocktower\n ※Name: Dilapidated Clocktower\n ※prefab Version: DST-632551 "
    },
    "prefab:farm_plant_pepper(ID Complete)": {
        "prefix": "p+farm_plant_pepper",
        "body": "\"farm_plant_pepper\"",
        "description": " ※prefab ID: farm_plant_pepper\n ※Name: Pepper Plant\n ※prefab Version: DST-632551 "
    },
    "prefab:farm_plant_pepper(ReverseSearch)": {
        "prefix": "p+Pepper Plant",
        "body": "\"farm_plant_pepper\"",
        "description": " ※prefab ID: farm_plant_pepper\n ※Name: Pepper Plant\n ※prefab Version: DST-632551 "
    },
    "prefab:firepit(ID Complete)": {
        "prefix": "p+firepit",
        "body": "\"firepit\"",
        "description": " ※prefab ID: firepit\n ※Name: Fire Pit\n ※Recipe: \n\t+ 2 x: Log/log\n\t+ 12 x: Rocks/rocks\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:firepit(ReverseSearch)": {
        "prefix": "p+Fire Pit",
        "body": "\"firepit\"",
        "description": " ※prefab ID: firepit\n ※Name: Fire Pit\n ※Recipe: \n\t+ 2 x: Log/log\n\t+ 12 x: Rocks/rocks\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:cave_fern(ID Complete)": {
        "prefix": "p+cave_fern",
        "body": "\"cave_fern\"",
        "description": " ※prefab ID: cave_fern\n ※Name: Fern\n ※prefab Version: DST-632551 "
    },
    "prefab:cave_fern(ReverseSearch)": {
        "prefix": "p+Fern",
        "body": "\"cave_fern\"",
        "description": " ※prefab ID: cave_fern\n ※Name: Fern\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_pond_salt(ID Complete)": {
        "prefix": "p+quagmire_pond_salt",
        "body": "\"quagmire_pond_salt\"",
        "description": " ※prefab ID: quagmire_pond_salt\n ※Name: Salt Pond\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_pond_salt(ReverseSearch)": {
        "prefix": "p+Salt Pond",
        "body": "\"quagmire_pond_salt\"",
        "description": " ※prefab ID: quagmire_pond_salt\n ※Name: Salt Pond\n ※prefab Version: DST-632551 "
    },
    "prefab:frog(ID Complete)": {
        "prefix": "p+frog",
        "body": "\"frog\"",
        "description": " ※prefab ID: frog\n ※Name: Frog\n ※prefab Version: DST-632551 "
    },
    "prefab:frog(ReverseSearch)": {
        "prefix": "p+Frog",
        "body": "\"frog\"",
        "description": " ※prefab ID: frog\n ※Name: Frog\n ※prefab Version: DST-632551 "
    },
    "prefab:wood_table_square(ID Complete)": {
        "prefix": "p+wood_table_square",
        "body": "\"wood_table_square\"",
        "description": " ※prefab ID: wood_table_square\n ※Name: Square Wooden Table\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 1 x: Rope/rope\n ※Required Tech: \n\t+ LV.2 : Carpentry/CARPENTRY\n ※prefab Version: DST-632551 "
    },
    "prefab:wood_table_square(ReverseSearch)": {
        "prefix": "p+Square Wooden Table",
        "body": "\"wood_table_square\"",
        "description": " ※prefab ID: wood_table_square\n ※Name: Square Wooden Table\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 1 x: Rope/rope\n ※Required Tech: \n\t+ LV.2 : Carpentry/CARPENTRY\n ※prefab Version: DST-632551 "
    },
    "prefab:abigail_flower(ID Complete)": {
        "prefix": "p+abigail_flower",
        "body": "\"abigail_flower\"",
        "description": " ※prefab ID: abigail_flower\n ※Name: Abigail's Flower\n ※Recipe: \n\t+ 1 x: Mourning Glory/ghostflower\n\t+ 1 x: Nightmare Fuel/nightmarefuel\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:abigail_flower(ReverseSearch)": {
        "prefix": "p+Abigail's Flower",
        "body": "\"abigail_flower\"",
        "description": " ※prefab ID: abigail_flower\n ※Name: Abigail's Flower\n ※Recipe: \n\t+ 1 x: Mourning Glory/ghostflower\n\t+ 1 x: Nightmare Fuel/nightmarefuel\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:trailmix(ID Complete)": {
        "prefix": "p+trailmix",
        "body": "\"trailmix\"",
        "description": " ※prefab ID: trailmix\n ※Name: Trail Mix\n ※prefab Version: DST-632551 "
    },
    "prefab:trailmix(ReverseSearch)": {
        "prefix": "p+Trail Mix",
        "body": "\"trailmix\"",
        "description": " ※prefab ID: trailmix\n ※Name: Trail Mix\n ※prefab Version: DST-632551 "
    },
    "prefab:halloweencandy_10(ID Complete)": {
        "prefix": "p+halloweencandy_10",
        "body": "\"halloweencandy_10\"",
        "description": " ※prefab ID: halloweencandy_10\n ※Name: Tentacle Lolli\n ※prefab Version: DST-632551 "
    },
    "prefab:halloweencandy_10(ReverseSearch)": {
        "prefix": "p+Tentacle Lolli",
        "body": "\"halloweencandy_10\"",
        "description": " ※prefab ID: halloweencandy_10\n ※Name: Tentacle Lolli\n ※prefab Version: DST-632551 "
    },
    "prefab:charlie_npc_alt(ID Complete)": {
        "prefix": "p+charlie_npc_alt",
        "body": "\"charlie_npc_alt\"",
        "description": " ※prefab ID: charlie_npc_alt\n ※Name: Shadow Queen\n ※prefab Version: DST-632551 "
    },
    "prefab:charlie_npc_alt(ReverseSearch)": {
        "prefix": "p+Shadow Queen",
        "body": "\"charlie_npc_alt\"",
        "description": " ※prefab ID: charlie_npc_alt\n ※Name: Shadow Queen\n ※prefab Version: DST-632551 "
    },
    "prefab:eyeturret(ID Complete)": {
        "prefix": "p+eyeturret",
        "body": "\"eyeturret\"",
        "description": " ※prefab ID: eyeturret\n ※Name: Houndius Shootius\n ※Recipe: \n\t+ 1 x: Deerclops Eyeball/deerclops_eyeball\n\t+ 1 x: Guardian's Horn/minotaurhorn\n\t+ 5 x: Thulecite/thulecite\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:eyeturret(ReverseSearch)": {
        "prefix": "p+Houndius Shootius",
        "body": "\"eyeturret\"",
        "description": " ※prefab ID: eyeturret\n ※Name: Houndius Shootius\n ※Recipe: \n\t+ 1 x: Deerclops Eyeball/deerclops_eyeball\n\t+ 1 x: Guardian's Horn/minotaurhorn\n\t+ 5 x: Thulecite/thulecite\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:known_asparagus_seeds(ID Complete)": {
        "prefix": "p+known_asparagus_seeds",
        "body": "\"known_asparagus_seeds\"",
        "description": " ※prefab ID: known_asparagus_seeds\n ※Name: Asparagus Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:known_asparagus_seeds(ReverseSearch)": {
        "prefix": "p+Asparagus Seeds",
        "body": "\"known_asparagus_seeds\"",
        "description": " ※prefab ID: known_asparagus_seeds\n ※Name: Asparagus Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:hermit_bundle(ID Complete)": {
        "prefix": "p+hermit_bundle",
        "body": "\"hermit_bundle\"",
        "description": " ※prefab ID: hermit_bundle\n ※Name: Bundle of Thanks\n ※prefab Version: DST-632551 "
    },
    "prefab:hermit_bundle(ReverseSearch)": {
        "prefix": "p+Bundle of Thanks",
        "body": "\"hermit_bundle\"",
        "description": " ※prefab ID: hermit_bundle\n ※Name: Bundle of Thanks\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_5(ID Complete)": {
        "prefix": "p+trinket_5",
        "body": "\"trinket_5\"",
        "description": " ※prefab ID: trinket_5\n ※Name: Tiny Rocketship\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_5(ReverseSearch)": {
        "prefix": "p+Tiny Rocketship",
        "body": "\"trinket_5\"",
        "description": " ※prefab ID: trinket_5\n ※Name: Tiny Rocketship\n ※prefab Version: DST-632551 "
    },
    "prefab:statuemaxwell(ID Complete)": {
        "prefix": "p+statuemaxwell",
        "body": "\"statuemaxwell\"",
        "description": " ※prefab ID: statuemaxwell\n ※Name: Maxwell Statue\n ※prefab Version: DST-632551 "
    },
    "prefab:statuemaxwell(ReverseSearch)": {
        "prefix": "p+Maxwell Statue",
        "body": "\"statuemaxwell\"",
        "description": " ※prefab ID: statuemaxwell\n ※Name: Maxwell Statue\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_salted_food_fmt(ID Complete)": {
        "prefix": "p+quagmire_salted_food_fmt",
        "body": "\"quagmire_salted_food_fmt\"",
        "description": " ※prefab ID: quagmire_salted_food_fmt\n ※Name: Salted {food}\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_salted_food_fmt(ReverseSearch)": {
        "prefix": "p+Salted {food}",
        "body": "\"quagmire_salted_food_fmt\"",
        "description": " ※prefab ID: quagmire_salted_food_fmt\n ※Name: Salted {food}\n ※prefab Version: DST-632551 "
    },
    "prefab:wood_table_round(ID Complete)": {
        "prefix": "p+wood_table_round",
        "body": "\"wood_table_round\"",
        "description": " ※prefab ID: wood_table_round\n ※Name: Round Wooden Table\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 1 x: Rope/rope\n ※Required Tech: \n\t+ LV.2 : Carpentry/CARPENTRY\n ※prefab Version: DST-632551 "
    },
    "prefab:wood_table_round(ReverseSearch)": {
        "prefix": "p+Round Wooden Table",
        "body": "\"wood_table_round\"",
        "description": " ※prefab ID: wood_table_round\n ※Name: Round Wooden Table\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 1 x: Rope/rope\n ※Required Tech: \n\t+ LV.2 : Carpentry/CARPENTRY\n ※prefab Version: DST-632551 "
    },
    "prefab:flower(ID Complete)": {
        "prefix": "p+flower",
        "body": "\"flower\"",
        "description": " ※prefab ID: flower\n ※Name: Flower\n ※prefab Version: DST-632551 "
    },
    "prefab:flower(ReverseSearch)": {
        "prefix": "p+Flower",
        "body": "\"flower\"",
        "description": " ※prefab ID: flower\n ※Name: Flower\n ※prefab Version: DST-632551 "
    },
    "prefab:palmconetree(ID Complete)": {
        "prefix": "p+palmconetree",
        "body": "\"palmconetree\"",
        "description": " ※prefab ID: palmconetree\n ※Name: Palmcone Tree\n ※prefab Version: DST-632551 "
    },
    "prefab:palmconetree(ReverseSearch)": {
        "prefix": "p+Palmcone Tree",
        "body": "\"palmconetree\"",
        "description": " ※prefab ID: palmconetree\n ※Name: Palmcone Tree\n ※prefab Version: DST-632551 "
    },
    "prefab:bomb_lunarplant(ID Complete)": {
        "prefix": "p+bomb_lunarplant",
        "body": "\"bomb_lunarplant\"",
        "description": " ※prefab ID: bomb_lunarplant\n ※Name: Brightshade Bomb\n ※Recipe: \n\t+ 4 x: Pure Brilliance/purebrilliance\n\t+ 4 x: Brightshade Husk/lunarplant_husk\n\t+ 1 x: Infused Moon Shard/moonglass_charged\n ※Required Tech: \n\t+ LV.2 : Brightsmithy/LUNARFORGING\n ※prefab Version: DST-632551 "
    },
    "prefab:bomb_lunarplant(ReverseSearch)": {
        "prefix": "p+Brightshade Bomb",
        "body": "\"bomb_lunarplant\"",
        "description": " ※prefab ID: bomb_lunarplant\n ※Name: Brightshade Bomb\n ※Recipe: \n\t+ 4 x: Pure Brilliance/purebrilliance\n\t+ 4 x: Brightshade Husk/lunarplant_husk\n\t+ 1 x: Infused Moon Shard/moonglass_charged\n ※Required Tech: \n\t+ LV.2 : Brightsmithy/LUNARFORGING\n ※prefab Version: DST-632551 "
    },
    "prefab:pepper_oversized_rotten(ID Complete)": {
        "prefix": "p+pepper_oversized_rotten",
        "body": "\"pepper_oversized_rotten\"",
        "description": " ※prefab ID: pepper_oversized_rotten\n ※Name: Giant Rotting Pepper\n ※prefab Version: DST-632551 "
    },
    "prefab:pepper_oversized_rotten(ReverseSearch)": {
        "prefix": "p+Giant Rotting Pepper",
        "body": "\"pepper_oversized_rotten\"",
        "description": " ※prefab ID: pepper_oversized_rotten\n ※Name: Giant Rotting Pepper\n ※prefab Version: DST-632551 "
    },
    "prefab:mole_underground(ID Complete)": {
        "prefix": "p+mole_underground",
        "body": "\"mole_underground\"",
        "description": " ※prefab ID: mole_underground\n ※Name: Raised Dirt\n ※prefab Version: DST-632551 "
    },
    "prefab:mole_underground(ReverseSearch)": {
        "prefix": "p+Raised Dirt",
        "body": "\"mole_underground\"",
        "description": " ※prefab ID: mole_underground\n ※Name: Raised Dirt\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_muse_builder(ID Complete)": {
        "prefix": "p+chesspiece_muse_builder",
        "body": "\"chesspiece_muse_builder\"",
        "description": " ※prefab ID: chesspiece_muse_builder\n ※Name: Queenly Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_muse_builder(ReverseSearch)": {
        "prefix": "p+Queenly Figure",
        "body": "\"chesspiece_muse_builder\"",
        "description": " ※prefab ID: chesspiece_muse_builder\n ※Name: Queenly Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:dragonfruit_cooked(ID Complete)": {
        "prefix": "p+dragonfruit_cooked",
        "body": "\"dragonfruit_cooked\"",
        "description": " ※prefab ID: dragonfruit_cooked\n ※Name: Prepared Dragon Fruit\n ※prefab Version: DST-632551 "
    },
    "prefab:dragonfruit_cooked(ReverseSearch)": {
        "prefix": "p+Prepared Dragon Fruit",
        "body": "\"dragonfruit_cooked\"",
        "description": " ※prefab ID: dragonfruit_cooked\n ※Name: Prepared Dragon Fruit\n ※prefab Version: DST-632551 "
    },
    "prefab:ipecacsyrup(ID Complete)": {
        "prefix": "p+ipecacsyrup",
        "body": "\"ipecacsyrup\"",
        "description": " ※prefab ID: ipecacsyrup\n ※Name: Syrup of Ipecaca\n ※Recipe: \n\t+ 1 x: Red Cap/red_cap\n\t+ 1 x: Honey/honey\n\t+ 1 x: Rot/spoiled_food\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:ipecacsyrup(ReverseSearch)": {
        "prefix": "p+Syrup of Ipecaca",
        "body": "\"ipecacsyrup\"",
        "description": " ※prefab ID: ipecacsyrup\n ※Name: Syrup of Ipecaca\n ※Recipe: \n\t+ 1 x: Red Cap/red_cap\n\t+ 1 x: Honey/honey\n\t+ 1 x: Rot/spoiled_food\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:portablecookpot_item(ID Complete)": {
        "prefix": "p+portablecookpot_item",
        "body": "\"portablecookpot_item\"",
        "description": " ※prefab ID: portablecookpot_item\n ※Name: Portable Crock Pot\n ※Recipe: \n\t+ 2 x: Gold Nugget/goldnugget\n\t+ 6 x: Charcoal/charcoal\n\t+ 6 x: Twigs/twigs\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:portablecookpot_item(ReverseSearch)": {
        "prefix": "p+Portable Crock Pot",
        "body": "\"portablecookpot_item\"",
        "description": " ※prefab ID: portablecookpot_item\n ※Name: Portable Crock Pot\n ※Recipe: \n\t+ 2 x: Gold Nugget/goldnugget\n\t+ 6 x: Charcoal/charcoal\n\t+ 6 x: Twigs/twigs\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:firenettles(ID Complete)": {
        "prefix": "p+firenettles",
        "body": "\"firenettles\"",
        "description": " ※prefab ID: firenettles\n ※Name: Fire Nettle Fronds\n ※prefab Version: DST-632551 "
    },
    "prefab:firenettles(ReverseSearch)": {
        "prefix": "p+Fire Nettle Fronds",
        "body": "\"firenettles\"",
        "description": " ※prefab ID: firenettles\n ※Name: Fire Nettle Fronds\n ※prefab Version: DST-632551 "
    },
    "prefab:dug_marsh_bush(ID Complete)": {
        "prefix": "p+dug_marsh_bush",
        "body": "\"dug_marsh_bush\"",
        "description": " ※prefab ID: dug_marsh_bush\n ※Name: Spiky Bush\n ※prefab Version: DST-632551 "
    },
    "prefab:dug_marsh_bush(ReverseSearch)": {
        "prefix": "p+Spiky Bush",
        "body": "\"dug_marsh_bush\"",
        "description": " ※prefab ID: dug_marsh_bush\n ※Name: Spiky Bush\n ※prefab Version: DST-632551 "
    },
    "prefab:gelblob_bottle(ID Complete)": {
        "prefix": "p+gelblob_bottle",
        "body": "\"gelblob_bottle\"",
        "description": " ※prefab ID: gelblob_bottle\n ※Name: Icker Jar\n ※prefab Version: DST-632551 "
    },
    "prefab:gelblob_bottle(ReverseSearch)": {
        "prefix": "p+Icker Jar",
        "body": "\"gelblob_bottle\"",
        "description": " ※prefab ID: gelblob_bottle\n ※Name: Icker Jar\n ※prefab Version: DST-632551 "
    },
    "prefab:wagpunkbits_kit(ID Complete)": {
        "prefix": "p+wagpunkbits_kit",
        "body": "\"wagpunkbits_kit\"",
        "description": " ※prefab ID: wagpunkbits_kit\n ※Name: Auto-Mat-O-Chanic\n ※Recipe: \n\t+ 1 x: Scrap/wagpunk_bits\n\t+ 1 x: Electrical Doodad/transistor\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:wagpunkbits_kit(ReverseSearch)": {
        "prefix": "p+Auto-Mat-O-Chanic",
        "body": "\"wagpunkbits_kit\"",
        "description": " ※prefab ID: wagpunkbits_kit\n ※Name: Auto-Mat-O-Chanic\n ※Recipe: \n\t+ 1 x: Scrap/wagpunk_bits\n\t+ 1 x: Electrical Doodad/transistor\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:scrapbook_page_fmt(ID Complete)": {
        "prefix": "p+scrapbook_page_fmt",
        "body": "\"scrapbook_page_fmt\"",
        "description": " ※prefab ID: scrapbook_page_fmt\n ※Name: {name} Scrapbook Page\n ※prefab Version: DST-632551 "
    },
    "prefab:scrapbook_page_fmt(ReverseSearch)": {
        "prefix": "p+{name} Scrapbook Page",
        "body": "\"scrapbook_page_fmt\"",
        "description": " ※prefab ID: scrapbook_page_fmt\n ※Name: {name} Scrapbook Page\n ※prefab Version: DST-632551 "
    },
    "prefab:walrus_tusk(ID Complete)": {
        "prefix": "p+walrus_tusk",
        "body": "\"walrus_tusk\"",
        "description": " ※prefab ID: walrus_tusk\n ※Name: Walrus Tusk\n ※prefab Version: DST-632551 "
    },
    "prefab:walrus_tusk(ReverseSearch)": {
        "prefix": "p+Walrus Tusk",
        "body": "\"walrus_tusk\"",
        "description": " ※prefab ID: walrus_tusk\n ※Name: Walrus Tusk\n ※prefab Version: DST-632551 "
    },
    "prefab:gunpowder(ID Complete)": {
        "prefix": "p+gunpowder",
        "body": "\"gunpowder\"",
        "description": " ※prefab ID: gunpowder\n ※Name: Gunpowder\n ※Recipe: \n\t+ 1 x: Rotten Egg/rottenegg\n\t+ 1 x: Charcoal/charcoal\n\t+ 1 x: Nitre/nitre\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:gunpowder(ReverseSearch)": {
        "prefix": "p+Gunpowder",
        "body": "\"gunpowder\"",
        "description": " ※prefab ID: gunpowder\n ※Name: Gunpowder\n ※Recipe: \n\t+ 1 x: Rotten Egg/rottenegg\n\t+ 1 x: Charcoal/charcoal\n\t+ 1 x: Nitre/nitre\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_22(ID Complete)": {
        "prefix": "p+trinket_22",
        "body": "\"trinket_22\"",
        "description": " ※prefab ID: trinket_22\n ※Name: Frayed Yarn\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_22(ReverseSearch)": {
        "prefix": "p+Frayed Yarn",
        "body": "\"trinket_22\"",
        "description": " ※prefab ID: trinket_22\n ※Name: Frayed Yarn\n ※prefab Version: DST-632551 "
    },
    "prefab:stash_map(ID Complete)": {
        "prefix": "p+stash_map",
        "body": "\"stash_map\"",
        "description": " ※prefab ID: stash_map\n ※Name: Pirate Map\n ※prefab Version: DST-632551 "
    },
    "prefab:stash_map(ReverseSearch)": {
        "prefix": "p+Pirate Map",
        "body": "\"stash_map\"",
        "description": " ※prefab ID: stash_map\n ※Name: Pirate Map\n ※prefab Version: DST-632551 "
    },
    "prefab:minifan(ID Complete)": {
        "prefix": "p+minifan",
        "body": "\"minifan\"",
        "description": " ※prefab ID: minifan\n ※Name: Whirly Fan\n ※Recipe: \n\t+ 3 x: Twigs/twigs\n\t+ 1 x: Petals/petals\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:minifan(ReverseSearch)": {
        "prefix": "p+Whirly Fan",
        "body": "\"minifan\"",
        "description": " ※prefab ID: minifan\n ※Name: Whirly Fan\n ※Recipe: \n\t+ 3 x: Twigs/twigs\n\t+ 1 x: Petals/petals\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:yotb_beefalo_doll_victorian(ID Complete)": {
        "prefix": "p+yotb_beefalo_doll_victorian",
        "body": "\"yotb_beefalo_doll_victorian\"",
        "description": " ※prefab ID: yotb_beefalo_doll_victorian\n ※Name: Victorian Beefalo Doll\n ※prefab Version: DST-632551 "
    },
    "prefab:yotb_beefalo_doll_victorian(ReverseSearch)": {
        "prefix": "p+Victorian Beefalo Doll",
        "body": "\"yotb_beefalo_doll_victorian\"",
        "description": " ※prefab ID: yotb_beefalo_doll_victorian\n ※Name: Victorian Beefalo Doll\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_catcoon_sketch(ID Complete)": {
        "prefix": "p+chesspiece_catcoon_sketch",
        "body": "\"chesspiece_catcoon_sketch\"",
        "description": " ※prefab ID: chesspiece_catcoon_sketch\n ※Name: Catcoon Figure Sketch\n ※Recipe: \n\t+ 8 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /CATCOONOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_catcoon_sketch(ReverseSearch)": {
        "prefix": "p+Catcoon Figure Sketch",
        "body": "\"chesspiece_catcoon_sketch\"",
        "description": " ※prefab ID: chesspiece_catcoon_sketch\n ※Name: Catcoon Figure Sketch\n ※Recipe: \n\t+ 8 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /CATCOONOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:voidcloth_kit(ID Complete)": {
        "prefix": "p+voidcloth_kit",
        "body": "\"voidcloth_kit\"",
        "description": " ※prefab ID: voidcloth_kit\n ※Name: Void Repair Kit\n ※Recipe: \n\t+ 1 x: Pure Horror/horrorfuel\n\t+ 1 x: Dark Tatters/voidcloth\n ※Required Tech: \n\t+ LV.2 : Shadowcraft/SHADOWFORGING\n ※prefab Version: DST-632551 "
    },
    "prefab:voidcloth_kit(ReverseSearch)": {
        "prefix": "p+Void Repair Kit",
        "body": "\"voidcloth_kit\"",
        "description": " ※prefab ID: voidcloth_kit\n ※Name: Void Repair Kit\n ※Recipe: \n\t+ 1 x: Pure Horror/horrorfuel\n\t+ 1 x: Dark Tatters/voidcloth\n ※Required Tech: \n\t+ LV.2 : Shadowcraft/SHADOWFORGING\n ※prefab Version: DST-632551 "
    },
    "prefab:honeyham(ID Complete)": {
        "prefix": "p+honeyham",
        "body": "\"honeyham\"",
        "description": " ※prefab ID: honeyham\n ※Name: Honey Ham\n ※prefab Version: DST-632551 "
    },
    "prefab:honeyham(ReverseSearch)": {
        "prefix": "p+Honey Ham",
        "body": "\"honeyham\"",
        "description": " ※prefab ID: honeyham\n ※Name: Honey Ham\n ※prefab Version: DST-632551 "
    },
    "prefab:cookiecutterhat(ID Complete)": {
        "prefix": "p+cookiecutterhat",
        "body": "\"cookiecutterhat\"",
        "description": " ※prefab ID: cookiecutterhat\n ※Name: Cookie Cutter Cap\n ※Recipe: \n\t+ 4 x: Cookie Cutter Shell/cookiecuttershell\n\t+ 1 x: Rope/rope\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:cookiecutterhat(ReverseSearch)": {
        "prefix": "p+Cookie Cutter Cap",
        "body": "\"cookiecutterhat\"",
        "description": " ※prefab ID: cookiecutterhat\n ※Name: Cookie Cutter Cap\n ※Recipe: \n\t+ 4 x: Cookie Cutter Shell/cookiecuttershell\n\t+ 1 x: Rope/rope\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:webber_spider_minion(ID Complete)": {
        "prefix": "p+webber_spider_minion",
        "body": "\"webber_spider_minion\"",
        "description": " ※prefab ID: webber_spider_minion\n ※Name: Baby Spider\n ※prefab Version: DST-632551 "
    },
    "prefab:webber_spider_minion(ReverseSearch)": {
        "prefix": "p+Baby Spider",
        "body": "\"webber_spider_minion\"",
        "description": " ※prefab ID: webber_spider_minion\n ※Name: Baby Spider\n ※prefab Version: DST-632551 "
    },
    "prefab:shovel_lunarplant(ID Complete)": {
        "prefix": "p+shovel_lunarplant",
        "body": "\"shovel_lunarplant\"",
        "description": " ※prefab ID: shovel_lunarplant\n ※Name: Brightshade Shoevel\n ※Recipe: \n\t+ 1 x: Pure Brilliance/purebrilliance\n\t+ 2 x: Brightshade Husk/lunarplant_husk\n ※Required Tech: \n\t+ LV.2 : Brightsmithy/LUNARFORGING\n ※prefab Version: DST-632551 "
    },
    "prefab:shovel_lunarplant(ReverseSearch)": {
        "prefix": "p+Brightshade Shoevel",
        "body": "\"shovel_lunarplant\"",
        "description": " ※prefab ID: shovel_lunarplant\n ※Name: Brightshade Shoevel\n ※Recipe: \n\t+ 1 x: Pure Brilliance/purebrilliance\n\t+ 2 x: Brightshade Husk/lunarplant_husk\n ※Required Tech: \n\t+ LV.2 : Brightsmithy/LUNARFORGING\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishinglure_spoon_brown(ID Complete)": {
        "prefix": "p+oceanfishinglure_spoon_brown",
        "body": "\"oceanfishinglure_spoon_brown\"",
        "description": " ※prefab ID: oceanfishinglure_spoon_brown\n ※Name: not used\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishinglure_spoon_brown(ReverseSearch)": {
        "prefix": "p+not used",
        "body": "\"oceanfishinglure_spoon_brown\"",
        "description": " ※prefab ID: oceanfishinglure_spoon_brown\n ※Name: not used\n ※prefab Version: DST-632551 "
    },
    "prefab:driftwood_log(ID Complete)": {
        "prefix": "p+driftwood_log",
        "body": "\"driftwood_log\"",
        "description": " ※prefab ID: driftwood_log\n ※Name: Driftwood Piece\n ※prefab Version: DST-632551 "
    },
    "prefab:driftwood_log(ReverseSearch)": {
        "prefix": "p+Driftwood Piece",
        "body": "\"driftwood_log\"",
        "description": " ※prefab ID: driftwood_log\n ※Name: Driftwood Piece\n ※prefab Version: DST-632551 "
    },
    "prefab:alterguardianhatshard(ID Complete)": {
        "prefix": "p+alterguardianhatshard",
        "body": "\"alterguardianhatshard\"",
        "description": " ※prefab ID: alterguardianhatshard\n ※Name: Enlightened Shard\n ※prefab Version: DST-632551 "
    },
    "prefab:alterguardianhatshard(ReverseSearch)": {
        "prefix": "p+Enlightened Shard",
        "body": "\"alterguardianhatshard\"",
        "description": " ※prefab ID: alterguardianhatshard\n ※Name: Enlightened Shard\n ※prefab Version: DST-632551 "
    },
    "prefab:scarecrow(ID Complete)": {
        "prefix": "p+scarecrow",
        "body": "\"scarecrow\"",
        "description": " ※prefab ID: scarecrow\n ※Name: Friendly Scarecrow\n ※Recipe: \n\t+ 1 x: Pumpkin/pumpkin\n\t+ 3 x: Boards/boards\n\t+ 3 x: Cut Grass/cutgrass\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:scarecrow(ReverseSearch)": {
        "prefix": "p+Friendly Scarecrow",
        "body": "\"scarecrow\"",
        "description": " ※prefab ID: scarecrow\n ※Name: Friendly Scarecrow\n ※Recipe: \n\t+ 1 x: Pumpkin/pumpkin\n\t+ 3 x: Boards/boards\n\t+ 3 x: Cut Grass/cutgrass\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:teamleader(ID Complete)": {
        "prefix": "p+teamleader",
        "body": "\"teamleader\"",
        "description": " ※prefab ID: teamleader\n ※Name: Team Leader\n ※prefab Version: DST-632551 "
    },
    "prefab:teamleader(ReverseSearch)": {
        "prefix": "p+Team Leader",
        "body": "\"teamleader\"",
        "description": " ※prefab ID: teamleader\n ※Name: Team Leader\n ※prefab Version: DST-632551 "
    },
    "prefab:pitchfork(ID Complete)": {
        "prefix": "p+pitchfork",
        "body": "\"pitchfork\"",
        "description": " ※prefab ID: pitchfork\n ※Name: Pitchfork\n ※Recipe: \n\t+ 2 x: Twigs/twigs\n\t+ 2 x: Flint/flint\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:pitchfork(ReverseSearch)": {
        "prefix": "p+Pitchfork",
        "body": "\"pitchfork\"",
        "description": " ※prefab ID: pitchfork\n ※Name: Pitchfork\n ※Recipe: \n\t+ 2 x: Twigs/twigs\n\t+ 2 x: Flint/flint\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:armorskeleton(ID Complete)": {
        "prefix": "p+armorskeleton",
        "body": "\"armorskeleton\"",
        "description": " ※prefab ID: armorskeleton\n ※Name: Bone Armor\n ※Recipe: \n\t+ 10 x: Bone Shards/boneshard\n\t+ 6 x: Nightmare Fuel/nightmarefuel\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:armorskeleton(ReverseSearch)": {
        "prefix": "p+Bone Armor",
        "body": "\"armorskeleton\"",
        "description": " ※prefab ID: armorskeleton\n ※Name: Bone Armor\n ※Recipe: \n\t+ 10 x: Bone Shards/boneshard\n\t+ 6 x: Nightmare Fuel/nightmarefuel\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:farm_plant_onion(ID Complete)": {
        "prefix": "p+farm_plant_onion",
        "body": "\"farm_plant_onion\"",
        "description": " ※prefab ID: farm_plant_onion\n ※Name: Onion Plant\n ※prefab Version: DST-632551 "
    },
    "prefab:farm_plant_onion(ReverseSearch)": {
        "prefix": "p+Onion Plant",
        "body": "\"farm_plant_onion\"",
        "description": " ※prefab ID: farm_plant_onion\n ※Name: Onion Plant\n ※prefab Version: DST-632551 "
    },
    "prefab:dustmeringue(ID Complete)": {
        "prefix": "p+dustmeringue",
        "body": "\"dustmeringue\"",
        "description": " ※prefab ID: dustmeringue\n ※Name: Amberosia\n ※prefab Version: DST-632551 "
    },
    "prefab:dustmeringue(ReverseSearch)": {
        "prefix": "p+Amberosia",
        "body": "\"dustmeringue\"",
        "description": " ※prefab ID: dustmeringue\n ※Name: Amberosia\n ※prefab Version: DST-632551 "
    },
    "prefab:halloweencandy_14(ID Complete)": {
        "prefix": "p+halloweencandy_14",
        "body": "\"halloweencandy_14\"",
        "description": " ※prefab ID: halloweencandy_14\n ※Name: Lava Pepper\n ※prefab Version: DST-632551 "
    },
    "prefab:halloweencandy_14(ReverseSearch)": {
        "prefix": "p+Lava Pepper",
        "body": "\"halloweencandy_14\"",
        "description": " ※prefab ID: halloweencandy_14\n ※Name: Lava Pepper\n ※prefab Version: DST-632551 "
    },
    "prefab:hutch_fishbowl(ID Complete)": {
        "prefix": "p+hutch_fishbowl",
        "body": "\"hutch_fishbowl\"",
        "description": " ※prefab ID: hutch_fishbowl\n ※Name: Star-sky\n ※prefab Version: DST-632551 "
    },
    "prefab:hutch_fishbowl(ReverseSearch)": {
        "prefix": "p+Star-sky",
        "body": "\"hutch_fishbowl\"",
        "description": " ※prefab ID: hutch_fishbowl\n ※Name: Star-sky\n ※prefab Version: DST-632551 "
    },
    "prefab:meatrack_hermit(ID Complete)": {
        "prefix": "p+meatrack_hermit",
        "body": "\"meatrack_hermit\"",
        "description": " ※prefab ID: meatrack_hermit\n ※Name: Drying Rack\n ※prefab Version: DST-632551 "
    },
    "prefab:meatrack_hermit(ReverseSearch)": {
        "prefix": "p+Drying Rack",
        "body": "\"meatrack_hermit\"",
        "description": " ※prefab ID: meatrack_hermit\n ※Name: Drying Rack\n ※prefab Version: DST-632551 "
    },
    "prefab:halloweencandy_8(ID Complete)": {
        "prefix": "p+halloweencandy_8",
        "body": "\"halloweencandy_8\"",
        "description": " ※prefab ID: halloweencandy_8\n ※Name: Ghost Pop\n ※prefab Version: DST-632551 "
    },
    "prefab:halloweencandy_8(ReverseSearch)": {
        "prefix": "p+Ghost Pop",
        "body": "\"halloweencandy_8\"",
        "description": " ※prefab ID: halloweencandy_8\n ※Name: Ghost Pop\n ※prefab Version: DST-632551 "
    },
    "prefab:shadowthrall_horns(ID Complete)": {
        "prefix": "p+shadowthrall_horns",
        "body": "\"shadowthrall_horns\"",
        "description": " ※prefab ID: shadowthrall_horns\n ※Name: Ink Blight\n ※prefab Version: DST-632551 "
    },
    "prefab:shadowthrall_horns(ReverseSearch)": {
        "prefix": "p+Ink Blight",
        "body": "\"shadowthrall_horns\"",
        "description": " ※prefab ID: shadowthrall_horns\n ※Name: Ink Blight\n ※prefab Version: DST-632551 "
    },
    "prefab:lobsterdinner(ID Complete)": {
        "prefix": "p+lobsterdinner",
        "body": "\"lobsterdinner\"",
        "description": " ※prefab ID: lobsterdinner\n ※Name: Lobster Dinner\n ※prefab Version: DST-632551 "
    },
    "prefab:lobsterdinner(ReverseSearch)": {
        "prefix": "p+Lobster Dinner",
        "body": "\"lobsterdinner\"",
        "description": " ※prefab ID: lobsterdinner\n ※Name: Lobster Dinner\n ※prefab Version: DST-632551 "
    },
    "prefab:mandrakesoup(ID Complete)": {
        "prefix": "p+mandrakesoup",
        "body": "\"mandrakesoup\"",
        "description": " ※prefab ID: mandrakesoup\n ※Name: Mandrake Soup\n ※prefab Version: DST-632551 "
    },
    "prefab:mandrakesoup(ReverseSearch)": {
        "prefix": "p+Mandrake Soup",
        "body": "\"mandrakesoup\"",
        "description": " ※prefab ID: mandrakesoup\n ※Name: Mandrake Soup\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishinglure_spoon_blue(ID Complete)": {
        "prefix": "p+oceanfishinglure_spoon_blue",
        "body": "\"oceanfishinglure_spoon_blue\"",
        "description": " ※prefab ID: oceanfishinglure_spoon_blue\n ※Name: Nightflyer Spoon\n ※Recipe: \n\t+ 2 x: Flint/flint\n\t+ 1 x: Blue Cap/blue_cap\n ※Required Tech: \n\t+ LV.1 : Fishing/FISHING\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishinglure_spoon_blue(ReverseSearch)": {
        "prefix": "p+Nightflyer Spoon",
        "body": "\"oceanfishinglure_spoon_blue\"",
        "description": " ※prefab ID: oceanfishinglure_spoon_blue\n ※Name: Nightflyer Spoon\n ※Recipe: \n\t+ 2 x: Flint/flint\n\t+ 1 x: Blue Cap/blue_cap\n ※Required Tech: \n\t+ LV.1 : Fishing/FISHING\n ※prefab Version: DST-632551 "
    },
    "prefab:support_pillar_dreadstone_complete(ID Complete)": {
        "prefix": "p+support_pillar_dreadstone_complete",
        "body": "\"support_pillar_dreadstone_complete\"",
        "description": " ※prefab ID: support_pillar_dreadstone_complete\n ※Name: Reinforced Dreadstone Pillar\n ※prefab Version: DST-632551 "
    },
    "prefab:support_pillar_dreadstone_complete(ReverseSearch)": {
        "prefix": "p+Reinforced Dreadstone Pillar",
        "body": "\"support_pillar_dreadstone_complete\"",
        "description": " ※prefab ID: support_pillar_dreadstone_complete\n ※Name: Reinforced Dreadstone Pillar\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_toadstool(ID Complete)": {
        "prefix": "p+chesspiece_toadstool",
        "body": "\"chesspiece_toadstool\"",
        "description": " ※prefab ID: chesspiece_toadstool\n ※Name: Toadstool Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_toadstool(ReverseSearch)": {
        "prefix": "p+Toadstool Figure",
        "body": "\"chesspiece_toadstool\"",
        "description": " ※prefab ID: chesspiece_toadstool\n ※Name: Toadstool Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:walrus_camp(ID Complete)": {
        "prefix": "p+walrus_camp",
        "body": "\"walrus_camp\"",
        "description": " ※prefab ID: walrus_camp\n ※Name: Walrus Camp\n ※prefab Version: DST-632551 "
    },
    "prefab:walrus_camp(ReverseSearch)": {
        "prefix": "p+Walrus Camp",
        "body": "\"walrus_camp\"",
        "description": " ※prefab ID: walrus_camp\n ※Name: Walrus Camp\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_pigeon(ID Complete)": {
        "prefix": "p+quagmire_pigeon",
        "body": "\"quagmire_pigeon\"",
        "description": " ※prefab ID: quagmire_pigeon\n ※Name: Pigeon\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_pigeon(ReverseSearch)": {
        "prefix": "p+Pigeon",
        "body": "\"quagmire_pigeon\"",
        "description": " ※prefab ID: quagmire_pigeon\n ※Name: Pigeon\n ※prefab Version: DST-632551 "
    },
    "prefab:costume_fool_body(ID Complete)": {
        "prefix": "p+costume_fool_body",
        "body": "\"costume_fool_body\"",
        "description": " ※prefab ID: costume_fool_body\n ※Name: Fool Costume\n ※prefab Version: DST-632551 "
    },
    "prefab:costume_fool_body(ReverseSearch)": {
        "prefix": "p+Fool Costume",
        "body": "\"costume_fool_body\"",
        "description": " ※prefab ID: costume_fool_body\n ※Name: Fool Costume\n ※prefab Version: DST-632551 "
    },
    "prefab:wathgrithr_shield(ID Complete)": {
        "prefix": "p+wathgrithr_shield",
        "body": "\"wathgrithr_shield\"",
        "description": " ※prefab ID: wathgrithr_shield\n ※Name: Battle Rönd\n ※Recipe: \n\t+ 4 x: Gold Nugget/goldnugget\n\t+ 3 x: Beefalo Wool/beefalowool\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:wathgrithr_shield(ReverseSearch)": {
        "prefix": "p+Battle Rönd",
        "body": "\"wathgrithr_shield\"",
        "description": " ※prefab ID: wathgrithr_shield\n ※Name: Battle Rönd\n ※Recipe: \n\t+ 4 x: Gold Nugget/goldnugget\n\t+ 3 x: Beefalo Wool/beefalowool\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:marblebean(ID Complete)": {
        "prefix": "p+marblebean",
        "body": "\"marblebean\"",
        "description": " ※prefab ID: marblebean\n ※Name: Marble Bean\n ※Recipe: \n\t+ 1 x: Marble/marble\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:marblebean(ReverseSearch)": {
        "prefix": "p+Marble Bean",
        "body": "\"marblebean\"",
        "description": " ※prefab ID: marblebean\n ※Name: Marble Bean\n ※Recipe: \n\t+ 1 x: Marble/marble\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:pigelitefighter1(ID Complete)": {
        "prefix": "p+pigelitefighter1",
        "body": "\"pigelitefighter1\"",
        "description": " ※prefab ID: pigelitefighter1\n ※Name: Wade\n ※prefab Version: DST-632551 "
    },
    "prefab:pigelitefighter1(ReverseSearch)": {
        "prefix": "p+Wade",
        "body": "\"pigelitefighter1\"",
        "description": " ※prefab ID: pigelitefighter1\n ※Name: Wade\n ※prefab Version: DST-632551 "
    },
    "prefab:bramblefx(ID Complete)": {
        "prefix": "p+bramblefx",
        "body": "\"bramblefx\"",
        "description": " ※prefab ID: bramblefx\n ※Name: Thorns\n ※prefab Version: DST-632551 "
    },
    "prefab:bramblefx(ReverseSearch)": {
        "prefix": "p+Thorns",
        "body": "\"bramblefx\"",
        "description": " ※prefab ID: bramblefx\n ※Name: Thorns\n ※prefab Version: DST-632551 "
    },
    "prefab:oar_driftwood(ID Complete)": {
        "prefix": "p+oar_driftwood",
        "body": "\"oar_driftwood\"",
        "description": " ※prefab ID: oar_driftwood\n ※Name: Driftwood Oar\n ※Recipe: \n\t+ 1 x: Driftwood Piece/driftwood_log\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:oar_driftwood(ReverseSearch)": {
        "prefix": "p+Driftwood Oar",
        "body": "\"oar_driftwood\"",
        "description": " ※prefab ID: oar_driftwood\n ※Name: Driftwood Oar\n ※Recipe: \n\t+ 1 x: Driftwood Piece/driftwood_log\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:wobster_sheller_land(ID Complete)": {
        "prefix": "p+wobster_sheller_land",
        "body": "\"wobster_sheller_land\"",
        "description": " ※prefab ID: wobster_sheller_land\n ※Name: Wobster\n ※prefab Version: DST-632551 "
    },
    "prefab:wobster_sheller_land(ReverseSearch)": {
        "prefix": "p+Wobster",
        "body": "\"wobster_sheller_land\"",
        "description": " ※prefab ID: wobster_sheller_land\n ※Name: Wobster\n ※prefab Version: DST-632551 "
    },
    "prefab:battlesong_shadowaligned(ID Complete)": {
        "prefix": "p+battlesong_shadowaligned",
        "body": "\"battlesong_shadowaligned\"",
        "description": " ※prefab ID: battlesong_shadowaligned\n ※Name: Dark Lament\n ※Recipe: \n\t+ 1 x: Papyrus/papyrus\n\t+ 1 x: Feather Pencil/featherpencil\n\t+ 3 x: Pure Horror/horrorfuel\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:battlesong_shadowaligned(ReverseSearch)": {
        "prefix": "p+Dark Lament",
        "body": "\"battlesong_shadowaligned\"",
        "description": " ※prefab ID: battlesong_shadowaligned\n ※Name: Dark Lament\n ※Recipe: \n\t+ 1 x: Papyrus/papyrus\n\t+ 1 x: Feather Pencil/featherpencil\n\t+ 3 x: Pure Horror/horrorfuel\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:trap_teeth_maxwell(ID Complete)": {
        "prefix": "p+trap_teeth_maxwell",
        "body": "\"trap_teeth_maxwell\"",
        "description": " ※prefab ID: trap_teeth_maxwell\n ※Name: Maxwell's Tooth Trap\n ※prefab Version: DST-632551 "
    },
    "prefab:trap_teeth_maxwell(ReverseSearch)": {
        "prefix": "p+Maxwell's Tooth Trap",
        "body": "\"trap_teeth_maxwell\"",
        "description": " ※prefab ID: trap_teeth_maxwell\n ※Name: Maxwell's Tooth Trap\n ※prefab Version: DST-632551 "
    },
    "prefab:shadowthrall_wings(ID Complete)": {
        "prefix": "p+shadowthrall_wings",
        "body": "\"shadowthrall_wings\"",
        "description": " ※prefab ID: shadowthrall_wings\n ※Name: Ink Blight\n ※prefab Version: DST-632551 "
    },
    "prefab:shadowthrall_wings(ReverseSearch)": {
        "prefix": "p+Ink Blight",
        "body": "\"shadowthrall_wings\"",
        "description": " ※prefab ID: shadowthrall_wings\n ※Name: Ink Blight\n ※prefab Version: DST-632551 "
    },
    "prefab:migration_portal(ID Complete)": {
        "prefix": "p+migration_portal",
        "body": "\"migration_portal\"",
        "description": " ※prefab ID: migration_portal\n ※Name: Friend-O-Matic Portal\n ※prefab Version: DST-632551 "
    },
    "prefab:migration_portal(ReverseSearch)": {
        "prefix": "p+Friend-O-Matic Portal",
        "body": "\"migration_portal\"",
        "description": " ※prefab ID: migration_portal\n ※Name: Friend-O-Matic Portal\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_grill_small(ID Complete)": {
        "prefix": "p+quagmire_grill_small",
        "body": "\"quagmire_grill_small\"",
        "description": " ※prefab ID: quagmire_grill_small\n ※Name: Small Grill\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_grill_small(ReverseSearch)": {
        "prefix": "p+Small Grill",
        "body": "\"quagmire_grill_small\"",
        "description": " ※prefab ID: quagmire_grill_small\n ※Name: Small Grill\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishingbobber_goose(ID Complete)": {
        "prefix": "p+oceanfishingbobber_goose",
        "body": "\"oceanfishingbobber_goose\"",
        "description": " ※prefab ID: oceanfishingbobber_goose\n ※Name: Down Quill Float\n ※Recipe: \n\t+ 1 x: Down Feather/goose_feather\n ※Required Tech: \n\t+ LV.1 : Fishing/FISHING\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishingbobber_goose(ReverseSearch)": {
        "prefix": "p+Down Quill Float",
        "body": "\"oceanfishingbobber_goose\"",
        "description": " ※prefab ID: oceanfishingbobber_goose\n ※Name: Down Quill Float\n ※Recipe: \n\t+ 1 x: Down Feather/goose_feather\n ※Required Tech: \n\t+ LV.1 : Fishing/FISHING\n ※prefab Version: DST-632551 "
    },
    "prefab:pumpkin_oversized(ID Complete)": {
        "prefix": "p+pumpkin_oversized",
        "body": "\"pumpkin_oversized\"",
        "description": " ※prefab ID: pumpkin_oversized\n ※Name: Giant Pumpkin\n ※prefab Version: DST-632551 "
    },
    "prefab:pumpkin_oversized(ReverseSearch)": {
        "prefix": "p+Giant Pumpkin",
        "body": "\"pumpkin_oversized\"",
        "description": " ※prefab ID: pumpkin_oversized\n ※Name: Giant Pumpkin\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_eyecirclethat(ID Complete)": {
        "prefix": "p+lavaarena_eyecirclethat",
        "body": "\"lavaarena_eyecirclethat\"",
        "description": " ※prefab ID: lavaarena_eyecirclethat\n ※Name: Clairvoyant Crown\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_eyecirclethat(ReverseSearch)": {
        "prefix": "p+Clairvoyant Crown",
        "body": "\"lavaarena_eyecirclethat\"",
        "description": " ※prefab ID: lavaarena_eyecirclethat\n ※Name: Clairvoyant Crown\n ※prefab Version: DST-632551 "
    },
    "prefab:yotc_carrat_gym_speed_item(ID Complete)": {
        "prefix": "p+yotc_carrat_gym_speed_item",
        "body": "\"yotc_carrat_gym_speed_item\"",
        "description": " ※prefab ID: yotc_carrat_gym_speed_item\n ※Name: Speed Gym Kit\n ※Recipe: \n\t+ 4 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /CARRATOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:yotc_carrat_gym_speed_item(ReverseSearch)": {
        "prefix": "p+Speed Gym Kit",
        "body": "\"yotc_carrat_gym_speed_item\"",
        "description": " ※prefab ID: yotc_carrat_gym_speed_item\n ※Name: Speed Gym Kit\n ※Recipe: \n\t+ 4 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /CARRATOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:yotb_pattern_fragment_2(ID Complete)": {
        "prefix": "p+yotb_pattern_fragment_2",
        "body": "\"yotb_pattern_fragment_2\"",
        "description": " ※prefab ID: yotb_pattern_fragment_2\n ※Name: Formal Pattern Scrap\n ※Recipe: \n\t+ 5 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /BEEFOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:yotb_pattern_fragment_2(ReverseSearch)": {
        "prefix": "p+Formal Pattern Scrap",
        "body": "\"yotb_pattern_fragment_2\"",
        "description": " ※prefab ID: yotb_pattern_fragment_2\n ※Name: Formal Pattern Scrap\n ※Recipe: \n\t+ 5 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /BEEFOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_medium_4_inv(ID Complete)": {
        "prefix": "p+oceanfish_medium_4_inv",
        "body": "\"oceanfish_medium_4_inv\"",
        "description": " ※prefab ID: oceanfish_medium_4_inv\n ※Name: Black Catfish\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_medium_4_inv(ReverseSearch)": {
        "prefix": "p+Black Catfish",
        "body": "\"oceanfish_medium_4_inv\"",
        "description": " ※prefab ID: oceanfish_medium_4_inv\n ※Name: Black Catfish\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_mosaic_grey(ID Complete)": {
        "prefix": "p+turf_mosaic_grey",
        "body": "\"turf_mosaic_grey\"",
        "description": " ※prefab ID: turf_mosaic_grey\n ※Name: Grey Mosaic Flooring\n ※Recipe: \n\t+ 1 x: Marble/marble\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_mosaic_grey(ReverseSearch)": {
        "prefix": "p+Grey Mosaic Flooring",
        "body": "\"turf_mosaic_grey\"",
        "description": " ※prefab ID: turf_mosaic_grey\n ※Name: Grey Mosaic Flooring\n ※Recipe: \n\t+ 1 x: Marble/marble\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_005(ID Complete)": {
        "prefix": "p+quagmire_food_005",
        "body": "\"quagmire_food_005\"",
        "description": " ※prefab ID: quagmire_food_005\n ※Name: Fish Stew\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_005(ReverseSearch)": {
        "prefix": "p+Fish Stew",
        "body": "\"quagmire_food_005\"",
        "description": " ※prefab ID: quagmire_food_005\n ※Name: Fish Stew\n ※prefab Version: DST-632551 "
    },
    "prefab:lutefisk(ID Complete)": {
        "prefix": "p+lutefisk",
        "body": "\"lutefisk\"",
        "description": " ※prefab ID: lutefisk\n ※Name: Lutefisk\n ※prefab Version: DST-632551 "
    },
    "prefab:lutefisk(ReverseSearch)": {
        "prefix": "p+Lutefisk",
        "body": "\"lutefisk\"",
        "description": " ※prefab ID: lutefisk\n ※Name: Lutefisk\n ※prefab Version: DST-632551 "
    },
    "prefab:halloweencandy_7(ID Complete)": {
        "prefix": "p+halloweencandy_7",
        "body": "\"halloweencandy_7\"",
        "description": " ※prefab ID: halloweencandy_7\n ※Name: Raisins\n ※prefab Version: DST-632551 "
    },
    "prefab:halloweencandy_7(ReverseSearch)": {
        "prefix": "p+Raisins",
        "body": "\"halloweencandy_7\"",
        "description": " ※prefab ID: halloweencandy_7\n ※Name: Raisins\n ※prefab Version: DST-632551 "
    },
    "prefab:acidrain(ID Complete)": {
        "prefix": "p+acidrain",
        "body": "\"acidrain\"",
        "description": " ※prefab ID: acidrain\n ※Name: Acid Rain\n ※prefab Version: DST-632551 "
    },
    "prefab:acidrain(ReverseSearch)": {
        "prefix": "p+Acid Rain",
        "body": "\"acidrain\"",
        "description": " ※prefab ID: acidrain\n ※Name: Acid Rain\n ※prefab Version: DST-632551 "
    },
    "prefab:support_pillar(ID Complete)": {
        "prefix": "p+support_pillar",
        "body": "\"support_pillar\"",
        "description": " ※prefab ID: support_pillar\n ※Name: Support Pillar\n ※prefab Version: DST-632551 "
    },
    "prefab:support_pillar(ReverseSearch)": {
        "prefix": "p+Support Pillar",
        "body": "\"support_pillar\"",
        "description": " ※prefab ID: support_pillar\n ※Name: Support Pillar\n ※prefab Version: DST-632551 "
    },
    "prefab:moon_altar_ward(ID Complete)": {
        "prefix": "p+moon_altar_ward",
        "body": "\"moon_altar_ward\"",
        "description": " ※prefab ID: moon_altar_ward\n ※Name: Celestial Sanctum Ward\n ※prefab Version: DST-632551 "
    },
    "prefab:moon_altar_ward(ReverseSearch)": {
        "prefix": "p+Celestial Sanctum Ward",
        "body": "\"moon_altar_ward\"",
        "description": " ※prefab ID: moon_altar_ward\n ※Name: Celestial Sanctum Ward\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalgame_puckdrop_station(ID Complete)": {
        "prefix": "p+carnivalgame_puckdrop_station",
        "body": "\"carnivalgame_puckdrop_station\"",
        "description": " ※prefab ID: carnivalgame_puckdrop_station\n ※Name: Birdhouse Ball Drop\n ※Recipe: \n\t+ 1 x: Birdhouse Ball Drop Kit/carnivalgame_puckdrop_kit\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalgame_puckdrop_station(ReverseSearch)": {
        "prefix": "p+Birdhouse Ball Drop",
        "body": "\"carnivalgame_puckdrop_station\"",
        "description": " ※prefab ID: carnivalgame_puckdrop_station\n ※Name: Birdhouse Ball Drop\n ※Recipe: \n\t+ 1 x: Birdhouse Ball Drop Kit/carnivalgame_puckdrop_kit\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:armorwagpunk(ID Complete)": {
        "prefix": "p+armorwagpunk",
        "body": "\"armorwagpunk\"",
        "description": " ※prefab ID: armorwagpunk\n ※Name: W.A.R.B.I.S. Armor\n ※Recipe: \n\t+ 8 x: Scrap/wagpunk_bits\n\t+ 3 x: Electrical Doodad/transistor\n\t+ 1 x: Enlightened Shard/alterguardianhatshard\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:armorwagpunk(ReverseSearch)": {
        "prefix": "p+W.A.R.B.I.S. Armor",
        "body": "\"armorwagpunk\"",
        "description": " ※prefab ID: armorwagpunk\n ※Name: W.A.R.B.I.S. Armor\n ※Recipe: \n\t+ 8 x: Scrap/wagpunk_bits\n\t+ 3 x: Electrical Doodad/transistor\n\t+ 1 x: Enlightened Shard/alterguardianhatshard\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:pocketwatch_portal_entrance(ID Complete)": {
        "prefix": "p+pocketwatch_portal_entrance",
        "body": "\"pocketwatch_portal_entrance\"",
        "description": " ※prefab ID: pocketwatch_portal_entrance\n ※Name: Time Rift\n ※prefab Version: DST-632551 "
    },
    "prefab:pocketwatch_portal_entrance(ReverseSearch)": {
        "prefix": "p+Time Rift",
        "body": "\"pocketwatch_portal_entrance\"",
        "description": " ※prefab ID: pocketwatch_portal_entrance\n ※Name: Time Rift\n ※prefab Version: DST-632551 "
    },
    "prefab:trap(ID Complete)": {
        "prefix": "p+trap",
        "body": "\"trap\"",
        "description": " ※prefab ID: trap\n ※Name: Trap\n ※Recipe: \n\t+ 2 x: Twigs/twigs\n\t+ 6 x: Cut Grass/cutgrass\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:trap(ReverseSearch)": {
        "prefix": "p+Trap",
        "body": "\"trap\"",
        "description": " ※prefab ID: trap\n ※Name: Trap\n ※Recipe: \n\t+ 2 x: Twigs/twigs\n\t+ 6 x: Cut Grass/cutgrass\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:book_research_station(ID Complete)": {
        "prefix": "p+book_research_station",
        "body": "\"book_research_station\"",
        "description": " ※prefab ID: book_research_station\n ※Name: The Everything Encyclopedia\n ※Recipe: \n\t+ 2 x: Papyrus/papyrus\n\t+ 1 x: Electrical Doodad/transistor\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:book_research_station(ReverseSearch)": {
        "prefix": "p+The Everything Encyclopedia",
        "body": "\"book_research_station\"",
        "description": " ※prefab ID: book_research_station\n ※Name: The Everything Encyclopedia\n ※Recipe: \n\t+ 2 x: Papyrus/papyrus\n\t+ 1 x: Electrical Doodad/transistor\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:spear_wathgrithr_lightning_charged(ID Complete)": {
        "prefix": "p+spear_wathgrithr_lightning_charged",
        "body": "\"spear_wathgrithr_lightning_charged\"",
        "description": " ※prefab ID: spear_wathgrithr_lightning_charged\n ※Name: Charged Elding Spear\n ※prefab Version: DST-632551 "
    },
    "prefab:spear_wathgrithr_lightning_charged(ReverseSearch)": {
        "prefix": "p+Charged Elding Spear",
        "body": "\"spear_wathgrithr_lightning_charged\"",
        "description": " ※prefab ID: spear_wathgrithr_lightning_charged\n ※Name: Charged Elding Spear\n ※prefab Version: DST-632551 "
    },
    "prefab:bodypillow_steelwool(ID Complete)": {
        "prefix": "p+bodypillow_steelwool",
        "body": "\"bodypillow_steelwool\"",
        "description": " ※prefab ID: bodypillow_steelwool\n ※Name: Steel Wool Pillow Armor\n ※Recipe: \n\t+ 6 x: Lucky Gold Nugget/lucky_goldnugget\n\t+ 2 x: Silk/silk\n\t+ 2 x: Steel Wool/steelwool\n ※Required Tech: \n\t+ LV.3 : /RABBITOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:bodypillow_steelwool(ReverseSearch)": {
        "prefix": "p+Steel Wool Pillow Armor",
        "body": "\"bodypillow_steelwool\"",
        "description": " ※prefab ID: bodypillow_steelwool\n ※Name: Steel Wool Pillow Armor\n ※Recipe: \n\t+ 6 x: Lucky Gold Nugget/lucky_goldnugget\n\t+ 2 x: Silk/silk\n\t+ 2 x: Steel Wool/steelwool\n ※Required Tech: \n\t+ LV.3 : /RABBITOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:bearger_fur(ID Complete)": {
        "prefix": "p+bearger_fur",
        "body": "\"bearger_fur\"",
        "description": " ※prefab ID: bearger_fur\n ※Name: Thick Fur\n ※Recipe: \n\t+ 90 x: Fur Tuft/furtuft\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:bearger_fur(ReverseSearch)": {
        "prefix": "p+Thick Fur",
        "body": "\"bearger_fur\"",
        "description": " ※prefab ID: bearger_fur\n ※Name: Thick Fur\n ※Recipe: \n\t+ 90 x: Fur Tuft/furtuft\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:spoiled_fish_small(ID Complete)": {
        "prefix": "p+spoiled_fish_small",
        "body": "\"spoiled_fish_small\"",
        "description": " ※prefab ID: spoiled_fish_small\n ※Name: Spoiled Fish Morsel\n ※prefab Version: DST-632551 "
    },
    "prefab:spoiled_fish_small(ReverseSearch)": {
        "prefix": "p+Spoiled Fish Morsel",
        "body": "\"spoiled_fish_small\"",
        "description": " ※prefab ID: spoiled_fish_small\n ※Name: Spoiled Fish Morsel\n ※prefab Version: DST-632551 "
    },
    "prefab:woodie(ID Complete)": {
        "prefix": "p+woodie",
        "body": "\"woodie\"",
        "description": " ※prefab ID: woodie\n ※Name: Woodie\n ※prefab Version: DST-632551 "
    },
    "prefab:woodie(ReverseSearch)": {
        "prefix": "p+Woodie",
        "body": "\"woodie\"",
        "description": " ※prefab ID: woodie\n ※Name: Woodie\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_crabtrap(ID Complete)": {
        "prefix": "p+quagmire_crabtrap",
        "body": "\"quagmire_crabtrap\"",
        "description": " ※prefab ID: quagmire_crabtrap\n ※Name: Crab Trap\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_crabtrap(ReverseSearch)": {
        "prefix": "p+Crab Trap",
        "body": "\"quagmire_crabtrap\"",
        "description": " ※prefab ID: quagmire_crabtrap\n ※Name: Crab Trap\n ※prefab Version: DST-632551 "
    },
    "prefab:cursed_monkey_token(ID Complete)": {
        "prefix": "p+cursed_monkey_token",
        "body": "\"cursed_monkey_token\"",
        "description": " ※prefab ID: cursed_monkey_token\n ※Name: Accursed Trinket\n ※prefab Version: DST-632551 "
    },
    "prefab:cursed_monkey_token(ReverseSearch)": {
        "prefix": "p+Accursed Trinket",
        "body": "\"cursed_monkey_token\"",
        "description": " ※prefab ID: cursed_monkey_token\n ※Name: Accursed Trinket\n ※prefab Version: DST-632551 "
    },
    "prefab:hareball(ID Complete)": {
        "prefix": "p+hareball",
        "body": "\"hareball\"",
        "description": " ※prefab ID: hareball\n ※Name: Hare Ball\n ※prefab Version: DST-632551 "
    },
    "prefab:hareball(ReverseSearch)": {
        "prefix": "p+Hare Ball",
        "body": "\"hareball\"",
        "description": " ※prefab ID: hareball\n ※Name: Hare Ball\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_006(ID Complete)": {
        "prefix": "p+quagmire_food_006",
        "body": "\"quagmire_food_006\"",
        "description": " ※prefab ID: quagmire_food_006\n ※Name: Turnip Cake\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_006(ReverseSearch)": {
        "prefix": "p+Turnip Cake",
        "body": "\"quagmire_food_006\"",
        "description": " ※prefab ID: quagmire_food_006\n ※Name: Turnip Cake\n ※prefab Version: DST-632551 "
    },
    "prefab:eggplant(ID Complete)": {
        "prefix": "p+eggplant",
        "body": "\"eggplant\"",
        "description": " ※prefab ID: eggplant\n ※Name: Eggplant\n ※prefab Version: DST-632551 "
    },
    "prefab:eggplant(ReverseSearch)": {
        "prefix": "p+Eggplant",
        "body": "\"eggplant\"",
        "description": " ※prefab ID: eggplant\n ※Name: Eggplant\n ※prefab Version: DST-632551 "
    },
    "prefab:pomegranate(ID Complete)": {
        "prefix": "p+pomegranate",
        "body": "\"pomegranate\"",
        "description": " ※prefab ID: pomegranate\n ※Name: Pomegranate\n ※prefab Version: DST-632551 "
    },
    "prefab:pomegranate(ReverseSearch)": {
        "prefix": "p+Pomegranate",
        "body": "\"pomegranate\"",
        "description": " ※prefab ID: pomegranate\n ※Name: Pomegranate\n ※prefab Version: DST-632551 "
    },
    "prefab:gelblob_storage_kit(ID Complete)": {
        "prefix": "p+gelblob_storage_kit",
        "body": "\"gelblob_storage_kit\"",
        "description": " ※prefab ID: gelblob_storage_kit\n ※Name: Icker Preserve Kit\n ※Recipe: \n\t+ 3 x: Icker Jar/gelblob_bottle\n\t+ 5 x: Dreadstone/dreadstone\n ※Required Tech: \n\t+ LV.2 : Shadowcraft/SHADOWFORGING\n ※prefab Version: DST-632551 "
    },
    "prefab:gelblob_storage_kit(ReverseSearch)": {
        "prefix": "p+Icker Preserve Kit",
        "body": "\"gelblob_storage_kit\"",
        "description": " ※prefab ID: gelblob_storage_kit\n ※Name: Icker Preserve Kit\n ※Recipe: \n\t+ 3 x: Icker Jar/gelblob_bottle\n\t+ 5 x: Dreadstone/dreadstone\n ※Required Tech: \n\t+ LV.2 : Shadowcraft/SHADOWFORGING\n ※prefab Version: DST-632551 "
    },
    "prefab:smallguard_alterguardian_projectile(ID Complete)": {
        "prefix": "p+smallguard_alterguardian_projectile",
        "body": "\"smallguard_alterguardian_projectile\"",
        "description": " ※prefab ID: smallguard_alterguardian_projectile\n ※Name: Minor Gestalt\n ※prefab Version: DST-632551 "
    },
    "prefab:smallguard_alterguardian_projectile(ReverseSearch)": {
        "prefix": "p+Minor Gestalt",
        "body": "\"smallguard_alterguardian_projectile\"",
        "description": " ※prefab ID: smallguard_alterguardian_projectile\n ※Name: Minor Gestalt\n ※prefab Version: DST-632551 "
    },
    "prefab:fire(ID Complete)": {
        "prefix": "p+fire",
        "body": "\"fire\"",
        "description": " ※prefab ID: fire\n ※Name: Fire\n ※prefab Version: DST-632551 "
    },
    "prefab:fire(ReverseSearch)": {
        "prefix": "p+Fire",
        "body": "\"fire\"",
        "description": " ※prefab ID: fire\n ※Name: Fire\n ※prefab Version: DST-632551 "
    },
    "prefab:bernie_big(ID Complete)": {
        "prefix": "p+bernie_big",
        "body": "\"bernie_big\"",
        "description": " ※prefab ID: bernie_big\n ※Name: BERNIE!\n ※prefab Version: DST-632551 "
    },
    "prefab:bernie_big(ReverseSearch)": {
        "prefix": "p+BERNIE!",
        "body": "\"bernie_big\"",
        "description": " ※prefab ID: bernie_big\n ※Name: BERNIE!\n ※prefab Version: DST-632551 "
    },
    "prefab:blackflag(ID Complete)": {
        "prefix": "p+blackflag",
        "body": "\"blackflag\"",
        "description": " ※prefab ID: blackflag\n ※Name: Black Flag\n ※prefab Version: DST-632551 "
    },
    "prefab:blackflag(ReverseSearch)": {
        "prefix": "p+Black Flag",
        "body": "\"blackflag\"",
        "description": " ※prefab ID: blackflag\n ※Name: Black Flag\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_casseroledish(ID Complete)": {
        "prefix": "p+quagmire_casseroledish",
        "body": "\"quagmire_casseroledish\"",
        "description": " ※prefab ID: quagmire_casseroledish\n ※Name: Large Casserole Dish\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_casseroledish(ReverseSearch)": {
        "prefix": "p+Large Casserole Dish",
        "body": "\"quagmire_casseroledish\"",
        "description": " ※prefab ID: quagmire_casseroledish\n ※Name: Large Casserole Dish\n ※prefab Version: DST-632551 "
    },
    "prefab:treegrowthsolution(ID Complete)": {
        "prefix": "p+treegrowthsolution",
        "body": "\"treegrowthsolution\"",
        "description": " ※prefab ID: treegrowthsolution\n ※Name: Tree Jam\n ※Recipe: \n\t+ 2 x: Fig/fig\n\t+ 1 x: Glommer's Goop/glommerfuel\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:treegrowthsolution(ReverseSearch)": {
        "prefix": "p+Tree Jam",
        "body": "\"treegrowthsolution\"",
        "description": " ※prefab ID: treegrowthsolution\n ※Name: Tree Jam\n ※Recipe: \n\t+ 2 x: Fig/fig\n\t+ 1 x: Glommer's Goop/glommerfuel\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:roastturkey(ID Complete)": {
        "prefix": "p+roastturkey",
        "body": "\"roastturkey\"",
        "description": " ※prefab ID: roastturkey\n ※Name: Roasted Turkey\n ※prefab Version: DST-632551 "
    },
    "prefab:roastturkey(ReverseSearch)": {
        "prefix": "p+Roasted Turkey",
        "body": "\"roastturkey\"",
        "description": " ※prefab ID: roastturkey\n ※Name: Roasted Turkey\n ※prefab Version: DST-632551 "
    },
    "prefab:arrowsign_panel(ID Complete)": {
        "prefix": "p+arrowsign_panel",
        "body": "\"arrowsign_panel\"",
        "description": " ※prefab ID: arrowsign_panel\n ※Name: Directional Sign\n ※prefab Version: DST-632551 "
    },
    "prefab:arrowsign_panel(ReverseSearch)": {
        "prefix": "p+Directional Sign",
        "body": "\"arrowsign_panel\"",
        "description": " ※prefab ID: arrowsign_panel\n ※Name: Directional Sign\n ※prefab Version: DST-632551 "
    },
    "prefab:costume_doll_body(ID Complete)": {
        "prefix": "p+costume_doll_body",
        "body": "\"costume_doll_body\"",
        "description": " ※prefab ID: costume_doll_body\n ※Name: Doll Costume\n ※prefab Version: DST-632551 "
    },
    "prefab:costume_doll_body(ReverseSearch)": {
        "prefix": "p+Doll Costume",
        "body": "\"costume_doll_body\"",
        "description": " ※prefab ID: costume_doll_body\n ※Name: Doll Costume\n ※prefab Version: DST-632551 "
    },
    "prefab:carnival_seedpacket(ID Complete)": {
        "prefix": "p+carnival_seedpacket",
        "body": "\"carnival_seedpacket\"",
        "description": " ※prefab ID: carnival_seedpacket\n ※Name: Seed Clusters\n ※Recipe: \n\t+ 12 x: Prize Tickets/carnival_prizeticket\n ※Required Tech: \n\t+ LV.1 : Trinket Trove/CARNIVAL_PRIZESHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:carnival_seedpacket(ReverseSearch)": {
        "prefix": "p+Seed Clusters",
        "body": "\"carnival_seedpacket\"",
        "description": " ※prefab ID: carnival_seedpacket\n ※Name: Seed Clusters\n ※Recipe: \n\t+ 12 x: Prize Tickets/carnival_prizeticket\n ※Required Tech: \n\t+ LV.1 : Trinket Trove/CARNIVAL_PRIZESHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_16(ID Complete)": {
        "prefix": "p+trinket_16",
        "body": "\"trinket_16\"",
        "description": " ※prefab ID: trinket_16\n ※Name: Black Bishop\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_16(ReverseSearch)": {
        "prefix": "p+Black Bishop",
        "body": "\"trinket_16\"",
        "description": " ※prefab ID: trinket_16\n ※Name: Black Bishop\n ※prefab Version: DST-632551 "
    },
    "prefab:butter(ID Complete)": {
        "prefix": "p+butter",
        "body": "\"butter\"",
        "description": " ※prefab ID: butter\n ※Name: Butter\n ※prefab Version: DST-632551 "
    },
    "prefab:butter(ReverseSearch)": {
        "prefix": "p+Butter",
        "body": "\"butter\"",
        "description": " ※prefab ID: butter\n ※Name: Butter\n ※prefab Version: DST-632551 "
    },
    "prefab:tomato_oversized_rotten(ID Complete)": {
        "prefix": "p+tomato_oversized_rotten",
        "body": "\"tomato_oversized_rotten\"",
        "description": " ※prefab ID: tomato_oversized_rotten\n ※Name: Giant Rotting Toma Root\n ※prefab Version: DST-632551 "
    },
    "prefab:tomato_oversized_rotten(ReverseSearch)": {
        "prefix": "p+Giant Rotting Toma Root",
        "body": "\"tomato_oversized_rotten\"",
        "description": " ※prefab ID: tomato_oversized_rotten\n ※Name: Giant Rotting Toma Root\n ※prefab Version: DST-632551 "
    },
    "prefab:watermelonhat(ID Complete)": {
        "prefix": "p+watermelonhat",
        "body": "\"watermelonhat\"",
        "description": " ※prefab ID: watermelonhat\n ※Name: Fashion Melon\n ※Recipe: \n\t+ 1 x: Watermelon/watermelon\n\t+ 3 x: Twigs/twigs\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:watermelonhat(ReverseSearch)": {
        "prefix": "p+Fashion Melon",
        "body": "\"watermelonhat\"",
        "description": " ※prefab ID: watermelonhat\n ※Name: Fashion Melon\n ※Recipe: \n\t+ 1 x: Watermelon/watermelon\n\t+ 3 x: Twigs/twigs\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:moon_tree_blossom(ID Complete)": {
        "prefix": "p+moon_tree_blossom",
        "body": "\"moon_tree_blossom\"",
        "description": " ※prefab ID: moon_tree_blossom\n ※Name: Lune Tree Blossom\n ※prefab Version: DST-632551 "
    },
    "prefab:moon_tree_blossom(ReverseSearch)": {
        "prefix": "p+Lune Tree Blossom",
        "body": "\"moon_tree_blossom\"",
        "description": " ※prefab ID: moon_tree_blossom\n ※Name: Lune Tree Blossom\n ※prefab Version: DST-632551 "
    },
    "prefab:yotr_fightring_kit(ID Complete)": {
        "prefix": "p+yotr_fightring_kit",
        "body": "\"yotr_fightring_kit\"",
        "description": " ※prefab ID: yotr_fightring_kit\n ※Name: Pillow Fight Pit Kit\n ※Recipe: \n\t+ 2 x: Boards/boards\n ※Required Tech: \n\t+ LV.3 : /RABBITOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:yotr_fightring_kit(ReverseSearch)": {
        "prefix": "p+Pillow Fight Pit Kit",
        "body": "\"yotr_fightring_kit\"",
        "description": " ※prefab ID: yotr_fightring_kit\n ※Name: Pillow Fight Pit Kit\n ※Recipe: \n\t+ 2 x: Boards/boards\n ※Required Tech: \n\t+ LV.3 : /RABBITOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:ancientfruit_nightvision(ID Complete)": {
        "prefix": "p+ancientfruit_nightvision",
        "body": "\"ancientfruit_nightvision\"",
        "description": " ※prefab ID: ancientfruit_nightvision\n ※Name: Nightberry\n ※prefab Version: DST-632551 "
    },
    "prefab:ancientfruit_nightvision(ReverseSearch)": {
        "prefix": "p+Nightberry",
        "body": "\"ancientfruit_nightvision\"",
        "description": " ※prefab ID: ancientfruit_nightvision\n ※Name: Nightberry\n ※prefab Version: DST-632551 "
    },
    "prefab:fossil_piece(ID Complete)": {
        "prefix": "p+fossil_piece",
        "body": "\"fossil_piece\"",
        "description": " ※prefab ID: fossil_piece\n ※Name: Fossil Fragments\n ※prefab Version: DST-632551 "
    },
    "prefab:fossil_piece(ReverseSearch)": {
        "prefix": "p+Fossil Fragments",
        "body": "\"fossil_piece\"",
        "description": " ※prefab ID: fossil_piece\n ※Name: Fossil Fragments\n ※prefab Version: DST-632551 "
    },
    "prefab:wx78module_movespeed2(ID Complete)": {
        "prefix": "p+wx78module_movespeed2",
        "body": "\"wx78module_movespeed2\"",
        "description": " ※prefab ID: wx78module_movespeed2\n ※Name: Super-Acceleration Circuit\n ※Recipe: \n\t+ 6 x: Bio Data/scandata\n\t+ 1 x: Gears/gears\n\t+ 1 x: Acceleration Circuit/wx78module_movespeed\n ※Required Tech: \n\t+ LV.1 : Circuitry/ROBOTMODULECRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:wx78module_movespeed2(ReverseSearch)": {
        "prefix": "p+Super-Acceleration Circuit",
        "body": "\"wx78module_movespeed2\"",
        "description": " ※prefab ID: wx78module_movespeed2\n ※Name: Super-Acceleration Circuit\n ※Recipe: \n\t+ 6 x: Bio Data/scandata\n\t+ 1 x: Gears/gears\n\t+ 1 x: Acceleration Circuit/wx78module_movespeed\n ※Required Tech: \n\t+ LV.1 : Circuitry/ROBOTMODULECRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_small_8_inv(ID Complete)": {
        "prefix": "p+oceanfish_small_8_inv",
        "body": "\"oceanfish_small_8_inv\"",
        "description": " ※prefab ID: oceanfish_small_8_inv\n ※Name: Scorching Sunfish\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_small_8_inv(ReverseSearch)": {
        "prefix": "p+Scorching Sunfish",
        "body": "\"oceanfish_small_8_inv\"",
        "description": " ※prefab ID: oceanfish_small_8_inv\n ※Name: Scorching Sunfish\n ※prefab Version: DST-632551 "
    },
    "prefab:mastupgrade_lamp(ID Complete)": {
        "prefix": "p+mastupgrade_lamp",
        "body": "\"mastupgrade_lamp\"",
        "description": " ※prefab ID: mastupgrade_lamp\n ※Name: Deck Illuminator\n ※Recipe: \n\t+ 1 x: Boards/boards\n\t+ 2 x: Rope/rope\n\t+ 4 x: Flint/flint\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:mastupgrade_lamp(ReverseSearch)": {
        "prefix": "p+Deck Illuminator",
        "body": "\"mastupgrade_lamp\"",
        "description": " ※prefab ID: mastupgrade_lamp\n ※Name: Deck Illuminator\n ※Recipe: \n\t+ 1 x: Boards/boards\n\t+ 2 x: Rope/rope\n\t+ 4 x: Flint/flint\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:spice_garlic(ID Complete)": {
        "prefix": "p+spice_garlic",
        "body": "\"spice_garlic\"",
        "description": " ※prefab ID: spice_garlic\n ※Name: Garlic Powder\n ※Recipe: \n\t+ 3 x: Garlic/garlic\n ※Required Tech: \n\t+ LV.1 : Seasonings/FOODPROCESSING\n ※prefab Version: DST-632551 "
    },
    "prefab:spice_garlic(ReverseSearch)": {
        "prefix": "p+Garlic Powder",
        "body": "\"spice_garlic\"",
        "description": " ※prefab ID: spice_garlic\n ※Name: Garlic Powder\n ※Recipe: \n\t+ 3 x: Garlic/garlic\n ※Required Tech: \n\t+ LV.1 : Seasonings/FOODPROCESSING\n ※prefab Version: DST-632551 "
    },
    "prefab:moon_device_construction2(ID Complete)": {
        "prefix": "p+moon_device_construction2",
        "body": "\"moon_device_construction2\"",
        "description": " ※prefab ID: moon_device_construction2\n ※Name: Nearly Completed Experiment\n ※prefab Version: DST-632551 "
    },
    "prefab:moon_device_construction2(ReverseSearch)": {
        "prefix": "p+Nearly Completed Experiment",
        "body": "\"moon_device_construction2\"",
        "description": " ※prefab ID: moon_device_construction2\n ※Name: Nearly Completed Experiment\n ※prefab Version: DST-632551 "
    },
    "prefab:book_rain(ID Complete)": {
        "prefix": "p+book_rain",
        "body": "\"book_rain\"",
        "description": " ※prefab ID: book_rain\n ※Name: Practical Rain Rituals\n ※Recipe: \n\t+ 2 x: Papyrus/papyrus\n\t+ 2 x: Down Feather/goose_feather\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:book_rain(ReverseSearch)": {
        "prefix": "p+Practical Rain Rituals",
        "body": "\"book_rain\"",
        "description": " ※prefab ID: book_rain\n ※Name: Practical Rain Rituals\n ※Recipe: \n\t+ 2 x: Papyrus/papyrus\n\t+ 2 x: Down Feather/goose_feather\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_malbatross(ID Complete)": {
        "prefix": "p+chesspiece_malbatross",
        "body": "\"chesspiece_malbatross\"",
        "description": " ※prefab ID: chesspiece_malbatross\n ※Name: Malbatross Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_malbatross(ReverseSearch)": {
        "prefix": "p+Malbatross Figure",
        "body": "\"chesspiece_malbatross\"",
        "description": " ※prefab ID: chesspiece_malbatross\n ※Name: Malbatross Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:maxwellthrone(ID Complete)": {
        "prefix": "p+maxwellthrone",
        "body": "\"maxwellthrone\"",
        "description": " ※prefab ID: maxwellthrone\n ※Name: Nightmare Throne\n ※prefab Version: DST-632551 "
    },
    "prefab:maxwellthrone(ReverseSearch)": {
        "prefix": "p+Nightmare Throne",
        "body": "\"maxwellthrone\"",
        "description": " ※prefab ID: maxwellthrone\n ※Name: Nightmare Throne\n ※prefab Version: DST-632551 "
    },
    "prefab:voidcloth_scythe(ID Complete)": {
        "prefix": "p+voidcloth_scythe",
        "body": "\"voidcloth_scythe\"",
        "description": " ※prefab ID: voidcloth_scythe\n ※Name: Shadow Reaper\n ※Recipe: \n\t+ 3 x: Pure Horror/horrorfuel\n\t+ 1 x: Dark Tatters/voidcloth\n ※Required Tech: \n\t+ LV.2 : Shadowcraft/SHADOWFORGING\n ※prefab Version: DST-632551 "
    },
    "prefab:voidcloth_scythe(ReverseSearch)": {
        "prefix": "p+Shadow Reaper",
        "body": "\"voidcloth_scythe\"",
        "description": " ※prefab ID: voidcloth_scythe\n ※Name: Shadow Reaper\n ※Recipe: \n\t+ 3 x: Pure Horror/horrorfuel\n\t+ 1 x: Dark Tatters/voidcloth\n ※Required Tech: \n\t+ LV.2 : Shadowcraft/SHADOWFORGING\n ※prefab Version: DST-632551 "
    },
    "prefab:skeleton_notplayer(ID Complete)": {
        "prefix": "p+skeleton_notplayer",
        "body": "\"skeleton_notplayer\"",
        "description": " ※prefab ID: skeleton_notplayer\n ※Name: Skeleton\n ※prefab Version: DST-632551 "
    },
    "prefab:skeleton_notplayer(ReverseSearch)": {
        "prefix": "p+Skeleton",
        "body": "\"skeleton_notplayer\"",
        "description": " ※prefab ID: skeleton_notplayer\n ※Name: Skeleton\n ※prefab Version: DST-632551 "
    },
    "prefab:willow(ID Complete)": {
        "prefix": "p+willow",
        "body": "\"willow\"",
        "description": " ※prefab ID: willow\n ※Name: Willow\n ※prefab Version: DST-632551 "
    },
    "prefab:willow(ReverseSearch)": {
        "prefix": "p+Willow",
        "body": "\"willow\"",
        "description": " ※prefab ID: willow\n ※Name: Willow\n ※prefab Version: DST-632551 "
    },
    "prefab:farm_plant_carrot(ID Complete)": {
        "prefix": "p+farm_plant_carrot",
        "body": "\"farm_plant_carrot\"",
        "description": " ※prefab ID: farm_plant_carrot\n ※Name: Carrot Plant\n ※prefab Version: DST-632551 "
    },
    "prefab:farm_plant_carrot(ReverseSearch)": {
        "prefix": "p+Carrot Plant",
        "body": "\"farm_plant_carrot\"",
        "description": " ※prefab ID: farm_plant_carrot\n ※Name: Carrot Plant\n ※prefab Version: DST-632551 "
    },
    "prefab:wintercooking_panettone(ID Complete)": {
        "prefix": "p+wintercooking_panettone",
        "body": "\"wintercooking_panettone\"",
        "description": " ※prefab ID: wintercooking_panettone\n ※Name: Panettone\n ※Recipe: \n\t+ 1 x: Holiday Cheer/wintersfeastfuel\n\t+ 2 x: Stone Fruit/rock_avocado_fruit\n ※Required Tech: \n\t+ LV.1 : Feast/WINTERSFEASTCOOKING\n ※prefab Version: DST-632551 "
    },
    "prefab:wintercooking_panettone(ReverseSearch)": {
        "prefix": "p+Panettone",
        "body": "\"wintercooking_panettone\"",
        "description": " ※prefab ID: wintercooking_panettone\n ※Name: Panettone\n ※Recipe: \n\t+ 1 x: Holiday Cheer/wintersfeastfuel\n\t+ 2 x: Stone Fruit/rock_avocado_fruit\n ※Required Tech: \n\t+ LV.1 : Feast/WINTERSFEASTCOOKING\n ※prefab Version: DST-632551 "
    },
    "prefab:balloon(ID Complete)": {
        "prefix": "p+balloon",
        "body": "\"balloon\"",
        "description": " ※prefab ID: balloon\n ※Name: Balloon\n ※Recipe: \n\t+ 0 x: Pile o' Balloons/balloons_empty\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:balloon(ReverseSearch)": {
        "prefix": "p+Balloon",
        "body": "\"balloon\"",
        "description": " ※prefab ID: balloon\n ※Name: Balloon\n ※Recipe: \n\t+ 0 x: Pile o' Balloons/balloons_empty\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:nightmarelight(ID Complete)": {
        "prefix": "p+nightmarelight",
        "body": "\"nightmarelight\"",
        "description": " ※prefab ID: nightmarelight\n ※Name: Nightmare Light\n ※prefab Version: DST-632551 "
    },
    "prefab:nightmarelight(ReverseSearch)": {
        "prefix": "p+Nightmare Light",
        "body": "\"nightmarelight\"",
        "description": " ※prefab ID: nightmarelight\n ※Name: Nightmare Light\n ※prefab Version: DST-632551 "
    },
    "prefab:dragonboat_pack(ID Complete)": {
        "prefix": "p+dragonboat_pack",
        "body": "\"dragonboat_pack\"",
        "description": " ※prefab ID: dragonboat_pack\n ※Name: Decked-Out Dragonfly Boat Kit\n ※Recipe: \n\t+ 16 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /DRAGONOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:dragonboat_pack(ReverseSearch)": {
        "prefix": "p+Decked-Out Dragonfly Boat Kit",
        "body": "\"dragonboat_pack\"",
        "description": " ※prefab ID: dragonboat_pack\n ※Name: Decked-Out Dragonfly Boat Kit\n ※Recipe: \n\t+ 16 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /DRAGONOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:mutator_hider(ID Complete)": {
        "prefix": "p+mutator_hider",
        "body": "\"mutator_hider\"",
        "description": " ※prefab ID: mutator_hider\n ※Name: Cave Switcherdoodle\n ※Recipe: \n\t+ 1 x: Monster Meat/monstermeat\n\t+ 2 x: Silk/silk\n\t+ 2 x: Cut Stone/cutstone\n ※Required Tech: \n\t+ LV.1 : Spider Care/SPIDERCRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:mutator_hider(ReverseSearch)": {
        "prefix": "p+Cave Switcherdoodle",
        "body": "\"mutator_hider\"",
        "description": " ※prefab ID: mutator_hider\n ※Name: Cave Switcherdoodle\n ※Recipe: \n\t+ 1 x: Monster Meat/monstermeat\n\t+ 2 x: Silk/silk\n\t+ 2 x: Cut Stone/cutstone\n ※Required Tech: \n\t+ LV.1 : Spider Care/SPIDERCRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_066(ID Complete)": {
        "prefix": "p+quagmire_food_066",
        "body": "\"quagmire_food_066\"",
        "description": " ※prefab ID: quagmire_food_066\n ※Name: Caramel Cube\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_066(ReverseSearch)": {
        "prefix": "p+Caramel Cube",
        "body": "\"quagmire_food_066\"",
        "description": " ※prefab ID: quagmire_food_066\n ※Name: Caramel Cube\n ※prefab Version: DST-632551 "
    },
    "prefab:malbatross_feather(ID Complete)": {
        "prefix": "p+malbatross_feather",
        "body": "\"malbatross_feather\"",
        "description": " ※prefab ID: malbatross_feather\n ※Name: Malbatross Feather\n ※prefab Version: DST-632551 "
    },
    "prefab:malbatross_feather(ReverseSearch)": {
        "prefix": "p+Malbatross Feather",
        "body": "\"malbatross_feather\"",
        "description": " ※prefab ID: malbatross_feather\n ※Name: Malbatross Feather\n ※prefab Version: DST-632551 "
    },
    "prefab:alterguardian_phase3deadorb(ID Complete)": {
        "prefix": "p+alterguardian_phase3deadorb",
        "body": "\"alterguardian_phase3deadorb\"",
        "description": " ※prefab ID: alterguardian_phase3deadorb\n ※Name: Celestial Champion\n ※prefab Version: DST-632551 "
    },
    "prefab:alterguardian_phase3deadorb(ReverseSearch)": {
        "prefix": "p+Celestial Champion",
        "body": "\"alterguardian_phase3deadorb\"",
        "description": " ※prefab ID: alterguardian_phase3deadorb\n ※Name: Celestial Champion\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishingbobber_robin_winter(ID Complete)": {
        "prefix": "p+oceanfishingbobber_robin_winter",
        "body": "\"oceanfishingbobber_robin_winter\"",
        "description": " ※prefab ID: oceanfishingbobber_robin_winter\n ※Name: Azure Quill Float\n ※Recipe: \n\t+ 1 x: Azure Feather/feather_robin_winter\n ※Required Tech: \n\t+ LV.1 : Fishing/FISHING\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishingbobber_robin_winter(ReverseSearch)": {
        "prefix": "p+Azure Quill Float",
        "body": "\"oceanfishingbobber_robin_winter\"",
        "description": " ※prefab ID: oceanfishingbobber_robin_winter\n ※Name: Azure Quill Float\n ※Recipe: \n\t+ 1 x: Azure Feather/feather_robin_winter\n ※Required Tech: \n\t+ LV.1 : Fishing/FISHING\n ※prefab Version: DST-632551 "
    },
    "prefab:moon_mushroomhat(ID Complete)": {
        "prefix": "p+moon_mushroomhat",
        "body": "\"moon_mushroomhat\"",
        "description": " ※prefab ID: moon_mushroomhat\n ※Name: Lunar Funcap\n ※Recipe: \n\t+ 4 x: Moon Shroom/moon_cap\n\t+ 1 x: Red Funcap/red_mushroomhat\n ※Required Tech: \n\t+ LV.1 : Celestial/CELESTIAL\n ※prefab Version: DST-632551 "
    },
    "prefab:moon_mushroomhat(ReverseSearch)": {
        "prefix": "p+Lunar Funcap",
        "body": "\"moon_mushroomhat\"",
        "description": " ※prefab ID: moon_mushroomhat\n ※Name: Lunar Funcap\n ※Recipe: \n\t+ 4 x: Moon Shroom/moon_cap\n\t+ 1 x: Red Funcap/red_mushroomhat\n ※Required Tech: \n\t+ LV.1 : Celestial/CELESTIAL\n ※prefab Version: DST-632551 "
    },
    "prefab:critter_glomling(ID Complete)": {
        "prefix": "p+critter_glomling",
        "body": "\"critter_glomling\"",
        "description": " ※prefab ID: critter_glomling\n ※Name: Glomglom\n ※prefab Version: DST-632551 "
    },
    "prefab:critter_glomling(ReverseSearch)": {
        "prefix": "p+Glomglom",
        "body": "\"critter_glomling\"",
        "description": " ※prefab ID: critter_glomling\n ※Name: Glomglom\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_mosaic_red(ID Complete)": {
        "prefix": "p+turf_mosaic_red",
        "body": "\"turf_mosaic_red\"",
        "description": " ※prefab ID: turf_mosaic_red\n ※Name: Red Mosaic Flooring\n ※Recipe: \n\t+ 1 x: Marble/marble\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_mosaic_red(ReverseSearch)": {
        "prefix": "p+Red Mosaic Flooring",
        "body": "\"turf_mosaic_red\"",
        "description": " ※prefab ID: turf_mosaic_red\n ※Name: Red Mosaic Flooring\n ※Recipe: \n\t+ 1 x: Marble/marble\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:pinecone_sapling(ID Complete)": {
        "prefix": "p+pinecone_sapling",
        "body": "\"pinecone_sapling\"",
        "description": " ※prefab ID: pinecone_sapling\n ※Name: Evergreen Sapling\n ※prefab Version: DST-632551 "
    },
    "prefab:pinecone_sapling(ReverseSearch)": {
        "prefix": "p+Evergreen Sapling",
        "body": "\"pinecone_sapling\"",
        "description": " ※prefab ID: pinecone_sapling\n ※Name: Evergreen Sapling\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_17(ID Complete)": {
        "prefix": "p+trinket_17",
        "body": "\"trinket_17\"",
        "description": " ※prefab ID: trinket_17\n ※Name: Bent Spork\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_17(ReverseSearch)": {
        "prefix": "p+Bent Spork",
        "body": "\"trinket_17\"",
        "description": " ※prefab ID: trinket_17\n ※Name: Bent Spork\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_anchor(ID Complete)": {
        "prefix": "p+chesspiece_anchor",
        "body": "\"chesspiece_anchor\"",
        "description": " ※prefab ID: chesspiece_anchor\n ※Name: Anchor Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_anchor(ReverseSearch)": {
        "prefix": "p+Anchor Figure",
        "body": "\"chesspiece_anchor\"",
        "description": " ※prefab ID: chesspiece_anchor\n ※Name: Anchor Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:bat(ID Complete)": {
        "prefix": "p+bat",
        "body": "\"bat\"",
        "description": " ※prefab ID: bat\n ※Name: Batilisk\n ※prefab Version: DST-632551 "
    },
    "prefab:bat(ReverseSearch)": {
        "prefix": "p+Batilisk",
        "body": "\"bat\"",
        "description": " ※prefab ID: bat\n ※Name: Batilisk\n ※prefab Version: DST-632551 "
    },
    "prefab:leafloaf(ID Complete)": {
        "prefix": "p+leafloaf",
        "body": "\"leafloaf\"",
        "description": " ※prefab ID: leafloaf\n ※Name: Leafy Meatloaf\n ※prefab Version: DST-632551 "
    },
    "prefab:leafloaf(ReverseSearch)": {
        "prefix": "p+Leafy Meatloaf",
        "body": "\"leafloaf\"",
        "description": " ※prefab ID: leafloaf\n ※Name: Leafy Meatloaf\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_knight_builder(ID Complete)": {
        "prefix": "p+chesspiece_knight_builder",
        "body": "\"chesspiece_knight_builder\"",
        "description": " ※prefab ID: chesspiece_knight_builder\n ※Name: Knight Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_knight_builder(ReverseSearch)": {
        "prefix": "p+Knight Figure",
        "body": "\"chesspiece_knight_builder\"",
        "description": " ※prefab ID: chesspiece_knight_builder\n ※Name: Knight Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:shadowrift_portal(ID Complete)": {
        "prefix": "p+shadowrift_portal",
        "body": "\"shadowrift_portal\"",
        "description": " ※prefab ID: shadowrift_portal\n ※Name: Rift\n ※prefab Version: DST-632551 "
    },
    "prefab:shadowrift_portal(ReverseSearch)": {
        "prefix": "p+Rift",
        "body": "\"shadowrift_portal\"",
        "description": " ※prefab ID: shadowrift_portal\n ※Name: Rift\n ※prefab Version: DST-632551 "
    },
    "prefab:yotd_anchor(ID Complete)": {
        "prefix": "p+yotd_anchor",
        "body": "\"yotd_anchor\"",
        "description": " ※prefab ID: yotd_anchor\n ※Name: Claw Anchor\n ※prefab Version: DST-632551 "
    },
    "prefab:yotd_anchor(ReverseSearch)": {
        "prefix": "p+Claw Anchor",
        "body": "\"yotd_anchor\"",
        "description": " ※prefab ID: yotd_anchor\n ※Name: Claw Anchor\n ※prefab Version: DST-632551 "
    },
    "prefab:festivefish(ID Complete)": {
        "prefix": "p+festivefish",
        "body": "\"festivefish\"",
        "description": " ※prefab ID: festivefish\n ※Name: Festive Fish Dish\n ※prefab Version: DST-632551 "
    },
    "prefab:festivefish(ReverseSearch)": {
        "prefix": "p+Festive Fish Dish",
        "body": "\"festivefish\"",
        "description": " ※prefab ID: festivefish\n ※Name: Festive Fish Dish\n ※prefab Version: DST-632551 "
    },
    "prefab:known_pepper_seeds(ID Complete)": {
        "prefix": "p+known_pepper_seeds",
        "body": "\"known_pepper_seeds\"",
        "description": " ※prefab ID: known_pepper_seeds\n ※Name: Pepper Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:known_pepper_seeds(ReverseSearch)": {
        "prefix": "p+Pepper Seeds",
        "body": "\"known_pepper_seeds\"",
        "description": " ※prefab ID: known_pepper_seeds\n ※Name: Pepper Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:known_dragonfruit_seeds(ID Complete)": {
        "prefix": "p+known_dragonfruit_seeds",
        "body": "\"known_dragonfruit_seeds\"",
        "description": " ※prefab ID: known_dragonfruit_seeds\n ※Name: Dragon Fruit Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:known_dragonfruit_seeds(ReverseSearch)": {
        "prefix": "p+Dragon Fruit Seeds",
        "body": "\"known_dragonfruit_seeds\"",
        "description": " ※prefab ID: known_dragonfruit_seeds\n ※Name: Dragon Fruit Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:livinglog(ID Complete)": {
        "prefix": "p+livinglog",
        "body": "\"livinglog\"",
        "description": " ※prefab ID: livinglog\n ※Name: Living Log\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:livinglog(ReverseSearch)": {
        "prefix": "p+Living Log",
        "body": "\"livinglog\"",
        "description": " ※prefab ID: livinglog\n ※Name: Living Log\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:wagpunk_bits(ID Complete)": {
        "prefix": "p+wagpunk_bits",
        "body": "\"wagpunk_bits\"",
        "description": " ※prefab ID: wagpunk_bits\n ※Name: Scrap\n ※prefab Version: DST-632551 "
    },
    "prefab:wagpunk_bits(ReverseSearch)": {
        "prefix": "p+Scrap",
        "body": "\"wagpunk_bits\"",
        "description": " ※prefab ID: wagpunk_bits\n ※Name: Scrap\n ※prefab Version: DST-632551 "
    },
    "prefab:lunarrift_crystal_small(ID Complete)": {
        "prefix": "p+lunarrift_crystal_small",
        "body": "\"lunarrift_crystal_small\"",
        "description": " ※prefab ID: lunarrift_crystal_small\n ※Name: Ryftstal\n ※prefab Version: DST-632551 "
    },
    "prefab:lunarrift_crystal_small(ReverseSearch)": {
        "prefix": "p+Ryftstal",
        "body": "\"lunarrift_crystal_small\"",
        "description": " ※prefab ID: lunarrift_crystal_small\n ※Name: Ryftstal\n ※prefab Version: DST-632551 "
    },
    "prefab:none(ID Complete)": {
        "prefix": "p+none",
        "body": "\"none\"",
        "description": " ※prefab ID: none\n ※Name: Nothing\n ※prefab Version: DST-632551 "
    },
    "prefab:none(ReverseSearch)": {
        "prefix": "p+Nothing",
        "body": "\"none\"",
        "description": " ※prefab ID: none\n ※Name: Nothing\n ※prefab Version: DST-632551 "
    },
    "prefab:kitcoon_desert(ID Complete)": {
        "prefix": "p+kitcoon_desert",
        "body": "\"kitcoon_desert\"",
        "description": " ※prefab ID: kitcoon_desert\n ※Name: Kitcoon\n ※prefab Version: DST-632551 "
    },
    "prefab:kitcoon_desert(ReverseSearch)": {
        "prefix": "p+Kitcoon",
        "body": "\"kitcoon_desert\"",
        "description": " ※prefab ID: kitcoon_desert\n ※Name: Kitcoon\n ※prefab Version: DST-632551 "
    },
    "prefab:winter_ornament(ID Complete)": {
        "prefix": "p+winter_ornament",
        "body": "\"winter_ornament\"",
        "description": " ※prefab ID: winter_ornament\n ※Name: Festive Bauble\n ※prefab Version: DST-632551 "
    },
    "prefab:winter_ornament(ReverseSearch)": {
        "prefix": "p+Festive Bauble",
        "body": "\"winter_ornament\"",
        "description": " ※prefab ID: winter_ornament\n ※Name: Festive Bauble\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_pebblebeach(ID Complete)": {
        "prefix": "p+turf_pebblebeach",
        "body": "\"turf_pebblebeach\"",
        "description": " ※prefab ID: turf_pebblebeach\n ※Name: Rocky Beach Turf\n ※Recipe: \n\t+ 1 x: Rocks/rocks\n\t+ 1 x: Driftwood Piece/driftwood_log\n ※Required Tech: \n\t+ LV.2 : Landscaping/TURFCRAFTING\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_pebblebeach(ReverseSearch)": {
        "prefix": "p+Rocky Beach Turf",
        "body": "\"turf_pebblebeach\"",
        "description": " ※prefab ID: turf_pebblebeach\n ※Name: Rocky Beach Turf\n ※Recipe: \n\t+ 1 x: Rocks/rocks\n\t+ 1 x: Driftwood Piece/driftwood_log\n ※Required Tech: \n\t+ LV.2 : Landscaping/TURFCRAFTING\n ※prefab Version: DST-632551 "
    },
    "prefab:rabbitkingspear(ID Complete)": {
        "prefix": "p+rabbitkingspear",
        "body": "\"rabbitkingspear\"",
        "description": " ※prefab ID: rabbitkingspear\n ※Name: Rabbit King Cudgel\n ※Recipe: \n\t+ 3 x: Beard Hair/beardhair\n\t+ 1 x: Bunny Puff/manrabbit_tail\n\t+ 1 x: Rope/rope\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:rabbitkingspear(ReverseSearch)": {
        "prefix": "p+Rabbit King Cudgel",
        "body": "\"rabbitkingspear\"",
        "description": " ※prefab ID: rabbitkingspear\n ※Name: Rabbit King Cudgel\n ※Recipe: \n\t+ 3 x: Beard Hair/beardhair\n\t+ 1 x: Bunny Puff/manrabbit_tail\n\t+ 1 x: Rope/rope\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:goldenaxe(ID Complete)": {
        "prefix": "p+goldenaxe",
        "body": "\"goldenaxe\"",
        "description": " ※prefab ID: goldenaxe\n ※Name: Luxury Axe\n ※Recipe: \n\t+ 4 x: Twigs/twigs\n\t+ 2 x: Gold Nugget/goldnugget\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:goldenaxe(ReverseSearch)": {
        "prefix": "p+Luxury Axe",
        "body": "\"goldenaxe\"",
        "description": " ※prefab ID: goldenaxe\n ※Name: Luxury Axe\n ※Recipe: \n\t+ 4 x: Twigs/twigs\n\t+ 2 x: Gold Nugget/goldnugget\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:waterplant_baby(ID Complete)": {
        "prefix": "p+waterplant_baby",
        "body": "\"waterplant_baby\"",
        "description": " ※prefab ID: waterplant_baby\n ※Name: Sea Sprout\n ※prefab Version: DST-632551 "
    },
    "prefab:waterplant_baby(ReverseSearch)": {
        "prefix": "p+Sea Sprout",
        "body": "\"waterplant_baby\"",
        "description": " ※prefab ID: waterplant_baby\n ※Name: Sea Sprout\n ※prefab Version: DST-632551 "
    },
    "prefab:kitcoonden_kit(ID Complete)": {
        "prefix": "p+kitcoonden_kit",
        "body": "\"kitcoonden_kit\"",
        "description": " ※prefab ID: kitcoonden_kit\n ※Name: Kitcoon Nursery Kit\n ※Recipe: \n\t+ 1 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /CATCOONOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:kitcoonden_kit(ReverseSearch)": {
        "prefix": "p+Kitcoon Nursery Kit",
        "body": "\"kitcoonden_kit\"",
        "description": " ※prefab ID: kitcoonden_kit\n ※Name: Kitcoon Nursery Kit\n ※Recipe: \n\t+ 1 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /CATCOONOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:ancienttree_nightvision_sapling(ID Complete)": {
        "prefix": "p+ancienttree_nightvision_sapling",
        "body": "\"ancienttree_nightvision_sapling\"",
        "description": " ※prefab ID: ancienttree_nightvision_sapling\n ※Name: Young Gloomthorn\n ※prefab Version: DST-632551 "
    },
    "prefab:ancienttree_nightvision_sapling(ReverseSearch)": {
        "prefix": "p+Young Gloomthorn",
        "body": "\"ancienttree_nightvision_sapling\"",
        "description": " ※prefab ID: ancienttree_nightvision_sapling\n ※Name: Young Gloomthorn\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalgame_memory_station(ID Complete)": {
        "prefix": "p+carnivalgame_memory_station",
        "body": "\"carnivalgame_memory_station\"",
        "description": " ※prefab ID: carnivalgame_memory_station\n ※Name: Eggs in a Basket\n ※Recipe: \n\t+ 1 x: Eggs in a Basket Kit/carnivalgame_memory_kit\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalgame_memory_station(ReverseSearch)": {
        "prefix": "p+Eggs in a Basket",
        "body": "\"carnivalgame_memory_station\"",
        "description": " ※prefab ID: carnivalgame_memory_station\n ※Name: Eggs in a Basket\n ※Recipe: \n\t+ 1 x: Eggs in a Basket Kit/carnivalgame_memory_kit\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:wurt_swampitem_shadow(ID Complete)": {
        "prefix": "p+wurt_swampitem_shadow",
        "body": "\"wurt_swampitem_shadow\"",
        "description": " ※prefab ID: wurt_swampitem_shadow\n ※Name: Dreaded Mudslinger\n ※Recipe: \n\t+ 1 x: Driftwood Piece/driftwood_log\n\t+ 1 x: Marsh Turf/turf_marsh\n\t+ 1 x: Pure Horror/horrorfuel\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:wurt_swampitem_shadow(ReverseSearch)": {
        "prefix": "p+Dreaded Mudslinger",
        "body": "\"wurt_swampitem_shadow\"",
        "description": " ※prefab ID: wurt_swampitem_shadow\n ※Name: Dreaded Mudslinger\n ※Recipe: \n\t+ 1 x: Driftwood Piece/driftwood_log\n\t+ 1 x: Marsh Turf/turf_marsh\n\t+ 1 x: Pure Horror/horrorfuel\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:houndwhistle(ID Complete)": {
        "prefix": "p+houndwhistle",
        "body": "\"houndwhistle\"",
        "description": " ※prefab ID: houndwhistle\n ※Name: Lucky Whistle\n ※Recipe: \n\t+ 3 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /WARGOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:houndwhistle(ReverseSearch)": {
        "prefix": "p+Lucky Whistle",
        "body": "\"houndwhistle\"",
        "description": " ※prefab ID: houndwhistle\n ※Name: Lucky Whistle\n ※Recipe: \n\t+ 3 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /WARGOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:backpack(ID Complete)": {
        "prefix": "p+backpack",
        "body": "\"backpack\"",
        "description": " ※prefab ID: backpack\n ※Name: Backpack\n ※Recipe: \n\t+ 4 x: Cut Grass/cutgrass\n\t+ 4 x: Twigs/twigs\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:backpack(ReverseSearch)": {
        "prefix": "p+Backpack",
        "body": "\"backpack\"",
        "description": " ※prefab ID: backpack\n ※Name: Backpack\n ※Recipe: \n\t+ 4 x: Cut Grass/cutgrass\n\t+ 4 x: Twigs/twigs\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:record_drstyle(ID Complete)": {
        "prefix": "p+record_drstyle",
        "body": "\"record_drstyle\"",
        "description": " ※prefab ID: record_drstyle\n ※Name: D.R. Style\n ※prefab Version: DST-632551 "
    },
    "prefab:record_drstyle(ReverseSearch)": {
        "prefix": "p+D.R. Style",
        "body": "\"record_drstyle\"",
        "description": " ※prefab ID: record_drstyle\n ※Name: D.R. Style\n ※prefab Version: DST-632551 "
    },
    "prefab:rocky(ID Complete)": {
        "prefix": "p+rocky",
        "body": "\"rocky\"",
        "description": " ※prefab ID: rocky\n ※Name: Rock Lobster\n ※prefab Version: DST-632551 "
    },
    "prefab:rocky(ReverseSearch)": {
        "prefix": "p+Rock Lobster",
        "body": "\"rocky\"",
        "description": " ※prefab ID: rocky\n ※Name: Rock Lobster\n ※prefab Version: DST-632551 "
    },
    "prefab:talleggs(ID Complete)": {
        "prefix": "p+talleggs",
        "body": "\"talleggs\"",
        "description": " ※prefab ID: talleggs\n ※Name: Tall Scotch Eggs\n ※prefab Version: DST-632551 "
    },
    "prefab:talleggs(ReverseSearch)": {
        "prefix": "p+Tall Scotch Eggs",
        "body": "\"talleggs\"",
        "description": " ※prefab ID: talleggs\n ※Name: Tall Scotch Eggs\n ※prefab Version: DST-632551 "
    },
    "prefab:fig_cooked(ID Complete)": {
        "prefix": "p+fig_cooked",
        "body": "\"fig_cooked\"",
        "description": " ※prefab ID: fig_cooked\n ※Name: Cooked Fig\n ※prefab Version: DST-632551 "
    },
    "prefab:fig_cooked(ReverseSearch)": {
        "prefix": "p+Cooked Fig",
        "body": "\"fig_cooked\"",
        "description": " ※prefab ID: fig_cooked\n ※Name: Cooked Fig\n ※prefab Version: DST-632551 "
    },
    "prefab:support_pillar_complete(ID Complete)": {
        "prefix": "p+support_pillar_complete",
        "body": "\"support_pillar_complete\"",
        "description": " ※prefab ID: support_pillar_complete\n ※Name: Reinforced Support Pillar\n ※prefab Version: DST-632551 "
    },
    "prefab:support_pillar_complete(ReverseSearch)": {
        "prefix": "p+Reinforced Support Pillar",
        "body": "\"support_pillar_complete\"",
        "description": " ※prefab ID: support_pillar_complete\n ※Name: Reinforced Support Pillar\n ※prefab Version: DST-632551 "
    },
    "prefab:mushtree_small(ID Complete)": {
        "prefix": "p+mushtree_small",
        "body": "\"mushtree_small\"",
        "description": " ※prefab ID: mushtree_small\n ※Name: Green Mushtree\n ※prefab Version: DST-632551 "
    },
    "prefab:mushtree_small(ReverseSearch)": {
        "prefix": "p+Green Mushtree",
        "body": "\"mushtree_small\"",
        "description": " ※prefab ID: mushtree_small\n ※Name: Green Mushtree\n ※prefab Version: DST-632551 "
    },
    "prefab:webber(ID Complete)": {
        "prefix": "p+webber",
        "body": "\"webber\"",
        "description": " ※prefab ID: webber\n ※Name: Webber\n ※prefab Version: DST-632551 "
    },
    "prefab:webber(ReverseSearch)": {
        "prefix": "p+Webber",
        "body": "\"webber\"",
        "description": " ※prefab ID: webber\n ※Name: Webber\n ※prefab Version: DST-632551 "
    },
    "prefab:moon_device_construction1(ID Complete)": {
        "prefix": "p+moon_device_construction1",
        "body": "\"moon_device_construction1\"",
        "description": " ※prefab ID: moon_device_construction1\n ※Name: Incomplete Experiment\n ※Recipe: \n\t+ 4 x: Scrap/wagpunk_bits\n\t+ 5 x: Moongleam/moonstorm_spark\n\t+ 2 x: Electrical Doodad/transistor\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:moon_device_construction1(ReverseSearch)": {
        "prefix": "p+Incomplete Experiment",
        "body": "\"moon_device_construction1\"",
        "description": " ※prefab ID: moon_device_construction1\n ※Name: Incomplete Experiment\n ※Recipe: \n\t+ 4 x: Scrap/wagpunk_bits\n\t+ 5 x: Moongleam/moonstorm_spark\n\t+ 2 x: Electrical Doodad/transistor\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_34(ID Complete)": {
        "prefix": "p+trinket_34",
        "body": "\"trinket_34\"",
        "description": " ※prefab ID: trinket_34\n ※Name: Monkey Paw\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_34(ReverseSearch)": {
        "prefix": "p+Monkey Paw",
        "body": "\"trinket_34\"",
        "description": " ※prefab ID: trinket_34\n ※Name: Monkey Paw\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_plate(ID Complete)": {
        "prefix": "p+quagmire_food_plate",
        "body": "\"quagmire_food_plate\"",
        "description": " ※prefab ID: quagmire_food_plate\n ※Name: Plate\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_plate(ReverseSearch)": {
        "prefix": "p+Plate",
        "body": "\"quagmire_food_plate\"",
        "description": " ※prefab ID: quagmire_food_plate\n ※Name: Plate\n ※prefab Version: DST-632551 "
    },
    "prefab:rabbithouse(ID Complete)": {
        "prefix": "p+rabbithouse",
        "body": "\"rabbithouse\"",
        "description": " ※prefab ID: rabbithouse\n ※Name: Rabbit Hutch\n ※Recipe: \n\t+ 4 x: Boards/boards\n\t+ 10 x: Carrot/carrot\n\t+ 4 x: Bunny Puff/manrabbit_tail\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:rabbithouse(ReverseSearch)": {
        "prefix": "p+Rabbit Hutch",
        "body": "\"rabbithouse\"",
        "description": " ※prefab ID: rabbithouse\n ※Name: Rabbit Hutch\n ※Recipe: \n\t+ 4 x: Boards/boards\n\t+ 10 x: Carrot/carrot\n\t+ 4 x: Bunny Puff/manrabbit_tail\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:coldfire(ID Complete)": {
        "prefix": "p+coldfire",
        "body": "\"coldfire\"",
        "description": " ※prefab ID: coldfire\n ※Name: Endothermic Fire\n ※Recipe: \n\t+ 3 x: Cut Grass/cutgrass\n\t+ 2 x: Nitre/nitre\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:coldfire(ReverseSearch)": {
        "prefix": "p+Endothermic Fire",
        "body": "\"coldfire\"",
        "description": " ※prefab ID: coldfire\n ※Name: Endothermic Fire\n ※Recipe: \n\t+ 3 x: Cut Grass/cutgrass\n\t+ 2 x: Nitre/nitre\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:boat_pirate(ID Complete)": {
        "prefix": "p+boat_pirate",
        "body": "\"boat_pirate\"",
        "description": " ※prefab ID: boat_pirate\n ※Name: Pirate Sloop\n ※prefab Version: DST-632551 "
    },
    "prefab:boat_pirate(ReverseSearch)": {
        "prefix": "p+Pirate Sloop",
        "body": "\"boat_pirate\"",
        "description": " ※prefab ID: boat_pirate\n ※Name: Pirate Sloop\n ※prefab Version: DST-632551 "
    },
    "prefab:farm_plant_potato(ID Complete)": {
        "prefix": "p+farm_plant_potato",
        "body": "\"farm_plant_potato\"",
        "description": " ※prefab ID: farm_plant_potato\n ※Name: Potato Plant\n ※prefab Version: DST-632551 "
    },
    "prefab:farm_plant_potato(ReverseSearch)": {
        "prefix": "p+Potato Plant",
        "body": "\"farm_plant_potato\"",
        "description": " ※prefab ID: farm_plant_potato\n ※Name: Potato Plant\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalgame_shooting_kit(ID Complete)": {
        "prefix": "p+carnivalgame_shooting_kit",
        "body": "\"carnivalgame_shooting_kit\"",
        "description": " ※prefab ID: carnivalgame_shooting_kit\n ※Name: Nest Defender Kit\n ※Recipe: \n\t+ 1 x: Gold Nugget/goldnugget\n\t+ 3 x: Seeds/seeds\n ※Required Tech: \n\t+ LV.3 : Cawnival Creation/CARNIVAL_HOSTSHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalgame_shooting_kit(ReverseSearch)": {
        "prefix": "p+Nest Defender Kit",
        "body": "\"carnivalgame_shooting_kit\"",
        "description": " ※prefab ID: carnivalgame_shooting_kit\n ※Name: Nest Defender Kit\n ※Recipe: \n\t+ 1 x: Gold Nugget/goldnugget\n\t+ 3 x: Seeds/seeds\n ※Required Tech: \n\t+ LV.3 : Cawnival Creation/CARNIVAL_HOSTSHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_seeds_2(ID Complete)": {
        "prefix": "p+quagmire_seeds_2",
        "body": "\"quagmire_seeds_2\"",
        "description": " ※prefab ID: quagmire_seeds_2\n ※Name: Fluffy Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_seeds_2(ReverseSearch)": {
        "prefix": "p+Fluffy Seeds",
        "body": "\"quagmire_seeds_2\"",
        "description": " ※prefab ID: quagmire_seeds_2\n ※Name: Fluffy Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:toadstool_cap(ID Complete)": {
        "prefix": "p+toadstool_cap",
        "body": "\"toadstool_cap\"",
        "description": " ※prefab ID: toadstool_cap\n ※Name: Toadstool\n ※prefab Version: DST-632551 "
    },
    "prefab:toadstool_cap(ReverseSearch)": {
        "prefix": "p+Toadstool",
        "body": "\"toadstool_cap\"",
        "description": " ※prefab ID: toadstool_cap\n ※Name: Toadstool\n ※prefab Version: DST-632551 "
    },
    "prefab:mapscroll(ID Complete)": {
        "prefix": "p+mapscroll",
        "body": "\"mapscroll\"",
        "description": " ※prefab ID: mapscroll\n ※Name: Map Scroll\n ※Recipe: \n\t+ 1 x: Feather Pencil/featherpencil\n\t+ 1 x: Papyrus/papyrus\n ※Required Tech: \n\t+ LV.2 : Cartography/CARTOGRAPHY\n ※prefab Version: DST-632551 "
    },
    "prefab:mapscroll(ReverseSearch)": {
        "prefix": "p+Map Scroll",
        "body": "\"mapscroll\"",
        "description": " ※prefab ID: mapscroll\n ※Name: Map Scroll\n ※Recipe: \n\t+ 1 x: Feather Pencil/featherpencil\n\t+ 1 x: Papyrus/papyrus\n ※Required Tech: \n\t+ LV.2 : Cartography/CARTOGRAPHY\n ※prefab Version: DST-632551 "
    },
    "prefab:stone_stool(ID Complete)": {
        "prefix": "p+stone_stool",
        "body": "\"stone_stool\"",
        "description": " ※prefab ID: stone_stool\n ※Name: Stone Stool\n ※Recipe: \n\t+ 1 x: Cut Stone/cutstone\n\t+ 2 x: Rope/rope\n ※Required Tech: \n\t+ LV.3 : Carpentry/CARPENTRY\n ※prefab Version: DST-632551 "
    },
    "prefab:stone_stool(ReverseSearch)": {
        "prefix": "p+Stone Stool",
        "body": "\"stone_stool\"",
        "description": " ※prefab ID: stone_stool\n ※Name: Stone Stool\n ※Recipe: \n\t+ 1 x: Cut Stone/cutstone\n\t+ 2 x: Rope/rope\n ※Required Tech: \n\t+ LV.3 : Carpentry/CARPENTRY\n ※prefab Version: DST-632551 "
    },
    "prefab:pocketwatch_revive_reviver(ID Complete)": {
        "prefix": "p+pocketwatch_revive_reviver",
        "body": "\"pocketwatch_revive_reviver\"",
        "description": " ※prefab ID: pocketwatch_revive_reviver\n ※Name: Second Chance Watch\n ※prefab Version: DST-632551 "
    },
    "prefab:pocketwatch_revive_reviver(ReverseSearch)": {
        "prefix": "p+Second Chance Watch",
        "body": "\"pocketwatch_revive_reviver\"",
        "description": " ※prefab ID: pocketwatch_revive_reviver\n ※Name: Second Chance Watch\n ※prefab Version: DST-632551 "
    },
    "prefab:tophat(ID Complete)": {
        "prefix": "p+tophat",
        "body": "\"tophat\"",
        "description": " ※prefab ID: tophat\n ※Name: Top Hat\n ※Recipe: \n\t+ 6 x: Silk/silk\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:tophat(ReverseSearch)": {
        "prefix": "p+Top Hat",
        "body": "\"tophat\"",
        "description": " ※prefab ID: tophat\n ※Name: Top Hat\n ※Recipe: \n\t+ 6 x: Silk/silk\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:trails1(ID Complete)": {
        "prefix": "p+trails1",
        "body": "\"trails1\"",
        "description": " ※prefab ID: trails1\n ※Name: Boarilla\n ※prefab Version: DST-632551 "
    },
    "prefab:trails1(ReverseSearch)": {
        "prefix": "p+Boarilla",
        "body": "\"trails1\"",
        "description": " ※prefab ID: trails1\n ※Name: Boarilla\n ※prefab Version: DST-632551 "
    },
    "prefab:atrium_overgrowth(ID Complete)": {
        "prefix": "p+atrium_overgrowth",
        "body": "\"atrium_overgrowth\"",
        "description": " ※prefab ID: atrium_overgrowth\n ※Name: Ancient Obelisk\n ※prefab Version: DST-632551 "
    },
    "prefab:atrium_overgrowth(ReverseSearch)": {
        "prefix": "p+Ancient Obelisk",
        "body": "\"atrium_overgrowth\"",
        "description": " ※prefab ID: atrium_overgrowth\n ※Name: Ancient Obelisk\n ※prefab Version: DST-632551 "
    },
    "prefab:archive_resonator(ID Complete)": {
        "prefix": "p+archive_resonator",
        "body": "\"archive_resonator\"",
        "description": " ※prefab ID: archive_resonator\n ※Name: Astral Detector\n ※Recipe: \n\t+ 1 x: Moon Rock/moonrocknugget\n\t+ 1 x: Thulecite/thulecite\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:archive_resonator(ReverseSearch)": {
        "prefix": "p+Astral Detector",
        "body": "\"archive_resonator\"",
        "description": " ※prefab ID: archive_resonator\n ※Name: Astral Detector\n ※Recipe: \n\t+ 1 x: Moon Rock/moonrocknugget\n\t+ 1 x: Thulecite/thulecite\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:furtuft(ID Complete)": {
        "prefix": "p+furtuft",
        "body": "\"furtuft\"",
        "description": " ※prefab ID: furtuft\n ※Name: Fur Tuft\n ※prefab Version: DST-632551 "
    },
    "prefab:furtuft(ReverseSearch)": {
        "prefix": "p+Fur Tuft",
        "body": "\"furtuft\"",
        "description": " ※prefab ID: furtuft\n ※Name: Fur Tuft\n ※prefab Version: DST-632551 "
    },
    "prefab:marblebean_sapling(ID Complete)": {
        "prefix": "p+marblebean_sapling",
        "body": "\"marblebean_sapling\"",
        "description": " ※prefab ID: marblebean_sapling\n ※Name: Marble Sprout\n ※prefab Version: DST-632551 "
    },
    "prefab:marblebean_sapling(ReverseSearch)": {
        "prefix": "p+Marble Sprout",
        "body": "\"marblebean_sapling\"",
        "description": " ※prefab ID: marblebean_sapling\n ※Name: Marble Sprout\n ※prefab Version: DST-632551 "
    },
    "prefab:jammypreserves(ID Complete)": {
        "prefix": "p+jammypreserves",
        "body": "\"jammypreserves\"",
        "description": " ※prefab ID: jammypreserves\n ※Name: Fist Full of Jam\n ※prefab Version: DST-632551 "
    },
    "prefab:jammypreserves(ReverseSearch)": {
        "prefix": "p+Fist Full of Jam",
        "body": "\"jammypreserves\"",
        "description": " ※prefab ID: jammypreserves\n ※Name: Fist Full of Jam\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivaldecor_plant(ID Complete)": {
        "prefix": "p+carnivaldecor_plant",
        "body": "\"carnivaldecor_plant\"",
        "description": " ※prefab ID: carnivaldecor_plant\n ※Name: Miniature Tree\n ※Recipe: \n\t+ 1 x: Miniature Tree Kit/carnivaldecor_plant_kit\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:carnivaldecor_plant(ReverseSearch)": {
        "prefix": "p+Miniature Tree",
        "body": "\"carnivaldecor_plant\"",
        "description": " ※prefab ID: carnivaldecor_plant\n ※Name: Miniature Tree\n ※Recipe: \n\t+ 1 x: Miniature Tree Kit/carnivaldecor_plant_kit\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_portal(ID Complete)": {
        "prefix": "p+lavaarena_portal",
        "body": "\"lavaarena_portal\"",
        "description": " ※prefab ID: lavaarena_portal\n ※Name: Ancient Gateway\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_portal(ReverseSearch)": {
        "prefix": "p+Ancient Gateway",
        "body": "\"lavaarena_portal\"",
        "description": " ※prefab ID: lavaarena_portal\n ※Name: Ancient Gateway\n ※prefab Version: DST-632551 "
    },
    "prefab:pigelitefighter2(ID Complete)": {
        "prefix": "p+pigelitefighter2",
        "body": "\"pigelitefighter2\"",
        "description": " ※prefab ID: pigelitefighter2\n ※Name: Ignatius\n ※prefab Version: DST-632551 "
    },
    "prefab:pigelitefighter2(ReverseSearch)": {
        "prefix": "p+Ignatius",
        "body": "\"pigelitefighter2\"",
        "description": " ※prefab ID: pigelitefighter2\n ※Name: Ignatius\n ※prefab Version: DST-632551 "
    },
    "prefab:reflectivevest(ID Complete)": {
        "prefix": "p+reflectivevest",
        "body": "\"reflectivevest\"",
        "description": " ※prefab ID: reflectivevest\n ※Name: Summer Frest\n ※Recipe: \n\t+ 1 x: Rope/rope\n\t+ 3 x: Crimson Feather/feather_robin\n\t+ 2 x: Pig Skin/pigskin\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:reflectivevest(ReverseSearch)": {
        "prefix": "p+Summer Frest",
        "body": "\"reflectivevest\"",
        "description": " ※prefab ID: reflectivevest\n ※Name: Summer Frest\n ※Recipe: \n\t+ 1 x: Rope/rope\n\t+ 3 x: Crimson Feather/feather_robin\n\t+ 2 x: Pig Skin/pigskin\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:flowerhat(ID Complete)": {
        "prefix": "p+flowerhat",
        "body": "\"flowerhat\"",
        "description": " ※prefab ID: flowerhat\n ※Name: Garland\n ※Recipe: \n\t+ 12 x: Petals/petals\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:flowerhat(ReverseSearch)": {
        "prefix": "p+Garland",
        "body": "\"flowerhat\"",
        "description": " ※prefab ID: flowerhat\n ※Name: Garland\n ※Recipe: \n\t+ 12 x: Petals/petals\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:monstermeat(ID Complete)": {
        "prefix": "p+monstermeat",
        "body": "\"monstermeat\"",
        "description": " ※prefab ID: monstermeat\n ※Name: Monster Meat\n ※prefab Version: DST-632551 "
    },
    "prefab:monstermeat(ReverseSearch)": {
        "prefix": "p+Monster Meat",
        "body": "\"monstermeat\"",
        "description": " ※prefab ID: monstermeat\n ※Name: Monster Meat\n ※prefab Version: DST-632551 "
    },
    "prefab:cave_entrance_open(ID Complete)": {
        "prefix": "p+cave_entrance_open",
        "body": "\"cave_entrance_open\"",
        "description": " ※prefab ID: cave_entrance_open\n ※Name: Sinkhole\n ※prefab Version: DST-632551 "
    },
    "prefab:cave_entrance_open(ReverseSearch)": {
        "prefix": "p+Sinkhole",
        "body": "\"cave_entrance_open\"",
        "description": " ※prefab ID: cave_entrance_open\n ※Name: Sinkhole\n ※prefab Version: DST-632551 "
    },
    "prefab:shroomcake(ID Complete)": {
        "prefix": "p+shroomcake",
        "body": "\"shroomcake\"",
        "description": " ※prefab ID: shroomcake\n ※Name: Mushy Cake\n ※prefab Version: DST-632551 "
    },
    "prefab:shroomcake(ReverseSearch)": {
        "prefix": "p+Mushy Cake",
        "body": "\"shroomcake\"",
        "description": " ※prefab ID: shroomcake\n ※Name: Mushy Cake\n ※prefab Version: DST-632551 "
    },
    "prefab:mutator_dropper(ID Complete)": {
        "prefix": "p+mutator_dropper",
        "body": "\"mutator_dropper\"",
        "description": " ※prefab ID: mutator_dropper\n ※Name: Dangler Switcherdoodle\n ※Recipe: \n\t+ 1 x: Monster Meat/monstermeat\n\t+ 1 x: Silk/silk\n\t+ 1 x: Bunny Puff/manrabbit_tail\n ※Required Tech: \n\t+ LV.1 : Spider Care/SPIDERCRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:mutator_dropper(ReverseSearch)": {
        "prefix": "p+Dangler Switcherdoodle",
        "body": "\"mutator_dropper\"",
        "description": " ※prefab ID: mutator_dropper\n ※Name: Dangler Switcherdoodle\n ※Recipe: \n\t+ 1 x: Monster Meat/monstermeat\n\t+ 1 x: Silk/silk\n\t+ 1 x: Bunny Puff/manrabbit_tail\n ※Required Tech: \n\t+ LV.1 : Spider Care/SPIDERCRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:gestalt(ID Complete)": {
        "prefix": "p+gestalt",
        "body": "\"gestalt\"",
        "description": " ※prefab ID: gestalt\n ※Name: Gestalt\n ※prefab Version: DST-632551 "
    },
    "prefab:gestalt(ReverseSearch)": {
        "prefix": "p+Gestalt",
        "body": "\"gestalt\"",
        "description": " ※prefab ID: gestalt\n ※Name: Gestalt\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishinglure_hermit_heavy(ID Complete)": {
        "prefix": "p+oceanfishinglure_hermit_heavy",
        "body": "\"oceanfishinglure_hermit_heavy\"",
        "description": " ※prefab ID: oceanfishinglure_hermit_heavy\n ※Name: Heavy Weighted Lure\n ※Recipe: \n\t+ 1 x: Cookie Cutter Shell/cookiecuttershell\n\t+ 1 x: Beefalo Wool/beefalowool\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishinglure_hermit_heavy(ReverseSearch)": {
        "prefix": "p+Heavy Weighted Lure",
        "body": "\"oceanfishinglure_hermit_heavy\"",
        "description": " ※prefab ID: oceanfishinglure_hermit_heavy\n ※Name: Heavy Weighted Lure\n ※Recipe: \n\t+ 1 x: Cookie Cutter Shell/cookiecuttershell\n\t+ 1 x: Beefalo Wool/beefalowool\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:kabobs(ID Complete)": {
        "prefix": "p+kabobs",
        "body": "\"kabobs\"",
        "description": " ※prefab ID: kabobs\n ※Name: Kabobs\n ※prefab Version: DST-632551 "
    },
    "prefab:kabobs(ReverseSearch)": {
        "prefix": "p+Kabobs",
        "body": "\"kabobs\"",
        "description": " ※prefab ID: kabobs\n ※Name: Kabobs\n ※prefab Version: DST-632551 "
    },
    "prefab:shadow_leech(ID Complete)": {
        "prefix": "p+shadow_leech",
        "body": "\"shadow_leech\"",
        "description": " ※prefab ID: shadow_leech\n ※Name: Parasitic Shadeling\n ※prefab Version: DST-632551 "
    },
    "prefab:shadow_leech(ReverseSearch)": {
        "prefix": "p+Parasitic Shadeling",
        "body": "\"shadow_leech\"",
        "description": " ※prefab ID: shadow_leech\n ※Name: Parasitic Shadeling\n ※prefab Version: DST-632551 "
    },
    "prefab:moonspiderden(ID Complete)": {
        "prefix": "p+moonspiderden",
        "body": "\"moonspiderden\"",
        "description": " ※prefab ID: moonspiderden\n ※Name: Shattered Spider Hole\n ※prefab Version: DST-632551 "
    },
    "prefab:moonspiderden(ReverseSearch)": {
        "prefix": "p+Shattered Spider Hole",
        "body": "\"moonspiderden\"",
        "description": " ※prefab ID: moonspiderden\n ※Name: Shattered Spider Hole\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_042(ID Complete)": {
        "prefix": "p+quagmire_food_042",
        "body": "\"quagmire_food_042\"",
        "description": " ※prefab ID: quagmire_food_042\n ※Name: Candy\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_042(ReverseSearch)": {
        "prefix": "p+Candy",
        "body": "\"quagmire_food_042\"",
        "description": " ※prefab ID: quagmire_food_042\n ※Name: Candy\n ※prefab Version: DST-632551 "
    },
    "prefab:tacklestation(ID Complete)": {
        "prefix": "p+tacklestation",
        "body": "\"tacklestation\"",
        "description": " ※prefab ID: tacklestation\n ※Name: Tackle Receptacle\n ※Recipe: \n\t+ 1 x: Driftwood Piece/driftwood_log\n\t+ 1 x: Electrical Doodad/transistor\n\t+ 1 x: Bone Shards/boneshard\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:tacklestation(ReverseSearch)": {
        "prefix": "p+Tackle Receptacle",
        "body": "\"tacklestation\"",
        "description": " ※prefab ID: tacklestation\n ※Name: Tackle Receptacle\n ※Recipe: \n\t+ 1 x: Driftwood Piece/driftwood_log\n\t+ 1 x: Electrical Doodad/transistor\n\t+ 1 x: Bone Shards/boneshard\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:eyemaskhat(ID Complete)": {
        "prefix": "p+eyemaskhat",
        "body": "\"eyemaskhat\"",
        "description": " ※prefab ID: eyemaskhat\n ※Name: Eye Mask\n ※Recipe: \n\t+ 3 x: Milky Whites/milkywhites\n\t+ 2 x: Monster Meat/monstermeat\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:eyemaskhat(ReverseSearch)": {
        "prefix": "p+Eye Mask",
        "body": "\"eyemaskhat\"",
        "description": " ※prefab ID: eyemaskhat\n ※Name: Eye Mask\n ※Recipe: \n\t+ 3 x: Milky Whites/milkywhites\n\t+ 2 x: Monster Meat/monstermeat\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:alterguardian_phase1(ID Complete)": {
        "prefix": "p+alterguardian_phase1",
        "body": "\"alterguardian_phase1\"",
        "description": " ※prefab ID: alterguardian_phase1\n ※Name: Celestial Champion\n ※prefab Version: DST-632551 "
    },
    "prefab:alterguardian_phase1(ReverseSearch)": {
        "prefix": "p+Celestial Champion",
        "body": "\"alterguardian_phase1\"",
        "description": " ※prefab ID: alterguardian_phase1\n ※Name: Celestial Champion\n ※prefab Version: DST-632551 "
    },
    "prefab:wall_stone_2(ID Complete)": {
        "prefix": "p+wall_stone_2",
        "body": "\"wall_stone_2\"",
        "description": " ※prefab ID: wall_stone_2\n ※Name: Archival Stone Wall\n ※prefab Version: DST-632551 "
    },
    "prefab:wall_stone_2(ReverseSearch)": {
        "prefix": "p+Archival Stone Wall",
        "body": "\"wall_stone_2\"",
        "description": " ※prefab ID: wall_stone_2\n ※Name: Archival Stone Wall\n ※prefab Version: DST-632551 "
    },
    "prefab:yellowamulet(ID Complete)": {
        "prefix": "p+yellowamulet",
        "body": "\"yellowamulet\"",
        "description": " ※prefab ID: yellowamulet\n ※Name: Magiluminescence\n ※Recipe: \n\t+ 2 x: Thulecite/thulecite\n\t+ 3 x: Nightmare Fuel/nightmarefuel\n\t+ 1 x: Yellow Gem/yellowgem\n ※Required Tech: \n\t+ LV.2 : Ancient/ANCIENT\n ※prefab Version: DST-632551 "
    },
    "prefab:yellowamulet(ReverseSearch)": {
        "prefix": "p+Magiluminescence",
        "body": "\"yellowamulet\"",
        "description": " ※prefab ID: yellowamulet\n ※Name: Magiluminescence\n ※Recipe: \n\t+ 2 x: Thulecite/thulecite\n\t+ 3 x: Nightmare Fuel/nightmarefuel\n\t+ 1 x: Yellow Gem/yellowgem\n ※Required Tech: \n\t+ LV.2 : Ancient/ANCIENT\n ※prefab Version: DST-632551 "
    },
    "prefab:pondeel(ID Complete)": {
        "prefix": "p+pondeel",
        "body": "\"pondeel\"",
        "description": " ※prefab ID: pondeel\n ※Name: Live Eel\n ※prefab Version: DST-632551 "
    },
    "prefab:pondeel(ReverseSearch)": {
        "prefix": "p+Live Eel",
        "body": "\"pondeel\"",
        "description": " ※prefab ID: pondeel\n ※Name: Live Eel\n ※prefab Version: DST-632551 "
    },
    "prefab:leif_idol(ID Complete)": {
        "prefix": "p+leif_idol",
        "body": "\"leif_idol\"",
        "description": " ※prefab ID: leif_idol\n ※Name: Treeguard Idol\n ※Recipe: \n\t+ 3 x: Cut Grass/cutgrass\n\t+ 2 x: Living Log/livinglog\n\t+ 5 x: Nightmare Fuel/nightmarefuel\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:leif_idol(ReverseSearch)": {
        "prefix": "p+Treeguard Idol",
        "body": "\"leif_idol\"",
        "description": " ※prefab ID: leif_idol\n ※Name: Treeguard Idol\n ※Recipe: \n\t+ 3 x: Cut Grass/cutgrass\n\t+ 2 x: Living Log/livinglog\n\t+ 5 x: Nightmare Fuel/nightmarefuel\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:lunar_grazer(ID Complete)": {
        "prefix": "p+lunar_grazer",
        "body": "\"lunar_grazer\"",
        "description": " ※prefab ID: lunar_grazer\n ※Name: Grazer\n ※prefab Version: DST-632551 "
    },
    "prefab:lunar_grazer(ReverseSearch)": {
        "prefix": "p+Grazer",
        "body": "\"lunar_grazer\"",
        "description": " ※prefab ID: lunar_grazer\n ※Name: Grazer\n ※prefab Version: DST-632551 "
    },
    "prefab:monkeyisland_portal_debris(ID Complete)": {
        "prefix": "p+monkeyisland_portal_debris",
        "body": "\"monkeyisland_portal_debris\"",
        "description": " ※prefab ID: monkeyisland_portal_debris\n ※Name: Broken Machinery\n ※prefab Version: DST-632551 "
    },
    "prefab:monkeyisland_portal_debris(ReverseSearch)": {
        "prefix": "p+Broken Machinery",
        "body": "\"monkeyisland_portal_debris\"",
        "description": " ※prefab ID: monkeyisland_portal_debris\n ※Name: Broken Machinery\n ※prefab Version: DST-632551 "
    },
    "prefab:pond(ID Complete)": {
        "prefix": "p+pond",
        "body": "\"pond\"",
        "description": " ※prefab ID: pond\n ※Name: Pond\n ※prefab Version: DST-632551 "
    },
    "prefab:pond(ReverseSearch)": {
        "prefix": "p+Pond",
        "body": "\"pond\"",
        "description": " ※prefab ID: pond\n ※Name: Pond\n ※prefab Version: DST-632551 "
    },
    "prefab:pondfish(ID Complete)": {
        "prefix": "p+pondfish",
        "body": "\"pondfish\"",
        "description": " ※prefab ID: pondfish\n ※Name: Freshwater Fish\n ※prefab Version: DST-632551 "
    },
    "prefab:pondfish(ReverseSearch)": {
        "prefix": "p+Freshwater Fish",
        "body": "\"pondfish\"",
        "description": " ※prefab ID: pondfish\n ※Name: Freshwater Fish\n ※prefab Version: DST-632551 "
    },
    "prefab:voidcloth_boomerang(ID Complete)": {
        "prefix": "p+voidcloth_boomerang",
        "body": "\"voidcloth_boomerang\"",
        "description": " ※prefab ID: voidcloth_boomerang\n ※Name: Gloomerang\n ※Recipe: \n\t+ 4 x: Pure Horror/horrorfuel\n\t+ 2 x: Dark Tatters/voidcloth\n ※Required Tech: \n\t+ LV.2 : Shadowcraft/SHADOWFORGING\n ※prefab Version: DST-632551 "
    },
    "prefab:voidcloth_boomerang(ReverseSearch)": {
        "prefix": "p+Gloomerang",
        "body": "\"voidcloth_boomerang\"",
        "description": " ※prefab ID: voidcloth_boomerang\n ※Name: Gloomerang\n ※Recipe: \n\t+ 4 x: Pure Horror/horrorfuel\n\t+ 2 x: Dark Tatters/voidcloth\n ※Required Tech: \n\t+ LV.2 : Shadowcraft/SHADOWFORGING\n ※prefab Version: DST-632551 "
    },
    "prefab:carrat(ID Complete)": {
        "prefix": "p+carrat",
        "body": "\"carrat\"",
        "description": " ※prefab ID: carrat\n ※Name: Carrat\n ※prefab Version: DST-632551 "
    },
    "prefab:carrat(ReverseSearch)": {
        "prefix": "p+Carrat",
        "body": "\"carrat\"",
        "description": " ※prefab ID: carrat\n ※Name: Carrat\n ※prefab Version: DST-632551 "
    },
    "prefab:milkywhites(ID Complete)": {
        "prefix": "p+milkywhites",
        "body": "\"milkywhites\"",
        "description": " ※prefab ID: milkywhites\n ※Name: Milky Whites\n ※prefab Version: DST-632551 "
    },
    "prefab:milkywhites(ReverseSearch)": {
        "prefix": "p+Milky Whites",
        "body": "\"milkywhites\"",
        "description": " ※prefab ID: milkywhites\n ※Name: Milky Whites\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_036(ID Complete)": {
        "prefix": "p+quagmire_food_036",
        "body": "\"quagmire_food_036\"",
        "description": " ※prefab ID: quagmire_food_036\n ※Name: Fish Steak\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_036(ReverseSearch)": {
        "prefix": "p+Fish Steak",
        "body": "\"quagmire_food_036\"",
        "description": " ※prefab ID: quagmire_food_036\n ※Name: Fish Steak\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_meteor_blueprint(ID Complete)": {
        "prefix": "p+turf_meteor_blueprint",
        "body": "\"turf_meteor_blueprint\"",
        "description": " ※prefab ID: turf_meteor_blueprint\n ※Name: Crater Turf Blueprint\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_meteor_blueprint(ReverseSearch)": {
        "prefix": "p+Crater Turf Blueprint",
        "body": "\"turf_meteor_blueprint\"",
        "description": " ※prefab ID: turf_meteor_blueprint\n ※Name: Crater Turf Blueprint\n ※prefab Version: DST-632551 "
    },
    "prefab:archive_lockbox(ID Complete)": {
        "prefix": "p+archive_lockbox",
        "body": "\"archive_lockbox\"",
        "description": " ※prefab ID: archive_lockbox\n ※Name: Distilled Knowledge\n ※prefab Version: DST-632551 "
    },
    "prefab:archive_lockbox(ReverseSearch)": {
        "prefix": "p+Distilled Knowledge",
        "body": "\"archive_lockbox\"",
        "description": " ※prefab ID: archive_lockbox\n ※Name: Distilled Knowledge\n ※prefab Version: DST-632551 "
    },
    "prefab:yotr_rabbitshrine(ID Complete)": {
        "prefix": "p+yotr_rabbitshrine",
        "body": "\"yotr_rabbitshrine\"",
        "description": " ※prefab ID: yotr_rabbitshrine\n ※Name: Bunnyman Shrine\n ※Recipe: \n\t+ 4 x: Gold Nugget/goldnugget\n\t+ 2 x: Boards/boards\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:yotr_rabbitshrine(ReverseSearch)": {
        "prefix": "p+Bunnyman Shrine",
        "body": "\"yotr_rabbitshrine\"",
        "description": " ※prefab ID: yotr_rabbitshrine\n ※Name: Bunnyman Shrine\n ※Recipe: \n\t+ 4 x: Gold Nugget/goldnugget\n\t+ 2 x: Boards/boards\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:spiderhole(ID Complete)": {
        "prefix": "p+spiderhole",
        "body": "\"spiderhole\"",
        "description": " ※prefab ID: spiderhole\n ※Name: Spilagmite\n ※prefab Version: DST-632551 "
    },
    "prefab:spiderhole(ReverseSearch)": {
        "prefix": "p+Spilagmite",
        "body": "\"spiderhole\"",
        "description": " ※prefab ID: spiderhole\n ※Name: Spilagmite\n ※prefab Version: DST-632551 "
    },
    "prefab:pocketwatch_revive(ID Complete)": {
        "prefix": "p+pocketwatch_revive",
        "body": "\"pocketwatch_revive\"",
        "description": " ※prefab ID: pocketwatch_revive\n ※Name: Second Chance Watch\n ※Recipe: \n\t+ 1 x: Time Pieces/pocketwatch_parts\n\t+ 2 x: Living Log/livinglog\n\t+ 4 x: Bone Shards/boneshard\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:pocketwatch_revive(ReverseSearch)": {
        "prefix": "p+Second Chance Watch",
        "body": "\"pocketwatch_revive\"",
        "description": " ※prefab ID: pocketwatch_revive\n ※Name: Second Chance Watch\n ※Recipe: \n\t+ 1 x: Time Pieces/pocketwatch_parts\n\t+ 2 x: Living Log/livinglog\n\t+ 4 x: Bone Shards/boneshard\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:critter_dragonling(ID Complete)": {
        "prefix": "p+critter_dragonling",
        "body": "\"critter_dragonling\"",
        "description": " ※prefab ID: critter_dragonling\n ※Name: Broodling\n ※prefab Version: DST-632551 "
    },
    "prefab:critter_dragonling(ReverseSearch)": {
        "prefix": "p+Broodling",
        "body": "\"critter_dragonling\"",
        "description": " ※prefab ID: critter_dragonling\n ※Name: Broodling\n ※prefab Version: DST-632551 "
    },
    "prefab:yotr_decor_1(ID Complete)": {
        "prefix": "p+yotr_decor_1",
        "body": "\"yotr_decor_1\"",
        "description": " ※prefab ID: yotr_decor_1\n ※Name: Short Rabbit Lamp\n ※prefab Version: DST-632551 "
    },
    "prefab:yotr_decor_1(ReverseSearch)": {
        "prefix": "p+Short Rabbit Lamp",
        "body": "\"yotr_decor_1\"",
        "description": " ※prefab ID: yotr_decor_1\n ※Name: Short Rabbit Lamp\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_020(ID Complete)": {
        "prefix": "p+quagmire_food_020",
        "body": "\"quagmire_food_020\"",
        "description": " ※prefab ID: quagmire_food_020\n ※Name: Sliders\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_020(ReverseSearch)": {
        "prefix": "p+Sliders",
        "body": "\"quagmire_food_020\"",
        "description": " ※prefab ID: quagmire_food_020\n ※Name: Sliders\n ※prefab Version: DST-632551 "
    },
    "prefab:book_bees(ID Complete)": {
        "prefix": "p+book_bees",
        "body": "\"book_bees\"",
        "description": " ※prefab ID: book_bees\n ※Name: Apicultural Notes\n ※Recipe: \n\t+ 2 x: Papyrus/papyrus\n\t+ 8 x: Stinger/stinger\n\t+ 4 x: Honey/honey\n ※Required Tech: \n\t+ LV.1 : /BOOKCRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:book_bees(ReverseSearch)": {
        "prefix": "p+Apicultural Notes",
        "body": "\"book_bees\"",
        "description": " ※prefab ID: book_bees\n ※Name: Apicultural Notes\n ※Recipe: \n\t+ 2 x: Papyrus/papyrus\n\t+ 8 x: Stinger/stinger\n\t+ 4 x: Honey/honey\n ※Required Tech: \n\t+ LV.1 : /BOOKCRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:boatrace_checkpoint(ID Complete)": {
        "prefix": "p+boatrace_checkpoint",
        "body": "\"boatrace_checkpoint\"",
        "description": " ※prefab ID: boatrace_checkpoint\n ※Name: Race Checkpoint\n ※prefab Version: DST-632551 "
    },
    "prefab:boatrace_checkpoint(ReverseSearch)": {
        "prefix": "p+Race Checkpoint",
        "body": "\"boatrace_checkpoint\"",
        "description": " ※prefab ID: boatrace_checkpoint\n ※Name: Race Checkpoint\n ※prefab Version: DST-632551 "
    },
    "prefab:mushtree_tall(ID Complete)": {
        "prefix": "p+mushtree_tall",
        "body": "\"mushtree_tall\"",
        "description": " ※prefab ID: mushtree_tall\n ※Name: Blue Mushtree\n ※prefab Version: DST-632551 "
    },
    "prefab:mushtree_tall(ReverseSearch)": {
        "prefix": "p+Blue Mushtree",
        "body": "\"mushtree_tall\"",
        "description": " ※prefab ID: mushtree_tall\n ※Name: Blue Mushtree\n ※prefab Version: DST-632551 "
    },
    "prefab:ticoon_builder(ID Complete)": {
        "prefix": "p+ticoon_builder",
        "body": "\"ticoon_builder\"",
        "description": " ※prefab ID: ticoon_builder\n ※Name: Ticoon\n ※Recipe: \n\t+ 1 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /CATCOONOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:ticoon_builder(ReverseSearch)": {
        "prefix": "p+Ticoon",
        "body": "\"ticoon_builder\"",
        "description": " ※prefab ID: ticoon_builder\n ※Name: Ticoon\n ※Recipe: \n\t+ 1 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /CATCOONOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_merm_cart2(ID Complete)": {
        "prefix": "p+quagmire_merm_cart2",
        "body": "\"quagmire_merm_cart2\"",
        "description": " ※prefab ID: quagmire_merm_cart2\n ※Name: Pipton's Cart\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_merm_cart2(ReverseSearch)": {
        "prefix": "p+Pipton's Cart",
        "body": "\"quagmire_merm_cart2\"",
        "description": " ※prefab ID: quagmire_merm_cart2\n ※Name: Pipton's Cart\n ※prefab Version: DST-632551 "
    },
    "prefab:merm_toolshed_upgraded(ID Complete)": {
        "prefix": "p+merm_toolshed_upgraded",
        "body": "\"merm_toolshed_upgraded\"",
        "description": " ※prefab ID: merm_toolshed_upgraded\n ※Name: Slightly Less Shoddy Tool Shed\n ※Recipe: \n\t+ 4 x: Boards/boards\n\t+ 1 x: Tentacle Spots/tentaclespots\n\t+ 5 x: Twigs/twigs\n\t+ 5 x: Rocks/rocks\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:merm_toolshed_upgraded(ReverseSearch)": {
        "prefix": "p+Slightly Less Shoddy Tool Shed",
        "body": "\"merm_toolshed_upgraded\"",
        "description": " ※prefab ID: merm_toolshed_upgraded\n ※Name: Slightly Less Shoddy Tool Shed\n ※Recipe: \n\t+ 4 x: Boards/boards\n\t+ 1 x: Tentacle Spots/tentaclespots\n\t+ 5 x: Twigs/twigs\n\t+ 5 x: Rocks/rocks\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:halloween_ornament_5(ID Complete)": {
        "prefix": "p+halloween_ornament_5",
        "body": "\"halloween_ornament_5\"",
        "description": " ※prefab ID: halloween_ornament_5\n ※Name: Dangling Depth Dweller Decoration\n ※prefab Version: DST-632551 "
    },
    "prefab:halloween_ornament_5(ReverseSearch)": {
        "prefix": "p+Dangling Depth Dweller Decoration",
        "body": "\"halloween_ornament_5\"",
        "description": " ※prefab ID: halloween_ornament_5\n ※Name: Dangling Depth Dweller Decoration\n ※prefab Version: DST-632551 "
    },
    "prefab:hermitcrab(ID Complete)": {
        "prefix": "p+hermitcrab",
        "body": "\"hermitcrab\"",
        "description": " ※prefab ID: hermitcrab\n ※Name: Crabby Hermit\n ※prefab Version: DST-632551 "
    },
    "prefab:hermitcrab(ReverseSearch)": {
        "prefix": "p+Crabby Hermit",
        "body": "\"hermitcrab\"",
        "description": " ※prefab ID: hermitcrab\n ※Name: Crabby Hermit\n ※prefab Version: DST-632551 "
    },
    "prefab:fence(ID Complete)": {
        "prefix": "p+fence",
        "body": "\"fence\"",
        "description": " ※prefab ID: fence\n ※Name: Wood Fence\n ※prefab Version: DST-632551 "
    },
    "prefab:fence(ReverseSearch)": {
        "prefix": "p+Wood Fence",
        "body": "\"fence\"",
        "description": " ※prefab ID: fence\n ※Name: Wood Fence\n ※prefab Version: DST-632551 "
    },
    "prefab:canary_poisoned(ID Complete)": {
        "prefix": "p+canary_poisoned",
        "body": "\"canary_poisoned\"",
        "description": " ※prefab ID: canary_poisoned\n ※Name: Canary (Volatile)\n ※prefab Version: DST-632551 "
    },
    "prefab:canary_poisoned(ReverseSearch)": {
        "prefix": "p+Canary (Volatile)",
        "body": "\"canary_poisoned\"",
        "description": " ※prefab ID: canary_poisoned\n ※Name: Canary (Volatile)\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivaldecor_banner_kit(ID Complete)": {
        "prefix": "p+carnivaldecor_banner_kit",
        "body": "\"carnivaldecor_banner_kit\"",
        "description": " ※prefab ID: carnivaldecor_banner_kit\n ※Name: Light Catcher Kit\n ※Recipe: \n\t+ 24 x: Prize Tickets/carnival_prizeticket\n ※Required Tech: \n\t+ LV.1 : Trinket Trove/CARNIVAL_PRIZESHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivaldecor_banner_kit(ReverseSearch)": {
        "prefix": "p+Light Catcher Kit",
        "body": "\"carnivaldecor_banner_kit\"",
        "description": " ※prefab ID: carnivaldecor_banner_kit\n ※Name: Light Catcher Kit\n ※Recipe: \n\t+ 24 x: Prize Tickets/carnival_prizeticket\n ※Required Tech: \n\t+ LV.1 : Trinket Trove/CARNIVAL_PRIZESHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:largeguard_alterguardian_projectile(ID Complete)": {
        "prefix": "p+largeguard_alterguardian_projectile",
        "body": "\"largeguard_alterguardian_projectile\"",
        "description": " ※prefab ID: largeguard_alterguardian_projectile\n ※Name: Greater Gestalt\n ※prefab Version: DST-632551 "
    },
    "prefab:largeguard_alterguardian_projectile(ReverseSearch)": {
        "prefix": "p+Greater Gestalt",
        "body": "\"largeguard_alterguardian_projectile\"",
        "description": " ※prefab ID: largeguard_alterguardian_projectile\n ※Name: Greater Gestalt\n ※prefab Version: DST-632551 "
    },
    "prefab:farm_plow(ID Complete)": {
        "prefix": "p+farm_plow",
        "body": "\"farm_plow\"",
        "description": " ※prefab ID: farm_plow\n ※Name: Garden Digamajig\n ※prefab Version: DST-632551 "
    },
    "prefab:farm_plow(ReverseSearch)": {
        "prefix": "p+Garden Digamajig",
        "body": "\"farm_plow\"",
        "description": " ※prefab ID: farm_plow\n ※Name: Garden Digamajig\n ※prefab Version: DST-632551 "
    },
    "prefab:ghostlyelixir_fastregen(ID Complete)": {
        "prefix": "p+ghostlyelixir_fastregen",
        "body": "\"ghostlyelixir_fastregen\"",
        "description": " ※prefab ID: ghostlyelixir_fastregen\n ※Name: Spectral Cure-All\n ※Recipe: \n\t+ 1 x: Telltale Heart/reviver\n\t+ 3 x: Mourning Glory/ghostflower\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:ghostlyelixir_fastregen(ReverseSearch)": {
        "prefix": "p+Spectral Cure-All",
        "body": "\"ghostlyelixir_fastregen\"",
        "description": " ※prefab ID: ghostlyelixir_fastregen\n ※Name: Spectral Cure-All\n ※Recipe: \n\t+ 1 x: Telltale Heart/reviver\n\t+ 3 x: Mourning Glory/ghostflower\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_057(ID Complete)": {
        "prefix": "p+quagmire_food_057",
        "body": "\"quagmire_food_057\"",
        "description": " ※prefab ID: quagmire_food_057\n ※Name: Pizza\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_057(ReverseSearch)": {
        "prefix": "p+Pizza",
        "body": "\"quagmire_food_057\"",
        "description": " ※prefab ID: quagmire_food_057\n ※Name: Pizza\n ※prefab Version: DST-632551 "
    },
    "prefab:feather_robin(ID Complete)": {
        "prefix": "p+feather_robin",
        "body": "\"feather_robin\"",
        "description": " ※prefab ID: feather_robin\n ※Name: Crimson Feather\n ※prefab Version: DST-632551 "
    },
    "prefab:feather_robin(ReverseSearch)": {
        "prefix": "p+Crimson Feather",
        "body": "\"feather_robin\"",
        "description": " ※prefab ID: feather_robin\n ※Name: Crimson Feather\n ※prefab Version: DST-632551 "
    },
    "prefab:perogies(ID Complete)": {
        "prefix": "p+perogies",
        "body": "\"perogies\"",
        "description": " ※prefab ID: perogies\n ※Name: Pierogi\n ※prefab Version: DST-632551 "
    },
    "prefab:perogies(ReverseSearch)": {
        "prefix": "p+Pierogi",
        "body": "\"perogies\"",
        "description": " ※prefab ID: perogies\n ※Name: Pierogi\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_toadstool_builder(ID Complete)": {
        "prefix": "p+chesspiece_toadstool_builder",
        "body": "\"chesspiece_toadstool_builder\"",
        "description": " ※prefab ID: chesspiece_toadstool_builder\n ※Name: Toadstool Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_toadstool_builder(ReverseSearch)": {
        "prefix": "p+Toadstool Figure",
        "body": "\"chesspiece_toadstool_builder\"",
        "description": " ※prefab ID: chesspiece_toadstool_builder\n ※Name: Toadstool Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:sharkboi(ID Complete)": {
        "prefix": "p+sharkboi",
        "body": "\"sharkboi\"",
        "description": " ※prefab ID: sharkboi\n ※Name: Frostjaw\n ※prefab Version: DST-632551 "
    },
    "prefab:sharkboi(ReverseSearch)": {
        "prefix": "p+Frostjaw",
        "body": "\"sharkboi\"",
        "description": " ※prefab ID: sharkboi\n ※Name: Frostjaw\n ※prefab Version: DST-632551 "
    },
    "prefab:charlierose(ID Complete)": {
        "prefix": "p+charlierose",
        "body": "\"charlierose\"",
        "description": " ※prefab ID: charlierose\n ※Name: Fragile Rose\n ※prefab Version: DST-632551 "
    },
    "prefab:charlierose(ReverseSearch)": {
        "prefix": "p+Fragile Rose",
        "body": "\"charlierose\"",
        "description": " ※prefab ID: charlierose\n ※Name: Fragile Rose\n ※prefab Version: DST-632551 "
    },
    "prefab:icepack(ID Complete)": {
        "prefix": "p+icepack",
        "body": "\"icepack\"",
        "description": " ※prefab ID: icepack\n ※Name: Insulated Pack\n ※Recipe: \n\t+ 1 x: Thick Fur/bearger_fur\n\t+ 1 x: Gears/gears\n\t+ 1 x: Electrical Doodad/transistor\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:icepack(ReverseSearch)": {
        "prefix": "p+Insulated Pack",
        "body": "\"icepack\"",
        "description": " ※prefab ID: icepack\n ※Name: Insulated Pack\n ※Recipe: \n\t+ 1 x: Thick Fur/bearger_fur\n\t+ 1 x: Gears/gears\n\t+ 1 x: Electrical Doodad/transistor\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:doll_blueprint(ID Complete)": {
        "prefix": "p+doll_blueprint",
        "body": "\"doll_blueprint\"",
        "description": " ※prefab ID: doll_blueprint\n ※Name: Dolled-Up Costume Pattern\n ※prefab Version: DST-632551 "
    },
    "prefab:doll_blueprint(ReverseSearch)": {
        "prefix": "p+Dolled-Up Costume Pattern",
        "body": "\"doll_blueprint\"",
        "description": " ※prefab ID: doll_blueprint\n ※Name: Dolled-Up Costume Pattern\n ※prefab Version: DST-632551 "
    },
    "prefab:meat_dried(ID Complete)": {
        "prefix": "p+meat_dried",
        "body": "\"meat_dried\"",
        "description": " ※prefab ID: meat_dried\n ※Name: Jerky\n ※prefab Version: DST-632551 "
    },
    "prefab:meat_dried(ReverseSearch)": {
        "prefix": "p+Jerky",
        "body": "\"meat_dried\"",
        "description": " ※prefab ID: meat_dried\n ※Name: Jerky\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishingbobber_malbatross(ID Complete)": {
        "prefix": "p+oceanfishingbobber_malbatross",
        "body": "\"oceanfishingbobber_malbatross\"",
        "description": " ※prefab ID: oceanfishingbobber_malbatross\n ※Name: Malbatross Quill Float\n ※Recipe: \n\t+ 1 x: Malbatross Feather/malbatross_feather\n ※Required Tech: \n\t+ LV.1 : Fishing/FISHING\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishingbobber_malbatross(ReverseSearch)": {
        "prefix": "p+Malbatross Quill Float",
        "body": "\"oceanfishingbobber_malbatross\"",
        "description": " ※prefab ID: oceanfishingbobber_malbatross\n ※Name: Malbatross Quill Float\n ※Recipe: \n\t+ 1 x: Malbatross Feather/malbatross_feather\n ※Required Tech: \n\t+ LV.1 : Fishing/FISHING\n ※prefab Version: DST-632551 "
    },
    "prefab:mermhouse(ID Complete)": {
        "prefix": "p+mermhouse",
        "body": "\"mermhouse\"",
        "description": " ※prefab ID: mermhouse\n ※Name: Leaky Shack\n ※prefab Version: DST-632551 "
    },
    "prefab:mermhouse(ReverseSearch)": {
        "prefix": "p+Leaky Shack",
        "body": "\"mermhouse\"",
        "description": " ※prefab ID: mermhouse\n ※Name: Leaky Shack\n ※prefab Version: DST-632551 "
    },
    "prefab:walkingplank_grass(ID Complete)": {
        "prefix": "p+walkingplank_grass",
        "body": "\"walkingplank_grass\"",
        "description": " ※prefab ID: walkingplank_grass\n ※Name: Plank\n ※prefab Version: DST-632551 "
    },
    "prefab:walkingplank_grass(ReverseSearch)": {
        "prefix": "p+Plank",
        "body": "\"walkingplank_grass\"",
        "description": " ※prefab ID: walkingplank_grass\n ※Name: Plank\n ※prefab Version: DST-632551 "
    },
    "prefab:thulecite(ID Complete)": {
        "prefix": "p+thulecite",
        "body": "\"thulecite\"",
        "description": " ※prefab ID: thulecite\n ※Name: Thulecite\n ※Recipe: \n\t+ 6 x: Thulecite Fragments/thulecite_pieces\n ※Required Tech: \n\t+ LV.2 : Ancient/ANCIENT\n ※prefab Version: DST-632551 "
    },
    "prefab:thulecite(ReverseSearch)": {
        "prefix": "p+Thulecite",
        "body": "\"thulecite\"",
        "description": " ※prefab ID: thulecite\n ※Name: Thulecite\n ※Recipe: \n\t+ 6 x: Thulecite Fragments/thulecite_pieces\n ※Required Tech: \n\t+ LV.2 : Ancient/ANCIENT\n ※prefab Version: DST-632551 "
    },
    "prefab:waterplant(ID Complete)": {
        "prefix": "p+waterplant",
        "body": "\"waterplant\"",
        "description": " ※prefab ID: waterplant\n ※Name: Sea Weed\n ※prefab Version: DST-632551 "
    },
    "prefab:waterplant(ReverseSearch)": {
        "prefix": "p+Sea Weed",
        "body": "\"waterplant\"",
        "description": " ※prefab ID: waterplant\n ※Name: Sea Weed\n ※prefab Version: DST-632551 "
    },
    "prefab:nature_blueprint(ID Complete)": {
        "prefix": "p+nature_blueprint",
        "body": "\"nature_blueprint\"",
        "description": " ※prefab ID: nature_blueprint\n ※Name: Flowery Costume Pattern\n ※prefab Version: DST-632551 "
    },
    "prefab:nature_blueprint(ReverseSearch)": {
        "prefix": "p+Flowery Costume Pattern",
        "body": "\"nature_blueprint\"",
        "description": " ※prefab ID: nature_blueprint\n ※Name: Flowery Costume Pattern\n ※prefab Version: DST-632551 "
    },
    "prefab:saddle_war(ID Complete)": {
        "prefix": "p+saddle_war",
        "body": "\"saddle_war\"",
        "description": " ※prefab ID: saddle_war\n ※Name: War Saddle\n ※Recipe: \n\t+ 4 x: Rabbit/rabbit\n\t+ 4 x: Steel Wool/steelwool\n\t+ 10 x: Log/log\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:saddle_war(ReverseSearch)": {
        "prefix": "p+War Saddle",
        "body": "\"saddle_war\"",
        "description": " ※prefab ID: saddle_war\n ※Name: War Saddle\n ※Recipe: \n\t+ 4 x: Rabbit/rabbit\n\t+ 4 x: Steel Wool/steelwool\n\t+ 10 x: Log/log\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:book_silviculture(ID Complete)": {
        "prefix": "p+book_silviculture",
        "body": "\"book_silviculture\"",
        "description": " ※prefab ID: book_silviculture\n ※Name: Applied Silviculture\n ※Recipe: \n\t+ 2 x: Papyrus/papyrus\n\t+ 1 x: Living Log/livinglog\n ※Required Tech: \n\t+ LV.3 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:book_silviculture(ReverseSearch)": {
        "prefix": "p+Applied Silviculture",
        "body": "\"book_silviculture\"",
        "description": " ※prefab ID: book_silviculture\n ※Name: Applied Silviculture\n ※Recipe: \n\t+ 2 x: Papyrus/papyrus\n\t+ 1 x: Living Log/livinglog\n ※Required Tech: \n\t+ LV.3 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:tillweed(ID Complete)": {
        "prefix": "p+tillweed",
        "body": "\"tillweed\"",
        "description": " ※prefab ID: tillweed\n ※Name: Tillweeds\n ※prefab Version: DST-632551 "
    },
    "prefab:tillweed(ReverseSearch)": {
        "prefix": "p+Tillweeds",
        "body": "\"tillweed\"",
        "description": " ※prefab ID: tillweed\n ※Name: Tillweeds\n ※prefab Version: DST-632551 "
    },
    "prefab:wormwood(ID Complete)": {
        "prefix": "p+wormwood",
        "body": "\"wormwood\"",
        "description": " ※prefab ID: wormwood\n ※Name: Wormwood\n ※prefab Version: DST-632551 "
    },
    "prefab:wormwood(ReverseSearch)": {
        "prefix": "p+Wormwood",
        "body": "\"wormwood\"",
        "description": " ※prefab ID: wormwood\n ※Name: Wormwood\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_grill(ID Complete)": {
        "prefix": "p+quagmire_grill",
        "body": "\"quagmire_grill\"",
        "description": " ※prefab ID: quagmire_grill\n ※Name: Large Grill\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_grill(ReverseSearch)": {
        "prefix": "p+Large Grill",
        "body": "\"quagmire_grill\"",
        "description": " ※prefab ID: quagmire_grill\n ※Name: Large Grill\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_022(ID Complete)": {
        "prefix": "p+quagmire_food_022",
        "body": "\"quagmire_food_022\"",
        "description": " ※prefab ID: quagmire_food_022\n ※Name: Jelly Roll\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_022(ReverseSearch)": {
        "prefix": "p+Jelly Roll",
        "body": "\"quagmire_food_022\"",
        "description": " ※prefab ID: quagmire_food_022\n ※Name: Jelly Roll\n ※prefab Version: DST-632551 "
    },
    "prefab:lighter(ID Complete)": {
        "prefix": "p+lighter",
        "body": "\"lighter\"",
        "description": " ※prefab ID: lighter\n ※Name: Willow's Lighter\n ※Recipe: \n\t+ 1 x: Rope/rope\n\t+ 1 x: Gold Nugget/goldnugget\n\t+ 3 x: Petals/petals\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:lighter(ReverseSearch)": {
        "prefix": "p+Willow's Lighter",
        "body": "\"lighter\"",
        "description": " ※prefab ID: lighter\n ※Name: Willow's Lighter\n ※Recipe: \n\t+ 1 x: Rope/rope\n\t+ 1 x: Gold Nugget/goldnugget\n\t+ 3 x: Petals/petals\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:boat_rotator_kit(ID Complete)": {
        "prefix": "p+boat_rotator_kit",
        "body": "\"boat_rotator_kit\"",
        "description": " ※prefab ID: boat_rotator_kit\n ※Name: Rudder Kit\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 1 x: Rope/rope\n\t+ 1 x: Gears/gears\n ※Required Tech: \n\t+ LV.1 : Seafaring/SEAFARING\n ※prefab Version: DST-632551 "
    },
    "prefab:boat_rotator_kit(ReverseSearch)": {
        "prefix": "p+Rudder Kit",
        "body": "\"boat_rotator_kit\"",
        "description": " ※prefab ID: boat_rotator_kit\n ※Name: Rudder Kit\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 1 x: Rope/rope\n\t+ 1 x: Gears/gears\n ※Required Tech: \n\t+ LV.1 : Seafaring/SEAFARING\n ※prefab Version: DST-632551 "
    },
    "prefab:beequeenhive(ID Complete)": {
        "prefix": "p+beequeenhive",
        "body": "\"beequeenhive\"",
        "description": " ※prefab ID: beequeenhive\n ※Name: Honey Patch\n ※prefab Version: DST-632551 "
    },
    "prefab:beequeenhive(ReverseSearch)": {
        "prefix": "p+Honey Patch",
        "body": "\"beequeenhive\"",
        "description": " ※prefab ID: beequeenhive\n ※Name: Honey Patch\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_011(ID Complete)": {
        "prefix": "p+quagmire_food_011",
        "body": "\"quagmire_food_011\"",
        "description": " ※prefab ID: quagmire_food_011\n ※Name: Meat Skewers\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_011(ReverseSearch)": {
        "prefix": "p+Meat Skewers",
        "body": "\"quagmire_food_011\"",
        "description": " ※prefab ID: quagmire_food_011\n ※Name: Meat Skewers\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_cookedsmallmeat(ID Complete)": {
        "prefix": "p+quagmire_cookedsmallmeat",
        "body": "\"quagmire_cookedsmallmeat\"",
        "description": " ※prefab ID: quagmire_cookedsmallmeat\n ※Name: Cooked Meat Scraps\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_cookedsmallmeat(ReverseSearch)": {
        "prefix": "p+Cooked Meat Scraps",
        "body": "\"quagmire_cookedsmallmeat\"",
        "description": " ※prefab ID: quagmire_cookedsmallmeat\n ※Name: Cooked Meat Scraps\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishinglure_spoon_green(ID Complete)": {
        "prefix": "p+oceanfishinglure_spoon_green",
        "body": "\"oceanfishinglure_spoon_green\"",
        "description": " ※prefab ID: oceanfishinglure_spoon_green\n ※Name: Dusky Spoon\n ※Recipe: \n\t+ 2 x: Flint/flint\n\t+ 1 x: Green Cap/green_cap\n ※Required Tech: \n\t+ LV.1 : Fishing/FISHING\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishinglure_spoon_green(ReverseSearch)": {
        "prefix": "p+Dusky Spoon",
        "body": "\"oceanfishinglure_spoon_green\"",
        "description": " ※prefab ID: oceanfishinglure_spoon_green\n ※Name: Dusky Spoon\n ※Recipe: \n\t+ 2 x: Flint/flint\n\t+ 1 x: Green Cap/green_cap\n ※Required Tech: \n\t+ LV.1 : Fishing/FISHING\n ※prefab Version: DST-632551 "
    },
    "prefab:plantmeat_cooked(ID Complete)": {
        "prefix": "p+plantmeat_cooked",
        "body": "\"plantmeat_cooked\"",
        "description": " ※prefab ID: plantmeat_cooked\n ※Name: Cooked Leafy Meat\n ※prefab Version: DST-632551 "
    },
    "prefab:plantmeat_cooked(ReverseSearch)": {
        "prefix": "p+Cooked Leafy Meat",
        "body": "\"plantmeat_cooked\"",
        "description": " ※prefab ID: plantmeat_cooked\n ※Name: Cooked Leafy Meat\n ※prefab Version: DST-632551 "
    },
    "prefab:sketch(ID Complete)": {
        "prefix": "p+sketch",
        "body": "\"sketch\"",
        "description": " ※prefab ID: sketch\n ※Name: {item} Sketch\n ※prefab Version: DST-632551 "
    },
    "prefab:sketch(ReverseSearch)": {
        "prefix": "p+{item} Sketch",
        "body": "\"sketch\"",
        "description": " ※prefab ID: sketch\n ※Name: {item} Sketch\n ※prefab Version: DST-632551 "
    },
    "prefab:boards_bunch(ID Complete)": {
        "prefix": "p+boards_bunch",
        "body": "\"boards_bunch\"",
        "description": " ※prefab ID: boards_bunch\n ※Name: Bunch o' Boards\n ※Recipe: \n\t+ 20 x: Log/log\n ※Required Tech: \n\t+ LV.2 : Carpentry/CARPENTRY\n ※prefab Version: DST-632551 "
    },
    "prefab:boards_bunch(ReverseSearch)": {
        "prefix": "p+Bunch o' Boards",
        "body": "\"boards_bunch\"",
        "description": " ※prefab ID: boards_bunch\n ※Name: Bunch o' Boards\n ※Recipe: \n\t+ 20 x: Log/log\n ※Required Tech: \n\t+ LV.2 : Carpentry/CARPENTRY\n ※prefab Version: DST-632551 "
    },
    "prefab:petals(ID Complete)": {
        "prefix": "p+petals",
        "body": "\"petals\"",
        "description": " ※prefab ID: petals\n ※Name: Petals\n ※prefab Version: DST-632551 "
    },
    "prefab:petals(ReverseSearch)": {
        "prefix": "p+Petals",
        "body": "\"petals\"",
        "description": " ※prefab ID: petals\n ※Name: Petals\n ※prefab Version: DST-632551 "
    },
    "prefab:battlesong_instant_taunt(ID Complete)": {
        "prefix": "p+battlesong_instant_taunt",
        "body": "\"battlesong_instant_taunt\"",
        "description": " ※prefab ID: battlesong_instant_taunt\n ※Name: Rude Interlude\n ※Recipe: \n\t+ 1 x: Papyrus/papyrus\n\t+ 1 x: Feather Pencil/featherpencil\n\t+ 1 x: Toma Root/tomato\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:battlesong_instant_taunt(ReverseSearch)": {
        "prefix": "p+Rude Interlude",
        "body": "\"battlesong_instant_taunt\"",
        "description": " ※prefab ID: battlesong_instant_taunt\n ※Name: Rude Interlude\n ※Recipe: \n\t+ 1 x: Papyrus/papyrus\n\t+ 1 x: Feather Pencil/featherpencil\n\t+ 1 x: Toma Root/tomato\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:mulleddrink(ID Complete)": {
        "prefix": "p+mulleddrink",
        "body": "\"mulleddrink\"",
        "description": " ※prefab ID: mulleddrink\n ※Name: Mulled Punch\n ※prefab Version: DST-632551 "
    },
    "prefab:mulleddrink(ReverseSearch)": {
        "prefix": "p+Mulled Punch",
        "body": "\"mulleddrink\"",
        "description": " ※prefab ID: mulleddrink\n ※Name: Mulled Punch\n ※prefab Version: DST-632551 "
    },
    "prefab:kitcoondecor1(ID Complete)": {
        "prefix": "p+kitcoondecor1",
        "body": "\"kitcoondecor1\"",
        "description": " ※prefab ID: kitcoondecor1\n ※Name: Gobbler Wobbler\n ※Recipe: \n\t+ 12 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:kitcoondecor1(ReverseSearch)": {
        "prefix": "p+Gobbler Wobbler",
        "body": "\"kitcoondecor1\"",
        "description": " ※prefab ID: kitcoondecor1\n ※Name: Gobbler Wobbler\n ※Recipe: \n\t+ 12 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:green_mushroom(ID Complete)": {
        "prefix": "p+green_mushroom",
        "body": "\"green_mushroom\"",
        "description": " ※prefab ID: green_mushroom\n ※Name: Green Mushroom\n ※prefab Version: DST-632551 "
    },
    "prefab:green_mushroom(ReverseSearch)": {
        "prefix": "p+Green Mushroom",
        "body": "\"green_mushroom\"",
        "description": " ※prefab ID: green_mushroom\n ※Name: Green Mushroom\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_small_1(ID Complete)": {
        "prefix": "p+oceanfish_small_1",
        "body": "\"oceanfish_small_1\"",
        "description": " ※prefab ID: oceanfish_small_1\n ※Name: Runty Guppy\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_small_1(ReverseSearch)": {
        "prefix": "p+Runty Guppy",
        "body": "\"oceanfish_small_1\"",
        "description": " ※prefab ID: oceanfish_small_1\n ※Name: Runty Guppy\n ※prefab Version: DST-632551 "
    },
    "prefab:glommer(ID Complete)": {
        "prefix": "p+glommer",
        "body": "\"glommer\"",
        "description": " ※prefab ID: glommer\n ※Name: Glommer\n ※prefab Version: DST-632551 "
    },
    "prefab:glommer(ReverseSearch)": {
        "prefix": "p+Glommer",
        "body": "\"glommer\"",
        "description": " ※prefab ID: glommer\n ※Name: Glommer\n ※prefab Version: DST-632551 "
    },
    "prefab:pavlova(ID Complete)": {
        "prefix": "p+pavlova",
        "body": "\"pavlova\"",
        "description": " ※prefab ID: pavlova\n ※Name: Pavlova\n ※prefab Version: DST-632551 "
    },
    "prefab:pavlova(ReverseSearch)": {
        "prefix": "p+Pavlova",
        "body": "\"pavlova\"",
        "description": " ※prefab ID: pavlova\n ※Name: Pavlova\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_armormediumdamager(ID Complete)": {
        "prefix": "p+lavaarena_armormediumdamager",
        "body": "\"lavaarena_armormediumdamager\"",
        "description": " ※prefab ID: lavaarena_armormediumdamager\n ※Name: Jagged Wood Armor\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_armormediumdamager(ReverseSearch)": {
        "prefix": "p+Jagged Wood Armor",
        "body": "\"lavaarena_armormediumdamager\"",
        "description": " ※prefab ID: lavaarena_armormediumdamager\n ※Name: Jagged Wood Armor\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_010(ID Complete)": {
        "prefix": "p+quagmire_food_010",
        "body": "\"quagmire_food_010\"",
        "description": " ※prefab ID: quagmire_food_010\n ※Name: Meatballs\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_010(ReverseSearch)": {
        "prefix": "p+Meatballs",
        "body": "\"quagmire_food_010\"",
        "description": " ※prefab ID: quagmire_food_010\n ※Name: Meatballs\n ※prefab Version: DST-632551 "
    },
    "prefab:rabbitking_passive(ID Complete)": {
        "prefix": "p+rabbitking_passive",
        "body": "\"rabbitking_passive\"",
        "description": " ※prefab ID: rabbitking_passive\n ※Name: Benevolent Rabbit King\n ※prefab Version: DST-632551 "
    },
    "prefab:rabbitking_passive(ReverseSearch)": {
        "prefix": "p+Benevolent Rabbit King",
        "body": "\"rabbitking_passive\"",
        "description": " ※prefab ID: rabbitking_passive\n ※Name: Benevolent Rabbit King\n ※prefab Version: DST-632551 "
    },
    "prefab:purpleamulet(ID Complete)": {
        "prefix": "p+purpleamulet",
        "body": "\"purpleamulet\"",
        "description": " ※prefab ID: purpleamulet\n ※Name: Nightmare Amulet\n ※Recipe: \n\t+ 6 x: Gold Nugget/goldnugget\n\t+ 4 x: Nightmare Fuel/nightmarefuel\n\t+ 2 x: Purple Gem/purplegem\n ※Required Tech: \n\t+ LV.3 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:purpleamulet(ReverseSearch)": {
        "prefix": "p+Nightmare Amulet",
        "body": "\"purpleamulet\"",
        "description": " ※prefab ID: purpleamulet\n ※Name: Nightmare Amulet\n ※Recipe: \n\t+ 6 x: Gold Nugget/goldnugget\n\t+ 4 x: Nightmare Fuel/nightmarefuel\n\t+ 2 x: Purple Gem/purplegem\n ※Required Tech: \n\t+ LV.3 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_small_9_inv(ID Complete)": {
        "prefix": "p+oceanfish_small_9_inv",
        "body": "\"oceanfish_small_9_inv\"",
        "description": " ※prefab ID: oceanfish_small_9_inv\n ※Name: Spittlefish\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_small_9_inv(ReverseSearch)": {
        "prefix": "p+Spittlefish",
        "body": "\"oceanfish_small_9_inv\"",
        "description": " ※prefab ID: oceanfish_small_9_inv\n ※Name: Spittlefish\n ※prefab Version: DST-632551 "
    },
    "prefab:featherhat(ID Complete)": {
        "prefix": "p+featherhat",
        "body": "\"featherhat\"",
        "description": " ※prefab ID: featherhat\n ※Name: Feather Hat\n ※Recipe: \n\t+ 3 x: Jet Feather/feather_crow\n\t+ 2 x: Crimson Feather/feather_robin\n\t+ 2 x: Tentacle Spots/tentaclespots\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:featherhat(ReverseSearch)": {
        "prefix": "p+Feather Hat",
        "body": "\"featherhat\"",
        "description": " ※prefab ID: featherhat\n ※Name: Feather Hat\n ※Recipe: \n\t+ 3 x: Jet Feather/feather_crow\n\t+ 2 x: Crimson Feather/feather_robin\n\t+ 2 x: Tentacle Spots/tentaclespots\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:ghost(ID Complete)": {
        "prefix": "p+ghost",
        "body": "\"ghost\"",
        "description": " ※prefab ID: ghost\n ※Name: Ghost\n ※prefab Version: DST-632551 "
    },
    "prefab:ghost(ReverseSearch)": {
        "prefix": "p+Ghost",
        "body": "\"ghost\"",
        "description": " ※prefab ID: ghost\n ※Name: Ghost\n ※prefab Version: DST-632551 "
    },
    "prefab:winch_blueprint(ID Complete)": {
        "prefix": "p+winch_blueprint",
        "body": "\"winch_blueprint\"",
        "description": " ※prefab ID: winch_blueprint\n ※Name: Pinchin' Winch Blueprint\n ※prefab Version: DST-632551 "
    },
    "prefab:winch_blueprint(ReverseSearch)": {
        "prefix": "p+Pinchin' Winch Blueprint",
        "body": "\"winch_blueprint\"",
        "description": " ※prefab ID: winch_blueprint\n ※Name: Pinchin' Winch Blueprint\n ※prefab Version: DST-632551 "
    },
    "prefab:monkeytail(ID Complete)": {
        "prefix": "p+monkeytail",
        "body": "\"monkeytail\"",
        "description": " ※prefab ID: monkeytail\n ※Name: Monkeytails\n ※prefab Version: DST-632551 "
    },
    "prefab:monkeytail(ReverseSearch)": {
        "prefix": "p+Monkeytails",
        "body": "\"monkeytail\"",
        "description": " ※prefab ID: monkeytail\n ※Name: Monkeytails\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_oven_item(ID Complete)": {
        "prefix": "p+quagmire_oven_item",
        "body": "\"quagmire_oven_item\"",
        "description": " ※prefab ID: quagmire_oven_item\n ※Name: Oven\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_oven_item(ReverseSearch)": {
        "prefix": "p+Oven",
        "body": "\"quagmire_oven_item\"",
        "description": " ※prefab ID: quagmire_oven_item\n ※Name: Oven\n ※prefab Version: DST-632551 "
    },
    "prefab:mask_treehat(ID Complete)": {
        "prefix": "p+mask_treehat",
        "body": "\"mask_treehat\"",
        "description": " ※prefab ID: mask_treehat\n ※Name: Tree Mask\n ※prefab Version: DST-632551 "
    },
    "prefab:mask_treehat(ReverseSearch)": {
        "prefix": "p+Tree Mask",
        "body": "\"mask_treehat\"",
        "description": " ※prefab ID: mask_treehat\n ※Name: Tree Mask\n ※prefab Version: DST-632551 "
    },
    "prefab:rocks(ID Complete)": {
        "prefix": "p+rocks",
        "body": "\"rocks\"",
        "description": " ※prefab ID: rocks\n ※Name: Rocks\n ※prefab Version: DST-632551 "
    },
    "prefab:rocks(ReverseSearch)": {
        "prefix": "p+Rocks",
        "body": "\"rocks\"",
        "description": " ※prefab ID: rocks\n ※Name: Rocks\n ※prefab Version: DST-632551 "
    },
    "prefab:tomato_seeds(ID Complete)": {
        "prefix": "p+tomato_seeds",
        "body": "\"tomato_seeds\"",
        "description": " ※prefab ID: tomato_seeds\n ※Name: Spiky Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:tomato_seeds(ReverseSearch)": {
        "prefix": "p+Spiky Seeds",
        "body": "\"tomato_seeds\"",
        "description": " ※prefab ID: tomato_seeds\n ※Name: Spiky Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_beefalo(ID Complete)": {
        "prefix": "p+chesspiece_beefalo",
        "body": "\"chesspiece_beefalo\"",
        "description": " ※prefab ID: chesspiece_beefalo\n ※Name: Beefalo Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_beefalo(ReverseSearch)": {
        "prefix": "p+Beefalo Figure",
        "body": "\"chesspiece_beefalo\"",
        "description": " ※prefab ID: chesspiece_beefalo\n ※Name: Beefalo Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:halloweenpotion_bravery_large(ID Complete)": {
        "prefix": "p+halloweenpotion_bravery_large",
        "body": "\"halloweenpotion_bravery_large\"",
        "description": " ※prefab ID: halloweenpotion_bravery_large\n ※Name: Brew of Phobic Abrogation\n ※prefab Version: DST-632551 "
    },
    "prefab:halloweenpotion_bravery_large(ReverseSearch)": {
        "prefix": "p+Brew of Phobic Abrogation",
        "body": "\"halloweenpotion_bravery_large\"",
        "description": " ※prefab ID: halloweenpotion_bravery_large\n ※Name: Brew of Phobic Abrogation\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_lamp_short(ID Complete)": {
        "prefix": "p+quagmire_lamp_short",
        "body": "\"quagmire_lamp_short\"",
        "description": " ※prefab ID: quagmire_lamp_short\n ※Name: Small Streetlight\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_lamp_short(ReverseSearch)": {
        "prefix": "p+Small Streetlight",
        "body": "\"quagmire_lamp_short\"",
        "description": " ※prefab ID: quagmire_lamp_short\n ※Name: Small Streetlight\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_bernie(ID Complete)": {
        "prefix": "p+lavaarena_bernie",
        "body": "\"lavaarena_bernie\"",
        "description": " ※prefab ID: lavaarena_bernie\n ※Name: Bernie\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_bernie(ReverseSearch)": {
        "prefix": "p+Bernie",
        "body": "\"lavaarena_bernie\"",
        "description": " ※prefab ID: lavaarena_bernie\n ※Name: Bernie\n ※prefab Version: DST-632551 "
    },
    "prefab:known_pomegranate_seeds(ID Complete)": {
        "prefix": "p+known_pomegranate_seeds",
        "body": "\"known_pomegranate_seeds\"",
        "description": " ※prefab ID: known_pomegranate_seeds\n ※Name: Pomegranate Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:known_pomegranate_seeds(ReverseSearch)": {
        "prefix": "p+Pomegranate Seeds",
        "body": "\"known_pomegranate_seeds\"",
        "description": " ※prefab ID: known_pomegranate_seeds\n ※Name: Pomegranate Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_flour(ID Complete)": {
        "prefix": "p+quagmire_flour",
        "body": "\"quagmire_flour\"",
        "description": " ※prefab ID: quagmire_flour\n ※Name: Flour\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_flour(ReverseSearch)": {
        "prefix": "p+Flour",
        "body": "\"quagmire_flour\"",
        "description": " ※prefab ID: quagmire_flour\n ※Name: Flour\n ※prefab Version: DST-632551 "
    },
    "prefab:umbrella(ID Complete)": {
        "prefix": "p+umbrella",
        "body": "\"umbrella\"",
        "description": " ※prefab ID: umbrella\n ※Name: Umbrella\n ※Recipe: \n\t+ 6 x: Twigs/twigs\n\t+ 1 x: Pig Skin/pigskin\n\t+ 2 x: Silk/silk\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:umbrella(ReverseSearch)": {
        "prefix": "p+Umbrella",
        "body": "\"umbrella\"",
        "description": " ※prefab ID: umbrella\n ※Name: Umbrella\n ※Recipe: \n\t+ 6 x: Twigs/twigs\n\t+ 1 x: Pig Skin/pigskin\n\t+ 2 x: Silk/silk\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:shadow_rook(ID Complete)": {
        "prefix": "p+shadow_rook",
        "body": "\"shadow_rook\"",
        "description": " ※prefab ID: shadow_rook\n ※Name: Shadow Rook\n ※prefab Version: DST-632551 "
    },
    "prefab:shadow_rook(ReverseSearch)": {
        "prefix": "p+Shadow Rook",
        "body": "\"shadow_rook\"",
        "description": " ※prefab ID: shadow_rook\n ※Name: Shadow Rook\n ※prefab Version: DST-632551 "
    },
    "prefab:terrorbeak(ID Complete)": {
        "prefix": "p+terrorbeak",
        "body": "\"terrorbeak\"",
        "description": " ※prefab ID: terrorbeak\n ※Name: Terrorbeak\n ※prefab Version: DST-632551 "
    },
    "prefab:terrorbeak(ReverseSearch)": {
        "prefix": "p+Terrorbeak",
        "body": "\"terrorbeak\"",
        "description": " ※prefab ID: terrorbeak\n ※Name: Terrorbeak\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_fungus(ID Complete)": {
        "prefix": "p+turf_fungus",
        "body": "\"turf_fungus\"",
        "description": " ※prefab ID: turf_fungus\n ※Name: Fungal Turf\n ※Recipe: \n\t+ 1 x: Lichen/cutlichen\n\t+ 1 x: Blue Spore/spore_tall\n ※Required Tech: \n\t+ LV.2 : Landscaping/TURFCRAFTING\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_fungus(ReverseSearch)": {
        "prefix": "p+Fungal Turf",
        "body": "\"turf_fungus\"",
        "description": " ※prefab ID: turf_fungus\n ※Name: Fungal Turf\n ※Recipe: \n\t+ 1 x: Lichen/cutlichen\n\t+ 1 x: Blue Spore/spore_tall\n ※Required Tech: \n\t+ LV.2 : Landscaping/TURFCRAFTING\n ※prefab Version: DST-632551 "
    },
    "prefab:seedpouch(ID Complete)": {
        "prefix": "p+seedpouch",
        "body": "\"seedpouch\"",
        "description": " ※prefab ID: seedpouch\n ※Name: Seed Pack-It\n ※Recipe: \n\t+ 2 x: Broken Shell/slurtle_shellpieces\n\t+ 4 x: Cut Grass/cutgrass\n\t+ 2 x: Seeds/seeds\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:seedpouch(ReverseSearch)": {
        "prefix": "p+Seed Pack-It",
        "body": "\"seedpouch\"",
        "description": " ※prefab ID: seedpouch\n ※Name: Seed Pack-It\n ※Recipe: \n\t+ 2 x: Broken Shell/slurtle_shellpieces\n\t+ 4 x: Cut Grass/cutgrass\n\t+ 2 x: Seeds/seeds\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:moonrockcrater(ID Complete)": {
        "prefix": "p+moonrockcrater",
        "body": "\"moonrockcrater\"",
        "description": " ※prefab ID: moonrockcrater\n ※Name: Cratered Moonrock\n ※Recipe: \n\t+ 3 x: Moon Rock/moonrocknugget\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:moonrockcrater(ReverseSearch)": {
        "prefix": "p+Cratered Moonrock",
        "body": "\"moonrockcrater\"",
        "description": " ※prefab ID: moonrockcrater\n ※Name: Cratered Moonrock\n ※Recipe: \n\t+ 3 x: Moon Rock/moonrocknugget\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:pig_coin(ID Complete)": {
        "prefix": "p+pig_coin",
        "body": "\"pig_coin\"",
        "description": " ※prefab ID: pig_coin\n ※Name: Clout Snout\n ※prefab Version: DST-632551 "
    },
    "prefab:pig_coin(ReverseSearch)": {
        "prefix": "p+Clout Snout",
        "body": "\"pig_coin\"",
        "description": " ※prefab ID: pig_coin\n ※Name: Clout Snout\n ※prefab Version: DST-632551 "
    },
    "prefab:support_pillar_dreadstone(ID Complete)": {
        "prefix": "p+support_pillar_dreadstone",
        "body": "\"support_pillar_dreadstone\"",
        "description": " ※prefab ID: support_pillar_dreadstone\n ※Name: Dreadstone Pillar\n ※prefab Version: DST-632551 "
    },
    "prefab:support_pillar_dreadstone(ReverseSearch)": {
        "prefix": "p+Dreadstone Pillar",
        "body": "\"support_pillar_dreadstone\"",
        "description": " ※prefab ID: support_pillar_dreadstone\n ※Name: Dreadstone Pillar\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_30(ID Complete)": {
        "prefix": "p+trinket_30",
        "body": "\"trinket_30\"",
        "description": " ※prefab ID: trinket_30\n ※Name: White Knight\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_30(ReverseSearch)": {
        "prefix": "p+White Knight",
        "body": "\"trinket_30\"",
        "description": " ※prefab ID: trinket_30\n ※Name: White Knight\n ※prefab Version: DST-632551 "
    },
    "prefab:yellowgem(ID Complete)": {
        "prefix": "p+yellowgem",
        "body": "\"yellowgem\"",
        "description": " ※prefab ID: yellowgem\n ※Name: Yellow Gem\n ※prefab Version: DST-632551 "
    },
    "prefab:yellowgem(ReverseSearch)": {
        "prefix": "p+Yellow Gem",
        "body": "\"yellowgem\"",
        "description": " ※prefab ID: yellowgem\n ※Name: Yellow Gem\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_potato_cooked(ID Complete)": {
        "prefix": "p+quagmire_potato_cooked",
        "body": "\"quagmire_potato_cooked\"",
        "description": " ※prefab ID: quagmire_potato_cooked\n ※Name: Roast Potato\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_potato_cooked(ReverseSearch)": {
        "prefix": "p+Roast Potato",
        "body": "\"quagmire_potato_cooked\"",
        "description": " ※prefab ID: quagmire_potato_cooked\n ※Name: Roast Potato\n ※prefab Version: DST-632551 "
    },
    "prefab:catcoonhat(ID Complete)": {
        "prefix": "p+catcoonhat",
        "body": "\"catcoonhat\"",
        "description": " ※prefab ID: catcoonhat\n ※Name: Cat Cap\n ※Recipe: \n\t+ 1 x: Cat Tail/coontail\n\t+ 4 x: Silk/silk\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:catcoonhat(ReverseSearch)": {
        "prefix": "p+Cat Cap",
        "body": "\"catcoonhat\"",
        "description": " ※prefab ID: catcoonhat\n ※Name: Cat Cap\n ※Recipe: \n\t+ 1 x: Cat Tail/coontail\n\t+ 4 x: Silk/silk\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:armor_voidcloth(ID Complete)": {
        "prefix": "p+armor_voidcloth",
        "body": "\"armor_voidcloth\"",
        "description": " ※prefab ID: armor_voidcloth\n ※Name: Void Robe\n ※Recipe: \n\t+ 4 x: Pure Horror/horrorfuel\n\t+ 4 x: Dark Tatters/voidcloth\n ※Required Tech: \n\t+ LV.2 : Shadowcraft/SHADOWFORGING\n ※prefab Version: DST-632551 "
    },
    "prefab:armor_voidcloth(ReverseSearch)": {
        "prefix": "p+Void Robe",
        "body": "\"armor_voidcloth\"",
        "description": " ※prefab ID: armor_voidcloth\n ※Name: Void Robe\n ※Recipe: \n\t+ 4 x: Pure Horror/horrorfuel\n\t+ 4 x: Dark Tatters/voidcloth\n ※Required Tech: \n\t+ LV.2 : Shadowcraft/SHADOWFORGING\n ※prefab Version: DST-632551 "
    },
    "prefab:stalagmite(ID Complete)": {
        "prefix": "p+stalagmite",
        "body": "\"stalagmite\"",
        "description": " ※prefab ID: stalagmite\n ※Name: Stalagmite\n ※prefab Version: DST-632551 "
    },
    "prefab:stalagmite(ReverseSearch)": {
        "prefix": "p+Stalagmite",
        "body": "\"stalagmite\"",
        "description": " ※prefab ID: stalagmite\n ※Name: Stalagmite\n ※prefab Version: DST-632551 "
    },
    "prefab:acorn(ID Complete)": {
        "prefix": "p+acorn",
        "body": "\"acorn\"",
        "description": " ※prefab ID: acorn\n ※Name: Birchnut\n ※prefab Version: DST-632551 "
    },
    "prefab:acorn(ReverseSearch)": {
        "prefix": "p+Birchnut",
        "body": "\"acorn\"",
        "description": " ※prefab ID: acorn\n ※Name: Birchnut\n ※prefab Version: DST-632551 "
    },
    "prefab:critter_perdling(ID Complete)": {
        "prefix": "p+critter_perdling",
        "body": "\"critter_perdling\"",
        "description": " ※prefab ID: critter_perdling\n ※Name: Giblet\n ※prefab Version: DST-632551 "
    },
    "prefab:critter_perdling(ReverseSearch)": {
        "prefix": "p+Giblet",
        "body": "\"critter_perdling\"",
        "description": " ※prefab ID: critter_perdling\n ※Name: Giblet\n ※prefab Version: DST-632551 "
    },
    "prefab:dumbbell_heat(ID Complete)": {
        "prefix": "p+dumbbell_heat",
        "body": "\"dumbbell_heat\"",
        "description": " ※prefab ID: dumbbell_heat\n ※Name: Thermbell\n ※Recipe: \n\t+ 12 x: Rocks/rocks\n\t+ 1 x: Pickaxe/pickaxe\n\t+ 4 x: Flint/flint\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:dumbbell_heat(ReverseSearch)": {
        "prefix": "p+Thermbell",
        "body": "\"dumbbell_heat\"",
        "description": " ※prefab ID: dumbbell_heat\n ※Name: Thermbell\n ※Recipe: \n\t+ 12 x: Rocks/rocks\n\t+ 1 x: Pickaxe/pickaxe\n\t+ 4 x: Flint/flint\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:marble(ID Complete)": {
        "prefix": "p+marble",
        "body": "\"marble\"",
        "description": " ※prefab ID: marble\n ※Name: Marble\n ※prefab Version: DST-632551 "
    },
    "prefab:marble(ReverseSearch)": {
        "prefix": "p+Marble",
        "body": "\"marble\"",
        "description": " ※prefab ID: marble\n ※Name: Marble\n ※prefab Version: DST-632551 "
    },
    "prefab:farm_soil_debris(ID Complete)": {
        "prefix": "p+farm_soil_debris",
        "body": "\"farm_soil_debris\"",
        "description": " ※prefab ID: farm_soil_debris\n ※Name: Garden Detritus\n ※prefab Version: DST-632551 "
    },
    "prefab:farm_soil_debris(ReverseSearch)": {
        "prefix": "p+Garden Detritus",
        "body": "\"farm_soil_debris\"",
        "description": " ※prefab ID: farm_soil_debris\n ※Name: Garden Detritus\n ※prefab Version: DST-632551 "
    },
    "prefab:boat_ancient_item(ID Complete)": {
        "prefix": "p+boat_ancient_item",
        "body": "\"boat_ancient_item\"",
        "description": " ※prefab ID: boat_ancient_item\n ※Name: Archaic Boat Kit\n ※prefab Version: DST-632551 "
    },
    "prefab:boat_ancient_item(ReverseSearch)": {
        "prefix": "p+Archaic Boat Kit",
        "body": "\"boat_ancient_item\"",
        "description": " ※prefab ID: boat_ancient_item\n ※Name: Archaic Boat Kit\n ※prefab Version: DST-632551 "
    },
    "prefab:yotb_pattern_fragment_1(ID Complete)": {
        "prefix": "p+yotb_pattern_fragment_1",
        "body": "\"yotb_pattern_fragment_1\"",
        "description": " ※prefab ID: yotb_pattern_fragment_1\n ※Name: Fearsome Pattern Scrap\n ※Recipe: \n\t+ 5 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /BEEFOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:yotb_pattern_fragment_1(ReverseSearch)": {
        "prefix": "p+Fearsome Pattern Scrap",
        "body": "\"yotb_pattern_fragment_1\"",
        "description": " ※prefab ID: yotb_pattern_fragment_1\n ※Name: Fearsome Pattern Scrap\n ※Recipe: \n\t+ 5 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /BEEFOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:fossilspike(ID Complete)": {
        "prefix": "p+fossilspike",
        "body": "\"fossilspike\"",
        "description": " ※prefab ID: fossilspike\n ※Name: Fossil Cage\n ※prefab Version: DST-632551 "
    },
    "prefab:fossilspike(ReverseSearch)": {
        "prefix": "p+Fossil Cage",
        "body": "\"fossilspike\"",
        "description": " ※prefab ID: fossilspike\n ※Name: Fossil Cage\n ※prefab Version: DST-632551 "
    },
    "prefab:minisign_drawn(ID Complete)": {
        "prefix": "p+minisign_drawn",
        "body": "\"minisign_drawn\"",
        "description": " ※prefab ID: minisign_drawn\n ※Name: {item} Sign\n ※prefab Version: DST-632551 "
    },
    "prefab:minisign_drawn(ReverseSearch)": {
        "prefix": "p+{item} Sign",
        "body": "\"minisign_drawn\"",
        "description": " ※prefab ID: minisign_drawn\n ※Name: {item} Sign\n ※prefab Version: DST-632551 "
    },
    "prefab:weed_ivy(ID Complete)": {
        "prefix": "p+weed_ivy",
        "body": "\"weed_ivy\"",
        "description": " ※prefab ID: weed_ivy\n ※Name: Spiny Bindweed\n ※prefab Version: DST-632551 "
    },
    "prefab:weed_ivy(ReverseSearch)": {
        "prefix": "p+Spiny Bindweed",
        "body": "\"weed_ivy\"",
        "description": " ※prefab ID: weed_ivy\n ※Name: Spiny Bindweed\n ※prefab Version: DST-632551 "
    },
    "prefab:farm_plant_eggplant(ID Complete)": {
        "prefix": "p+farm_plant_eggplant",
        "body": "\"farm_plant_eggplant\"",
        "description": " ※prefab ID: farm_plant_eggplant\n ※Name: Eggplant Stalk\n ※prefab Version: DST-632551 "
    },
    "prefab:farm_plant_eggplant(ReverseSearch)": {
        "prefix": "p+Eggplant Stalk",
        "body": "\"farm_plant_eggplant\"",
        "description": " ※prefab ID: farm_plant_eggplant\n ※Name: Eggplant Stalk\n ※prefab Version: DST-632551 "
    },
    "prefab:rope_bridge_kit(ID Complete)": {
        "prefix": "p+rope_bridge_kit",
        "body": "\"rope_bridge_kit\"",
        "description": " ※prefab ID: rope_bridge_kit\n ※Name: Spelunker's Bridge Kit\n ※Recipe: \n\t+ 2 x: Rope/rope\n\t+ 4 x: Boards/boards\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:rope_bridge_kit(ReverseSearch)": {
        "prefix": "p+Spelunker's Bridge Kit",
        "body": "\"rope_bridge_kit\"",
        "description": " ※prefab ID: rope_bridge_kit\n ※Name: Spelunker's Bridge Kit\n ※Recipe: \n\t+ 2 x: Rope/rope\n\t+ 4 x: Boards/boards\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:lavae_egg_cracked(ID Complete)": {
        "prefix": "p+lavae_egg_cracked",
        "body": "\"lavae_egg_cracked\"",
        "description": " ※prefab ID: lavae_egg_cracked\n ※Name: Lavae Egg\n ※prefab Version: DST-632551 "
    },
    "prefab:lavae_egg_cracked(ReverseSearch)": {
        "prefix": "p+Lavae Egg",
        "body": "\"lavae_egg_cracked\"",
        "description": " ※prefab ID: lavae_egg_cracked\n ※Name: Lavae Egg\n ※prefab Version: DST-632551 "
    },
    "prefab:snapper(ID Complete)": {
        "prefix": "p+snapper",
        "body": "\"snapper\"",
        "description": " ※prefab ID: snapper\n ※Name: Crocommander\n ※prefab Version: DST-632551 "
    },
    "prefab:snapper(ReverseSearch)": {
        "prefix": "p+Crocommander",
        "body": "\"snapper\"",
        "description": " ※prefab ID: snapper\n ※Name: Crocommander\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_park_gate(ID Complete)": {
        "prefix": "p+quagmire_park_gate",
        "body": "\"quagmire_park_gate\"",
        "description": " ※prefab ID: quagmire_park_gate\n ※Name: Iron Gate\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_park_gate(ReverseSearch)": {
        "prefix": "p+Iron Gate",
        "body": "\"quagmire_park_gate\"",
        "description": " ※prefab ID: quagmire_park_gate\n ※Name: Iron Gate\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_armor_hpextraheavy(ID Complete)": {
        "prefix": "p+lavaarena_armor_hpextraheavy",
        "body": "\"lavaarena_armor_hpextraheavy\"",
        "description": " ※prefab ID: lavaarena_armor_hpextraheavy\n ※Name: Steadfast Grand Armor\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_armor_hpextraheavy(ReverseSearch)": {
        "prefix": "p+Steadfast Grand Armor",
        "body": "\"lavaarena_armor_hpextraheavy\"",
        "description": " ※prefab ID: lavaarena_armor_hpextraheavy\n ※Name: Steadfast Grand Armor\n ※prefab Version: DST-632551 "
    },
    "prefab:spice_chili_food(ID Complete)": {
        "prefix": "p+spice_chili_food",
        "body": "\"spice_chili_food\"",
        "description": " ※prefab ID: spice_chili_food\n ※Name: Spicy {food}\n ※prefab Version: DST-632551 "
    },
    "prefab:spice_chili_food(ReverseSearch)": {
        "prefix": "p+Spicy {food}",
        "body": "\"spice_chili_food\"",
        "description": " ※prefab ID: spice_chili_food\n ※Name: Spicy {food}\n ※prefab Version: DST-632551 "
    },
    "prefab:sculpture_bishophead(ID Complete)": {
        "prefix": "p+sculpture_bishophead",
        "body": "\"sculpture_bishophead\"",
        "description": " ※prefab ID: sculpture_bishophead\n ※Name: Suspicious Marble\n ※prefab Version: DST-632551 "
    },
    "prefab:sculpture_bishophead(ReverseSearch)": {
        "prefix": "p+Suspicious Marble",
        "body": "\"sculpture_bishophead\"",
        "description": " ※prefab ID: sculpture_bishophead\n ※Name: Suspicious Marble\n ※prefab Version: DST-632551 "
    },
    "prefab:yotc_carrat_gym_reaction(ID Complete)": {
        "prefix": "p+yotc_carrat_gym_reaction",
        "body": "\"yotc_carrat_gym_reaction\"",
        "description": " ※prefab ID: yotc_carrat_gym_reaction\n ※Name: Reflex Gym\n ※Recipe: \n\t+ 4 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:yotc_carrat_gym_reaction(ReverseSearch)": {
        "prefix": "p+Reflex Gym",
        "body": "\"yotc_carrat_gym_reaction\"",
        "description": " ※prefab ID: yotc_carrat_gym_reaction\n ※Name: Reflex Gym\n ※Recipe: \n\t+ 4 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_deerclops_mutated_builder(ID Complete)": {
        "prefix": "p+chesspiece_deerclops_mutated_builder",
        "body": "\"chesspiece_deerclops_mutated_builder\"",
        "description": " ※prefab ID: chesspiece_deerclops_mutated_builder\n ※Name: Crystal Deerclops Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_deerclops_mutated_builder(ReverseSearch)": {
        "prefix": "p+Crystal Deerclops Figure",
        "body": "\"chesspiece_deerclops_mutated_builder\"",
        "description": " ※prefab ID: chesspiece_deerclops_mutated_builder\n ※Name: Crystal Deerclops Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:alterguardian_phase3(ID Complete)": {
        "prefix": "p+alterguardian_phase3",
        "body": "\"alterguardian_phase3\"",
        "description": " ※prefab ID: alterguardian_phase3\n ※Name: Celestial Champion\n ※prefab Version: DST-632551 "
    },
    "prefab:alterguardian_phase3(ReverseSearch)": {
        "prefix": "p+Celestial Champion",
        "body": "\"alterguardian_phase3\"",
        "description": " ※prefab ID: alterguardian_phase3\n ※Name: Celestial Champion\n ※prefab Version: DST-632551 "
    },
    "prefab:molebathill(ID Complete)": {
        "prefix": "p+molebathill",
        "body": "\"molebathill\"",
        "description": " ※prefab ID: molebathill\n ※Name: Naked Mole Bat Burrow\n ※prefab Version: DST-632551 "
    },
    "prefab:molebathill(ReverseSearch)": {
        "prefix": "p+Naked Mole Bat Burrow",
        "body": "\"molebathill\"",
        "description": " ※prefab ID: molebathill\n ※Name: Naked Mole Bat Burrow\n ※prefab Version: DST-632551 "
    },
    "prefab:shadow_knight(ID Complete)": {
        "prefix": "p+shadow_knight",
        "body": "\"shadow_knight\"",
        "description": " ※prefab ID: shadow_knight\n ※Name: Shadow Knight\n ※prefab Version: DST-632551 "
    },
    "prefab:shadow_knight(ReverseSearch)": {
        "prefix": "p+Shadow Knight",
        "body": "\"shadow_knight\"",
        "description": " ※prefab ID: shadow_knight\n ※Name: Shadow Knight\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_antlion_builder(ID Complete)": {
        "prefix": "p+chesspiece_antlion_builder",
        "body": "\"chesspiece_antlion_builder\"",
        "description": " ※prefab ID: chesspiece_antlion_builder\n ※Name: Antlion Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_antlion_builder(ReverseSearch)": {
        "prefix": "p+Antlion Figure",
        "body": "\"chesspiece_antlion_builder\"",
        "description": " ※prefab ID: chesspiece_antlion_builder\n ※Name: Antlion Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:ice(ID Complete)": {
        "prefix": "p+ice",
        "body": "\"ice\"",
        "description": " ※prefab ID: ice\n ※Name: Ice\n ※prefab Version: DST-632551 "
    },
    "prefab:ice(ReverseSearch)": {
        "prefix": "p+Ice",
        "body": "\"ice\"",
        "description": " ※prefab ID: ice\n ※Name: Ice\n ※prefab Version: DST-632551 "
    },
    "prefab:wall_moonrock(ID Complete)": {
        "prefix": "p+wall_moonrock",
        "body": "\"wall_moonrock\"",
        "description": " ※prefab ID: wall_moonrock\n ※Name: Moon Rock Wall\n ※prefab Version: DST-632551 "
    },
    "prefab:wall_moonrock(ReverseSearch)": {
        "prefix": "p+Moon Rock Wall",
        "body": "\"wall_moonrock\"",
        "description": " ※prefab ID: wall_moonrock\n ※Name: Moon Rock Wall\n ※prefab Version: DST-632551 "
    },
    "prefab:maxwellphonograph(ID Complete)": {
        "prefix": "p+maxwellphonograph",
        "body": "\"maxwellphonograph\"",
        "description": " ※prefab ID: maxwellphonograph\n ※Name: Maxwell's Phonograph\n ※prefab Version: DST-632551 "
    },
    "prefab:maxwellphonograph(ReverseSearch)": {
        "prefix": "p+Maxwell's Phonograph",
        "body": "\"maxwellphonograph\"",
        "description": " ※prefab ID: maxwellphonograph\n ※Name: Maxwell's Phonograph\n ※prefab Version: DST-632551 "
    },
    "prefab:maxwelllight(ID Complete)": {
        "prefix": "p+maxwelllight",
        "body": "\"maxwelllight\"",
        "description": " ※prefab ID: maxwelllight\n ※Name: Maxwell's Light\n ※prefab Version: DST-632551 "
    },
    "prefab:maxwelllight(ReverseSearch)": {
        "prefix": "p+Maxwell's Light",
        "body": "\"maxwelllight\"",
        "description": " ※prefab ID: maxwelllight\n ※Name: Maxwell's Light\n ※prefab Version: DST-632551 "
    },
    "prefab:friendlyfruitfly(ID Complete)": {
        "prefix": "p+friendlyfruitfly",
        "body": "\"friendlyfruitfly\"",
        "description": " ※prefab ID: friendlyfruitfly\n ※Name: Friendly Fruit Fly\n ※prefab Version: DST-632551 "
    },
    "prefab:friendlyfruitfly(ReverseSearch)": {
        "prefix": "p+Friendly Fruit Fly",
        "body": "\"friendlyfruitfly\"",
        "description": " ※prefab ID: friendlyfruitfly\n ※Name: Friendly Fruit Fly\n ※prefab Version: DST-632551 "
    },
    "prefab:pigelite4(ID Complete)": {
        "prefix": "p+pigelite4",
        "body": "\"pigelite4\"",
        "description": " ※prefab ID: pigelite4\n ※Name: Sawyer\n ※prefab Version: DST-632551 "
    },
    "prefab:pigelite4(ReverseSearch)": {
        "prefix": "p+Sawyer",
        "body": "\"pigelite4\"",
        "description": " ※prefab ID: pigelite4\n ※Name: Sawyer\n ※prefab Version: DST-632551 "
    },
    "prefab:bee(ID Complete)": {
        "prefix": "p+bee",
        "body": "\"bee\"",
        "description": " ※prefab ID: bee\n ※Name: Bee\n ※prefab Version: DST-632551 "
    },
    "prefab:bee(ReverseSearch)": {
        "prefix": "p+Bee",
        "body": "\"bee\"",
        "description": " ※prefab ID: bee\n ※Name: Bee\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_rechargerhat(ID Complete)": {
        "prefix": "p+lavaarena_rechargerhat",
        "body": "\"lavaarena_rechargerhat\"",
        "description": " ※prefab ID: lavaarena_rechargerhat\n ※Name: Crystal Tiara\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_rechargerhat(ReverseSearch)": {
        "prefix": "p+Crystal Tiara",
        "body": "\"lavaarena_rechargerhat\"",
        "description": " ※prefab ID: lavaarena_rechargerhat\n ※Name: Crystal Tiara\n ※prefab Version: DST-632551 "
    },
    "prefab:mast_yotd_item(ID Complete)": {
        "prefix": "p+mast_yotd_item",
        "body": "\"mast_yotd_item\"",
        "description": " ※prefab ID: mast_yotd_item\n ※Name: Dragonfly Wing Mast Kit\n ※Recipe: \n\t+ 1 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /DRAGONOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:mast_yotd_item(ReverseSearch)": {
        "prefix": "p+Dragonfly Wing Mast Kit",
        "body": "\"mast_yotd_item\"",
        "description": " ※prefab ID: mast_yotd_item\n ※Name: Dragonfly Wing Mast Kit\n ※Recipe: \n\t+ 1 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /DRAGONOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:winter_food6(ID Complete)": {
        "prefix": "p+winter_food6",
        "body": "\"winter_food6\"",
        "description": " ※prefab ID: winter_food6\n ※Name: Plum Pudding\n ※prefab Version: DST-632551 "
    },
    "prefab:winter_food6(ReverseSearch)": {
        "prefix": "p+Plum Pudding",
        "body": "\"winter_food6\"",
        "description": " ※prefab ID: winter_food6\n ※Name: Plum Pudding\n ※prefab Version: DST-632551 "
    },
    "prefab:shadowduelist_builder(ID Complete)": {
        "prefix": "p+shadowduelist_builder",
        "body": "\"shadowduelist_builder\"",
        "description": " ※prefab ID: shadowduelist_builder\n ※Name: Shadow Duelist\n ※Recipe: \n\t+ 2 x: Nightmare Fuel/nightmarefuel\n\t+ 1 x: Spear/spear\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:shadowduelist_builder(ReverseSearch)": {
        "prefix": "p+Shadow Duelist",
        "body": "\"shadowduelist_builder\"",
        "description": " ※prefab ID: shadowduelist_builder\n ※Name: Shadow Duelist\n ※Recipe: \n\t+ 2 x: Nightmare Fuel/nightmarefuel\n\t+ 1 x: Spear/spear\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_stalker(ID Complete)": {
        "prefix": "p+chesspiece_stalker",
        "body": "\"chesspiece_stalker\"",
        "description": " ※prefab ID: chesspiece_stalker\n ※Name: Ancient Fuelweaver Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_stalker(ReverseSearch)": {
        "prefix": "p+Ancient Fuelweaver Figure",
        "body": "\"chesspiece_stalker\"",
        "description": " ※prefab ID: chesspiece_stalker\n ※Name: Ancient Fuelweaver Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:twigs(ID Complete)": {
        "prefix": "p+twigs",
        "body": "\"twigs\"",
        "description": " ※prefab ID: twigs\n ※Name: Twigs\n ※prefab Version: DST-632551 "
    },
    "prefab:twigs(ReverseSearch)": {
        "prefix": "p+Twigs",
        "body": "\"twigs\"",
        "description": " ※prefab ID: twigs\n ※Name: Twigs\n ※prefab Version: DST-632551 "
    },
    "prefab:boatrace_seastack_throwable_deploykit(ID Complete)": {
        "prefix": "p+boatrace_seastack_throwable_deploykit",
        "body": "\"boatrace_seastack_throwable_deploykit\"",
        "description": " ※prefab ID: boatrace_seastack_throwable_deploykit\n ※Name: Golden Buoy Kit\n ※Recipe: \n\t+ 2 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /DRAGONOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:boatrace_seastack_throwable_deploykit(ReverseSearch)": {
        "prefix": "p+Golden Buoy Kit",
        "body": "\"boatrace_seastack_throwable_deploykit\"",
        "description": " ※prefab ID: boatrace_seastack_throwable_deploykit\n ※Name: Golden Buoy Kit\n ※Recipe: \n\t+ 2 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /DRAGONOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:antliontrinket(ID Complete)": {
        "prefix": "p+antliontrinket",
        "body": "\"antliontrinket\"",
        "description": " ※prefab ID: antliontrinket\n ※Name: Beach Toy\n ※prefab Version: DST-632551 "
    },
    "prefab:antliontrinket(ReverseSearch)": {
        "prefix": "p+Beach Toy",
        "body": "\"antliontrinket\"",
        "description": " ※prefab ID: antliontrinket\n ※Name: Beach Toy\n ※prefab Version: DST-632551 "
    },
    "prefab:pomegranate_cooked(ID Complete)": {
        "prefix": "p+pomegranate_cooked",
        "body": "\"pomegranate_cooked\"",
        "description": " ※prefab ID: pomegranate_cooked\n ※Name: Sliced Pomegranate\n ※prefab Version: DST-632551 "
    },
    "prefab:pomegranate_cooked(ReverseSearch)": {
        "prefix": "p+Sliced Pomegranate",
        "body": "\"pomegranate_cooked\"",
        "description": " ※prefab ID: pomegranate_cooked\n ※Name: Sliced Pomegranate\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_carrat(ID Complete)": {
        "prefix": "p+chesspiece_carrat",
        "body": "\"chesspiece_carrat\"",
        "description": " ※prefab ID: chesspiece_carrat\n ※Name: Carrat Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_carrat(ReverseSearch)": {
        "prefix": "p+Carrat Figure",
        "body": "\"chesspiece_carrat\"",
        "description": " ※prefab ID: chesspiece_carrat\n ※Name: Carrat Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:manrabbit_tail(ID Complete)": {
        "prefix": "p+manrabbit_tail",
        "body": "\"manrabbit_tail\"",
        "description": " ※prefab ID: manrabbit_tail\n ※Name: Bunny Puff\n ※prefab Version: DST-632551 "
    },
    "prefab:manrabbit_tail(ReverseSearch)": {
        "prefix": "p+Bunny Puff",
        "body": "\"manrabbit_tail\"",
        "description": " ※prefab ID: manrabbit_tail\n ※Name: Bunny Puff\n ※prefab Version: DST-632551 "
    },
    "prefab:peghook(ID Complete)": {
        "prefix": "p+peghook",
        "body": "\"peghook\"",
        "description": " ※prefab ID: peghook\n ※Name: Scorpeon\n ※prefab Version: DST-632551 "
    },
    "prefab:peghook(ReverseSearch)": {
        "prefix": "p+Scorpeon",
        "body": "\"peghook\"",
        "description": " ※prefab ID: peghook\n ※Name: Scorpeon\n ※prefab Version: DST-632551 "
    },
    "prefab:icecream(ID Complete)": {
        "prefix": "p+icecream",
        "body": "\"icecream\"",
        "description": " ※prefab ID: icecream\n ※Name: Ice Cream\n ※prefab Version: DST-632551 "
    },
    "prefab:icecream(ReverseSearch)": {
        "prefix": "p+Ice Cream",
        "body": "\"icecream\"",
        "description": " ※prefab ID: icecream\n ※Name: Ice Cream\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalgame_wheelspin_kit(ID Complete)": {
        "prefix": "p+carnivalgame_wheelspin_kit",
        "body": "\"carnivalgame_wheelspin_kit\"",
        "description": " ※prefab ID: carnivalgame_wheelspin_kit\n ※Name: Cuckoo Spinwheel Kit\n ※Recipe: \n\t+ 1 x: Gold Nugget/goldnugget\n\t+ 3 x: Seeds/seeds\n ※Required Tech: \n\t+ LV.3 : Cawnival Creation/CARNIVAL_HOSTSHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalgame_wheelspin_kit(ReverseSearch)": {
        "prefix": "p+Cuckoo Spinwheel Kit",
        "body": "\"carnivalgame_wheelspin_kit\"",
        "description": " ※prefab ID: carnivalgame_wheelspin_kit\n ※Name: Cuckoo Spinwheel Kit\n ※Recipe: \n\t+ 1 x: Gold Nugget/goldnugget\n\t+ 3 x: Seeds/seeds\n ※Required Tech: \n\t+ LV.3 : Cawnival Creation/CARNIVAL_HOSTSHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:lunarrift_terraformer_explosion(ID Complete)": {
        "prefix": "p+lunarrift_terraformer_explosion",
        "body": "\"lunarrift_terraformer_explosion\"",
        "description": " ※prefab ID: lunarrift_terraformer_explosion\n ※Name: Lunaform Burst\n ※prefab Version: DST-632551 "
    },
    "prefab:lunarrift_terraformer_explosion(ReverseSearch)": {
        "prefix": "p+Lunaform Burst",
        "body": "\"lunarrift_terraformer_explosion\"",
        "description": " ※prefab ID: lunarrift_terraformer_explosion\n ※Name: Lunaform Burst\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_seedpacket_3(ID Complete)": {
        "prefix": "p+quagmire_seedpacket_3",
        "body": "\"quagmire_seedpacket_3\"",
        "description": " ※prefab ID: quagmire_seedpacket_3\n ※Name: Packet of Spiky Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_seedpacket_3(ReverseSearch)": {
        "prefix": "p+Packet of Spiky Seeds",
        "body": "\"quagmire_seedpacket_3\"",
        "description": " ※prefab ID: quagmire_seedpacket_3\n ※Name: Packet of Spiky Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:rock_avocado_fruit_ripe(ID Complete)": {
        "prefix": "p+rock_avocado_fruit_ripe",
        "body": "\"rock_avocado_fruit_ripe\"",
        "description": " ※prefab ID: rock_avocado_fruit_ripe\n ※Name: Ripe Stone Fruit\n ※prefab Version: DST-632551 "
    },
    "prefab:rock_avocado_fruit_ripe(ReverseSearch)": {
        "prefix": "p+Ripe Stone Fruit",
        "body": "\"rock_avocado_fruit_ripe\"",
        "description": " ※prefab ID: rock_avocado_fruit_ripe\n ※Name: Ripe Stone Fruit\n ※prefab Version: DST-632551 "
    },
    "prefab:stone_chair(ID Complete)": {
        "prefix": "p+stone_chair",
        "body": "\"stone_chair\"",
        "description": " ※prefab ID: stone_chair\n ※Name: Stone Chair\n ※Recipe: \n\t+ 2 x: Cut Stone/cutstone\n\t+ 2 x: Rope/rope\n ※Required Tech: \n\t+ LV.3 : Carpentry/CARPENTRY\n ※prefab Version: DST-632551 "
    },
    "prefab:stone_chair(ReverseSearch)": {
        "prefix": "p+Stone Chair",
        "body": "\"stone_chair\"",
        "description": " ※prefab ID: stone_chair\n ※Name: Stone Chair\n ※Recipe: \n\t+ 2 x: Cut Stone/cutstone\n\t+ 2 x: Rope/rope\n ※Required Tech: \n\t+ LV.3 : Carpentry/CARPENTRY\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_trader_merm(ID Complete)": {
        "prefix": "p+quagmire_trader_merm",
        "body": "\"quagmire_trader_merm\"",
        "description": " ※prefab ID: quagmire_trader_merm\n ※Name: Sammy The Lucid Bog Merm\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_trader_merm(ReverseSearch)": {
        "prefix": "p+Sammy The Lucid Bog Merm",
        "body": "\"quagmire_trader_merm\"",
        "description": " ※prefab ID: quagmire_trader_merm\n ※Name: Sammy The Lucid Bog Merm\n ※prefab Version: DST-632551 "
    },
    "prefab:honeycomb(ID Complete)": {
        "prefix": "p+honeycomb",
        "body": "\"honeycomb\"",
        "description": " ※prefab ID: honeycomb\n ※Name: Honeycomb\n ※prefab Version: DST-632551 "
    },
    "prefab:honeycomb(ReverseSearch)": {
        "prefix": "p+Honeycomb",
        "body": "\"honeycomb\"",
        "description": " ※prefab ID: honeycomb\n ※Name: Honeycomb\n ※prefab Version: DST-632551 "
    },
    "prefab:cutgrass(ID Complete)": {
        "prefix": "p+cutgrass",
        "body": "\"cutgrass\"",
        "description": " ※prefab ID: cutgrass\n ※Name: Cut Grass\n ※prefab Version: DST-632551 "
    },
    "prefab:cutgrass(ReverseSearch)": {
        "prefix": "p+Cut Grass",
        "body": "\"cutgrass\"",
        "description": " ※prefab ID: cutgrass\n ※Name: Cut Grass\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanvine_cocoon_burnt(ID Complete)": {
        "prefix": "p+oceanvine_cocoon_burnt",
        "body": "\"oceanvine_cocoon_burnt\"",
        "description": " ※prefab ID: oceanvine_cocoon_burnt\n ※Name: Sea Strider Nest\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanvine_cocoon_burnt(ReverseSearch)": {
        "prefix": "p+Sea Strider Nest",
        "body": "\"oceanvine_cocoon_burnt\"",
        "description": " ※prefab ID: oceanvine_cocoon_burnt\n ※Name: Sea Strider Nest\n ※prefab Version: DST-632551 "
    },
    "prefab:watermelon_cooked(ID Complete)": {
        "prefix": "p+watermelon_cooked",
        "body": "\"watermelon_cooked\"",
        "description": " ※prefab ID: watermelon_cooked\n ※Name: Grilled Watermelon\n ※prefab Version: DST-632551 "
    },
    "prefab:watermelon_cooked(ReverseSearch)": {
        "prefix": "p+Grilled Watermelon",
        "body": "\"watermelon_cooked\"",
        "description": " ※prefab ID: watermelon_cooked\n ※Name: Grilled Watermelon\n ※prefab Version: DST-632551 "
    },
    "prefab:record(ID Complete)": {
        "prefix": "p+record",
        "body": "\"record\"",
        "description": " ※prefab ID: record\n ※Name: Record\n ※Recipe: \n\t+ 1 x: Batilisk Wing/batwing\n\t+ 1 x: Charcoal/charcoal\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:record(ReverseSearch)": {
        "prefix": "p+Record",
        "body": "\"record\"",
        "description": " ※prefab ID: record\n ※Name: Record\n ※Recipe: \n\t+ 1 x: Batilisk Wing/batwing\n\t+ 1 x: Charcoal/charcoal\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:wagstaff_npc_wagpunk(ID Complete)": {
        "prefix": "p+wagstaff_npc_wagpunk",
        "body": "\"wagstaff_npc_wagpunk\"",
        "description": " ※prefab ID: wagstaff_npc_wagpunk\n ※Name: Grainy Transmission\n ※prefab Version: DST-632551 "
    },
    "prefab:wagstaff_npc_wagpunk(ReverseSearch)": {
        "prefix": "p+Grainy Transmission",
        "body": "\"wagstaff_npc_wagpunk\"",
        "description": " ※prefab ID: wagstaff_npc_wagpunk\n ※Name: Grainy Transmission\n ※prefab Version: DST-632551 "
    },
    "prefab:drumstick_cooked(ID Complete)": {
        "prefix": "p+drumstick_cooked",
        "body": "\"drumstick_cooked\"",
        "description": " ※prefab ID: drumstick_cooked\n ※Name: Fried Drumstick\n ※prefab Version: DST-632551 "
    },
    "prefab:drumstick_cooked(ReverseSearch)": {
        "prefix": "p+Fried Drumstick",
        "body": "\"drumstick_cooked\"",
        "description": " ※prefab ID: drumstick_cooked\n ※Name: Fried Drumstick\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_small_2_inv(ID Complete)": {
        "prefix": "p+oceanfish_small_2_inv",
        "body": "\"oceanfish_small_2_inv\"",
        "description": " ※prefab ID: oceanfish_small_2_inv\n ※Name: Needlenosed Squirt\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_small_2_inv(ReverseSearch)": {
        "prefix": "p+Needlenosed Squirt",
        "body": "\"oceanfish_small_2_inv\"",
        "description": " ※prefab ID: oceanfish_small_2_inv\n ※Name: Needlenosed Squirt\n ※prefab Version: DST-632551 "
    },
    "prefab:relic(ID Complete)": {
        "prefix": "p+relic",
        "body": "\"relic\"",
        "description": " ※prefab ID: relic\n ※Name: Relic\n ※prefab Version: DST-632551 "
    },
    "prefab:relic(ReverseSearch)": {
        "prefix": "p+Relic",
        "body": "\"relic\"",
        "description": " ※prefab ID: relic\n ※Name: Relic\n ※prefab Version: DST-632551 "
    },
    "prefab:tentacle_pillar_arm(ID Complete)": {
        "prefix": "p+tentacle_pillar_arm",
        "body": "\"tentacle_pillar_arm\"",
        "description": " ※prefab ID: tentacle_pillar_arm\n ※Name: Baby Tentacle\n ※prefab Version: DST-632551 "
    },
    "prefab:tentacle_pillar_arm(ReverseSearch)": {
        "prefix": "p+Baby Tentacle",
        "body": "\"tentacle_pillar_arm\"",
        "description": " ※prefab ID: tentacle_pillar_arm\n ※Name: Baby Tentacle\n ※prefab Version: DST-632551 "
    },
    "prefab:farm_plow_item(ID Complete)": {
        "prefix": "p+farm_plow_item",
        "body": "\"farm_plow_item\"",
        "description": " ※prefab ID: farm_plow_item\n ※Name: Garden Digamajig\n ※Recipe: \n\t+ 3 x: Boards/boards\n\t+ 2 x: Rope/rope\n\t+ 2 x: Flint/flint\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:farm_plow_item(ReverseSearch)": {
        "prefix": "p+Garden Digamajig",
        "body": "\"farm_plow_item\"",
        "description": " ※prefab ID: farm_plow_item\n ※Name: Garden Digamajig\n ※Recipe: \n\t+ 3 x: Boards/boards\n\t+ 2 x: Rope/rope\n\t+ 2 x: Flint/flint\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:saltlick(ID Complete)": {
        "prefix": "p+saltlick",
        "body": "\"saltlick\"",
        "description": " ※prefab ID: saltlick\n ※Name: Salt Lick\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 4 x: Nitre/nitre\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:saltlick(ReverseSearch)": {
        "prefix": "p+Salt Lick",
        "body": "\"saltlick\"",
        "description": " ※prefab ID: saltlick\n ※Name: Salt Lick\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 4 x: Nitre/nitre\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:charlie(ID Complete)": {
        "prefix": "p+charlie",
        "body": "\"charlie\"",
        "description": " ※prefab ID: charlie\n ※Name: Charlie\n ※prefab Version: DST-632551 "
    },
    "prefab:charlie(ReverseSearch)": {
        "prefix": "p+Charlie",
        "body": "\"charlie\"",
        "description": " ※prefab ID: charlie\n ※Name: Charlie\n ※prefab Version: DST-632551 "
    },
    "prefab:book_fire(ID Complete)": {
        "prefix": "p+book_fire",
        "body": "\"book_fire\"",
        "description": " ※prefab ID: book_fire\n ※Name: Pyrokinetics Explained\n ※Recipe: \n\t+ 1 x: The End is Nigh!/book_brimstone\n\t+ 1 x: Feather Pencil/featherpencil\n\t+ 2 x: Papyrus/papyrus\n ※Required Tech: \n\t+ LV.1 : /BOOKCRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:book_fire(ReverseSearch)": {
        "prefix": "p+Pyrokinetics Explained",
        "body": "\"book_fire\"",
        "description": " ※prefab ID: book_fire\n ※Name: Pyrokinetics Explained\n ※Recipe: \n\t+ 1 x: The End is Nigh!/book_brimstone\n\t+ 1 x: Feather Pencil/featherpencil\n\t+ 2 x: Papyrus/papyrus\n ※Required Tech: \n\t+ LV.1 : /BOOKCRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:moon_altar_astral_wip(ID Complete)": {
        "prefix": "p+moon_altar_astral_wip",
        "body": "\"moon_altar_astral_wip\"",
        "description": " ※prefab ID: moon_altar_astral_wip\n ※Name: Partially Assembled Sanctum\n ※prefab Version: DST-632551 "
    },
    "prefab:moon_altar_astral_wip(ReverseSearch)": {
        "prefix": "p+Partially Assembled Sanctum",
        "body": "\"moon_altar_astral_wip\"",
        "description": " ※prefab ID: moon_altar_astral_wip\n ※Name: Partially Assembled Sanctum\n ※prefab Version: DST-632551 "
    },
    "prefab:mutatedwarg(ID Complete)": {
        "prefix": "p+mutatedwarg",
        "body": "\"mutatedwarg\"",
        "description": " ※prefab ID: mutatedwarg\n ※Name: Possessed Varg\n ※prefab Version: DST-632551 "
    },
    "prefab:mutatedwarg(ReverseSearch)": {
        "prefix": "p+Possessed Varg",
        "body": "\"mutatedwarg\"",
        "description": " ※prefab ID: mutatedwarg\n ※Name: Possessed Varg\n ※prefab Version: DST-632551 "
    },
    "prefab:ruinsrelic_bowl(ID Complete)": {
        "prefix": "p+ruinsrelic_bowl",
        "body": "\"ruinsrelic_bowl\"",
        "description": " ※prefab ID: ruinsrelic_bowl\n ※Name: Replica Relic Bowl\n ※Recipe: \n\t+ 2 x: Cut Stone/cutstone\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:ruinsrelic_bowl(ReverseSearch)": {
        "prefix": "p+Replica Relic Bowl",
        "body": "\"ruinsrelic_bowl\"",
        "description": " ※prefab ID: ruinsrelic_bowl\n ※Name: Replica Relic Bowl\n ※Recipe: \n\t+ 2 x: Cut Stone/cutstone\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:bodypillow_kelp(ID Complete)": {
        "prefix": "p+bodypillow_kelp",
        "body": "\"bodypillow_kelp\"",
        "description": " ※prefab ID: bodypillow_kelp\n ※Name: Kelpy Pillow Armor\n ※Recipe: \n\t+ 3 x: Lucky Gold Nugget/lucky_goldnugget\n\t+ 2 x: Silk/silk\n\t+ 3 x: Kelp Fronds/kelp\n ※Required Tech: \n\t+ LV.3 : /RABBITOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:bodypillow_kelp(ReverseSearch)": {
        "prefix": "p+Kelpy Pillow Armor",
        "body": "\"bodypillow_kelp\"",
        "description": " ※prefab ID: bodypillow_kelp\n ※Name: Kelpy Pillow Armor\n ※Recipe: \n\t+ 3 x: Lucky Gold Nugget/lucky_goldnugget\n\t+ 2 x: Silk/silk\n\t+ 3 x: Kelp Fronds/kelp\n ※Required Tech: \n\t+ LV.3 : /RABBITOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:moonrock_pieces(ID Complete)": {
        "prefix": "p+moonrock_pieces",
        "body": "\"moonrock_pieces\"",
        "description": " ※prefab ID: moonrock_pieces\n ※Name: Moon Rubble\n ※prefab Version: DST-632551 "
    },
    "prefab:moonrock_pieces(ReverseSearch)": {
        "prefix": "p+Moon Rubble",
        "body": "\"moonrock_pieces\"",
        "description": " ※prefab ID: moonrock_pieces\n ※Name: Moon Rubble\n ※prefab Version: DST-632551 "
    },
    "prefab:wintercooking_pickledherring(ID Complete)": {
        "prefix": "p+wintercooking_pickledherring",
        "body": "\"wintercooking_pickledherring\"",
        "description": " ※prefab ID: wintercooking_pickledherring\n ※Name: Pickled Herring\n ※Recipe: \n\t+ 1 x: Holiday Cheer/wintersfeastfuel\n\t+ 1 x: Flint/flint\n\t+ 1 x: Salt Crystals/saltrock\n ※Required Tech: \n\t+ LV.1 : Feast/WINTERSFEASTCOOKING\n ※prefab Version: DST-632551 "
    },
    "prefab:wintercooking_pickledherring(ReverseSearch)": {
        "prefix": "p+Pickled Herring",
        "body": "\"wintercooking_pickledherring\"",
        "description": " ※prefab ID: wintercooking_pickledherring\n ※Name: Pickled Herring\n ※Recipe: \n\t+ 1 x: Holiday Cheer/wintersfeastfuel\n\t+ 1 x: Flint/flint\n\t+ 1 x: Salt Crystals/saltrock\n ※Required Tech: \n\t+ LV.1 : Feast/WINTERSFEASTCOOKING\n ※prefab Version: DST-632551 "
    },
    "prefab:dumbbell_gem(ID Complete)": {
        "prefix": "p+dumbbell_gem",
        "body": "\"dumbbell_gem\"",
        "description": " ※prefab ID: dumbbell_gem\n ※Name: Gembell\n ※Recipe: \n\t+ 2 x: Thulecite/thulecite\n\t+ 1 x: Purple Gem/purplegem\n\t+ 1 x: Twigs/twigs\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:dumbbell_gem(ReverseSearch)": {
        "prefix": "p+Gembell",
        "body": "\"dumbbell_gem\"",
        "description": " ※prefab ID: dumbbell_gem\n ※Name: Gembell\n ※Recipe: \n\t+ 2 x: Thulecite/thulecite\n\t+ 1 x: Purple Gem/purplegem\n\t+ 1 x: Twigs/twigs\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_bowl(ID Complete)": {
        "prefix": "p+quagmire_food_bowl",
        "body": "\"quagmire_food_bowl\"",
        "description": " ※prefab ID: quagmire_food_bowl\n ※Name: Bowl\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_bowl(ReverseSearch)": {
        "prefix": "p+Bowl",
        "body": "\"quagmire_food_bowl\"",
        "description": " ※prefab ID: quagmire_food_bowl\n ※Name: Bowl\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_038(ID Complete)": {
        "prefix": "p+quagmire_food_038",
        "body": "\"quagmire_food_038\"",
        "description": " ※prefab ID: quagmire_food_038\n ※Name: Spaghetti and Meatball\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_038(ReverseSearch)": {
        "prefix": "p+Spaghetti and Meatball",
        "body": "\"quagmire_food_038\"",
        "description": " ※prefab ID: quagmire_food_038\n ※Name: Spaghetti and Meatball\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_butterfly_builder(ID Complete)": {
        "prefix": "p+chesspiece_butterfly_builder",
        "body": "\"chesspiece_butterfly_builder\"",
        "description": " ※prefab ID: chesspiece_butterfly_builder\n ※Name: Moon Moth Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_butterfly_builder(ReverseSearch)": {
        "prefix": "p+Moon Moth Figure",
        "body": "\"chesspiece_butterfly_builder\"",
        "description": " ※prefab ID: chesspiece_butterfly_builder\n ※Name: Moon Moth Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:wateringcan_not_empty(ID Complete)": {
        "prefix": "p+wateringcan_not_empty",
        "body": "\"wateringcan_not_empty\"",
        "description": " ※prefab ID: wateringcan_not_empty\n ※Name: Watering Can\n ※prefab Version: DST-632551 "
    },
    "prefab:wateringcan_not_empty(ReverseSearch)": {
        "prefix": "p+Watering Can",
        "body": "\"wateringcan_not_empty\"",
        "description": " ※prefab ID: wateringcan_not_empty\n ※Name: Watering Can\n ※prefab Version: DST-632551 "
    },
    "prefab:monkeyqueen(ID Complete)": {
        "prefix": "p+monkeyqueen",
        "body": "\"monkeyqueen\"",
        "description": " ※prefab ID: monkeyqueen\n ※Name: Queen of Moon Quay\n ※prefab Version: DST-632551 "
    },
    "prefab:monkeyqueen(ReverseSearch)": {
        "prefix": "p+Queen of Moon Quay",
        "body": "\"monkeyqueen\"",
        "description": " ※prefab ID: monkeyqueen\n ※Name: Queen of Moon Quay\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_armorextraheavy(ID Complete)": {
        "prefix": "p+lavaarena_armorextraheavy",
        "body": "\"lavaarena_armorextraheavy\"",
        "description": " ※prefab ID: lavaarena_armorextraheavy\n ※Name: Steadfast Stone Armor\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_armorextraheavy(ReverseSearch)": {
        "prefix": "p+Steadfast Stone Armor",
        "body": "\"lavaarena_armorextraheavy\"",
        "description": " ※prefab ID: lavaarena_armorextraheavy\n ※Name: Steadfast Stone Armor\n ※prefab Version: DST-632551 "
    },
    "prefab:veggieomlet(ID Complete)": {
        "prefix": "p+veggieomlet",
        "body": "\"veggieomlet\"",
        "description": " ※prefab ID: veggieomlet\n ※Name: Breakfast Skillet\n ※prefab Version: DST-632551 "
    },
    "prefab:veggieomlet(ReverseSearch)": {
        "prefix": "p+Breakfast Skillet",
        "body": "\"veggieomlet\"",
        "description": " ※prefab ID: veggieomlet\n ※Name: Breakfast Skillet\n ※prefab Version: DST-632551 "
    },
    "prefab:kelphat(ID Complete)": {
        "prefix": "p+kelphat",
        "body": "\"kelphat\"",
        "description": " ※prefab ID: kelphat\n ※Name: Seawreath\n ※Recipe: \n\t+ 6 x: Kelp Fronds/kelp\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:kelphat(ReverseSearch)": {
        "prefix": "p+Seawreath",
        "body": "\"kelphat\"",
        "description": " ※prefab ID: kelphat\n ※Name: Seawreath\n ※Recipe: \n\t+ 6 x: Kelp Fronds/kelp\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_7(ID Complete)": {
        "prefix": "p+trinket_7",
        "body": "\"trinket_7\"",
        "description": " ※prefab ID: trinket_7\n ※Name: Ball and Cup\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_7(ReverseSearch)": {
        "prefix": "p+Ball and Cup",
        "body": "\"trinket_7\"",
        "description": " ※prefab ID: trinket_7\n ※Name: Ball and Cup\n ※prefab Version: DST-632551 "
    },
    "prefab:clayhound(ID Complete)": {
        "prefix": "p+clayhound",
        "body": "\"clayhound\"",
        "description": " ※prefab ID: clayhound\n ※Name: Clay Hound\n ※prefab Version: DST-632551 "
    },
    "prefab:clayhound(ReverseSearch)": {
        "prefix": "p+Clay Hound",
        "body": "\"clayhound\"",
        "description": " ※prefab ID: clayhound\n ※Name: Clay Hound\n ※prefab Version: DST-632551 "
    },
    "prefab:merm_tool_upgraded(ID Complete)": {
        "prefix": "p+merm_tool_upgraded",
        "body": "\"merm_tool_upgraded\"",
        "description": " ※prefab ID: merm_tool_upgraded\n ※Name: Slightly Less Shoddy Tool\n ※Recipe: \n\t+ 1 x: Twigs/twigs\n\t+ 1 x: Rocks/rocks\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:merm_tool_upgraded(ReverseSearch)": {
        "prefix": "p+Slightly Less Shoddy Tool",
        "body": "\"merm_tool_upgraded\"",
        "description": " ※prefab ID: merm_tool_upgraded\n ※Name: Slightly Less Shoddy Tool\n ※Recipe: \n\t+ 1 x: Twigs/twigs\n\t+ 1 x: Rocks/rocks\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:lost_toy_14(ID Complete)": {
        "prefix": "p+lost_toy_14",
        "body": "\"lost_toy_14\"",
        "description": " ※prefab ID: lost_toy_14\n ※Name: Mother's Favorite Teacup\n ※prefab Version: DST-632551 "
    },
    "prefab:lost_toy_14(ReverseSearch)": {
        "prefix": "p+Mother's Favorite Teacup",
        "body": "\"lost_toy_14\"",
        "description": " ※prefab ID: lost_toy_14\n ※Name: Mother's Favorite Teacup\n ※prefab Version: DST-632551 "
    },
    "prefab:boat_magnet(ID Complete)": {
        "prefix": "p+boat_magnet",
        "body": "\"boat_magnet\"",
        "description": " ※prefab ID: boat_magnet\n ※Name: Nautopilot\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 2 x: Cut Stone/cutstone\n\t+ 1 x: Electrical Doodad/transistor\n\t+ 1 x: Frazzled Wires/trinket_6\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:boat_magnet(ReverseSearch)": {
        "prefix": "p+Nautopilot",
        "body": "\"boat_magnet\"",
        "description": " ※prefab ID: boat_magnet\n ※Name: Nautopilot\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 2 x: Cut Stone/cutstone\n\t+ 1 x: Electrical Doodad/transistor\n\t+ 1 x: Frazzled Wires/trinket_6\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:sculpture_knighthead(ID Complete)": {
        "prefix": "p+sculpture_knighthead",
        "body": "\"sculpture_knighthead\"",
        "description": " ※prefab ID: sculpture_knighthead\n ※Name: Suspicious Marble\n ※prefab Version: DST-632551 "
    },
    "prefab:sculpture_knighthead(ReverseSearch)": {
        "prefix": "p+Suspicious Marble",
        "body": "\"sculpture_knighthead\"",
        "description": " ※prefab ID: sculpture_knighthead\n ※Name: Suspicious Marble\n ※prefab Version: DST-632551 "
    },
    "prefab:battlesong_container(ID Complete)": {
        "prefix": "p+battlesong_container",
        "body": "\"battlesong_container\"",
        "description": " ※prefab ID: battlesong_container\n ※Name: Battle Call Canister\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 3 x: Gold Nugget/goldnugget\n\t+ 2 x: Azure Feather/feather_robin_winter\n\t+ 2 x: Beeswax/beeswax\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:battlesong_container(ReverseSearch)": {
        "prefix": "p+Battle Call Canister",
        "body": "\"battlesong_container\"",
        "description": " ※prefab ID: battlesong_container\n ※Name: Battle Call Canister\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 3 x: Gold Nugget/goldnugget\n\t+ 2 x: Azure Feather/feather_robin_winter\n\t+ 2 x: Beeswax/beeswax\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:bird_egg_cooked(ID Complete)": {
        "prefix": "p+bird_egg_cooked",
        "body": "\"bird_egg_cooked\"",
        "description": " ※prefab ID: bird_egg_cooked\n ※Name: Cooked Egg\n ※prefab Version: DST-632551 "
    },
    "prefab:bird_egg_cooked(ReverseSearch)": {
        "prefix": "p+Cooked Egg",
        "body": "\"bird_egg_cooked\"",
        "description": " ※prefab ID: bird_egg_cooked\n ※Name: Cooked Egg\n ※prefab Version: DST-632551 "
    },
    "prefab:hermitcrab_name(ID Complete)": {
        "prefix": "p+hermitcrab_name",
        "body": "\"hermitcrab_name\"",
        "description": " ※prefab ID: hermitcrab_name\n ※Name: Pearl\n ※prefab Version: DST-632551 "
    },
    "prefab:hermitcrab_name(ReverseSearch)": {
        "prefix": "p+Pearl",
        "body": "\"hermitcrab_name\"",
        "description": " ※prefab ID: hermitcrab_name\n ※Name: Pearl\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_klaus_builder(ID Complete)": {
        "prefix": "p+chesspiece_klaus_builder",
        "body": "\"chesspiece_klaus_builder\"",
        "description": " ※prefab ID: chesspiece_klaus_builder\n ※Name: Klaus Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_klaus_builder(ReverseSearch)": {
        "prefix": "p+Klaus Figure",
        "body": "\"chesspiece_klaus_builder\"",
        "description": " ※prefab ID: chesspiece_klaus_builder\n ※Name: Klaus Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:batbat(ID Complete)": {
        "prefix": "p+batbat",
        "body": "\"batbat\"",
        "description": " ※prefab ID: batbat\n ※Name: Bat Bat\n ※Recipe: \n\t+ 3 x: Batilisk Wing/batwing\n\t+ 2 x: Living Log/livinglog\n\t+ 1 x: Purple Gem/purplegem\n ※Required Tech: \n\t+ LV.3 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:batbat(ReverseSearch)": {
        "prefix": "p+Bat Bat",
        "body": "\"batbat\"",
        "description": " ※prefab ID: batbat\n ※Name: Bat Bat\n ※Recipe: \n\t+ 3 x: Batilisk Wing/batwing\n\t+ 2 x: Living Log/livinglog\n\t+ 1 x: Purple Gem/purplegem\n ※Required Tech: \n\t+ LV.3 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_swampigelder(ID Complete)": {
        "prefix": "p+quagmire_swampigelder",
        "body": "\"quagmire_swampigelder\"",
        "description": " ※prefab ID: quagmire_swampigelder\n ※Name: Swamp Pig Elder\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_swampigelder(ReverseSearch)": {
        "prefix": "p+Swamp Pig Elder",
        "body": "\"quagmire_swampigelder\"",
        "description": " ※prefab ID: quagmire_swampigelder\n ※Name: Swamp Pig Elder\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_keyhole(ID Complete)": {
        "prefix": "p+lavaarena_keyhole",
        "body": "\"lavaarena_keyhole\"",
        "description": " ※prefab ID: lavaarena_keyhole\n ※Name: Ancient Anchor\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_keyhole(ReverseSearch)": {
        "prefix": "p+Ancient Anchor",
        "body": "\"lavaarena_keyhole\"",
        "description": " ※prefab ID: lavaarena_keyhole\n ※Name: Ancient Anchor\n ※prefab Version: DST-632551 "
    },
    "prefab:researchlab(ID Complete)": {
        "prefix": "p+researchlab",
        "body": "\"researchlab\"",
        "description": " ※prefab ID: researchlab\n ※Name: Science Machine\n ※Recipe: \n\t+ 1 x: Gold Nugget/goldnugget\n\t+ 4 x: Log/log\n\t+ 4 x: Rocks/rocks\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:researchlab(ReverseSearch)": {
        "prefix": "p+Science Machine",
        "body": "\"researchlab\"",
        "description": " ※prefab ID: researchlab\n ※Name: Science Machine\n ※Recipe: \n\t+ 1 x: Gold Nugget/goldnugget\n\t+ 4 x: Log/log\n\t+ 4 x: Rocks/rocks\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:teenbird(ID Complete)": {
        "prefix": "p+teenbird",
        "body": "\"teenbird\"",
        "description": " ※prefab ID: teenbird\n ※Name: Smallish Tallbird\n ※prefab Version: DST-632551 "
    },
    "prefab:teenbird(ReverseSearch)": {
        "prefix": "p+Smallish Tallbird",
        "body": "\"teenbird\"",
        "description": " ※prefab ID: teenbird\n ※Name: Smallish Tallbird\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_medium_6(ID Complete)": {
        "prefix": "p+oceanfish_medium_6",
        "body": "\"oceanfish_medium_6\"",
        "description": " ※prefab ID: oceanfish_medium_6\n ※Name: Dappled Koi\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_medium_6(ReverseSearch)": {
        "prefix": "p+Dappled Koi",
        "body": "\"oceanfish_medium_6\"",
        "description": " ※prefab ID: oceanfish_medium_6\n ※Name: Dappled Koi\n ※prefab Version: DST-632551 "
    },
    "prefab:critterlab(ID Complete)": {
        "prefix": "p+critterlab",
        "body": "\"critterlab\"",
        "description": " ※prefab ID: critterlab\n ※Name: Rock Den\n ※prefab Version: DST-632551 "
    },
    "prefab:critterlab(ReverseSearch)": {
        "prefix": "p+Rock Den",
        "body": "\"critterlab\"",
        "description": " ※prefab ID: critterlab\n ※Name: Rock Den\n ※prefab Version: DST-632551 "
    },
    "prefab:offering_pot_upgraded(ID Complete)": {
        "prefix": "p+offering_pot_upgraded",
        "body": "\"offering_pot_upgraded\"",
        "description": " ※prefab ID: offering_pot_upgraded\n ※Name: Superior Communal Kelp Dish\n ※Recipe: \n\t+ 3 x: Boards/boards\n\t+ 3 x: Cut Reeds/cutreeds\n\t+ 1 x: Tentacle Spots/tentaclespots\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:offering_pot_upgraded(ReverseSearch)": {
        "prefix": "p+Superior Communal Kelp Dish",
        "body": "\"offering_pot_upgraded\"",
        "description": " ※prefab ID: offering_pot_upgraded\n ※Name: Superior Communal Kelp Dish\n ※Recipe: \n\t+ 3 x: Boards/boards\n\t+ 3 x: Cut Reeds/cutreeds\n\t+ 1 x: Tentacle Spots/tentaclespots\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:boatfragment04(ID Complete)": {
        "prefix": "p+boatfragment04",
        "body": "\"boatfragment04\"",
        "description": " ※prefab ID: boatfragment04\n ※Name: Boat Fragment\n ※prefab Version: DST-632551 "
    },
    "prefab:boatfragment04(ReverseSearch)": {
        "prefix": "p+Boat Fragment",
        "body": "\"boatfragment04\"",
        "description": " ※prefab ID: boatfragment04\n ※Name: Boat Fragment\n ※prefab Version: DST-632551 "
    },
    "prefab:turnip_cooked(ID Complete)": {
        "prefix": "p+turnip_cooked",
        "body": "\"turnip_cooked\"",
        "description": " ※prefab ID: turnip_cooked\n ※Name: Roasted Turnip\n ※prefab Version: DST-632551 "
    },
    "prefab:turnip_cooked(ReverseSearch)": {
        "prefix": "p+Roasted Turnip",
        "body": "\"turnip_cooked\"",
        "description": " ※prefab ID: turnip_cooked\n ※Name: Roasted Turnip\n ※prefab Version: DST-632551 "
    },
    "prefab:mandrake(ID Complete)": {
        "prefix": "p+mandrake",
        "body": "\"mandrake\"",
        "description": " ※prefab ID: mandrake\n ※Name: Mandrake\n ※prefab Version: DST-632551 "
    },
    "prefab:mandrake(ReverseSearch)": {
        "prefix": "p+Mandrake",
        "body": "\"mandrake\"",
        "description": " ※prefab ID: mandrake\n ※Name: Mandrake\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_archive(ID Complete)": {
        "prefix": "p+turf_archive",
        "body": "\"turf_archive\"",
        "description": " ※prefab ID: turf_archive\n ※Name: Ancient Stonework\n ※Recipe: \n\t+ 1 x: Moon Rock/moonrocknugget\n\t+ 1 x: Thulecite Fragments/thulecite_pieces\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_archive(ReverseSearch)": {
        "prefix": "p+Ancient Stonework",
        "body": "\"turf_archive\"",
        "description": " ※prefab ID: turf_archive\n ※Name: Ancient Stonework\n ※Recipe: \n\t+ 1 x: Moon Rock/moonrocknugget\n\t+ 1 x: Thulecite Fragments/thulecite_pieces\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:mushtree_moon(ID Complete)": {
        "prefix": "p+mushtree_moon",
        "body": "\"mushtree_moon\"",
        "description": " ※prefab ID: mushtree_moon\n ※Name: Lunar Mushtree\n ※prefab Version: DST-632551 "
    },
    "prefab:mushtree_moon(ReverseSearch)": {
        "prefix": "p+Lunar Mushtree",
        "body": "\"mushtree_moon\"",
        "description": " ※prefab ID: mushtree_moon\n ※Name: Lunar Mushtree\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_039(ID Complete)": {
        "prefix": "p+quagmire_food_039",
        "body": "\"quagmire_food_039\"",
        "description": " ※prefab ID: quagmire_food_039\n ※Name: Lasagna\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_039(ReverseSearch)": {
        "prefix": "p+Lasagna",
        "body": "\"quagmire_food_039\"",
        "description": " ※prefab ID: quagmire_food_039\n ※Name: Lasagna\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_deerclops_builder(ID Complete)": {
        "prefix": "p+chesspiece_deerclops_builder",
        "body": "\"chesspiece_deerclops_builder\"",
        "description": " ※prefab ID: chesspiece_deerclops_builder\n ※Name: Deerclops Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_deerclops_builder(ReverseSearch)": {
        "prefix": "p+Deerclops Figure",
        "body": "\"chesspiece_deerclops_builder\"",
        "description": " ※prefab ID: chesspiece_deerclops_builder\n ※Name: Deerclops Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:support_pillar_dreadstone_broken(ID Complete)": {
        "prefix": "p+support_pillar_dreadstone_broken",
        "body": "\"support_pillar_dreadstone_broken\"",
        "description": " ※prefab ID: support_pillar_dreadstone_broken\n ※Name: Dreadstone Pillar Wreckage\n ※prefab Version: DST-632551 "
    },
    "prefab:support_pillar_dreadstone_broken(ReverseSearch)": {
        "prefix": "p+Dreadstone Pillar Wreckage",
        "body": "\"support_pillar_dreadstone_broken\"",
        "description": " ※prefab ID: support_pillar_dreadstone_broken\n ※Name: Dreadstone Pillar Wreckage\n ※prefab Version: DST-632551 "
    },
    "prefab:plant_normal_ground(ID Complete)": {
        "prefix": "p+plant_normal_ground",
        "body": "\"plant_normal_ground\"",
        "description": " ※prefab ID: plant_normal_ground\n ※Name: Wild Crop\n ※prefab Version: DST-632551 "
    },
    "prefab:plant_normal_ground(ReverseSearch)": {
        "prefix": "p+Wild Crop",
        "body": "\"plant_normal_ground\"",
        "description": " ※prefab ID: plant_normal_ground\n ※Name: Wild Crop\n ※prefab Version: DST-632551 "
    },
    "prefab:batnose_cooked(ID Complete)": {
        "prefix": "p+batnose_cooked",
        "body": "\"batnose_cooked\"",
        "description": " ※prefab ID: batnose_cooked\n ※Name: Charred Nostrils\n ※prefab Version: DST-632551 "
    },
    "prefab:batnose_cooked(ReverseSearch)": {
        "prefix": "p+Charred Nostrils",
        "body": "\"batnose_cooked\"",
        "description": " ※prefab ID: batnose_cooked\n ※Name: Charred Nostrils\n ※prefab Version: DST-632551 "
    },
    "prefab:rock_avocado_fruit(ID Complete)": {
        "prefix": "p+rock_avocado_fruit",
        "body": "\"rock_avocado_fruit\"",
        "description": " ※prefab ID: rock_avocado_fruit\n ※Name: Stone Fruit\n ※prefab Version: DST-632551 "
    },
    "prefab:rock_avocado_fruit(ReverseSearch)": {
        "prefix": "p+Stone Fruit",
        "body": "\"rock_avocado_fruit\"",
        "description": " ※prefab ID: rock_avocado_fruit\n ※Name: Stone Fruit\n ※prefab Version: DST-632551 "
    },
    "prefab:garlic_seeds(ID Complete)": {
        "prefix": "p+garlic_seeds",
        "body": "\"garlic_seeds\"",
        "description": " ※prefab ID: garlic_seeds\n ※Name: Seed Pods\n ※prefab Version: DST-632551 "
    },
    "prefab:garlic_seeds(ReverseSearch)": {
        "prefix": "p+Seed Pods",
        "body": "\"garlic_seeds\"",
        "description": " ※prefab ID: garlic_seeds\n ※Name: Seed Pods\n ※prefab Version: DST-632551 "
    },
    "prefab:ice_blueprint(ID Complete)": {
        "prefix": "p+ice_blueprint",
        "body": "\"ice_blueprint\"",
        "description": " ※prefab ID: ice_blueprint\n ※Name: Frostbitten Costume Pattern\n ※prefab Version: DST-632551 "
    },
    "prefab:ice_blueprint(ReverseSearch)": {
        "prefix": "p+Frostbitten Costume Pattern",
        "body": "\"ice_blueprint\"",
        "description": " ※prefab ID: ice_blueprint\n ※Name: Frostbitten Costume Pattern\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_45(ID Complete)": {
        "prefix": "p+trinket_45",
        "body": "\"trinket_45\"",
        "description": " ※prefab ID: trinket_45\n ※Name: Odd Radio\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_45(ReverseSearch)": {
        "prefix": "p+Odd Radio",
        "body": "\"trinket_45\"",
        "description": " ※prefab ID: trinket_45\n ※Name: Odd Radio\n ※prefab Version: DST-632551 "
    },
    "prefab:grass(ID Complete)": {
        "prefix": "p+grass",
        "body": "\"grass\"",
        "description": " ※prefab ID: grass\n ※Name: Grass\n ※prefab Version: DST-632551 "
    },
    "prefab:grass(ReverseSearch)": {
        "prefix": "p+Grass",
        "body": "\"grass\"",
        "description": " ※prefab ID: grass\n ※Name: Grass\n ※prefab Version: DST-632551 "
    },
    "prefab:gingerdeadpig(ID Complete)": {
        "prefix": "p+gingerdeadpig",
        "body": "\"gingerdeadpig\"",
        "description": " ※prefab ID: gingerdeadpig\n ※Name: Gingerbread Pig\n ※prefab Version: DST-632551 "
    },
    "prefab:gingerdeadpig(ReverseSearch)": {
        "prefix": "p+Gingerbread Pig",
        "body": "\"gingerdeadpig\"",
        "description": " ※prefab ID: gingerdeadpig\n ※Name: Gingerbread Pig\n ※prefab Version: DST-632551 "
    },
    "prefab:yotb_pattern_fragment_3(ID Complete)": {
        "prefix": "p+yotb_pattern_fragment_3",
        "body": "\"yotb_pattern_fragment_3\"",
        "description": " ※prefab ID: yotb_pattern_fragment_3\n ※Name: Festive Pattern Scrap\n ※Recipe: \n\t+ 5 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /BEEFOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:yotb_pattern_fragment_3(ReverseSearch)": {
        "prefix": "p+Festive Pattern Scrap",
        "body": "\"yotb_pattern_fragment_3\"",
        "description": " ※prefab ID: yotb_pattern_fragment_3\n ※Name: Festive Pattern Scrap\n ※Recipe: \n\t+ 5 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /BEEFOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:red_mushroom(ID Complete)": {
        "prefix": "p+red_mushroom",
        "body": "\"red_mushroom\"",
        "description": " ※prefab ID: red_mushroom\n ※Name: Red Mushroom\n ※prefab Version: DST-632551 "
    },
    "prefab:red_mushroom(ReverseSearch)": {
        "prefix": "p+Red Mushroom",
        "body": "\"red_mushroom\"",
        "description": " ※prefab ID: red_mushroom\n ※Name: Red Mushroom\n ※prefab Version: DST-632551 "
    },
    "prefab:molehill(ID Complete)": {
        "prefix": "p+molehill",
        "body": "\"molehill\"",
        "description": " ※prefab ID: molehill\n ※Name: Burrow\n ※prefab Version: DST-632551 "
    },
    "prefab:molehill(ReverseSearch)": {
        "prefix": "p+Burrow",
        "body": "\"molehill\"",
        "description": " ※prefab ID: molehill\n ※Name: Burrow\n ※prefab Version: DST-632551 "
    },
    "prefab:mole(ID Complete)": {
        "prefix": "p+mole",
        "body": "\"mole\"",
        "description": " ※prefab ID: mole\n ※Name: Moleworm\n ※prefab Version: DST-632551 "
    },
    "prefab:mole(ReverseSearch)": {
        "prefix": "p+Moleworm",
        "body": "\"mole\"",
        "description": " ※prefab ID: mole\n ※Name: Moleworm\n ※prefab Version: DST-632551 "
    },
    "prefab:itemmimic_revealed(ID Complete)": {
        "prefix": "p+itemmimic_revealed",
        "body": "\"itemmimic_revealed\"",
        "description": " ※prefab ID: itemmimic_revealed\n ※Name: Mimicreep\n ※prefab Version: DST-632551 "
    },
    "prefab:itemmimic_revealed(ReverseSearch)": {
        "prefix": "p+Mimicreep",
        "body": "\"itemmimic_revealed\"",
        "description": " ※prefab ID: itemmimic_revealed\n ※Name: Mimicreep\n ※prefab Version: DST-632551 "
    },
    "prefab:chessjunk1(ID Complete)": {
        "prefix": "p+chessjunk1",
        "body": "\"chessjunk1\"",
        "description": " ※prefab ID: chessjunk1\n ※Name: Broken Clockworks\n ※prefab Version: DST-632551 "
    },
    "prefab:chessjunk1(ReverseSearch)": {
        "prefix": "p+Broken Clockworks",
        "body": "\"chessjunk1\"",
        "description": " ※prefab ID: chessjunk1\n ※Name: Broken Clockworks\n ※prefab Version: DST-632551 "
    },
    "prefab:ocean_trawler(ID Complete)": {
        "prefix": "p+ocean_trawler",
        "body": "\"ocean_trawler\"",
        "description": " ※prefab ID: ocean_trawler\n ※Name: Ocean Trawler\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 2 x: Rope/rope\n\t+ 6 x: Silk/silk\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:ocean_trawler(ReverseSearch)": {
        "prefix": "p+Ocean Trawler",
        "body": "\"ocean_trawler\"",
        "description": " ※prefab ID: ocean_trawler\n ※Name: Ocean Trawler\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 2 x: Rope/rope\n\t+ 6 x: Silk/silk\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:farm_plant_pumpkin(ID Complete)": {
        "prefix": "p+farm_plant_pumpkin",
        "body": "\"farm_plant_pumpkin\"",
        "description": " ※prefab ID: farm_plant_pumpkin\n ※Name: Pumpkin Plant\n ※prefab Version: DST-632551 "
    },
    "prefab:farm_plant_pumpkin(ReverseSearch)": {
        "prefix": "p+Pumpkin Plant",
        "body": "\"farm_plant_pumpkin\"",
        "description": " ※prefab ID: farm_plant_pumpkin\n ※Name: Pumpkin Plant\n ※prefab Version: DST-632551 "
    },
    "prefab:sculpture_bishopbody(ID Complete)": {
        "prefix": "p+sculpture_bishopbody",
        "body": "\"sculpture_bishopbody\"",
        "description": " ※prefab ID: sculpture_bishopbody\n ※Name: Marble Sculpture\n ※prefab Version: DST-632551 "
    },
    "prefab:sculpture_bishopbody(ReverseSearch)": {
        "prefix": "p+Marble Sculpture",
        "body": "\"sculpture_bishopbody\"",
        "description": " ※prefab ID: sculpture_bishopbody\n ※Name: Marble Sculpture\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_anchor_sketch(ID Complete)": {
        "prefix": "p+chesspiece_anchor_sketch",
        "body": "\"chesspiece_anchor_sketch\"",
        "description": " ※prefab ID: chesspiece_anchor_sketch\n ※Name: Anchor Figure Sketch\n ※Recipe: \n\t+ 1 x: Papyrus/papyrus\n ※Required Tech: \n\t+ LV.2 : Seafaring/SEAFARING\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_anchor_sketch(ReverseSearch)": {
        "prefix": "p+Anchor Figure Sketch",
        "body": "\"chesspiece_anchor_sketch\"",
        "description": " ※prefab ID: chesspiece_anchor_sketch\n ※Name: Anchor Figure Sketch\n ※Recipe: \n\t+ 1 x: Papyrus/papyrus\n ※Required Tech: \n\t+ LV.2 : Seafaring/SEAFARING\n ※prefab Version: DST-632551 "
    },
    "prefab:madscience_lab(ID Complete)": {
        "prefix": "p+madscience_lab",
        "body": "\"madscience_lab\"",
        "description": " ※prefab ID: madscience_lab\n ※Name: Mad Scientist Lab\n ※Recipe: \n\t+ 2 x: Cut Stone/cutstone\n\t+ 2 x: Electrical Doodad/transistor\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:madscience_lab(ReverseSearch)": {
        "prefix": "p+Mad Scientist Lab",
        "body": "\"madscience_lab\"",
        "description": " ※prefab ID: madscience_lab\n ※Name: Mad Scientist Lab\n ※Recipe: \n\t+ 2 x: Cut Stone/cutstone\n\t+ 2 x: Electrical Doodad/transistor\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:mermhat(ID Complete)": {
        "prefix": "p+mermhat",
        "body": "\"mermhat\"",
        "description": " ※prefab ID: mermhat\n ※Name: Clever Disguise\n ※Recipe: \n\t+ 1 x: Freshwater Fish/pondfish\n\t+ 1 x: Cut Reeds/cutreeds\n\t+ 2 x: Twigs/twigs\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:mermhat(ReverseSearch)": {
        "prefix": "p+Clever Disguise",
        "body": "\"mermhat\"",
        "description": " ※prefab ID: mermhat\n ※Name: Clever Disguise\n ※Recipe: \n\t+ 1 x: Freshwater Fish/pondfish\n\t+ 1 x: Cut Reeds/cutreeds\n\t+ 2 x: Twigs/twigs\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:fishmeat_cooked(ID Complete)": {
        "prefix": "p+fishmeat_cooked",
        "body": "\"fishmeat_cooked\"",
        "description": " ※prefab ID: fishmeat_cooked\n ※Name: Fish Steak\n ※prefab Version: DST-632551 "
    },
    "prefab:fishmeat_cooked(ReverseSearch)": {
        "prefix": "p+Fish Steak",
        "body": "\"fishmeat_cooked\"",
        "description": " ※prefab ID: fishmeat_cooked\n ※Name: Fish Steak\n ※prefab Version: DST-632551 "
    },
    "prefab:bibingka(ID Complete)": {
        "prefix": "p+bibingka",
        "body": "\"bibingka\"",
        "description": " ※prefab ID: bibingka\n ※Name: Bibingka\n ※prefab Version: DST-632551 "
    },
    "prefab:bibingka(ReverseSearch)": {
        "prefix": "p+Bibingka",
        "body": "\"bibingka\"",
        "description": " ※prefab ID: bibingka\n ※Name: Bibingka\n ※prefab Version: DST-632551 "
    },
    "prefab:merm_prince(ID Complete)": {
        "prefix": "p+merm_prince",
        "body": "\"merm_prince\"",
        "description": " ※prefab ID: merm_prince\n ※Name: Royal-In-Progress\n ※prefab Version: DST-632551 "
    },
    "prefab:merm_prince(ReverseSearch)": {
        "prefix": "p+Royal-In-Progress",
        "body": "\"merm_prince\"",
        "description": " ※prefab ID: merm_prince\n ※Name: Royal-In-Progress\n ※prefab Version: DST-632551 "
    },
    "prefab:firestaff(ID Complete)": {
        "prefix": "p+firestaff",
        "body": "\"firestaff\"",
        "description": " ※prefab ID: firestaff\n ※Name: Fire Staff\n ※Recipe: \n\t+ 2 x: Nightmare Fuel/nightmarefuel\n\t+ 1 x: Spear/spear\n\t+ 1 x: Red Gem/redgem\n ※Required Tech: \n\t+ LV.3 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:firestaff(ReverseSearch)": {
        "prefix": "p+Fire Staff",
        "body": "\"firestaff\"",
        "description": " ※prefab ID: firestaff\n ※Name: Fire Staff\n ※Recipe: \n\t+ 2 x: Nightmare Fuel/nightmarefuel\n\t+ 1 x: Spear/spear\n\t+ 1 x: Red Gem/redgem\n ※Required Tech: \n\t+ LV.3 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:monkey_mediumhat(ID Complete)": {
        "prefix": "p+monkey_mediumhat",
        "body": "\"monkey_mediumhat\"",
        "description": " ※prefab ID: monkey_mediumhat\n ※Name: Captain's Tricorn\n ※prefab Version: DST-632551 "
    },
    "prefab:monkey_mediumhat(ReverseSearch)": {
        "prefix": "p+Captain's Tricorn",
        "body": "\"monkey_mediumhat\"",
        "description": " ※prefab ID: monkey_mediumhat\n ※Name: Captain's Tricorn\n ※prefab Version: DST-632551 "
    },
    "prefab:terrarium(ID Complete)": {
        "prefix": "p+terrarium",
        "body": "\"terrarium\"",
        "description": " ※prefab ID: terrarium\n ※Name: Terrarium\n ※prefab Version: DST-632551 "
    },
    "prefab:terrarium(ReverseSearch)": {
        "prefix": "p+Terrarium",
        "body": "\"terrarium\"",
        "description": " ※prefab ID: terrarium\n ※Name: Terrarium\n ※prefab Version: DST-632551 "
    },
    "prefab:koalefant_carcass(ID Complete)": {
        "prefix": "p+koalefant_carcass",
        "body": "\"koalefant_carcass\"",
        "description": " ※prefab ID: koalefant_carcass\n ※Name: Koalefant Carcass\n ※prefab Version: DST-632551 "
    },
    "prefab:koalefant_carcass(ReverseSearch)": {
        "prefix": "p+Koalefant Carcass",
        "body": "\"koalefant_carcass\"",
        "description": " ※prefab ID: koalefant_carcass\n ※Name: Koalefant Carcass\n ※prefab Version: DST-632551 "
    },
    "prefab:pond_mos(ID Complete)": {
        "prefix": "p+pond_mos",
        "body": "\"pond_mos\"",
        "description": " ※prefab ID: pond_mos\n ※Name: Pond\n ※prefab Version: DST-632551 "
    },
    "prefab:pond_mos(ReverseSearch)": {
        "prefix": "p+Pond",
        "body": "\"pond_mos\"",
        "description": " ※prefab ID: pond_mos\n ※Name: Pond\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_small_9(ID Complete)": {
        "prefix": "p+oceanfish_small_9",
        "body": "\"oceanfish_small_9\"",
        "description": " ※prefab ID: oceanfish_small_9\n ※Name: Spittlefish\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_small_9(ReverseSearch)": {
        "prefix": "p+Spittlefish",
        "body": "\"oceanfish_small_9\"",
        "description": " ※prefab ID: oceanfish_small_9\n ※Name: Spittlefish\n ※prefab Version: DST-632551 "
    },
    "prefab:ipecacsyrup_buff(ID Complete)": {
        "prefix": "p+ipecacsyrup_buff",
        "body": "\"ipecacsyrup_buff\"",
        "description": " ※prefab ID: ipecacsyrup_buff\n ※Name: Ipecaca Poisoning\n ※prefab Version: DST-632551 "
    },
    "prefab:ipecacsyrup_buff(ReverseSearch)": {
        "prefix": "p+Ipecaca Poisoning",
        "body": "\"ipecacsyrup_buff\"",
        "description": " ※prefab ID: ipecacsyrup_buff\n ※Name: Ipecaca Poisoning\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_medium_6_inv(ID Complete)": {
        "prefix": "p+oceanfish_medium_6_inv",
        "body": "\"oceanfish_medium_6_inv\"",
        "description": " ※prefab ID: oceanfish_medium_6_inv\n ※Name: Dappled Koi\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_medium_6_inv(ReverseSearch)": {
        "prefix": "p+Dappled Koi",
        "body": "\"oceanfish_medium_6_inv\"",
        "description": " ※prefab ID: oceanfish_medium_6_inv\n ※Name: Dappled Koi\n ※prefab Version: DST-632551 "
    },
    "prefab:yotc_carrat_scale_item(ID Complete)": {
        "prefix": "p+yotc_carrat_scale_item",
        "body": "\"yotc_carrat_scale_item\"",
        "description": " ※prefab ID: yotc_carrat_scale_item\n ※Name: Carrat Scale Kit\n ※Recipe: \n\t+ 1 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /CARRATOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:yotc_carrat_scale_item(ReverseSearch)": {
        "prefix": "p+Carrat Scale Kit",
        "body": "\"yotc_carrat_scale_item\"",
        "description": " ※prefab ID: yotc_carrat_scale_item\n ※Name: Carrat Scale Kit\n ※Recipe: \n\t+ 1 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /CARRATOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:water_turtle(ID Complete)": {
        "prefix": "p+water_turtle",
        "body": "\"water_turtle\"",
        "description": " ※prefab ID: water_turtle\n ※Name: Sea Turtle\n ※prefab Version: DST-632551 "
    },
    "prefab:water_turtle(ReverseSearch)": {
        "prefix": "p+Sea Turtle",
        "body": "\"water_turtle\"",
        "description": " ※prefab ID: water_turtle\n ※Name: Sea Turtle\n ※prefab Version: DST-632551 "
    },
    "prefab:acorn_cooked(ID Complete)": {
        "prefix": "p+acorn_cooked",
        "body": "\"acorn_cooked\"",
        "description": " ※prefab ID: acorn_cooked\n ※Name: Roasted Birchnut\n ※prefab Version: DST-632551 "
    },
    "prefab:acorn_cooked(ReverseSearch)": {
        "prefix": "p+Roasted Birchnut",
        "body": "\"acorn_cooked\"",
        "description": " ※prefab ID: acorn_cooked\n ※Name: Roasted Birchnut\n ※prefab Version: DST-632551 "
    },
    "prefab:blowdart_sleep(ID Complete)": {
        "prefix": "p+blowdart_sleep",
        "body": "\"blowdart_sleep\"",
        "description": " ※prefab ID: blowdart_sleep\n ※Name: Sleep Dart\n ※Recipe: \n\t+ 2 x: Cut Reeds/cutreeds\n\t+ 1 x: Stinger/stinger\n\t+ 1 x: Jet Feather/feather_crow\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:blowdart_sleep(ReverseSearch)": {
        "prefix": "p+Sleep Dart",
        "body": "\"blowdart_sleep\"",
        "description": " ※prefab ID: blowdart_sleep\n ※Name: Sleep Dart\n ※Recipe: \n\t+ 2 x: Cut Reeds/cutreeds\n\t+ 1 x: Stinger/stinger\n\t+ 1 x: Jet Feather/feather_crow\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:wickerbottom(ID Complete)": {
        "prefix": "p+wickerbottom",
        "body": "\"wickerbottom\"",
        "description": " ※prefab ID: wickerbottom\n ※Name: Wickerbottom\n ※prefab Version: DST-632551 "
    },
    "prefab:wickerbottom(ReverseSearch)": {
        "prefix": "p+Wickerbottom",
        "body": "\"wickerbottom\"",
        "description": " ※prefab ID: wickerbottom\n ※Name: Wickerbottom\n ※prefab Version: DST-632551 "
    },
    "prefab:yotb_beefalo_doll_doll(ID Complete)": {
        "prefix": "p+yotb_beefalo_doll_doll",
        "body": "\"yotb_beefalo_doll_doll\"",
        "description": " ※prefab ID: yotb_beefalo_doll_doll\n ※Name: Dolled-Up Beefalo Doll\n ※prefab Version: DST-632551 "
    },
    "prefab:yotb_beefalo_doll_doll(ReverseSearch)": {
        "prefix": "p+Dolled-Up Beefalo Doll",
        "body": "\"yotb_beefalo_doll_doll\"",
        "description": " ※prefab ID: yotb_beefalo_doll_doll\n ※Name: Dolled-Up Beefalo Doll\n ※prefab Version: DST-632551 "
    },
    "prefab:yotd_steeringwheel(ID Complete)": {
        "prefix": "p+yotd_steeringwheel",
        "body": "\"yotd_steeringwheel\"",
        "description": " ※prefab ID: yotd_steeringwheel\n ※Name: Dragonfly Boat Wheel\n ※prefab Version: DST-632551 "
    },
    "prefab:yotd_steeringwheel(ReverseSearch)": {
        "prefix": "p+Dragonfly Boat Wheel",
        "body": "\"yotd_steeringwheel\"",
        "description": " ※prefab ID: yotd_steeringwheel\n ※Name: Dragonfly Boat Wheel\n ※prefab Version: DST-632551 "
    },
    "prefab:hedgehound_bush(ID Complete)": {
        "prefix": "p+hedgehound_bush",
        "body": "\"hedgehound_bush\"",
        "description": " ※prefab ID: hedgehound_bush\n ※Name: Briar\n ※prefab Version: DST-632551 "
    },
    "prefab:hedgehound_bush(ReverseSearch)": {
        "prefix": "p+Briar",
        "body": "\"hedgehound_bush\"",
        "description": " ※prefab ID: hedgehound_bush\n ※Name: Briar\n ※prefab Version: DST-632551 "
    },
    "prefab:boatrace_start(ID Complete)": {
        "prefix": "p+boatrace_start",
        "body": "\"boatrace_start\"",
        "description": " ※prefab ID: boatrace_start\n ※Name: Start Tower\n ※prefab Version: DST-632551 "
    },
    "prefab:boatrace_start(ReverseSearch)": {
        "prefix": "p+Start Tower",
        "body": "\"boatrace_start\"",
        "description": " ※prefab ID: boatrace_start\n ※Name: Start Tower\n ※prefab Version: DST-632551 "
    },
    "prefab:known_corn_seeds(ID Complete)": {
        "prefix": "p+known_corn_seeds",
        "body": "\"known_corn_seeds\"",
        "description": " ※prefab ID: known_corn_seeds\n ※Name: Corn Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:known_corn_seeds(ReverseSearch)": {
        "prefix": "p+Corn Seeds",
        "body": "\"known_corn_seeds\"",
        "description": " ※prefab ID: known_corn_seeds\n ※Name: Corn Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:chessjunk2(ID Complete)": {
        "prefix": "p+chessjunk2",
        "body": "\"chessjunk2\"",
        "description": " ※prefab ID: chessjunk2\n ※Name: Broken Clockworks\n ※prefab Version: DST-632551 "
    },
    "prefab:chessjunk2(ReverseSearch)": {
        "prefix": "p+Broken Clockworks",
        "body": "\"chessjunk2\"",
        "description": " ※prefab ID: chessjunk2\n ※Name: Broken Clockworks\n ※prefab Version: DST-632551 "
    },
    "prefab:beast_blueprint(ID Complete)": {
        "prefix": "p+beast_blueprint",
        "body": "\"beast_blueprint\"",
        "description": " ※prefab ID: beast_blueprint\n ※Name: Lucky Beast Costume Pattern\n ※prefab Version: DST-632551 "
    },
    "prefab:beast_blueprint(ReverseSearch)": {
        "prefix": "p+Lucky Beast Costume Pattern",
        "body": "\"beast_blueprint\"",
        "description": " ※prefab ID: beast_blueprint\n ※Name: Lucky Beast Costume Pattern\n ※prefab Version: DST-632551 "
    },
    "prefab:ancienttree_gem(ID Complete)": {
        "prefix": "p+ancienttree_gem",
        "body": "\"ancienttree_gem\"",
        "description": " ※prefab ID: ancienttree_gem\n ※Name: Sproutrock\n ※prefab Version: DST-632551 "
    },
    "prefab:ancienttree_gem(ReverseSearch)": {
        "prefix": "p+Sproutrock",
        "body": "\"ancienttree_gem\"",
        "description": " ※prefab ID: ancienttree_gem\n ※Name: Sproutrock\n ※prefab Version: DST-632551 "
    },
    "prefab:opalpreciousgem(ID Complete)": {
        "prefix": "p+opalpreciousgem",
        "body": "\"opalpreciousgem\"",
        "description": " ※prefab ID: opalpreciousgem\n ※Name: Iridescent Gem\n ※prefab Version: DST-632551 "
    },
    "prefab:opalpreciousgem(ReverseSearch)": {
        "prefix": "p+Iridescent Gem",
        "body": "\"opalpreciousgem\"",
        "description": " ※prefab ID: opalpreciousgem\n ※Name: Iridescent Gem\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_woodfloor(ID Complete)": {
        "prefix": "p+turf_woodfloor",
        "body": "\"turf_woodfloor\"",
        "description": " ※prefab ID: turf_woodfloor\n ※Name: Wooden Flooring\n ※Recipe: \n\t+ 1 x: Boards/boards\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_woodfloor(ReverseSearch)": {
        "prefix": "p+Wooden Flooring",
        "body": "\"turf_woodfloor\"",
        "description": " ※prefab ID: turf_woodfloor\n ※Name: Wooden Flooring\n ※Recipe: \n\t+ 1 x: Boards/boards\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:handpillow_steelwool(ID Complete)": {
        "prefix": "p+handpillow_steelwool",
        "body": "\"handpillow_steelwool\"",
        "description": " ※prefab ID: handpillow_steelwool\n ※Name: Steel Wool Pillow\n ※Recipe: \n\t+ 5 x: Lucky Gold Nugget/lucky_goldnugget\n\t+ 2 x: Silk/silk\n\t+ 2 x: Steel Wool/steelwool\n ※Required Tech: \n\t+ LV.3 : /RABBITOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:handpillow_steelwool(ReverseSearch)": {
        "prefix": "p+Steel Wool Pillow",
        "body": "\"handpillow_steelwool\"",
        "description": " ※prefab ID: handpillow_steelwool\n ※Name: Steel Wool Pillow\n ※Recipe: \n\t+ 5 x: Lucky Gold Nugget/lucky_goldnugget\n\t+ 2 x: Silk/silk\n\t+ 2 x: Steel Wool/steelwool\n ※Required Tech: \n\t+ LV.3 : /RABBITOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:warly(ID Complete)": {
        "prefix": "p+warly",
        "body": "\"warly\"",
        "description": " ※prefab ID: warly\n ※Name: Warly\n ※prefab Version: DST-632551 "
    },
    "prefab:warly(ReverseSearch)": {
        "prefix": "p+Warly",
        "body": "\"warly\"",
        "description": " ※prefab ID: warly\n ※Name: Warly\n ※prefab Version: DST-632551 "
    },
    "prefab:rainhat(ID Complete)": {
        "prefix": "p+rainhat",
        "body": "\"rainhat\"",
        "description": " ※prefab ID: rainhat\n ※Name: Rain Hat\n ※Recipe: \n\t+ 2 x: Moleworm/mole\n\t+ 1 x: Straw Hat/strawhat\n\t+ 1 x: Bone Shards/boneshard\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:rainhat(ReverseSearch)": {
        "prefix": "p+Rain Hat",
        "body": "\"rainhat\"",
        "description": " ※prefab ID: rainhat\n ※Name: Rain Hat\n ※Recipe: \n\t+ 2 x: Moleworm/mole\n\t+ 1 x: Straw Hat/strawhat\n\t+ 1 x: Bone Shards/boneshard\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:livingtree_root(ID Complete)": {
        "prefix": "p+livingtree_root",
        "body": "\"livingtree_root\"",
        "description": " ※prefab ID: livingtree_root\n ※Name: Totally Normal Root\n ※prefab Version: DST-632551 "
    },
    "prefab:livingtree_root(ReverseSearch)": {
        "prefix": "p+Totally Normal Root",
        "body": "\"livingtree_root\"",
        "description": " ※prefab ID: livingtree_root\n ※Name: Totally Normal Root\n ※prefab Version: DST-632551 "
    },
    "prefab:bernie_active(ID Complete)": {
        "prefix": "p+bernie_active",
        "body": "\"bernie_active\"",
        "description": " ※prefab ID: bernie_active\n ※Name: Bernie\n ※prefab Version: DST-632551 "
    },
    "prefab:bernie_active(ReverseSearch)": {
        "prefix": "p+Bernie",
        "body": "\"bernie_active\"",
        "description": " ※prefab ID: bernie_active\n ※Name: Bernie\n ※prefab Version: DST-632551 "
    },
    "prefab:beetletaur(ID Complete)": {
        "prefix": "p+beetletaur",
        "body": "\"beetletaur\"",
        "description": " ※prefab ID: beetletaur\n ※Name: Infernal Swineclops\n ※prefab Version: DST-632551 "
    },
    "prefab:beetletaur(ReverseSearch)": {
        "prefix": "p+Infernal Swineclops",
        "body": "\"beetletaur\"",
        "description": " ※prefab ID: beetletaur\n ※Name: Infernal Swineclops\n ※prefab Version: DST-632551 "
    },
    "prefab:moonbutterfly_sapling(ID Complete)": {
        "prefix": "p+moonbutterfly_sapling",
        "body": "\"moonbutterfly_sapling\"",
        "description": " ※prefab ID: moonbutterfly_sapling\n ※Name: Lune Tree Sapling\n ※prefab Version: DST-632551 "
    },
    "prefab:moonbutterfly_sapling(ReverseSearch)": {
        "prefix": "p+Lune Tree Sapling",
        "body": "\"moonbutterfly_sapling\"",
        "description": " ※prefab ID: moonbutterfly_sapling\n ※Name: Lune Tree Sapling\n ※prefab Version: DST-632551 "
    },
    "prefab:koalefant_winter(ID Complete)": {
        "prefix": "p+koalefant_winter",
        "body": "\"koalefant_winter\"",
        "description": " ※prefab ID: koalefant_winter\n ※Name: Koalefant\n ※prefab Version: DST-632551 "
    },
    "prefab:koalefant_winter(ReverseSearch)": {
        "prefix": "p+Koalefant",
        "body": "\"koalefant_winter\"",
        "description": " ※prefab ID: koalefant_winter\n ※Name: Koalefant\n ※prefab Version: DST-632551 "
    },
    "prefab:mutator_moon(ID Complete)": {
        "prefix": "p+mutator_moon",
        "body": "\"mutator_moon\"",
        "description": " ※prefab ID: mutator_moon\n ※Name: Shatter Switcherdoodle\n ※Recipe: \n\t+ 2 x: Monster Meat/monstermeat\n\t+ 3 x: Silk/silk\n\t+ 2 x: Moon Shard/moonglass\n ※Required Tech: \n\t+ LV.1 : Spider Care/SPIDERCRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:mutator_moon(ReverseSearch)": {
        "prefix": "p+Shatter Switcherdoodle",
        "body": "\"mutator_moon\"",
        "description": " ※prefab ID: mutator_moon\n ※Name: Shatter Switcherdoodle\n ※Recipe: \n\t+ 2 x: Monster Meat/monstermeat\n\t+ 3 x: Silk/silk\n\t+ 2 x: Moon Shard/moonglass\n ※Required Tech: \n\t+ LV.1 : Spider Care/SPIDERCRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:maxwellhead(ID Complete)": {
        "prefix": "p+maxwellhead",
        "body": "\"maxwellhead\"",
        "description": " ※prefab ID: maxwellhead\n ※Name: Maxwell's Head\n ※prefab Version: DST-632551 "
    },
    "prefab:maxwellhead(ReverseSearch)": {
        "prefix": "p+Maxwell's Head",
        "body": "\"maxwellhead\"",
        "description": " ※prefab ID: maxwellhead\n ※Name: Maxwell's Head\n ※prefab Version: DST-632551 "
    },
    "prefab:researchlab2(ID Complete)": {
        "prefix": "p+researchlab2",
        "body": "\"researchlab2\"",
        "description": " ※prefab ID: researchlab2\n ※Name: Alchemy Engine\n ※Recipe: \n\t+ 4 x: Boards/boards\n\t+ 2 x: Cut Stone/cutstone\n\t+ 2 x: Electrical Doodad/transistor\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:researchlab2(ReverseSearch)": {
        "prefix": "p+Alchemy Engine",
        "body": "\"researchlab2\"",
        "description": " ※prefab ID: researchlab2\n ※Name: Alchemy Engine\n ※Recipe: \n\t+ 4 x: Boards/boards\n\t+ 2 x: Cut Stone/cutstone\n\t+ 2 x: Electrical Doodad/transistor\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:decor_flowervase(ID Complete)": {
        "prefix": "p+decor_flowervase",
        "body": "\"decor_flowervase\"",
        "description": " ※prefab ID: decor_flowervase\n ※Name: Table Vase\n ※Recipe: \n\t+ 2 x: Log/log\n\t+ 1 x: Rope/rope\n ※Required Tech: \n\t+ LV.2 : Carpentry/CARPENTRY\n ※prefab Version: DST-632551 "
    },
    "prefab:decor_flowervase(ReverseSearch)": {
        "prefix": "p+Table Vase",
        "body": "\"decor_flowervase\"",
        "description": " ※prefab ID: decor_flowervase\n ※Name: Table Vase\n ※Recipe: \n\t+ 2 x: Log/log\n\t+ 1 x: Rope/rope\n ※Required Tech: \n\t+ LV.2 : Carpentry/CARPENTRY\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_007(ID Complete)": {
        "prefix": "p+quagmire_food_007",
        "body": "\"quagmire_food_007\"",
        "description": " ※prefab ID: quagmire_food_007\n ※Name: Potato Pancakes\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_007(ReverseSearch)": {
        "prefix": "p+Potato Pancakes",
        "body": "\"quagmire_food_007\"",
        "description": " ※prefab ID: quagmire_food_007\n ※Name: Potato Pancakes\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_tomato(ID Complete)": {
        "prefix": "p+quagmire_tomato",
        "body": "\"quagmire_tomato\"",
        "description": " ※prefab ID: quagmire_tomato\n ※Name: Toma Root\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_tomato(ReverseSearch)": {
        "prefix": "p+Toma Root",
        "body": "\"quagmire_tomato\"",
        "description": " ※prefab ID: quagmire_tomato\n ※Name: Toma Root\n ※prefab Version: DST-632551 "
    },
    "prefab:humanmeat_dried(ID Complete)": {
        "prefix": "p+humanmeat_dried",
        "body": "\"humanmeat_dried\"",
        "description": " ※prefab ID: humanmeat_dried\n ※Name: Long Pig Jerky\n ※prefab Version: DST-632551 "
    },
    "prefab:humanmeat_dried(ReverseSearch)": {
        "prefix": "p+Long Pig Jerky",
        "body": "\"humanmeat_dried\"",
        "description": " ※prefab ID: humanmeat_dried\n ※Name: Long Pig Jerky\n ※prefab Version: DST-632551 "
    },
    "prefab:lordfruitfly(ID Complete)": {
        "prefix": "p+lordfruitfly",
        "body": "\"lordfruitfly\"",
        "description": " ※prefab ID: lordfruitfly\n ※Name: Lord of the Fruit Flies\n ※prefab Version: DST-632551 "
    },
    "prefab:lordfruitfly(ReverseSearch)": {
        "prefix": "p+Lord of the Fruit Flies",
        "body": "\"lordfruitfly\"",
        "description": " ※prefab ID: lordfruitfly\n ※Name: Lord of the Fruit Flies\n ※prefab Version: DST-632551 "
    },
    "prefab:walkingplank(ID Complete)": {
        "prefix": "p+walkingplank",
        "body": "\"walkingplank\"",
        "description": " ※prefab ID: walkingplank\n ※Name: Plank\n ※prefab Version: DST-632551 "
    },
    "prefab:walkingplank(ReverseSearch)": {
        "prefix": "p+Plank",
        "body": "\"walkingplank\"",
        "description": " ※prefab ID: walkingplank\n ※Name: Plank\n ※prefab Version: DST-632551 "
    },
    "prefab:monkeyhut(ID Complete)": {
        "prefix": "p+monkeyhut",
        "body": "\"monkeyhut\"",
        "description": " ※prefab ID: monkeyhut\n ※Name: Monkey Hut\n ※prefab Version: DST-632551 "
    },
    "prefab:monkeyhut(ReverseSearch)": {
        "prefix": "p+Monkey Hut",
        "body": "\"monkeyhut\"",
        "description": " ※prefab ID: monkeyhut\n ※Name: Monkey Hut\n ※prefab Version: DST-632551 "
    },
    "prefab:moonbase(ID Complete)": {
        "prefix": "p+moonbase",
        "body": "\"moonbase\"",
        "description": " ※prefab ID: moonbase\n ※Name: Moon Stone\n ※prefab Version: DST-632551 "
    },
    "prefab:moonbase(ReverseSearch)": {
        "prefix": "p+Moon Stone",
        "body": "\"moonbase\"",
        "description": " ※prefab ID: moonbase\n ※Name: Moon Stone\n ※prefab Version: DST-632551 "
    },
    "prefab:dreadstone_stack(ID Complete)": {
        "prefix": "p+dreadstone_stack",
        "body": "\"dreadstone_stack\"",
        "description": " ※prefab ID: dreadstone_stack\n ※Name: Dreadstone Outcrop\n ※prefab Version: DST-632551 "
    },
    "prefab:dreadstone_stack(ReverseSearch)": {
        "prefix": "p+Dreadstone Outcrop",
        "body": "\"dreadstone_stack\"",
        "description": " ※prefab ID: dreadstone_stack\n ※Name: Dreadstone Outcrop\n ※prefab Version: DST-632551 "
    },
    "prefab:yotp_food1(ID Complete)": {
        "prefix": "p+yotp_food1",
        "body": "\"yotp_food1\"",
        "description": " ※prefab ID: yotp_food1\n ※Name: Tribute Roast\n ※Recipe: \n\t+ 6 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /PIGOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:yotp_food1(ReverseSearch)": {
        "prefix": "p+Tribute Roast",
        "body": "\"yotp_food1\"",
        "description": " ※prefab ID: yotp_food1\n ※Name: Tribute Roast\n ※Recipe: \n\t+ 6 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /PIGOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:atrium_rubble(ID Complete)": {
        "prefix": "p+atrium_rubble",
        "body": "\"atrium_rubble\"",
        "description": " ※prefab ID: atrium_rubble\n ※Name: Ancient Mural\n ※prefab Version: DST-632551 "
    },
    "prefab:atrium_rubble(ReverseSearch)": {
        "prefix": "p+Ancient Mural",
        "body": "\"atrium_rubble\"",
        "description": " ※prefab ID: atrium_rubble\n ※Name: Ancient Mural\n ※prefab Version: DST-632551 "
    },
    "prefab:crabking_icewall(ID Complete)": {
        "prefix": "p+crabking_icewall",
        "body": "\"crabking_icewall\"",
        "description": " ※prefab ID: crabking_icewall\n ※Name: Ice Barrier\n ※prefab Version: DST-632551 "
    },
    "prefab:crabking_icewall(ReverseSearch)": {
        "prefix": "p+Ice Barrier",
        "body": "\"crabking_icewall\"",
        "description": " ※prefab ID: crabking_icewall\n ※Name: Ice Barrier\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalfood_corntea(ID Complete)": {
        "prefix": "p+carnivalfood_corntea",
        "body": "\"carnivalfood_corntea\"",
        "description": " ※prefab ID: carnivalfood_corntea\n ※Name: Corny Slush\n ※Recipe: \n\t+ 12 x: Prize Tickets/carnival_prizeticket\n ※Required Tech: \n\t+ LV.1 : Trinket Trove/CARNIVAL_PRIZESHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalfood_corntea(ReverseSearch)": {
        "prefix": "p+Corny Slush",
        "body": "\"carnivalfood_corntea\"",
        "description": " ※prefab ID: carnivalfood_corntea\n ※Name: Corny Slush\n ※Recipe: \n\t+ 12 x: Prize Tickets/carnival_prizeticket\n ※Required Tech: \n\t+ LV.1 : Trinket Trove/CARNIVAL_PRIZESHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:pond_algae(ID Complete)": {
        "prefix": "p+pond_algae",
        "body": "\"pond_algae\"",
        "description": " ※prefab ID: pond_algae\n ※Name: Algae\n ※prefab Version: DST-632551 "
    },
    "prefab:pond_algae(ReverseSearch)": {
        "prefix": "p+Algae",
        "body": "\"pond_algae\"",
        "description": " ※prefab ID: pond_algae\n ※Name: Algae\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_slaughtertool(ID Complete)": {
        "prefix": "p+quagmire_slaughtertool",
        "body": "\"quagmire_slaughtertool\"",
        "description": " ※prefab ID: quagmire_slaughtertool\n ※Name: Slaughter Tools\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_slaughtertool(ReverseSearch)": {
        "prefix": "p+Slaughter Tools",
        "body": "\"quagmire_slaughtertool\"",
        "description": " ※prefab ID: quagmire_slaughtertool\n ※Name: Slaughter Tools\n ※prefab Version: DST-632551 "
    },
    "prefab:phonograph(ID Complete)": {
        "prefix": "p+phonograph",
        "body": "\"phonograph\"",
        "description": " ※prefab ID: phonograph\n ※Name: Gramophone\n ※Recipe: \n\t+ 3 x: Gold Nugget/goldnugget\n\t+ 2 x: Electrical Doodad/transistor\n\t+ 1 x: Gears/gears\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:phonograph(ReverseSearch)": {
        "prefix": "p+Gramophone",
        "body": "\"phonograph\"",
        "description": " ※prefab ID: phonograph\n ※Name: Gramophone\n ※Recipe: \n\t+ 3 x: Gold Nugget/goldnugget\n\t+ 2 x: Electrical Doodad/transistor\n\t+ 1 x: Gears/gears\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_park_angel(ID Complete)": {
        "prefix": "p+quagmire_park_angel",
        "body": "\"quagmire_park_angel\"",
        "description": " ※prefab ID: quagmire_park_angel\n ※Name: Gnaw Worshipper\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_park_angel(ReverseSearch)": {
        "prefix": "p+Gnaw Worshipper",
        "body": "\"quagmire_park_angel\"",
        "description": " ※prefab ID: quagmire_park_angel\n ※Name: Gnaw Worshipper\n ※prefab Version: DST-632551 "
    },
    "prefab:armorsnurtleshell(ID Complete)": {
        "prefix": "p+armorsnurtleshell",
        "body": "\"armorsnurtleshell\"",
        "description": " ※prefab ID: armorsnurtleshell\n ※Name: Snurtle Shell Armor\n ※prefab Version: DST-632551 "
    },
    "prefab:armorsnurtleshell(ReverseSearch)": {
        "prefix": "p+Snurtle Shell Armor",
        "body": "\"armorsnurtleshell\"",
        "description": " ※prefab ID: armorsnurtleshell\n ※Name: Snurtle Shell Armor\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_moosegoose_alt(ID Complete)": {
        "prefix": "p+chesspiece_moosegoose_alt",
        "body": "\"chesspiece_moosegoose_alt\"",
        "description": " ※prefab ID: chesspiece_moosegoose_alt\n ※Name: Goose Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_moosegoose_alt(ReverseSearch)": {
        "prefix": "p+Goose Figure",
        "body": "\"chesspiece_moosegoose_alt\"",
        "description": " ※prefab ID: chesspiece_moosegoose_alt\n ※Name: Goose Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:shieldofterror(ID Complete)": {
        "prefix": "p+shieldofterror",
        "body": "\"shieldofterror\"",
        "description": " ※prefab ID: shieldofterror\n ※Name: Shield of Terror\n ※Recipe: \n\t+ 2 x: Gears/gears\n\t+ 3 x: Nightmare Fuel/nightmarefuel\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:shieldofterror(ReverseSearch)": {
        "prefix": "p+Shield of Terror",
        "body": "\"shieldofterror\"",
        "description": " ※prefab ID: shieldofterror\n ※Name: Shield of Terror\n ※Recipe: \n\t+ 2 x: Gears/gears\n\t+ 3 x: Nightmare Fuel/nightmarefuel\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:goldenpitchfork(ID Complete)": {
        "prefix": "p+goldenpitchfork",
        "body": "\"goldenpitchfork\"",
        "description": " ※prefab ID: goldenpitchfork\n ※Name: Snazzy Pitchfork\n ※Recipe: \n\t+ 4 x: Twigs/twigs\n\t+ 2 x: Gold Nugget/goldnugget\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:goldenpitchfork(ReverseSearch)": {
        "prefix": "p+Snazzy Pitchfork",
        "body": "\"goldenpitchfork\"",
        "description": " ※prefab ID: goldenpitchfork\n ※Name: Snazzy Pitchfork\n ※Recipe: \n\t+ 4 x: Twigs/twigs\n\t+ 2 x: Gold Nugget/goldnugget\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:bananabush(ID Complete)": {
        "prefix": "p+bananabush",
        "body": "\"bananabush\"",
        "description": " ※prefab ID: bananabush\n ※Name: Banana Bush\n ※prefab Version: DST-632551 "
    },
    "prefab:bananabush(ReverseSearch)": {
        "prefix": "p+Banana Bush",
        "body": "\"bananabush\"",
        "description": " ※prefab ID: bananabush\n ※Name: Banana Bush\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_medium_4(ID Complete)": {
        "prefix": "p+oceanfish_medium_4",
        "body": "\"oceanfish_medium_4\"",
        "description": " ※prefab ID: oceanfish_medium_4\n ※Name: Black Catfish\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_medium_4(ReverseSearch)": {
        "prefix": "p+Black Catfish",
        "body": "\"oceanfish_medium_4\"",
        "description": " ※prefab ID: oceanfish_medium_4\n ※Name: Black Catfish\n ※prefab Version: DST-632551 "
    },
    "prefab:security_pulse_cage_full(ID Complete)": {
        "prefix": "p+security_pulse_cage_full",
        "body": "\"security_pulse_cage_full\"",
        "description": " ※prefab ID: security_pulse_cage_full\n ※Name: Spark Ark\n ※Recipe: \n\t+ 1 x: Spark Ark/security_pulse_cage\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:security_pulse_cage_full(ReverseSearch)": {
        "prefix": "p+Spark Ark",
        "body": "\"security_pulse_cage_full\"",
        "description": " ※prefab ID: security_pulse_cage_full\n ※Name: Spark Ark\n ※Recipe: \n\t+ 1 x: Spark Ark/security_pulse_cage\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_grill_item(ID Complete)": {
        "prefix": "p+quagmire_grill_item",
        "body": "\"quagmire_grill_item\"",
        "description": " ※prefab ID: quagmire_grill_item\n ※Name: Large Grill\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_grill_item(ReverseSearch)": {
        "prefix": "p+Large Grill",
        "body": "\"quagmire_grill_item\"",
        "description": " ※prefab ID: quagmire_grill_item\n ※Name: Large Grill\n ※prefab Version: DST-632551 "
    },
    "prefab:yotc_carrat_gym_direction_item(ID Complete)": {
        "prefix": "p+yotc_carrat_gym_direction_item",
        "body": "\"yotc_carrat_gym_direction_item\"",
        "description": " ※prefab ID: yotc_carrat_gym_direction_item\n ※Name: Navigation Gym Kit\n ※Recipe: \n\t+ 4 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /CARRATOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:yotc_carrat_gym_direction_item(ReverseSearch)": {
        "prefix": "p+Navigation Gym Kit",
        "body": "\"yotc_carrat_gym_direction_item\"",
        "description": " ※prefab ID: yotc_carrat_gym_direction_item\n ※Name: Navigation Gym Kit\n ※Recipe: \n\t+ 4 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /CARRATOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:multiplayer_portal(ID Complete)": {
        "prefix": "p+multiplayer_portal",
        "body": "\"multiplayer_portal\"",
        "description": " ※prefab ID: multiplayer_portal\n ※Name: Florid Postern\n ※prefab Version: DST-632551 "
    },
    "prefab:multiplayer_portal(ReverseSearch)": {
        "prefix": "p+Florid Postern",
        "body": "\"multiplayer_portal\"",
        "description": " ※prefab ID: multiplayer_portal\n ※Name: Florid Postern\n ※prefab Version: DST-632551 "
    },
    "prefab:rock_flintless_med(ID Complete)": {
        "prefix": "p+rock_flintless_med",
        "body": "\"rock_flintless_med\"",
        "description": " ※prefab ID: rock_flintless_med\n ※Name: Boulder\n ※prefab Version: DST-632551 "
    },
    "prefab:rock_flintless_med(ReverseSearch)": {
        "prefix": "p+Boulder",
        "body": "\"rock_flintless_med\"",
        "description": " ※prefab ID: rock_flintless_med\n ※Name: Boulder\n ※prefab Version: DST-632551 "
    },
    "prefab:barnacle_cooked(ID Complete)": {
        "prefix": "p+barnacle_cooked",
        "body": "\"barnacle_cooked\"",
        "description": " ※prefab ID: barnacle_cooked\n ※Name: Cooked Barnacles\n ※prefab Version: DST-632551 "
    },
    "prefab:barnacle_cooked(ReverseSearch)": {
        "prefix": "p+Cooked Barnacles",
        "body": "\"barnacle_cooked\"",
        "description": " ※prefab ID: barnacle_cooked\n ※Name: Cooked Barnacles\n ※prefab Version: DST-632551 "
    },
    "prefab:winter_ornamentlight(ID Complete)": {
        "prefix": "p+winter_ornamentlight",
        "body": "\"winter_ornamentlight\"",
        "description": " ※prefab ID: winter_ornamentlight\n ※Name: Festive Light\n ※prefab Version: DST-632551 "
    },
    "prefab:winter_ornamentlight(ReverseSearch)": {
        "prefix": "p+Festive Light",
        "body": "\"winter_ornamentlight\"",
        "description": " ※prefab ID: winter_ornamentlight\n ※Name: Festive Light\n ※prefab Version: DST-632551 "
    },
    "prefab:cutreeds(ID Complete)": {
        "prefix": "p+cutreeds",
        "body": "\"cutreeds\"",
        "description": " ※prefab ID: cutreeds\n ※Name: Cut Reeds\n ※prefab Version: DST-632551 "
    },
    "prefab:cutreeds(ReverseSearch)": {
        "prefix": "p+Cut Reeds",
        "body": "\"cutreeds\"",
        "description": " ※prefab ID: cutreeds\n ※Name: Cut Reeds\n ※prefab Version: DST-632551 "
    },
    "prefab:greenmooneye(ID Complete)": {
        "prefix": "p+greenmooneye",
        "body": "\"greenmooneye\"",
        "description": " ※prefab ID: greenmooneye\n ※Name: Green Moonlens\n ※Recipe: \n\t+ 1 x: Cratered Moonrock/moonrockcrater\n\t+ 1 x: Green Gem/greengem\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:greenmooneye(ReverseSearch)": {
        "prefix": "p+Green Moonlens",
        "body": "\"greenmooneye\"",
        "description": " ※prefab ID: greenmooneye\n ※Name: Green Moonlens\n ※Recipe: \n\t+ 1 x: Cratered Moonrock/moonrockcrater\n\t+ 1 x: Green Gem/greengem\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:rock_flintless(ID Complete)": {
        "prefix": "p+rock_flintless",
        "body": "\"rock_flintless\"",
        "description": " ※prefab ID: rock_flintless\n ※Name: Boulder\n ※prefab Version: DST-632551 "
    },
    "prefab:rock_flintless(ReverseSearch)": {
        "prefix": "p+Boulder",
        "body": "\"rock_flintless\"",
        "description": " ※prefab ID: rock_flintless\n ※Name: Boulder\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_rubble_house(ID Complete)": {
        "prefix": "p+quagmire_rubble_house",
        "body": "\"quagmire_rubble_house\"",
        "description": " ※prefab ID: quagmire_rubble_house\n ※Name: Dilapidated House\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_rubble_house(ReverseSearch)": {
        "prefix": "p+Dilapidated House",
        "body": "\"quagmire_rubble_house\"",
        "description": " ※prefab ID: quagmire_rubble_house\n ※Name: Dilapidated House\n ※prefab Version: DST-632551 "
    },
    "prefab:feather_canary(ID Complete)": {
        "prefix": "p+feather_canary",
        "body": "\"feather_canary\"",
        "description": " ※prefab ID: feather_canary\n ※Name: Saffron Feather\n ※prefab Version: DST-632551 "
    },
    "prefab:feather_canary(ReverseSearch)": {
        "prefix": "p+Saffron Feather",
        "body": "\"feather_canary\"",
        "description": " ※prefab ID: feather_canary\n ※Name: Saffron Feather\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaspit(ID Complete)": {
        "prefix": "p+lavaspit",
        "body": "\"lavaspit\"",
        "description": " ※prefab ID: lavaspit\n ※Name: Dragonfly Saliva\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaspit(ReverseSearch)": {
        "prefix": "p+Dragonfly Saliva",
        "body": "\"lavaspit\"",
        "description": " ※prefab ID: lavaspit\n ※Name: Dragonfly Saliva\n ※prefab Version: DST-632551 "
    },
    "prefab:cartographydesk(ID Complete)": {
        "prefix": "p+cartographydesk",
        "body": "\"cartographydesk\"",
        "description": " ※prefab ID: cartographydesk\n ※Name: Cartographer's Desk\n ※Recipe: \n\t+ 1 x: Compass/compass\n\t+ 4 x: Boards/boards\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:cartographydesk(ReverseSearch)": {
        "prefix": "p+Cartographer's Desk",
        "body": "\"cartographydesk\"",
        "description": " ※prefab ID: cartographydesk\n ※Name: Cartographer's Desk\n ※Recipe: \n\t+ 1 x: Compass/compass\n\t+ 4 x: Boards/boards\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:spidereggsack(ID Complete)": {
        "prefix": "p+spidereggsack",
        "body": "\"spidereggsack\"",
        "description": " ※prefab ID: spidereggsack\n ※Name: Spider Eggs\n ※Recipe: \n\t+ 12 x: Silk/silk\n\t+ 4 x: Spider Gland/spidergland\n\t+ 3 x: Papyrus/papyrus\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:spidereggsack(ReverseSearch)": {
        "prefix": "p+Spider Eggs",
        "body": "\"spidereggsack\"",
        "description": " ※prefab ID: spidereggsack\n ※Name: Spider Eggs\n ※Recipe: \n\t+ 12 x: Silk/silk\n\t+ 4 x: Spider Gland/spidergland\n\t+ 3 x: Papyrus/papyrus\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:evergreen_sparse(ID Complete)": {
        "prefix": "p+evergreen_sparse",
        "body": "\"evergreen_sparse\"",
        "description": " ※prefab ID: evergreen_sparse\n ※Name: Lumpy Evergreen\n ※prefab Version: DST-632551 "
    },
    "prefab:evergreen_sparse(ReverseSearch)": {
        "prefix": "p+Lumpy Evergreen",
        "body": "\"evergreen_sparse\"",
        "description": " ※prefab ID: evergreen_sparse\n ※Name: Lumpy Evergreen\n ※prefab Version: DST-632551 "
    },
    "prefab:pickaxe(ID Complete)": {
        "prefix": "p+pickaxe",
        "body": "\"pickaxe\"",
        "description": " ※prefab ID: pickaxe\n ※Name: Pickaxe\n ※Recipe: \n\t+ 2 x: Twigs/twigs\n\t+ 2 x: Flint/flint\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:pickaxe(ReverseSearch)": {
        "prefix": "p+Pickaxe",
        "body": "\"pickaxe\"",
        "description": " ※prefab ID: pickaxe\n ※Name: Pickaxe\n ※Recipe: \n\t+ 2 x: Twigs/twigs\n\t+ 2 x: Flint/flint\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_armor_hpdamager(ID Complete)": {
        "prefix": "p+lavaarena_armor_hpdamager",
        "body": "\"lavaarena_armor_hpdamager\"",
        "description": " ※prefab ID: lavaarena_armor_hpdamager\n ※Name: Jagged Grand Armor\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_armor_hpdamager(ReverseSearch)": {
        "prefix": "p+Jagged Grand Armor",
        "body": "\"lavaarena_armor_hpdamager\"",
        "description": " ※prefab ID: lavaarena_armor_hpdamager\n ※Name: Jagged Grand Armor\n ※prefab Version: DST-632551 "
    },
    "prefab:rhinodrill2(ID Complete)": {
        "prefix": "p+rhinodrill2",
        "body": "\"rhinodrill2\"",
        "description": " ※prefab ID: rhinodrill2\n ※Name: Rhinocebro Flatbrim\n ※prefab Version: DST-632551 "
    },
    "prefab:rhinodrill2(ReverseSearch)": {
        "prefix": "p+Rhinocebro Flatbrim",
        "body": "\"rhinodrill2\"",
        "description": " ※prefab ID: rhinodrill2\n ※Name: Rhinocebro Flatbrim\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_deerclops_mutated_sketch(ID Complete)": {
        "prefix": "p+chesspiece_deerclops_mutated_sketch",
        "body": "\"chesspiece_deerclops_mutated_sketch\"",
        "description": " ※prefab ID: chesspiece_deerclops_mutated_sketch\n ※Name: Crystal Deerclops Figure Sketch\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_deerclops_mutated_sketch(ReverseSearch)": {
        "prefix": "p+Crystal Deerclops Figure Sketch",
        "body": "\"chesspiece_deerclops_mutated_sketch\"",
        "description": " ※prefab ID: chesspiece_deerclops_mutated_sketch\n ※Name: Crystal Deerclops Figure Sketch\n ※prefab Version: DST-632551 "
    },
    "prefab:spat(ID Complete)": {
        "prefix": "p+spat",
        "body": "\"spat\"",
        "description": " ※prefab ID: spat\n ※Name: Ewecus\n ※prefab Version: DST-632551 "
    },
    "prefab:spat(ReverseSearch)": {
        "prefix": "p+Ewecus",
        "body": "\"spat\"",
        "description": " ※prefab ID: spat\n ※Name: Ewecus\n ※prefab Version: DST-632551 "
    },
    "prefab:singingshell_octave5(ID Complete)": {
        "prefix": "p+singingshell_octave5",
        "body": "\"singingshell_octave5\"",
        "description": " ※prefab ID: singingshell_octave5\n ※Name: Soprano Shell Bell\n ※prefab Version: DST-632551 "
    },
    "prefab:singingshell_octave5(ReverseSearch)": {
        "prefix": "p+Soprano Shell Bell",
        "body": "\"singingshell_octave5\"",
        "description": " ※prefab ID: singingshell_octave5\n ※Name: Soprano Shell Bell\n ※prefab Version: DST-632551 "
    },
    "prefab:carnival_crowkid(ID Complete)": {
        "prefix": "p+carnival_crowkid",
        "body": "\"carnival_crowkid\"",
        "description": " ※prefab ID: carnival_crowkid\n ※Name: Crow Kid\n ※prefab Version: DST-632551 "
    },
    "prefab:carnival_crowkid(ReverseSearch)": {
        "prefix": "p+Crow Kid",
        "body": "\"carnival_crowkid\"",
        "description": " ※prefab ID: carnival_crowkid\n ※Name: Crow Kid\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_small_5(ID Complete)": {
        "prefix": "p+oceanfish_small_5",
        "body": "\"oceanfish_small_5\"",
        "description": " ※prefab ID: oceanfish_small_5\n ※Name: Popperfish\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_small_5(ReverseSearch)": {
        "prefix": "p+Popperfish",
        "body": "\"oceanfish_small_5\"",
        "description": " ※prefab ID: oceanfish_small_5\n ※Name: Popperfish\n ※prefab Version: DST-632551 "
    },
    "prefab:wintersfeastfuel(ID Complete)": {
        "prefix": "p+wintersfeastfuel",
        "body": "\"wintersfeastfuel\"",
        "description": " ※prefab ID: wintersfeastfuel\n ※Name: Holiday Cheer\n ※prefab Version: DST-632551 "
    },
    "prefab:wintersfeastfuel(ReverseSearch)": {
        "prefix": "p+Holiday Cheer",
        "body": "\"wintersfeastfuel\"",
        "description": " ※prefab ID: wintersfeastfuel\n ※Name: Holiday Cheer\n ※prefab Version: DST-632551 "
    },
    "prefab:carrot_seeds(ID Complete)": {
        "prefix": "p+carrot_seeds",
        "body": "\"carrot_seeds\"",
        "description": " ※prefab ID: carrot_seeds\n ※Name: Oblong Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:carrot_seeds(ReverseSearch)": {
        "prefix": "p+Oblong Seeds",
        "body": "\"carrot_seeds\"",
        "description": " ※prefab ID: carrot_seeds\n ※Name: Oblong Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:grassgator(ID Complete)": {
        "prefix": "p+grassgator",
        "body": "\"grassgator\"",
        "description": " ※prefab ID: grassgator\n ※Name: Grass Gator\n ※prefab Version: DST-632551 "
    },
    "prefab:grassgator(ReverseSearch)": {
        "prefix": "p+Grass Gator",
        "body": "\"grassgator\"",
        "description": " ※prefab ID: grassgator\n ※Name: Grass Gator\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_carpetfloor(ID Complete)": {
        "prefix": "p+turf_carpetfloor",
        "body": "\"turf_carpetfloor\"",
        "description": " ※prefab ID: turf_carpetfloor\n ※Name: Carpeted Flooring\n ※Recipe: \n\t+ 1 x: Boards/boards\n\t+ 1 x: Beefalo Wool/beefalowool\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_carpetfloor(ReverseSearch)": {
        "prefix": "p+Carpeted Flooring",
        "body": "\"turf_carpetfloor\"",
        "description": " ※prefab ID: turf_carpetfloor\n ※Name: Carpeted Flooring\n ※Recipe: \n\t+ 1 x: Boards/boards\n\t+ 1 x: Beefalo Wool/beefalowool\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:moonglassaxe_blueprint(ID Complete)": {
        "prefix": "p+moonglassaxe_blueprint",
        "body": "\"moonglassaxe_blueprint\"",
        "description": " ※prefab ID: moonglassaxe_blueprint\n ※Name: Moon Axe Blueprint\n ※prefab Version: DST-632551 "
    },
    "prefab:moonglassaxe_blueprint(ReverseSearch)": {
        "prefix": "p+Moon Axe Blueprint",
        "body": "\"moonglassaxe_blueprint\"",
        "description": " ※prefab ID: moonglassaxe_blueprint\n ※Name: Moon Axe Blueprint\n ※prefab Version: DST-632551 "
    },
    "prefab:mosquitobomb(ID Complete)": {
        "prefix": "p+mosquitobomb",
        "body": "\"mosquitobomb\"",
        "description": " ※prefab ID: mosquitobomb\n ※Name: Skeeter Bomb\n ※Recipe: \n\t+ 1 x: Mosquito Sack/mosquitosack\n\t+ 4 x: Mosquito/mosquito\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:mosquitobomb(ReverseSearch)": {
        "prefix": "p+Skeeter Bomb",
        "body": "\"mosquitobomb\"",
        "description": " ※prefab ID: mosquitobomb\n ※Name: Skeeter Bomb\n ※Recipe: \n\t+ 1 x: Mosquito Sack/mosquitosack\n\t+ 4 x: Mosquito/mosquito\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:wagstaff_npc_pstboss(ID Complete)": {
        "prefix": "p+wagstaff_npc_pstboss",
        "body": "\"wagstaff_npc_pstboss\"",
        "description": " ※prefab ID: wagstaff_npc_pstboss\n ※Name: Grainy Transmission\n ※prefab Version: DST-632551 "
    },
    "prefab:wagstaff_npc_pstboss(ReverseSearch)": {
        "prefix": "p+Grainy Transmission",
        "body": "\"wagstaff_npc_pstboss\"",
        "description": " ※prefab ID: wagstaff_npc_pstboss\n ※Name: Grainy Transmission\n ※prefab Version: DST-632551 "
    },
    "prefab:eyeofterror_mini(ID Complete)": {
        "prefix": "p+eyeofterror_mini",
        "body": "\"eyeofterror_mini\"",
        "description": " ※prefab ID: eyeofterror_mini\n ※Name: Suspicious Peeper\n ※prefab Version: DST-632551 "
    },
    "prefab:eyeofterror_mini(ReverseSearch)": {
        "prefix": "p+Suspicious Peeper",
        "body": "\"eyeofterror_mini\"",
        "description": " ※prefab ID: eyeofterror_mini\n ※Name: Suspicious Peeper\n ※prefab Version: DST-632551 "
    },
    "prefab:trident(ID Complete)": {
        "prefix": "p+trident",
        "body": "\"trident\"",
        "description": " ※prefab ID: trident\n ※Name: Strident Trident\n ※Recipe: \n\t+ 3 x: Gnarwail Horn/gnarwail_horn\n\t+ 4 x: Kelp Fronds/kelp\n\t+ 2 x: Twigs/twigs\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:trident(ReverseSearch)": {
        "prefix": "p+Strident Trident",
        "body": "\"trident\"",
        "description": " ※prefab ID: trident\n ※Name: Strident Trident\n ※Recipe: \n\t+ 3 x: Gnarwail Horn/gnarwail_horn\n\t+ 4 x: Kelp Fronds/kelp\n\t+ 2 x: Twigs/twigs\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:armorruins(ID Complete)": {
        "prefix": "p+armorruins",
        "body": "\"armorruins\"",
        "description": " ※prefab ID: armorruins\n ※Name: Thulecite Suit\n ※Recipe: \n\t+ 6 x: Thulecite/thulecite\n\t+ 4 x: Nightmare Fuel/nightmarefuel\n ※Required Tech: \n\t+ LV.4 : Ancient/ANCIENT\n ※prefab Version: DST-632551 "
    },
    "prefab:armorruins(ReverseSearch)": {
        "prefix": "p+Thulecite Suit",
        "body": "\"armorruins\"",
        "description": " ※prefab ID: armorruins\n ※Name: Thulecite Suit\n ※Recipe: \n\t+ 6 x: Thulecite/thulecite\n\t+ 4 x: Nightmare Fuel/nightmarefuel\n ※Required Tech: \n\t+ LV.4 : Ancient/ANCIENT\n ※prefab Version: DST-632551 "
    },
    "prefab:beefalohat(ID Complete)": {
        "prefix": "p+beefalohat",
        "body": "\"beefalohat\"",
        "description": " ※prefab ID: beefalohat\n ※Name: Beefalo Hat\n ※Recipe: \n\t+ 8 x: Beefalo Wool/beefalowool\n\t+ 1 x: Beefalo Horn/horn\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:beefalohat(ReverseSearch)": {
        "prefix": "p+Beefalo Hat",
        "body": "\"beefalohat\"",
        "description": " ※prefab ID: beefalohat\n ※Name: Beefalo Hat\n ※Recipe: \n\t+ 8 x: Beefalo Wool/beefalowool\n\t+ 1 x: Beefalo Horn/horn\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_029(ID Complete)": {
        "prefix": "p+quagmire_food_029",
        "body": "\"quagmire_food_029\"",
        "description": " ※prefab ID: quagmire_food_029\n ※Name: Stuffed Mushroom\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_029(ReverseSearch)": {
        "prefix": "p+Stuffed Mushroom",
        "body": "\"quagmire_food_029\"",
        "description": " ※prefab ID: quagmire_food_029\n ※Name: Stuffed Mushroom\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_moon_builder(ID Complete)": {
        "prefix": "p+chesspiece_moon_builder",
        "body": "\"chesspiece_moon_builder\"",
        "description": " ※prefab ID: chesspiece_moon_builder\n ※Name: 'Moon' Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_moon_builder(ReverseSearch)": {
        "prefix": "p+'Moon' Figure",
        "body": "\"chesspiece_moon_builder\"",
        "description": " ※prefab ID: chesspiece_moon_builder\n ※Name: 'Moon' Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:farm_plant_unknown(ID Complete)": {
        "prefix": "p+farm_plant_unknown",
        "body": "\"farm_plant_unknown\"",
        "description": " ※prefab ID: farm_plant_unknown\n ※Name: Plant\n ※prefab Version: DST-632551 "
    },
    "prefab:farm_plant_unknown(ReverseSearch)": {
        "prefix": "p+Plant",
        "body": "\"farm_plant_unknown\"",
        "description": " ※prefab ID: farm_plant_unknown\n ※Name: Plant\n ※prefab Version: DST-632551 "
    },
    "prefab:known_durian_seeds(ID Complete)": {
        "prefix": "p+known_durian_seeds",
        "body": "\"known_durian_seeds\"",
        "description": " ※prefab ID: known_durian_seeds\n ※Name: Durian Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:known_durian_seeds(ReverseSearch)": {
        "prefix": "p+Durian Seeds",
        "body": "\"known_durian_seeds\"",
        "description": " ※prefab ID: known_durian_seeds\n ※Name: Durian Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:potatosack(ID Complete)": {
        "prefix": "p+potatosack",
        "body": "\"potatosack\"",
        "description": " ※prefab ID: potatosack\n ※Name: Potato Sack\n ※Recipe: \n\t+ 2 x: Cut Grass/cutgrass\n\t+ 3 x: Rocks/rocks\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:potatosack(ReverseSearch)": {
        "prefix": "p+Potato Sack",
        "body": "\"potatosack\"",
        "description": " ※prefab ID: potatosack\n ※Name: Potato Sack\n ※Recipe: \n\t+ 2 x: Cut Grass/cutgrass\n\t+ 3 x: Rocks/rocks\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_bearger_mutated_builder(ID Complete)": {
        "prefix": "p+chesspiece_bearger_mutated_builder",
        "body": "\"chesspiece_bearger_mutated_builder\"",
        "description": " ※prefab ID: chesspiece_bearger_mutated_builder\n ※Name: Armored Bearger Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_bearger_mutated_builder(ReverseSearch)": {
        "prefix": "p+Armored Bearger Figure",
        "body": "\"chesspiece_bearger_mutated_builder\"",
        "description": " ※prefab ID: chesspiece_bearger_mutated_builder\n ※Name: Armored Bearger Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_pot(ID Complete)": {
        "prefix": "p+quagmire_pot",
        "body": "\"quagmire_pot\"",
        "description": " ※prefab ID: quagmire_pot\n ※Name: Large Cookpot\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_pot(ReverseSearch)": {
        "prefix": "p+Large Cookpot",
        "body": "\"quagmire_pot\"",
        "description": " ※prefab ID: quagmire_pot\n ※Name: Large Cookpot\n ※prefab Version: DST-632551 "
    },
    "prefab:beequeenhivegrowing(ID Complete)": {
        "prefix": "p+beequeenhivegrowing",
        "body": "\"beequeenhivegrowing\"",
        "description": " ※prefab ID: beequeenhivegrowing\n ※Name: Somewhat Gigantic Beehive\n ※prefab Version: DST-632551 "
    },
    "prefab:beequeenhivegrowing(ReverseSearch)": {
        "prefix": "p+Somewhat Gigantic Beehive",
        "body": "\"beequeenhivegrowing\"",
        "description": " ※prefab ID: beequeenhivegrowing\n ※Name: Somewhat Gigantic Beehive\n ※prefab Version: DST-632551 "
    },
    "prefab:moonglassaxe(ID Complete)": {
        "prefix": "p+moonglassaxe",
        "body": "\"moonglassaxe\"",
        "description": " ※prefab ID: moonglassaxe\n ※Name: Moon Glass Axe\n ※Recipe: \n\t+ 2 x: Twigs/twigs\n\t+ 3 x: Moon Shard/moonglass\n ※Required Tech: \n\t+ LV.3 : Celestial/CELESTIAL\n ※prefab Version: DST-632551 "
    },
    "prefab:moonglassaxe(ReverseSearch)": {
        "prefix": "p+Moon Glass Axe",
        "body": "\"moonglassaxe\"",
        "description": " ※prefab ID: moonglassaxe\n ※Name: Moon Glass Axe\n ※Recipe: \n\t+ 2 x: Twigs/twigs\n\t+ 3 x: Moon Shard/moonglass\n ※Required Tech: \n\t+ LV.3 : Celestial/CELESTIAL\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_key(ID Complete)": {
        "prefix": "p+quagmire_key",
        "body": "\"quagmire_key\"",
        "description": " ※prefab ID: quagmire_key\n ※Name: Key\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_key(ReverseSearch)": {
        "prefix": "p+Key",
        "body": "\"quagmire_key\"",
        "description": " ※prefab ID: quagmire_key\n ※Name: Key\n ※prefab Version: DST-632551 "
    },
    "prefab:wobybig(ID Complete)": {
        "prefix": "p+wobybig",
        "body": "\"wobybig\"",
        "description": " ※prefab ID: wobybig\n ※Name: Woby\n ※prefab Version: DST-632551 "
    },
    "prefab:wobybig(ReverseSearch)": {
        "prefix": "p+Woby",
        "body": "\"wobybig\"",
        "description": " ※prefab ID: wobybig\n ※Name: Woby\n ※prefab Version: DST-632551 "
    },
    "prefab:leafymeatsouffle(ID Complete)": {
        "prefix": "p+leafymeatsouffle",
        "body": "\"leafymeatsouffle\"",
        "description": " ※prefab ID: leafymeatsouffle\n ※Name: Jelly Salad\n ※prefab Version: DST-632551 "
    },
    "prefab:leafymeatsouffle(ReverseSearch)": {
        "prefix": "p+Jelly Salad",
        "body": "\"leafymeatsouffle\"",
        "description": " ※prefab ID: leafymeatsouffle\n ※Name: Jelly Salad\n ※prefab Version: DST-632551 "
    },
    "prefab:sinkhole(ID Complete)": {
        "prefix": "p+sinkhole",
        "body": "\"sinkhole\"",
        "description": " ※prefab ID: sinkhole\n ※Name: Basalt\n ※prefab Version: DST-632551 "
    },
    "prefab:sinkhole(ReverseSearch)": {
        "prefix": "p+Basalt",
        "body": "\"sinkhole\"",
        "description": " ※prefab ID: sinkhole\n ※Name: Basalt\n ※prefab Version: DST-632551 "
    },
    "prefab:armormarble(ID Complete)": {
        "prefix": "p+armormarble",
        "body": "\"armormarble\"",
        "description": " ※prefab ID: armormarble\n ※Name: Marble Suit\n ※Recipe: \n\t+ 6 x: Marble/marble\n\t+ 2 x: Rope/rope\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:armormarble(ReverseSearch)": {
        "prefix": "p+Marble Suit",
        "body": "\"armormarble\"",
        "description": " ※prefab ID: armormarble\n ※Name: Marble Suit\n ※Recipe: \n\t+ 6 x: Marble/marble\n\t+ 2 x: Rope/rope\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_tiaraflowerpetalshat(ID Complete)": {
        "prefix": "p+lavaarena_tiaraflowerpetalshat",
        "body": "\"lavaarena_tiaraflowerpetalshat\"",
        "description": " ※prefab ID: lavaarena_tiaraflowerpetalshat\n ※Name: Woven Garland\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_tiaraflowerpetalshat(ReverseSearch)": {
        "prefix": "p+Woven Garland",
        "body": "\"lavaarena_tiaraflowerpetalshat\"",
        "description": " ※prefab ID: lavaarena_tiaraflowerpetalshat\n ※Name: Woven Garland\n ※prefab Version: DST-632551 "
    },
    "prefab:cavein_boulder(ID Complete)": {
        "prefix": "p+cavein_boulder",
        "body": "\"cavein_boulder\"",
        "description": " ※prefab ID: cavein_boulder\n ※Name: Boulder\n ※prefab Version: DST-632551 "
    },
    "prefab:cavein_boulder(ReverseSearch)": {
        "prefix": "p+Boulder",
        "body": "\"cavein_boulder\"",
        "description": " ※prefab ID: cavein_boulder\n ※Name: Boulder\n ※prefab Version: DST-632551 "
    },
    "prefab:houndfire(ID Complete)": {
        "prefix": "p+houndfire",
        "body": "\"houndfire\"",
        "description": " ※prefab ID: houndfire\n ※Name: Fire\n ※prefab Version: DST-632551 "
    },
    "prefab:houndfire(ReverseSearch)": {
        "prefix": "p+Fire",
        "body": "\"houndfire\"",
        "description": " ※prefab ID: houndfire\n ※Name: Fire\n ※prefab Version: DST-632551 "
    },
    "prefab:redmooneye(ID Complete)": {
        "prefix": "p+redmooneye",
        "body": "\"redmooneye\"",
        "description": " ※prefab ID: redmooneye\n ※Name: Red Moonlens\n ※Recipe: \n\t+ 1 x: Cratered Moonrock/moonrockcrater\n\t+ 1 x: Red Gem/redgem\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:redmooneye(ReverseSearch)": {
        "prefix": "p+Red Moonlens",
        "body": "\"redmooneye\"",
        "description": " ※prefab ID: redmooneye\n ※Name: Red Moonlens\n ※Recipe: \n\t+ 1 x: Cratered Moonrock/moonrockcrater\n\t+ 1 x: Red Gem/redgem\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:halloween_ornament_2(ID Complete)": {
        "prefix": "p+halloween_ornament_2",
        "body": "\"halloween_ornament_2\"",
        "description": " ※prefab ID: halloween_ornament_2\n ※Name: Bat Decoration\n ※prefab Version: DST-632551 "
    },
    "prefab:halloween_ornament_2(ReverseSearch)": {
        "prefix": "p+Bat Decoration",
        "body": "\"halloween_ornament_2\"",
        "description": " ※prefab ID: halloween_ornament_2\n ※Name: Bat Decoration\n ※prefab Version: DST-632551 "
    },
    "prefab:boatpatch(ID Complete)": {
        "prefix": "p+boatpatch",
        "body": "\"boatpatch\"",
        "description": " ※prefab ID: boatpatch\n ※Name: Boat Patch\n ※Recipe: \n\t+ 2 x: Log/log\n\t+ 1 x: Stinger/stinger\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:boatpatch(ReverseSearch)": {
        "prefix": "p+Boat Patch",
        "body": "\"boatpatch\"",
        "description": " ※prefab ID: boatpatch\n ※Name: Boat Patch\n ※Recipe: \n\t+ 2 x: Log/log\n\t+ 1 x: Stinger/stinger\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:stafflight(ID Complete)": {
        "prefix": "p+stafflight",
        "body": "\"stafflight\"",
        "description": " ※prefab ID: stafflight\n ※Name: Dwarf Star\n ※prefab Version: DST-632551 "
    },
    "prefab:stafflight(ReverseSearch)": {
        "prefix": "p+Dwarf Star",
        "body": "\"stafflight\"",
        "description": " ※prefab ID: stafflight\n ※Name: Dwarf Star\n ※prefab Version: DST-632551 "
    },
    "prefab:lightcrab(ID Complete)": {
        "prefix": "p+lightcrab",
        "body": "\"lightcrab\"",
        "description": " ※prefab ID: lightcrab\n ※Name: Crustashine\n ※prefab Version: DST-632551 "
    },
    "prefab:lightcrab(ReverseSearch)": {
        "prefix": "p+Crustashine",
        "body": "\"lightcrab\"",
        "description": " ※prefab ID: lightcrab\n ※Name: Crustashine\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_mushrooms_cooked(ID Complete)": {
        "prefix": "p+quagmire_mushrooms_cooked",
        "body": "\"quagmire_mushrooms_cooked\"",
        "description": " ※prefab ID: quagmire_mushrooms_cooked\n ※Name: Cooked Mushroom\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_mushrooms_cooked(ReverseSearch)": {
        "prefix": "p+Cooked Mushroom",
        "body": "\"quagmire_mushrooms_cooked\"",
        "description": " ※prefab ID: quagmire_mushrooms_cooked\n ※Name: Cooked Mushroom\n ※prefab Version: DST-632551 "
    },
    "prefab:wasphive(ID Complete)": {
        "prefix": "p+wasphive",
        "body": "\"wasphive\"",
        "description": " ※prefab ID: wasphive\n ※Name: Killer Bee Hive\n ※prefab Version: DST-632551 "
    },
    "prefab:wasphive(ReverseSearch)": {
        "prefix": "p+Killer Bee Hive",
        "body": "\"wasphive\"",
        "description": " ※prefab ID: wasphive\n ※Name: Killer Bee Hive\n ※prefab Version: DST-632551 "
    },
    "prefab:farm_plant_pomegranate(ID Complete)": {
        "prefix": "p+farm_plant_pomegranate",
        "body": "\"farm_plant_pomegranate\"",
        "description": " ※prefab ID: farm_plant_pomegranate\n ※Name: Pomegranate Branch\n ※prefab Version: DST-632551 "
    },
    "prefab:farm_plant_pomegranate(ReverseSearch)": {
        "prefix": "p+Pomegranate Branch",
        "body": "\"farm_plant_pomegranate\"",
        "description": " ※prefab ID: farm_plant_pomegranate\n ※Name: Pomegranate Branch\n ※prefab Version: DST-632551 "
    },
    "prefab:skeleton_player(ID Complete)": {
        "prefix": "p+skeleton_player",
        "body": "\"skeleton_player\"",
        "description": " ※prefab ID: skeleton_player\n ※Name: Skeleton\n ※prefab Version: DST-632551 "
    },
    "prefab:skeleton_player(ReverseSearch)": {
        "prefix": "p+Skeleton",
        "body": "\"skeleton_player\"",
        "description": " ※prefab ID: skeleton_player\n ※Name: Skeleton\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_desertdirt(ID Complete)": {
        "prefix": "p+turf_desertdirt",
        "body": "\"turf_desertdirt\"",
        "description": " ※prefab ID: turf_desertdirt\n ※Name: Sandy Turf\n ※Recipe: \n\t+ 1 x: Rocks/rocks\n\t+ 1 x: Bone Shards/boneshard\n ※Required Tech: \n\t+ LV.2 : Landscaping/TURFCRAFTING\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_desertdirt(ReverseSearch)": {
        "prefix": "p+Sandy Turf",
        "body": "\"turf_desertdirt\"",
        "description": " ※prefab ID: turf_desertdirt\n ※Name: Sandy Turf\n ※Recipe: \n\t+ 1 x: Rocks/rocks\n\t+ 1 x: Bone Shards/boneshard\n ※Required Tech: \n\t+ LV.2 : Landscaping/TURFCRAFTING\n ※prefab Version: DST-632551 "
    },
    "prefab:lunarrift_portal(ID Complete)": {
        "prefix": "p+lunarrift_portal",
        "body": "\"lunarrift_portal\"",
        "description": " ※prefab ID: lunarrift_portal\n ※Name: Rift\n ※prefab Version: DST-632551 "
    },
    "prefab:lunarrift_portal(ReverseSearch)": {
        "prefix": "p+Rift",
        "body": "\"lunarrift_portal\"",
        "description": " ※prefab ID: lunarrift_portal\n ※Name: Rift\n ※prefab Version: DST-632551 "
    },
    "prefab:piggyback(ID Complete)": {
        "prefix": "p+piggyback",
        "body": "\"piggyback\"",
        "description": " ※prefab ID: piggyback\n ※Name: Piggyback\n ※Recipe: \n\t+ 4 x: Pig Skin/pigskin\n\t+ 6 x: Silk/silk\n\t+ 2 x: Rope/rope\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:piggyback(ReverseSearch)": {
        "prefix": "p+Piggyback",
        "body": "\"piggyback\"",
        "description": " ※prefab ID: piggyback\n ※Name: Piggyback\n ※Recipe: \n\t+ 4 x: Pig Skin/pigskin\n\t+ 6 x: Silk/silk\n\t+ 2 x: Rope/rope\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:mushroom_light(ID Complete)": {
        "prefix": "p+mushroom_light",
        "body": "\"mushroom_light\"",
        "description": " ※prefab ID: mushroom_light\n ※Name: Mushlight\n ※Recipe: \n\t+ 1 x: Shroom Skin/shroom_skin\n\t+ 1 x: Bucket-o-poop/fertilizer\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:mushroom_light(ReverseSearch)": {
        "prefix": "p+Mushlight",
        "body": "\"mushroom_light\"",
        "description": " ※prefab ID: mushroom_light\n ※Name: Mushlight\n ※Recipe: \n\t+ 1 x: Shroom Skin/shroom_skin\n\t+ 1 x: Bucket-o-poop/fertilizer\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_coin4(ID Complete)": {
        "prefix": "p+quagmire_coin4",
        "body": "\"quagmire_coin4\"",
        "description": " ※prefab ID: quagmire_coin4\n ※Name: Gnaw's Favor\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_coin4(ReverseSearch)": {
        "prefix": "p+Gnaw's Favor",
        "body": "\"quagmire_coin4\"",
        "description": " ※prefab ID: quagmire_coin4\n ※Name: Gnaw's Favor\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_spotspice_shrub(ID Complete)": {
        "prefix": "p+quagmire_spotspice_shrub",
        "body": "\"quagmire_spotspice_shrub\"",
        "description": " ※prefab ID: quagmire_spotspice_shrub\n ※Name: Spotty Shrub\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_spotspice_shrub(ReverseSearch)": {
        "prefix": "p+Spotty Shrub",
        "body": "\"quagmire_spotspice_shrub\"",
        "description": " ※prefab ID: quagmire_spotspice_shrub\n ※Name: Spotty Shrub\n ※prefab Version: DST-632551 "
    },
    "prefab:forgetmelots(ID Complete)": {
        "prefix": "p+forgetmelots",
        "body": "\"forgetmelots\"",
        "description": " ※prefab ID: forgetmelots\n ※Name: Forget-Me-Lots\n ※prefab Version: DST-632551 "
    },
    "prefab:forgetmelots(ReverseSearch)": {
        "prefix": "p+Forget-Me-Lots",
        "body": "\"forgetmelots\"",
        "description": " ※prefab ID: forgetmelots\n ※Name: Forget-Me-Lots\n ※prefab Version: DST-632551 "
    },
    "prefab:lavae_cocoon(ID Complete)": {
        "prefix": "p+lavae_cocoon",
        "body": "\"lavae_cocoon\"",
        "description": " ※prefab ID: lavae_cocoon\n ※Name: Chilled Lavae\n ※prefab Version: DST-632551 "
    },
    "prefab:lavae_cocoon(ReverseSearch)": {
        "prefix": "p+Chilled Lavae",
        "body": "\"lavae_cocoon\"",
        "description": " ※prefab ID: lavae_cocoon\n ※Name: Chilled Lavae\n ※prefab Version: DST-632551 "
    },
    "prefab:yotr_food1(ID Complete)": {
        "prefix": "p+yotr_food1",
        "body": "\"yotr_food1\"",
        "description": " ※prefab ID: yotr_food1\n ※Name: Bunny Roll\n ※Recipe: \n\t+ 5 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /RABBITOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:yotr_food1(ReverseSearch)": {
        "prefix": "p+Bunny Roll",
        "body": "\"yotr_food1\"",
        "description": " ※prefab ID: yotr_food1\n ※Name: Bunny Roll\n ※Recipe: \n\t+ 5 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /RABBITOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:humanmeat(ID Complete)": {
        "prefix": "p+humanmeat",
        "body": "\"humanmeat\"",
        "description": " ※prefab ID: humanmeat\n ※Name: Long Pig\n ※prefab Version: DST-632551 "
    },
    "prefab:humanmeat(ReverseSearch)": {
        "prefix": "p+Long Pig",
        "body": "\"humanmeat\"",
        "description": " ※prefab ID: humanmeat\n ※Name: Long Pig\n ※prefab Version: DST-632551 "
    },
    "prefab:purplemooneye(ID Complete)": {
        "prefix": "p+purplemooneye",
        "body": "\"purplemooneye\"",
        "description": " ※prefab ID: purplemooneye\n ※Name: Purple Moonlens\n ※Recipe: \n\t+ 1 x: Cratered Moonrock/moonrockcrater\n\t+ 1 x: Purple Gem/purplegem\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:purplemooneye(ReverseSearch)": {
        "prefix": "p+Purple Moonlens",
        "body": "\"purplemooneye\"",
        "description": " ※prefab ID: purplemooneye\n ※Name: Purple Moonlens\n ※Recipe: \n\t+ 1 x: Cratered Moonrock/moonrockcrater\n\t+ 1 x: Purple Gem/purplegem\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:sentryward(ID Complete)": {
        "prefix": "p+sentryward",
        "body": "\"sentryward\"",
        "description": " ※prefab ID: sentryward\n ※Name: Ocuvigil\n ※Recipe: \n\t+ 1 x: Purple Moonlens/purplemooneye\n\t+ 1 x: Compass/compass\n\t+ 2 x: Boards/boards\n ※Required Tech: \n\t+ LV.2 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:sentryward(ReverseSearch)": {
        "prefix": "p+Ocuvigil",
        "body": "\"sentryward\"",
        "description": " ※prefab ID: sentryward\n ※Name: Ocuvigil\n ※Recipe: \n\t+ 1 x: Purple Moonlens/purplemooneye\n\t+ 1 x: Compass/compass\n\t+ 2 x: Boards/boards\n ※Required Tech: \n\t+ LV.2 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_medium_2(ID Complete)": {
        "prefix": "p+oceanfish_medium_2",
        "body": "\"oceanfish_medium_2\"",
        "description": " ※prefab ID: oceanfish_medium_2\n ※Name: Deep Bass\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_medium_2(ReverseSearch)": {
        "prefix": "p+Deep Bass",
        "body": "\"oceanfish_medium_2\"",
        "description": " ※prefab ID: oceanfish_medium_2\n ※Name: Deep Bass\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_guardianphase3_sketch(ID Complete)": {
        "prefix": "p+chesspiece_guardianphase3_sketch",
        "body": "\"chesspiece_guardianphase3_sketch\"",
        "description": " ※prefab ID: chesspiece_guardianphase3_sketch\n ※Name: Celestial Champion Figure Sketch\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_guardianphase3_sketch(ReverseSearch)": {
        "prefix": "p+Celestial Champion Figure Sketch",
        "body": "\"chesspiece_guardianphase3_sketch\"",
        "description": " ※prefab ID: chesspiece_guardianphase3_sketch\n ※Name: Celestial Champion Figure Sketch\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_hoe(ID Complete)": {
        "prefix": "p+quagmire_hoe",
        "body": "\"quagmire_hoe\"",
        "description": " ※prefab ID: quagmire_hoe\n ※Name: Hoe\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_hoe(ReverseSearch)": {
        "prefix": "p+Hoe",
        "body": "\"quagmire_hoe\"",
        "description": " ※prefab ID: quagmire_hoe\n ※Name: Hoe\n ※prefab Version: DST-632551 "
    },
    "prefab:yotb_sewingmachine(ID Complete)": {
        "prefix": "p+yotb_sewingmachine",
        "body": "\"yotb_sewingmachine\"",
        "description": " ※prefab ID: yotb_sewingmachine\n ※Name: Sewing Machine\n ※prefab Version: DST-632551 "
    },
    "prefab:yotb_sewingmachine(ReverseSearch)": {
        "prefix": "p+Sewing Machine",
        "body": "\"yotb_sewingmachine\"",
        "description": " ※prefab ID: yotb_sewingmachine\n ※Name: Sewing Machine\n ※prefab Version: DST-632551 "
    },
    "prefab:stagehand(ID Complete)": {
        "prefix": "p+stagehand",
        "body": "\"stagehand\"",
        "description": " ※prefab ID: stagehand\n ※Name: Stagehand\n ※prefab Version: DST-632551 "
    },
    "prefab:stagehand(ReverseSearch)": {
        "prefix": "p+Stagehand",
        "body": "\"stagehand\"",
        "description": " ※prefab ID: stagehand\n ※Name: Stagehand\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_rocky(ID Complete)": {
        "prefix": "p+turf_rocky",
        "body": "\"turf_rocky\"",
        "description": " ※prefab ID: turf_rocky\n ※Name: Rocky Turf\n ※Recipe: \n\t+ 1 x: Rocks/rocks\n\t+ 1 x: Flint/flint\n ※Required Tech: \n\t+ LV.2 : Landscaping/TURFCRAFTING\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_rocky(ReverseSearch)": {
        "prefix": "p+Rocky Turf",
        "body": "\"turf_rocky\"",
        "description": " ※prefab ID: turf_rocky\n ※Name: Rocky Turf\n ※Recipe: \n\t+ 1 x: Rocks/rocks\n\t+ 1 x: Flint/flint\n ※Required Tech: \n\t+ LV.2 : Landscaping/TURFCRAFTING\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalgame_wheelspin_station(ID Complete)": {
        "prefix": "p+carnivalgame_wheelspin_station",
        "body": "\"carnivalgame_wheelspin_station\"",
        "description": " ※prefab ID: carnivalgame_wheelspin_station\n ※Name: Cuckoo Spinwheel\n ※Recipe: \n\t+ 1 x: Cuckoo Spinwheel Kit/carnivalgame_wheelspin_kit\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalgame_wheelspin_station(ReverseSearch)": {
        "prefix": "p+Cuckoo Spinwheel",
        "body": "\"carnivalgame_wheelspin_station\"",
        "description": " ※prefab ID: carnivalgame_wheelspin_station\n ※Name: Cuckoo Spinwheel\n ※Recipe: \n\t+ 1 x: Cuckoo Spinwheel Kit/carnivalgame_wheelspin_kit\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:armorwood(ID Complete)": {
        "prefix": "p+armorwood",
        "body": "\"armorwood\"",
        "description": " ※prefab ID: armorwood\n ※Name: Log Suit\n ※Recipe: \n\t+ 8 x: Log/log\n\t+ 2 x: Rope/rope\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:armorwood(ReverseSearch)": {
        "prefix": "p+Log Suit",
        "body": "\"armorwood\"",
        "description": " ※prefab ID: armorwood\n ※Name: Log Suit\n ※Recipe: \n\t+ 8 x: Log/log\n\t+ 2 x: Rope/rope\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:wx78module_maxsanity(ID Complete)": {
        "prefix": "p+wx78module_maxsanity",
        "body": "\"wx78module_maxsanity\"",
        "description": " ※prefab ID: wx78module_maxsanity\n ※Name: Super-Processing Circuit\n ※Recipe: \n\t+ 3 x: Bio Data/scandata\n\t+ 1 x: Nightmare Fuel/nightmarefuel\n\t+ 1 x: Processing Circuit/wx78module_maxsanity1\n ※Required Tech: \n\t+ LV.1 : Circuitry/ROBOTMODULECRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:wx78module_maxsanity(ReverseSearch)": {
        "prefix": "p+Super-Processing Circuit",
        "body": "\"wx78module_maxsanity\"",
        "description": " ※prefab ID: wx78module_maxsanity\n ※Name: Super-Processing Circuit\n ※Recipe: \n\t+ 3 x: Bio Data/scandata\n\t+ 1 x: Nightmare Fuel/nightmarefuel\n\t+ 1 x: Processing Circuit/wx78module_maxsanity1\n ※Required Tech: \n\t+ LV.1 : Circuitry/ROBOTMODULECRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_24(ID Complete)": {
        "prefix": "p+trinket_24",
        "body": "\"trinket_24\"",
        "description": " ※prefab ID: trinket_24\n ※Name: Lucky Cat Jar\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_24(ReverseSearch)": {
        "prefix": "p+Lucky Cat Jar",
        "body": "\"trinket_24\"",
        "description": " ※prefab ID: trinket_24\n ※Name: Lucky Cat Jar\n ※prefab Version: DST-632551 "
    },
    "prefab:yotr_decor_2(ID Complete)": {
        "prefix": "p+yotr_decor_2",
        "body": "\"yotr_decor_2\"",
        "description": " ※prefab ID: yotr_decor_2\n ※Name: Tall Rabbit Lamp\n ※prefab Version: DST-632551 "
    },
    "prefab:yotr_decor_2(ReverseSearch)": {
        "prefix": "p+Tall Rabbit Lamp",
        "body": "\"yotr_decor_2\"",
        "description": " ※prefab ID: yotr_decor_2\n ※Name: Tall Rabbit Lamp\n ※prefab Version: DST-632551 "
    },
    "prefab:winch(ID Complete)": {
        "prefix": "p+winch",
        "body": "\"winch\"",
        "description": " ※prefab ID: winch\n ※Name: Pinchin' Winch\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 1 x: Cut Stone/cutstone\n\t+ 2 x: Rope/rope\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:winch(ReverseSearch)": {
        "prefix": "p+Pinchin' Winch",
        "body": "\"winch\"",
        "description": " ※prefab ID: winch\n ※Name: Pinchin' Winch\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 1 x: Cut Stone/cutstone\n\t+ 2 x: Rope/rope\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:pond_cave(ID Complete)": {
        "prefix": "p+pond_cave",
        "body": "\"pond_cave\"",
        "description": " ※prefab ID: pond_cave\n ※Name: Pond\n ※prefab Version: DST-632551 "
    },
    "prefab:pond_cave(ReverseSearch)": {
        "prefix": "p+Pond",
        "body": "\"pond_cave\"",
        "description": " ※prefab ID: pond_cave\n ※Name: Pond\n ※prefab Version: DST-632551 "
    },
    "prefab:cookingrecipecard_scrapbook(ID Complete)": {
        "prefix": "p+cookingrecipecard_scrapbook",
        "body": "\"cookingrecipecard_scrapbook\"",
        "description": " ※prefab ID: cookingrecipecard_scrapbook\n ※Name: Recipe Card\n ※prefab Version: DST-632551 "
    },
    "prefab:cookingrecipecard_scrapbook(ReverseSearch)": {
        "prefix": "p+Recipe Card",
        "body": "\"cookingrecipecard_scrapbook\"",
        "description": " ※prefab ID: cookingrecipecard_scrapbook\n ※Name: Recipe Card\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_safe(ID Complete)": {
        "prefix": "p+quagmire_safe",
        "body": "\"quagmire_safe\"",
        "description": " ※prefab ID: quagmire_safe\n ※Name: Safe\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_safe(ReverseSearch)": {
        "prefix": "p+Safe",
        "body": "\"quagmire_safe\"",
        "description": " ※prefab ID: quagmire_safe\n ※Name: Safe\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_pawn(ID Complete)": {
        "prefix": "p+chesspiece_pawn",
        "body": "\"chesspiece_pawn\"",
        "description": " ※prefab ID: chesspiece_pawn\n ※Name: Pawn Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_pawn(ReverseSearch)": {
        "prefix": "p+Pawn Figure",
        "body": "\"chesspiece_pawn\"",
        "description": " ※prefab ID: chesspiece_pawn\n ※Name: Pawn Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:carrot_oversized(ID Complete)": {
        "prefix": "p+carrot_oversized",
        "body": "\"carrot_oversized\"",
        "description": " ※prefab ID: carrot_oversized\n ※Name: Giant Carrots\n ※prefab Version: DST-632551 "
    },
    "prefab:carrot_oversized(ReverseSearch)": {
        "prefix": "p+Giant Carrots",
        "body": "\"carrot_oversized\"",
        "description": " ※prefab ID: carrot_oversized\n ※Name: Giant Carrots\n ※prefab Version: DST-632551 "
    },
    "prefab:book_horticulture(ID Complete)": {
        "prefix": "p+book_horticulture",
        "body": "\"book_horticulture\"",
        "description": " ※prefab ID: book_horticulture\n ※Name: Horticulture, Abridged\n ※Recipe: \n\t+ 2 x: Papyrus/papyrus\n\t+ 5 x: Seeds/seeds\n\t+ 5 x: Manure/poop\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:book_horticulture(ReverseSearch)": {
        "prefix": "p+Horticulture, Abridged",
        "body": "\"book_horticulture\"",
        "description": " ※prefab ID: book_horticulture\n ※Name: Horticulture, Abridged\n ※Recipe: \n\t+ 2 x: Papyrus/papyrus\n\t+ 5 x: Seeds/seeds\n\t+ 5 x: Manure/poop\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:onion_oversized(ID Complete)": {
        "prefix": "p+onion_oversized",
        "body": "\"onion_oversized\"",
        "description": " ※prefab ID: onion_oversized\n ※Name: Giant Onion\n ※prefab Version: DST-632551 "
    },
    "prefab:onion_oversized(ReverseSearch)": {
        "prefix": "p+Giant Onion",
        "body": "\"onion_oversized\"",
        "description": " ※prefab ID: onion_oversized\n ※Name: Giant Onion\n ※prefab Version: DST-632551 "
    },
    "prefab:orangeamulet(ID Complete)": {
        "prefix": "p+orangeamulet",
        "body": "\"orangeamulet\"",
        "description": " ※prefab ID: orangeamulet\n ※Name: The Lazy Forager\n ※Recipe: \n\t+ 2 x: Thulecite/thulecite\n\t+ 3 x: Nightmare Fuel/nightmarefuel\n\t+ 1 x: Orange Gem/orangegem\n ※Required Tech: \n\t+ LV.4 : Ancient/ANCIENT\n ※prefab Version: DST-632551 "
    },
    "prefab:orangeamulet(ReverseSearch)": {
        "prefix": "p+The Lazy Forager",
        "body": "\"orangeamulet\"",
        "description": " ※prefab ID: orangeamulet\n ※Name: The Lazy Forager\n ※Recipe: \n\t+ 2 x: Thulecite/thulecite\n\t+ 3 x: Nightmare Fuel/nightmarefuel\n\t+ 1 x: Orange Gem/orangegem\n ※Required Tech: \n\t+ LV.4 : Ancient/ANCIENT\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishinglure_spinner_blue(ID Complete)": {
        "prefix": "p+oceanfishinglure_spinner_blue",
        "body": "\"oceanfishinglure_spinner_blue\"",
        "description": " ※prefab ID: oceanfishinglure_spinner_blue\n ※Name: Nightflyer Spinnerbait\n ※Recipe: \n\t+ 1 x: Flint/flint\n\t+ 1 x: Blue Cap/blue_cap\n\t+ 1 x: Beefalo Wool/beefalowool\n ※Required Tech: \n\t+ LV.1 : Fishing/FISHING\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishinglure_spinner_blue(ReverseSearch)": {
        "prefix": "p+Nightflyer Spinnerbait",
        "body": "\"oceanfishinglure_spinner_blue\"",
        "description": " ※prefab ID: oceanfishinglure_spinner_blue\n ※Name: Nightflyer Spinnerbait\n ※Recipe: \n\t+ 1 x: Flint/flint\n\t+ 1 x: Blue Cap/blue_cap\n\t+ 1 x: Beefalo Wool/beefalowool\n ※Required Tech: \n\t+ LV.1 : Fishing/FISHING\n ※prefab Version: DST-632551 "
    },
    "prefab:spider_healer_item(ID Complete)": {
        "prefix": "p+spider_healer_item",
        "body": "\"spider_healer_item\"",
        "description": " ※prefab ID: spider_healer_item\n ※Name: Healing Glop\n ※Recipe: \n\t+ 2 x: Honey/honey\n\t+ 2 x: Ashes/ash\n\t+ 2 x: Silk/silk\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:spider_healer_item(ReverseSearch)": {
        "prefix": "p+Healing Glop",
        "body": "\"spider_healer_item\"",
        "description": " ※prefab ID: spider_healer_item\n ※Name: Healing Glop\n ※Recipe: \n\t+ 2 x: Honey/honey\n\t+ 2 x: Ashes/ash\n\t+ 2 x: Silk/silk\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:boat_bumper_crabking(ID Complete)": {
        "prefix": "p+boat_bumper_crabking",
        "body": "\"boat_bumper_crabking\"",
        "description": " ※prefab ID: boat_bumper_crabking\n ※Name: Crab King Bumper\n ※prefab Version: DST-632551 "
    },
    "prefab:boat_bumper_crabking(ReverseSearch)": {
        "prefix": "p+Crab King Bumper",
        "body": "\"boat_bumper_crabking\"",
        "description": " ※prefab ID: boat_bumper_crabking\n ※Name: Crab King Bumper\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_shellbeach_blueprint(ID Complete)": {
        "prefix": "p+turf_shellbeach_blueprint",
        "body": "\"turf_shellbeach_blueprint\"",
        "description": " ※prefab ID: turf_shellbeach_blueprint\n ※Name: Shell Turf Blueprint\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_shellbeach_blueprint(ReverseSearch)": {
        "prefix": "p+Shell Turf Blueprint",
        "body": "\"turf_shellbeach_blueprint\"",
        "description": " ※prefab ID: turf_shellbeach_blueprint\n ※Name: Shell Turf Blueprint\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_spawner(ID Complete)": {
        "prefix": "p+lavaarena_spawner",
        "body": "\"lavaarena_spawner\"",
        "description": " ※prefab ID: lavaarena_spawner\n ※Name: Forge Portal\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_spawner(ReverseSearch)": {
        "prefix": "p+Forge Portal",
        "body": "\"lavaarena_spawner\"",
        "description": " ※prefab ID: lavaarena_spawner\n ※Name: Forge Portal\n ※prefab Version: DST-632551 "
    },
    "prefab:spice_garlic_food(ID Complete)": {
        "prefix": "p+spice_garlic_food",
        "body": "\"spice_garlic_food\"",
        "description": " ※prefab ID: spice_garlic_food\n ※Name: Garlic {food}\n ※prefab Version: DST-632551 "
    },
    "prefab:spice_garlic_food(ReverseSearch)": {
        "prefix": "p+Garlic {food}",
        "body": "\"spice_garlic_food\"",
        "description": " ※prefab ID: spice_garlic_food\n ※Name: Garlic {food}\n ※prefab Version: DST-632551 "
    },
    "prefab:opalstaff(ID Complete)": {
        "prefix": "p+opalstaff",
        "body": "\"opalstaff\"",
        "description": " ※prefab ID: opalstaff\n ※Name: Moon Caller's Staff\n ※Recipe: \n\t+ 4 x: Nightmare Fuel/nightmarefuel\n\t+ 2 x: Living Log/livinglog\n\t+ 1 x: Iridescent Gem/opalpreciousgem\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:opalstaff(ReverseSearch)": {
        "prefix": "p+Moon Caller's Staff",
        "body": "\"opalstaff\"",
        "description": " ※prefab ID: opalstaff\n ※Name: Moon Caller's Staff\n ※Recipe: \n\t+ 4 x: Nightmare Fuel/nightmarefuel\n\t+ 2 x: Living Log/livinglog\n\t+ 1 x: Iridescent Gem/opalpreciousgem\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:soil_amender_stale(ID Complete)": {
        "prefix": "p+soil_amender_stale",
        "body": "\"soil_amender_stale\"",
        "description": " ※prefab ID: soil_amender_stale\n ※Name: Fermenting Growth Formula\n ※prefab Version: DST-632551 "
    },
    "prefab:soil_amender_stale(ReverseSearch)": {
        "prefix": "p+Fermenting Growth Formula",
        "body": "\"soil_amender_stale\"",
        "description": " ※prefab ID: soil_amender_stale\n ※Name: Fermenting Growth Formula\n ※prefab Version: DST-632551 "
    },
    "prefab:wardrobe(ID Complete)": {
        "prefix": "p+wardrobe",
        "body": "\"wardrobe\"",
        "description": " ※prefab ID: wardrobe\n ※Name: Wardrobe\n ※Recipe: \n\t+ 4 x: Boards/boards\n\t+ 3 x: Cut Grass/cutgrass\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:wardrobe(ReverseSearch)": {
        "prefix": "p+Wardrobe",
        "body": "\"wardrobe\"",
        "description": " ※prefab ID: wardrobe\n ※Name: Wardrobe\n ※Recipe: \n\t+ 4 x: Boards/boards\n\t+ 3 x: Cut Grass/cutgrass\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:webberskull(ID Complete)": {
        "prefix": "p+webberskull",
        "body": "\"webberskull\"",
        "description": " ※prefab ID: webberskull\n ※Name: Webber's Skull\n ※prefab Version: DST-632551 "
    },
    "prefab:webberskull(ReverseSearch)": {
        "prefix": "p+Webber's Skull",
        "body": "\"webberskull\"",
        "description": " ※prefab ID: webberskull\n ※Name: Webber's Skull\n ※prefab Version: DST-632551 "
    },
    "prefab:glasscutter_blueprint(ID Complete)": {
        "prefix": "p+glasscutter_blueprint",
        "body": "\"glasscutter_blueprint\"",
        "description": " ※prefab ID: glasscutter_blueprint\n ※Name: Glass Cutter Blueprint\n ※prefab Version: DST-632551 "
    },
    "prefab:glasscutter_blueprint(ReverseSearch)": {
        "prefix": "p+Glass Cutter Blueprint",
        "body": "\"glasscutter_blueprint\"",
        "description": " ※prefab ID: glasscutter_blueprint\n ※Name: Glass Cutter Blueprint\n ※prefab Version: DST-632551 "
    },
    "prefab:twinofterror2(ID Complete)": {
        "prefix": "p+twinofterror2",
        "body": "\"twinofterror2\"",
        "description": " ※prefab ID: twinofterror2\n ※Name: Spazmatism\n ※prefab Version: DST-632551 "
    },
    "prefab:twinofterror2(ReverseSearch)": {
        "prefix": "p+Spazmatism",
        "body": "\"twinofterror2\"",
        "description": " ※prefab ID: twinofterror2\n ※Name: Spazmatism\n ※prefab Version: DST-632551 "
    },
    "prefab:marblepillar(ID Complete)": {
        "prefix": "p+marblepillar",
        "body": "\"marblepillar\"",
        "description": " ※prefab ID: marblepillar\n ※Name: Marble Pillar\n ※prefab Version: DST-632551 "
    },
    "prefab:marblepillar(ReverseSearch)": {
        "prefix": "p+Marble Pillar",
        "body": "\"marblepillar\"",
        "description": " ※prefab ID: marblepillar\n ※Name: Marble Pillar\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_trader_merm2(ID Complete)": {
        "prefix": "p+quagmire_trader_merm2",
        "body": "\"quagmire_trader_merm2\"",
        "description": " ※prefab ID: quagmire_trader_merm2\n ※Name: Pipton The Cognizant Bog Merm\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_trader_merm2(ReverseSearch)": {
        "prefix": "p+Pipton The Cognizant Bog Merm",
        "body": "\"quagmire_trader_merm2\"",
        "description": " ※prefab ID: quagmire_trader_merm2\n ※Name: Pipton The Cognizant Bog Merm\n ※prefab Version: DST-632551 "
    },
    "prefab:minotaur(ID Complete)": {
        "prefix": "p+minotaur",
        "body": "\"minotaur\"",
        "description": " ※prefab ID: minotaur\n ※Name: Ancient Guardian\n ※prefab Version: DST-632551 "
    },
    "prefab:minotaur(ReverseSearch)": {
        "prefix": "p+Ancient Guardian",
        "body": "\"minotaur\"",
        "description": " ※prefab ID: minotaur\n ※Name: Ancient Guardian\n ※prefab Version: DST-632551 "
    },
    "prefab:corn_oversized(ID Complete)": {
        "prefix": "p+corn_oversized",
        "body": "\"corn_oversized\"",
        "description": " ※prefab ID: corn_oversized\n ※Name: Giant Corn\n ※prefab Version: DST-632551 "
    },
    "prefab:corn_oversized(ReverseSearch)": {
        "prefix": "p+Giant Corn",
        "body": "\"corn_oversized\"",
        "description": " ※prefab ID: corn_oversized\n ※Name: Giant Corn\n ※prefab Version: DST-632551 "
    },
    "prefab:fishmeat(ID Complete)": {
        "prefix": "p+fishmeat",
        "body": "\"fishmeat\"",
        "description": " ※prefab ID: fishmeat\n ※Name: Raw Fish\n ※prefab Version: DST-632551 "
    },
    "prefab:fishmeat(ReverseSearch)": {
        "prefix": "p+Raw Fish",
        "body": "\"fishmeat\"",
        "description": " ※prefab ID: fishmeat\n ※Name: Raw Fish\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_18(ID Complete)": {
        "prefix": "p+trinket_18",
        "body": "\"trinket_18\"",
        "description": " ※prefab ID: trinket_18\n ※Name: Toy Trojan Horse\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_18(ReverseSearch)": {
        "prefix": "p+Toy Trojan Horse",
        "body": "\"trinket_18\"",
        "description": " ※prefab ID: trinket_18\n ※Name: Toy Trojan Horse\n ※prefab Version: DST-632551 "
    },
    "prefab:bananajuice(ID Complete)": {
        "prefix": "p+bananajuice",
        "body": "\"bananajuice\"",
        "description": " ※prefab ID: bananajuice\n ※Name: Banana Shake\n ※prefab Version: DST-632551 "
    },
    "prefab:bananajuice(ReverseSearch)": {
        "prefix": "p+Banana Shake",
        "body": "\"bananajuice\"",
        "description": " ※prefab ID: bananajuice\n ※Name: Banana Shake\n ※prefab Version: DST-632551 "
    },
    "prefab:homesign(ID Complete)": {
        "prefix": "p+homesign",
        "body": "\"homesign\"",
        "description": " ※prefab ID: homesign\n ※Name: Sign\n ※Recipe: \n\t+ 1 x: Boards/boards\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:homesign(ReverseSearch)": {
        "prefix": "p+Sign",
        "body": "\"homesign\"",
        "description": " ※prefab ID: homesign\n ※Name: Sign\n ※Recipe: \n\t+ 1 x: Boards/boards\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_altar_bollard(ID Complete)": {
        "prefix": "p+quagmire_altar_bollard",
        "body": "\"quagmire_altar_bollard\"",
        "description": " ※prefab ID: quagmire_altar_bollard\n ※Name: Post\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_altar_bollard(ReverseSearch)": {
        "prefix": "p+Post",
        "body": "\"quagmire_altar_bollard\"",
        "description": " ※prefab ID: quagmire_altar_bollard\n ※Name: Post\n ※prefab Version: DST-632551 "
    },
    "prefab:garlic_oversized(ID Complete)": {
        "prefix": "p+garlic_oversized",
        "body": "\"garlic_oversized\"",
        "description": " ※prefab ID: garlic_oversized\n ※Name: Giant Garlic\n ※prefab Version: DST-632551 "
    },
    "prefab:garlic_oversized(ReverseSearch)": {
        "prefix": "p+Giant Garlic",
        "body": "\"garlic_oversized\"",
        "description": " ※prefab ID: garlic_oversized\n ※Name: Giant Garlic\n ※prefab Version: DST-632551 "
    },
    "prefab:compostingbin(ID Complete)": {
        "prefix": "p+compostingbin",
        "body": "\"compostingbin\"",
        "description": " ※prefab ID: compostingbin\n ※Name: Composting Bin\n ※Recipe: \n\t+ 3 x: Boards/boards\n\t+ 1 x: Rot/spoiled_food\n\t+ 1 x: Cut Grass/cutgrass\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:compostingbin(ReverseSearch)": {
        "prefix": "p+Composting Bin",
        "body": "\"compostingbin\"",
        "description": " ※prefab ID: compostingbin\n ※Name: Composting Bin\n ※Recipe: \n\t+ 3 x: Boards/boards\n\t+ 1 x: Rot/spoiled_food\n\t+ 1 x: Cut Grass/cutgrass\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:critter_perdling_builder(ID Complete)": {
        "prefix": "p+critter_perdling_builder",
        "body": "\"critter_perdling_builder\"",
        "description": " ※prefab ID: critter_perdling_builder\n ※Name: Giblet\n ※Recipe: \n\t+ 1 x: Feather Hat/featherhat\n\t+ 1 x: Trail Mix/trailmix\n ※Required Tech: \n\t+ LV.1 : Critters/ORPHANAGE\n ※prefab Version: DST-632551 "
    },
    "prefab:critter_perdling_builder(ReverseSearch)": {
        "prefix": "p+Giblet",
        "body": "\"critter_perdling_builder\"",
        "description": " ※prefab ID: critter_perdling_builder\n ※Name: Giblet\n ※Recipe: \n\t+ 1 x: Feather Hat/featherhat\n\t+ 1 x: Trail Mix/trailmix\n ※Required Tech: \n\t+ LV.1 : Critters/ORPHANAGE\n ※prefab Version: DST-632551 "
    },
    "prefab:rainometer(ID Complete)": {
        "prefix": "p+rainometer",
        "body": "\"rainometer\"",
        "description": " ※prefab ID: rainometer\n ※Name: Rainometer\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 2 x: Gold Nugget/goldnugget\n\t+ 2 x: Rope/rope\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:rainometer(ReverseSearch)": {
        "prefix": "p+Rainometer",
        "body": "\"rainometer\"",
        "description": " ※prefab ID: rainometer\n ※Name: Rainometer\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 2 x: Gold Nugget/goldnugget\n\t+ 2 x: Rope/rope\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:known_potato_seeds(ID Complete)": {
        "prefix": "p+known_potato_seeds",
        "body": "\"known_potato_seeds\"",
        "description": " ※prefab ID: known_potato_seeds\n ※Name: Potato Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:known_potato_seeds(ReverseSearch)": {
        "prefix": "p+Potato Seeds",
        "body": "\"known_potato_seeds\"",
        "description": " ※prefab ID: known_potato_seeds\n ※Name: Potato Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:taffy(ID Complete)": {
        "prefix": "p+taffy",
        "body": "\"taffy\"",
        "description": " ※prefab ID: taffy\n ※Name: Taffy\n ※prefab Version: DST-632551 "
    },
    "prefab:taffy(ReverseSearch)": {
        "prefix": "p+Taffy",
        "body": "\"taffy\"",
        "description": " ※prefab ID: taffy\n ※Name: Taffy\n ※prefab Version: DST-632551 "
    },
    "prefab:rock_ice(ID Complete)": {
        "prefix": "p+rock_ice",
        "body": "\"rock_ice\"",
        "description": " ※prefab ID: rock_ice\n ※Name: Mini Glacier\n ※prefab Version: DST-632551 "
    },
    "prefab:rock_ice(ReverseSearch)": {
        "prefix": "p+Mini Glacier",
        "body": "\"rock_ice\"",
        "description": " ※prefab ID: rock_ice\n ※Name: Mini Glacier\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_ruinstiles_glow(ID Complete)": {
        "prefix": "p+turf_ruinstiles_glow",
        "body": "\"turf_ruinstiles_glow\"",
        "description": " ※prefab ID: turf_ruinstiles_glow\n ※Name: Imitation Ancient Tilework\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_ruinstiles_glow(ReverseSearch)": {
        "prefix": "p+Imitation Ancient Tilework",
        "body": "\"turf_ruinstiles_glow\"",
        "description": " ※prefab ID: turf_ruinstiles_glow\n ※Name: Imitation Ancient Tilework\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:rabbithole(ID Complete)": {
        "prefix": "p+rabbithole",
        "body": "\"rabbithole\"",
        "description": " ※prefab ID: rabbithole\n ※Name: Rabbit Hole\n ※prefab Version: DST-632551 "
    },
    "prefab:rabbithole(ReverseSearch)": {
        "prefix": "p+Rabbit Hole",
        "body": "\"rabbithole\"",
        "description": " ※prefab ID: rabbithole\n ※Name: Rabbit Hole\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_altar_ivy(ID Complete)": {
        "prefix": "p+quagmire_altar_ivy",
        "body": "\"quagmire_altar_ivy\"",
        "description": " ※prefab ID: quagmire_altar_ivy\n ※Name: Ivy\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_altar_ivy(ReverseSearch)": {
        "prefix": "p+Ivy",
        "body": "\"quagmire_altar_ivy\"",
        "description": " ※prefab ID: quagmire_altar_ivy\n ※Name: Ivy\n ※prefab Version: DST-632551 "
    },
    "prefab:wagstaff_tool_4_layman(ID Complete)": {
        "prefix": "p+wagstaff_tool_4_layman",
        "body": "\"wagstaff_tool_4_layman\"",
        "description": " ※prefab ID: wagstaff_tool_4_layman\n ※Name: Funky Tool\n ※prefab Version: DST-632551 "
    },
    "prefab:wagstaff_tool_4_layman(ReverseSearch)": {
        "prefix": "p+Funky Tool",
        "body": "\"wagstaff_tool_4_layman\"",
        "description": " ※prefab ID: wagstaff_tool_4_layman\n ※Name: Funky Tool\n ※prefab Version: DST-632551 "
    },
    "prefab:wolfgang(ID Complete)": {
        "prefix": "p+wolfgang",
        "body": "\"wolfgang\"",
        "description": " ※prefab ID: wolfgang\n ※Name: Wolfgang\n ※prefab Version: DST-632551 "
    },
    "prefab:wolfgang(ReverseSearch)": {
        "prefix": "p+Wolfgang",
        "body": "\"wolfgang\"",
        "description": " ※prefab ID: wolfgang\n ※Name: Wolfgang\n ※prefab Version: DST-632551 "
    },
    "prefab:premiumwateringcan_not_empty(ID Complete)": {
        "prefix": "p+premiumwateringcan_not_empty",
        "body": "\"premiumwateringcan_not_empty\"",
        "description": " ※prefab ID: premiumwateringcan_not_empty\n ※Name: Waterfowl Can\n ※prefab Version: DST-632551 "
    },
    "prefab:premiumwateringcan_not_empty(ReverseSearch)": {
        "prefix": "p+Waterfowl Can",
        "body": "\"premiumwateringcan_not_empty\"",
        "description": " ※prefab ID: premiumwateringcan_not_empty\n ※Name: Waterfowl Can\n ※prefab Version: DST-632551 "
    },
    "prefab:cookedmandrake(ID Complete)": {
        "prefix": "p+cookedmandrake",
        "body": "\"cookedmandrake\"",
        "description": " ※prefab ID: cookedmandrake\n ※Name: Cooked Mandrake\n ※prefab Version: DST-632551 "
    },
    "prefab:cookedmandrake(ReverseSearch)": {
        "prefix": "p+Cooked Mandrake",
        "body": "\"cookedmandrake\"",
        "description": " ※prefab ID: cookedmandrake\n ※Name: Cooked Mandrake\n ※prefab Version: DST-632551 "
    },
    "prefab:mermguard_shadow(ID Complete)": {
        "prefix": "p+mermguard_shadow",
        "body": "\"mermguard_shadow\"",
        "description": " ※prefab ID: mermguard_shadow\n ※Name: Shadow Merm Guard\n ※prefab Version: DST-632551 "
    },
    "prefab:mermguard_shadow(ReverseSearch)": {
        "prefix": "p+Shadow Merm Guard",
        "body": "\"mermguard_shadow\"",
        "description": " ※prefab ID: mermguard_shadow\n ※Name: Shadow Merm Guard\n ※prefab Version: DST-632551 "
    },
    "prefab:papyrus(ID Complete)": {
        "prefix": "p+papyrus",
        "body": "\"papyrus\"",
        "description": " ※prefab ID: papyrus\n ※Name: Papyrus\n ※Recipe: \n\t+ 4 x: Cut Reeds/cutreeds\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:papyrus(ReverseSearch)": {
        "prefix": "p+Papyrus",
        "body": "\"papyrus\"",
        "description": " ※prefab ID: papyrus\n ※Name: Papyrus\n ※Recipe: \n\t+ 4 x: Cut Reeds/cutreeds\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:glasscutter(ID Complete)": {
        "prefix": "p+glasscutter",
        "body": "\"glasscutter\"",
        "description": " ※prefab ID: glasscutter\n ※Name: Glass Cutter\n ※Recipe: \n\t+ 1 x: Boards/boards\n\t+ 6 x: Moon Shard/moonglass\n ※Required Tech: \n\t+ LV.3 : Celestial/CELESTIAL\n ※prefab Version: DST-632551 "
    },
    "prefab:glasscutter(ReverseSearch)": {
        "prefix": "p+Glass Cutter",
        "body": "\"glasscutter\"",
        "description": " ※prefab ID: glasscutter\n ※Name: Glass Cutter\n ※Recipe: \n\t+ 1 x: Boards/boards\n\t+ 6 x: Moon Shard/moonglass\n ※Required Tech: \n\t+ LV.3 : Celestial/CELESTIAL\n ※prefab Version: DST-632551 "
    },
    "prefab:critter_lunarmothling_builder(ID Complete)": {
        "prefix": "p+critter_lunarmothling_builder",
        "body": "\"critter_lunarmothling_builder\"",
        "description": " ※prefab ID: critter_lunarmothling_builder\n ※Name: Mothling\n ※Recipe: \n\t+ 1 x: Moon Moth/moonbutterfly\n\t+ 1 x: Flower Salad/flowersalad\n ※Required Tech: \n\t+ LV.1 : Critters/ORPHANAGE\n ※prefab Version: DST-632551 "
    },
    "prefab:critter_lunarmothling_builder(ReverseSearch)": {
        "prefix": "p+Mothling",
        "body": "\"critter_lunarmothling_builder\"",
        "description": " ※prefab ID: critter_lunarmothling_builder\n ※Name: Mothling\n ※Recipe: \n\t+ 1 x: Moon Moth/moonbutterfly\n\t+ 1 x: Flower Salad/flowersalad\n ※Required Tech: \n\t+ LV.1 : Critters/ORPHANAGE\n ※prefab Version: DST-632551 "
    },
    "prefab:ancient_altar_broken(ID Complete)": {
        "prefix": "p+ancient_altar_broken",
        "body": "\"ancient_altar_broken\"",
        "description": " ※prefab ID: ancient_altar_broken\n ※Name: Broken Ancient Pseudoscience Station\n ※prefab Version: DST-632551 "
    },
    "prefab:ancient_altar_broken(ReverseSearch)": {
        "prefix": "p+Broken Ancient Pseudoscience Station",
        "body": "\"ancient_altar_broken\"",
        "description": " ※prefab ID: ancient_altar_broken\n ※Name: Broken Ancient Pseudoscience Station\n ※prefab Version: DST-632551 "
    },
    "prefab:beeswax_spray(ID Complete)": {
        "prefix": "p+beeswax_spray",
        "body": "\"beeswax_spray\"",
        "description": " ※prefab ID: beeswax_spray\n ※Name: Embalming Spritz\n ※Recipe: \n\t+ 5 x: Pure Horror/horrorfuel\n\t+ 3 x: Beeswax/beeswax\n\t+ 2 x: Mosquito Sack/mosquitosack\n ※Required Tech: \n\t+ LV.2 : Shadowcraft/SHADOWFORGING\n ※prefab Version: DST-632551 "
    },
    "prefab:beeswax_spray(ReverseSearch)": {
        "prefix": "p+Embalming Spritz",
        "body": "\"beeswax_spray\"",
        "description": " ※prefab ID: beeswax_spray\n ※Name: Embalming Spritz\n ※Recipe: \n\t+ 5 x: Pure Horror/horrorfuel\n\t+ 3 x: Beeswax/beeswax\n\t+ 2 x: Mosquito Sack/mosquitosack\n ※Required Tech: \n\t+ LV.2 : Shadowcraft/SHADOWFORGING\n ※prefab Version: DST-632551 "
    },
    "prefab:oasislake(ID Complete)": {
        "prefix": "p+oasislake",
        "body": "\"oasislake\"",
        "description": " ※prefab ID: oasislake\n ※Name: Lake\n ※prefab Version: DST-632551 "
    },
    "prefab:oasislake(ReverseSearch)": {
        "prefix": "p+Lake",
        "body": "\"oasislake\"",
        "description": " ※prefab ID: oasislake\n ※Name: Lake\n ※prefab Version: DST-632551 "
    },
    "prefab:leafymeatburger(ID Complete)": {
        "prefix": "p+leafymeatburger",
        "body": "\"leafymeatburger\"",
        "description": " ※prefab ID: leafymeatburger\n ※Name: Veggie Burger\n ※prefab Version: DST-632551 "
    },
    "prefab:leafymeatburger(ReverseSearch)": {
        "prefix": "p+Veggie Burger",
        "body": "\"leafymeatburger\"",
        "description": " ※prefab ID: leafymeatburger\n ※Name: Veggie Burger\n ※prefab Version: DST-632551 "
    },
    "prefab:stalker_minion(ID Complete)": {
        "prefix": "p+stalker_minion",
        "body": "\"stalker_minion\"",
        "description": " ※prefab ID: stalker_minion\n ※Name: Woven Shadow\n ※prefab Version: DST-632551 "
    },
    "prefab:stalker_minion(ReverseSearch)": {
        "prefix": "p+Woven Shadow",
        "body": "\"stalker_minion\"",
        "description": " ※prefab ID: stalker_minion\n ※Name: Woven Shadow\n ※prefab Version: DST-632551 "
    },
    "prefab:merm_shadow(ID Complete)": {
        "prefix": "p+merm_shadow",
        "body": "\"merm_shadow\"",
        "description": " ※prefab ID: merm_shadow\n ※Name: Shadow Merm\n ※prefab Version: DST-632551 "
    },
    "prefab:merm_shadow(ReverseSearch)": {
        "prefix": "p+Shadow Merm",
        "body": "\"merm_shadow\"",
        "description": " ※prefab ID: merm_shadow\n ※Name: Shadow Merm\n ※prefab Version: DST-632551 "
    },
    "prefab:halloweenpotion_sanity_large(ID Complete)": {
        "prefix": "p+halloweenpotion_sanity_large",
        "body": "\"halloweenpotion_sanity_large\"",
        "description": " ※prefab ID: halloweenpotion_sanity_large\n ※Name: Tumblerful of Psychic Fortitude\n ※prefab Version: DST-632551 "
    },
    "prefab:halloweenpotion_sanity_large(ReverseSearch)": {
        "prefix": "p+Tumblerful of Psychic Fortitude",
        "body": "\"halloweenpotion_sanity_large\"",
        "description": " ※prefab ID: halloweenpotion_sanity_large\n ※Name: Tumblerful of Psychic Fortitude\n ※prefab Version: DST-632551 "
    },
    "prefab:marbleshrub(ID Complete)": {
        "prefix": "p+marbleshrub",
        "body": "\"marbleshrub\"",
        "description": " ※prefab ID: marbleshrub\n ※Name: Marble Shrub\n ※prefab Version: DST-632551 "
    },
    "prefab:marbleshrub(ReverseSearch)": {
        "prefix": "p+Marble Shrub",
        "body": "\"marbleshrub\"",
        "description": " ※prefab ID: marbleshrub\n ※Name: Marble Shrub\n ※prefab Version: DST-632551 "
    },
    "prefab:cookbook(ID Complete)": {
        "prefix": "p+cookbook",
        "body": "\"cookbook\"",
        "description": " ※prefab ID: cookbook\n ※Name: Cookbook\n ※Recipe: \n\t+ 1 x: Papyrus/papyrus\n\t+ 1 x: Carrot/carrot\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:cookbook(ReverseSearch)": {
        "prefix": "p+Cookbook",
        "body": "\"cookbook\"",
        "description": " ※prefab ID: cookbook\n ※Name: Cookbook\n ※Recipe: \n\t+ 1 x: Papyrus/papyrus\n\t+ 1 x: Carrot/carrot\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:crawlinghorror(ID Complete)": {
        "prefix": "p+crawlinghorror",
        "body": "\"crawlinghorror\"",
        "description": " ※prefab ID: crawlinghorror\n ※Name: Crawling Horror\n ※prefab Version: DST-632551 "
    },
    "prefab:crawlinghorror(ReverseSearch)": {
        "prefix": "p+Crawling Horror",
        "body": "\"crawlinghorror\"",
        "description": " ※prefab ID: crawlinghorror\n ※Name: Crawling Horror\n ※prefab Version: DST-632551 "
    },
    "prefab:firecrackers(ID Complete)": {
        "prefix": "p+firecrackers",
        "body": "\"firecrackers\"",
        "description": " ※prefab ID: firecrackers\n ※Name: Red Firecrackers\n ※Recipe: \n\t+ 1 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.1 : Offerings/PERDOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:firecrackers(ReverseSearch)": {
        "prefix": "p+Red Firecrackers",
        "body": "\"firecrackers\"",
        "description": " ※prefab ID: firecrackers\n ※Name: Red Firecrackers\n ※Recipe: \n\t+ 1 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.1 : Offerings/PERDOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:carratshrine(ID Complete)": {
        "prefix": "p+carratshrine",
        "body": "\"carratshrine\"",
        "description": " ※prefab ID: carratshrine\n ※Name: Carrat Shrine\n ※prefab Version: DST-632551 "
    },
    "prefab:carratshrine(ReverseSearch)": {
        "prefix": "p+Carrat Shrine",
        "body": "\"carratshrine\"",
        "description": " ※prefab ID: carratshrine\n ※Name: Carrat Shrine\n ※prefab Version: DST-632551 "
    },
    "prefab:pig_token(ID Complete)": {
        "prefix": "p+pig_token",
        "body": "\"pig_token\"",
        "description": " ※prefab ID: pig_token\n ※Name: Golden Belt\n ※prefab Version: DST-632551 "
    },
    "prefab:pig_token(ReverseSearch)": {
        "prefix": "p+Golden Belt",
        "body": "\"pig_token\"",
        "description": " ※prefab ID: pig_token\n ※Name: Golden Belt\n ※prefab Version: DST-632551 "
    },
    "prefab:woodcarvedhat(ID Complete)": {
        "prefix": "p+woodcarvedhat",
        "body": "\"woodcarvedhat\"",
        "description": " ※prefab ID: woodcarvedhat\n ※Name: Hardwood Hat\n ※Recipe: \n\t+ 0 x: Lucy the Axe/lucy\n\t+ 6 x: Log/log\n\t+ 1 x: Pine Cone/pinecone\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:woodcarvedhat(ReverseSearch)": {
        "prefix": "p+Hardwood Hat",
        "body": "\"woodcarvedhat\"",
        "description": " ※prefab ID: woodcarvedhat\n ※Name: Hardwood Hat\n ※Recipe: \n\t+ 0 x: Lucy the Axe/lucy\n\t+ 6 x: Log/log\n\t+ 1 x: Pine Cone/pinecone\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:wall_stone_item(ID Complete)": {
        "prefix": "p+wall_stone_item",
        "body": "\"wall_stone_item\"",
        "description": " ※prefab ID: wall_stone_item\n ※Name: Stone Wall\n ※Recipe: \n\t+ 2 x: Cut Stone/cutstone\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:wall_stone_item(ReverseSearch)": {
        "prefix": "p+Stone Wall",
        "body": "\"wall_stone_item\"",
        "description": " ※prefab ID: wall_stone_item\n ※Name: Stone Wall\n ※Recipe: \n\t+ 2 x: Cut Stone/cutstone\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:wx78module_nightvision(ID Complete)": {
        "prefix": "p+wx78module_nightvision",
        "body": "\"wx78module_nightvision\"",
        "description": " ※prefab ID: wx78module_nightvision\n ※Name: Optoelectronic Circuit\n ※Recipe: \n\t+ 4 x: Bio Data/scandata\n\t+ 1 x: Moleworm/mole\n\t+ 1 x: Fireflies/fireflies\n ※Required Tech: \n\t+ LV.1 : Circuitry/ROBOTMODULECRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:wx78module_nightvision(ReverseSearch)": {
        "prefix": "p+Optoelectronic Circuit",
        "body": "\"wx78module_nightvision\"",
        "description": " ※prefab ID: wx78module_nightvision\n ※Name: Optoelectronic Circuit\n ※Recipe: \n\t+ 4 x: Bio Data/scandata\n\t+ 1 x: Moleworm/mole\n\t+ 1 x: Fireflies/fireflies\n ※Required Tech: \n\t+ LV.1 : Circuitry/ROBOTMODULECRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:crabking(ID Complete)": {
        "prefix": "p+crabking",
        "body": "\"crabking\"",
        "description": " ※prefab ID: crabking\n ※Name: Crab King\n ※prefab Version: DST-632551 "
    },
    "prefab:crabking(ReverseSearch)": {
        "prefix": "p+Crab King",
        "body": "\"crabking\"",
        "description": " ※prefab ID: crabking\n ※Name: Crab King\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_claywarg_sketch(ID Complete)": {
        "prefix": "p+chesspiece_claywarg_sketch",
        "body": "\"chesspiece_claywarg_sketch\"",
        "description": " ※prefab ID: chesspiece_claywarg_sketch\n ※Name: Clay Varg Figure Sketch\n ※Recipe: \n\t+ 16 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /WARGOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_claywarg_sketch(ReverseSearch)": {
        "prefix": "p+Clay Varg Figure Sketch",
        "body": "\"chesspiece_claywarg_sketch\"",
        "description": " ※prefab ID: chesspiece_claywarg_sketch\n ※Name: Clay Varg Figure Sketch\n ※Recipe: \n\t+ 16 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /WARGOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:weed_forgetmelots(ID Complete)": {
        "prefix": "p+weed_forgetmelots",
        "body": "\"weed_forgetmelots\"",
        "description": " ※prefab ID: weed_forgetmelots\n ※Name: Forget-Me-Lots\n ※prefab Version: DST-632551 "
    },
    "prefab:weed_forgetmelots(ReverseSearch)": {
        "prefix": "p+Forget-Me-Lots",
        "body": "\"weed_forgetmelots\"",
        "description": " ※prefab ID: weed_forgetmelots\n ※Name: Forget-Me-Lots\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_seeds_4(ID Complete)": {
        "prefix": "p+quagmire_seeds_4",
        "body": "\"quagmire_seeds_4\"",
        "description": " ※prefab ID: quagmire_seeds_4\n ※Name: Pointy Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_seeds_4(ReverseSearch)": {
        "prefix": "p+Pointy Seeds",
        "body": "\"quagmire_seeds_4\"",
        "description": " ※prefab ID: quagmire_seeds_4\n ※Name: Pointy Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_069(ID Complete)": {
        "prefix": "p+quagmire_food_069",
        "body": "\"quagmire_food_069\"",
        "description": " ※prefab ID: quagmire_food_069\n ※Name: Cheesecake\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_069(ReverseSearch)": {
        "prefix": "p+Cheesecake",
        "body": "\"quagmire_food_069\"",
        "description": " ※prefab ID: quagmire_food_069\n ※Name: Cheesecake\n ※prefab Version: DST-632551 "
    },
    "prefab:lightninggoat(ID Complete)": {
        "prefix": "p+lightninggoat",
        "body": "\"lightninggoat\"",
        "description": " ※prefab ID: lightninggoat\n ※Name: Volt Goat\n ※prefab Version: DST-632551 "
    },
    "prefab:lightninggoat(ReverseSearch)": {
        "prefix": "p+Volt Goat",
        "body": "\"lightninggoat\"",
        "description": " ※prefab ID: lightninggoat\n ※Name: Volt Goat\n ※prefab Version: DST-632551 "
    },
    "prefab:mole_aboveground(ID Complete)": {
        "prefix": "p+mole_aboveground",
        "body": "\"mole_aboveground\"",
        "description": " ※prefab ID: mole_aboveground\n ※Name: Moleworm\n ※prefab Version: DST-632551 "
    },
    "prefab:mole_aboveground(ReverseSearch)": {
        "prefix": "p+Moleworm",
        "body": "\"mole_aboveground\"",
        "description": " ※prefab ID: mole_aboveground\n ※Name: Moleworm\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishinglure_spinner_green(ID Complete)": {
        "prefix": "p+oceanfishinglure_spinner_green",
        "body": "\"oceanfishinglure_spinner_green\"",
        "description": " ※prefab ID: oceanfishinglure_spinner_green\n ※Name: Dusky Spinnerbait\n ※Recipe: \n\t+ 1 x: Flint/flint\n\t+ 1 x: Green Cap/green_cap\n\t+ 1 x: Beefalo Wool/beefalowool\n ※Required Tech: \n\t+ LV.1 : Fishing/FISHING\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishinglure_spinner_green(ReverseSearch)": {
        "prefix": "p+Dusky Spinnerbait",
        "body": "\"oceanfishinglure_spinner_green\"",
        "description": " ※prefab ID: oceanfishinglure_spinner_green\n ※Name: Dusky Spinnerbait\n ※Recipe: \n\t+ 1 x: Flint/flint\n\t+ 1 x: Green Cap/green_cap\n\t+ 1 x: Beefalo Wool/beefalowool\n ※Required Tech: \n\t+ LV.1 : Fishing/FISHING\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_small_3_inv(ID Complete)": {
        "prefix": "p+oceanfish_small_3_inv",
        "body": "\"oceanfish_small_3_inv\"",
        "description": " ※prefab ID: oceanfish_small_3_inv\n ※Name: Bitty Baitfish\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_small_3_inv(ReverseSearch)": {
        "prefix": "p+Bitty Baitfish",
        "body": "\"oceanfish_small_3_inv\"",
        "description": " ※prefab ID: oceanfish_small_3_inv\n ※Name: Bitty Baitfish\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_seeds_6(ID Complete)": {
        "prefix": "p+quagmire_seeds_6",
        "body": "\"quagmire_seeds_6\"",
        "description": " ※prefab ID: quagmire_seeds_6\n ※Name: Oblong Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_seeds_6(ReverseSearch)": {
        "prefix": "p+Oblong Seeds",
        "body": "\"quagmire_seeds_6\"",
        "description": " ※prefab ID: quagmire_seeds_6\n ※Name: Oblong Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:sculpture_knightbody(ID Complete)": {
        "prefix": "p+sculpture_knightbody",
        "body": "\"sculpture_knightbody\"",
        "description": " ※prefab ID: sculpture_knightbody\n ※Name: Marble Sculpture\n ※prefab Version: DST-632551 "
    },
    "prefab:sculpture_knightbody(ReverseSearch)": {
        "prefix": "p+Marble Sculpture",
        "body": "\"sculpture_knightbody\"",
        "description": " ※prefab ID: sculpture_knightbody\n ※Name: Marble Sculpture\n ※prefab Version: DST-632551 "
    },
    "prefab:prime_mate(ID Complete)": {
        "prefix": "p+prime_mate",
        "body": "\"prime_mate\"",
        "description": " ※prefab ID: prime_mate\n ※Name: Prime Mate\n ※prefab Version: DST-632551 "
    },
    "prefab:prime_mate(ReverseSearch)": {
        "prefix": "p+Prime Mate",
        "body": "\"prime_mate\"",
        "description": " ※prefab ID: prime_mate\n ※Name: Prime Mate\n ※prefab Version: DST-632551 "
    },
    "prefab:magic_blueprint(ID Complete)": {
        "prefix": "p+magic_blueprint",
        "body": "\"magic_blueprint\"",
        "description": " ※prefab ID: magic_blueprint\n ※Name: Blank Blueprint\n ※prefab Version: DST-632551 "
    },
    "prefab:magic_blueprint(ReverseSearch)": {
        "prefix": "p+Blank Blueprint",
        "body": "\"magic_blueprint\"",
        "description": " ※prefab ID: magic_blueprint\n ※Name: Blank Blueprint\n ※prefab Version: DST-632551 "
    },
    "prefab:twiggy_nut(ID Complete)": {
        "prefix": "p+twiggy_nut",
        "body": "\"twiggy_nut\"",
        "description": " ※prefab ID: twiggy_nut\n ※Name: Twiggy Tree Cone\n ※prefab Version: DST-632551 "
    },
    "prefab:twiggy_nut(ReverseSearch)": {
        "prefix": "p+Twiggy Tree Cone",
        "body": "\"twiggy_nut\"",
        "description": " ※prefab ID: twiggy_nut\n ※Name: Twiggy Tree Cone\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_23(ID Complete)": {
        "prefix": "p+trinket_23",
        "body": "\"trinket_23\"",
        "description": " ※prefab ID: trinket_23\n ※Name: Shoe Horn\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_23(ReverseSearch)": {
        "prefix": "p+Shoe Horn",
        "body": "\"trinket_23\"",
        "description": " ※prefab ID: trinket_23\n ※Name: Shoe Horn\n ※prefab Version: DST-632551 "
    },
    "prefab:wobster_moonglass(ID Complete)": {
        "prefix": "p+wobster_moonglass",
        "body": "\"wobster_moonglass\"",
        "description": " ※prefab ID: wobster_moonglass\n ※Name: Lunar Wobster\n ※prefab Version: DST-632551 "
    },
    "prefab:wobster_moonglass(ReverseSearch)": {
        "prefix": "p+Lunar Wobster",
        "body": "\"wobster_moonglass\"",
        "description": " ※prefab ID: wobster_moonglass\n ※Name: Lunar Wobster\n ※prefab Version: DST-632551 "
    },
    "prefab:blowdart_fire(ID Complete)": {
        "prefix": "p+blowdart_fire",
        "body": "\"blowdart_fire\"",
        "description": " ※prefab ID: blowdart_fire\n ※Name: Fire Dart\n ※Recipe: \n\t+ 2 x: Cut Reeds/cutreeds\n\t+ 1 x: Charcoal/charcoal\n\t+ 1 x: Crimson Feather/feather_robin\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:blowdart_fire(ReverseSearch)": {
        "prefix": "p+Fire Dart",
        "body": "\"blowdart_fire\"",
        "description": " ※prefab ID: blowdart_fire\n ※Name: Fire Dart\n ※Recipe: \n\t+ 2 x: Cut Reeds/cutreeds\n\t+ 1 x: Charcoal/charcoal\n\t+ 1 x: Crimson Feather/feather_robin\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:rabbitking_lucky(ID Complete)": {
        "prefix": "p+rabbitking_lucky",
        "body": "\"rabbitking_lucky\"",
        "description": " ※prefab ID: rabbitking_lucky\n ※Name: Fortuitous Rabbit\n ※prefab Version: DST-632551 "
    },
    "prefab:rabbitking_lucky(ReverseSearch)": {
        "prefix": "p+Fortuitous Rabbit",
        "body": "\"rabbitking_lucky\"",
        "description": " ※prefab ID: rabbitking_lucky\n ※Name: Fortuitous Rabbit\n ※prefab Version: DST-632551 "
    },
    "prefab:worm(ID Complete)": {
        "prefix": "p+worm",
        "body": "\"worm\"",
        "description": " ※prefab ID: worm\n ※Name: Depths Worm\n ※prefab Version: DST-632551 "
    },
    "prefab:worm(ReverseSearch)": {
        "prefix": "p+Depths Worm",
        "body": "\"worm\"",
        "description": " ※prefab ID: worm\n ※Name: Depths Worm\n ※prefab Version: DST-632551 "
    },
    "prefab:chester_eyebone(ID Complete)": {
        "prefix": "p+chester_eyebone",
        "body": "\"chester_eyebone\"",
        "description": " ※prefab ID: chester_eyebone\n ※Name: Eye Bone\n ※prefab Version: DST-632551 "
    },
    "prefab:chester_eyebone(ReverseSearch)": {
        "prefix": "p+Eye Bone",
        "body": "\"chester_eyebone\"",
        "description": " ※prefab ID: chester_eyebone\n ※Name: Eye Bone\n ※prefab Version: DST-632551 "
    },
    "prefab:chum(ID Complete)": {
        "prefix": "p+chum",
        "body": "\"chum\"",
        "description": " ※prefab ID: chum\n ※Name: Fish Food\n ※Recipe: \n\t+ 2 x: Rot/spoiled_food\n\t+ 3 x: Barnacles/barnacle\n\t+ 1 x: Silk/silk\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:chum(ReverseSearch)": {
        "prefix": "p+Fish Food",
        "body": "\"chum\"",
        "description": " ※prefab ID: chum\n ※Name: Fish Food\n ※Recipe: \n\t+ 2 x: Rot/spoiled_food\n\t+ 3 x: Barnacles/barnacle\n\t+ 1 x: Silk/silk\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_38(ID Complete)": {
        "prefix": "p+trinket_38",
        "body": "\"trinket_38\"",
        "description": " ※prefab ID: trinket_38\n ※Name: Binoculars\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_38(ReverseSearch)": {
        "prefix": "p+Binoculars",
        "body": "\"trinket_38\"",
        "description": " ※prefab ID: trinket_38\n ※Name: Binoculars\n ※prefab Version: DST-632551 "
    },
    "prefab:leif(ID Complete)": {
        "prefix": "p+leif",
        "body": "\"leif\"",
        "description": " ※prefab ID: leif\n ※Name: Treeguard\n ※prefab Version: DST-632551 "
    },
    "prefab:leif(ReverseSearch)": {
        "prefix": "p+Treeguard",
        "body": "\"leif\"",
        "description": " ※prefab ID: leif\n ※Name: Treeguard\n ※prefab Version: DST-632551 "
    },
    "prefab:decrease_sanity(ID Complete)": {
        "prefix": "p+decrease_sanity",
        "body": "\"decrease_sanity\"",
        "description": " ※prefab ID: decrease_sanity\n ※Name: Sanity\n ※prefab Version: DST-632551 "
    },
    "prefab:decrease_sanity(ReverseSearch)": {
        "prefix": "p+Sanity",
        "body": "\"decrease_sanity\"",
        "description": " ※prefab ID: decrease_sanity\n ※Name: Sanity\n ※prefab Version: DST-632551 "
    },
    "prefab:fruitmedley(ID Complete)": {
        "prefix": "p+fruitmedley",
        "body": "\"fruitmedley\"",
        "description": " ※prefab ID: fruitmedley\n ※Name: Fruit Medley\n ※prefab Version: DST-632551 "
    },
    "prefab:fruitmedley(ReverseSearch)": {
        "prefix": "p+Fruit Medley",
        "body": "\"fruitmedley\"",
        "description": " ※prefab ID: fruitmedley\n ※Name: Fruit Medley\n ※prefab Version: DST-632551 "
    },
    "prefab:winter_food8(ID Complete)": {
        "prefix": "p+winter_food8",
        "body": "\"winter_food8\"",
        "description": " ※prefab ID: winter_food8\n ※Name: Hot Cocoa\n ※prefab Version: DST-632551 "
    },
    "prefab:winter_food8(ReverseSearch)": {
        "prefix": "p+Hot Cocoa",
        "body": "\"winter_food8\"",
        "description": " ※prefab ID: winter_food8\n ※Name: Hot Cocoa\n ※prefab Version: DST-632551 "
    },
    "prefab:minerhat(ID Complete)": {
        "prefix": "p+minerhat",
        "body": "\"minerhat\"",
        "description": " ※prefab ID: minerhat\n ※Name: Miner Hat\n ※Recipe: \n\t+ 1 x: Straw Hat/strawhat\n\t+ 1 x: Gold Nugget/goldnugget\n\t+ 1 x: Fireflies/fireflies\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:minerhat(ReverseSearch)": {
        "prefix": "p+Miner Hat",
        "body": "\"minerhat\"",
        "description": " ※prefab ID: minerhat\n ※Name: Miner Hat\n ※Recipe: \n\t+ 1 x: Straw Hat/strawhat\n\t+ 1 x: Gold Nugget/goldnugget\n\t+ 1 x: Fireflies/fireflies\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:wormhole_limited(ID Complete)": {
        "prefix": "p+wormhole_limited",
        "body": "\"wormhole_limited\"",
        "description": " ※prefab ID: wormhole_limited\n ※Name: Sick Worm Hole\n ※prefab Version: DST-632551 "
    },
    "prefab:wormhole_limited(ReverseSearch)": {
        "prefix": "p+Sick Worm Hole",
        "body": "\"wormhole_limited\"",
        "description": " ※prefab ID: wormhole_limited\n ※Name: Sick Worm Hole\n ※prefab Version: DST-632551 "
    },
    "prefab:thulecite_pieces(ID Complete)": {
        "prefix": "p+thulecite_pieces",
        "body": "\"thulecite_pieces\"",
        "description": " ※prefab ID: thulecite_pieces\n ※Name: Thulecite Fragments\n ※prefab Version: DST-632551 "
    },
    "prefab:thulecite_pieces(ReverseSearch)": {
        "prefix": "p+Thulecite Fragments",
        "body": "\"thulecite_pieces\"",
        "description": " ※prefab ID: thulecite_pieces\n ※Name: Thulecite Fragments\n ※prefab Version: DST-632551 "
    },
    "prefab:axe(ID Complete)": {
        "prefix": "p+axe",
        "body": "\"axe\"",
        "description": " ※prefab ID: axe\n ※Name: Axe\n ※Recipe: \n\t+ 1 x: Twigs/twigs\n\t+ 1 x: Flint/flint\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:axe(ReverseSearch)": {
        "prefix": "p+Axe",
        "body": "\"axe\"",
        "description": " ※prefab ID: axe\n ※Name: Axe\n ※Recipe: \n\t+ 1 x: Twigs/twigs\n\t+ 1 x: Flint/flint\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:waxwell_shadowstriker(ID Complete)": {
        "prefix": "p+waxwell_shadowstriker",
        "body": "\"waxwell_shadowstriker\"",
        "description": " ※prefab ID: waxwell_shadowstriker\n ※Name: Shadow\n ※prefab Version: DST-632551 "
    },
    "prefab:waxwell_shadowstriker(ReverseSearch)": {
        "prefix": "p+Shadow",
        "body": "\"waxwell_shadowstriker\"",
        "description": " ※prefab ID: waxwell_shadowstriker\n ※Name: Shadow\n ※prefab Version: DST-632551 "
    },
    "prefab:rock_flintless_low(ID Complete)": {
        "prefix": "p+rock_flintless_low",
        "body": "\"rock_flintless_low\"",
        "description": " ※prefab ID: rock_flintless_low\n ※Name: Boulder\n ※prefab Version: DST-632551 "
    },
    "prefab:rock_flintless_low(ReverseSearch)": {
        "prefix": "p+Boulder",
        "body": "\"rock_flintless_low\"",
        "description": " ※prefab ID: rock_flintless_low\n ※Name: Boulder\n ※prefab Version: DST-632551 "
    },
    "prefab:moose1(ID Complete)": {
        "prefix": "p+moose1",
        "body": "\"moose1\"",
        "description": " ※prefab ID: moose1\n ※Name: Moose\n ※prefab Version: DST-632551 "
    },
    "prefab:moose1(ReverseSearch)": {
        "prefix": "p+Moose",
        "body": "\"moose1\"",
        "description": " ※prefab ID: moose1\n ※Name: Moose\n ※prefab Version: DST-632551 "
    },
    "prefab:fence_item(ID Complete)": {
        "prefix": "p+fence_item",
        "body": "\"fence_item\"",
        "description": " ※prefab ID: fence_item\n ※Name: Wood Fence\n ※Recipe: \n\t+ 3 x: Twigs/twigs\n\t+ 1 x: Rope/rope\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:fence_item(ReverseSearch)": {
        "prefix": "p+Wood Fence",
        "body": "\"fence_item\"",
        "description": " ※prefab ID: fence_item\n ※Name: Wood Fence\n ※Recipe: \n\t+ 3 x: Twigs/twigs\n\t+ 1 x: Rope/rope\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:yotc_carrat_gym_speed(ID Complete)": {
        "prefix": "p+yotc_carrat_gym_speed",
        "body": "\"yotc_carrat_gym_speed\"",
        "description": " ※prefab ID: yotc_carrat_gym_speed\n ※Name: Speed Gym\n ※Recipe: \n\t+ 4 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:yotc_carrat_gym_speed(ReverseSearch)": {
        "prefix": "p+Speed Gym",
        "body": "\"yotc_carrat_gym_speed\"",
        "description": " ※prefab ID: yotc_carrat_gym_speed\n ※Name: Speed Gym\n ※Recipe: \n\t+ 4 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:slingshotammo_gold(ID Complete)": {
        "prefix": "p+slingshotammo_gold",
        "body": "\"slingshotammo_gold\"",
        "description": " ※prefab ID: slingshotammo_gold\n ※Name: Gold Rounds\n ※Recipe: \n\t+ 1 x: Gold Nugget/goldnugget\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:slingshotammo_gold(ReverseSearch)": {
        "prefix": "p+Gold Rounds",
        "body": "\"slingshotammo_gold\"",
        "description": " ※prefab ID: slingshotammo_gold\n ※Name: Gold Rounds\n ※Recipe: \n\t+ 1 x: Gold Nugget/goldnugget\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:moon_altar_wip(ID Complete)": {
        "prefix": "p+moon_altar_wip",
        "body": "\"moon_altar_wip\"",
        "description": " ※prefab ID: moon_altar_wip\n ※Name: Partially Assembled Altar\n ※prefab Version: DST-632551 "
    },
    "prefab:moon_altar_wip(ReverseSearch)": {
        "prefix": "p+Partially Assembled Altar",
        "body": "\"moon_altar_wip\"",
        "description": " ※prefab ID: moon_altar_wip\n ※Name: Partially Assembled Altar\n ※prefab Version: DST-632551 "
    },
    "prefab:bathbomb(ID Complete)": {
        "prefix": "p+bathbomb",
        "body": "\"bathbomb\"",
        "description": " ※prefab ID: bathbomb\n ※Name: Bath Bomb\n ※Recipe: \n\t+ 6 x: Lune Tree Blossom/moon_tree_blossom\n\t+ 1 x: Nitre/nitre\n ※Required Tech: \n\t+ LV.3 : Celestial/CELESTIAL\n ※prefab Version: DST-632551 "
    },
    "prefab:bathbomb(ReverseSearch)": {
        "prefix": "p+Bath Bomb",
        "body": "\"bathbomb\"",
        "description": " ※prefab ID: bathbomb\n ※Name: Bath Bomb\n ※Recipe: \n\t+ 6 x: Lune Tree Blossom/moon_tree_blossom\n\t+ 1 x: Nitre/nitre\n ※Required Tech: \n\t+ LV.3 : Celestial/CELESTIAL\n ※prefab Version: DST-632551 "
    },
    "prefab:fence_gate(ID Complete)": {
        "prefix": "p+fence_gate",
        "body": "\"fence_gate\"",
        "description": " ※prefab ID: fence_gate\n ※Name: Wood Gate\n ※prefab Version: DST-632551 "
    },
    "prefab:fence_gate(ReverseSearch)": {
        "prefix": "p+Wood Gate",
        "body": "\"fence_gate\"",
        "description": " ※prefab ID: fence_gate\n ※Name: Wood Gate\n ※prefab Version: DST-632551 "
    },
    "prefab:dirtpile(ID Complete)": {
        "prefix": "p+dirtpile",
        "body": "\"dirtpile\"",
        "description": " ※prefab ID: dirtpile\n ※Name: Suspicious Dirt Pile\n ※prefab Version: DST-632551 "
    },
    "prefab:dirtpile(ReverseSearch)": {
        "prefix": "p+Suspicious Dirt Pile",
        "body": "\"dirtpile\"",
        "description": " ※prefab ID: dirtpile\n ※Name: Suspicious Dirt Pile\n ※prefab Version: DST-632551 "
    },
    "prefab:soil_amender_spoiled(ID Complete)": {
        "prefix": "p+soil_amender_spoiled",
        "body": "\"soil_amender_spoiled\"",
        "description": " ※prefab ID: soil_amender_spoiled\n ※Name: Fermented Growth Formula\n ※prefab Version: DST-632551 "
    },
    "prefab:soil_amender_spoiled(ReverseSearch)": {
        "prefix": "p+Fermented Growth Formula",
        "body": "\"soil_amender_spoiled\"",
        "description": " ※prefab ID: soil_amender_spoiled\n ※Name: Fermented Growth Formula\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_goatkid(ID Complete)": {
        "prefix": "p+quagmire_goatkid",
        "body": "\"quagmire_goatkid\"",
        "description": " ※prefab ID: quagmire_goatkid\n ※Name: Billy\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_goatkid(ReverseSearch)": {
        "prefix": "p+Billy",
        "body": "\"quagmire_goatkid\"",
        "description": " ※prefab ID: quagmire_goatkid\n ※Name: Billy\n ※prefab Version: DST-632551 "
    },
    "prefab:boat_magnet_kit(ID Complete)": {
        "prefix": "p+boat_magnet_kit",
        "body": "\"boat_magnet_kit\"",
        "description": " ※prefab ID: boat_magnet_kit\n ※Name: Nautopilot Kit\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 2 x: Cut Stone/cutstone\n\t+ 1 x: Electrical Doodad/transistor\n\t+ 1 x: Frazzled Wires/trinket_6\n ※Required Tech: \n\t+ LV.1 : Seafaring/SEAFARING\n ※prefab Version: DST-632551 "
    },
    "prefab:boat_magnet_kit(ReverseSearch)": {
        "prefix": "p+Nautopilot Kit",
        "body": "\"boat_magnet_kit\"",
        "description": " ※prefab ID: boat_magnet_kit\n ※Name: Nautopilot Kit\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 2 x: Cut Stone/cutstone\n\t+ 1 x: Electrical Doodad/transistor\n\t+ 1 x: Frazzled Wires/trinket_6\n ※Required Tech: \n\t+ LV.1 : Seafaring/SEAFARING\n ※prefab Version: DST-632551 "
    },
    "prefab:moosenest1(ID Complete)": {
        "prefix": "p+moosenest1",
        "body": "\"moosenest1\"",
        "description": " ※prefab ID: moosenest1\n ※Name: Moose Nest\n ※prefab Version: DST-632551 "
    },
    "prefab:moosenest1(ReverseSearch)": {
        "prefix": "p+Moose Nest",
        "body": "\"moosenest1\"",
        "description": " ※prefab ID: moosenest1\n ※Name: Moose Nest\n ※prefab Version: DST-632551 "
    },
    "prefab:trunk_summer(ID Complete)": {
        "prefix": "p+trunk_summer",
        "body": "\"trunk_summer\"",
        "description": " ※prefab ID: trunk_summer\n ※Name: Koalefant Trunk\n ※prefab Version: DST-632551 "
    },
    "prefab:trunk_summer(ReverseSearch)": {
        "prefix": "p+Koalefant Trunk",
        "body": "\"trunk_summer\"",
        "description": " ※prefab ID: trunk_summer\n ※Name: Koalefant Trunk\n ※prefab Version: DST-632551 "
    },
    "prefab:antlion_sinkhole(ID Complete)": {
        "prefix": "p+antlion_sinkhole",
        "body": "\"antlion_sinkhole\"",
        "description": " ※prefab ID: antlion_sinkhole\n ※Name: Sinkhole\n ※prefab Version: DST-632551 "
    },
    "prefab:antlion_sinkhole(ReverseSearch)": {
        "prefix": "p+Sinkhole",
        "body": "\"antlion_sinkhole\"",
        "description": " ※prefab ID: antlion_sinkhole\n ※Name: Sinkhole\n ※prefab Version: DST-632551 "
    },
    "prefab:redlantern(ID Complete)": {
        "prefix": "p+redlantern",
        "body": "\"redlantern\"",
        "description": " ※prefab ID: redlantern\n ※Name: Red Lantern\n ※Recipe: \n\t+ 3 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.1 : Offerings/PERDOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:redlantern(ReverseSearch)": {
        "prefix": "p+Red Lantern",
        "body": "\"redlantern\"",
        "description": " ※prefab ID: redlantern\n ※Name: Red Lantern\n ※Recipe: \n\t+ 3 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.1 : Offerings/PERDOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:eyeturret_item(ID Complete)": {
        "prefix": "p+eyeturret_item",
        "body": "\"eyeturret_item\"",
        "description": " ※prefab ID: eyeturret_item\n ※Name: Houndius Shootius\n ※Recipe: \n\t+ 1 x: Deerclops Eyeball/deerclops_eyeball\n\t+ 1 x: Guardian's Horn/minotaurhorn\n\t+ 5 x: Thulecite/thulecite\n ※Required Tech: \n\t+ LV.4 : Ancient/ANCIENT\n ※prefab Version: DST-632551 "
    },
    "prefab:eyeturret_item(ReverseSearch)": {
        "prefix": "p+Houndius Shootius",
        "body": "\"eyeturret_item\"",
        "description": " ※prefab ID: eyeturret_item\n ※Name: Houndius Shootius\n ※Recipe: \n\t+ 1 x: Deerclops Eyeball/deerclops_eyeball\n\t+ 1 x: Guardian's Horn/minotaurhorn\n\t+ 5 x: Thulecite/thulecite\n ※Required Tech: \n\t+ LV.4 : Ancient/ANCIENT\n ※prefab Version: DST-632551 "
    },
    "prefab:gemsocket(ID Complete)": {
        "prefix": "p+gemsocket",
        "body": "\"gemsocket\"",
        "description": " ※prefab ID: gemsocket\n ※Name: Gem Stand\n ※prefab Version: DST-632551 "
    },
    "prefab:gemsocket(ReverseSearch)": {
        "prefix": "p+Gem Stand",
        "body": "\"gemsocket\"",
        "description": " ※prefab ID: gemsocket\n ※Name: Gem Stand\n ※prefab Version: DST-632551 "
    },
    "prefab:brush(ID Complete)": {
        "prefix": "p+brush",
        "body": "\"brush\"",
        "description": " ※prefab ID: brush\n ※Name: Brush\n ※Recipe: \n\t+ 1 x: Steel Wool/steelwool\n\t+ 1 x: Walrus Tusk/walrus_tusk\n\t+ 2 x: Gold Nugget/goldnugget\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:brush(ReverseSearch)": {
        "prefix": "p+Brush",
        "body": "\"brush\"",
        "description": " ※prefab ID: brush\n ※Name: Brush\n ※Recipe: \n\t+ 1 x: Steel Wool/steelwool\n\t+ 1 x: Walrus Tusk/walrus_tusk\n\t+ 2 x: Gold Nugget/goldnugget\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:endtable(ID Complete)": {
        "prefix": "p+endtable",
        "body": "\"endtable\"",
        "description": " ※prefab ID: endtable\n ※Name: End Table\n ※Recipe: \n\t+ 2 x: Marble/marble\n\t+ 2 x: Boards/boards\n\t+ 2 x: Carpeted Flooring/turf_carpetfloor\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:endtable(ReverseSearch)": {
        "prefix": "p+End Table",
        "body": "\"endtable\"",
        "description": " ※prefab ID: endtable\n ※Name: End Table\n ※Recipe: \n\t+ 2 x: Marble/marble\n\t+ 2 x: Boards/boards\n\t+ 2 x: Carpeted Flooring/turf_carpetfloor\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:penguin(ID Complete)": {
        "prefix": "p+penguin",
        "body": "\"penguin\"",
        "description": " ※prefab ID: penguin\n ※Name: Pengull\n ※prefab Version: DST-632551 "
    },
    "prefab:penguin(ReverseSearch)": {
        "prefix": "p+Pengull",
        "body": "\"penguin\"",
        "description": " ※prefab ID: penguin\n ※Name: Pengull\n ※prefab Version: DST-632551 "
    },
    "prefab:nitre(ID Complete)": {
        "prefix": "p+nitre",
        "body": "\"nitre\"",
        "description": " ※prefab ID: nitre\n ※Name: Nitre\n ※prefab Version: DST-632551 "
    },
    "prefab:nitre(ReverseSearch)": {
        "prefix": "p+Nitre",
        "body": "\"nitre\"",
        "description": " ※prefab ID: nitre\n ※Name: Nitre\n ※prefab Version: DST-632551 "
    },
    "prefab:basalt(ID Complete)": {
        "prefix": "p+basalt",
        "body": "\"basalt\"",
        "description": " ※prefab ID: basalt\n ※Name: Basalt\n ※prefab Version: DST-632551 "
    },
    "prefab:basalt(ReverseSearch)": {
        "prefix": "p+Basalt",
        "body": "\"basalt\"",
        "description": " ※prefab ID: basalt\n ※Name: Basalt\n ※prefab Version: DST-632551 "
    },
    "prefab:barnaclinguine(ID Complete)": {
        "prefix": "p+barnaclinguine",
        "body": "\"barnaclinguine\"",
        "description": " ※prefab ID: barnaclinguine\n ※Name: Barnacle Linguine\n ※prefab Version: DST-632551 "
    },
    "prefab:barnaclinguine(ReverseSearch)": {
        "prefix": "p+Barnacle Linguine",
        "body": "\"barnaclinguine\"",
        "description": " ※prefab ID: barnaclinguine\n ※Name: Barnacle Linguine\n ※prefab Version: DST-632551 "
    },
    "prefab:basalt_pillar(ID Complete)": {
        "prefix": "p+basalt_pillar",
        "body": "\"basalt_pillar\"",
        "description": " ※prefab ID: basalt_pillar\n ※Name: Basalt Pillar\n ※prefab Version: DST-632551 "
    },
    "prefab:basalt_pillar(ReverseSearch)": {
        "prefix": "p+Basalt Pillar",
        "body": "\"basalt_pillar\"",
        "description": " ※prefab ID: basalt_pillar\n ※Name: Basalt Pillar\n ※prefab Version: DST-632551 "
    },
    "prefab:skeletonhat(ID Complete)": {
        "prefix": "p+skeletonhat",
        "body": "\"skeletonhat\"",
        "description": " ※prefab ID: skeletonhat\n ※Name: Bone Helm\n ※Recipe: \n\t+ 10 x: Bone Shards/boneshard\n\t+ 4 x: Nightmare Fuel/nightmarefuel\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:skeletonhat(ReverseSearch)": {
        "prefix": "p+Bone Helm",
        "body": "\"skeletonhat\"",
        "description": " ※prefab ID: skeletonhat\n ※Name: Bone Helm\n ※Recipe: \n\t+ 10 x: Bone Shards/boneshard\n\t+ 4 x: Nightmare Fuel/nightmarefuel\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_025(ID Complete)": {
        "prefix": "p+quagmire_food_025",
        "body": "\"quagmire_food_025\"",
        "description": " ※prefab ID: quagmire_food_025\n ※Name: Garlic Bread\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_025(ReverseSearch)": {
        "prefix": "p+Garlic Bread",
        "body": "\"quagmire_food_025\"",
        "description": " ※prefab ID: quagmire_food_025\n ※Name: Garlic Bread\n ※prefab Version: DST-632551 "
    },
    "prefab:spoiled_fish(ID Complete)": {
        "prefix": "p+spoiled_fish",
        "body": "\"spoiled_fish\"",
        "description": " ※prefab ID: spoiled_fish\n ※Name: Spoiled Fish\n ※prefab Version: DST-632551 "
    },
    "prefab:spoiled_fish(ReverseSearch)": {
        "prefix": "p+Spoiled Fish",
        "body": "\"spoiled_fish\"",
        "description": " ※prefab ID: spoiled_fish\n ※Name: Spoiled Fish\n ※prefab Version: DST-632551 "
    },
    "prefab:corn_seeds(ID Complete)": {
        "prefix": "p+corn_seeds",
        "body": "\"corn_seeds\"",
        "description": " ※prefab ID: corn_seeds\n ※Name: Clustered Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:corn_seeds(ReverseSearch)": {
        "prefix": "p+Clustered Seeds",
        "body": "\"corn_seeds\"",
        "description": " ※prefab ID: corn_seeds\n ※Name: Clustered Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:lost_toy_2(ID Complete)": {
        "prefix": "p+lost_toy_2",
        "body": "\"lost_toy_2\"",
        "description": " ※prefab ID: lost_toy_2\n ※Name: Sentimental Kazoo\n ※prefab Version: DST-632551 "
    },
    "prefab:lost_toy_2(ReverseSearch)": {
        "prefix": "p+Sentimental Kazoo",
        "body": "\"lost_toy_2\"",
        "description": " ※prefab ID: lost_toy_2\n ※Name: Sentimental Kazoo\n ※prefab Version: DST-632551 "
    },
    "prefab:sculpture_rooknose(ID Complete)": {
        "prefix": "p+sculpture_rooknose",
        "body": "\"sculpture_rooknose\"",
        "description": " ※prefab ID: sculpture_rooknose\n ※Name: Suspicious Marble\n ※prefab Version: DST-632551 "
    },
    "prefab:sculpture_rooknose(ReverseSearch)": {
        "prefix": "p+Suspicious Marble",
        "body": "\"sculpture_rooknose\"",
        "description": " ※prefab ID: sculpture_rooknose\n ※Name: Suspicious Marble\n ※prefab Version: DST-632551 "
    },
    "prefab:healingsalve(ID Complete)": {
        "prefix": "p+healingsalve",
        "body": "\"healingsalve\"",
        "description": " ※prefab ID: healingsalve\n ※Name: Healing Salve\n ※Recipe: \n\t+ 2 x: Ashes/ash\n\t+ 1 x: Rocks/rocks\n\t+ 1 x: Spider Gland/spidergland\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:healingsalve(ReverseSearch)": {
        "prefix": "p+Healing Salve",
        "body": "\"healingsalve\"",
        "description": " ※prefab ID: healingsalve\n ※Name: Healing Salve\n ※Recipe: \n\t+ 2 x: Ashes/ash\n\t+ 1 x: Rocks/rocks\n\t+ 1 x: Spider Gland/spidergland\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_butterfly_sketch(ID Complete)": {
        "prefix": "p+chesspiece_butterfly_sketch",
        "body": "\"chesspiece_butterfly_sketch\"",
        "description": " ※prefab ID: chesspiece_butterfly_sketch\n ※Name: Moon Moth Figure Sketch\n ※Recipe: \n\t+ 1 x: Papyrus/papyrus\n ※Required Tech: \n\t+ LV.3 : Celestial/CELESTIAL\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_butterfly_sketch(ReverseSearch)": {
        "prefix": "p+Moon Moth Figure Sketch",
        "body": "\"chesspiece_butterfly_sketch\"",
        "description": " ※prefab ID: chesspiece_butterfly_sketch\n ※Name: Moon Moth Figure Sketch\n ※Recipe: \n\t+ 1 x: Papyrus/papyrus\n ※Required Tech: \n\t+ LV.3 : Celestial/CELESTIAL\n ※prefab Version: DST-632551 "
    },
    "prefab:mutated_penguin(ID Complete)": {
        "prefix": "p+mutated_penguin",
        "body": "\"mutated_penguin\"",
        "description": " ※prefab ID: mutated_penguin\n ※Name: Moonrock Pengull\n ※prefab Version: DST-632551 "
    },
    "prefab:mutated_penguin(ReverseSearch)": {
        "prefix": "p+Moonrock Pengull",
        "body": "\"mutated_penguin\"",
        "description": " ※prefab ID: mutated_penguin\n ※Name: Moonrock Pengull\n ※prefab Version: DST-632551 "
    },
    "prefab:security_pulse_cage(ID Complete)": {
        "prefix": "p+security_pulse_cage",
        "body": "\"security_pulse_cage\"",
        "description": " ※prefab ID: security_pulse_cage\n ※Name: Spark Ark\n ※prefab Version: DST-632551 "
    },
    "prefab:security_pulse_cage(ReverseSearch)": {
        "prefix": "p+Spark Ark",
        "body": "\"security_pulse_cage\"",
        "description": " ※prefab ID: security_pulse_cage\n ※Name: Spark Ark\n ※prefab Version: DST-632551 "
    },
    "prefab:icestaff(ID Complete)": {
        "prefix": "p+icestaff",
        "body": "\"icestaff\"",
        "description": " ※prefab ID: icestaff\n ※Name: Ice Staff\n ※Recipe: \n\t+ 1 x: Spear/spear\n\t+ 1 x: Blue Gem/bluegem\n ※Required Tech: \n\t+ LV.2 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:icestaff(ReverseSearch)": {
        "prefix": "p+Ice Staff",
        "body": "\"icestaff\"",
        "description": " ※prefab ID: icestaff\n ※Name: Ice Staff\n ※Recipe: \n\t+ 1 x: Spear/spear\n\t+ 1 x: Blue Gem/bluegem\n ※Required Tech: \n\t+ LV.2 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:glassblock(ID Complete)": {
        "prefix": "p+glassblock",
        "body": "\"glassblock\"",
        "description": " ※prefab ID: glassblock\n ※Name: Glass Castle\n ※prefab Version: DST-632551 "
    },
    "prefab:glassblock(ReverseSearch)": {
        "prefix": "p+Glass Castle",
        "body": "\"glassblock\"",
        "description": " ※prefab ID: glassblock\n ※Name: Glass Castle\n ※prefab Version: DST-632551 "
    },
    "prefab:shadowthrall_hands_allegiance(ID Complete)": {
        "prefix": "p+shadowthrall_hands_allegiance",
        "body": "\"shadowthrall_hands_allegiance\"",
        "description": " ※prefab ID: shadowthrall_hands_allegiance\n ※Name: Jitters\n ※prefab Version: DST-632551 "
    },
    "prefab:shadowthrall_hands_allegiance(ReverseSearch)": {
        "prefix": "p+Jitters",
        "body": "\"shadowthrall_hands_allegiance\"",
        "description": " ※prefab ID: shadowthrall_hands_allegiance\n ※Name: Jitters\n ※prefab Version: DST-632551 "
    },
    "prefab:archive_portal(ID Complete)": {
        "prefix": "p+archive_portal",
        "body": "\"archive_portal\"",
        "description": " ※prefab ID: archive_portal\n ※Name: Sealed Portal\n ※prefab Version: DST-632551 "
    },
    "prefab:archive_portal(ReverseSearch)": {
        "prefix": "p+Sealed Portal",
        "body": "\"archive_portal\"",
        "description": " ※prefab ID: archive_portal\n ※Name: Sealed Portal\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishingbobber_crow(ID Complete)": {
        "prefix": "p+oceanfishingbobber_crow",
        "body": "\"oceanfishingbobber_crow\"",
        "description": " ※prefab ID: oceanfishingbobber_crow\n ※Name: Jet Quill Float\n ※Recipe: \n\t+ 1 x: Jet Feather/feather_crow\n ※Required Tech: \n\t+ LV.1 : Fishing/FISHING\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishingbobber_crow(ReverseSearch)": {
        "prefix": "p+Jet Quill Float",
        "body": "\"oceanfishingbobber_crow\"",
        "description": " ※prefab ID: oceanfishingbobber_crow\n ※Name: Jet Quill Float\n ※Recipe: \n\t+ 1 x: Jet Feather/feather_crow\n ※Required Tech: \n\t+ LV.1 : Fishing/FISHING\n ※prefab Version: DST-632551 "
    },
    "prefab:flower_cave(ID Complete)": {
        "prefix": "p+flower_cave",
        "body": "\"flower_cave\"",
        "description": " ※prefab ID: flower_cave\n ※Name: Light Flower\n ※prefab Version: DST-632551 "
    },
    "prefab:flower_cave(ReverseSearch)": {
        "prefix": "p+Light Flower",
        "body": "\"flower_cave\"",
        "description": " ※prefab ID: flower_cave\n ※Name: Light Flower\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_39(ID Complete)": {
        "prefix": "p+trinket_39",
        "body": "\"trinket_39\"",
        "description": " ※prefab ID: trinket_39\n ※Name: Lone Glove\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_39(ReverseSearch)": {
        "prefix": "p+Lone Glove",
        "body": "\"trinket_39\"",
        "description": " ※prefab ID: trinket_39\n ※Name: Lone Glove\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_018(ID Complete)": {
        "prefix": "p+quagmire_food_018",
        "body": "\"quagmire_food_018\"",
        "description": " ※prefab ID: quagmire_food_018\n ※Name: Fish and Chips\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_018(ReverseSearch)": {
        "prefix": "p+Fish and Chips",
        "body": "\"quagmire_food_018\"",
        "description": " ※prefab ID: quagmire_food_018\n ※Name: Fish and Chips\n ※prefab Version: DST-632551 "
    },
    "prefab:lureplantbulb(ID Complete)": {
        "prefix": "p+lureplantbulb",
        "body": "\"lureplantbulb\"",
        "description": " ※prefab ID: lureplantbulb\n ※Name: Fleshy Bulb\n ※prefab Version: DST-632551 "
    },
    "prefab:lureplantbulb(ReverseSearch)": {
        "prefix": "p+Fleshy Bulb",
        "body": "\"lureplantbulb\"",
        "description": " ※prefab ID: lureplantbulb\n ※Name: Fleshy Bulb\n ※prefab Version: DST-632551 "
    },
    "prefab:shadowchanneler(ID Complete)": {
        "prefix": "p+shadowchanneler",
        "body": "\"shadowchanneler\"",
        "description": " ※prefab ID: shadowchanneler\n ※Name: Unseen Hand\n ※prefab Version: DST-632551 "
    },
    "prefab:shadowchanneler(ReverseSearch)": {
        "prefix": "p+Unseen Hand",
        "body": "\"shadowchanneler\"",
        "description": " ※prefab ID: shadowchanneler\n ※Name: Unseen Hand\n ※prefab Version: DST-632551 "
    },
    "prefab:farm_plant_watermelon(ID Complete)": {
        "prefix": "p+farm_plant_watermelon",
        "body": "\"farm_plant_watermelon\"",
        "description": " ※prefab ID: farm_plant_watermelon\n ※Name: Watermelon Plant\n ※prefab Version: DST-632551 "
    },
    "prefab:farm_plant_watermelon(ReverseSearch)": {
        "prefix": "p+Watermelon Plant",
        "body": "\"farm_plant_watermelon\"",
        "description": " ※prefab ID: farm_plant_watermelon\n ※Name: Watermelon Plant\n ※prefab Version: DST-632551 "
    },
    "prefab:yotb_stage(ID Complete)": {
        "prefix": "p+yotb_stage",
        "body": "\"yotb_stage\"",
        "description": " ※prefab ID: yotb_stage\n ※Name: Judge's Booth\n ※prefab Version: DST-632551 "
    },
    "prefab:yotb_stage(ReverseSearch)": {
        "prefix": "p+Judge's Booth",
        "body": "\"yotb_stage\"",
        "description": " ※prefab ID: yotb_stage\n ※Name: Judge's Booth\n ※prefab Version: DST-632551 "
    },
    "prefab:sewing_mannequin(ID Complete)": {
        "prefix": "p+sewing_mannequin",
        "body": "\"sewing_mannequin\"",
        "description": " ※prefab ID: sewing_mannequin\n ※Name: Mannequin\n ※Recipe: \n\t+ 2 x: Silk/silk\n\t+ 2 x: Boards/boards\n\t+ 3 x: Cut Grass/cutgrass\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:sewing_mannequin(ReverseSearch)": {
        "prefix": "p+Mannequin",
        "body": "\"sewing_mannequin\"",
        "description": " ※prefab ID: sewing_mannequin\n ※Name: Mannequin\n ※Recipe: \n\t+ 2 x: Silk/silk\n\t+ 2 x: Boards/boards\n\t+ 3 x: Cut Grass/cutgrass\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:ruinsrelic_table(ID Complete)": {
        "prefix": "p+ruinsrelic_table",
        "body": "\"ruinsrelic_table\"",
        "description": " ※prefab ID: ruinsrelic_table\n ※Name: Replica Relic Table\n ※Recipe: \n\t+ 1 x: Cut Stone/cutstone\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:ruinsrelic_table(ReverseSearch)": {
        "prefix": "p+Replica Relic Table",
        "body": "\"ruinsrelic_table\"",
        "description": " ※prefab ID: ruinsrelic_table\n ※Name: Replica Relic Table\n ※Recipe: \n\t+ 1 x: Cut Stone/cutstone\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:dragonfruit_oversized(ID Complete)": {
        "prefix": "p+dragonfruit_oversized",
        "body": "\"dragonfruit_oversized\"",
        "description": " ※prefab ID: dragonfruit_oversized\n ※Name: Giant Dragon Fruit\n ※prefab Version: DST-632551 "
    },
    "prefab:dragonfruit_oversized(ReverseSearch)": {
        "prefix": "p+Giant Dragon Fruit",
        "body": "\"dragonfruit_oversized\"",
        "description": " ※prefab ID: dragonfruit_oversized\n ※Name: Giant Dragon Fruit\n ※prefab Version: DST-632551 "
    },
    "prefab:mask_dollbrokenhat(ID Complete)": {
        "prefix": "p+mask_dollbrokenhat",
        "body": "\"mask_dollbrokenhat\"",
        "description": " ※prefab ID: mask_dollbrokenhat\n ※Name: Cracked Doll Mask\n ※prefab Version: DST-632551 "
    },
    "prefab:mask_dollbrokenhat(ReverseSearch)": {
        "prefix": "p+Cracked Doll Mask",
        "body": "\"mask_dollbrokenhat\"",
        "description": " ※prefab ID: mask_dollbrokenhat\n ※Name: Cracked Doll Mask\n ※prefab Version: DST-632551 "
    },
    "prefab:balloons_empty(ID Complete)": {
        "prefix": "p+balloons_empty",
        "body": "\"balloons_empty\"",
        "description": " ※prefab ID: balloons_empty\n ※Name: Pile o' Balloons\n ※Recipe: \n\t+ 4 x: Waterballoon/waterballoon\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:balloons_empty(ReverseSearch)": {
        "prefix": "p+Pile o' Balloons",
        "body": "\"balloons_empty\"",
        "description": " ※prefab ID: balloons_empty\n ※Name: Pile o' Balloons\n ※Recipe: \n\t+ 4 x: Waterballoon/waterballoon\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_030(ID Complete)": {
        "prefix": "p+quagmire_food_030",
        "body": "\"quagmire_food_030\"",
        "description": " ※prefab ID: quagmire_food_030\n ※Name: Ratatouille\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_030(ReverseSearch)": {
        "prefix": "p+Ratatouille",
        "body": "\"quagmire_food_030\"",
        "description": " ※prefab ID: quagmire_food_030\n ※Name: Ratatouille\n ※prefab Version: DST-632551 "
    },
    "prefab:shadowdigger_builder(ID Complete)": {
        "prefix": "p+shadowdigger_builder",
        "body": "\"shadowdigger_builder\"",
        "description": " ※prefab ID: shadowdigger_builder\n ※Name: Shadow Digger\n ※Recipe: \n\t+ 2 x: Nightmare Fuel/nightmarefuel\n\t+ 1 x: Shovel/shovel\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:shadowdigger_builder(ReverseSearch)": {
        "prefix": "p+Shadow Digger",
        "body": "\"shadowdigger_builder\"",
        "description": " ※prefab ID: shadowdigger_builder\n ※Name: Shadow Digger\n ※Recipe: \n\t+ 2 x: Nightmare Fuel/nightmarefuel\n\t+ 1 x: Shovel/shovel\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:spidergland(ID Complete)": {
        "prefix": "p+spidergland",
        "body": "\"spidergland\"",
        "description": " ※prefab ID: spidergland\n ※Name: Spider Gland\n ※prefab Version: DST-632551 "
    },
    "prefab:spidergland(ReverseSearch)": {
        "prefix": "p+Spider Gland",
        "body": "\"spidergland\"",
        "description": " ※prefab ID: spidergland\n ※Name: Spider Gland\n ※prefab Version: DST-632551 "
    },
    "prefab:beefalo_domestic(ID Complete)": {
        "prefix": "p+beefalo_domestic",
        "body": "\"beefalo_domestic\"",
        "description": " ※prefab ID: beefalo_domestic\n ※Name: Domesticated Beefalo\n ※prefab Version: DST-632551 "
    },
    "prefab:beefalo_domestic(ReverseSearch)": {
        "prefix": "p+Domesticated Beefalo",
        "body": "\"beefalo_domestic\"",
        "description": " ※prefab ID: beefalo_domestic\n ※Name: Domesticated Beefalo\n ※prefab Version: DST-632551 "
    },
    "prefab:yotc_seedpacket_rare(ID Complete)": {
        "prefix": "p+yotc_seedpacket_rare",
        "body": "\"yotc_seedpacket_rare\"",
        "description": " ※prefab ID: yotc_seedpacket_rare\n ※Name: Premium Seed Packet\n ※Recipe: \n\t+ 4 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /CARRATOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:yotc_seedpacket_rare(ReverseSearch)": {
        "prefix": "p+Premium Seed Packet",
        "body": "\"yotc_seedpacket_rare\"",
        "description": " ※prefab ID: yotc_seedpacket_rare\n ※Name: Premium Seed Packet\n ※Recipe: \n\t+ 4 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /CARRATOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:shadowdancer(ID Complete)": {
        "prefix": "p+shadowdancer",
        "body": "\"shadowdancer\"",
        "description": " ※prefab ID: shadowdancer\n ※Name: Shadow Dancer\n ※prefab Version: DST-632551 "
    },
    "prefab:shadowdancer(ReverseSearch)": {
        "prefix": "p+Shadow Dancer",
        "body": "\"shadowdancer\"",
        "description": " ※prefab ID: shadowdancer\n ※Name: Shadow Dancer\n ※prefab Version: DST-632551 "
    },
    "prefab:pigtorch(ID Complete)": {
        "prefix": "p+pigtorch",
        "body": "\"pigtorch\"",
        "description": " ※prefab ID: pigtorch\n ※Name: Pig Torch\n ※prefab Version: DST-632551 "
    },
    "prefab:pigtorch(ReverseSearch)": {
        "prefix": "p+Pig Torch",
        "body": "\"pigtorch\"",
        "description": " ※prefab ID: pigtorch\n ※Name: Pig Torch\n ※prefab Version: DST-632551 "
    },
    "prefab:yotb_beefalo_doll_war(ID Complete)": {
        "prefix": "p+yotb_beefalo_doll_war",
        "body": "\"yotb_beefalo_doll_war\"",
        "description": " ※prefab ID: yotb_beefalo_doll_war\n ※Name: Warrior Beefalo Doll\n ※prefab Version: DST-632551 "
    },
    "prefab:yotb_beefalo_doll_war(ReverseSearch)": {
        "prefix": "p+Warrior Beefalo Doll",
        "body": "\"yotb_beefalo_doll_war\"",
        "description": " ※prefab ID: yotb_beefalo_doll_war\n ※Name: Warrior Beefalo Doll\n ※prefab Version: DST-632551 "
    },
    "prefab:bishop_nightmare(ID Complete)": {
        "prefix": "p+bishop_nightmare",
        "body": "\"bishop_nightmare\"",
        "description": " ※prefab ID: bishop_nightmare\n ※Name: Damaged Bishop\n ※prefab Version: DST-632551 "
    },
    "prefab:bishop_nightmare(ReverseSearch)": {
        "prefix": "p+Damaged Bishop",
        "body": "\"bishop_nightmare\"",
        "description": " ※prefab ID: bishop_nightmare\n ※Name: Damaged Bishop\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_monkey_ground(ID Complete)": {
        "prefix": "p+turf_monkey_ground",
        "body": "\"turf_monkey_ground\"",
        "description": " ※prefab ID: turf_monkey_ground\n ※Name: Moon Quay Beach Turf\n ※Recipe: \n\t+ 1 x: Rocks/rocks\n\t+ 1 x: Marble/marble\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_monkey_ground(ReverseSearch)": {
        "prefix": "p+Moon Quay Beach Turf",
        "body": "\"turf_monkey_ground\"",
        "description": " ※prefab ID: turf_monkey_ground\n ※Name: Moon Quay Beach Turf\n ※Recipe: \n\t+ 1 x: Rocks/rocks\n\t+ 1 x: Marble/marble\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:lava_pond(ID Complete)": {
        "prefix": "p+lava_pond",
        "body": "\"lava_pond\"",
        "description": " ※prefab ID: lava_pond\n ※Name: Magma\n ※prefab Version: DST-632551 "
    },
    "prefab:lava_pond(ReverseSearch)": {
        "prefix": "p+Magma",
        "body": "\"lava_pond\"",
        "description": " ※prefab ID: lava_pond\n ※Name: Magma\n ※prefab Version: DST-632551 "
    },
    "prefab:antlion(ID Complete)": {
        "prefix": "p+antlion",
        "body": "\"antlion\"",
        "description": " ※prefab ID: antlion\n ※Name: Antlion\n ※prefab Version: DST-632551 "
    },
    "prefab:antlion(ReverseSearch)": {
        "prefix": "p+Antlion",
        "body": "\"antlion\"",
        "description": " ※prefab ID: antlion\n ※Name: Antlion\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_portal_key(ID Complete)": {
        "prefix": "p+quagmire_portal_key",
        "body": "\"quagmire_portal_key\"",
        "description": " ※prefab ID: quagmire_portal_key\n ※Name: Ancient Key\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_portal_key(ReverseSearch)": {
        "prefix": "p+Ancient Key",
        "body": "\"quagmire_portal_key\"",
        "description": " ※prefab ID: quagmire_portal_key\n ※Name: Ancient Key\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivaldecor_figure_rare(ID Complete)": {
        "prefix": "p+carnivaldecor_figure_rare",
        "body": "\"carnivaldecor_figure_rare\"",
        "description": " ※prefab ID: carnivaldecor_figure_rare\n ※Name: Rare Cawnival Statuette\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivaldecor_figure_rare(ReverseSearch)": {
        "prefix": "p+Rare Cawnival Statuette",
        "body": "\"carnivaldecor_figure_rare\"",
        "description": " ※prefab ID: carnivaldecor_figure_rare\n ※Name: Rare Cawnival Statuette\n ※prefab Version: DST-632551 "
    },
    "prefab:smallghost(ID Complete)": {
        "prefix": "p+smallghost",
        "body": "\"smallghost\"",
        "description": " ※prefab ID: smallghost\n ※Name: Pipspook\n ※prefab Version: DST-632551 "
    },
    "prefab:smallghost(ReverseSearch)": {
        "prefix": "p+Pipspook",
        "body": "\"smallghost\"",
        "description": " ※prefab ID: smallghost\n ※Name: Pipspook\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_catcoon(ID Complete)": {
        "prefix": "p+chesspiece_catcoon",
        "body": "\"chesspiece_catcoon\"",
        "description": " ※prefab ID: chesspiece_catcoon\n ※Name: Catcoon Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_catcoon(ReverseSearch)": {
        "prefix": "p+Catcoon Figure",
        "body": "\"chesspiece_catcoon\"",
        "description": " ※prefab ID: chesspiece_catcoon\n ※Name: Catcoon Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:deer_antler(ID Complete)": {
        "prefix": "p+deer_antler",
        "body": "\"deer_antler\"",
        "description": " ※prefab ID: deer_antler\n ※Name: Deer Antler\n ※prefab Version: DST-632551 "
    },
    "prefab:deer_antler(ReverseSearch)": {
        "prefix": "p+Deer Antler",
        "body": "\"deer_antler\"",
        "description": " ※prefab ID: deer_antler\n ※Name: Deer Antler\n ※prefab Version: DST-632551 "
    },
    "prefab:moon_altar_link(ID Complete)": {
        "prefix": "p+moon_altar_link",
        "body": "\"moon_altar_link\"",
        "description": " ※prefab ID: moon_altar_link\n ※Name: Mysterious Energy\n ※prefab Version: DST-632551 "
    },
    "prefab:moon_altar_link(ReverseSearch)": {
        "prefix": "p+Mysterious Energy",
        "body": "\"moon_altar_link\"",
        "description": " ※prefab ID: moon_altar_link\n ※Name: Mysterious Energy\n ※prefab Version: DST-632551 "
    },
    "prefab:minotaurchest(ID Complete)": {
        "prefix": "p+minotaurchest",
        "body": "\"minotaurchest\"",
        "description": " ※prefab ID: minotaurchest\n ※Name: Large Ornate Chest\n ※prefab Version: DST-632551 "
    },
    "prefab:minotaurchest(ReverseSearch)": {
        "prefix": "p+Large Ornate Chest",
        "body": "\"minotaurchest\"",
        "description": " ※prefab ID: minotaurchest\n ※Name: Large Ornate Chest\n ※prefab Version: DST-632551 "
    },
    "prefab:wintercooking_stuffing(ID Complete)": {
        "prefix": "p+wintercooking_stuffing",
        "body": "\"wintercooking_stuffing\"",
        "description": " ※prefab ID: wintercooking_stuffing\n ※Name: Stuffing\n ※Recipe: \n\t+ 1 x: Holiday Cheer/wintersfeastfuel\n\t+ 2 x: Beard Hair/beardhair\n ※Required Tech: \n\t+ LV.1 : Feast/WINTERSFEASTCOOKING\n ※prefab Version: DST-632551 "
    },
    "prefab:wintercooking_stuffing(ReverseSearch)": {
        "prefix": "p+Stuffing",
        "body": "\"wintercooking_stuffing\"",
        "description": " ※prefab ID: wintercooking_stuffing\n ※Name: Stuffing\n ※Recipe: \n\t+ 1 x: Holiday Cheer/wintersfeastfuel\n\t+ 2 x: Beard Hair/beardhair\n ※Required Tech: \n\t+ LV.1 : Feast/WINTERSFEASTCOOKING\n ※prefab Version: DST-632551 "
    },
    "prefab:lavae(ID Complete)": {
        "prefix": "p+lavae",
        "body": "\"lavae\"",
        "description": " ※prefab ID: lavae\n ※Name: Lavae\n ※prefab Version: DST-632551 "
    },
    "prefab:lavae(ReverseSearch)": {
        "prefix": "p+Lavae",
        "body": "\"lavae\"",
        "description": " ※prefab ID: lavae\n ※Name: Lavae\n ※prefab Version: DST-632551 "
    },
    "prefab:oceantree_pillar(ID Complete)": {
        "prefix": "p+oceantree_pillar",
        "body": "\"oceantree_pillar\"",
        "description": " ※prefab ID: oceantree_pillar\n ※Name: Above-Average Tree Trunk\n ※prefab Version: DST-632551 "
    },
    "prefab:oceantree_pillar(ReverseSearch)": {
        "prefix": "p+Above-Average Tree Trunk",
        "body": "\"oceantree_pillar\"",
        "description": " ※prefab ID: oceantree_pillar\n ※Name: Above-Average Tree Trunk\n ※prefab Version: DST-632551 "
    },
    "prefab:deadlyfeast(ID Complete)": {
        "prefix": "p+deadlyfeast",
        "body": "\"deadlyfeast\"",
        "description": " ※prefab ID: deadlyfeast\n ※Name: Deadly Feast\n ※prefab Version: DST-632551 "
    },
    "prefab:deadlyfeast(ReverseSearch)": {
        "prefix": "p+Deadly Feast",
        "body": "\"deadlyfeast\"",
        "description": " ※prefab ID: deadlyfeast\n ※Name: Deadly Feast\n ※prefab Version: DST-632551 "
    },
    "prefab:ghostlyelixir_slowregen(ID Complete)": {
        "prefix": "p+ghostlyelixir_slowregen",
        "body": "\"ghostlyelixir_slowregen\"",
        "description": " ※prefab ID: ghostlyelixir_slowregen\n ※Name: Revenant Restorative\n ※Recipe: \n\t+ 1 x: Spider Gland/spidergland\n\t+ 1 x: Mourning Glory/ghostflower\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:ghostlyelixir_slowregen(ReverseSearch)": {
        "prefix": "p+Revenant Restorative",
        "body": "\"ghostlyelixir_slowregen\"",
        "description": " ※prefab ID: ghostlyelixir_slowregen\n ※Name: Revenant Restorative\n ※Recipe: \n\t+ 1 x: Spider Gland/spidergland\n\t+ 1 x: Mourning Glory/ghostflower\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:spear_wathgrithr(ID Complete)": {
        "prefix": "p+spear_wathgrithr",
        "body": "\"spear_wathgrithr\"",
        "description": " ※prefab ID: spear_wathgrithr\n ※Name: Battle Spear\n ※Recipe: \n\t+ 2 x: Twigs/twigs\n\t+ 2 x: Flint/flint\n\t+ 2 x: Gold Nugget/goldnugget\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:spear_wathgrithr(ReverseSearch)": {
        "prefix": "p+Battle Spear",
        "body": "\"spear_wathgrithr\"",
        "description": " ※prefab ID: spear_wathgrithr\n ※Name: Battle Spear\n ※Recipe: \n\t+ 2 x: Twigs/twigs\n\t+ 2 x: Flint/flint\n\t+ 2 x: Gold Nugget/goldnugget\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:wall_dreadstone(ID Complete)": {
        "prefix": "p+wall_dreadstone",
        "body": "\"wall_dreadstone\"",
        "description": " ※prefab ID: wall_dreadstone\n ※Name: Dreadstone Wall\n ※prefab Version: DST-632551 "
    },
    "prefab:wall_dreadstone(ReverseSearch)": {
        "prefix": "p+Dreadstone Wall",
        "body": "\"wall_dreadstone\"",
        "description": " ※prefab ID: wall_dreadstone\n ※Name: Dreadstone Wall\n ※prefab Version: DST-632551 "
    },
    "prefab:yotb_beefalo_doll_festive(ID Complete)": {
        "prefix": "p+yotb_beefalo_doll_festive",
        "body": "\"yotb_beefalo_doll_festive\"",
        "description": " ※prefab ID: yotb_beefalo_doll_festive\n ※Name: Festive Beefalo Doll\n ※prefab Version: DST-632551 "
    },
    "prefab:yotb_beefalo_doll_festive(ReverseSearch)": {
        "prefix": "p+Festive Beefalo Doll",
        "body": "\"yotb_beefalo_doll_festive\"",
        "description": " ※prefab ID: yotb_beefalo_doll_festive\n ※Name: Festive Beefalo Doll\n ※prefab Version: DST-632551 "
    },
    "prefab:halloweenpotion_health_small(ID Complete)": {
        "prefix": "p+halloweenpotion_health_small",
        "body": "\"halloweenpotion_health_small\"",
        "description": " ※prefab ID: halloweenpotion_health_small\n ※Name: Flask of Sanguine Mixture\n ※prefab Version: DST-632551 "
    },
    "prefab:halloweenpotion_health_small(ReverseSearch)": {
        "prefix": "p+Flask of Sanguine Mixture",
        "body": "\"halloweenpotion_health_small\"",
        "description": " ※prefab ID: halloweenpotion_health_small\n ※Name: Flask of Sanguine Mixture\n ※prefab Version: DST-632551 "
    },
    "prefab:atrium_gate(ID Complete)": {
        "prefix": "p+atrium_gate",
        "body": "\"atrium_gate\"",
        "description": " ※prefab ID: atrium_gate\n ※Name: Ancient Gateway\n ※prefab Version: DST-632551 "
    },
    "prefab:atrium_gate(ReverseSearch)": {
        "prefix": "p+Ancient Gateway",
        "body": "\"atrium_gate\"",
        "description": " ※prefab ID: atrium_gate\n ※Name: Ancient Gateway\n ※prefab Version: DST-632551 "
    },
    "prefab:mossling(ID Complete)": {
        "prefix": "p+mossling",
        "body": "\"mossling\"",
        "description": " ※prefab ID: mossling\n ※Name: Mosling\n ※prefab Version: DST-632551 "
    },
    "prefab:mossling(ReverseSearch)": {
        "prefix": "p+Mosling",
        "body": "\"mossling\"",
        "description": " ※prefab ID: mossling\n ※Name: Mosling\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_11(ID Complete)": {
        "prefix": "p+trinket_11",
        "body": "\"trinket_11\"",
        "description": " ※prefab ID: trinket_11\n ※Name: Lying Robot\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_11(ReverseSearch)": {
        "prefix": "p+Lying Robot",
        "body": "\"trinket_11\"",
        "description": " ※prefab ID: trinket_11\n ※Name: Lying Robot\n ※prefab Version: DST-632551 "
    },
    "prefab:goose_feather(ID Complete)": {
        "prefix": "p+goose_feather",
        "body": "\"goose_feather\"",
        "description": " ※prefab ID: goose_feather\n ※Name: Down Feather\n ※prefab Version: DST-632551 "
    },
    "prefab:goose_feather(ReverseSearch)": {
        "prefix": "p+Down Feather",
        "body": "\"goose_feather\"",
        "description": " ※prefab ID: goose_feather\n ※Name: Down Feather\n ※prefab Version: DST-632551 "
    },
    "prefab:pighouse(ID Complete)": {
        "prefix": "p+pighouse",
        "body": "\"pighouse\"",
        "description": " ※prefab ID: pighouse\n ※Name: Pig House\n ※Recipe: \n\t+ 4 x: Boards/boards\n\t+ 3 x: Cut Stone/cutstone\n\t+ 4 x: Pig Skin/pigskin\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:pighouse(ReverseSearch)": {
        "prefix": "p+Pig House",
        "body": "\"pighouse\"",
        "description": " ※prefab ID: pighouse\n ※Name: Pig House\n ※Recipe: \n\t+ 4 x: Boards/boards\n\t+ 3 x: Cut Stone/cutstone\n\t+ 4 x: Pig Skin/pigskin\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_ruinsbrick(ID Complete)": {
        "prefix": "p+turf_ruinsbrick",
        "body": "\"turf_ruinsbrick\"",
        "description": " ※prefab ID: turf_ruinsbrick\n ※Name: Ancient Flooring\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n\t+ 1 x: Nightmare Fuel/nightmarefuel\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_ruinsbrick(ReverseSearch)": {
        "prefix": "p+Ancient Flooring",
        "body": "\"turf_ruinsbrick\"",
        "description": " ※prefab ID: turf_ruinsbrick\n ※Name: Ancient Flooring\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n\t+ 1 x: Nightmare Fuel/nightmarefuel\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:yotr_decor_2_item(ID Complete)": {
        "prefix": "p+yotr_decor_2_item",
        "body": "\"yotr_decor_2_item\"",
        "description": " ※prefab ID: yotr_decor_2_item\n ※Name: Tall Rabbit Lamp\n ※Recipe: \n\t+ 5 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /RABBITOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:yotr_decor_2_item(ReverseSearch)": {
        "prefix": "p+Tall Rabbit Lamp",
        "body": "\"yotr_decor_2_item\"",
        "description": " ※prefab ID: yotr_decor_2_item\n ※Name: Tall Rabbit Lamp\n ※Recipe: \n\t+ 5 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /RABBITOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:depleted_grass(ID Complete)": {
        "prefix": "p+depleted_grass",
        "body": "\"depleted_grass\"",
        "description": " ※prefab ID: depleted_grass\n ※Name: Grass\n ※prefab Version: DST-632551 "
    },
    "prefab:depleted_grass(ReverseSearch)": {
        "prefix": "p+Grass",
        "body": "\"depleted_grass\"",
        "description": " ※prefab ID: depleted_grass\n ※Name: Grass\n ※prefab Version: DST-632551 "
    },
    "prefab:goatmilk(ID Complete)": {
        "prefix": "p+goatmilk",
        "body": "\"goatmilk\"",
        "description": " ※prefab ID: goatmilk\n ※Name: Electric Milk\n ※prefab Version: DST-632551 "
    },
    "prefab:goatmilk(ReverseSearch)": {
        "prefix": "p+Electric Milk",
        "body": "\"goatmilk\"",
        "description": " ※prefab ID: goatmilk\n ※Name: Electric Milk\n ※prefab Version: DST-632551 "
    },
    "prefab:tentaclespike(ID Complete)": {
        "prefix": "p+tentaclespike",
        "body": "\"tentaclespike\"",
        "description": " ※prefab ID: tentaclespike\n ※Name: Tentacle Spike\n ※prefab Version: DST-632551 "
    },
    "prefab:tentaclespike(ReverseSearch)": {
        "prefix": "p+Tentacle Spike",
        "body": "\"tentaclespike\"",
        "description": " ※prefab ID: tentaclespike\n ※Name: Tentacle Spike\n ※prefab Version: DST-632551 "
    },
    "prefab:lightbulb(ID Complete)": {
        "prefix": "p+lightbulb",
        "body": "\"lightbulb\"",
        "description": " ※prefab ID: lightbulb\n ※Name: Light Bulb\n ※prefab Version: DST-632551 "
    },
    "prefab:lightbulb(ReverseSearch)": {
        "prefix": "p+Light Bulb",
        "body": "\"lightbulb\"",
        "description": " ※prefab ID: lightbulb\n ※Name: Light Bulb\n ※prefab Version: DST-632551 "
    },
    "prefab:cave_exit(ID Complete)": {
        "prefix": "p+cave_exit",
        "body": "\"cave_exit\"",
        "description": " ※prefab ID: cave_exit\n ※Name: Stairs\n ※prefab Version: DST-632551 "
    },
    "prefab:cave_exit(ReverseSearch)": {
        "prefix": "p+Stairs",
        "body": "\"cave_exit\"",
        "description": " ※prefab ID: cave_exit\n ※Name: Stairs\n ※prefab Version: DST-632551 "
    },
    "prefab:carnival_plaza(ID Complete)": {
        "prefix": "p+carnival_plaza",
        "body": "\"carnival_plaza\"",
        "description": " ※prefab ID: carnival_plaza\n ※Name: Cawnival Tree\n ※Recipe: \n\t+ 1 x: Cawnival Sapling/carnival_plaza_kit\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:carnival_plaza(ReverseSearch)": {
        "prefix": "p+Cawnival Tree",
        "body": "\"carnival_plaza\"",
        "description": " ※prefab ID: carnival_plaza\n ※Name: Cawnival Tree\n ※Recipe: \n\t+ 1 x: Cawnival Sapling/carnival_plaza_kit\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:waterpump(ID Complete)": {
        "prefix": "p+waterpump",
        "body": "\"waterpump\"",
        "description": " ※prefab ID: waterpump\n ※Name: Fire Pump\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 1 x: Spittlefish/oceanfish_small_9_inv\n ※Required Tech: \n\t+ LV.1 : Seafaring/SEAFARING\n ※prefab Version: DST-632551 "
    },
    "prefab:waterpump(ReverseSearch)": {
        "prefix": "p+Fire Pump",
        "body": "\"waterpump\"",
        "description": " ※prefab ID: waterpump\n ※Name: Fire Pump\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 1 x: Spittlefish/oceanfish_small_9_inv\n ※Required Tech: \n\t+ LV.1 : Seafaring/SEAFARING\n ※prefab Version: DST-632551 "
    },
    "prefab:walrus(ID Complete)": {
        "prefix": "p+walrus",
        "body": "\"walrus\"",
        "description": " ※prefab ID: walrus\n ※Name: MacTusk\n ※prefab Version: DST-632551 "
    },
    "prefab:walrus(ReverseSearch)": {
        "prefix": "p+MacTusk",
        "body": "\"walrus\"",
        "description": " ※prefab ID: walrus\n ※Name: MacTusk\n ※prefab Version: DST-632551 "
    },
    "prefab:dragon_scales(ID Complete)": {
        "prefix": "p+dragon_scales",
        "body": "\"dragon_scales\"",
        "description": " ※prefab ID: dragon_scales\n ※Name: Scales\n ※prefab Version: DST-632551 "
    },
    "prefab:dragon_scales(ReverseSearch)": {
        "prefix": "p+Scales",
        "body": "\"dragon_scales\"",
        "description": " ※prefab ID: dragon_scales\n ※Name: Scales\n ※prefab Version: DST-632551 "
    },
    "prefab:raincoat(ID Complete)": {
        "prefix": "p+raincoat",
        "body": "\"raincoat\"",
        "description": " ※prefab ID: raincoat\n ※Name: Rain Coat\n ※Recipe: \n\t+ 2 x: Tentacle Spots/tentaclespots\n\t+ 2 x: Rope/rope\n\t+ 2 x: Bone Shards/boneshard\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:raincoat(ReverseSearch)": {
        "prefix": "p+Rain Coat",
        "body": "\"raincoat\"",
        "description": " ※prefab ID: raincoat\n ※Name: Rain Coat\n ※Recipe: \n\t+ 2 x: Tentacle Spots/tentaclespots\n\t+ 2 x: Rope/rope\n\t+ 2 x: Bone Shards/boneshard\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:grass_umbrella(ID Complete)": {
        "prefix": "p+grass_umbrella",
        "body": "\"grass_umbrella\"",
        "description": " ※prefab ID: grass_umbrella\n ※Name: Pretty Parasol\n ※Recipe: \n\t+ 4 x: Twigs/twigs\n\t+ 3 x: Cut Grass/cutgrass\n\t+ 6 x: Petals/petals\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:grass_umbrella(ReverseSearch)": {
        "prefix": "p+Pretty Parasol",
        "body": "\"grass_umbrella\"",
        "description": " ※prefab ID: grass_umbrella\n ※Name: Pretty Parasol\n ※Recipe: \n\t+ 4 x: Twigs/twigs\n\t+ 3 x: Cut Grass/cutgrass\n\t+ 6 x: Petals/petals\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:molehat(ID Complete)": {
        "prefix": "p+molehat",
        "body": "\"molehat\"",
        "description": " ※prefab ID: molehat\n ※Name: Moggles\n ※Recipe: \n\t+ 2 x: Moleworm/mole\n\t+ 2 x: Electrical Doodad/transistor\n\t+ 1 x: Glow Berry/wormlight\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:molehat(ReverseSearch)": {
        "prefix": "p+Moggles",
        "body": "\"molehat\"",
        "description": " ※prefab ID: molehat\n ※Name: Moggles\n ※Recipe: \n\t+ 2 x: Moleworm/mole\n\t+ 2 x: Electrical Doodad/transistor\n\t+ 1 x: Glow Berry/wormlight\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:shadowthrall_horns_allegiance(ID Complete)": {
        "prefix": "p+shadowthrall_horns_allegiance",
        "body": "\"shadowthrall_horns_allegiance\"",
        "description": " ※prefab ID: shadowthrall_horns_allegiance\n ※Name: Rasp\n ※prefab Version: DST-632551 "
    },
    "prefab:shadowthrall_horns_allegiance(ReverseSearch)": {
        "prefix": "p+Rasp",
        "body": "\"shadowthrall_horns_allegiance\"",
        "description": " ※prefab ID: shadowthrall_horns_allegiance\n ※Name: Rasp\n ※prefab Version: DST-632551 "
    },
    "prefab:waffles(ID Complete)": {
        "prefix": "p+waffles",
        "body": "\"waffles\"",
        "description": " ※prefab ID: waffles\n ※Name: Waffles\n ※prefab Version: DST-632551 "
    },
    "prefab:waffles(ReverseSearch)": {
        "prefix": "p+Waffles",
        "body": "\"waffles\"",
        "description": " ※prefab ID: waffles\n ※Name: Waffles\n ※prefab Version: DST-632551 "
    },
    "prefab:moon_altar_crown(ID Complete)": {
        "prefix": "p+moon_altar_crown",
        "body": "\"moon_altar_crown\"",
        "description": " ※prefab ID: moon_altar_crown\n ※Name: Inactive Celestial Tribute\n ※prefab Version: DST-632551 "
    },
    "prefab:moon_altar_crown(ReverseSearch)": {
        "prefix": "p+Inactive Celestial Tribute",
        "body": "\"moon_altar_crown\"",
        "description": " ※prefab ID: moon_altar_crown\n ※Name: Inactive Celestial Tribute\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalgame_herding_kit(ID Complete)": {
        "prefix": "p+carnivalgame_herding_kit",
        "body": "\"carnivalgame_herding_kit\"",
        "description": " ※prefab ID: carnivalgame_herding_kit\n ※Name: Egg Scramble Kit\n ※Recipe: \n\t+ 1 x: Gold Nugget/goldnugget\n\t+ 3 x: Seeds/seeds\n ※Required Tech: \n\t+ LV.3 : Cawnival Creation/CARNIVAL_HOSTSHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalgame_herding_kit(ReverseSearch)": {
        "prefix": "p+Egg Scramble Kit",
        "body": "\"carnivalgame_herding_kit\"",
        "description": " ※prefab ID: carnivalgame_herding_kit\n ※Name: Egg Scramble Kit\n ※Recipe: \n\t+ 1 x: Gold Nugget/goldnugget\n\t+ 3 x: Seeds/seeds\n ※Required Tech: \n\t+ LV.3 : Cawnival Creation/CARNIVAL_HOSTSHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:royal_jelly(ID Complete)": {
        "prefix": "p+royal_jelly",
        "body": "\"royal_jelly\"",
        "description": " ※prefab ID: royal_jelly\n ※Name: Royal Jelly\n ※prefab Version: DST-632551 "
    },
    "prefab:royal_jelly(ReverseSearch)": {
        "prefix": "p+Royal Jelly",
        "body": "\"royal_jelly\"",
        "description": " ※prefab ID: royal_jelly\n ※Name: Royal Jelly\n ※prefab Version: DST-632551 "
    },
    "prefab:firesuppressor(ID Complete)": {
        "prefix": "p+firesuppressor",
        "body": "\"firesuppressor\"",
        "description": " ※prefab ID: firesuppressor\n ※Name: Ice Flingomatic\n ※Recipe: \n\t+ 2 x: Gears/gears\n\t+ 15 x: Ice/ice\n\t+ 2 x: Electrical Doodad/transistor\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:firesuppressor(ReverseSearch)": {
        "prefix": "p+Ice Flingomatic",
        "body": "\"firesuppressor\"",
        "description": " ※prefab ID: firesuppressor\n ※Name: Ice Flingomatic\n ※Recipe: \n\t+ 2 x: Gears/gears\n\t+ 15 x: Ice/ice\n\t+ 2 x: Electrical Doodad/transistor\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:catcoon(ID Complete)": {
        "prefix": "p+catcoon",
        "body": "\"catcoon\"",
        "description": " ※prefab ID: catcoon\n ※Name: Catcoon\n ※prefab Version: DST-632551 "
    },
    "prefab:catcoon(ReverseSearch)": {
        "prefix": "p+Catcoon",
        "body": "\"catcoon\"",
        "description": " ※prefab ID: catcoon\n ※Name: Catcoon\n ※prefab Version: DST-632551 "
    },
    "prefab:dock_woodposts_item(ID Complete)": {
        "prefix": "p+dock_woodposts_item",
        "body": "\"dock_woodposts_item\"",
        "description": " ※prefab ID: dock_woodposts_item\n ※Name: Dock Piling\n ※Recipe: \n\t+ 2 x: Log/log\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:dock_woodposts_item(ReverseSearch)": {
        "prefix": "p+Dock Piling",
        "body": "\"dock_woodposts_item\"",
        "description": " ※prefab ID: dock_woodposts_item\n ※Name: Dock Piling\n ※Recipe: \n\t+ 2 x: Log/log\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_firebomb(ID Complete)": {
        "prefix": "p+lavaarena_firebomb",
        "body": "\"lavaarena_firebomb\"",
        "description": " ※prefab ID: lavaarena_firebomb\n ※Name: Hearthsfire Crystals\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_firebomb(ReverseSearch)": {
        "prefix": "p+Hearthsfire Crystals",
        "body": "\"lavaarena_firebomb\"",
        "description": " ※prefab ID: lavaarena_firebomb\n ※Name: Hearthsfire Crystals\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_lucy(ID Complete)": {
        "prefix": "p+lavaarena_lucy",
        "body": "\"lavaarena_lucy\"",
        "description": " ※prefab ID: lavaarena_lucy\n ※Name: Riled Lucy\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_lucy(ReverseSearch)": {
        "prefix": "p+Riled Lucy",
        "body": "\"lavaarena_lucy\"",
        "description": " ※prefab ID: lavaarena_lucy\n ※Name: Riled Lucy\n ※prefab Version: DST-632551 "
    },
    "prefab:slingshotammo_rock(ID Complete)": {
        "prefix": "p+slingshotammo_rock",
        "body": "\"slingshotammo_rock\"",
        "description": " ※prefab ID: slingshotammo_rock\n ※Name: Pebbles\n ※Recipe: \n\t+ 1 x: Rocks/rocks\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:slingshotammo_rock(ReverseSearch)": {
        "prefix": "p+Pebbles",
        "body": "\"slingshotammo_rock\"",
        "description": " ※prefab ID: slingshotammo_rock\n ※Name: Pebbles\n ※Recipe: \n\t+ 1 x: Rocks/rocks\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:blue_mushroom(ID Complete)": {
        "prefix": "p+blue_mushroom",
        "body": "\"blue_mushroom\"",
        "description": " ※prefab ID: blue_mushroom\n ※Name: Blue Mushroom\n ※prefab Version: DST-632551 "
    },
    "prefab:blue_mushroom(ReverseSearch)": {
        "prefix": "p+Blue Mushroom",
        "body": "\"blue_mushroom\"",
        "description": " ※prefab ID: blue_mushroom\n ※Name: Blue Mushroom\n ※prefab Version: DST-632551 "
    },
    "prefab:critter_kitten(ID Complete)": {
        "prefix": "p+critter_kitten",
        "body": "\"critter_kitten\"",
        "description": " ※prefab ID: critter_kitten\n ※Name: Kittykit\n ※prefab Version: DST-632551 "
    },
    "prefab:critter_kitten(ReverseSearch)": {
        "prefix": "p+Kittykit",
        "body": "\"critter_kitten\"",
        "description": " ※prefab ID: critter_kitten\n ※Name: Kittykit\n ※prefab Version: DST-632551 "
    },
    "prefab:dreadstonehat(ID Complete)": {
        "prefix": "p+dreadstonehat",
        "body": "\"dreadstonehat\"",
        "description": " ※prefab ID: dreadstonehat\n ※Name: Dreadstone Helm\n ※Recipe: \n\t+ 4 x: Dreadstone/dreadstone\n\t+ 4 x: Pure Horror/horrorfuel\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:dreadstonehat(ReverseSearch)": {
        "prefix": "p+Dreadstone Helm",
        "body": "\"dreadstonehat\"",
        "description": " ※prefab ID: dreadstonehat\n ※Name: Dreadstone Helm\n ※Recipe: \n\t+ 4 x: Dreadstone/dreadstone\n\t+ 4 x: Pure Horror/horrorfuel\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:marsh_bush(ID Complete)": {
        "prefix": "p+marsh_bush",
        "body": "\"marsh_bush\"",
        "description": " ※prefab ID: marsh_bush\n ※Name: Spiky Bush\n ※prefab Version: DST-632551 "
    },
    "prefab:marsh_bush(ReverseSearch)": {
        "prefix": "p+Spiky Bush",
        "body": "\"marsh_bush\"",
        "description": " ※prefab ID: marsh_bush\n ※Name: Spiky Bush\n ※prefab Version: DST-632551 "
    },
    "prefab:deerclops_eyeball(ID Complete)": {
        "prefix": "p+deerclops_eyeball",
        "body": "\"deerclops_eyeball\"",
        "description": " ※prefab ID: deerclops_eyeball\n ※Name: Deerclops Eyeball\n ※prefab Version: DST-632551 "
    },
    "prefab:deerclops_eyeball(ReverseSearch)": {
        "prefix": "p+Deerclops Eyeball",
        "body": "\"deerclops_eyeball\"",
        "description": " ※prefab ID: deerclops_eyeball\n ※Name: Deerclops Eyeball\n ※prefab Version: DST-632551 "
    },
    "prefab:critter_glomling_builder(ID Complete)": {
        "prefix": "p+critter_glomling_builder",
        "body": "\"critter_glomling_builder\"",
        "description": " ※prefab ID: critter_glomling_builder\n ※Name: Glomglom\n ※Recipe: \n\t+ 1 x: Glommer's Goop/glommerfuel\n\t+ 1 x: Taffy/taffy\n ※Required Tech: \n\t+ LV.1 : Critters/ORPHANAGE\n ※prefab Version: DST-632551 "
    },
    "prefab:critter_glomling_builder(ReverseSearch)": {
        "prefix": "p+Glomglom",
        "body": "\"critter_glomling_builder\"",
        "description": " ※prefab ID: critter_glomling_builder\n ※Name: Glomglom\n ※Recipe: \n\t+ 1 x: Glommer's Goop/glommerfuel\n\t+ 1 x: Taffy/taffy\n ※Required Tech: \n\t+ LV.1 : Critters/ORPHANAGE\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_salt_rack_item(ID Complete)": {
        "prefix": "p+quagmire_salt_rack_item",
        "body": "\"quagmire_salt_rack_item\"",
        "description": " ※prefab ID: quagmire_salt_rack_item\n ※Name: Salt Rack\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_salt_rack_item(ReverseSearch)": {
        "prefix": "p+Salt Rack",
        "body": "\"quagmire_salt_rack_item\"",
        "description": " ※prefab ID: quagmire_salt_rack_item\n ※Name: Salt Rack\n ※prefab Version: DST-632551 "
    },
    "prefab:winona_machineparts_2(ID Complete)": {
        "prefix": "p+winona_machineparts_2",
        "body": "\"winona_machineparts_2\"",
        "description": " ※prefab ID: winona_machineparts_2\n ※Name: Gizmo\n ※prefab Version: DST-632551 "
    },
    "prefab:winona_machineparts_2(ReverseSearch)": {
        "prefix": "p+Gizmo",
        "body": "\"winona_machineparts_2\"",
        "description": " ※prefab ID: winona_machineparts_2\n ※Name: Gizmo\n ※prefab Version: DST-632551 "
    },
    "prefab:lost_toy_7(ID Complete)": {
        "prefix": "p+lost_toy_7",
        "body": "\"lost_toy_7\"",
        "description": " ※prefab ID: lost_toy_7\n ※Name: Prized Ball and Cup\n ※prefab Version: DST-632551 "
    },
    "prefab:lost_toy_7(ReverseSearch)": {
        "prefix": "p+Prized Ball and Cup",
        "body": "\"lost_toy_7\"",
        "description": " ※prefab ID: lost_toy_7\n ※Name: Prized Ball and Cup\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalcannon_confetti(ID Complete)": {
        "prefix": "p+carnivalcannon_confetti",
        "body": "\"carnivalcannon_confetti\"",
        "description": " ※prefab ID: carnivalcannon_confetti\n ※Name: Confetti Cannon\n ※Recipe: \n\t+ 1 x: Confetti Cannon Kit/carnivalcannon_confetti_kit\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalcannon_confetti(ReverseSearch)": {
        "prefix": "p+Confetti Cannon",
        "body": "\"carnivalcannon_confetti\"",
        "description": " ※prefab ID: carnivalcannon_confetti\n ※Name: Confetti Cannon\n ※Recipe: \n\t+ 1 x: Confetti Cannon Kit/carnivalcannon_confetti_kit\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:cookpot(ID Complete)": {
        "prefix": "p+cookpot",
        "body": "\"cookpot\"",
        "description": " ※prefab ID: cookpot\n ※Name: Crock Pot\n ※Recipe: \n\t+ 3 x: Cut Stone/cutstone\n\t+ 6 x: Charcoal/charcoal\n\t+ 6 x: Twigs/twigs\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:cookpot(ReverseSearch)": {
        "prefix": "p+Crock Pot",
        "body": "\"cookpot\"",
        "description": " ※prefab ID: cookpot\n ※Name: Crock Pot\n ※Recipe: \n\t+ 3 x: Cut Stone/cutstone\n\t+ 6 x: Charcoal/charcoal\n\t+ 6 x: Twigs/twigs\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:bonesoup(ID Complete)": {
        "prefix": "p+bonesoup",
        "body": "\"bonesoup\"",
        "description": " ※prefab ID: bonesoup\n ※Name: Bone Bouillon\n ※prefab Version: DST-632551 "
    },
    "prefab:bonesoup(ReverseSearch)": {
        "prefix": "p+Bone Bouillon",
        "body": "\"bonesoup\"",
        "description": " ※prefab ID: bonesoup\n ※Name: Bone Bouillon\n ※prefab Version: DST-632551 "
    },
    "prefab:moonrocknugget(ID Complete)": {
        "prefix": "p+moonrocknugget",
        "body": "\"moonrocknugget\"",
        "description": " ※prefab ID: moonrocknugget\n ※Name: Moon Rock\n ※prefab Version: DST-632551 "
    },
    "prefab:moonrocknugget(ReverseSearch)": {
        "prefix": "p+Moon Rock",
        "body": "\"moonrocknugget\"",
        "description": " ※prefab ID: moonrocknugget\n ※Name: Moon Rock\n ※prefab Version: DST-632551 "
    },
    "prefab:watertree_pillar(ID Complete)": {
        "prefix": "p+watertree_pillar",
        "body": "\"watertree_pillar\"",
        "description": " ※prefab ID: watertree_pillar\n ※Name: Great Tree Trunk\n ※prefab Version: DST-632551 "
    },
    "prefab:watertree_pillar(ReverseSearch)": {
        "prefix": "p+Great Tree Trunk",
        "body": "\"watertree_pillar\"",
        "description": " ※prefab ID: watertree_pillar\n ※Name: Great Tree Trunk\n ※prefab Version: DST-632551 "
    },
    "prefab:portabletent_item(ID Complete)": {
        "prefix": "p+portabletent_item",
        "body": "\"portabletent_item\"",
        "description": " ※prefab ID: portabletent_item\n ※Name: Tent Roll\n ※Recipe: \n\t+ 1 x: Straw Roll/bedroll_straw\n\t+ 4 x: Twigs/twigs\n\t+ 2 x: Rope/rope\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:portabletent_item(ReverseSearch)": {
        "prefix": "p+Tent Roll",
        "body": "\"portabletent_item\"",
        "description": " ※prefab ID: portabletent_item\n ※Name: Tent Roll\n ※Recipe: \n\t+ 1 x: Straw Roll/bedroll_straw\n\t+ 4 x: Twigs/twigs\n\t+ 2 x: Rope/rope\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:victorian_blueprint(ID Complete)": {
        "prefix": "p+victorian_blueprint",
        "body": "\"victorian_blueprint\"",
        "description": " ※prefab ID: victorian_blueprint\n ※Name: Victorian Costume Pattern\n ※prefab Version: DST-632551 "
    },
    "prefab:victorian_blueprint(ReverseSearch)": {
        "prefix": "p+Victorian Costume Pattern",
        "body": "\"victorian_blueprint\"",
        "description": " ※prefab ID: victorian_blueprint\n ※Name: Victorian Costume Pattern\n ※prefab Version: DST-632551 "
    },
    "prefab:dug_berrybush2(ID Complete)": {
        "prefix": "p+dug_berrybush2",
        "body": "\"dug_berrybush2\"",
        "description": " ※prefab ID: dug_berrybush2\n ※Name: Berry Bush\n ※prefab Version: DST-632551 "
    },
    "prefab:dug_berrybush2(ReverseSearch)": {
        "prefix": "p+Berry Bush",
        "body": "\"dug_berrybush2\"",
        "description": " ※prefab ID: dug_berrybush2\n ※Name: Berry Bush\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_coin1(ID Complete)": {
        "prefix": "p+quagmire_coin1",
        "body": "\"quagmire_coin1\"",
        "description": " ※prefab ID: quagmire_coin1\n ※Name: Old Coin\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_coin1(ReverseSearch)": {
        "prefix": "p+Old Coin",
        "body": "\"quagmire_coin1\"",
        "description": " ※prefab ID: quagmire_coin1\n ※Name: Old Coin\n ※prefab Version: DST-632551 "
    },
    "prefab:deciduous_root(ID Complete)": {
        "prefix": "p+deciduous_root",
        "body": "\"deciduous_root\"",
        "description": " ※prefab ID: deciduous_root\n ※Name: Birchnut Tree\n ※prefab Version: DST-632551 "
    },
    "prefab:deciduous_root(ReverseSearch)": {
        "prefix": "p+Birchnut Tree",
        "body": "\"deciduous_root\"",
        "description": " ※prefab ID: deciduous_root\n ※Name: Birchnut Tree\n ※prefab Version: DST-632551 "
    },
    "prefab:razor(ID Complete)": {
        "prefix": "p+razor",
        "body": "\"razor\"",
        "description": " ※prefab ID: razor\n ※Name: Razor\n ※Recipe: \n\t+ 2 x: Twigs/twigs\n\t+ 2 x: Flint/flint\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:razor(ReverseSearch)": {
        "prefix": "p+Razor",
        "body": "\"razor\"",
        "description": " ※prefab ID: razor\n ※Name: Razor\n ※Recipe: \n\t+ 2 x: Twigs/twigs\n\t+ 2 x: Flint/flint\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_medium_5(ID Complete)": {
        "prefix": "p+oceanfish_medium_5",
        "body": "\"oceanfish_medium_5\"",
        "description": " ※prefab ID: oceanfish_medium_5\n ※Name: Corn Cod\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_medium_5(ReverseSearch)": {
        "prefix": "p+Corn Cod",
        "body": "\"oceanfish_medium_5\"",
        "description": " ※prefab ID: oceanfish_medium_5\n ※Name: Corn Cod\n ※prefab Version: DST-632551 "
    },
    "prefab:toadstool_hole(ID Complete)": {
        "prefix": "p+toadstool_hole",
        "body": "\"toadstool_hole\"",
        "description": " ※prefab ID: toadstool_hole\n ※Name: Hole\n ※prefab Version: DST-632551 "
    },
    "prefab:toadstool_hole(ReverseSearch)": {
        "prefix": "p+Hole",
        "body": "\"toadstool_hole\"",
        "description": " ※prefab ID: toadstool_hole\n ※Name: Hole\n ※prefab Version: DST-632551 "
    },
    "prefab:tentacle_garden(ID Complete)": {
        "prefix": "p+tentacle_garden",
        "body": "\"tentacle_garden\"",
        "description": " ※prefab ID: tentacle_garden\n ※Name: Big Tentacle\n ※prefab Version: DST-632551 "
    },
    "prefab:tentacle_garden(ReverseSearch)": {
        "prefix": "p+Big Tentacle",
        "body": "\"tentacle_garden\"",
        "description": " ※prefab ID: tentacle_garden\n ※Name: Big Tentacle\n ※prefab Version: DST-632551 "
    },
    "prefab:toadstool_dark(ID Complete)": {
        "prefix": "p+toadstool_dark",
        "body": "\"toadstool_dark\"",
        "description": " ※prefab ID: toadstool_dark\n ※Name: Misery Toadstool\n ※prefab Version: DST-632551 "
    },
    "prefab:toadstool_dark(ReverseSearch)": {
        "prefix": "p+Misery Toadstool",
        "body": "\"toadstool_dark\"",
        "description": " ※prefab ID: toadstool_dark\n ※Name: Misery Toadstool\n ※prefab Version: DST-632551 "
    },
    "prefab:lost_toy_43(ID Complete)": {
        "prefix": "p+lost_toy_43",
        "body": "\"lost_toy_43\"",
        "description": " ※prefab ID: lost_toy_43\n ※Name: Beloved Crocodile Toy\n ※prefab Version: DST-632551 "
    },
    "prefab:lost_toy_43(ReverseSearch)": {
        "prefix": "p+Beloved Crocodile Toy",
        "body": "\"lost_toy_43\"",
        "description": " ※prefab ID: lost_toy_43\n ※Name: Beloved Crocodile Toy\n ※prefab Version: DST-632551 "
    },
    "prefab:daywalker(ID Complete)": {
        "prefix": "p+daywalker",
        "body": "\"daywalker\"",
        "description": " ※prefab ID: daywalker\n ※Name: Nightmare Werepig\n ※prefab Version: DST-632551 "
    },
    "prefab:daywalker(ReverseSearch)": {
        "prefix": "p+Nightmare Werepig",
        "body": "\"daywalker\"",
        "description": " ※prefab ID: daywalker\n ※Name: Nightmare Werepig\n ※prefab Version: DST-632551 "
    },
    "prefab:succulent_potted(ID Complete)": {
        "prefix": "p+succulent_potted",
        "body": "\"succulent_potted\"",
        "description": " ※prefab ID: succulent_potted\n ※Name: Potted Succulent\n ※Recipe: \n\t+ 2 x: Succulent/succulent_picked\n\t+ 1 x: Cut Stone/cutstone\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:succulent_potted(ReverseSearch)": {
        "prefix": "p+Potted Succulent",
        "body": "\"succulent_potted\"",
        "description": " ※prefab ID: succulent_potted\n ※Name: Potted Succulent\n ※Recipe: \n\t+ 2 x: Succulent/succulent_picked\n\t+ 1 x: Cut Stone/cutstone\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:toadstool_cap_dark(ID Complete)": {
        "prefix": "p+toadstool_cap_dark",
        "body": "\"toadstool_cap_dark\"",
        "description": " ※prefab ID: toadstool_cap_dark\n ※Name: Misery Toadstool\n ※prefab Version: DST-632551 "
    },
    "prefab:toadstool_cap_dark(ReverseSearch)": {
        "prefix": "p+Misery Toadstool",
        "body": "\"toadstool_cap_dark\"",
        "description": " ※prefab ID: toadstool_cap_dark\n ※Name: Misery Toadstool\n ※prefab Version: DST-632551 "
    },
    "prefab:ruins_rubble(ID Complete)": {
        "prefix": "p+ruins_rubble",
        "body": "\"ruins_rubble\"",
        "description": " ※prefab ID: ruins_rubble\n ※Name: Broken Relic\n ※prefab Version: DST-632551 "
    },
    "prefab:ruins_rubble(ReverseSearch)": {
        "prefix": "p+Broken Relic",
        "body": "\"ruins_rubble\"",
        "description": " ※prefab ID: ruins_rubble\n ※Name: Broken Relic\n ※prefab Version: DST-632551 "
    },
    "prefab:turfcraftingstation(ID Complete)": {
        "prefix": "p+turfcraftingstation",
        "body": "\"turfcraftingstation\"",
        "description": " ※prefab ID: turfcraftingstation\n ※Name: Terra Firma Tamper\n ※Recipe: \n\t+ 1 x: Thulecite/thulecite\n\t+ 3 x: Cut Stone/cutstone\n\t+ 1 x: Wet Goop/wetgoop\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:turfcraftingstation(ReverseSearch)": {
        "prefix": "p+Terra Firma Tamper",
        "body": "\"turfcraftingstation\"",
        "description": " ※prefab ID: turfcraftingstation\n ※Name: Terra Firma Tamper\n ※Recipe: \n\t+ 1 x: Thulecite/thulecite\n\t+ 3 x: Cut Stone/cutstone\n\t+ 1 x: Wet Goop/wetgoop\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:lost_toy_42(ID Complete)": {
        "prefix": "p+lost_toy_42",
        "body": "\"lost_toy_42\"",
        "description": " ※prefab ID: lost_toy_42\n ※Name: Misplaced Toy Cobra\n ※prefab Version: DST-632551 "
    },
    "prefab:lost_toy_42(ReverseSearch)": {
        "prefix": "p+Misplaced Toy Cobra",
        "body": "\"lost_toy_42\"",
        "description": " ※prefab ID: lost_toy_42\n ※Name: Misplaced Toy Cobra\n ※prefab Version: DST-632551 "
    },
    "prefab:winona(ID Complete)": {
        "prefix": "p+winona",
        "body": "\"winona\"",
        "description": " ※prefab ID: winona\n ※Name: Winona\n ※prefab Version: DST-632551 "
    },
    "prefab:winona(ReverseSearch)": {
        "prefix": "p+Winona",
        "body": "\"winona\"",
        "description": " ※prefab ID: winona\n ※Name: Winona\n ※prefab Version: DST-632551 "
    },
    "prefab:teleportato_crank(ID Complete)": {
        "prefix": "p+teleportato_crank",
        "body": "\"teleportato_crank\"",
        "description": " ※prefab ID: teleportato_crank\n ※Name: Crank Thing\n ※prefab Version: DST-632551 "
    },
    "prefab:teleportato_crank(ReverseSearch)": {
        "prefix": "p+Crank Thing",
        "body": "\"teleportato_crank\"",
        "description": " ※prefab ID: teleportato_crank\n ※Name: Crank Thing\n ※prefab Version: DST-632551 "
    },
    "prefab:armordreadstone(ID Complete)": {
        "prefix": "p+armordreadstone",
        "body": "\"armordreadstone\"",
        "description": " ※prefab ID: armordreadstone\n ※Name: Dreadstone Armor\n ※Recipe: \n\t+ 6 x: Dreadstone/dreadstone\n\t+ 4 x: Pure Horror/horrorfuel\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:armordreadstone(ReverseSearch)": {
        "prefix": "p+Dreadstone Armor",
        "body": "\"armordreadstone\"",
        "description": " ※prefab ID: armordreadstone\n ※Name: Dreadstone Armor\n ※Recipe: \n\t+ 6 x: Dreadstone/dreadstone\n\t+ 4 x: Pure Horror/horrorfuel\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:wetpaper(ID Complete)": {
        "prefix": "p+wetpaper",
        "body": "\"wetpaper\"",
        "description": " ※prefab ID: wetpaper\n ※Name: Paper\n ※prefab Version: DST-632551 "
    },
    "prefab:wetpaper(ReverseSearch)": {
        "prefix": "p+Paper",
        "body": "\"wetpaper\"",
        "description": " ※prefab ID: wetpaper\n ※Name: Paper\n ※prefab Version: DST-632551 "
    },
    "prefab:yotb_post_item(ID Complete)": {
        "prefix": "p+yotb_post_item",
        "body": "\"yotb_post_item\"",
        "description": " ※prefab ID: yotb_post_item\n ※Name: Beefalo Stage\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 1 x: Gold Nugget/goldnugget\n ※Required Tech: \n\t+ LV.3 : /BEEFOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:yotb_post_item(ReverseSearch)": {
        "prefix": "p+Beefalo Stage",
        "body": "\"yotb_post_item\"",
        "description": " ※prefab ID: yotb_post_item\n ※Name: Beefalo Stage\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 1 x: Gold Nugget/goldnugget\n ※Required Tech: \n\t+ LV.3 : /BEEFOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:trophyscale_oversizedveggies(ID Complete)": {
        "prefix": "p+trophyscale_oversizedveggies",
        "body": "\"trophyscale_oversizedveggies\"",
        "description": " ※prefab ID: trophyscale_oversizedveggies\n ※Name: Produce Scale\n ※Recipe: \n\t+ 4 x: Boards/boards\n\t+ 4 x: Cut Grass/cutgrass\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:trophyscale_oversizedveggies(ReverseSearch)": {
        "prefix": "p+Produce Scale",
        "body": "\"trophyscale_oversizedveggies\"",
        "description": " ※prefab ID: trophyscale_oversizedveggies\n ※Name: Produce Scale\n ※Recipe: \n\t+ 4 x: Boards/boards\n\t+ 4 x: Cut Grass/cutgrass\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:ghostlyelixir_attack(ID Complete)": {
        "prefix": "p+ghostlyelixir_attack",
        "body": "\"ghostlyelixir_attack\"",
        "description": " ※prefab ID: ghostlyelixir_attack\n ※Name: Nightshade Nostrum\n ※Recipe: \n\t+ 1 x: Stinger/stinger\n\t+ 3 x: Mourning Glory/ghostflower\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:ghostlyelixir_attack(ReverseSearch)": {
        "prefix": "p+Nightshade Nostrum",
        "body": "\"ghostlyelixir_attack\"",
        "description": " ※prefab ID: ghostlyelixir_attack\n ※Name: Nightshade Nostrum\n ※Recipe: \n\t+ 1 x: Stinger/stinger\n\t+ 3 x: Mourning Glory/ghostflower\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalgame_memory_kit(ID Complete)": {
        "prefix": "p+carnivalgame_memory_kit",
        "body": "\"carnivalgame_memory_kit\"",
        "description": " ※prefab ID: carnivalgame_memory_kit\n ※Name: Eggs in a Basket Kit\n ※Recipe: \n\t+ 1 x: Gold Nugget/goldnugget\n\t+ 3 x: Seeds/seeds\n ※Required Tech: \n\t+ LV.3 : Cawnival Creation/CARNIVAL_HOSTSHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalgame_memory_kit(ReverseSearch)": {
        "prefix": "p+Eggs in a Basket Kit",
        "body": "\"carnivalgame_memory_kit\"",
        "description": " ※prefab ID: carnivalgame_memory_kit\n ※Name: Eggs in a Basket Kit\n ※Recipe: \n\t+ 1 x: Gold Nugget/goldnugget\n\t+ 3 x: Seeds/seeds\n ※Required Tech: \n\t+ LV.3 : Cawnival Creation/CARNIVAL_HOSTSHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:wortox_soul(ID Complete)": {
        "prefix": "p+wortox_soul",
        "body": "\"wortox_soul\"",
        "description": " ※prefab ID: wortox_soul\n ※Name: Soul\n ※prefab Version: DST-632551 "
    },
    "prefab:wortox_soul(ReverseSearch)": {
        "prefix": "p+Soul",
        "body": "\"wortox_soul\"",
        "description": " ※prefab ID: wortox_soul\n ※Name: Soul\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivaldecor_figure_common(ID Complete)": {
        "prefix": "p+carnivaldecor_figure_common",
        "body": "\"carnivaldecor_figure_common\"",
        "description": " ※prefab ID: carnivaldecor_figure_common\n ※Name: Common Cawnival Statuette\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivaldecor_figure_common(ReverseSearch)": {
        "prefix": "p+Common Cawnival Statuette",
        "body": "\"carnivaldecor_figure_common\"",
        "description": " ※prefab ID: carnivaldecor_figure_common\n ※Name: Common Cawnival Statuette\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_claywarg(ID Complete)": {
        "prefix": "p+chesspiece_claywarg",
        "body": "\"chesspiece_claywarg\"",
        "description": " ※prefab ID: chesspiece_claywarg\n ※Name: Varg Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_claywarg(ReverseSearch)": {
        "prefix": "p+Varg Figure",
        "body": "\"chesspiece_claywarg\"",
        "description": " ※prefab ID: chesspiece_claywarg\n ※Name: Varg Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_36(ID Complete)": {
        "prefix": "p+trinket_36",
        "body": "\"trinket_36\"",
        "description": " ※prefab ID: trinket_36\n ※Name: Faux Fangs\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_36(ReverseSearch)": {
        "prefix": "p+Faux Fangs",
        "body": "\"trinket_36\"",
        "description": " ※prefab ID: trinket_36\n ※Name: Faux Fangs\n ※prefab Version: DST-632551 "
    },
    "prefab:battlesong_durability(ID Complete)": {
        "prefix": "p+battlesong_durability",
        "body": "\"battlesong_durability\"",
        "description": " ※prefab ID: battlesong_durability\n ※Name: Weaponized Warble\n ※Recipe: \n\t+ 1 x: Papyrus/papyrus\n\t+ 1 x: Feather Pencil/featherpencil\n\t+ 1 x: Sewing Kit/sewing_kit\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:battlesong_durability(ReverseSearch)": {
        "prefix": "p+Weaponized Warble",
        "body": "\"battlesong_durability\"",
        "description": " ※prefab ID: battlesong_durability\n ※Name: Weaponized Warble\n ※Recipe: \n\t+ 1 x: Papyrus/papyrus\n\t+ 1 x: Feather Pencil/featherpencil\n\t+ 1 x: Sewing Kit/sewing_kit\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:boatrace_seastack_monkey_throwable_deploykit(ID Complete)": {
        "prefix": "p+boatrace_seastack_monkey_throwable_deploykit",
        "body": "\"boatrace_seastack_monkey_throwable_deploykit\"",
        "description": " ※prefab ID: boatrace_seastack_monkey_throwable_deploykit\n ※Name: Thorny Buoy Kit\n ※prefab Version: DST-632551 "
    },
    "prefab:boatrace_seastack_monkey_throwable_deploykit(ReverseSearch)": {
        "prefix": "p+Thorny Buoy Kit",
        "body": "\"boatrace_seastack_monkey_throwable_deploykit\"",
        "description": " ※prefab ID: boatrace_seastack_monkey_throwable_deploykit\n ※Name: Thorny Buoy Kit\n ※prefab Version: DST-632551 "
    },
    "prefab:deserthat(ID Complete)": {
        "prefix": "p+deserthat",
        "body": "\"deserthat\"",
        "description": " ※prefab ID: deserthat\n ※Name: Desert Goggles\n ※Recipe: \n\t+ 1 x: Fashion Goggles/goggleshat\n\t+ 1 x: Pig Skin/pigskin\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:deserthat(ReverseSearch)": {
        "prefix": "p+Desert Goggles",
        "body": "\"deserthat\"",
        "description": " ※prefab ID: deserthat\n ※Name: Desert Goggles\n ※Recipe: \n\t+ 1 x: Fashion Goggles/goggleshat\n\t+ 1 x: Pig Skin/pigskin\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:twiggy_nut_sapling(ID Complete)": {
        "prefix": "p+twiggy_nut_sapling",
        "body": "\"twiggy_nut_sapling\"",
        "description": " ※prefab ID: twiggy_nut_sapling\n ※Name: Twiggy Sapling\n ※prefab Version: DST-632551 "
    },
    "prefab:twiggy_nut_sapling(ReverseSearch)": {
        "prefix": "p+Twiggy Sapling",
        "body": "\"twiggy_nut_sapling\"",
        "description": " ※prefab ID: twiggy_nut_sapling\n ※Name: Twiggy Sapling\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_rook_builder(ID Complete)": {
        "prefix": "p+chesspiece_rook_builder",
        "body": "\"chesspiece_rook_builder\"",
        "description": " ※prefab ID: chesspiece_rook_builder\n ※Name: Rook Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_rook_builder(ReverseSearch)": {
        "prefix": "p+Rook Figure",
        "body": "\"chesspiece_rook_builder\"",
        "description": " ※prefab ID: chesspiece_rook_builder\n ※Name: Rook Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:dragonflyfurnace(ID Complete)": {
        "prefix": "p+dragonflyfurnace",
        "body": "\"dragonflyfurnace\"",
        "description": " ※prefab ID: dragonflyfurnace\n ※Name: Scaled Furnace\n ※Recipe: \n\t+ 1 x: Scales/dragon_scales\n\t+ 2 x: Red Gem/redgem\n\t+ 10 x: Charcoal/charcoal\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:dragonflyfurnace(ReverseSearch)": {
        "prefix": "p+Scaled Furnace",
        "body": "\"dragonflyfurnace\"",
        "description": " ※prefab ID: dragonflyfurnace\n ※Name: Scaled Furnace\n ※Recipe: \n\t+ 1 x: Scales/dragon_scales\n\t+ 2 x: Red Gem/redgem\n\t+ 10 x: Charcoal/charcoal\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_pipe_builder(ID Complete)": {
        "prefix": "p+chesspiece_pipe_builder",
        "body": "\"chesspiece_pipe_builder\"",
        "description": " ※prefab ID: chesspiece_pipe_builder\n ※Name: Bubble Pipe Carving\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.1 : Sculptures/SCULPTING\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_pipe_builder(ReverseSearch)": {
        "prefix": "p+Bubble Pipe Carving",
        "body": "\"chesspiece_pipe_builder\"",
        "description": " ※prefab ID: chesspiece_pipe_builder\n ※Name: Bubble Pipe Carving\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.1 : Sculptures/SCULPTING\n ※prefab Version: DST-632551 "
    },
    "prefab:supertacklecontainer(ID Complete)": {
        "prefix": "p+supertacklecontainer",
        "body": "\"supertacklecontainer\"",
        "description": " ※prefab ID: supertacklecontainer\n ※Name: Spectackler Box\n ※Recipe: \n\t+ 3 x: Cookie Cutter Shell/cookiecuttershell\n\t+ 2 x: Rope/rope\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:supertacklecontainer(ReverseSearch)": {
        "prefix": "p+Spectackler Box",
        "body": "\"supertacklecontainer\"",
        "description": " ※prefab ID: supertacklecontainer\n ※Name: Spectackler Box\n ※Recipe: \n\t+ 3 x: Cookie Cutter Shell/cookiecuttershell\n\t+ 2 x: Rope/rope\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:fertilizer(ID Complete)": {
        "prefix": "p+fertilizer",
        "body": "\"fertilizer\"",
        "description": " ※prefab ID: fertilizer\n ※Name: Bucket-o-poop\n ※Recipe: \n\t+ 3 x: Manure/poop\n\t+ 2 x: Bone Shards/boneshard\n\t+ 4 x: Log/log\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:fertilizer(ReverseSearch)": {
        "prefix": "p+Bucket-o-poop",
        "body": "\"fertilizer\"",
        "description": " ※prefab ID: fertilizer\n ※Name: Bucket-o-poop\n ※Recipe: \n\t+ 3 x: Manure/poop\n\t+ 2 x: Bone Shards/boneshard\n\t+ 4 x: Log/log\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:greenamulet(ID Complete)": {
        "prefix": "p+greenamulet",
        "body": "\"greenamulet\"",
        "description": " ※prefab ID: greenamulet\n ※Name: Construction Amulet\n ※Recipe: \n\t+ 2 x: Thulecite/thulecite\n\t+ 3 x: Nightmare Fuel/nightmarefuel\n\t+ 1 x: Green Gem/greengem\n ※Required Tech: \n\t+ LV.2 : Ancient/ANCIENT\n ※prefab Version: DST-632551 "
    },
    "prefab:greenamulet(ReverseSearch)": {
        "prefix": "p+Construction Amulet",
        "body": "\"greenamulet\"",
        "description": " ※prefab ID: greenamulet\n ※Name: Construction Amulet\n ※Recipe: \n\t+ 2 x: Thulecite/thulecite\n\t+ 3 x: Nightmare Fuel/nightmarefuel\n\t+ 1 x: Green Gem/greengem\n ※Required Tech: \n\t+ LV.2 : Ancient/ANCIENT\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_claywarg_builder(ID Complete)": {
        "prefix": "p+chesspiece_claywarg_builder",
        "body": "\"chesspiece_claywarg_builder\"",
        "description": " ※prefab ID: chesspiece_claywarg_builder\n ※Name: Varg Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_claywarg_builder(ReverseSearch)": {
        "prefix": "p+Varg Figure",
        "body": "\"chesspiece_claywarg_builder\"",
        "description": " ※prefab ID: chesspiece_claywarg_builder\n ※Name: Varg Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:charlieresidue(ID Complete)": {
        "prefix": "p+charlieresidue",
        "body": "\"charlieresidue\"",
        "description": " ※prefab ID: charlieresidue\n ※Name: Dark Vestige\n ※prefab Version: DST-632551 "
    },
    "prefab:charlieresidue(ReverseSearch)": {
        "prefix": "p+Dark Vestige",
        "body": "\"charlieresidue\"",
        "description": " ※prefab ID: charlieresidue\n ※Name: Dark Vestige\n ※prefab Version: DST-632551 "
    },
    "prefab:merm(ID Complete)": {
        "prefix": "p+merm",
        "body": "\"merm\"",
        "description": " ※prefab ID: merm\n ※Name: Merm\n ※prefab Version: DST-632551 "
    },
    "prefab:merm(ReverseSearch)": {
        "prefix": "p+Merm",
        "body": "\"merm\"",
        "description": " ※prefab ID: merm\n ※Name: Merm\n ※prefab Version: DST-632551 "
    },
    "prefab:corn_cooked(ID Complete)": {
        "prefix": "p+corn_cooked",
        "body": "\"corn_cooked\"",
        "description": " ※prefab ID: corn_cooked\n ※Name: Popcorn\n ※prefab Version: DST-632551 "
    },
    "prefab:corn_cooked(ReverseSearch)": {
        "prefix": "p+Popcorn",
        "body": "\"corn_cooked\"",
        "description": " ※prefab ID: corn_cooked\n ※Name: Popcorn\n ※prefab Version: DST-632551 "
    },
    "prefab:foliage(ID Complete)": {
        "prefix": "p+foliage",
        "body": "\"foliage\"",
        "description": " ※prefab ID: foliage\n ※Name: Foliage\n ※prefab Version: DST-632551 "
    },
    "prefab:foliage(ReverseSearch)": {
        "prefix": "p+Foliage",
        "body": "\"foliage\"",
        "description": " ※prefab ID: foliage\n ※Name: Foliage\n ※prefab Version: DST-632551 "
    },
    "prefab:steeringwheel(ID Complete)": {
        "prefix": "p+steeringwheel",
        "body": "\"steeringwheel\"",
        "description": " ※prefab ID: steeringwheel\n ※Name: Steering Wheel\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 1 x: Rope/rope\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:steeringwheel(ReverseSearch)": {
        "prefix": "p+Steering Wheel",
        "body": "\"steeringwheel\"",
        "description": " ※prefab ID: steeringwheel\n ※Name: Steering Wheel\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 1 x: Rope/rope\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_manrabbit_builder(ID Complete)": {
        "prefix": "p+chesspiece_manrabbit_builder",
        "body": "\"chesspiece_manrabbit_builder\"",
        "description": " ※prefab ID: chesspiece_manrabbit_builder\n ※Name: Bunnyman Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_manrabbit_builder(ReverseSearch)": {
        "prefix": "p+Bunnyman Figure",
        "body": "\"chesspiece_manrabbit_builder\"",
        "description": " ※prefab ID: chesspiece_manrabbit_builder\n ※Name: Bunnyman Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:festive_blueprint(ID Complete)": {
        "prefix": "p+festive_blueprint",
        "body": "\"festive_blueprint\"",
        "description": " ※prefab ID: festive_blueprint\n ※Name: Festive Costume Pattern\n ※prefab Version: DST-632551 "
    },
    "prefab:festive_blueprint(ReverseSearch)": {
        "prefix": "p+Festive Costume Pattern",
        "body": "\"festive_blueprint\"",
        "description": " ※prefab ID: festive_blueprint\n ※Name: Festive Costume Pattern\n ※prefab Version: DST-632551 "
    },
    "prefab:evergreen(ID Complete)": {
        "prefix": "p+evergreen",
        "body": "\"evergreen\"",
        "description": " ※prefab ID: evergreen\n ※Name: Evergreen\n ※prefab Version: DST-632551 "
    },
    "prefab:evergreen(ReverseSearch)": {
        "prefix": "p+Evergreen",
        "body": "\"evergreen\"",
        "description": " ※prefab ID: evergreen\n ※Name: Evergreen\n ※prefab Version: DST-632551 "
    },
    "prefab:tentaclespots(ID Complete)": {
        "prefix": "p+tentaclespots",
        "body": "\"tentaclespots\"",
        "description": " ※prefab ID: tentaclespots\n ※Name: Tentacle Spots\n ※prefab Version: DST-632551 "
    },
    "prefab:tentaclespots(ReverseSearch)": {
        "prefix": "p+Tentacle Spots",
        "body": "\"tentaclespots\"",
        "description": " ※prefab ID: tentaclespots\n ※Name: Tentacle Spots\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_kitcoon_sketch(ID Complete)": {
        "prefix": "p+chesspiece_kitcoon_sketch",
        "body": "\"chesspiece_kitcoon_sketch\"",
        "description": " ※prefab ID: chesspiece_kitcoon_sketch\n ※Name: Kitcoon Figure Sketch\n ※Recipe: \n\t+ 8 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /CATCOONOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_kitcoon_sketch(ReverseSearch)": {
        "prefix": "p+Kitcoon Figure Sketch",
        "body": "\"chesspiece_kitcoon_sketch\"",
        "description": " ※prefab ID: chesspiece_kitcoon_sketch\n ※Name: Kitcoon Figure Sketch\n ※Recipe: \n\t+ 8 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /CATCOONOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:shovel(ID Complete)": {
        "prefix": "p+shovel",
        "body": "\"shovel\"",
        "description": " ※prefab ID: shovel\n ※Name: Shovel\n ※Recipe: \n\t+ 2 x: Twigs/twigs\n\t+ 2 x: Flint/flint\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:shovel(ReverseSearch)": {
        "prefix": "p+Shovel",
        "body": "\"shovel\"",
        "description": " ※prefab ID: shovel\n ※Name: Shovel\n ※Recipe: \n\t+ 2 x: Twigs/twigs\n\t+ 2 x: Flint/flint\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_manrabbit_sketch(ID Complete)": {
        "prefix": "p+chesspiece_manrabbit_sketch",
        "body": "\"chesspiece_manrabbit_sketch\"",
        "description": " ※prefab ID: chesspiece_manrabbit_sketch\n ※Name: Bunnyman Figure Sketch\n ※Recipe: \n\t+ 8 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /RABBITOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_manrabbit_sketch(ReverseSearch)": {
        "prefix": "p+Bunnyman Figure Sketch",
        "body": "\"chesspiece_manrabbit_sketch\"",
        "description": " ※prefab ID: chesspiece_manrabbit_sketch\n ※Name: Bunnyman Figure Sketch\n ※Recipe: \n\t+ 8 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /RABBITOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:stalker(ID Complete)": {
        "prefix": "p+stalker",
        "body": "\"stalker\"",
        "description": " ※prefab ID: stalker\n ※Name: Reanimated Skeleton\n ※prefab Version: DST-632551 "
    },
    "prefab:stalker(ReverseSearch)": {
        "prefix": "p+Reanimated Skeleton",
        "body": "\"stalker\"",
        "description": " ※prefab ID: stalker\n ※Name: Reanimated Skeleton\n ※prefab Version: DST-632551 "
    },
    "prefab:bathbomb_blueprint(ID Complete)": {
        "prefix": "p+bathbomb_blueprint",
        "body": "\"bathbomb_blueprint\"",
        "description": " ※prefab ID: bathbomb_blueprint\n ※Name: Bath Bomb Blueprint\n ※prefab Version: DST-632551 "
    },
    "prefab:bathbomb_blueprint(ReverseSearch)": {
        "prefix": "p+Bath Bomb Blueprint",
        "body": "\"bathbomb_blueprint\"",
        "description": " ※prefab ID: bathbomb_blueprint\n ※Name: Bath Bomb Blueprint\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_43(ID Complete)": {
        "prefix": "p+trinket_43",
        "body": "\"trinket_43\"",
        "description": " ※prefab ID: trinket_43\n ※Name: Crocodile Toy\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_43(ReverseSearch)": {
        "prefix": "p+Crocodile Toy",
        "body": "\"trinket_43\"",
        "description": " ※prefab ID: trinket_43\n ※Name: Crocodile Toy\n ※prefab Version: DST-632551 "
    },
    "prefab:krampus_sack(ID Complete)": {
        "prefix": "p+krampus_sack",
        "body": "\"krampus_sack\"",
        "description": " ※prefab ID: krampus_sack\n ※Name: Krampus Sack\n ※prefab Version: DST-632551 "
    },
    "prefab:krampus_sack(ReverseSearch)": {
        "prefix": "p+Krampus Sack",
        "body": "\"krampus_sack\"",
        "description": " ※prefab ID: krampus_sack\n ※Name: Krampus Sack\n ※prefab Version: DST-632551 "
    },
    "prefab:wintercooking_latkes(ID Complete)": {
        "prefix": "p+wintercooking_latkes",
        "body": "\"wintercooking_latkes\"",
        "description": " ※prefab ID: wintercooking_latkes\n ※Name: Latkes\n ※Recipe: \n\t+ 1 x: Holiday Cheer/wintersfeastfuel\n\t+ 1 x: Twigs/twigs\n\t+ 1 x: Cut Grass/cutgrass\n ※Required Tech: \n\t+ LV.1 : Feast/WINTERSFEASTCOOKING\n ※prefab Version: DST-632551 "
    },
    "prefab:wintercooking_latkes(ReverseSearch)": {
        "prefix": "p+Latkes",
        "body": "\"wintercooking_latkes\"",
        "description": " ※prefab ID: wintercooking_latkes\n ※Name: Latkes\n ※Recipe: \n\t+ 1 x: Holiday Cheer/wintersfeastfuel\n\t+ 1 x: Twigs/twigs\n\t+ 1 x: Cut Grass/cutgrass\n ※Required Tech: \n\t+ LV.1 : Feast/WINTERSFEASTCOOKING\n ※prefab Version: DST-632551 "
    },
    "prefab:palmcone_seed(ID Complete)": {
        "prefix": "p+palmcone_seed",
        "body": "\"palmcone_seed\"",
        "description": " ※prefab ID: palmcone_seed\n ※Name: Palmcone Sprout\n ※prefab Version: DST-632551 "
    },
    "prefab:palmcone_seed(ReverseSearch)": {
        "prefix": "p+Palmcone Sprout",
        "body": "\"palmcone_seed\"",
        "description": " ※prefab ID: palmcone_seed\n ※Name: Palmcone Sprout\n ※prefab Version: DST-632551 "
    },
    "prefab:anchor_sketch(ID Complete)": {
        "prefix": "p+anchor_sketch",
        "body": "\"anchor_sketch\"",
        "description": " ※prefab ID: anchor_sketch\n ※Name: 'Moon' Sketch\n ※prefab Version: DST-632551 "
    },
    "prefab:anchor_sketch(ReverseSearch)": {
        "prefix": "p+'Moon' Sketch",
        "body": "\"anchor_sketch\"",
        "description": " ※prefab ID: anchor_sketch\n ※Name: 'Moon' Sketch\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_elemental(ID Complete)": {
        "prefix": "p+lavaarena_elemental",
        "body": "\"lavaarena_elemental\"",
        "description": " ※prefab ID: lavaarena_elemental\n ※Name: Magma Golem\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_elemental(ReverseSearch)": {
        "prefix": "p+Magma Golem",
        "body": "\"lavaarena_elemental\"",
        "description": " ※prefab ID: lavaarena_elemental\n ※Name: Magma Golem\n ※prefab Version: DST-632551 "
    },
    "prefab:ancient_altar(ID Complete)": {
        "prefix": "p+ancient_altar",
        "body": "\"ancient_altar\"",
        "description": " ※prefab ID: ancient_altar\n ※Name: Ancient Pseudoscience Station\n ※prefab Version: DST-632551 "
    },
    "prefab:ancient_altar(ReverseSearch)": {
        "prefix": "p+Ancient Pseudoscience Station",
        "body": "\"ancient_altar\"",
        "description": " ※prefab ID: ancient_altar\n ※Name: Ancient Pseudoscience Station\n ※prefab Version: DST-632551 "
    },
    "prefab:robot_blueprint(ID Complete)": {
        "prefix": "p+robot_blueprint",
        "body": "\"robot_blueprint\"",
        "description": " ※prefab ID: robot_blueprint\n ※Name: Ironclad Costume Pattern\n ※prefab Version: DST-632551 "
    },
    "prefab:robot_blueprint(ReverseSearch)": {
        "prefix": "p+Ironclad Costume Pattern",
        "body": "\"robot_blueprint\"",
        "description": " ※prefab ID: robot_blueprint\n ※Name: Ironclad Costume Pattern\n ※prefab Version: DST-632551 "
    },
    "prefab:halloweencandy_4(ID Complete)": {
        "prefix": "p+halloweencandy_4",
        "body": "\"halloweencandy_4\"",
        "description": " ※prefab ID: halloweencandy_4\n ※Name: Gummy Spider\n ※prefab Version: DST-632551 "
    },
    "prefab:halloweencandy_4(ReverseSearch)": {
        "prefix": "p+Gummy Spider",
        "body": "\"halloweencandy_4\"",
        "description": " ※prefab ID: halloweencandy_4\n ※Name: Gummy Spider\n ※prefab Version: DST-632551 "
    },
    "prefab:fossilspike2(ID Complete)": {
        "prefix": "p+fossilspike2",
        "body": "\"fossilspike2\"",
        "description": " ※prefab ID: fossilspike2\n ※Name: Fossil Spike\n ※prefab Version: DST-632551 "
    },
    "prefab:fossilspike2(ReverseSearch)": {
        "prefix": "p+Fossil Spike",
        "body": "\"fossilspike2\"",
        "description": " ※prefab ID: fossilspike2\n ※Name: Fossil Spike\n ※prefab Version: DST-632551 "
    },
    "prefab:polly_rogers(ID Complete)": {
        "prefix": "p+polly_rogers",
        "body": "\"polly_rogers\"",
        "description": " ※prefab ID: polly_rogers\n ※Name: Polly Roger\n ※prefab Version: DST-632551 "
    },
    "prefab:polly_rogers(ReverseSearch)": {
        "prefix": "p+Polly Roger",
        "body": "\"polly_rogers\"",
        "description": " ※prefab ID: polly_rogers\n ※Name: Polly Roger\n ※prefab Version: DST-632551 "
    },
    "prefab:grotto_pool_big(ID Complete)": {
        "prefix": "p+grotto_pool_big",
        "body": "\"grotto_pool_big\"",
        "description": " ※prefab ID: grotto_pool_big\n ※Name: Vitreoasis\n ※prefab Version: DST-632551 "
    },
    "prefab:grotto_pool_big(ReverseSearch)": {
        "prefix": "p+Vitreoasis",
        "body": "\"grotto_pool_big\"",
        "description": " ※prefab ID: grotto_pool_big\n ※Name: Vitreoasis\n ※prefab Version: DST-632551 "
    },
    "prefab:storage_robot(ID Complete)": {
        "prefix": "p+storage_robot",
        "body": "\"storage_robot\"",
        "description": " ※prefab ID: storage_robot\n ※Name: W.O.B.O.T.\n ※prefab Version: DST-632551 "
    },
    "prefab:storage_robot(ReverseSearch)": {
        "prefix": "p+W.O.B.O.T.",
        "body": "\"storage_robot\"",
        "description": " ※prefab ID: storage_robot\n ※Name: W.O.B.O.T.\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_seedpacket_7(ID Complete)": {
        "prefix": "p+quagmire_seedpacket_7",
        "body": "\"quagmire_seedpacket_7\"",
        "description": " ※prefab ID: quagmire_seedpacket_7\n ※Name: Packet of Seed Pods\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_seedpacket_7(ReverseSearch)": {
        "prefix": "p+Packet of Seed Pods",
        "body": "\"quagmire_seedpacket_7\"",
        "description": " ※prefab ID: quagmire_seedpacket_7\n ※Name: Packet of Seed Pods\n ※prefab Version: DST-632551 "
    },
    "prefab:halloween_experiment_bravery(ID Complete)": {
        "prefix": "p+halloween_experiment_bravery",
        "body": "\"halloween_experiment_bravery\"",
        "description": " ※prefab ID: halloween_experiment_bravery\n ※Name: Phobic Experiment\n ※Recipe: \n\t+ 1 x: Frog Legs/froglegs\n\t+ 1 x: Gold Nugget/goldnugget\n ※Required Tech: \n\t+ LV.1 : Mad Science/MADSCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:halloween_experiment_bravery(ReverseSearch)": {
        "prefix": "p+Phobic Experiment",
        "body": "\"halloween_experiment_bravery\"",
        "description": " ※prefab ID: halloween_experiment_bravery\n ※Name: Phobic Experiment\n ※Recipe: \n\t+ 1 x: Frog Legs/froglegs\n\t+ 1 x: Gold Nugget/goldnugget\n ※Required Tech: \n\t+ LV.1 : Mad Science/MADSCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:oar(ID Complete)": {
        "prefix": "p+oar",
        "body": "\"oar\"",
        "description": " ※prefab ID: oar\n ※Name: Oar\n ※Recipe: \n\t+ 1 x: Log/log\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:oar(ReverseSearch)": {
        "prefix": "p+Oar",
        "body": "\"oar\"",
        "description": " ※prefab ID: oar\n ※Name: Oar\n ※Recipe: \n\t+ 1 x: Log/log\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:shadowtentacle(ID Complete)": {
        "prefix": "p+shadowtentacle",
        "body": "\"shadowtentacle\"",
        "description": " ※prefab ID: shadowtentacle\n ※Name: Shadow Tentacle\n ※prefab Version: DST-632551 "
    },
    "prefab:shadowtentacle(ReverseSearch)": {
        "prefix": "p+Shadow Tentacle",
        "body": "\"shadowtentacle\"",
        "description": " ※prefab ID: shadowtentacle\n ※Name: Shadow Tentacle\n ※prefab Version: DST-632551 "
    },
    "prefab:halloween_experiment_sanity(ID Complete)": {
        "prefix": "p+halloween_experiment_sanity",
        "body": "\"halloween_experiment_sanity\"",
        "description": " ※prefab ID: halloween_experiment_sanity\n ※Name: Psychosis Experiment\n ※Recipe: \n\t+ 1 x: Crow/crow\n\t+ 1 x: Dark Petals/petals_evil\n ※Required Tech: \n\t+ LV.1 : Mad Science/MADSCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:halloween_experiment_sanity(ReverseSearch)": {
        "prefix": "p+Psychosis Experiment",
        "body": "\"halloween_experiment_sanity\"",
        "description": " ※prefab ID: halloween_experiment_sanity\n ※Name: Psychosis Experiment\n ※Recipe: \n\t+ 1 x: Crow/crow\n\t+ 1 x: Dark Petals/petals_evil\n ※Required Tech: \n\t+ LV.1 : Mad Science/MADSCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:honeynuggets(ID Complete)": {
        "prefix": "p+honeynuggets",
        "body": "\"honeynuggets\"",
        "description": " ※prefab ID: honeynuggets\n ※Name: Honey Nuggets\n ※prefab Version: DST-632551 "
    },
    "prefab:honeynuggets(ReverseSearch)": {
        "prefix": "p+Honey Nuggets",
        "body": "\"honeynuggets\"",
        "description": " ※prefab ID: honeynuggets\n ※Name: Honey Nuggets\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_anchor_builder(ID Complete)": {
        "prefix": "p+chesspiece_anchor_builder",
        "body": "\"chesspiece_anchor_builder\"",
        "description": " ※prefab ID: chesspiece_anchor_builder\n ※Name: Anchor Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_anchor_builder(ReverseSearch)": {
        "prefix": "p+Anchor Figure",
        "body": "\"chesspiece_anchor_builder\"",
        "description": " ※prefab ID: chesspiece_anchor_builder\n ※Name: Anchor Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalgame_feedchicks_station(ID Complete)": {
        "prefix": "p+carnivalgame_feedchicks_station",
        "body": "\"carnivalgame_feedchicks_station\"",
        "description": " ※prefab ID: carnivalgame_feedchicks_station\n ※Name: Hubbub for Grub\n ※Recipe: \n\t+ 1 x: Hubbub for Grub Kit/carnivalgame_feedchicks_kit\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalgame_feedchicks_station(ReverseSearch)": {
        "prefix": "p+Hubbub for Grub",
        "body": "\"carnivalgame_feedchicks_station\"",
        "description": " ※prefab ID: carnivalgame_feedchicks_station\n ※Name: Hubbub for Grub\n ※Recipe: \n\t+ 1 x: Hubbub for Grub Kit/carnivalgame_feedchicks_kit\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:carnival_vest_b(ID Complete)": {
        "prefix": "p+carnival_vest_b",
        "body": "\"carnival_vest_b\"",
        "description": " ※prefab ID: carnival_vest_b\n ※Name: Chirpy Cloak\n ※Recipe: \n\t+ 48 x: Prize Tickets/carnival_prizeticket\n ※Required Tech: \n\t+ LV.1 : Trinket Trove/CARNIVAL_PRIZESHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:carnival_vest_b(ReverseSearch)": {
        "prefix": "p+Chirpy Cloak",
        "body": "\"carnival_vest_b\"",
        "description": " ※prefab ID: carnival_vest_b\n ※Name: Chirpy Cloak\n ※Recipe: \n\t+ 48 x: Prize Tickets/carnival_prizeticket\n ※Required Tech: \n\t+ LV.1 : Trinket Trove/CARNIVAL_PRIZESHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_059(ID Complete)": {
        "prefix": "p+quagmire_food_059",
        "body": "\"quagmire_food_059\"",
        "description": " ※prefab ID: quagmire_food_059\n ※Name: Crab Cake\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_059(ReverseSearch)": {
        "prefix": "p+Crab Cake",
        "body": "\"quagmire_food_059\"",
        "description": " ※prefab ID: quagmire_food_059\n ※Name: Crab Cake\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_muse(ID Complete)": {
        "prefix": "p+chesspiece_muse",
        "body": "\"chesspiece_muse\"",
        "description": " ※prefab ID: chesspiece_muse\n ※Name: Queenly Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_muse(ReverseSearch)": {
        "prefix": "p+Queenly Figure",
        "body": "\"chesspiece_muse\"",
        "description": " ※prefab ID: chesspiece_muse\n ※Name: Queenly Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:seeds_cooked(ID Complete)": {
        "prefix": "p+seeds_cooked",
        "body": "\"seeds_cooked\"",
        "description": " ※prefab ID: seeds_cooked\n ※Name: Toasted Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:seeds_cooked(ReverseSearch)": {
        "prefix": "p+Toasted Seeds",
        "body": "\"seeds_cooked\"",
        "description": " ※prefab ID: seeds_cooked\n ※Name: Toasted Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalgame_herding_station(ID Complete)": {
        "prefix": "p+carnivalgame_herding_station",
        "body": "\"carnivalgame_herding_station\"",
        "description": " ※prefab ID: carnivalgame_herding_station\n ※Name: Egg Scramble\n ※Recipe: \n\t+ 1 x: Egg Scramble Kit/carnivalgame_herding_kit\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalgame_herding_station(ReverseSearch)": {
        "prefix": "p+Egg Scramble",
        "body": "\"carnivalgame_herding_station\"",
        "description": " ※prefab ID: carnivalgame_herding_station\n ※Name: Egg Scramble\n ※Recipe: \n\t+ 1 x: Egg Scramble Kit/carnivalgame_herding_kit\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalgame_herding_chick(ID Complete)": {
        "prefix": "p+carnivalgame_herding_chick",
        "body": "\"carnivalgame_herding_chick\"",
        "description": " ※prefab ID: carnivalgame_herding_chick\n ※Name: Scrambling Egg\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalgame_herding_chick(ReverseSearch)": {
        "prefix": "p+Scrambling Egg",
        "body": "\"carnivalgame_herding_chick\"",
        "description": " ※prefab ID: carnivalgame_herding_chick\n ※Name: Scrambling Egg\n ※prefab Version: DST-632551 "
    },
    "prefab:panflute(ID Complete)": {
        "prefix": "p+panflute",
        "body": "\"panflute\"",
        "description": " ※prefab ID: panflute\n ※Name: Pan Flute\n ※Recipe: \n\t+ 5 x: Cut Reeds/cutreeds\n\t+ 1 x: Mandrake/mandrake\n\t+ 1 x: Rope/rope\n ※Required Tech: \n\t+ LV.2 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:panflute(ReverseSearch)": {
        "prefix": "p+Pan Flute",
        "body": "\"panflute\"",
        "description": " ※prefab ID: panflute\n ※Name: Pan Flute\n ※Recipe: \n\t+ 5 x: Cut Reeds/cutreeds\n\t+ 1 x: Mandrake/mandrake\n\t+ 1 x: Rope/rope\n ※Required Tech: \n\t+ LV.2 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalgame_shooting_target_off(ID Complete)": {
        "prefix": "p+carnivalgame_shooting_target_off",
        "body": "\"carnivalgame_shooting_target_off\"",
        "description": " ※prefab ID: carnivalgame_shooting_target_off\n ※Name: Trapdoor\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalgame_shooting_target_off(ReverseSearch)": {
        "prefix": "p+Trapdoor",
        "body": "\"carnivalgame_shooting_target_off\"",
        "description": " ※prefab ID: carnivalgame_shooting_target_off\n ※Name: Trapdoor\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalgame_puckdrop_kit(ID Complete)": {
        "prefix": "p+carnivalgame_puckdrop_kit",
        "body": "\"carnivalgame_puckdrop_kit\"",
        "description": " ※prefab ID: carnivalgame_puckdrop_kit\n ※Name: Birdhouse Ball Drop Kit\n ※Recipe: \n\t+ 1 x: Gold Nugget/goldnugget\n\t+ 3 x: Seeds/seeds\n ※Required Tech: \n\t+ LV.3 : Cawnival Creation/CARNIVAL_HOSTSHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalgame_puckdrop_kit(ReverseSearch)": {
        "prefix": "p+Birdhouse Ball Drop Kit",
        "body": "\"carnivalgame_puckdrop_kit\"",
        "description": " ※prefab ID: carnivalgame_puckdrop_kit\n ※Name: Birdhouse Ball Drop Kit\n ※Recipe: \n\t+ 1 x: Gold Nugget/goldnugget\n\t+ 3 x: Seeds/seeds\n ※Required Tech: \n\t+ LV.3 : Cawnival Creation/CARNIVAL_HOSTSHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:otterden(ID Complete)": {
        "prefix": "p+otterden",
        "body": "\"otterden\"",
        "description": " ※prefab ID: otterden\n ※Name: Marotter Den\n ※prefab Version: DST-632551 "
    },
    "prefab:otterden(ReverseSearch)": {
        "prefix": "p+Marotter Den",
        "body": "\"otterden\"",
        "description": " ※prefab ID: otterden\n ※Name: Marotter Den\n ※prefab Version: DST-632551 "
    },
    "prefab:glassspike(ID Complete)": {
        "prefix": "p+glassspike",
        "body": "\"glassspike\"",
        "description": " ※prefab ID: glassspike\n ※Name: Glass Spike\n ※prefab Version: DST-632551 "
    },
    "prefab:glassspike(ReverseSearch)": {
        "prefix": "p+Glass Spike",
        "body": "\"glassspike\"",
        "description": " ※prefab ID: glassspike\n ※Name: Glass Spike\n ※prefab Version: DST-632551 "
    },
    "prefab:teleportato_checkmate(ID Complete)": {
        "prefix": "p+teleportato_checkmate",
        "body": "\"teleportato_checkmate\"",
        "description": " ※prefab ID: teleportato_checkmate\n ※Name: Wooden Thing\n ※prefab Version: DST-632551 "
    },
    "prefab:teleportato_checkmate(ReverseSearch)": {
        "prefix": "p+Wooden Thing",
        "body": "\"teleportato_checkmate\"",
        "description": " ※prefab ID: teleportato_checkmate\n ※Name: Wooden Thing\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivaldecor_figure_uncommon(ID Complete)": {
        "prefix": "p+carnivaldecor_figure_uncommon",
        "body": "\"carnivaldecor_figure_uncommon\"",
        "description": " ※prefab ID: carnivaldecor_figure_uncommon\n ※Name: Uncommon Cawnival Statuette\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivaldecor_figure_uncommon(ReverseSearch)": {
        "prefix": "p+Uncommon Cawnival Statuette",
        "body": "\"carnivaldecor_figure_uncommon\"",
        "description": " ※prefab ID: carnivaldecor_figure_uncommon\n ※Name: Uncommon Cawnival Statuette\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_001(ID Complete)": {
        "prefix": "p+quagmire_food_001",
        "body": "\"quagmire_food_001\"",
        "description": " ※prefab ID: quagmire_food_001\n ※Name: Loaf of Bread\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_001(ReverseSearch)": {
        "prefix": "p+Loaf of Bread",
        "body": "\"quagmire_food_001\"",
        "description": " ※prefab ID: quagmire_food_001\n ※Name: Loaf of Bread\n ※prefab Version: DST-632551 "
    },
    "prefab:wormlight(ID Complete)": {
        "prefix": "p+wormlight",
        "body": "\"wormlight\"",
        "description": " ※prefab ID: wormlight\n ※Name: Glow Berry\n ※prefab Version: DST-632551 "
    },
    "prefab:wormlight(ReverseSearch)": {
        "prefix": "p+Glow Berry",
        "body": "\"wormlight\"",
        "description": " ※prefab ID: wormlight\n ※Name: Glow Berry\n ※prefab Version: DST-632551 "
    },
    "prefab:nightmarepie(ID Complete)": {
        "prefix": "p+nightmarepie",
        "body": "\"nightmarepie\"",
        "description": " ※prefab ID: nightmarepie\n ※Name: Grim Galette\n ※prefab Version: DST-632551 "
    },
    "prefab:nightmarepie(ReverseSearch)": {
        "prefix": "p+Grim Galette",
        "body": "\"nightmarepie\"",
        "description": " ※prefab ID: nightmarepie\n ※Name: Grim Galette\n ※prefab Version: DST-632551 "
    },
    "prefab:yotr_fightring_torch(ID Complete)": {
        "prefix": "p+yotr_fightring_torch",
        "body": "\"yotr_fightring_torch\"",
        "description": " ※prefab ID: yotr_fightring_torch\n ※Name: Bunnyman Torch\n ※prefab Version: DST-632551 "
    },
    "prefab:yotr_fightring_torch(ReverseSearch)": {
        "prefix": "p+Bunnyman Torch",
        "body": "\"yotr_fightring_torch\"",
        "description": " ※prefab ID: yotr_fightring_torch\n ※Name: Bunnyman Torch\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_12(ID Complete)": {
        "prefix": "p+trinket_12",
        "body": "\"trinket_12\"",
        "description": " ※prefab ID: trinket_12\n ※Name: Dessicated Tentacle\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_12(ReverseSearch)": {
        "prefix": "p+Dessicated Tentacle",
        "body": "\"trinket_12\"",
        "description": " ※prefab ID: trinket_12\n ※Name: Dessicated Tentacle\n ※prefab Version: DST-632551 "
    },
    "prefab:winter_food1(ID Complete)": {
        "prefix": "p+winter_food1",
        "body": "\"winter_food1\"",
        "description": " ※prefab ID: winter_food1\n ※Name: Gingerbread Cookie\n ※prefab Version: DST-632551 "
    },
    "prefab:winter_food1(ReverseSearch)": {
        "prefix": "p+Gingerbread Cookie",
        "body": "\"winter_food1\"",
        "description": " ※prefab ID: winter_food1\n ※Name: Gingerbread Cookie\n ※prefab Version: DST-632551 "
    },
    "prefab:blue_mushroomhat(ID Complete)": {
        "prefix": "p+blue_mushroomhat",
        "body": "\"blue_mushroomhat\"",
        "description": " ※prefab ID: blue_mushroomhat\n ※Name: Blue Funcap\n ※Recipe: \n\t+ 6 x: Blue Cap/blue_cap\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:blue_mushroomhat(ReverseSearch)": {
        "prefix": "p+Blue Funcap",
        "body": "\"blue_mushroomhat\"",
        "description": " ※prefab ID: blue_mushroomhat\n ※Name: Blue Funcap\n ※Recipe: \n\t+ 6 x: Blue Cap/blue_cap\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:winter_food9(ID Complete)": {
        "prefix": "p+winter_food9",
        "body": "\"winter_food9\"",
        "description": " ※prefab ID: winter_food9\n ※Name: Heavenly Eggnog\n ※prefab Version: DST-632551 "
    },
    "prefab:winter_food9(ReverseSearch)": {
        "prefix": "p+Heavenly Eggnog",
        "body": "\"winter_food9\"",
        "description": " ※prefab ID: winter_food9\n ※Name: Heavenly Eggnog\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_beard_rug(ID Complete)": {
        "prefix": "p+turf_beard_rug",
        "body": "\"turf_beard_rug\"",
        "description": " ※prefab ID: turf_beard_rug\n ※Name: Beard Hair Rug\n ※Recipe: \n\t+ 2 x: Beard Hair/beardhair\n\t+ 2 x: Cut Grass/cutgrass\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_beard_rug(ReverseSearch)": {
        "prefix": "p+Beard Hair Rug",
        "body": "\"turf_beard_rug\"",
        "description": " ※prefab ID: turf_beard_rug\n ※Name: Beard Hair Rug\n ※Recipe: \n\t+ 2 x: Beard Hair/beardhair\n\t+ 2 x: Cut Grass/cutgrass\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:wintercooking_mulleddrink(ID Complete)": {
        "prefix": "p+wintercooking_mulleddrink",
        "body": "\"wintercooking_mulleddrink\"",
        "description": " ※prefab ID: wintercooking_mulleddrink\n ※Name: Mulled Punch\n ※Recipe: \n\t+ 1 x: Holiday Cheer/wintersfeastfuel\n\t+ 1 x: Dark Petals/petals_evil\n\t+ 1 x: Ice/ice\n ※Required Tech: \n\t+ LV.1 : Feast/WINTERSFEASTCOOKING\n ※prefab Version: DST-632551 "
    },
    "prefab:wintercooking_mulleddrink(ReverseSearch)": {
        "prefix": "p+Mulled Punch",
        "body": "\"wintercooking_mulleddrink\"",
        "description": " ※prefab ID: wintercooking_mulleddrink\n ※Name: Mulled Punch\n ※Recipe: \n\t+ 1 x: Holiday Cheer/wintersfeastfuel\n\t+ 1 x: Dark Petals/petals_evil\n\t+ 1 x: Ice/ice\n ※Required Tech: \n\t+ LV.1 : Feast/WINTERSFEASTCOOKING\n ※prefab Version: DST-632551 "
    },
    "prefab:lifeinjector(ID Complete)": {
        "prefix": "p+lifeinjector",
        "body": "\"lifeinjector\"",
        "description": " ※prefab ID: lifeinjector\n ※Name: Booster Shot\n ※Recipe: \n\t+ 8 x: Rot/spoiled_food\n\t+ 2 x: Nitre/nitre\n\t+ 1 x: Stinger/stinger\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:lifeinjector(ReverseSearch)": {
        "prefix": "p+Booster Shot",
        "body": "\"lifeinjector\"",
        "description": " ※prefab ID: lifeinjector\n ※Name: Booster Shot\n ※Recipe: \n\t+ 8 x: Rot/spoiled_food\n\t+ 2 x: Nitre/nitre\n\t+ 1 x: Stinger/stinger\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalgame_shooting_button_off(ID Complete)": {
        "prefix": "p+carnivalgame_shooting_button_off",
        "body": "\"carnivalgame_shooting_button_off\"",
        "description": " ※prefab ID: carnivalgame_shooting_button_off\n ※Name: Nest Defender\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalgame_shooting_button_off(ReverseSearch)": {
        "prefix": "p+Nest Defender",
        "body": "\"carnivalgame_shooting_button_off\"",
        "description": " ※prefab ID: carnivalgame_shooting_button_off\n ※Name: Nest Defender\n ※prefab Version: DST-632551 "
    },
    "prefab:knight(ID Complete)": {
        "prefix": "p+knight",
        "body": "\"knight\"",
        "description": " ※prefab ID: knight\n ※Name: Clockwork Knight\n ※prefab Version: DST-632551 "
    },
    "prefab:knight(ReverseSearch)": {
        "prefix": "p+Clockwork Knight",
        "body": "\"knight\"",
        "description": " ※prefab ID: knight\n ※Name: Clockwork Knight\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_feathercrownhat(ID Complete)": {
        "prefix": "p+lavaarena_feathercrownhat",
        "body": "\"lavaarena_feathercrownhat\"",
        "description": " ※prefab ID: lavaarena_feathercrownhat\n ※Name: Feathered Wreath\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_feathercrownhat(ReverseSearch)": {
        "prefix": "p+Feathered Wreath",
        "body": "\"lavaarena_feathercrownhat\"",
        "description": " ※prefab ID: lavaarena_feathercrownhat\n ※Name: Feathered Wreath\n ※prefab Version: DST-632551 "
    },
    "prefab:lunarplanthat(ID Complete)": {
        "prefix": "p+lunarplanthat",
        "body": "\"lunarplanthat\"",
        "description": " ※prefab ID: lunarplanthat\n ※Name: Brightshade Helm\n ※Recipe: \n\t+ 4 x: Pure Brilliance/purebrilliance\n\t+ 2 x: Brightshade Husk/lunarplant_husk\n ※Required Tech: \n\t+ LV.2 : Brightsmithy/LUNARFORGING\n ※prefab Version: DST-632551 "
    },
    "prefab:lunarplanthat(ReverseSearch)": {
        "prefix": "p+Brightshade Helm",
        "body": "\"lunarplanthat\"",
        "description": " ※prefab ID: lunarplanthat\n ※Name: Brightshade Helm\n ※Recipe: \n\t+ 4 x: Pure Brilliance/purebrilliance\n\t+ 2 x: Brightshade Husk/lunarplant_husk\n ※Required Tech: \n\t+ LV.2 : Brightsmithy/LUNARFORGING\n ※prefab Version: DST-632551 "
    },
    "prefab:yotb_beefalo_doll_beast(ID Complete)": {
        "prefix": "p+yotb_beefalo_doll_beast",
        "body": "\"yotb_beefalo_doll_beast\"",
        "description": " ※prefab ID: yotb_beefalo_doll_beast\n ※Name: Lucky Beast Beefalo Doll\n ※prefab Version: DST-632551 "
    },
    "prefab:yotb_beefalo_doll_beast(ReverseSearch)": {
        "prefix": "p+Lucky Beast Beefalo Doll",
        "body": "\"yotb_beefalo_doll_beast\"",
        "description": " ※prefab ID: yotb_beefalo_doll_beast\n ※Name: Lucky Beast Beefalo Doll\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_swampig_house(ID Complete)": {
        "prefix": "p+quagmire_swampig_house",
        "body": "\"quagmire_swampig_house\"",
        "description": " ※prefab ID: quagmire_swampig_house\n ※Name: Worn Pig House\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_swampig_house(ReverseSearch)": {
        "prefix": "p+Worn Pig House",
        "body": "\"quagmire_swampig_house\"",
        "description": " ※prefab ID: quagmire_swampig_house\n ※Name: Worn Pig House\n ※prefab Version: DST-632551 "
    },
    "prefab:wx78module_maxhunger1(ID Complete)": {
        "prefix": "p+wx78module_maxhunger1",
        "body": "\"wx78module_maxhunger1\"",
        "description": " ※prefab ID: wx78module_maxhunger1\n ※Name: Gastrogain Circuit\n ※Recipe: \n\t+ 2 x: Bio Data/scandata\n\t+ 1 x: Hound's Tooth/houndstooth\n ※Required Tech: \n\t+ LV.1 : Circuitry/ROBOTMODULECRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:wx78module_maxhunger1(ReverseSearch)": {
        "prefix": "p+Gastrogain Circuit",
        "body": "\"wx78module_maxhunger1\"",
        "description": " ※prefab ID: wx78module_maxhunger1\n ※Name: Gastrogain Circuit\n ※Recipe: \n\t+ 2 x: Bio Data/scandata\n\t+ 1 x: Hound's Tooth/houndstooth\n ※Required Tech: \n\t+ LV.1 : Circuitry/ROBOTMODULECRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:watermelon(ID Complete)": {
        "prefix": "p+watermelon",
        "body": "\"watermelon\"",
        "description": " ※prefab ID: watermelon\n ※Name: Watermelon\n ※prefab Version: DST-632551 "
    },
    "prefab:watermelon(ReverseSearch)": {
        "prefix": "p+Watermelon",
        "body": "\"watermelon\"",
        "description": " ※prefab ID: watermelon\n ※Name: Watermelon\n ※prefab Version: DST-632551 "
    },
    "prefab:merm_lunar(ID Complete)": {
        "prefix": "p+merm_lunar",
        "body": "\"merm_lunar\"",
        "description": " ※prefab ID: merm_lunar\n ※Name: Mutated Merm\n ※prefab Version: DST-632551 "
    },
    "prefab:merm_lunar(ReverseSearch)": {
        "prefix": "p+Mutated Merm",
        "body": "\"merm_lunar\"",
        "description": " ※prefab ID: merm_lunar\n ※Name: Mutated Merm\n ※prefab Version: DST-632551 "
    },
    "prefab:wintercooking_tourtiere(ID Complete)": {
        "prefix": "p+wintercooking_tourtiere",
        "body": "\"wintercooking_tourtiere\"",
        "description": " ※prefab ID: wintercooking_tourtiere\n ※Name: Tourtiere\n ※Recipe: \n\t+ 1 x: Holiday Cheer/wintersfeastfuel\n\t+ 1 x: Birchnut/acorn\n\t+ 1 x: Pine Cone/pinecone\n ※Required Tech: \n\t+ LV.1 : Feast/WINTERSFEASTCOOKING\n ※prefab Version: DST-632551 "
    },
    "prefab:wintercooking_tourtiere(ReverseSearch)": {
        "prefix": "p+Tourtiere",
        "body": "\"wintercooking_tourtiere\"",
        "description": " ※prefab ID: wintercooking_tourtiere\n ※Name: Tourtiere\n ※Recipe: \n\t+ 1 x: Holiday Cheer/wintersfeastfuel\n\t+ 1 x: Birchnut/acorn\n\t+ 1 x: Pine Cone/pinecone\n ※Required Tech: \n\t+ LV.1 : Feast/WINTERSFEASTCOOKING\n ※prefab Version: DST-632551 "
    },
    "prefab:treasurechest(ID Complete)": {
        "prefix": "p+treasurechest",
        "body": "\"treasurechest\"",
        "description": " ※prefab ID: treasurechest\n ※Name: Chest\n ※Recipe: \n\t+ 3 x: Boards/boards\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:treasurechest(ReverseSearch)": {
        "prefix": "p+Chest",
        "body": "\"treasurechest\"",
        "description": " ※prefab ID: treasurechest\n ※Name: Chest\n ※Recipe: \n\t+ 3 x: Boards/boards\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_062(ID Complete)": {
        "prefix": "p+quagmire_food_062",
        "body": "\"quagmire_food_062\"",
        "description": " ※prefab ID: quagmire_food_062\n ※Name: Bacon Wrapped Meat\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_062(ReverseSearch)": {
        "prefix": "p+Bacon Wrapped Meat",
        "body": "\"quagmire_food_062\"",
        "description": " ※prefab ID: quagmire_food_062\n ※Name: Bacon Wrapped Meat\n ※prefab Version: DST-632551 "
    },
    "prefab:wilson(ID Complete)": {
        "prefix": "p+wilson",
        "body": "\"wilson\"",
        "description": " ※prefab ID: wilson\n ※Name: Wilson\n ※prefab Version: DST-632551 "
    },
    "prefab:wilson(ReverseSearch)": {
        "prefix": "p+Wilson",
        "body": "\"wilson\"",
        "description": " ※prefab ID: wilson\n ※Name: Wilson\n ※prefab Version: DST-632551 "
    },
    "prefab:ivy_snare(ID Complete)": {
        "prefix": "p+ivy_snare",
        "body": "\"ivy_snare\"",
        "description": " ※prefab ID: ivy_snare\n ※Name: Binding Roots\n ※prefab Version: DST-632551 "
    },
    "prefab:ivy_snare(ReverseSearch)": {
        "prefix": "p+Binding Roots",
        "body": "\"ivy_snare\"",
        "description": " ※prefab ID: ivy_snare\n ※Name: Binding Roots\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishinglure_hermit_drowsy(ID Complete)": {
        "prefix": "p+oceanfishinglure_hermit_drowsy",
        "body": "\"oceanfishinglure_hermit_drowsy\"",
        "description": " ※prefab ID: oceanfishinglure_hermit_drowsy\n ※Name: Stupefying Lure\n ※Recipe: \n\t+ 1 x: Cookie Cutter Shell/cookiecuttershell\n\t+ 1 x: Stinger/stinger\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishinglure_hermit_drowsy(ReverseSearch)": {
        "prefix": "p+Stupefying Lure",
        "body": "\"oceanfishinglure_hermit_drowsy\"",
        "description": " ※prefab ID: oceanfishinglure_hermit_drowsy\n ※Name: Stupefying Lure\n ※Recipe: \n\t+ 1 x: Cookie Cutter Shell/cookiecuttershell\n\t+ 1 x: Stinger/stinger\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:leif_sparse(ID Complete)": {
        "prefix": "p+leif_sparse",
        "body": "\"leif_sparse\"",
        "description": " ※prefab ID: leif_sparse\n ※Name: Treeguard\n ※prefab Version: DST-632551 "
    },
    "prefab:leif_sparse(ReverseSearch)": {
        "prefix": "p+Treeguard",
        "body": "\"leif_sparse\"",
        "description": " ※prefab ID: leif_sparse\n ※Name: Treeguard\n ※prefab Version: DST-632551 "
    },
    "prefab:birdtrap(ID Complete)": {
        "prefix": "p+birdtrap",
        "body": "\"birdtrap\"",
        "description": " ※prefab ID: birdtrap\n ※Name: Bird Trap\n ※Recipe: \n\t+ 3 x: Twigs/twigs\n\t+ 4 x: Silk/silk\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:birdtrap(ReverseSearch)": {
        "prefix": "p+Bird Trap",
        "body": "\"birdtrap\"",
        "description": " ※prefab ID: birdtrap\n ※Name: Bird Trap\n ※Recipe: \n\t+ 3 x: Twigs/twigs\n\t+ 4 x: Silk/silk\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:gravy(ID Complete)": {
        "prefix": "p+gravy",
        "body": "\"gravy\"",
        "description": " ※prefab ID: gravy\n ※Name: Good Gravy\n ※prefab Version: DST-632551 "
    },
    "prefab:gravy(ReverseSearch)": {
        "prefix": "p+Good Gravy",
        "body": "\"gravy\"",
        "description": " ※prefab ID: gravy\n ※Name: Good Gravy\n ※prefab Version: DST-632551 "
    },
    "prefab:panettone(ID Complete)": {
        "prefix": "p+panettone",
        "body": "\"panettone\"",
        "description": " ※prefab ID: panettone\n ※Name: Panettone\n ※prefab Version: DST-632551 "
    },
    "prefab:panettone(ReverseSearch)": {
        "prefix": "p+Panettone",
        "body": "\"panettone\"",
        "description": " ※prefab ID: panettone\n ※Name: Panettone\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_boarlord(ID Complete)": {
        "prefix": "p+lavaarena_boarlord",
        "body": "\"lavaarena_boarlord\"",
        "description": " ※prefab ID: lavaarena_boarlord\n ※Name: Battlemaster Pugna\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_boarlord(ReverseSearch)": {
        "prefix": "p+Battlemaster Pugna",
        "body": "\"lavaarena_boarlord\"",
        "description": " ※prefab ID: lavaarena_boarlord\n ※Name: Battlemaster Pugna\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_dragonfly_builder(ID Complete)": {
        "prefix": "p+chesspiece_dragonfly_builder",
        "body": "\"chesspiece_dragonfly_builder\"",
        "description": " ※prefab ID: chesspiece_dragonfly_builder\n ※Name: Dragonfly Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_dragonfly_builder(ReverseSearch)": {
        "prefix": "p+Dragonfly Figure",
        "body": "\"chesspiece_dragonfly_builder\"",
        "description": " ※prefab ID: chesspiece_dragonfly_builder\n ※Name: Dragonfly Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:yotd_steeringwheel_item(ID Complete)": {
        "prefix": "p+yotd_steeringwheel_item",
        "body": "\"yotd_steeringwheel_item\"",
        "description": " ※prefab ID: yotd_steeringwheel_item\n ※Name: Dragonfly Boat Wheel Kit\n ※Recipe: \n\t+ 1 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /DRAGONOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:yotd_steeringwheel_item(ReverseSearch)": {
        "prefix": "p+Dragonfly Boat Wheel Kit",
        "body": "\"yotd_steeringwheel_item\"",
        "description": " ※prefab ID: yotd_steeringwheel_item\n ※Name: Dragonfly Boat Wheel Kit\n ※Recipe: \n\t+ 1 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /DRAGONOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:kelp_dried(ID Complete)": {
        "prefix": "p+kelp_dried",
        "body": "\"kelp_dried\"",
        "description": " ※prefab ID: kelp_dried\n ※Name: Dried Kelp Fronds\n ※prefab Version: DST-632551 "
    },
    "prefab:kelp_dried(ReverseSearch)": {
        "prefix": "p+Dried Kelp Fronds",
        "body": "\"kelp_dried\"",
        "description": " ※prefab ID: kelp_dried\n ※Name: Dried Kelp Fronds\n ※prefab Version: DST-632551 "
    },
    "prefab:weed_firenettle(ID Complete)": {
        "prefix": "p+weed_firenettle",
        "body": "\"weed_firenettle\"",
        "description": " ※prefab ID: weed_firenettle\n ※Name: Fire Nettles\n ※prefab Version: DST-632551 "
    },
    "prefab:weed_firenettle(ReverseSearch)": {
        "prefix": "p+Fire Nettles",
        "body": "\"weed_firenettle\"",
        "description": " ※prefab ID: weed_firenettle\n ※Name: Fire Nettles\n ※prefab Version: DST-632551 "
    },
    "prefab:beargervest(ID Complete)": {
        "prefix": "p+beargervest",
        "body": "\"beargervest\"",
        "description": " ※prefab ID: beargervest\n ※Name: Hibearnation Vest\n ※Recipe: \n\t+ 1 x: Thick Fur/bearger_fur\n\t+ 1 x: Dapper Vest/sweatervest\n\t+ 2 x: Rope/rope\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:beargervest(ReverseSearch)": {
        "prefix": "p+Hibearnation Vest",
        "body": "\"beargervest\"",
        "description": " ※prefab ID: beargervest\n ※Name: Hibearnation Vest\n ※Recipe: \n\t+ 1 x: Thick Fur/bearger_fur\n\t+ 1 x: Dapper Vest/sweatervest\n\t+ 2 x: Rope/rope\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:warg(ID Complete)": {
        "prefix": "p+warg",
        "body": "\"warg\"",
        "description": " ※prefab ID: warg\n ※Name: Varg\n ※prefab Version: DST-632551 "
    },
    "prefab:warg(ReverseSearch)": {
        "prefix": "p+Varg",
        "body": "\"warg\"",
        "description": " ※prefab ID: warg\n ※Name: Varg\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_portal(ID Complete)": {
        "prefix": "p+quagmire_portal",
        "body": "\"quagmire_portal\"",
        "description": " ※prefab ID: quagmire_portal\n ※Name: Ancient Gateway\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_portal(ReverseSearch)": {
        "prefix": "p+Ancient Gateway",
        "body": "\"quagmire_portal\"",
        "description": " ※prefab ID: quagmire_portal\n ※Name: Ancient Gateway\n ※prefab Version: DST-632551 "
    },
    "prefab:dustmothden(ID Complete)": {
        "prefix": "p+dustmothden",
        "body": "\"dustmothden\"",
        "description": " ※prefab ID: dustmothden\n ※Name: Tidy Hidey-Hole\n ※prefab Version: DST-632551 "
    },
    "prefab:dustmothden(ReverseSearch)": {
        "prefix": "p+Tidy Hidey-Hole",
        "body": "\"dustmothden\"",
        "description": " ※prefab ID: dustmothden\n ※Name: Tidy Hidey-Hole\n ※prefab Version: DST-632551 "
    },
    "prefab:halloweenpotion_embers(ID Complete)": {
        "prefix": "p+halloweenpotion_embers",
        "body": "\"halloweenpotion_embers\"",
        "description": " ※prefab ID: halloweenpotion_embers\n ※Name: Sulfuric Crystals of Lime\n ※prefab Version: DST-632551 "
    },
    "prefab:halloweenpotion_embers(ReverseSearch)": {
        "prefix": "p+Sulfuric Crystals of Lime",
        "body": "\"halloweenpotion_embers\"",
        "description": " ※prefab ID: halloweenpotion_embers\n ※Name: Sulfuric Crystals of Lime\n ※prefab Version: DST-632551 "
    },
    "prefab:rock1(ID Complete)": {
        "prefix": "p+rock1",
        "body": "\"rock1\"",
        "description": " ※prefab ID: rock1\n ※Name: Boulder\n ※prefab Version: DST-632551 "
    },
    "prefab:rock1(ReverseSearch)": {
        "prefix": "p+Boulder",
        "body": "\"rock1\"",
        "description": " ※prefab ID: rock1\n ※Name: Boulder\n ※prefab Version: DST-632551 "
    },
    "prefab:decor_centerpiece(ID Complete)": {
        "prefix": "p+decor_centerpiece",
        "body": "\"decor_centerpiece\"",
        "description": " ※prefab ID: decor_centerpiece\n ※Name: Art?\n ※Recipe: \n\t+ 1 x: Twigs/twigs\n\t+ 1 x: Rocks/rocks\n\t+ 1 x: Flint/flint\n\t+ 1 x: Gold Nugget/goldnugget\n ※Required Tech: \n\t+ LV.2 : Carpentry/CARPENTRY\n ※prefab Version: DST-632551 "
    },
    "prefab:decor_centerpiece(ReverseSearch)": {
        "prefix": "p+Art?",
        "body": "\"decor_centerpiece\"",
        "description": " ※prefab ID: decor_centerpiece\n ※Name: Art?\n ※Recipe: \n\t+ 1 x: Twigs/twigs\n\t+ 1 x: Rocks/rocks\n\t+ 1 x: Flint/flint\n\t+ 1 x: Gold Nugget/goldnugget\n ※Required Tech: \n\t+ LV.2 : Carpentry/CARPENTRY\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishingbobber_canary(ID Complete)": {
        "prefix": "p+oceanfishingbobber_canary",
        "body": "\"oceanfishingbobber_canary\"",
        "description": " ※prefab ID: oceanfishingbobber_canary\n ※Name: Saffron Quill Float\n ※Recipe: \n\t+ 1 x: Saffron Feather/feather_canary\n ※Required Tech: \n\t+ LV.1 : Fishing/FISHING\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishingbobber_canary(ReverseSearch)": {
        "prefix": "p+Saffron Quill Float",
        "body": "\"oceanfishingbobber_canary\"",
        "description": " ※prefab ID: oceanfishingbobber_canary\n ※Name: Saffron Quill Float\n ※Recipe: \n\t+ 1 x: Saffron Feather/feather_canary\n ※Required Tech: \n\t+ LV.1 : Fishing/FISHING\n ※prefab Version: DST-632551 "
    },
    "prefab:spiderden_bedazzler(ID Complete)": {
        "prefix": "p+spiderden_bedazzler",
        "body": "\"spiderden_bedazzler\"",
        "description": " ※prefab ID: spiderden_bedazzler\n ※Name: Den Decorating Set\n ※Recipe: \n\t+ 1 x: Silk/silk\n\t+ 1 x: Papyrus/papyrus\n\t+ 2 x: Boards/boards\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:spiderden_bedazzler(ReverseSearch)": {
        "prefix": "p+Den Decorating Set",
        "body": "\"spiderden_bedazzler\"",
        "description": " ※prefab ID: spiderden_bedazzler\n ※Name: Den Decorating Set\n ※Recipe: \n\t+ 1 x: Silk/silk\n\t+ 1 x: Papyrus/papyrus\n\t+ 2 x: Boards/boards\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:chessjunk3(ID Complete)": {
        "prefix": "p+chessjunk3",
        "body": "\"chessjunk3\"",
        "description": " ※prefab ID: chessjunk3\n ※Name: Broken Clockworks\n ※prefab Version: DST-632551 "
    },
    "prefab:chessjunk3(ReverseSearch)": {
        "prefix": "p+Broken Clockworks",
        "body": "\"chessjunk3\"",
        "description": " ※prefab ID: chessjunk3\n ※Name: Broken Clockworks\n ※prefab Version: DST-632551 "
    },
    "prefab:shadowlumber_builder(ID Complete)": {
        "prefix": "p+shadowlumber_builder",
        "body": "\"shadowlumber_builder\"",
        "description": " ※prefab ID: shadowlumber_builder\n ※Name: Shadow Logger\n ※Recipe: \n\t+ 2 x: Nightmare Fuel/nightmarefuel\n\t+ 1 x: Axe/axe\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:shadowlumber_builder(ReverseSearch)": {
        "prefix": "p+Shadow Logger",
        "body": "\"shadowlumber_builder\"",
        "description": " ※prefab ID: shadowlumber_builder\n ※Name: Shadow Logger\n ※Recipe: \n\t+ 2 x: Nightmare Fuel/nightmarefuel\n\t+ 1 x: Axe/axe\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:glowberrymousse(ID Complete)": {
        "prefix": "p+glowberrymousse",
        "body": "\"glowberrymousse\"",
        "description": " ※prefab ID: glowberrymousse\n ※Name: Glow Berry Mousse\n ※prefab Version: DST-632551 "
    },
    "prefab:glowberrymousse(ReverseSearch)": {
        "prefix": "p+Glow Berry Mousse",
        "body": "\"glowberrymousse\"",
        "description": " ※prefab ID: glowberrymousse\n ※Name: Glow Berry Mousse\n ※prefab Version: DST-632551 "
    },
    "prefab:handpillow_beefalowool(ID Complete)": {
        "prefix": "p+handpillow_beefalowool",
        "body": "\"handpillow_beefalowool\"",
        "description": " ※prefab ID: handpillow_beefalowool\n ※Name: Beefalo Wool Pillow\n ※Recipe: \n\t+ 3 x: Lucky Gold Nugget/lucky_goldnugget\n\t+ 2 x: Silk/silk\n\t+ 3 x: Beefalo Wool/beefalowool\n ※Required Tech: \n\t+ LV.3 : /RABBITOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:handpillow_beefalowool(ReverseSearch)": {
        "prefix": "p+Beefalo Wool Pillow",
        "body": "\"handpillow_beefalowool\"",
        "description": " ※prefab ID: handpillow_beefalowool\n ※Name: Beefalo Wool Pillow\n ※Recipe: \n\t+ 3 x: Lucky Gold Nugget/lucky_goldnugget\n\t+ 2 x: Silk/silk\n\t+ 3 x: Beefalo Wool/beefalowool\n ※Required Tech: \n\t+ LV.3 : /RABBITOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:redpouch(ID Complete)": {
        "prefix": "p+redpouch",
        "body": "\"redpouch\"",
        "description": " ※prefab ID: redpouch\n ※Name: Red Pouch\n ※prefab Version: DST-632551 "
    },
    "prefab:redpouch(ReverseSearch)": {
        "prefix": "p+Red Pouch",
        "body": "\"redpouch\"",
        "description": " ※prefab ID: redpouch\n ※Name: Red Pouch\n ※prefab Version: DST-632551 "
    },
    "prefab:yotc_carrat_race_checkpoint_item(ID Complete)": {
        "prefix": "p+yotc_carrat_race_checkpoint_item",
        "body": "\"yotc_carrat_race_checkpoint_item\"",
        "description": " ※prefab ID: yotc_carrat_race_checkpoint_item\n ※Name: Checkpoint Kit\n ※Recipe: \n\t+ 2 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /CARRATOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:yotc_carrat_race_checkpoint_item(ReverseSearch)": {
        "prefix": "p+Checkpoint Kit",
        "body": "\"yotc_carrat_race_checkpoint_item\"",
        "description": " ※prefab ID: yotc_carrat_race_checkpoint_item\n ※Name: Checkpoint Kit\n ※Recipe: \n\t+ 2 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /CARRATOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:glommerfuel(ID Complete)": {
        "prefix": "p+glommerfuel",
        "body": "\"glommerfuel\"",
        "description": " ※prefab ID: glommerfuel\n ※Name: Glommer's Goop\n ※prefab Version: DST-632551 "
    },
    "prefab:glommerfuel(ReverseSearch)": {
        "prefix": "p+Glommer's Goop",
        "body": "\"glommerfuel\"",
        "description": " ※prefab ID: glommerfuel\n ※Name: Glommer's Goop\n ※prefab Version: DST-632551 "
    },
    "prefab:ancienttree_seed_planted(ID Complete)": {
        "prefix": "p+ancienttree_seed_planted",
        "body": "\"ancienttree_seed_planted\"",
        "description": " ※prefab ID: ancienttree_seed_planted\n ※Name: Planted Surprising Seed\n ※prefab Version: DST-632551 "
    },
    "prefab:ancienttree_seed_planted(ReverseSearch)": {
        "prefix": "p+Planted Surprising Seed",
        "body": "\"ancienttree_seed_planted\"",
        "description": " ※prefab ID: ancienttree_seed_planted\n ※Name: Planted Surprising Seed\n ※prefab Version: DST-632551 "
    },
    "prefab:costume_king_body(ID Complete)": {
        "prefix": "p+costume_king_body",
        "body": "\"costume_king_body\"",
        "description": " ※prefab ID: costume_king_body\n ※Name: King Costume\n ※prefab Version: DST-632551 "
    },
    "prefab:costume_king_body(ReverseSearch)": {
        "prefix": "p+King Costume",
        "body": "\"costume_king_body\"",
        "description": " ※prefab ID: costume_king_body\n ※Name: King Costume\n ※prefab Version: DST-632551 "
    },
    "prefab:lavae_egg(ID Complete)": {
        "prefix": "p+lavae_egg",
        "body": "\"lavae_egg\"",
        "description": " ※prefab ID: lavae_egg\n ※Name: Lavae Egg\n ※prefab Version: DST-632551 "
    },
    "prefab:lavae_egg(ReverseSearch)": {
        "prefix": "p+Lavae Egg",
        "body": "\"lavae_egg\"",
        "description": " ※prefab ID: lavae_egg\n ※Name: Lavae Egg\n ※prefab Version: DST-632551 "
    },
    "prefab:lost_toy_19(ID Complete)": {
        "prefix": "p+lost_toy_19",
        "body": "\"lost_toy_19\"",
        "description": " ※prefab ID: lost_toy_19\n ※Name: Favorite Spinning Top\n ※prefab Version: DST-632551 "
    },
    "prefab:lost_toy_19(ReverseSearch)": {
        "prefix": "p+Favorite Spinning Top",
        "body": "\"lost_toy_19\"",
        "description": " ※prefab ID: lost_toy_19\n ※Name: Favorite Spinning Top\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_032(ID Complete)": {
        "prefix": "p+quagmire_food_032",
        "body": "\"quagmire_food_032\"",
        "description": " ※prefab ID: quagmire_food_032\n ※Name: Meat Stew\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_032(ReverseSearch)": {
        "prefix": "p+Meat Stew",
        "body": "\"quagmire_food_032\"",
        "description": " ※prefab ID: quagmire_food_032\n ※Name: Meat Stew\n ※prefab Version: DST-632551 "
    },
    "prefab:fishingnet(ID Complete)": {
        "prefix": "p+fishingnet",
        "body": "\"fishingnet\"",
        "description": " ※prefab ID: fishingnet\n ※Name: Fishing Net\n ※prefab Version: DST-632551 "
    },
    "prefab:fishingnet(ReverseSearch)": {
        "prefix": "p+Fishing Net",
        "body": "\"fishingnet\"",
        "description": " ※prefab ID: fishingnet\n ※Name: Fishing Net\n ※prefab Version: DST-632551 "
    },
    "prefab:beardhair(ID Complete)": {
        "prefix": "p+beardhair",
        "body": "\"beardhair\"",
        "description": " ※prefab ID: beardhair\n ※Name: Beard Hair\n ※prefab Version: DST-632551 "
    },
    "prefab:beardhair(ReverseSearch)": {
        "prefix": "p+Beard Hair",
        "body": "\"beardhair\"",
        "description": " ※prefab ID: beardhair\n ※Name: Beard Hair\n ※prefab Version: DST-632551 "
    },
    "prefab:firehound(ID Complete)": {
        "prefix": "p+firehound",
        "body": "\"firehound\"",
        "description": " ※prefab ID: firehound\n ※Name: Red Hound\n ※prefab Version: DST-632551 "
    },
    "prefab:firehound(ReverseSearch)": {
        "prefix": "p+Red Hound",
        "body": "\"firehound\"",
        "description": " ※prefab ID: firehound\n ※Name: Red Hound\n ※prefab Version: DST-632551 "
    },
    "prefab:winona_machineparts_1(ID Complete)": {
        "prefix": "p+winona_machineparts_1",
        "body": "\"winona_machineparts_1\"",
        "description": " ※prefab ID: winona_machineparts_1\n ※Name: Doohickey\n ※prefab Version: DST-632551 "
    },
    "prefab:winona_machineparts_1(ReverseSearch)": {
        "prefix": "p+Doohickey",
        "body": "\"winona_machineparts_1\"",
        "description": " ※prefab ID: winona_machineparts_1\n ※Name: Doohickey\n ※prefab Version: DST-632551 "
    },
    "prefab:shadowheart(ID Complete)": {
        "prefix": "p+shadowheart",
        "body": "\"shadowheart\"",
        "description": " ※prefab ID: shadowheart\n ※Name: Shadow Atrium\n ※prefab Version: DST-632551 "
    },
    "prefab:shadowheart(ReverseSearch)": {
        "prefix": "p+Shadow Atrium",
        "body": "\"shadowheart\"",
        "description": " ※prefab ID: shadowheart\n ※Name: Shadow Atrium\n ※prefab Version: DST-632551 "
    },
    "prefab:kitcoon_marsh(ID Complete)": {
        "prefix": "p+kitcoon_marsh",
        "body": "\"kitcoon_marsh\"",
        "description": " ※prefab ID: kitcoon_marsh\n ※Name: Kitcoon\n ※prefab Version: DST-632551 "
    },
    "prefab:kitcoon_marsh(ReverseSearch)": {
        "prefix": "p+Kitcoon",
        "body": "\"kitcoon_marsh\"",
        "description": " ※prefab ID: kitcoon_marsh\n ※Name: Kitcoon\n ※prefab Version: DST-632551 "
    },
    "prefab:saltstack(ID Complete)": {
        "prefix": "p+saltstack",
        "body": "\"saltstack\"",
        "description": " ※prefab ID: saltstack\n ※Name: Salt Formation\n ※prefab Version: DST-632551 "
    },
    "prefab:saltstack(ReverseSearch)": {
        "prefix": "p+Salt Formation",
        "body": "\"saltstack\"",
        "description": " ※prefab ID: saltstack\n ※Name: Salt Formation\n ※prefab Version: DST-632551 "
    },
    "prefab:ticoon(ID Complete)": {
        "prefix": "p+ticoon",
        "body": "\"ticoon\"",
        "description": " ※prefab ID: ticoon\n ※Name: Ticoon\n ※prefab Version: DST-632551 "
    },
    "prefab:ticoon(ReverseSearch)": {
        "prefix": "p+Ticoon",
        "body": "\"ticoon\"",
        "description": " ※prefab ID: ticoon\n ※Name: Ticoon\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_wildwheat(ID Complete)": {
        "prefix": "p+quagmire_wildwheat",
        "body": "\"quagmire_wildwheat\"",
        "description": " ※prefab ID: quagmire_wildwheat\n ※Name: Wheat\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_wildwheat(ReverseSearch)": {
        "prefix": "p+Wheat",
        "body": "\"quagmire_wildwheat\"",
        "description": " ※prefab ID: quagmire_wildwheat\n ※Name: Wheat\n ※prefab Version: DST-632551 "
    },
    "prefab:halloweencandy_1(ID Complete)": {
        "prefix": "p+halloweencandy_1",
        "body": "\"halloweencandy_1\"",
        "description": " ※prefab ID: halloweencandy_1\n ※Name: Candy Apple\n ※prefab Version: DST-632551 "
    },
    "prefab:halloweencandy_1(ReverseSearch)": {
        "prefix": "p+Candy Apple",
        "body": "\"halloweencandy_1\"",
        "description": " ※prefab ID: halloweencandy_1\n ※Name: Candy Apple\n ※prefab Version: DST-632551 "
    },
    "prefab:skullchest(ID Complete)": {
        "prefix": "p+skullchest",
        "body": "\"skullchest\"",
        "description": " ※prefab ID: skullchest\n ※Name: Skullchest\n ※prefab Version: DST-632551 "
    },
    "prefab:skullchest(ReverseSearch)": {
        "prefix": "p+Skullchest",
        "body": "\"skullchest\"",
        "description": " ※prefab ID: skullchest\n ※Name: Skullchest\n ※prefab Version: DST-632551 "
    },
    "prefab:berrybush_juicy(ID Complete)": {
        "prefix": "p+berrybush_juicy",
        "body": "\"berrybush_juicy\"",
        "description": " ※prefab ID: berrybush_juicy\n ※Name: Juicy Berry Bush\n ※prefab Version: DST-632551 "
    },
    "prefab:berrybush_juicy(ReverseSearch)": {
        "prefix": "p+Juicy Berry Bush",
        "body": "\"berrybush_juicy\"",
        "description": " ※prefab ID: berrybush_juicy\n ※Name: Juicy Berry Bush\n ※prefab Version: DST-632551 "
    },
    "prefab:halloweencandy_3(ID Complete)": {
        "prefix": "p+halloweencandy_3",
        "body": "\"halloweencandy_3\"",
        "description": " ※prefab ID: halloweencandy_3\n ※Name: Not-So-Candy Corn\n ※prefab Version: DST-632551 "
    },
    "prefab:halloweencandy_3(ReverseSearch)": {
        "prefix": "p+Not-So-Candy Corn",
        "body": "\"halloweencandy_3\"",
        "description": " ※prefab ID: halloweencandy_3\n ※Name: Not-So-Candy Corn\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_clayhound_sketch(ID Complete)": {
        "prefix": "p+chesspiece_clayhound_sketch",
        "body": "\"chesspiece_clayhound_sketch\"",
        "description": " ※prefab ID: chesspiece_clayhound_sketch\n ※Name: Hound Figure Sketch\n ※Recipe: \n\t+ 8 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /WARGOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_clayhound_sketch(ReverseSearch)": {
        "prefix": "p+Hound Figure Sketch",
        "body": "\"chesspiece_clayhound_sketch\"",
        "description": " ※prefab ID: chesspiece_clayhound_sketch\n ※Name: Hound Figure Sketch\n ※Recipe: \n\t+ 8 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /WARGOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_armormediumrecharger(ID Complete)": {
        "prefix": "p+lavaarena_armormediumrecharger",
        "body": "\"lavaarena_armormediumrecharger\"",
        "description": " ※prefab ID: lavaarena_armormediumrecharger\n ※Name: Silken Wood Armor\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_armormediumrecharger(ReverseSearch)": {
        "prefix": "p+Silken Wood Armor",
        "body": "\"lavaarena_armormediumrecharger\"",
        "description": " ※prefab ID: lavaarena_armormediumrecharger\n ※Name: Silken Wood Armor\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_armor_hprecharger(ID Complete)": {
        "prefix": "p+lavaarena_armor_hprecharger",
        "body": "\"lavaarena_armor_hprecharger\"",
        "description": " ※prefab ID: lavaarena_armor_hprecharger\n ※Name: Silken Grand Armor\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_armor_hprecharger(ReverseSearch)": {
        "prefix": "p+Silken Grand Armor",
        "body": "\"lavaarena_armor_hprecharger\"",
        "description": " ※prefab ID: lavaarena_armor_hprecharger\n ※Name: Silken Grand Armor\n ※prefab Version: DST-632551 "
    },
    "prefab:archive_rune_statue(ID Complete)": {
        "prefix": "p+archive_rune_statue",
        "body": "\"archive_rune_statue\"",
        "description": " ※prefab ID: archive_rune_statue\n ※Name: Ancient Lunarune Stone\n ※prefab Version: DST-632551 "
    },
    "prefab:archive_rune_statue(ReverseSearch)": {
        "prefix": "p+Ancient Lunarune Stone",
        "body": "\"archive_rune_statue\"",
        "description": " ※prefab ID: archive_rune_statue\n ※Name: Ancient Lunarune Stone\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_heavyblade(ID Complete)": {
        "prefix": "p+lavaarena_heavyblade",
        "body": "\"lavaarena_heavyblade\"",
        "description": " ※prefab ID: lavaarena_heavyblade\n ※Name: Blacksmith's Edge\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_heavyblade(ReverseSearch)": {
        "prefix": "p+Blacksmith's Edge",
        "body": "\"lavaarena_heavyblade\"",
        "description": " ※prefab ID: lavaarena_heavyblade\n ※Name: Blacksmith's Edge\n ※prefab Version: DST-632551 "
    },
    "prefab:voidcloth_umbrella(ID Complete)": {
        "prefix": "p+voidcloth_umbrella",
        "body": "\"voidcloth_umbrella\"",
        "description": " ※prefab ID: voidcloth_umbrella\n ※Name: Umbralla\n ※Recipe: \n\t+ 5 x: Pure Horror/horrorfuel\n\t+ 1 x: Dark Tatters/voidcloth\n ※Required Tech: \n\t+ LV.2 : Shadowcraft/SHADOWFORGING\n ※prefab Version: DST-632551 "
    },
    "prefab:voidcloth_umbrella(ReverseSearch)": {
        "prefix": "p+Umbralla",
        "body": "\"voidcloth_umbrella\"",
        "description": " ※prefab ID: voidcloth_umbrella\n ※Name: Umbralla\n ※Recipe: \n\t+ 5 x: Pure Horror/horrorfuel\n\t+ 1 x: Dark Tatters/voidcloth\n ※Required Tech: \n\t+ LV.2 : Shadowcraft/SHADOWFORGING\n ※prefab Version: DST-632551 "
    },
    "prefab:winterometer(ID Complete)": {
        "prefix": "p+winterometer",
        "body": "\"winterometer\"",
        "description": " ※prefab ID: winterometer\n ※Name: Thermal Measurer\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 2 x: Gold Nugget/goldnugget\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:winterometer(ReverseSearch)": {
        "prefix": "p+Thermal Measurer",
        "body": "\"winterometer\"",
        "description": " ※prefab ID: winterometer\n ※Name: Thermal Measurer\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 2 x: Gold Nugget/goldnugget\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_guardianphase3_builder(ID Complete)": {
        "prefix": "p+chesspiece_guardianphase3_builder",
        "body": "\"chesspiece_guardianphase3_builder\"",
        "description": " ※prefab ID: chesspiece_guardianphase3_builder\n ※Name: Celestial Champion Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_guardianphase3_builder(ReverseSearch)": {
        "prefix": "p+Celestial Champion Figure",
        "body": "\"chesspiece_guardianphase3_builder\"",
        "description": " ※prefab ID: chesspiece_guardianphase3_builder\n ※Name: Celestial Champion Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:ancienttree_seed(ID Complete)": {
        "prefix": "p+ancienttree_seed",
        "body": "\"ancienttree_seed\"",
        "description": " ※prefab ID: ancienttree_seed\n ※Name: Surprising Seed\n ※prefab Version: DST-632551 "
    },
    "prefab:ancienttree_seed(ReverseSearch)": {
        "prefix": "p+Surprising Seed",
        "body": "\"ancienttree_seed\"",
        "description": " ※prefab ID: ancienttree_seed\n ※Name: Surprising Seed\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_turnip(ID Complete)": {
        "prefix": "p+quagmire_turnip",
        "body": "\"quagmire_turnip\"",
        "description": " ※prefab ID: quagmire_turnip\n ※Name: Turnip\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_turnip(ReverseSearch)": {
        "prefix": "p+Turnip",
        "body": "\"quagmire_turnip\"",
        "description": " ※prefab ID: quagmire_turnip\n ※Name: Turnip\n ※prefab Version: DST-632551 "
    },
    "prefab:klaus(ID Complete)": {
        "prefix": "p+klaus",
        "body": "\"klaus\"",
        "description": " ※prefab ID: klaus\n ※Name: Klaus\n ※prefab Version: DST-632551 "
    },
    "prefab:klaus(ReverseSearch)": {
        "prefix": "p+Klaus",
        "body": "\"klaus\"",
        "description": " ※prefab ID: klaus\n ※Name: Klaus\n ※prefab Version: DST-632551 "
    },
    "prefab:researchlab4(ID Complete)": {
        "prefix": "p+researchlab4",
        "body": "\"researchlab4\"",
        "description": " ※prefab ID: researchlab4\n ※Name: Prestihatitator\n ※Recipe: \n\t+ 4 x: Rabbit/rabbit\n\t+ 4 x: Boards/boards\n\t+ 1 x: Top Hat/tophat\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:researchlab4(ReverseSearch)": {
        "prefix": "p+Prestihatitator",
        "body": "\"researchlab4\"",
        "description": " ※prefab ID: researchlab4\n ※Name: Prestihatitator\n ※Recipe: \n\t+ 4 x: Rabbit/rabbit\n\t+ 4 x: Boards/boards\n\t+ 1 x: Top Hat/tophat\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_carpetfloor2(ID Complete)": {
        "prefix": "p+turf_carpetfloor2",
        "body": "\"turf_carpetfloor2\"",
        "description": " ※prefab ID: turf_carpetfloor2\n ※Name: Lush Carpet\n ※Recipe: \n\t+ 1 x: Boards/boards\n\t+ 1 x: Beefalo Wool/beefalowool\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_carpetfloor2(ReverseSearch)": {
        "prefix": "p+Lush Carpet",
        "body": "\"turf_carpetfloor2\"",
        "description": " ※prefab ID: turf_carpetfloor2\n ※Name: Lush Carpet\n ※Recipe: \n\t+ 1 x: Boards/boards\n\t+ 1 x: Beefalo Wool/beefalowool\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:crabking_mob(ID Complete)": {
        "prefix": "p+crabking_mob",
        "body": "\"crabking_mob\"",
        "description": " ※prefab ID: crabking_mob\n ※Name: Crab Guard\n ※prefab Version: DST-632551 "
    },
    "prefab:crabking_mob(ReverseSearch)": {
        "prefix": "p+Crab Guard",
        "body": "\"crabking_mob\"",
        "description": " ※prefab ID: crabking_mob\n ※Name: Crab Guard\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_seeds_5(ID Complete)": {
        "prefix": "p+quagmire_seeds_5",
        "body": "\"quagmire_seeds_5\"",
        "description": " ※prefab ID: quagmire_seeds_5\n ※Name: Round Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_seeds_5(ReverseSearch)": {
        "prefix": "p+Round Seeds",
        "body": "\"quagmire_seeds_5\"",
        "description": " ※prefab ID: quagmire_seeds_5\n ※Name: Round Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:known_eggplant_seeds(ID Complete)": {
        "prefix": "p+known_eggplant_seeds",
        "body": "\"known_eggplant_seeds\"",
        "description": " ※prefab ID: known_eggplant_seeds\n ※Name: Eggplant Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:known_eggplant_seeds(ReverseSearch)": {
        "prefix": "p+Eggplant Seeds",
        "body": "\"known_eggplant_seeds\"",
        "description": " ※prefab ID: known_eggplant_seeds\n ※Name: Eggplant Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:archive_moon_statue(ID Complete)": {
        "prefix": "p+archive_moon_statue",
        "body": "\"archive_moon_statue\"",
        "description": " ※prefab ID: archive_moon_statue\n ※Name: Ancient Moon Statue\n ※prefab Version: DST-632551 "
    },
    "prefab:archive_moon_statue(ReverseSearch)": {
        "prefix": "p+Ancient Moon Statue",
        "body": "\"archive_moon_statue\"",
        "description": " ※prefab ID: archive_moon_statue\n ※Name: Ancient Moon Statue\n ※prefab Version: DST-632551 "
    },
    "prefab:gargoyle_werepig(ID Complete)": {
        "prefix": "p+gargoyle_werepig",
        "body": "\"gargoyle_werepig\"",
        "description": " ※prefab ID: gargoyle_werepig\n ※Name: Suspicious Moonrock\n ※prefab Version: DST-632551 "
    },
    "prefab:gargoyle_werepig(ReverseSearch)": {
        "prefix": "p+Suspicious Moonrock",
        "body": "\"gargoyle_werepig\"",
        "description": " ※prefab ID: gargoyle_werepig\n ※Name: Suspicious Moonrock\n ※prefab Version: DST-632551 "
    },
    "prefab:bananapop(ID Complete)": {
        "prefix": "p+bananapop",
        "body": "\"bananapop\"",
        "description": " ※prefab ID: bananapop\n ※Name: Banana Pop\n ※prefab Version: DST-632551 "
    },
    "prefab:bananapop(ReverseSearch)": {
        "prefix": "p+Banana Pop",
        "body": "\"bananapop\"",
        "description": " ※prefab ID: bananapop\n ※Name: Banana Pop\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_seedpacket_4(ID Complete)": {
        "prefix": "p+quagmire_seedpacket_4",
        "body": "\"quagmire_seedpacket_4\"",
        "description": " ※prefab ID: quagmire_seedpacket_4\n ※Name: Packet of Pointy Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_seedpacket_4(ReverseSearch)": {
        "prefix": "p+Packet of Pointy Seeds",
        "body": "\"quagmire_seedpacket_4\"",
        "description": " ※prefab ID: quagmire_seedpacket_4\n ※Name: Packet of Pointy Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_crabmeat(ID Complete)": {
        "prefix": "p+quagmire_crabmeat",
        "body": "\"quagmire_crabmeat\"",
        "description": " ※prefab ID: quagmire_crabmeat\n ※Name: Crab Meat\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_crabmeat(ReverseSearch)": {
        "prefix": "p+Crab Meat",
        "body": "\"quagmire_crabmeat\"",
        "description": " ※prefab ID: quagmire_crabmeat\n ※Name: Crab Meat\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_pipe(ID Complete)": {
        "prefix": "p+chesspiece_pipe",
        "body": "\"chesspiece_pipe\"",
        "description": " ※prefab ID: chesspiece_pipe\n ※Name: Bubble Pipe Carving\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_pipe(ReverseSearch)": {
        "prefix": "p+Bubble Pipe Carving",
        "body": "\"chesspiece_pipe\"",
        "description": " ※prefab ID: chesspiece_pipe\n ※Name: Bubble Pipe Carving\n ※prefab Version: DST-632551 "
    },
    "prefab:saltbox(ID Complete)": {
        "prefix": "p+saltbox",
        "body": "\"saltbox\"",
        "description": " ※prefab ID: saltbox\n ※Name: Salt Box\n ※Recipe: \n\t+ 10 x: Salt Crystals/saltrock\n\t+ 1 x: Blue Gem/bluegem\n\t+ 1 x: Cut Stone/cutstone\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:saltbox(ReverseSearch)": {
        "prefix": "p+Salt Box",
        "body": "\"saltbox\"",
        "description": " ※prefab ID: saltbox\n ※Name: Salt Box\n ※Recipe: \n\t+ 10 x: Salt Crystals/saltrock\n\t+ 1 x: Blue Gem/bluegem\n\t+ 1 x: Cut Stone/cutstone\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:spider_healer(ID Complete)": {
        "prefix": "p+spider_healer",
        "body": "\"spider_healer\"",
        "description": " ※prefab ID: spider_healer\n ※Name: Nurse Spider\n ※prefab Version: DST-632551 "
    },
    "prefab:spider_healer(ReverseSearch)": {
        "prefix": "p+Nurse Spider",
        "body": "\"spider_healer\"",
        "description": " ※prefab ID: spider_healer\n ※Name: Nurse Spider\n ※prefab Version: DST-632551 "
    },
    "prefab:pocketwatch_warp(ID Complete)": {
        "prefix": "p+pocketwatch_warp",
        "body": "\"pocketwatch_warp\"",
        "description": " ※prefab ID: pocketwatch_warp\n ※Name: Backstep Watch\n ※Recipe: \n\t+ 1 x: Time Pieces/pocketwatch_parts\n\t+ 2 x: Gold Nugget/goldnugget\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:pocketwatch_warp(ReverseSearch)": {
        "prefix": "p+Backstep Watch",
        "body": "\"pocketwatch_warp\"",
        "description": " ※prefab ID: pocketwatch_warp\n ※Name: Backstep Watch\n ※Recipe: \n\t+ 1 x: Time Pieces/pocketwatch_parts\n\t+ 2 x: Gold Nugget/goldnugget\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:marsh_tree(ID Complete)": {
        "prefix": "p+marsh_tree",
        "body": "\"marsh_tree\"",
        "description": " ※prefab ID: marsh_tree\n ※Name: Spiky Tree\n ※prefab Version: DST-632551 "
    },
    "prefab:marsh_tree(ReverseSearch)": {
        "prefix": "p+Spiky Tree",
        "body": "\"marsh_tree\"",
        "description": " ※prefab ID: marsh_tree\n ※Name: Spiky Tree\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_pot_syrup(ID Complete)": {
        "prefix": "p+quagmire_pot_syrup",
        "body": "\"quagmire_pot_syrup\"",
        "description": " ※prefab ID: quagmire_pot_syrup\n ※Name: Syrup Pot\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_pot_syrup(ReverseSearch)": {
        "prefix": "p+Syrup Pot",
        "body": "\"quagmire_pot_syrup\"",
        "description": " ※prefab ID: quagmire_pot_syrup\n ※Name: Syrup Pot\n ※prefab Version: DST-632551 "
    },
    "prefab:cookiecuttershell(ID Complete)": {
        "prefix": "p+cookiecuttershell",
        "body": "\"cookiecuttershell\"",
        "description": " ※prefab ID: cookiecuttershell\n ※Name: Cookie Cutter Shell\n ※prefab Version: DST-632551 "
    },
    "prefab:cookiecuttershell(ReverseSearch)": {
        "prefix": "p+Cookie Cutter Shell",
        "body": "\"cookiecuttershell\"",
        "description": " ※prefab ID: cookiecuttershell\n ※Name: Cookie Cutter Shell\n ※prefab Version: DST-632551 "
    },
    "prefab:stone_table_square(ID Complete)": {
        "prefix": "p+stone_table_square",
        "body": "\"stone_table_square\"",
        "description": " ※prefab ID: stone_table_square\n ※Name: Stone Square Table\n ※Recipe: \n\t+ 3 x: Cut Stone/cutstone\n\t+ 2 x: Rope/rope\n ※Required Tech: \n\t+ LV.3 : Carpentry/CARPENTRY\n ※prefab Version: DST-632551 "
    },
    "prefab:stone_table_square(ReverseSearch)": {
        "prefix": "p+Stone Square Table",
        "body": "\"stone_table_square\"",
        "description": " ※prefab ID: stone_table_square\n ※Name: Stone Square Table\n ※Recipe: \n\t+ 3 x: Cut Stone/cutstone\n\t+ 2 x: Rope/rope\n ※Required Tech: \n\t+ LV.3 : Carpentry/CARPENTRY\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_29(ID Complete)": {
        "prefix": "p+trinket_29",
        "body": "\"trinket_29\"",
        "description": " ※prefab ID: trinket_29\n ※Name: Black Rook\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_29(ReverseSearch)": {
        "prefix": "p+Black Rook",
        "body": "\"trinket_29\"",
        "description": " ※prefab ID: trinket_29\n ※Name: Black Rook\n ※prefab Version: DST-632551 "
    },
    "prefab:asparagus_seeds(ID Complete)": {
        "prefix": "p+asparagus_seeds",
        "body": "\"asparagus_seeds\"",
        "description": " ※prefab ID: asparagus_seeds\n ※Name: Tubular Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:asparagus_seeds(ReverseSearch)": {
        "prefix": "p+Tubular Seeds",
        "body": "\"asparagus_seeds\"",
        "description": " ※prefab ID: asparagus_seeds\n ※Name: Tubular Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_twinsofterror(ID Complete)": {
        "prefix": "p+chesspiece_twinsofterror",
        "body": "\"chesspiece_twinsofterror\"",
        "description": " ※prefab ID: chesspiece_twinsofterror\n ※Name: Twins of Terror Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_twinsofterror(ReverseSearch)": {
        "prefix": "p+Twins of Terror Figure",
        "body": "\"chesspiece_twinsofterror\"",
        "description": " ※prefab ID: chesspiece_twinsofterror\n ※Name: Twins of Terror Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalgame_feedchicks_nest_off(ID Complete)": {
        "prefix": "p+carnivalgame_feedchicks_nest_off",
        "body": "\"carnivalgame_feedchicks_nest_off\"",
        "description": " ※prefab ID: carnivalgame_feedchicks_nest_off\n ※Name: Trapdoor\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalgame_feedchicks_nest_off(ReverseSearch)": {
        "prefix": "p+Trapdoor",
        "body": "\"carnivalgame_feedchicks_nest_off\"",
        "description": " ※prefab ID: carnivalgame_feedchicks_nest_off\n ※Name: Trapdoor\n ※prefab Version: DST-632551 "
    },
    "prefab:winona_remote(ID Complete)": {
        "prefix": "p+winona_remote",
        "body": "\"winona_remote\"",
        "description": " ※prefab ID: winona_remote\n ※Name: Handy Remote\n ※Recipe: \n\t+ 1 x: Electrical Doodad/transistor\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:winona_remote(ReverseSearch)": {
        "prefix": "p+Handy Remote",
        "body": "\"winona_remote\"",
        "description": " ※prefab ID: winona_remote\n ※Name: Handy Remote\n ※Recipe: \n\t+ 1 x: Electrical Doodad/transistor\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:coldfirepit(ID Complete)": {
        "prefix": "p+coldfirepit",
        "body": "\"coldfirepit\"",
        "description": " ※prefab ID: coldfirepit\n ※Name: Endothermic Fire Pit\n ※Recipe: \n\t+ 2 x: Nitre/nitre\n\t+ 4 x: Cut Stone/cutstone\n\t+ 2 x: Electrical Doodad/transistor\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:coldfirepit(ReverseSearch)": {
        "prefix": "p+Endothermic Fire Pit",
        "body": "\"coldfirepit\"",
        "description": " ※prefab ID: coldfirepit\n ※Name: Endothermic Fire Pit\n ※Recipe: \n\t+ 2 x: Nitre/nitre\n\t+ 4 x: Cut Stone/cutstone\n\t+ 2 x: Electrical Doodad/transistor\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:yotc_carrat_gym_reaction_item(ID Complete)": {
        "prefix": "p+yotc_carrat_gym_reaction_item",
        "body": "\"yotc_carrat_gym_reaction_item\"",
        "description": " ※prefab ID: yotc_carrat_gym_reaction_item\n ※Name: Reflex Gym Kit\n ※Recipe: \n\t+ 4 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /CARRATOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:yotc_carrat_gym_reaction_item(ReverseSearch)": {
        "prefix": "p+Reflex Gym Kit",
        "body": "\"yotc_carrat_gym_reaction_item\"",
        "description": " ※prefab ID: yotc_carrat_gym_reaction_item\n ※Name: Reflex Gym Kit\n ※Recipe: \n\t+ 4 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /CARRATOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_lamp_post(ID Complete)": {
        "prefix": "p+quagmire_lamp_post",
        "body": "\"quagmire_lamp_post\"",
        "description": " ※prefab ID: quagmire_lamp_post\n ※Name: Streetlight\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_lamp_post(ReverseSearch)": {
        "prefix": "p+Streetlight",
        "body": "\"quagmire_lamp_post\"",
        "description": " ※prefab ID: quagmire_lamp_post\n ※Name: Streetlight\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_key_park(ID Complete)": {
        "prefix": "p+quagmire_key_park",
        "body": "\"quagmire_key_park\"",
        "description": " ※prefab ID: quagmire_key_park\n ※Name: Iron Key\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_key_park(ReverseSearch)": {
        "prefix": "p+Iron Key",
        "body": "\"quagmire_key_park\"",
        "description": " ※prefab ID: quagmire_key_park\n ※Name: Iron Key\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_altar_statue1(ID Complete)": {
        "prefix": "p+quagmire_altar_statue1",
        "body": "\"quagmire_altar_statue1\"",
        "description": " ※prefab ID: quagmire_altar_statue1\n ※Name: Beast of Hunger\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_altar_statue1(ReverseSearch)": {
        "prefix": "p+Beast of Hunger",
        "body": "\"quagmire_altar_statue1\"",
        "description": " ※prefab ID: quagmire_altar_statue1\n ※Name: Beast of Hunger\n ※prefab Version: DST-632551 "
    },
    "prefab:wagstaff_tool_3(ID Complete)": {
        "prefix": "p+wagstaff_tool_3",
        "body": "\"wagstaff_tool_3\"",
        "description": " ※prefab ID: wagstaff_tool_3\n ※Name: Grommet Scriber\n ※prefab Version: DST-632551 "
    },
    "prefab:wagstaff_tool_3(ReverseSearch)": {
        "prefix": "p+Grommet Scriber",
        "body": "\"wagstaff_tool_3\"",
        "description": " ※prefab ID: wagstaff_tool_3\n ※Name: Grommet Scriber\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_altar_statue2(ID Complete)": {
        "prefix": "p+quagmire_altar_statue2",
        "body": "\"quagmire_altar_statue2\"",
        "description": " ※prefab ID: quagmire_altar_statue2\n ※Name: Beast of Hunger\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_altar_statue2(ReverseSearch)": {
        "prefix": "p+Beast of Hunger",
        "body": "\"quagmire_altar_statue2\"",
        "description": " ※prefab ID: quagmire_altar_statue2\n ※Name: Beast of Hunger\n ※prefab Version: DST-632551 "
    },
    "prefab:deerclopseyeball_sentryward_kit(ID Complete)": {
        "prefix": "p+deerclopseyeball_sentryward_kit",
        "body": "\"deerclopseyeball_sentryward_kit\"",
        "description": " ※prefab ID: deerclopseyeball_sentryward_kit\n ※Name: Ice Crystaleyezer Kit\n ※Recipe: \n\t+ 1 x: Spark Ark/security_pulse_cage_full\n\t+ 8 x: Moon Shard/moonglass\n\t+ 5 x: Pure Brilliance/purebrilliance\n\t+ 3 x: Moon Rock/moonrocknugget\n ※Required Tech: \n\t+ LV.2 : Brightsmithy/LUNARFORGING\n ※prefab Version: DST-632551 "
    },
    "prefab:deerclopseyeball_sentryward_kit(ReverseSearch)": {
        "prefix": "p+Ice Crystaleyezer Kit",
        "body": "\"deerclopseyeball_sentryward_kit\"",
        "description": " ※prefab ID: deerclopseyeball_sentryward_kit\n ※Name: Ice Crystaleyezer Kit\n ※Recipe: \n\t+ 1 x: Spark Ark/security_pulse_cage_full\n\t+ 8 x: Moon Shard/moonglass\n\t+ 5 x: Pure Brilliance/purebrilliance\n\t+ 3 x: Moon Rock/moonrocknugget\n ※Required Tech: \n\t+ LV.2 : Brightsmithy/LUNARFORGING\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_armorheavy(ID Complete)": {
        "prefix": "p+lavaarena_armorheavy",
        "body": "\"lavaarena_armorheavy\"",
        "description": " ※prefab ID: lavaarena_armorheavy\n ※Name: Stone Splint Mail\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_armorheavy(ReverseSearch)": {
        "prefix": "p+Stone Splint Mail",
        "body": "\"lavaarena_armorheavy\"",
        "description": " ※prefab ID: lavaarena_armorheavy\n ※Name: Stone Splint Mail\n ※prefab Version: DST-632551 "
    },
    "prefab:shadowthrall_wings_allegiance(ID Complete)": {
        "prefix": "p+shadowthrall_wings_allegiance",
        "body": "\"shadowthrall_wings_allegiance\"",
        "description": " ※prefab ID: shadowthrall_wings_allegiance\n ※Name: Shriek\n ※prefab Version: DST-632551 "
    },
    "prefab:shadowthrall_wings_allegiance(ReverseSearch)": {
        "prefix": "p+Shriek",
        "body": "\"shadowthrall_wings_allegiance\"",
        "description": " ※prefab ID: shadowthrall_wings_allegiance\n ※Name: Shriek\n ※prefab Version: DST-632551 "
    },
    "prefab:sewing_kit(ID Complete)": {
        "prefix": "p+sewing_kit",
        "body": "\"sewing_kit\"",
        "description": " ※prefab ID: sewing_kit\n ※Name: Sewing Kit\n ※Recipe: \n\t+ 1 x: Log/log\n\t+ 8 x: Silk/silk\n\t+ 2 x: Hound's Tooth/houndstooth\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:sewing_kit(ReverseSearch)": {
        "prefix": "p+Sewing Kit",
        "body": "\"sewing_kit\"",
        "description": " ※prefab ID: sewing_kit\n ※Name: Sewing Kit\n ※Recipe: \n\t+ 1 x: Log/log\n\t+ 8 x: Silk/silk\n\t+ 2 x: Hound's Tooth/houndstooth\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_garlic_cooked(ID Complete)": {
        "prefix": "p+quagmire_garlic_cooked",
        "body": "\"quagmire_garlic_cooked\"",
        "description": " ※prefab ID: quagmire_garlic_cooked\n ※Name: Roast Garlic\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_garlic_cooked(ReverseSearch)": {
        "prefix": "p+Roast Garlic",
        "body": "\"quagmire_garlic_cooked\"",
        "description": " ※prefab ID: quagmire_garlic_cooked\n ※Name: Roast Garlic\n ※prefab Version: DST-632551 "
    },
    "prefab:mermhead(ID Complete)": {
        "prefix": "p+mermhead",
        "body": "\"mermhead\"",
        "description": " ※prefab ID: mermhead\n ※Name: Merm Head\n ※Recipe: \n\t+ 1 x: Freshwater Fish/pondfish\n\t+ 4 x: Rot/spoiled_food\n\t+ 4 x: Twigs/twigs\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:mermhead(ReverseSearch)": {
        "prefix": "p+Merm Head",
        "body": "\"mermhead\"",
        "description": " ※prefab ID: mermhead\n ※Name: Merm Head\n ※Recipe: \n\t+ 1 x: Freshwater Fish/pondfish\n\t+ 4 x: Rot/spoiled_food\n\t+ 4 x: Twigs/twigs\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:carnivaldecor_figure_kit_season2(ID Complete)": {
        "prefix": "p+carnivaldecor_figure_kit_season2",
        "body": "\"carnivaldecor_figure_kit_season2\"",
        "description": " ※prefab ID: carnivaldecor_figure_kit_season2\n ※Name: Gold Mystery Box\n ※Recipe: \n\t+ 12 x: Prize Tickets/carnival_prizeticket\n ※Required Tech: \n\t+ LV.1 : Trinket Trove/CARNIVAL_PRIZESHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivaldecor_figure_kit_season2(ReverseSearch)": {
        "prefix": "p+Gold Mystery Box",
        "body": "\"carnivaldecor_figure_kit_season2\"",
        "description": " ※prefab ID: carnivaldecor_figure_kit_season2\n ※Name: Gold Mystery Box\n ※Recipe: \n\t+ 12 x: Prize Tickets/carnival_prizeticket\n ※Required Tech: \n\t+ LV.1 : Trinket Trove/CARNIVAL_PRIZESHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:sporecloud(ID Complete)": {
        "prefix": "p+sporecloud",
        "body": "\"sporecloud\"",
        "description": " ※prefab ID: sporecloud\n ※Name: Spore Cloud\n ※prefab Version: DST-632551 "
    },
    "prefab:sporecloud(ReverseSearch)": {
        "prefix": "p+Spore Cloud",
        "body": "\"sporecloud\"",
        "description": " ※prefab ID: sporecloud\n ※Name: Spore Cloud\n ※prefab Version: DST-632551 "
    },
    "prefab:soil_amender_fresh(ID Complete)": {
        "prefix": "p+soil_amender_fresh",
        "body": "\"soil_amender_fresh\"",
        "description": " ※prefab ID: soil_amender_fresh\n ※Name: Growth Formula Starter\n ※prefab Version: DST-632551 "
    },
    "prefab:soil_amender_fresh(ReverseSearch)": {
        "prefix": "p+Growth Formula Starter",
        "body": "\"soil_amender_fresh\"",
        "description": " ※prefab ID: soil_amender_fresh\n ※Name: Growth Formula Starter\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_fern(ID Complete)": {
        "prefix": "p+quagmire_fern",
        "body": "\"quagmire_fern\"",
        "description": " ※prefab ID: quagmire_fern\n ※Name: Fern\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_fern(ReverseSearch)": {
        "prefix": "p+Fern",
        "body": "\"quagmire_fern\"",
        "description": " ※prefab ID: quagmire_fern\n ※Name: Fern\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_salmon(ID Complete)": {
        "prefix": "p+quagmire_salmon",
        "body": "\"quagmire_salmon\"",
        "description": " ※prefab ID: quagmire_salmon\n ※Name: Salmon\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_salmon(ReverseSearch)": {
        "prefix": "p+Salmon",
        "body": "\"quagmire_salmon\"",
        "description": " ※prefab ID: quagmire_salmon\n ※Name: Salmon\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_marsh(ID Complete)": {
        "prefix": "p+turf_marsh",
        "body": "\"turf_marsh\"",
        "description": " ※prefab ID: turf_marsh\n ※Name: Marsh Turf\n ※Recipe: \n\t+ 1 x: Cut Reeds/cutreeds\n\t+ 2 x: Rot/spoiled_food\n ※Required Tech: \n\t+ LV.2 : /MASHTURFCRAFTING\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_marsh(ReverseSearch)": {
        "prefix": "p+Marsh Turf",
        "body": "\"turf_marsh\"",
        "description": " ※prefab ID: turf_marsh\n ※Name: Marsh Turf\n ※Recipe: \n\t+ 1 x: Cut Reeds/cutreeds\n\t+ 2 x: Rot/spoiled_food\n ※Required Tech: \n\t+ LV.2 : /MASHTURFCRAFTING\n ※prefab Version: DST-632551 "
    },
    "prefab:wall_hay(ID Complete)": {
        "prefix": "p+wall_hay",
        "body": "\"wall_hay\"",
        "description": " ※prefab ID: wall_hay\n ※Name: Hay Wall\n ※prefab Version: DST-632551 "
    },
    "prefab:wall_hay(ReverseSearch)": {
        "prefix": "p+Hay Wall",
        "body": "\"wall_hay\"",
        "description": " ※prefab ID: wall_hay\n ※Name: Hay Wall\n ※prefab Version: DST-632551 "
    },
    "prefab:kitcoonden(ID Complete)": {
        "prefix": "p+kitcoonden",
        "body": "\"kitcoonden\"",
        "description": " ※prefab ID: kitcoonden\n ※Name: Kitcoon Nursery\n ※Recipe: \n\t+ 1 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:kitcoonden(ReverseSearch)": {
        "prefix": "p+Kitcoon Nursery",
        "body": "\"kitcoonden\"",
        "description": " ※prefab ID: kitcoonden\n ※Name: Kitcoon Nursery\n ※Recipe: \n\t+ 1 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:tornado(ID Complete)": {
        "prefix": "p+tornado",
        "body": "\"tornado\"",
        "description": " ※prefab ID: tornado\n ※Name: Tornado\n ※prefab Version: DST-632551 "
    },
    "prefab:tornado(ReverseSearch)": {
        "prefix": "p+Tornado",
        "body": "\"tornado\"",
        "description": " ※prefab ID: tornado\n ※Name: Tornado\n ※prefab Version: DST-632551 "
    },
    "prefab:wx78module_bee(ID Complete)": {
        "prefix": "p+wx78module_bee",
        "body": "\"wx78module_bee\"",
        "description": " ※prefab ID: wx78module_bee\n ※Name: Beanbooster Circuit\n ※Recipe: \n\t+ 8 x: Bio Data/scandata\n\t+ 1 x: Royal Jelly/royal_jelly\n\t+ 1 x: Super-Processing Circuit/wx78module_maxsanity\n ※Required Tech: \n\t+ LV.1 : Circuitry/ROBOTMODULECRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:wx78module_bee(ReverseSearch)": {
        "prefix": "p+Beanbooster Circuit",
        "body": "\"wx78module_bee\"",
        "description": " ※prefab ID: wx78module_bee\n ※Name: Beanbooster Circuit\n ※Recipe: \n\t+ 8 x: Bio Data/scandata\n\t+ 1 x: Royal Jelly/royal_jelly\n\t+ 1 x: Super-Processing Circuit/wx78module_maxsanity\n ※Required Tech: \n\t+ LV.1 : Circuitry/ROBOTMODULECRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:houndbone(ID Complete)": {
        "prefix": "p+houndbone",
        "body": "\"houndbone\"",
        "description": " ※prefab ID: houndbone\n ※Name: Bones\n ※prefab Version: DST-632551 "
    },
    "prefab:houndbone(ReverseSearch)": {
        "prefix": "p+Bones",
        "body": "\"houndbone\"",
        "description": " ※prefab ID: houndbone\n ※Name: Bones\n ※prefab Version: DST-632551 "
    },
    "prefab:book_sleep(ID Complete)": {
        "prefix": "p+book_sleep",
        "body": "\"book_sleep\"",
        "description": " ※prefab ID: book_sleep\n ※Name: Sleepytime Stories\n ※Recipe: \n\t+ 2 x: Papyrus/papyrus\n\t+ 2 x: Nightmare Fuel/nightmarefuel\n ※Required Tech: \n\t+ LV.2 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:book_sleep(ReverseSearch)": {
        "prefix": "p+Sleepytime Stories",
        "body": "\"book_sleep\"",
        "description": " ※prefab ID: book_sleep\n ※Name: Sleepytime Stories\n ※Recipe: \n\t+ 2 x: Papyrus/papyrus\n\t+ 2 x: Nightmare Fuel/nightmarefuel\n ※Required Tech: \n\t+ LV.2 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:wintercooking_berrysauce(ID Complete)": {
        "prefix": "p+wintercooking_berrysauce",
        "body": "\"wintercooking_berrysauce\"",
        "description": " ※prefab ID: wintercooking_berrysauce\n ※Name: Merry Berrysauce\n ※Recipe: \n\t+ 1 x: Holiday Cheer/wintersfeastfuel\n\t+ 2 x: Mosquito Sack/mosquitosack\n ※Required Tech: \n\t+ LV.1 : Feast/WINTERSFEASTCOOKING\n ※prefab Version: DST-632551 "
    },
    "prefab:wintercooking_berrysauce(ReverseSearch)": {
        "prefix": "p+Merry Berrysauce",
        "body": "\"wintercooking_berrysauce\"",
        "description": " ※prefab ID: wintercooking_berrysauce\n ※Name: Merry Berrysauce\n ※Recipe: \n\t+ 1 x: Holiday Cheer/wintersfeastfuel\n\t+ 2 x: Mosquito Sack/mosquitosack\n ※Required Tech: \n\t+ LV.1 : Feast/WINTERSFEASTCOOKING\n ※prefab Version: DST-632551 "
    },
    "prefab:bunnystew(ID Complete)": {
        "prefix": "p+bunnystew",
        "body": "\"bunnystew\"",
        "description": " ※prefab ID: bunnystew\n ※Name: Bunny Stew\n ※prefab Version: DST-632551 "
    },
    "prefab:bunnystew(ReverseSearch)": {
        "prefix": "p+Bunny Stew",
        "body": "\"bunnystew\"",
        "description": " ※prefab ID: bunnystew\n ※Name: Bunny Stew\n ※prefab Version: DST-632551 "
    },
    "prefab:iceberg(ID Complete)": {
        "prefix": "p+iceberg",
        "body": "\"iceberg\"",
        "description": " ※prefab ID: iceberg\n ※Name: Mini Iceberg\n ※prefab Version: DST-632551 "
    },
    "prefab:iceberg(ReverseSearch)": {
        "prefix": "p+Mini Iceberg",
        "body": "\"iceberg\"",
        "description": " ※prefab ID: iceberg\n ※Name: Mini Iceberg\n ※prefab Version: DST-632551 "
    },
    "prefab:sandspike(ID Complete)": {
        "prefix": "p+sandspike",
        "body": "\"sandspike\"",
        "description": " ※prefab ID: sandspike\n ※Name: Sand Spike\n ※prefab Version: DST-632551 "
    },
    "prefab:sandspike(ReverseSearch)": {
        "prefix": "p+Sand Spike",
        "body": "\"sandspike\"",
        "description": " ※prefab ID: sandspike\n ※Name: Sand Spike\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_rubble_clock(ID Complete)": {
        "prefix": "p+quagmire_rubble_clock",
        "body": "\"quagmire_rubble_clock\"",
        "description": " ※prefab ID: quagmire_rubble_clock\n ※Name: Smashed Clock\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_rubble_clock(ReverseSearch)": {
        "prefix": "p+Smashed Clock",
        "body": "\"quagmire_rubble_clock\"",
        "description": " ※prefab ID: quagmire_rubble_clock\n ※Name: Smashed Clock\n ※prefab Version: DST-632551 "
    },
    "prefab:guano(ID Complete)": {
        "prefix": "p+guano",
        "body": "\"guano\"",
        "description": " ※prefab ID: guano\n ※Name: Guano\n ※prefab Version: DST-632551 "
    },
    "prefab:guano(ReverseSearch)": {
        "prefix": "p+Guano",
        "body": "\"guano\"",
        "description": " ※prefab ID: guano\n ※Name: Guano\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_rubble_chimney(ID Complete)": {
        "prefix": "p+quagmire_rubble_chimney",
        "body": "\"quagmire_rubble_chimney\"",
        "description": " ※prefab ID: quagmire_rubble_chimney\n ※Name: Dilapidated Chimney\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_rubble_chimney(ReverseSearch)": {
        "prefix": "p+Dilapidated Chimney",
        "body": "\"quagmire_rubble_chimney\"",
        "description": " ※prefab ID: quagmire_rubble_chimney\n ※Name: Dilapidated Chimney\n ※prefab Version: DST-632551 "
    },
    "prefab:pigelite2(ID Complete)": {
        "prefix": "p+pigelite2",
        "body": "\"pigelite2\"",
        "description": " ※prefab ID: pigelite2\n ※Name: Ignatius\n ※prefab Version: DST-632551 "
    },
    "prefab:pigelite2(ReverseSearch)": {
        "prefix": "p+Ignatius",
        "body": "\"pigelite2\"",
        "description": " ※prefab ID: pigelite2\n ※Name: Ignatius\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_coin3(ID Complete)": {
        "prefix": "p+quagmire_coin3",
        "body": "\"quagmire_coin3\"",
        "description": " ※prefab ID: quagmire_coin3\n ※Name: Red Mark\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_coin3(ReverseSearch)": {
        "prefix": "p+Red Mark",
        "body": "\"quagmire_coin3\"",
        "description": " ※prefab ID: quagmire_coin3\n ※Name: Red Mark\n ※prefab Version: DST-632551 "
    },
    "prefab:lunarthrall_plant_gestalt(ID Complete)": {
        "prefix": "p+lunarthrall_plant_gestalt",
        "body": "\"lunarthrall_plant_gestalt\"",
        "description": " ※prefab ID: lunarthrall_plant_gestalt\n ※Name: Brightshade Gestalt\n ※prefab Version: DST-632551 "
    },
    "prefab:lunarthrall_plant_gestalt(ReverseSearch)": {
        "prefix": "p+Brightshade Gestalt",
        "body": "\"lunarthrall_plant_gestalt\"",
        "description": " ※prefab ID: lunarthrall_plant_gestalt\n ※Name: Brightshade Gestalt\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_003(ID Complete)": {
        "prefix": "p+quagmire_food_003",
        "body": "\"quagmire_food_003\"",
        "description": " ※prefab ID: quagmire_food_003\n ※Name: Vegetable Soup\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_003(ReverseSearch)": {
        "prefix": "p+Vegetable Soup",
        "body": "\"quagmire_food_003\"",
        "description": " ※prefab ID: quagmire_food_003\n ※Name: Vegetable Soup\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishinglure_spoon_silver(ID Complete)": {
        "prefix": "p+oceanfishinglure_spoon_silver",
        "body": "\"oceanfishinglure_spoon_silver\"",
        "description": " ※prefab ID: oceanfishinglure_spoon_silver\n ※Name: not used\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishinglure_spoon_silver(ReverseSearch)": {
        "prefix": "p+not used",
        "body": "\"oceanfishinglure_spoon_silver\"",
        "description": " ※prefab ID: oceanfishinglure_spoon_silver\n ※Name: not used\n ※prefab Version: DST-632551 "
    },
    "prefab:deer_gemmed(ID Complete)": {
        "prefix": "p+deer_gemmed",
        "body": "\"deer_gemmed\"",
        "description": " ※prefab ID: deer_gemmed\n ※Name: No-Eyed Deer\n ※prefab Version: DST-632551 "
    },
    "prefab:deer_gemmed(ReverseSearch)": {
        "prefix": "p+No-Eyed Deer",
        "body": "\"deer_gemmed\"",
        "description": " ※prefab ID: deer_gemmed\n ※Name: No-Eyed Deer\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_055(ID Complete)": {
        "prefix": "p+quagmire_food_055",
        "body": "\"quagmire_food_055\"",
        "description": " ※prefab ID: quagmire_food_055\n ※Name: Breaded Cutlet\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_055(ReverseSearch)": {
        "prefix": "p+Breaded Cutlet",
        "body": "\"quagmire_food_055\"",
        "description": " ※prefab ID: quagmire_food_055\n ※Name: Breaded Cutlet\n ※prefab Version: DST-632551 "
    },
    "prefab:armor_carrotlure(ID Complete)": {
        "prefix": "p+armor_carrotlure",
        "body": "\"armor_carrotlure\"",
        "description": " ※prefab ID: armor_carrotlure\n ※Name: Coat of Carrots\n ※Recipe: \n\t+ 8 x: Carrot/carrot\n\t+ 3 x: Rope/rope\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:armor_carrotlure(ReverseSearch)": {
        "prefix": "p+Coat of Carrots",
        "body": "\"armor_carrotlure\"",
        "description": " ※prefab ID: armor_carrotlure\n ※Name: Coat of Carrots\n ※Recipe: \n\t+ 8 x: Carrot/carrot\n\t+ 3 x: Rope/rope\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:turf_dirt(ID Complete)": {
        "prefix": "p+turf_dirt",
        "body": "\"turf_dirt\"",
        "description": " ※prefab ID: turf_dirt\n ※Name: Dirt Turf\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_dirt(ReverseSearch)": {
        "prefix": "p+Dirt Turf",
        "body": "\"turf_dirt\"",
        "description": " ※prefab ID: turf_dirt\n ※Name: Dirt Turf\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_6(ID Complete)": {
        "prefix": "p+trinket_6",
        "body": "\"trinket_6\"",
        "description": " ※prefab ID: trinket_6\n ※Name: Frazzled Wires\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_6(ReverseSearch)": {
        "prefix": "p+Frazzled Wires",
        "body": "\"trinket_6\"",
        "description": " ※prefab ID: trinket_6\n ※Name: Frazzled Wires\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_012(ID Complete)": {
        "prefix": "p+quagmire_food_012",
        "body": "\"quagmire_food_012\"",
        "description": " ※prefab ID: quagmire_food_012\n ※Name: Stone Soup\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_012(ReverseSearch)": {
        "prefix": "p+Stone Soup",
        "body": "\"quagmire_food_012\"",
        "description": " ※prefab ID: quagmire_food_012\n ※Name: Stone Soup\n ※prefab Version: DST-632551 "
    },
    "prefab:lureplant(ID Complete)": {
        "prefix": "p+lureplant",
        "body": "\"lureplant\"",
        "description": " ※prefab ID: lureplant\n ※Name: Lureplant\n ※prefab Version: DST-632551 "
    },
    "prefab:lureplant(ReverseSearch)": {
        "prefix": "p+Lureplant",
        "body": "\"lureplant\"",
        "description": " ※prefab ID: lureplant\n ※Name: Lureplant\n ※prefab Version: DST-632551 "
    },
    "prefab:moon_cap(ID Complete)": {
        "prefix": "p+moon_cap",
        "body": "\"moon_cap\"",
        "description": " ※prefab ID: moon_cap\n ※Name: Moon Shroom\n ※prefab Version: DST-632551 "
    },
    "prefab:moon_cap(ReverseSearch)": {
        "prefix": "p+Moon Shroom",
        "body": "\"moon_cap\"",
        "description": " ※prefab ID: moon_cap\n ※Name: Moon Shroom\n ※prefab Version: DST-632551 "
    },
    "prefab:batcave(ID Complete)": {
        "prefix": "p+batcave",
        "body": "\"batcave\"",
        "description": " ※prefab ID: batcave\n ※Name: Bat Cave\n ※prefab Version: DST-632551 "
    },
    "prefab:batcave(ReverseSearch)": {
        "prefix": "p+Bat Cave",
        "body": "\"batcave\"",
        "description": " ※prefab ID: batcave\n ※Name: Bat Cave\n ※prefab Version: DST-632551 "
    },
    "prefab:mermguard(ID Complete)": {
        "prefix": "p+mermguard",
        "body": "\"mermguard\"",
        "description": " ※prefab ID: mermguard\n ※Name: Loyal Merm Guard\n ※prefab Version: DST-632551 "
    },
    "prefab:mermguard(ReverseSearch)": {
        "prefix": "p+Loyal Merm Guard",
        "body": "\"mermguard\"",
        "description": " ※prefab ID: mermguard\n ※Name: Loyal Merm Guard\n ※prefab Version: DST-632551 "
    },
    "prefab:monsterlasagna(ID Complete)": {
        "prefix": "p+monsterlasagna",
        "body": "\"monsterlasagna\"",
        "description": " ※prefab ID: monsterlasagna\n ※Name: Monster Lasagna\n ※prefab Version: DST-632551 "
    },
    "prefab:monsterlasagna(ReverseSearch)": {
        "prefix": "p+Monster Lasagna",
        "body": "\"monsterlasagna\"",
        "description": " ※prefab ID: monsterlasagna\n ※Name: Monster Lasagna\n ※prefab Version: DST-632551 "
    },
    "prefab:boat_bumper_shell_kit(ID Complete)": {
        "prefix": "p+boat_bumper_shell_kit",
        "body": "\"boat_bumper_shell_kit\"",
        "description": " ※prefab ID: boat_bumper_shell_kit\n ※Name: Shell Bumper Kit\n ※Recipe: \n\t+ 3 x: Broken Shell/slurtle_shellpieces\n\t+ 1 x: Rope/rope\n ※Required Tech: \n\t+ LV.1 : Seafaring/SEAFARING\n ※prefab Version: DST-632551 "
    },
    "prefab:boat_bumper_shell_kit(ReverseSearch)": {
        "prefix": "p+Shell Bumper Kit",
        "body": "\"boat_bumper_shell_kit\"",
        "description": " ※prefab ID: boat_bumper_shell_kit\n ※Name: Shell Bumper Kit\n ※Recipe: \n\t+ 3 x: Broken Shell/slurtle_shellpieces\n\t+ 1 x: Rope/rope\n ※Required Tech: \n\t+ LV.1 : Seafaring/SEAFARING\n ※prefab Version: DST-632551 "
    },
    "prefab:rock_petrified_tree(ID Complete)": {
        "prefix": "p+rock_petrified_tree",
        "body": "\"rock_petrified_tree\"",
        "description": " ※prefab ID: rock_petrified_tree\n ※Name: Petrified Tree\n ※prefab Version: DST-632551 "
    },
    "prefab:rock_petrified_tree(ReverseSearch)": {
        "prefix": "p+Petrified Tree",
        "body": "\"rock_petrified_tree\"",
        "description": " ※prefab ID: rock_petrified_tree\n ※Name: Petrified Tree\n ※prefab Version: DST-632551 "
    },
    "prefab:decor_pictureframe(ID Complete)": {
        "prefix": "p+decor_pictureframe",
        "body": "\"decor_pictureframe\"",
        "description": " ※prefab ID: decor_pictureframe\n ※Name: Empty Frame\n ※Recipe: \n\t+ 2 x: Log/log\n\t+ 2 x: Twigs/twigs\n ※Required Tech: \n\t+ LV.2 : Carpentry/CARPENTRY\n ※prefab Version: DST-632551 "
    },
    "prefab:decor_pictureframe(ReverseSearch)": {
        "prefix": "p+Empty Frame",
        "body": "\"decor_pictureframe\"",
        "description": " ※prefab ID: decor_pictureframe\n ※Name: Empty Frame\n ※Recipe: \n\t+ 2 x: Log/log\n\t+ 2 x: Twigs/twigs\n ※Required Tech: \n\t+ LV.2 : Carpentry/CARPENTRY\n ※prefab Version: DST-632551 "
    },
    "prefab:scrap_monoclehat(ID Complete)": {
        "prefix": "p+scrap_monoclehat",
        "body": "\"scrap_monoclehat\"",
        "description": " ※prefab ID: scrap_monoclehat\n ※Name: Horizon Expandinator\n ※Recipe: \n\t+ 2 x: Scrap/wagpunk_bits\n\t+ 1 x: Electrical Doodad/transistor\n\t+ 1 x: Frazzled Wires/trinket_6\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:scrap_monoclehat(ReverseSearch)": {
        "prefix": "p+Horizon Expandinator",
        "body": "\"scrap_monoclehat\"",
        "description": " ※prefab ID: scrap_monoclehat\n ※Name: Horizon Expandinator\n ※Recipe: \n\t+ 2 x: Scrap/wagpunk_bits\n\t+ 1 x: Electrical Doodad/transistor\n\t+ 1 x: Frazzled Wires/trinket_6\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_033(ID Complete)": {
        "prefix": "p+quagmire_food_033",
        "body": "\"quagmire_food_033\"",
        "description": " ※prefab ID: quagmire_food_033\n ※Name: Hamburger\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_033(ReverseSearch)": {
        "prefix": "p+Hamburger",
        "body": "\"quagmire_food_033\"",
        "description": " ※prefab ID: quagmire_food_033\n ※Name: Hamburger\n ※prefab Version: DST-632551 "
    },
    "prefab:cabbagerolls(ID Complete)": {
        "prefix": "p+cabbagerolls",
        "body": "\"cabbagerolls\"",
        "description": " ※prefab ID: cabbagerolls\n ※Name: Cabbage Rolls\n ※prefab Version: DST-632551 "
    },
    "prefab:cabbagerolls(ReverseSearch)": {
        "prefix": "p+Cabbage Rolls",
        "body": "\"cabbagerolls\"",
        "description": " ※prefab ID: cabbagerolls\n ※Name: Cabbage Rolls\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivaldecor_eggride1_kit(ID Complete)": {
        "prefix": "p+carnivaldecor_eggride1_kit",
        "body": "\"carnivaldecor_eggride1_kit\"",
        "description": " ※prefab ID: carnivaldecor_eggride1_kit\n ※Name: Mini Ferris Wheel Kit\n ※Recipe: \n\t+ 36 x: Prize Tickets/carnival_prizeticket\n ※Required Tech: \n\t+ LV.1 : Trinket Trove/CARNIVAL_PRIZESHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivaldecor_eggride1_kit(ReverseSearch)": {
        "prefix": "p+Mini Ferris Wheel Kit",
        "body": "\"carnivaldecor_eggride1_kit\"",
        "description": " ※prefab ID: carnivaldecor_eggride1_kit\n ※Name: Mini Ferris Wheel Kit\n ※Recipe: \n\t+ 36 x: Prize Tickets/carnival_prizeticket\n ※Required Tech: \n\t+ LV.1 : Trinket Trove/CARNIVAL_PRIZESHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:saddle_race(ID Complete)": {
        "prefix": "p+saddle_race",
        "body": "\"saddle_race\"",
        "description": " ※prefab ID: saddle_race\n ※Name: Glossamer Saddle\n ※Recipe: \n\t+ 2 x: Living Log/livinglog\n\t+ 4 x: Silk/silk\n\t+ 68 x: Butterfly Wings/butterflywings\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:saddle_race(ReverseSearch)": {
        "prefix": "p+Glossamer Saddle",
        "body": "\"saddle_race\"",
        "description": " ※prefab ID: saddle_race\n ※Name: Glossamer Saddle\n ※Recipe: \n\t+ 2 x: Living Log/livinglog\n\t+ 4 x: Silk/silk\n\t+ 68 x: Butterfly Wings/butterflywings\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:spiderhat(ID Complete)": {
        "prefix": "p+spiderhat",
        "body": "\"spiderhat\"",
        "description": " ※prefab ID: spiderhat\n ※Name: Spiderhat\n ※Recipe: \n\t+ 4 x: Silk/silk\n\t+ 2 x: Spider Gland/spidergland\n\t+ 1 x: Monster Meat/monstermeat\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:spiderhat(ReverseSearch)": {
        "prefix": "p+Spiderhat",
        "body": "\"spiderhat\"",
        "description": " ※prefab ID: spiderhat\n ※Name: Spiderhat\n ※Recipe: \n\t+ 4 x: Silk/silk\n\t+ 2 x: Spider Gland/spidergland\n\t+ 1 x: Monster Meat/monstermeat\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_037(ID Complete)": {
        "prefix": "p+quagmire_food_037",
        "body": "\"quagmire_food_037\"",
        "description": " ※prefab ID: quagmire_food_037\n ※Name: Curry\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_037(ReverseSearch)": {
        "prefix": "p+Curry",
        "body": "\"quagmire_food_037\"",
        "description": " ※prefab ID: quagmire_food_037\n ※Name: Curry\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_043(ID Complete)": {
        "prefix": "p+quagmire_food_043",
        "body": "\"quagmire_food_043\"",
        "description": " ※prefab ID: quagmire_food_043\n ※Name: Bread Pudding\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_043(ReverseSearch)": {
        "prefix": "p+Bread Pudding",
        "body": "\"quagmire_food_043\"",
        "description": " ※prefab ID: quagmire_food_043\n ※Name: Bread Pudding\n ※prefab Version: DST-632551 "
    },
    "prefab:onion_seeds(ID Complete)": {
        "prefix": "p+onion_seeds",
        "body": "\"onion_seeds\"",
        "description": " ※prefab ID: onion_seeds\n ※Name: Pointy Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:onion_seeds(ReverseSearch)": {
        "prefix": "p+Pointy Seeds",
        "body": "\"onion_seeds\"",
        "description": " ※prefab ID: onion_seeds\n ※Name: Pointy Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:wood_chair(ID Complete)": {
        "prefix": "p+wood_chair",
        "body": "\"wood_chair\"",
        "description": " ※prefab ID: wood_chair\n ※Name: Wooden Chair\n ※Recipe: \n\t+ 1 x: Boards/boards\n ※Required Tech: \n\t+ LV.2 : Carpentry/CARPENTRY\n ※prefab Version: DST-632551 "
    },
    "prefab:wood_chair(ReverseSearch)": {
        "prefix": "p+Wooden Chair",
        "body": "\"wood_chair\"",
        "description": " ※prefab ID: wood_chair\n ※Name: Wooden Chair\n ※Recipe: \n\t+ 1 x: Boards/boards\n ※Required Tech: \n\t+ LV.2 : Carpentry/CARPENTRY\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_044(ID Complete)": {
        "prefix": "p+quagmire_food_044",
        "body": "\"quagmire_food_044\"",
        "description": " ※prefab ID: quagmire_food_044\n ※Name: Waffles\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_044(ReverseSearch)": {
        "prefix": "p+Waffles",
        "body": "\"quagmire_food_044\"",
        "description": " ※prefab ID: quagmire_food_044\n ※Name: Waffles\n ※prefab Version: DST-632551 "
    },
    "prefab:spicepack(ID Complete)": {
        "prefix": "p+spicepack",
        "body": "\"spicepack\"",
        "description": " ※prefab ID: spicepack\n ※Name: Chef Pouch\n ※Recipe: \n\t+ 4 x: Cut Grass/cutgrass\n\t+ 4 x: Twigs/twigs\n\t+ 2 x: Nitre/nitre\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:spicepack(ReverseSearch)": {
        "prefix": "p+Chef Pouch",
        "body": "\"spicepack\"",
        "description": " ※prefab ID: spicepack\n ※Name: Chef Pouch\n ※Recipe: \n\t+ 4 x: Cut Grass/cutgrass\n\t+ 4 x: Twigs/twigs\n\t+ 2 x: Nitre/nitre\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_048(ID Complete)": {
        "prefix": "p+quagmire_food_048",
        "body": "\"quagmire_food_048\"",
        "description": " ※prefab ID: quagmire_food_048\n ※Name: Grilled Cheese\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_048(ReverseSearch)": {
        "prefix": "p+Grilled Cheese",
        "body": "\"quagmire_food_048\"",
        "description": " ※prefab ID: quagmire_food_048\n ※Name: Grilled Cheese\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_049(ID Complete)": {
        "prefix": "p+quagmire_food_049",
        "body": "\"quagmire_food_049\"",
        "description": " ※prefab ID: quagmire_food_049\n ※Name: Cream of Mushroom Soup\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_049(ReverseSearch)": {
        "prefix": "p+Cream of Mushroom Soup",
        "body": "\"quagmire_food_049\"",
        "description": " ※prefab ID: quagmire_food_049\n ※Name: Cream of Mushroom Soup\n ※prefab Version: DST-632551 "
    },
    "prefab:ancient_statue(ID Complete)": {
        "prefix": "p+ancient_statue",
        "body": "\"ancient_statue\"",
        "description": " ※prefab ID: ancient_statue\n ※Name: Ancient Statue\n ※prefab Version: DST-632551 "
    },
    "prefab:ancient_statue(ReverseSearch)": {
        "prefix": "p+Ancient Statue",
        "body": "\"ancient_statue\"",
        "description": " ※prefab ID: ancient_statue\n ※Name: Ancient Statue\n ※prefab Version: DST-632551 "
    },
    "prefab:fishmeat_small(ID Complete)": {
        "prefix": "p+fishmeat_small",
        "body": "\"fishmeat_small\"",
        "description": " ※prefab ID: fishmeat_small\n ※Name: Fish Morsel\n ※prefab Version: DST-632551 "
    },
    "prefab:fishmeat_small(ReverseSearch)": {
        "prefix": "p+Fish Morsel",
        "body": "\"fishmeat_small\"",
        "description": " ※prefab ID: fishmeat_small\n ※Name: Fish Morsel\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanvine(ID Complete)": {
        "prefix": "p+oceanvine",
        "body": "\"oceanvine\"",
        "description": " ※prefab ID: oceanvine\n ※Name: Mossy Vine\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanvine(ReverseSearch)": {
        "prefix": "p+Mossy Vine",
        "body": "\"oceanvine\"",
        "description": " ※prefab ID: oceanvine\n ※Name: Mossy Vine\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_054(ID Complete)": {
        "prefix": "p+quagmire_food_054",
        "body": "\"quagmire_food_054\"",
        "description": " ※prefab ID: quagmire_food_054\n ※Name: Onion Soup\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_054(ReverseSearch)": {
        "prefix": "p+Onion Soup",
        "body": "\"quagmire_food_054\"",
        "description": " ※prefab ID: quagmire_food_054\n ※Name: Onion Soup\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_060(ID Complete)": {
        "prefix": "p+quagmire_food_060",
        "body": "\"quagmire_food_060\"",
        "description": " ※prefab ID: quagmire_food_060\n ※Name: Steak Frites\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_060(ReverseSearch)": {
        "prefix": "p+Steak Frites",
        "body": "\"quagmire_food_060\"",
        "description": " ※prefab ID: quagmire_food_060\n ※Name: Steak Frites\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_067(ID Complete)": {
        "prefix": "p+quagmire_food_067",
        "body": "\"quagmire_food_067\"",
        "description": " ※prefab ID: quagmire_food_067\n ※Name: Scone\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_067(ReverseSearch)": {
        "prefix": "p+Scone",
        "body": "\"quagmire_food_067\"",
        "description": " ※prefab ID: quagmire_food_067\n ※Name: Scone\n ※prefab Version: DST-632551 "
    },
    "prefab:tacklesketch(ID Complete)": {
        "prefix": "p+tacklesketch",
        "body": "\"tacklesketch\"",
        "description": " ※prefab ID: tacklesketch\n ※Name: {item} Advert\n ※prefab Version: DST-632551 "
    },
    "prefab:tacklesketch(ReverseSearch)": {
        "prefix": "p+{item} Advert",
        "body": "\"tacklesketch\"",
        "description": " ※prefab ID: tacklesketch\n ※Name: {item} Advert\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_carrat_builder(ID Complete)": {
        "prefix": "p+chesspiece_carrat_builder",
        "body": "\"chesspiece_carrat_builder\"",
        "description": " ※prefab ID: chesspiece_carrat_builder\n ※Name: Carrat Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_carrat_builder(ReverseSearch)": {
        "prefix": "p+Carrat Figure",
        "body": "\"chesspiece_carrat_builder\"",
        "description": " ※prefab ID: chesspiece_carrat_builder\n ※Name: Carrat Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:soil_amender_fermented(ID Complete)": {
        "prefix": "p+soil_amender_fermented",
        "body": "\"soil_amender_fermented\"",
        "description": " ※prefab ID: soil_amender_fermented\n ※Name: Super Growth Formula\n ※prefab Version: DST-632551 "
    },
    "prefab:soil_amender_fermented(ReverseSearch)": {
        "prefix": "p+Super Growth Formula",
        "body": "\"soil_amender_fermented\"",
        "description": " ※prefab ID: soil_amender_fermented\n ※Name: Super Growth Formula\n ※prefab Version: DST-632551 "
    },
    "prefab:gargoyle_hound(ID Complete)": {
        "prefix": "p+gargoyle_hound",
        "body": "\"gargoyle_hound\"",
        "description": " ※prefab ID: gargoyle_hound\n ※Name: Suspicious Moonrock\n ※prefab Version: DST-632551 "
    },
    "prefab:gargoyle_hound(ReverseSearch)": {
        "prefix": "p+Suspicious Moonrock",
        "body": "\"gargoyle_hound\"",
        "description": " ※prefab ID: gargoyle_hound\n ※Name: Suspicious Moonrock\n ※prefab Version: DST-632551 "
    },
    "prefab:winona_holotelepad(ID Complete)": {
        "prefix": "p+winona_holotelepad",
        "body": "\"winona_holotelepad\"",
        "description": " ※prefab ID: winona_holotelepad\n ※Name: Unstable Transmission\n ※prefab Version: DST-632551 "
    },
    "prefab:winona_holotelepad(ReverseSearch)": {
        "prefix": "p+Unstable Transmission",
        "body": "\"winona_holotelepad\"",
        "description": " ※prefab ID: winona_holotelepad\n ※Name: Unstable Transmission\n ※prefab Version: DST-632551 "
    },
    "prefab:winona_holotelebrella(ID Complete)": {
        "prefix": "p+winona_holotelebrella",
        "body": "\"winona_holotelebrella\"",
        "description": " ※prefab ID: winona_holotelebrella\n ※Name: Unstable Transmission\n ※prefab Version: DST-632551 "
    },
    "prefab:winona_holotelebrella(ReverseSearch)": {
        "prefix": "p+Unstable Transmission",
        "body": "\"winona_holotelebrella\"",
        "description": " ※prefab ID: winona_holotelebrella\n ※Name: Unstable Transmission\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_dragonfly(ID Complete)": {
        "prefix": "p+chesspiece_dragonfly",
        "body": "\"chesspiece_dragonfly\"",
        "description": " ※prefab ID: chesspiece_dragonfly\n ※Name: Dragonfly Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_dragonfly(ReverseSearch)": {
        "prefix": "p+Dragonfly Figure",
        "body": "\"chesspiece_dragonfly\"",
        "description": " ※prefab ID: chesspiece_dragonfly\n ※Name: Dragonfly Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:maxwellkey(ID Complete)": {
        "prefix": "p+maxwellkey",
        "body": "\"maxwellkey\"",
        "description": " ※prefab ID: maxwellkey\n ※Name: Shadow Key\n ※prefab Version: DST-632551 "
    },
    "prefab:maxwellkey(ReverseSearch)": {
        "prefix": "p+Shadow Key",
        "body": "\"maxwellkey\"",
        "description": " ※prefab ID: maxwellkey\n ※Name: Shadow Key\n ※prefab Version: DST-632551 "
    },
    "prefab:tomato(ID Complete)": {
        "prefix": "p+tomato",
        "body": "\"tomato\"",
        "description": " ※prefab ID: tomato\n ※Name: Toma Root\n ※prefab Version: DST-632551 "
    },
    "prefab:tomato(ReverseSearch)": {
        "prefix": "p+Toma Root",
        "body": "\"tomato\"",
        "description": " ※prefab ID: tomato\n ※Name: Toma Root\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_ruinstrim_glow(ID Complete)": {
        "prefix": "p+turf_ruinstrim_glow",
        "body": "\"turf_ruinstrim_glow\"",
        "description": " ※prefab ID: turf_ruinstrim_glow\n ※Name: Imitation Ancient Brickwork\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_ruinstrim_glow(ReverseSearch)": {
        "prefix": "p+Imitation Ancient Brickwork",
        "body": "\"turf_ruinstrim_glow\"",
        "description": " ※prefab ID: turf_ruinstrim_glow\n ※Name: Imitation Ancient Brickwork\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:slurtle_shellpieces(ID Complete)": {
        "prefix": "p+slurtle_shellpieces",
        "body": "\"slurtle_shellpieces\"",
        "description": " ※prefab ID: slurtle_shellpieces\n ※Name: Broken Shell\n ※prefab Version: DST-632551 "
    },
    "prefab:slurtle_shellpieces(ReverseSearch)": {
        "prefix": "p+Broken Shell",
        "body": "\"slurtle_shellpieces\"",
        "description": " ※prefab ID: slurtle_shellpieces\n ※Name: Broken Shell\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_dragonfly(ID Complete)": {
        "prefix": "p+turf_dragonfly",
        "body": "\"turf_dragonfly\"",
        "description": " ※prefab ID: turf_dragonfly\n ※Name: Scaled Flooring\n ※Recipe: \n\t+ 1 x: Scales/dragon_scales\n\t+ 1 x: Cut Stone/cutstone\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_dragonfly(ReverseSearch)": {
        "prefix": "p+Scaled Flooring",
        "body": "\"turf_dragonfly\"",
        "description": " ※prefab ID: turf_dragonfly\n ※Name: Scaled Flooring\n ※Recipe: \n\t+ 1 x: Scales/dragon_scales\n\t+ 1 x: Cut Stone/cutstone\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:batwing(ID Complete)": {
        "prefix": "p+batwing",
        "body": "\"batwing\"",
        "description": " ※prefab ID: batwing\n ※Name: Batilisk Wing\n ※prefab Version: DST-632551 "
    },
    "prefab:batwing(ReverseSearch)": {
        "prefix": "p+Batilisk Wing",
        "body": "\"batwing\"",
        "description": " ※prefab ID: batwing\n ※Name: Batilisk Wing\n ※prefab Version: DST-632551 "
    },
    "prefab:portableblender_item(ID Complete)": {
        "prefix": "p+portableblender_item",
        "body": "\"portableblender_item\"",
        "description": " ※prefab ID: portableblender_item\n ※Name: Portable Grinding Mill\n ※Recipe: \n\t+ 2 x: Gold Nugget/goldnugget\n\t+ 2 x: Electrical Doodad/transistor\n\t+ 4 x: Twigs/twigs\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:portableblender_item(ReverseSearch)": {
        "prefix": "p+Portable Grinding Mill",
        "body": "\"portableblender_item\"",
        "description": " ※prefab ID: portableblender_item\n ※Name: Portable Grinding Mill\n ※Recipe: \n\t+ 2 x: Gold Nugget/goldnugget\n\t+ 2 x: Electrical Doodad/transistor\n\t+ 4 x: Twigs/twigs\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:spice_chili(ID Complete)": {
        "prefix": "p+spice_chili",
        "body": "\"spice_chili\"",
        "description": " ※prefab ID: spice_chili\n ※Name: Chili Flakes\n ※Recipe: \n\t+ 3 x: Pepper/pepper\n ※Required Tech: \n\t+ LV.1 : Seasonings/FOODPROCESSING\n ※prefab Version: DST-632551 "
    },
    "prefab:spice_chili(ReverseSearch)": {
        "prefix": "p+Chili Flakes",
        "body": "\"spice_chili\"",
        "description": " ※prefab ID: spice_chili\n ※Name: Chili Flakes\n ※Recipe: \n\t+ 3 x: Pepper/pepper\n ※Required Tech: \n\t+ LV.1 : Seasonings/FOODPROCESSING\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_pawn_builder(ID Complete)": {
        "prefix": "p+chesspiece_pawn_builder",
        "body": "\"chesspiece_pawn_builder\"",
        "description": " ※prefab ID: chesspiece_pawn_builder\n ※Name: Pawn Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_pawn_builder(ReverseSearch)": {
        "prefix": "p+Pawn Figure",
        "body": "\"chesspiece_pawn_builder\"",
        "description": " ※prefab ID: chesspiece_pawn_builder\n ※Name: Pawn Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:cave_banana_cooked(ID Complete)": {
        "prefix": "p+cave_banana_cooked",
        "body": "\"cave_banana_cooked\"",
        "description": " ※prefab ID: cave_banana_cooked\n ※Name: Cooked Banana\n ※prefab Version: DST-632551 "
    },
    "prefab:cave_banana_cooked(ReverseSearch)": {
        "prefix": "p+Cooked Banana",
        "body": "\"cave_banana_cooked\"",
        "description": " ※prefab ID: cave_banana_cooked\n ※Name: Cooked Banana\n ※prefab Version: DST-632551 "
    },
    "prefab:corn(ID Complete)": {
        "prefix": "p+corn",
        "body": "\"corn\"",
        "description": " ※prefab ID: corn\n ※Name: Corn\n ※prefab Version: DST-632551 "
    },
    "prefab:corn(ReverseSearch)": {
        "prefix": "p+Corn",
        "body": "\"corn\"",
        "description": " ※prefab ID: corn\n ※Name: Corn\n ※prefab Version: DST-632551 "
    },
    "prefab:tomato_oversized(ID Complete)": {
        "prefix": "p+tomato_oversized",
        "body": "\"tomato_oversized\"",
        "description": " ※prefab ID: tomato_oversized\n ※Name: Giant Toma Root\n ※prefab Version: DST-632551 "
    },
    "prefab:tomato_oversized(ReverseSearch)": {
        "prefix": "p+Giant Toma Root",
        "body": "\"tomato_oversized\"",
        "description": " ※prefab ID: tomato_oversized\n ※Name: Giant Toma Root\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_yotd(ID Complete)": {
        "prefix": "p+chesspiece_yotd",
        "body": "\"chesspiece_yotd\"",
        "description": " ※prefab ID: chesspiece_yotd\n ※Name: Start Tower Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_yotd(ReverseSearch)": {
        "prefix": "p+Start Tower Figure",
        "body": "\"chesspiece_yotd\"",
        "description": " ※prefab ID: chesspiece_yotd\n ※Name: Start Tower Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:boat(ID Complete)": {
        "prefix": "p+boat",
        "body": "\"boat\"",
        "description": " ※prefab ID: boat\n ※Name: Boat\n ※prefab Version: DST-632551 "
    },
    "prefab:boat(ReverseSearch)": {
        "prefix": "p+Boat",
        "body": "\"boat\"",
        "description": " ※prefab ID: boat\n ※Name: Boat\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishinglure_spinner_red(ID Complete)": {
        "prefix": "p+oceanfishinglure_spinner_red",
        "body": "\"oceanfishinglure_spinner_red\"",
        "description": " ※prefab ID: oceanfishinglure_spinner_red\n ※Name: Sunrise Spinnerbait\n ※Recipe: \n\t+ 1 x: Flint/flint\n\t+ 1 x: Red Cap/red_cap\n\t+ 1 x: Beefalo Wool/beefalowool\n ※Required Tech: \n\t+ LV.1 : Fishing/FISHING\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishinglure_spinner_red(ReverseSearch)": {
        "prefix": "p+Sunrise Spinnerbait",
        "body": "\"oceanfishinglure_spinner_red\"",
        "description": " ※prefab ID: oceanfishinglure_spinner_red\n ※Name: Sunrise Spinnerbait\n ※Recipe: \n\t+ 1 x: Flint/flint\n\t+ 1 x: Red Cap/red_cap\n\t+ 1 x: Beefalo Wool/beefalowool\n ※Required Tech: \n\t+ LV.1 : Fishing/FISHING\n ※prefab Version: DST-632551 "
    },
    "prefab:cookedsmallmeat(ID Complete)": {
        "prefix": "p+cookedsmallmeat",
        "body": "\"cookedsmallmeat\"",
        "description": " ※prefab ID: cookedsmallmeat\n ※Name: Cooked Morsel\n ※prefab Version: DST-632551 "
    },
    "prefab:cookedsmallmeat(ReverseSearch)": {
        "prefix": "p+Cooked Morsel",
        "body": "\"cookedsmallmeat\"",
        "description": " ※prefab ID: cookedsmallmeat\n ※Name: Cooked Morsel\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_33(ID Complete)": {
        "prefix": "p+trinket_33",
        "body": "\"trinket_33\"",
        "description": " ※prefab ID: trinket_33\n ※Name: Spider Ring\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_33(ReverseSearch)": {
        "prefix": "p+Spider Ring",
        "body": "\"trinket_33\"",
        "description": " ※prefab ID: trinket_33\n ※Name: Spider Ring\n ※prefab Version: DST-632551 "
    },
    "prefab:latkes(ID Complete)": {
        "prefix": "p+latkes",
        "body": "\"latkes\"",
        "description": " ※prefab ID: latkes\n ※Name: Latkes\n ※prefab Version: DST-632551 "
    },
    "prefab:latkes(ReverseSearch)": {
        "prefix": "p+Latkes",
        "body": "\"latkes\"",
        "description": " ※prefab ID: latkes\n ※Name: Latkes\n ※prefab Version: DST-632551 "
    },
    "prefab:slingshotammo_freeze(ID Complete)": {
        "prefix": "p+slingshotammo_freeze",
        "body": "\"slingshotammo_freeze\"",
        "description": " ※prefab ID: slingshotammo_freeze\n ※Name: Freeze Rounds\n ※Recipe: \n\t+ 1 x: Moon Rock/moonrocknugget\n\t+ 1 x: Blue Gem/bluegem\n ※Required Tech: \n\t+ LV.2 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:slingshotammo_freeze(ReverseSearch)": {
        "prefix": "p+Freeze Rounds",
        "body": "\"slingshotammo_freeze\"",
        "description": " ※prefab ID: slingshotammo_freeze\n ※Name: Freeze Rounds\n ※Recipe: \n\t+ 1 x: Moon Rock/moonrocknugget\n\t+ 1 x: Blue Gem/bluegem\n ※Required Tech: \n\t+ LV.2 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:pickledherring(ID Complete)": {
        "prefix": "p+pickledherring",
        "body": "\"pickledherring\"",
        "description": " ※prefab ID: pickledherring\n ※Name: Pickled Herring\n ※prefab Version: DST-632551 "
    },
    "prefab:pickledherring(ReverseSearch)": {
        "prefix": "p+Pickled Herring",
        "body": "\"pickledherring\"",
        "description": " ※prefab ID: pickledherring\n ※Name: Pickled Herring\n ※prefab Version: DST-632551 "
    },
    "prefab:slurtlehole(ID Complete)": {
        "prefix": "p+slurtlehole",
        "body": "\"slurtlehole\"",
        "description": " ※prefab ID: slurtlehole\n ※Name: Slurtle Mound\n ※prefab Version: DST-632551 "
    },
    "prefab:slurtlehole(ReverseSearch)": {
        "prefix": "p+Slurtle Mound",
        "body": "\"slurtlehole\"",
        "description": " ※prefab ID: slurtlehole\n ※Name: Slurtle Mound\n ※prefab Version: DST-632551 "
    },
    "prefab:beemine(ID Complete)": {
        "prefix": "p+beemine",
        "body": "\"beemine\"",
        "description": " ※prefab ID: beemine\n ※Name: Bee Mine\n ※Recipe: \n\t+ 1 x: Boards/boards\n\t+ 4 x: Bee/bee\n\t+ 1 x: Flint/flint\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:beemine(ReverseSearch)": {
        "prefix": "p+Bee Mine",
        "body": "\"beemine\"",
        "description": " ※prefab ID: beemine\n ※Name: Bee Mine\n ※Recipe: \n\t+ 1 x: Boards/boards\n\t+ 4 x: Bee/bee\n\t+ 1 x: Flint/flint\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:mooseegg2(ID Complete)": {
        "prefix": "p+mooseegg2",
        "body": "\"mooseegg2\"",
        "description": " ※prefab ID: mooseegg2\n ※Name: Goose Egg\n ※prefab Version: DST-632551 "
    },
    "prefab:mooseegg2(ReverseSearch)": {
        "prefix": "p+Goose Egg",
        "body": "\"mooseegg2\"",
        "description": " ※prefab ID: mooseegg2\n ※Name: Goose Egg\n ※prefab Version: DST-632551 "
    },
    "prefab:nitre_formation(ID Complete)": {
        "prefix": "p+nitre_formation",
        "body": "\"nitre_formation\"",
        "description": " ※prefab ID: nitre_formation\n ※Name: Nitre Formation\n ※prefab Version: DST-632551 "
    },
    "prefab:nitre_formation(ReverseSearch)": {
        "prefix": "p+Nitre Formation",
        "body": "\"nitre_formation\"",
        "description": " ※prefab ID: nitre_formation\n ※Name: Nitre Formation\n ※prefab Version: DST-632551 "
    },
    "prefab:staffcoldlight(ID Complete)": {
        "prefix": "p+staffcoldlight",
        "body": "\"staffcoldlight\"",
        "description": " ※prefab ID: staffcoldlight\n ※Name: Polar Light\n ※prefab Version: DST-632551 "
    },
    "prefab:staffcoldlight(ReverseSearch)": {
        "prefix": "p+Polar Light",
        "body": "\"staffcoldlight\"",
        "description": " ※prefab ID: staffcoldlight\n ※Name: Polar Light\n ※prefab Version: DST-632551 "
    },
    "prefab:wintercooking_pumpkinpie(ID Complete)": {
        "prefix": "p+wintercooking_pumpkinpie",
        "body": "\"wintercooking_pumpkinpie\"",
        "description": " ※prefab ID: wintercooking_pumpkinpie\n ※Name: Pumpkin Pie\n ※Recipe: \n\t+ 1 x: Holiday Cheer/wintersfeastfuel\n\t+ 1 x: Ashes/ash\n\t+ 1 x: Phlegm/phlegm\n ※Required Tech: \n\t+ LV.1 : Feast/WINTERSFEASTCOOKING\n ※prefab Version: DST-632551 "
    },
    "prefab:wintercooking_pumpkinpie(ReverseSearch)": {
        "prefix": "p+Pumpkin Pie",
        "body": "\"wintercooking_pumpkinpie\"",
        "description": " ※prefab ID: wintercooking_pumpkinpie\n ※Name: Pumpkin Pie\n ※Recipe: \n\t+ 1 x: Holiday Cheer/wintersfeastfuel\n\t+ 1 x: Ashes/ash\n\t+ 1 x: Phlegm/phlegm\n ※Required Tech: \n\t+ LV.1 : Feast/WINTERSFEASTCOOKING\n ※prefab Version: DST-632551 "
    },
    "prefab:asparagus_oversized_rotten(ID Complete)": {
        "prefix": "p+asparagus_oversized_rotten",
        "body": "\"asparagus_oversized_rotten\"",
        "description": " ※prefab ID: asparagus_oversized_rotten\n ※Name: Giant Rotting Asparagus\n ※prefab Version: DST-632551 "
    },
    "prefab:asparagus_oversized_rotten(ReverseSearch)": {
        "prefix": "p+Giant Rotting Asparagus",
        "body": "\"asparagus_oversized_rotten\"",
        "description": " ※prefab ID: asparagus_oversized_rotten\n ※Name: Giant Rotting Asparagus\n ※prefab Version: DST-632551 "
    },
    "prefab:poop(ID Complete)": {
        "prefix": "p+poop",
        "body": "\"poop\"",
        "description": " ※prefab ID: poop\n ※Name: Manure\n ※prefab Version: DST-632551 "
    },
    "prefab:poop(ReverseSearch)": {
        "prefix": "p+Manure",
        "body": "\"poop\"",
        "description": " ※prefab ID: poop\n ※Name: Manure\n ※prefab Version: DST-632551 "
    },
    "prefab:voltgoatjelly(ID Complete)": {
        "prefix": "p+voltgoatjelly",
        "body": "\"voltgoatjelly\"",
        "description": " ※prefab ID: voltgoatjelly\n ※Name: Volt Goat Chaud-Froid\n ※prefab Version: DST-632551 "
    },
    "prefab:voltgoatjelly(ReverseSearch)": {
        "prefix": "p+Volt Goat Chaud-Froid",
        "body": "\"voltgoatjelly\"",
        "description": " ※prefab ID: voltgoatjelly\n ※Name: Volt Goat Chaud-Froid\n ※prefab Version: DST-632551 "
    },
    "prefab:carrat_ghostracer(ID Complete)": {
        "prefix": "p+carrat_ghostracer",
        "body": "\"carrat_ghostracer\"",
        "description": " ※prefab ID: carrat_ghostracer\n ※Name: Charlie's Carrat\n ※prefab Version: DST-632551 "
    },
    "prefab:carrat_ghostracer(ReverseSearch)": {
        "prefix": "p+Charlie's Carrat",
        "body": "\"carrat_ghostracer\"",
        "description": " ※prefab ID: carrat_ghostracer\n ※Name: Charlie's Carrat\n ※prefab Version: DST-632551 "
    },
    "prefab:minisign(ID Complete)": {
        "prefix": "p+minisign",
        "body": "\"minisign\"",
        "description": " ※prefab ID: minisign\n ※Name: Mini Sign\n ※Recipe: \n\t+ 1 x: Boards/boards\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:minisign(ReverseSearch)": {
        "prefix": "p+Mini Sign",
        "body": "\"minisign\"",
        "description": " ※prefab ID: minisign\n ※Name: Mini Sign\n ※Recipe: \n\t+ 1 x: Boards/boards\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:lost_toy_11(ID Complete)": {
        "prefix": "p+lost_toy_11",
        "body": "\"lost_toy_11\"",
        "description": " ※prefab ID: lost_toy_11\n ※Name: Cherished Toy Robot\n ※prefab Version: DST-632551 "
    },
    "prefab:lost_toy_11(ReverseSearch)": {
        "prefix": "p+Cherished Toy Robot",
        "body": "\"lost_toy_11\"",
        "description": " ※prefab ID: lost_toy_11\n ※Name: Cherished Toy Robot\n ※prefab Version: DST-632551 "
    },
    "prefab:yotc_carrat_gym_stamina_item(ID Complete)": {
        "prefix": "p+yotc_carrat_gym_stamina_item",
        "body": "\"yotc_carrat_gym_stamina_item\"",
        "description": " ※prefab ID: yotc_carrat_gym_stamina_item\n ※Name: Endurance Gym Kit\n ※Recipe: \n\t+ 4 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /CARRATOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:yotc_carrat_gym_stamina_item(ReverseSearch)": {
        "prefix": "p+Endurance Gym Kit",
        "body": "\"yotc_carrat_gym_stamina_item\"",
        "description": " ※prefab ID: yotc_carrat_gym_stamina_item\n ※Name: Endurance Gym Kit\n ※Recipe: \n\t+ 4 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /CARRATOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivaldecor_figure_kit(ID Complete)": {
        "prefix": "p+carnivaldecor_figure_kit",
        "body": "\"carnivaldecor_figure_kit\"",
        "description": " ※prefab ID: carnivaldecor_figure_kit\n ※Name: Green Mystery Box\n ※Recipe: \n\t+ 12 x: Prize Tickets/carnival_prizeticket\n ※Required Tech: \n\t+ LV.1 : Trinket Trove/CARNIVAL_PRIZESHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivaldecor_figure_kit(ReverseSearch)": {
        "prefix": "p+Green Mystery Box",
        "body": "\"carnivaldecor_figure_kit\"",
        "description": " ※prefab ID: carnivaldecor_figure_kit\n ※Name: Green Mystery Box\n ※Recipe: \n\t+ 12 x: Prize Tickets/carnival_prizeticket\n ※Required Tech: \n\t+ LV.1 : Trinket Trove/CARNIVAL_PRIZESHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_syrup(ID Complete)": {
        "prefix": "p+quagmire_syrup",
        "body": "\"quagmire_syrup\"",
        "description": " ※prefab ID: quagmire_syrup\n ※Name: Syrup\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_syrup(ReverseSearch)": {
        "prefix": "p+Syrup",
        "body": "\"quagmire_syrup\"",
        "description": " ※prefab ID: quagmire_syrup\n ※Name: Syrup\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalcannon_sparkle(ID Complete)": {
        "prefix": "p+carnivalcannon_sparkle",
        "body": "\"carnivalcannon_sparkle\"",
        "description": " ※prefab ID: carnivalcannon_sparkle\n ※Name: Glitter Cannon\n ※Recipe: \n\t+ 1 x: Glitter Cannon Kit/carnivalcannon_sparkle_kit\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalcannon_sparkle(ReverseSearch)": {
        "prefix": "p+Glitter Cannon",
        "body": "\"carnivalcannon_sparkle\"",
        "description": " ※prefab ID: carnivalcannon_sparkle\n ※Name: Glitter Cannon\n ※Recipe: \n\t+ 1 x: Glitter Cannon Kit/carnivalcannon_sparkle_kit\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:houndstooth_blowpipe(ID Complete)": {
        "prefix": "p+houndstooth_blowpipe",
        "body": "\"houndstooth_blowpipe\"",
        "description": " ※prefab ID: houndstooth_blowpipe\n ※Name: Howlitzer\n ※Recipe: \n\t+ 1 x: Spark Ark/security_pulse_cage_full\n\t+ 3 x: Brightshade Husk/lunarplant_husk\n\t+ 3 x: Pure Brilliance/purebrilliance\n\t+ 3 x: Moon Rock/moonrocknugget\n ※Required Tech: \n\t+ LV.2 : Brightsmithy/LUNARFORGING\n ※prefab Version: DST-632551 "
    },
    "prefab:houndstooth_blowpipe(ReverseSearch)": {
        "prefix": "p+Howlitzer",
        "body": "\"houndstooth_blowpipe\"",
        "description": " ※prefab ID: houndstooth_blowpipe\n ※Name: Howlitzer\n ※Recipe: \n\t+ 1 x: Spark Ark/security_pulse_cage_full\n\t+ 3 x: Brightshade Husk/lunarplant_husk\n\t+ 3 x: Pure Brilliance/purebrilliance\n\t+ 3 x: Moon Rock/moonrocknugget\n ※Required Tech: \n\t+ LV.2 : Brightsmithy/LUNARFORGING\n ※prefab Version: DST-632551 "
    },
    "prefab:hermithouse_pearl(ID Complete)": {
        "prefix": "p+hermithouse_pearl",
        "body": "\"hermithouse_pearl\"",
        "description": " ※prefab ID: hermithouse_pearl\n ※Name: Pearl's Place\n ※prefab Version: DST-632551 "
    },
    "prefab:hermithouse_pearl(ReverseSearch)": {
        "prefix": "p+Pearl's Place",
        "body": "\"hermithouse_pearl\"",
        "description": " ※prefab ID: hermithouse_pearl\n ※Name: Pearl's Place\n ※prefab Version: DST-632551 "
    },
    "prefab:footballhat(ID Complete)": {
        "prefix": "p+footballhat",
        "body": "\"footballhat\"",
        "description": " ※prefab ID: footballhat\n ※Name: Football Helmet\n ※Recipe: \n\t+ 1 x: Pig Skin/pigskin\n\t+ 1 x: Rope/rope\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:footballhat(ReverseSearch)": {
        "prefix": "p+Football Helmet",
        "body": "\"footballhat\"",
        "description": " ※prefab ID: footballhat\n ※Name: Football Helmet\n ※Recipe: \n\t+ 1 x: Pig Skin/pigskin\n\t+ 1 x: Rope/rope\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_seeds_3(ID Complete)": {
        "prefix": "p+quagmire_seeds_3",
        "body": "\"quagmire_seeds_3\"",
        "description": " ※prefab ID: quagmire_seeds_3\n ※Name: Spiky Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_seeds_3(ReverseSearch)": {
        "prefix": "p+Spiky Seeds",
        "body": "\"quagmire_seeds_3\"",
        "description": " ※prefab ID: quagmire_seeds_3\n ※Name: Spiky Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:known_pumpkin_seeds(ID Complete)": {
        "prefix": "p+known_pumpkin_seeds",
        "body": "\"known_pumpkin_seeds\"",
        "description": " ※prefab ID: known_pumpkin_seeds\n ※Name: Pumpkin Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:known_pumpkin_seeds(ReverseSearch)": {
        "prefix": "p+Pumpkin Seeds",
        "body": "\"known_pumpkin_seeds\"",
        "description": " ※prefab ID: known_pumpkin_seeds\n ※Name: Pumpkin Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:mastupgrade_lamp_item_yotd(ID Complete)": {
        "prefix": "p+mastupgrade_lamp_item_yotd",
        "body": "\"mastupgrade_lamp_item_yotd\"",
        "description": " ※prefab ID: mastupgrade_lamp_item_yotd\n ※Name: Dragonfly Light Kit\n ※Recipe: \n\t+ 3 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /DRAGONOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:mastupgrade_lamp_item_yotd(ReverseSearch)": {
        "prefix": "p+Dragonfly Light Kit",
        "body": "\"mastupgrade_lamp_item_yotd\"",
        "description": " ※prefab ID: mastupgrade_lamp_item_yotd\n ※Name: Dragonfly Light Kit\n ※Recipe: \n\t+ 3 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /DRAGONOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:boat_grass_item(ID Complete)": {
        "prefix": "p+boat_grass_item",
        "body": "\"boat_grass_item\"",
        "description": " ※prefab ID: boat_grass_item\n ※Name: Grass Raft Kit\n ※Recipe: \n\t+ 8 x: Cut Grass/cutgrass\n\t+ 2 x: Twigs/twigs\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:boat_grass_item(ReverseSearch)": {
        "prefix": "p+Grass Raft Kit",
        "body": "\"boat_grass_item\"",
        "description": " ※prefab ID: boat_grass_item\n ※Name: Grass Raft Kit\n ※Recipe: \n\t+ 8 x: Cut Grass/cutgrass\n\t+ 2 x: Twigs/twigs\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:boatfragment03(ID Complete)": {
        "prefix": "p+boatfragment03",
        "body": "\"boatfragment03\"",
        "description": " ※prefab ID: boatfragment03\n ※Name: Boat Fragment\n ※prefab Version: DST-632551 "
    },
    "prefab:boatfragment03(ReverseSearch)": {
        "prefix": "p+Boat Fragment",
        "body": "\"boatfragment03\"",
        "description": " ※prefab ID: boatfragment03\n ※Name: Boat Fragment\n ※prefab Version: DST-632551 "
    },
    "prefab:eyeofterror_mini_grounded(ID Complete)": {
        "prefix": "p+eyeofterror_mini_grounded",
        "body": "\"eyeofterror_mini_grounded\"",
        "description": " ※prefab ID: eyeofterror_mini_grounded\n ※Name: Egg Of Terror\n ※prefab Version: DST-632551 "
    },
    "prefab:eyeofterror_mini_grounded(ReverseSearch)": {
        "prefix": "p+Egg Of Terror",
        "body": "\"eyeofterror_mini_grounded\"",
        "description": " ※prefab ID: eyeofterror_mini_grounded\n ※Name: Egg Of Terror\n ※prefab Version: DST-632551 "
    },
    "prefab:carrot_cooked(ID Complete)": {
        "prefix": "p+carrot_cooked",
        "body": "\"carrot_cooked\"",
        "description": " ※prefab ID: carrot_cooked\n ※Name: Roasted Carrot\n ※prefab Version: DST-632551 "
    },
    "prefab:carrot_cooked(ReverseSearch)": {
        "prefix": "p+Roasted Carrot",
        "body": "\"carrot_cooked\"",
        "description": " ※prefab ID: carrot_cooked\n ※Name: Roasted Carrot\n ※prefab Version: DST-632551 "
    },
    "prefab:slurtle(ID Complete)": {
        "prefix": "p+slurtle",
        "body": "\"slurtle\"",
        "description": " ※prefab ID: slurtle\n ※Name: Slurtle\n ※prefab Version: DST-632551 "
    },
    "prefab:slurtle(ReverseSearch)": {
        "prefix": "p+Slurtle",
        "body": "\"slurtle\"",
        "description": " ※prefab ID: slurtle\n ※Name: Slurtle\n ※prefab Version: DST-632551 "
    },
    "prefab:birchnutdrake(ID Complete)": {
        "prefix": "p+birchnutdrake",
        "body": "\"birchnutdrake\"",
        "description": " ※prefab ID: birchnutdrake\n ※Name: Birchnutter\n ※prefab Version: DST-632551 "
    },
    "prefab:birchnutdrake(ReverseSearch)": {
        "prefix": "p+Birchnutter",
        "body": "\"birchnutdrake\"",
        "description": " ※prefab ID: birchnutdrake\n ※Name: Birchnutter\n ※prefab Version: DST-632551 "
    },
    "prefab:beequeen(ID Complete)": {
        "prefix": "p+beequeen",
        "body": "\"beequeen\"",
        "description": " ※prefab ID: beequeen\n ※Name: Bee Queen\n ※prefab Version: DST-632551 "
    },
    "prefab:beequeen(ReverseSearch)": {
        "prefix": "p+Bee Queen",
        "body": "\"beequeen\"",
        "description": " ※prefab ID: beequeen\n ※Name: Bee Queen\n ※prefab Version: DST-632551 "
    },
    "prefab:boatfragment05(ID Complete)": {
        "prefix": "p+boatfragment05",
        "body": "\"boatfragment05\"",
        "description": " ※prefab ID: boatfragment05\n ※Name: Boat Fragment\n ※prefab Version: DST-632551 "
    },
    "prefab:boatfragment05(ReverseSearch)": {
        "prefix": "p+Boat Fragment",
        "body": "\"boatfragment05\"",
        "description": " ※prefab ID: boatfragment05\n ※Name: Boat Fragment\n ※prefab Version: DST-632551 "
    },
    "prefab:merm_armory(ID Complete)": {
        "prefix": "p+merm_armory",
        "body": "\"merm_armory\"",
        "description": " ※prefab ID: merm_armory\n ※Name: Armermry\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 5 x: Log/log\n\t+ 5 x: Cut Grass/cutgrass\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:merm_armory(ReverseSearch)": {
        "prefix": "p+Armermry",
        "body": "\"merm_armory\"",
        "description": " ※prefab ID: merm_armory\n ※Name: Armermry\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 5 x: Log/log\n\t+ 5 x: Cut Grass/cutgrass\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:drowning(ID Complete)": {
        "prefix": "p+drowning",
        "body": "\"drowning\"",
        "description": " ※prefab ID: drowning\n ※Name: Drowning\n ※prefab Version: DST-632551 "
    },
    "prefab:drowning(ReverseSearch)": {
        "prefix": "p+Drowning",
        "body": "\"drowning\"",
        "description": " ※prefab ID: drowning\n ※Name: Drowning\n ※prefab Version: DST-632551 "
    },
    "prefab:flower_evil(ID Complete)": {
        "prefix": "p+flower_evil",
        "body": "\"flower_evil\"",
        "description": " ※prefab ID: flower_evil\n ※Name: Evil Flower\n ※prefab Version: DST-632551 "
    },
    "prefab:flower_evil(ReverseSearch)": {
        "prefix": "p+Evil Flower",
        "body": "\"flower_evil\"",
        "description": " ※prefab ID: flower_evil\n ※Name: Evil Flower\n ※prefab Version: DST-632551 "
    },
    "prefab:boat_bumper_crabking_kit(ID Complete)": {
        "prefix": "p+boat_bumper_crabking_kit",
        "body": "\"boat_bumper_crabking_kit\"",
        "description": " ※prefab ID: boat_bumper_crabking_kit\n ※Name: Crab King Bumper Kit\n ※prefab Version: DST-632551 "
    },
    "prefab:boat_bumper_crabking_kit(ReverseSearch)": {
        "prefix": "p+Crab King Bumper Kit",
        "body": "\"boat_bumper_crabking_kit\"",
        "description": " ※prefab ID: boat_bumper_crabking_kit\n ※Name: Crab King Bumper Kit\n ※prefab Version: DST-632551 "
    },
    "prefab:wormhole(ID Complete)": {
        "prefix": "p+wormhole",
        "body": "\"wormhole\"",
        "description": " ※prefab ID: wormhole\n ※Name: Worm Hole\n ※prefab Version: DST-632551 "
    },
    "prefab:wormhole(ReverseSearch)": {
        "prefix": "p+Worm Hole",
        "body": "\"wormhole\"",
        "description": " ※prefab ID: wormhole\n ※Name: Worm Hole\n ※prefab Version: DST-632551 "
    },
    "prefab:winona_telebrella(ID Complete)": {
        "prefix": "p+winona_telebrella",
        "body": "\"winona_telebrella\"",
        "description": " ※prefab ID: winona_telebrella\n ※Name: Portasol\n ※Recipe: \n\t+ 4 x: Trusty Tape/sewing_tape\n\t+ 4 x: Electrical Doodad/transistor\n\t+ 4 x: Twigs/twigs\n\t+ 1 x: Gizmo/winona_machineparts_2\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:winona_telebrella(ReverseSearch)": {
        "prefix": "p+Portasol",
        "body": "\"winona_telebrella\"",
        "description": " ※prefab ID: winona_telebrella\n ※Name: Portasol\n ※Recipe: \n\t+ 4 x: Trusty Tape/sewing_tape\n\t+ 4 x: Electrical Doodad/transistor\n\t+ 4 x: Twigs/twigs\n\t+ 1 x: Gizmo/winona_machineparts_2\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:nightmarebeak(ID Complete)": {
        "prefix": "p+nightmarebeak",
        "body": "\"nightmarebeak\"",
        "description": " ※prefab ID: nightmarebeak\n ※Name: Nightmarebeak\n ※prefab Version: DST-632551 "
    },
    "prefab:nightmarebeak(ReverseSearch)": {
        "prefix": "p+Nightmarebeak",
        "body": "\"nightmarebeak\"",
        "description": " ※prefab ID: nightmarebeak\n ※Name: Nightmarebeak\n ※prefab Version: DST-632551 "
    },
    "prefab:carnival_vest_a(ID Complete)": {
        "prefix": "p+carnival_vest_a",
        "body": "\"carnival_vest_a\"",
        "description": " ※prefab ID: carnival_vest_a\n ※Name: Chirpy Scarf\n ※Recipe: \n\t+ 24 x: Prize Tickets/carnival_prizeticket\n ※Required Tech: \n\t+ LV.1 : Trinket Trove/CARNIVAL_PRIZESHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:carnival_vest_a(ReverseSearch)": {
        "prefix": "p+Chirpy Scarf",
        "body": "\"carnival_vest_a\"",
        "description": " ※prefab ID: carnival_vest_a\n ※Name: Chirpy Scarf\n ※Recipe: \n\t+ 24 x: Prize Tickets/carnival_prizeticket\n ※Required Tech: \n\t+ LV.1 : Trinket Trove/CARNIVAL_PRIZESHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:anchor(ID Complete)": {
        "prefix": "p+anchor",
        "body": "\"anchor\"",
        "description": " ※prefab ID: anchor\n ※Name: Anchor\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 3 x: Rope/rope\n\t+ 3 x: Cut Stone/cutstone\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:anchor(ReverseSearch)": {
        "prefix": "p+Anchor",
        "body": "\"anchor\"",
        "description": " ※prefab ID: anchor\n ※Name: Anchor\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 3 x: Rope/rope\n\t+ 3 x: Cut Stone/cutstone\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:frogglebunwich(ID Complete)": {
        "prefix": "p+frogglebunwich",
        "body": "\"frogglebunwich\"",
        "description": " ※prefab ID: frogglebunwich\n ※Name: Froggle Bunwich\n ※prefab Version: DST-632551 "
    },
    "prefab:frogglebunwich(ReverseSearch)": {
        "prefix": "p+Froggle Bunwich",
        "body": "\"frogglebunwich\"",
        "description": " ※prefab ID: frogglebunwich\n ※Name: Froggle Bunwich\n ※prefab Version: DST-632551 "
    },
    "prefab:moonglass_charged(ID Complete)": {
        "prefix": "p+moonglass_charged",
        "body": "\"moonglass_charged\"",
        "description": " ※prefab ID: moonglass_charged\n ※Name: Infused Moon Shard\n ※prefab Version: DST-632551 "
    },
    "prefab:moonglass_charged(ReverseSearch)": {
        "prefix": "p+Infused Moon Shard",
        "body": "\"moonglass_charged\"",
        "description": " ※prefab ID: moonglass_charged\n ※Name: Infused Moon Shard\n ※prefab Version: DST-632551 "
    },
    "prefab:rock_avocado_fruit_sprout(ID Complete)": {
        "prefix": "p+rock_avocado_fruit_sprout",
        "body": "\"rock_avocado_fruit_sprout\"",
        "description": " ※prefab ID: rock_avocado_fruit_sprout\n ※Name: Sprouting Stone Fruit\n ※prefab Version: DST-632551 "
    },
    "prefab:rock_avocado_fruit_sprout(ReverseSearch)": {
        "prefix": "p+Sprouting Stone Fruit",
        "body": "\"rock_avocado_fruit_sprout\"",
        "description": " ※prefab ID: rock_avocado_fruit_sprout\n ※Name: Sprouting Stone Fruit\n ※prefab Version: DST-632551 "
    },
    "prefab:bluegem(ID Complete)": {
        "prefix": "p+bluegem",
        "body": "\"bluegem\"",
        "description": " ※prefab ID: bluegem\n ※Name: Blue Gem\n ※prefab Version: DST-632551 "
    },
    "prefab:bluegem(ReverseSearch)": {
        "prefix": "p+Blue Gem",
        "body": "\"bluegem\"",
        "description": " ※prefab ID: bluegem\n ※Name: Blue Gem\n ※prefab Version: DST-632551 "
    },
    "prefab:moonspider_spike(ID Complete)": {
        "prefix": "p+moonspider_spike",
        "body": "\"moonspider_spike\"",
        "description": " ※prefab ID: moonspider_spike\n ※Name: Shattered Spider\n ※prefab Version: DST-632551 "
    },
    "prefab:moonspider_spike(ReverseSearch)": {
        "prefix": "p+Shattered Spider",
        "body": "\"moonspider_spike\"",
        "description": " ※prefab ID: moonspider_spike\n ※Name: Shattered Spider\n ※prefab Version: DST-632551 "
    },
    "prefab:cave_banana_tree(ID Complete)": {
        "prefix": "p+cave_banana_tree",
        "body": "\"cave_banana_tree\"",
        "description": " ※prefab ID: cave_banana_tree\n ※Name: Cave Banana Tree\n ※prefab Version: DST-632551 "
    },
    "prefab:cave_banana_tree(ReverseSearch)": {
        "prefix": "p+Cave Banana Tree",
        "body": "\"cave_banana_tree\"",
        "description": " ※prefab ID: cave_banana_tree\n ※Name: Cave Banana Tree\n ※prefab Version: DST-632551 "
    },
    "prefab:wall_ruins_item(ID Complete)": {
        "prefix": "p+wall_ruins_item",
        "body": "\"wall_ruins_item\"",
        "description": " ※prefab ID: wall_ruins_item\n ※Name: Thulecite Wall\n ※Recipe: \n\t+ 1 x: Thulecite/thulecite\n ※Required Tech: \n\t+ LV.2 : Ancient/ANCIENT\n ※prefab Version: DST-632551 "
    },
    "prefab:wall_ruins_item(ReverseSearch)": {
        "prefix": "p+Thulecite Wall",
        "body": "\"wall_ruins_item\"",
        "description": " ※prefab ID: wall_ruins_item\n ※Name: Thulecite Wall\n ※Recipe: \n\t+ 1 x: Thulecite/thulecite\n ※Required Tech: \n\t+ LV.2 : Ancient/ANCIENT\n ※prefab Version: DST-632551 "
    },
    "prefab:vegstinger(ID Complete)": {
        "prefix": "p+vegstinger",
        "body": "\"vegstinger\"",
        "description": " ※prefab ID: vegstinger\n ※Name: Vegetable Stinger\n ※prefab Version: DST-632551 "
    },
    "prefab:vegstinger(ReverseSearch)": {
        "prefix": "p+Vegetable Stinger",
        "body": "\"vegstinger\"",
        "description": " ※prefab ID: vegstinger\n ※Name: Vegetable Stinger\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_meteor(ID Complete)": {
        "prefix": "p+turf_meteor",
        "body": "\"turf_meteor\"",
        "description": " ※prefab ID: turf_meteor\n ※Name: Moon Crater Turf\n ※Recipe: \n\t+ 1 x: Moon Rock/moonrocknugget\n\t+ 2 x: Moon Shard/moonglass\n ※Required Tech: \n\t+ LV.3 : Celestial/CELESTIAL\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_meteor(ReverseSearch)": {
        "prefix": "p+Moon Crater Turf",
        "body": "\"turf_meteor\"",
        "description": " ※prefab ID: turf_meteor\n ※Name: Moon Crater Turf\n ※Recipe: \n\t+ 1 x: Moon Rock/moonrocknugget\n\t+ 2 x: Moon Shard/moonglass\n ※Required Tech: \n\t+ LV.3 : Celestial/CELESTIAL\n ※prefab Version: DST-632551 "
    },
    "prefab:halloween_experiment_moon(ID Complete)": {
        "prefix": "p+halloween_experiment_moon",
        "body": "\"halloween_experiment_moon\"",
        "description": " ※prefab ID: halloween_experiment_moon\n ※Name: Lunar Experiment\n ※Recipe: \n\t+ 1 x: Moon Moth Wings/moonbutterflywings\n\t+ 1 x: Lune Tree Blossom/moon_tree_blossom\n ※Required Tech: \n\t+ LV.1 : Mad Science/MADSCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:halloween_experiment_moon(ReverseSearch)": {
        "prefix": "p+Lunar Experiment",
        "body": "\"halloween_experiment_moon\"",
        "description": " ※prefab ID: halloween_experiment_moon\n ※Name: Lunar Experiment\n ※Recipe: \n\t+ 1 x: Moon Moth Wings/moonbutterflywings\n\t+ 1 x: Lune Tree Blossom/moon_tree_blossom\n ※Required Tech: \n\t+ LV.1 : Mad Science/MADSCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:moon_altar(ID Complete)": {
        "prefix": "p+moon_altar",
        "body": "\"moon_altar\"",
        "description": " ※prefab ID: moon_altar\n ※Name: Celestial Altar\n ※prefab Version: DST-632551 "
    },
    "prefab:moon_altar(ReverseSearch)": {
        "prefix": "p+Celestial Altar",
        "body": "\"moon_altar\"",
        "description": " ※prefab ID: moon_altar\n ※Name: Celestial Altar\n ※prefab Version: DST-632551 "
    },
    "prefab:water(ID Complete)": {
        "prefix": "p+water",
        "body": "\"water\"",
        "description": " ※prefab ID: water\n ※Name: Short Circuit\n ※prefab Version: DST-632551 "
    },
    "prefab:water(ReverseSearch)": {
        "prefix": "p+Short Circuit",
        "body": "\"water\"",
        "description": " ※prefab ID: water\n ※Name: Short Circuit\n ※prefab Version: DST-632551 "
    },
    "prefab:moon_altar_icon(ID Complete)": {
        "prefix": "p+moon_altar_icon",
        "body": "\"moon_altar_icon\"",
        "description": " ※prefab ID: moon_altar_icon\n ※Name: Celestial Sanctum Icon\n ※prefab Version: DST-632551 "
    },
    "prefab:moon_altar_icon(ReverseSearch)": {
        "prefix": "p+Celestial Sanctum Icon",
        "body": "\"moon_altar_icon\"",
        "description": " ※prefab ID: moon_altar_icon\n ※Name: Celestial Sanctum Icon\n ※prefab Version: DST-632551 "
    },
    "prefab:portabletent(ID Complete)": {
        "prefix": "p+portabletent",
        "body": "\"portabletent\"",
        "description": " ※prefab ID: portabletent\n ※Name: Camper's Tent\n ※prefab Version: DST-632551 "
    },
    "prefab:portabletent(ReverseSearch)": {
        "prefix": "p+Camper's Tent",
        "body": "\"portabletent\"",
        "description": " ※prefab ID: portabletent\n ※Name: Camper's Tent\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_catcoon_builder(ID Complete)": {
        "prefix": "p+chesspiece_catcoon_builder",
        "body": "\"chesspiece_catcoon_builder\"",
        "description": " ※prefab ID: chesspiece_catcoon_builder\n ※Name: Catcoon Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_catcoon_builder(ReverseSearch)": {
        "prefix": "p+Catcoon Figure",
        "body": "\"chesspiece_catcoon_builder\"",
        "description": " ※prefab ID: chesspiece_catcoon_builder\n ※Name: Catcoon Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:frognewton(ID Complete)": {
        "prefix": "p+frognewton",
        "body": "\"frognewton\"",
        "description": " ※prefab ID: frognewton\n ※Name: Figgy Frogwich\n ※prefab Version: DST-632551 "
    },
    "prefab:frognewton(ReverseSearch)": {
        "prefix": "p+Figgy Frogwich",
        "body": "\"frognewton\"",
        "description": " ※prefab ID: frognewton\n ※Name: Figgy Frogwich\n ※prefab Version: DST-632551 "
    },
    "prefab:moon_altar_rock_seed(ID Complete)": {
        "prefix": "p+moon_altar_rock_seed",
        "body": "\"moon_altar_rock_seed\"",
        "description": " ※prefab ID: moon_altar_rock_seed\n ※Name: Inviting Formation\n ※prefab Version: DST-632551 "
    },
    "prefab:moon_altar_rock_seed(ReverseSearch)": {
        "prefix": "p+Inviting Formation",
        "body": "\"moon_altar_rock_seed\"",
        "description": " ※prefab ID: moon_altar_rock_seed\n ※Name: Inviting Formation\n ※prefab Version: DST-632551 "
    },
    "prefab:ancienttree_gem_sapling_item(ID Complete)": {
        "prefix": "p+ancienttree_gem_sapling_item",
        "body": "\"ancienttree_gem_sapling_item\"",
        "description": " ※prefab ID: ancienttree_gem_sapling_item\n ※Name: Sproutrock Sapling\n ※prefab Version: DST-632551 "
    },
    "prefab:ancienttree_gem_sapling_item(ReverseSearch)": {
        "prefix": "p+Sproutrock Sapling",
        "body": "\"ancienttree_gem_sapling_item\"",
        "description": " ※prefab ID: ancienttree_gem_sapling_item\n ※Name: Sproutrock Sapling\n ※prefab Version: DST-632551 "
    },
    "prefab:maxwelllock(ID Complete)": {
        "prefix": "p+maxwelllock",
        "body": "\"maxwelllock\"",
        "description": " ※prefab ID: maxwelllock\n ※Name: Nightmare Lock\n ※prefab Version: DST-632551 "
    },
    "prefab:maxwelllock(ReverseSearch)": {
        "prefix": "p+Nightmare Lock",
        "body": "\"maxwelllock\"",
        "description": " ※prefab ID: maxwelllock\n ※Name: Nightmare Lock\n ※prefab Version: DST-632551 "
    },
    "prefab:yotr_fightring(ID Complete)": {
        "prefix": "p+yotr_fightring",
        "body": "\"yotr_fightring\"",
        "description": " ※prefab ID: yotr_fightring\n ※Name: Pillow Fight Pit\n ※prefab Version: DST-632551 "
    },
    "prefab:yotr_fightring(ReverseSearch)": {
        "prefix": "p+Pillow Fight Pit",
        "body": "\"yotr_fightring\"",
        "description": " ※prefab ID: yotr_fightring\n ※Name: Pillow Fight Pit\n ※prefab Version: DST-632551 "
    },
    "prefab:stalker_atrium(ID Complete)": {
        "prefix": "p+stalker_atrium",
        "body": "\"stalker_atrium\"",
        "description": " ※prefab ID: stalker_atrium\n ※Name: Ancient Fuelweaver\n ※prefab Version: DST-632551 "
    },
    "prefab:stalker_atrium(ReverseSearch)": {
        "prefix": "p+Ancient Fuelweaver",
        "body": "\"stalker_atrium\"",
        "description": " ※prefab ID: stalker_atrium\n ※Name: Ancient Fuelweaver\n ※prefab Version: DST-632551 "
    },
    "prefab:wx78_scanner_succeeded(ID Complete)": {
        "prefix": "p+wx78_scanner_succeeded",
        "body": "\"wx78_scanner_succeeded\"",
        "description": " ※prefab ID: wx78_scanner_succeeded\n ※Name: Bio Scanalyzer\n ※prefab Version: DST-632551 "
    },
    "prefab:wx78_scanner_succeeded(ReverseSearch)": {
        "prefix": "p+Bio Scanalyzer",
        "body": "\"wx78_scanner_succeeded\"",
        "description": " ※prefab ID: wx78_scanner_succeeded\n ※Name: Bio Scanalyzer\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_bearger_builder(ID Complete)": {
        "prefix": "p+chesspiece_bearger_builder",
        "body": "\"chesspiece_bearger_builder\"",
        "description": " ※prefab ID: chesspiece_bearger_builder\n ※Name: Bearger Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_bearger_builder(ReverseSearch)": {
        "prefix": "p+Bearger Figure",
        "body": "\"chesspiece_bearger_builder\"",
        "description": " ※prefab ID: chesspiece_bearger_builder\n ※Name: Bearger Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:wetgoop(ID Complete)": {
        "prefix": "p+wetgoop",
        "body": "\"wetgoop\"",
        "description": " ※prefab ID: wetgoop\n ※Name: Wet Goop\n ※prefab Version: DST-632551 "
    },
    "prefab:wetgoop(ReverseSearch)": {
        "prefix": "p+Wet Goop",
        "body": "\"wetgoop\"",
        "description": " ※prefab ID: wetgoop\n ※Name: Wet Goop\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_small_4(ID Complete)": {
        "prefix": "p+oceanfish_small_4",
        "body": "\"oceanfish_small_4\"",
        "description": " ※prefab ID: oceanfish_small_4\n ※Name: Smolt Fry\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_small_4(ReverseSearch)": {
        "prefix": "p+Smolt Fry",
        "body": "\"oceanfish_small_4\"",
        "description": " ※prefab ID: oceanfish_small_4\n ※Name: Smolt Fry\n ※prefab Version: DST-632551 "
    },
    "prefab:wormlight_lesser(ID Complete)": {
        "prefix": "p+wormlight_lesser",
        "body": "\"wormlight_lesser\"",
        "description": " ※prefab ID: wormlight_lesser\n ※Name: Lesser Glow Berry\n ※prefab Version: DST-632551 "
    },
    "prefab:wormlight_lesser(ReverseSearch)": {
        "prefix": "p+Lesser Glow Berry",
        "body": "\"wormlight_lesser\"",
        "description": " ※prefab ID: wormlight_lesser\n ※Name: Lesser Glow Berry\n ※prefab Version: DST-632551 "
    },
    "prefab:rabbitkingminion_bunnyman(ID Complete)": {
        "prefix": "p+rabbitkingminion_bunnyman",
        "body": "\"rabbitkingminion_bunnyman\"",
        "description": " ※prefab ID: rabbitkingminion_bunnyman\n ※Name: Royal Rabbit Enforcer\n ※prefab Version: DST-632551 "
    },
    "prefab:rabbitkingminion_bunnyman(ReverseSearch)": {
        "prefix": "p+Royal Rabbit Enforcer",
        "body": "\"rabbitkingminion_bunnyman\"",
        "description": " ※prefab ID: rabbitkingminion_bunnyman\n ※Name: Royal Rabbit Enforcer\n ※prefab Version: DST-632551 "
    },
    "prefab:oar_monkey(ID Complete)": {
        "prefix": "p+oar_monkey",
        "body": "\"oar_monkey\"",
        "description": " ※prefab ID: oar_monkey\n ※Name: Battle Paddle\n ※Recipe: \n\t+ 1 x: Log/log\n\t+ 1 x: Palmcone Scale/palmcone_scale\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:oar_monkey(ReverseSearch)": {
        "prefix": "p+Battle Paddle",
        "body": "\"oar_monkey\"",
        "description": " ※prefab ID: oar_monkey\n ※Name: Battle Paddle\n ※Recipe: \n\t+ 1 x: Log/log\n\t+ 1 x: Palmcone Scale/palmcone_scale\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:turkeydinner(ID Complete)": {
        "prefix": "p+turkeydinner",
        "body": "\"turkeydinner\"",
        "description": " ※prefab ID: turkeydinner\n ※Name: Turkey Dinner\n ※prefab Version: DST-632551 "
    },
    "prefab:turkeydinner(ReverseSearch)": {
        "prefix": "p+Turkey Dinner",
        "body": "\"turkeydinner\"",
        "description": " ※prefab ID: turkeydinner\n ※Name: Turkey Dinner\n ※prefab Version: DST-632551 "
    },
    "prefab:ash_remains(ID Complete)": {
        "prefix": "p+ash_remains",
        "body": "\"ash_remains\"",
        "description": " ※prefab ID: ash_remains\n ※Name: Ashes of %s\n ※prefab Version: DST-632551 "
    },
    "prefab:ash_remains(ReverseSearch)": {
        "prefix": "p+Ashes of %s",
        "body": "\"ash_remains\"",
        "description": " ※prefab ID: ash_remains\n ※Name: Ashes of %s\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_21(ID Complete)": {
        "prefix": "p+trinket_21",
        "body": "\"trinket_21\"",
        "description": " ※prefab ID: trinket_21\n ※Name: Beaten Beater\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_21(ReverseSearch)": {
        "prefix": "p+Beaten Beater",
        "body": "\"trinket_21\"",
        "description": " ※prefab ID: trinket_21\n ※Name: Beaten Beater\n ※prefab Version: DST-632551 "
    },
    "prefab:costume_blacksmith_body(ID Complete)": {
        "prefix": "p+costume_blacksmith_body",
        "body": "\"costume_blacksmith_body\"",
        "description": " ※prefab ID: costume_blacksmith_body\n ※Name: Blacksmith Costume\n ※prefab Version: DST-632551 "
    },
    "prefab:costume_blacksmith_body(ReverseSearch)": {
        "prefix": "p+Blacksmith Costume",
        "body": "\"costume_blacksmith_body\"",
        "description": " ※prefab ID: costume_blacksmith_body\n ※Name: Blacksmith Costume\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_small_4_inv(ID Complete)": {
        "prefix": "p+oceanfish_small_4_inv",
        "body": "\"oceanfish_small_4_inv\"",
        "description": " ※prefab ID: oceanfish_small_4_inv\n ※Name: Smolt Fry\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_small_4_inv(ReverseSearch)": {
        "prefix": "p+Smolt Fry",
        "body": "\"oceanfish_small_4_inv\"",
        "description": " ※prefab ID: oceanfish_small_4_inv\n ※Name: Smolt Fry\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_small_5_inv(ID Complete)": {
        "prefix": "p+oceanfish_small_5_inv",
        "body": "\"oceanfish_small_5_inv\"",
        "description": " ※prefab ID: oceanfish_small_5_inv\n ※Name: Popperfish\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_small_5_inv(ReverseSearch)": {
        "prefix": "p+Popperfish",
        "body": "\"oceanfish_small_5_inv\"",
        "description": " ※prefab ID: oceanfish_small_5_inv\n ※Name: Popperfish\n ※prefab Version: DST-632551 "
    },
    "prefab:meatballs(ID Complete)": {
        "prefix": "p+meatballs",
        "body": "\"meatballs\"",
        "description": " ※prefab ID: meatballs\n ※Name: Meatballs\n ※prefab Version: DST-632551 "
    },
    "prefab:meatballs(ReverseSearch)": {
        "prefix": "p+Meatballs",
        "body": "\"meatballs\"",
        "description": " ※prefab ID: meatballs\n ※Name: Meatballs\n ※prefab Version: DST-632551 "
    },
    "prefab:boat_ancient(ID Complete)": {
        "prefix": "p+boat_ancient",
        "body": "\"boat_ancient\"",
        "description": " ※prefab ID: boat_ancient\n ※Name: Archaic Boat\n ※prefab Version: DST-632551 "
    },
    "prefab:boat_ancient(ReverseSearch)": {
        "prefix": "p+Archaic Boat",
        "body": "\"boat_ancient\"",
        "description": " ※prefab ID: boat_ancient\n ※Name: Archaic Boat\n ※prefab Version: DST-632551 "
    },
    "prefab:magician_chest(ID Complete)": {
        "prefix": "p+magician_chest",
        "body": "\"magician_chest\"",
        "description": " ※prefab ID: magician_chest\n ※Name: Magician's Chest\n ※Recipe: \n\t+ 1 x: Silk/silk\n\t+ 4 x: Boards/boards\n\t+ 9 x: Nightmare Fuel/nightmarefuel\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:magician_chest(ReverseSearch)": {
        "prefix": "p+Magician's Chest",
        "body": "\"magician_chest\"",
        "description": " ※prefab ID: magician_chest\n ※Name: Magician's Chest\n ※Recipe: \n\t+ 1 x: Silk/silk\n\t+ 4 x: Boards/boards\n\t+ 9 x: Nightmare Fuel/nightmarefuel\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:carnival_gametoken(ID Complete)": {
        "prefix": "p+carnival_gametoken",
        "body": "\"carnival_gametoken\"",
        "description": " ※prefab ID: carnival_gametoken\n ※Name: Cawnival Token\n ※Recipe: \n\t+ 1 x: Seeds/seeds\n ※Required Tech: \n\t+ LV.3 : Cawnival Creation/CARNIVAL_HOSTSHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:carnival_gametoken(ReverseSearch)": {
        "prefix": "p+Cawnival Token",
        "body": "\"carnival_gametoken\"",
        "description": " ※prefab ID: carnival_gametoken\n ※Name: Cawnival Token\n ※Recipe: \n\t+ 1 x: Seeds/seeds\n ※Required Tech: \n\t+ LV.3 : Cawnival Creation/CARNIVAL_HOSTSHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:halloween_experiment_health(ID Complete)": {
        "prefix": "p+halloween_experiment_health",
        "body": "\"halloween_experiment_health\"",
        "description": " ※prefab ID: halloween_experiment_health\n ※Name: Sanguine Experiment\n ※Recipe: \n\t+ 1 x: Mosquito/mosquito\n\t+ 1 x: Red Cap/red_cap\n ※Required Tech: \n\t+ LV.1 : Mad Science/MADSCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:halloween_experiment_health(ReverseSearch)": {
        "prefix": "p+Sanguine Experiment",
        "body": "\"halloween_experiment_health\"",
        "description": " ※prefab ID: halloween_experiment_health\n ※Name: Sanguine Experiment\n ※Recipe: \n\t+ 1 x: Mosquito/mosquito\n\t+ 1 x: Red Cap/red_cap\n ※Required Tech: \n\t+ LV.1 : Mad Science/MADSCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:mermwatchtower(ID Complete)": {
        "prefix": "p+mermwatchtower",
        "body": "\"mermwatchtower\"",
        "description": " ※prefab ID: mermwatchtower\n ※Name: Merm Flort-ifications\n ※Recipe: \n\t+ 5 x: Boards/boards\n\t+ 1 x: Tentacle Spots/tentaclespots\n\t+ 2 x: Spear/spear\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:mermwatchtower(ReverseSearch)": {
        "prefix": "p+Merm Flort-ifications",
        "body": "\"mermwatchtower\"",
        "description": " ※prefab ID: mermwatchtower\n ※Name: Merm Flort-ifications\n ※Recipe: \n\t+ 5 x: Boards/boards\n\t+ 1 x: Tentacle Spots/tentaclespots\n\t+ 2 x: Spear/spear\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:winter_ornamentgorge(ID Complete)": {
        "prefix": "p+winter_ornamentgorge",
        "body": "\"winter_ornamentgorge\"",
        "description": " ※prefab ID: winter_ornamentgorge\n ※Name: Appeasing Adornment\n ※prefab Version: DST-632551 "
    },
    "prefab:winter_ornamentgorge(ReverseSearch)": {
        "prefix": "p+Appeasing Adornment",
        "body": "\"winter_ornamentgorge\"",
        "description": " ※prefab ID: winter_ornamentgorge\n ※Name: Appeasing Adornment\n ※prefab Version: DST-632551 "
    },
    "prefab:surfnturf(ID Complete)": {
        "prefix": "p+surfnturf",
        "body": "\"surfnturf\"",
        "description": " ※prefab ID: surfnturf\n ※Name: Surf 'n' Turf\n ※prefab Version: DST-632551 "
    },
    "prefab:surfnturf(ReverseSearch)": {
        "prefix": "p+Surf 'n' Turf",
        "body": "\"surfnturf\"",
        "description": " ※prefab ID: surfnturf\n ※Name: Surf 'n' Turf\n ※prefab Version: DST-632551 "
    },
    "prefab:dumbbell_bluegem(ID Complete)": {
        "prefix": "p+dumbbell_bluegem",
        "body": "\"dumbbell_bluegem\"",
        "description": " ※prefab ID: dumbbell_bluegem\n ※Name: Icebell\n ※Recipe: \n\t+ 2 x: Thulecite/thulecite\n\t+ 1 x: Blue Gem/bluegem\n\t+ 1 x: Twigs/twigs\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:dumbbell_bluegem(ReverseSearch)": {
        "prefix": "p+Icebell",
        "body": "\"dumbbell_bluegem\"",
        "description": " ※prefab ID: dumbbell_bluegem\n ※Name: Icebell\n ※Recipe: \n\t+ 2 x: Thulecite/thulecite\n\t+ 1 x: Blue Gem/bluegem\n\t+ 1 x: Twigs/twigs\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:boat_bumper_shell(ID Complete)": {
        "prefix": "p+boat_bumper_shell",
        "body": "\"boat_bumper_shell\"",
        "description": " ※prefab ID: boat_bumper_shell\n ※Name: Shell Bumper\n ※Recipe: \n\t+ 3 x: Broken Shell/slurtle_shellpieces\n\t+ 1 x: Rope/rope\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:boat_bumper_shell(ReverseSearch)": {
        "prefix": "p+Shell Bumper",
        "body": "\"boat_bumper_shell\"",
        "description": " ※prefab ID: boat_bumper_shell\n ※Name: Shell Bumper\n ※Recipe: \n\t+ 3 x: Broken Shell/slurtle_shellpieces\n\t+ 1 x: Rope/rope\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:dreadstone(ID Complete)": {
        "prefix": "p+dreadstone",
        "body": "\"dreadstone\"",
        "description": " ※prefab ID: dreadstone\n ※Name: Dreadstone\n ※prefab Version: DST-632551 "
    },
    "prefab:dreadstone(ReverseSearch)": {
        "prefix": "p+Dreadstone",
        "body": "\"dreadstone\"",
        "description": " ※prefab ID: dreadstone\n ※Name: Dreadstone\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_daywalker_builder(ID Complete)": {
        "prefix": "p+chesspiece_daywalker_builder",
        "body": "\"chesspiece_daywalker_builder\"",
        "description": " ※prefab ID: chesspiece_daywalker_builder\n ※Name: Nightmare Werepig Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_daywalker_builder(ReverseSearch)": {
        "prefix": "p+Nightmare Werepig Figure",
        "body": "\"chesspiece_daywalker_builder\"",
        "description": " ※prefab ID: chesspiece_daywalker_builder\n ※Name: Nightmare Werepig Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:pocketwatch_weapon(ID Complete)": {
        "prefix": "p+pocketwatch_weapon",
        "body": "\"pocketwatch_weapon\"",
        "description": " ※prefab ID: pocketwatch_weapon\n ※Name: Alarming Clock\n ※Recipe: \n\t+ 3 x: Time Pieces/pocketwatch_parts\n\t+ 4 x: Marble/marble\n\t+ 8 x: Nightmare Fuel/nightmarefuel\n ※Required Tech: \n\t+ LV.3 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:pocketwatch_weapon(ReverseSearch)": {
        "prefix": "p+Alarming Clock",
        "body": "\"pocketwatch_weapon\"",
        "description": " ※prefab ID: pocketwatch_weapon\n ※Name: Alarming Clock\n ※Recipe: \n\t+ 3 x: Time Pieces/pocketwatch_parts\n\t+ 4 x: Marble/marble\n\t+ 8 x: Nightmare Fuel/nightmarefuel\n ※Required Tech: \n\t+ LV.3 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:critter_lunarmothling(ID Complete)": {
        "prefix": "p+critter_lunarmothling",
        "body": "\"critter_lunarmothling\"",
        "description": " ※prefab ID: critter_lunarmothling\n ※Name: Mothling\n ※prefab Version: DST-632551 "
    },
    "prefab:critter_lunarmothling(ReverseSearch)": {
        "prefix": "p+Mothling",
        "body": "\"critter_lunarmothling\"",
        "description": " ※prefab ID: critter_lunarmothling\n ※Name: Mothling\n ※prefab Version: DST-632551 "
    },
    "prefab:burnable_locator_medium(ID Complete)": {
        "prefix": "p+burnable_locator_medium",
        "body": "\"burnable_locator_medium\"",
        "description": " ※prefab ID: burnable_locator_medium\n ※Name: Boat\n ※prefab Version: DST-632551 "
    },
    "prefab:burnable_locator_medium(ReverseSearch)": {
        "prefix": "p+Boat",
        "body": "\"burnable_locator_medium\"",
        "description": " ※prefab ID: burnable_locator_medium\n ※Name: Boat\n ※prefab Version: DST-632551 "
    },
    "prefab:mermthrone(ID Complete)": {
        "prefix": "p+mermthrone",
        "body": "\"mermthrone\"",
        "description": " ※prefab ID: mermthrone\n ※Name: Royal Tapestry\n ※Recipe: \n\t+ 20 x: Kelp Fronds/kelp\n\t+ 10 x: Pig Skin/pigskin\n\t+ 15 x: Beefalo Wool/beefalowool\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:mermthrone(ReverseSearch)": {
        "prefix": "p+Royal Tapestry",
        "body": "\"mermthrone\"",
        "description": " ※prefab ID: mermthrone\n ※Name: Royal Tapestry\n ※Recipe: \n\t+ 20 x: Kelp Fronds/kelp\n\t+ 10 x: Pig Skin/pigskin\n\t+ 15 x: Beefalo Wool/beefalowool\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:archive_switch(ID Complete)": {
        "prefix": "p+archive_switch",
        "body": "\"archive_switch\"",
        "description": " ※prefab ID: archive_switch\n ※Name: Ornate Pedestal\n ※prefab Version: DST-632551 "
    },
    "prefab:archive_switch(ReverseSearch)": {
        "prefix": "p+Ornate Pedestal",
        "body": "\"archive_switch\"",
        "description": " ※prefab ID: archive_switch\n ※Name: Ornate Pedestal\n ※prefab Version: DST-632551 "
    },
    "prefab:cold(ID Complete)": {
        "prefix": "p+cold",
        "body": "\"cold\"",
        "description": " ※prefab ID: cold\n ※Name: Freezing\n ※prefab Version: DST-632551 "
    },
    "prefab:cold(ReverseSearch)": {
        "prefix": "p+Freezing",
        "body": "\"cold\"",
        "description": " ※prefab ID: cold\n ※Name: Freezing\n ※prefab Version: DST-632551 "
    },
    "prefab:pandoraschest(ID Complete)": {
        "prefix": "p+pandoraschest",
        "body": "\"pandoraschest\"",
        "description": " ※prefab ID: pandoraschest\n ※Name: Ornate Chest\n ※prefab Version: DST-632551 "
    },
    "prefab:pandoraschest(ReverseSearch)": {
        "prefix": "p+Ornate Chest",
        "body": "\"pandoraschest\"",
        "description": " ※prefab ID: pandoraschest\n ※Name: Ornate Chest\n ※prefab Version: DST-632551 "
    },
    "prefab:wobysmall(ID Complete)": {
        "prefix": "p+wobysmall",
        "body": "\"wobysmall\"",
        "description": " ※prefab ID: wobysmall\n ※Name: Woby\n ※prefab Version: DST-632551 "
    },
    "prefab:wobysmall(ReverseSearch)": {
        "prefix": "p+Woby",
        "body": "\"wobysmall\"",
        "description": " ※prefab ID: wobysmall\n ※Name: Woby\n ※prefab Version: DST-632551 "
    },
    "prefab:wobster_sheller_dead(ID Complete)": {
        "prefix": "p+wobster_sheller_dead",
        "body": "\"wobster_sheller_dead\"",
        "description": " ※prefab ID: wobster_sheller_dead\n ※Name: Dead Wobster\n ※prefab Version: DST-632551 "
    },
    "prefab:wobster_sheller_dead(ReverseSearch)": {
        "prefix": "p+Dead Wobster",
        "body": "\"wobster_sheller_dead\"",
        "description": " ※prefab ID: wobster_sheller_dead\n ※Name: Dead Wobster\n ※prefab Version: DST-632551 "
    },
    "prefab:yotd_oar(ID Complete)": {
        "prefix": "p+yotd_oar",
        "body": "\"yotd_oar\"",
        "description": " ※prefab ID: yotd_oar\n ※Name: Claw Oar\n ※Recipe: \n\t+ 1 x: Gold Nugget/goldnugget\n ※Required Tech: \n\t+ LV.3 : /DRAGONOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:yotd_oar(ReverseSearch)": {
        "prefix": "p+Claw Oar",
        "body": "\"yotd_oar\"",
        "description": " ※prefab ID: yotd_oar\n ※Name: Claw Oar\n ※Recipe: \n\t+ 1 x: Gold Nugget/goldnugget\n ※Required Tech: \n\t+ LV.3 : /DRAGONOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:kelp_cooked(ID Complete)": {
        "prefix": "p+kelp_cooked",
        "body": "\"kelp_cooked\"",
        "description": " ※prefab ID: kelp_cooked\n ※Name: Cooked Kelp Fronds\n ※prefab Version: DST-632551 "
    },
    "prefab:kelp_cooked(ReverseSearch)": {
        "prefix": "p+Cooked Kelp Fronds",
        "body": "\"kelp_cooked\"",
        "description": " ※prefab ID: kelp_cooked\n ※Name: Cooked Kelp Fronds\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_warg_mutated_builder(ID Complete)": {
        "prefix": "p+chesspiece_warg_mutated_builder",
        "body": "\"chesspiece_warg_mutated_builder\"",
        "description": " ※prefab ID: chesspiece_warg_mutated_builder\n ※Name: Possessed Varg Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_warg_mutated_builder(ReverseSearch)": {
        "prefix": "p+Possessed Varg Figure",
        "body": "\"chesspiece_warg_mutated_builder\"",
        "description": " ※prefab ID: chesspiece_warg_mutated_builder\n ※Name: Possessed Varg Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:freshfruitcrepes(ID Complete)": {
        "prefix": "p+freshfruitcrepes",
        "body": "\"freshfruitcrepes\"",
        "description": " ※prefab ID: freshfruitcrepes\n ※Name: Fresh Fruit Crepes\n ※prefab Version: DST-632551 "
    },
    "prefab:freshfruitcrepes(ReverseSearch)": {
        "prefix": "p+Fresh Fruit Crepes",
        "body": "\"freshfruitcrepes\"",
        "description": " ※prefab ID: freshfruitcrepes\n ※Name: Fresh Fruit Crepes\n ※prefab Version: DST-632551 "
    },
    "prefab:dumbbell(ID Complete)": {
        "prefix": "p+dumbbell",
        "body": "\"dumbbell\"",
        "description": " ※prefab ID: dumbbell\n ※Name: Dumbbell\n ※Recipe: \n\t+ 4 x: Rocks/rocks\n\t+ 1 x: Twigs/twigs\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:dumbbell(ReverseSearch)": {
        "prefix": "p+Dumbbell",
        "body": "\"dumbbell\"",
        "description": " ※prefab ID: dumbbell\n ※Name: Dumbbell\n ※Recipe: \n\t+ 4 x: Rocks/rocks\n\t+ 1 x: Twigs/twigs\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:antlionhat(ID Complete)": {
        "prefix": "p+antlionhat",
        "body": "\"antlionhat\"",
        "description": " ※prefab ID: antlionhat\n ※Name: Turf-Raiser Helm\n ※Recipe: \n\t+ 5 x: Beefalo Wool/beefalowool\n\t+ 3 x: Pig Skin/pigskin\n\t+ 1 x: Desert Stone/townportaltalisman\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:antlionhat(ReverseSearch)": {
        "prefix": "p+Turf-Raiser Helm",
        "body": "\"antlionhat\"",
        "description": " ※prefab ID: antlionhat\n ※Name: Turf-Raiser Helm\n ※Recipe: \n\t+ 5 x: Beefalo Wool/beefalowool\n\t+ 3 x: Pig Skin/pigskin\n\t+ 1 x: Desert Stone/townportaltalisman\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:dug_monkeytail(ID Complete)": {
        "prefix": "p+dug_monkeytail",
        "body": "\"dug_monkeytail\"",
        "description": " ※prefab ID: dug_monkeytail\n ※Name: Monkeytails\n ※prefab Version: DST-632551 "
    },
    "prefab:dug_monkeytail(ReverseSearch)": {
        "prefix": "p+Monkeytails",
        "body": "\"dug_monkeytail\"",
        "description": " ※prefab ID: dug_monkeytail\n ※Name: Monkeytails\n ※prefab Version: DST-632551 "
    },
    "prefab:pocketwatch_parts(ID Complete)": {
        "prefix": "p+pocketwatch_parts",
        "body": "\"pocketwatch_parts\"",
        "description": " ※prefab ID: pocketwatch_parts\n ※Name: Time Pieces\n ※Recipe: \n\t+ 0 x: Clockmaker's Tools/pocketwatch_dismantler\n\t+ 8 x: Thulecite Fragments/thulecite_pieces\n\t+ 2 x: Nightmare Fuel/nightmarefuel\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:pocketwatch_parts(ReverseSearch)": {
        "prefix": "p+Time Pieces",
        "body": "\"pocketwatch_parts\"",
        "description": " ※prefab ID: pocketwatch_parts\n ※Name: Time Pieces\n ※Recipe: \n\t+ 0 x: Clockmaker's Tools/pocketwatch_dismantler\n\t+ 8 x: Thulecite Fragments/thulecite_pieces\n\t+ 2 x: Nightmare Fuel/nightmarefuel\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:bunnyman(ID Complete)": {
        "prefix": "p+bunnyman",
        "body": "\"bunnyman\"",
        "description": " ※prefab ID: bunnyman\n ※Name: Bunnyman\n ※prefab Version: DST-632551 "
    },
    "prefab:bunnyman(ReverseSearch)": {
        "prefix": "p+Bunnyman",
        "body": "\"bunnyman\"",
        "description": " ※prefab ID: bunnyman\n ※Name: Bunnyman\n ※prefab Version: DST-632551 "
    },
    "prefab:cannonball_rock(ID Complete)": {
        "prefix": "p+cannonball_rock",
        "body": "\"cannonball_rock\"",
        "description": " ※prefab ID: cannonball_rock\n ※Name: Cannonball\n ※prefab Version: DST-632551 "
    },
    "prefab:cannonball_rock(ReverseSearch)": {
        "prefix": "p+Cannonball",
        "body": "\"cannonball_rock\"",
        "description": " ※prefab ID: cannonball_rock\n ※Name: Cannonball\n ※prefab Version: DST-632551 "
    },
    "prefab:pinecone(ID Complete)": {
        "prefix": "p+pinecone",
        "body": "\"pinecone\"",
        "description": " ※prefab ID: pinecone\n ※Name: Pine Cone\n ※prefab Version: DST-632551 "
    },
    "prefab:pinecone(ReverseSearch)": {
        "prefix": "p+Pine Cone",
        "body": "\"pinecone\"",
        "description": " ※prefab ID: pinecone\n ※Name: Pine Cone\n ※prefab Version: DST-632551 "
    },
    "prefab:sunkenchest(ID Complete)": {
        "prefix": "p+sunkenchest",
        "body": "\"sunkenchest\"",
        "description": " ※prefab ID: sunkenchest\n ※Name: Sunken Chest\n ※Recipe: \n\t+ 5 x: Broken Shell/slurtle_shellpieces\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:sunkenchest(ReverseSearch)": {
        "prefix": "p+Sunken Chest",
        "body": "\"sunkenchest\"",
        "description": " ※prefab ID: sunkenchest\n ※Name: Sunken Chest\n ※Recipe: \n\t+ 5 x: Broken Shell/slurtle_shellpieces\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:tomato_cooked(ID Complete)": {
        "prefix": "p+tomato_cooked",
        "body": "\"tomato_cooked\"",
        "description": " ※prefab ID: tomato_cooked\n ※Name: Roasted Toma Root\n ※prefab Version: DST-632551 "
    },
    "prefab:tomato_cooked(ReverseSearch)": {
        "prefix": "p+Roasted Toma Root",
        "body": "\"tomato_cooked\"",
        "description": " ※prefab ID: tomato_cooked\n ※Name: Roasted Toma Root\n ※prefab Version: DST-632551 "
    },
    "prefab:halloweencandy_13(ID Complete)": {
        "prefix": "p+halloweencandy_13",
        "body": "\"halloweencandy_13\"",
        "description": " ※prefab ID: halloweencandy_13\n ※Name: Otherworldly Jawbreaker\n ※prefab Version: DST-632551 "
    },
    "prefab:halloweencandy_13(ReverseSearch)": {
        "prefix": "p+Otherworldly Jawbreaker",
        "body": "\"halloweencandy_13\"",
        "description": " ※prefab ID: halloweencandy_13\n ※Name: Otherworldly Jawbreaker\n ※prefab Version: DST-632551 "
    },
    "prefab:gnarwail_horn(ID Complete)": {
        "prefix": "p+gnarwail_horn",
        "body": "\"gnarwail_horn\"",
        "description": " ※prefab ID: gnarwail_horn\n ※Name: Gnarwail Horn\n ※prefab Version: DST-632551 "
    },
    "prefab:gnarwail_horn(ReverseSearch)": {
        "prefix": "p+Gnarwail Horn",
        "body": "\"gnarwail_horn\"",
        "description": " ※prefab ID: gnarwail_horn\n ※Name: Gnarwail Horn\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_crate_pot_hanger(ID Complete)": {
        "prefix": "p+quagmire_crate_pot_hanger",
        "body": "\"quagmire_crate_pot_hanger\"",
        "description": " ※prefab ID: quagmire_crate_pot_hanger\n ※Name: Cookpot Kit\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_crate_pot_hanger(ReverseSearch)": {
        "prefix": "p+Cookpot Kit",
        "body": "\"quagmire_crate_pot_hanger\"",
        "description": " ※prefab ID: quagmire_crate_pot_hanger\n ※Name: Cookpot Kit\n ※prefab Version: DST-632551 "
    },
    "prefab:compost(ID Complete)": {
        "prefix": "p+compost",
        "body": "\"compost\"",
        "description": " ※prefab ID: compost\n ※Name: Compost\n ※prefab Version: DST-632551 "
    },
    "prefab:compost(ReverseSearch)": {
        "prefix": "p+Compost",
        "body": "\"compost\"",
        "description": " ※prefab ID: compost\n ※Name: Compost\n ※prefab Version: DST-632551 "
    },
    "prefab:sketch_scrapbook(ID Complete)": {
        "prefix": "p+sketch_scrapbook",
        "body": "\"sketch_scrapbook\"",
        "description": " ※prefab ID: sketch_scrapbook\n ※Name: Sketch\n ※prefab Version: DST-632551 "
    },
    "prefab:sketch_scrapbook(ReverseSearch)": {
        "prefix": "p+Sketch",
        "body": "\"sketch_scrapbook\"",
        "description": " ※prefab ID: sketch_scrapbook\n ※Name: Sketch\n ※prefab Version: DST-632551 "
    },
    "prefab:wagstaff_mutations_note(ID Complete)": {
        "prefix": "p+wagstaff_mutations_note",
        "body": "\"wagstaff_mutations_note\"",
        "description": " ※prefab ID: wagstaff_mutations_note\n ※Name: Research Notes\n ※prefab Version: DST-632551 "
    },
    "prefab:wagstaff_mutations_note(ReverseSearch)": {
        "prefix": "p+Research Notes",
        "body": "\"wagstaff_mutations_note\"",
        "description": " ※prefab ID: wagstaff_mutations_note\n ※Name: Research Notes\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishinglure_hermit_snow(ID Complete)": {
        "prefix": "p+oceanfishinglure_hermit_snow",
        "body": "\"oceanfishinglure_hermit_snow\"",
        "description": " ※prefab ID: oceanfishinglure_hermit_snow\n ※Name: Snow Day Lure\n ※Recipe: \n\t+ 1 x: Cookie Cutter Shell/cookiecuttershell\n\t+ 1 x: Ice/ice\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishinglure_hermit_snow(ReverseSearch)": {
        "prefix": "p+Snow Day Lure",
        "body": "\"oceanfishinglure_hermit_snow\"",
        "description": " ※prefab ID: oceanfishinglure_hermit_snow\n ※Name: Snow Day Lure\n ※Recipe: \n\t+ 1 x: Cookie Cutter Shell/cookiecuttershell\n\t+ 1 x: Ice/ice\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:wintercooking_gravy(ID Complete)": {
        "prefix": "p+wintercooking_gravy",
        "body": "\"wintercooking_gravy\"",
        "description": " ※prefab ID: wintercooking_gravy\n ※Name: Good Gravy\n ※Recipe: \n\t+ 1 x: Holiday Cheer/wintersfeastfuel\n\t+ 1 x: Rot/spoiled_food\n\t+ 1 x: Bone Shards/boneshard\n ※Required Tech: \n\t+ LV.1 : Feast/WINTERSFEASTCOOKING\n ※prefab Version: DST-632551 "
    },
    "prefab:wintercooking_gravy(ReverseSearch)": {
        "prefix": "p+Good Gravy",
        "body": "\"wintercooking_gravy\"",
        "description": " ※prefab ID: wintercooking_gravy\n ※Name: Good Gravy\n ※Recipe: \n\t+ 1 x: Holiday Cheer/wintersfeastfuel\n\t+ 1 x: Rot/spoiled_food\n\t+ 1 x: Bone Shards/boneshard\n ※Required Tech: \n\t+ LV.1 : Feast/WINTERSFEASTCOOKING\n ※prefab Version: DST-632551 "
    },
    "prefab:carnival_vest_c(ID Complete)": {
        "prefix": "p+carnival_vest_c",
        "body": "\"carnival_vest_c\"",
        "description": " ※prefab ID: carnival_vest_c\n ※Name: Chirpy Capelet\n ※Recipe: \n\t+ 48 x: Prize Tickets/carnival_prizeticket\n ※Required Tech: \n\t+ LV.1 : Trinket Trove/CARNIVAL_PRIZESHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:carnival_vest_c(ReverseSearch)": {
        "prefix": "p+Chirpy Capelet",
        "body": "\"carnival_vest_c\"",
        "description": " ※prefab ID: carnival_vest_c\n ※Name: Chirpy Capelet\n ※Recipe: \n\t+ 48 x: Prize Tickets/carnival_prizeticket\n ※Required Tech: \n\t+ LV.1 : Trinket Trove/CARNIVAL_PRIZESHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_rubble_carriage(ID Complete)": {
        "prefix": "p+quagmire_rubble_carriage",
        "body": "\"quagmire_rubble_carriage\"",
        "description": " ※prefab ID: quagmire_rubble_carriage\n ※Name: Broken Carriage\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_rubble_carriage(ReverseSearch)": {
        "prefix": "p+Broken Carriage",
        "body": "\"quagmire_rubble_carriage\"",
        "description": " ※prefab ID: quagmire_rubble_carriage\n ※Name: Broken Carriage\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_saltrock(ID Complete)": {
        "prefix": "p+quagmire_saltrock",
        "body": "\"quagmire_saltrock\"",
        "description": " ※prefab ID: quagmire_saltrock\n ※Name: Salt Crystals\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_saltrock(ReverseSearch)": {
        "prefix": "p+Salt Crystals",
        "body": "\"quagmire_saltrock\"",
        "description": " ※prefab ID: quagmire_saltrock\n ※Name: Salt Crystals\n ※prefab Version: DST-632551 "
    },
    "prefab:reeds(ID Complete)": {
        "prefix": "p+reeds",
        "body": "\"reeds\"",
        "description": " ※prefab ID: reeds\n ※Name: Reeds\n ※prefab Version: DST-632551 "
    },
    "prefab:reeds(ReverseSearch)": {
        "prefix": "p+Reeds",
        "body": "\"reeds\"",
        "description": " ※prefab ID: reeds\n ※Name: Reeds\n ※prefab Version: DST-632551 "
    },
    "prefab:mashedpotatoes(ID Complete)": {
        "prefix": "p+mashedpotatoes",
        "body": "\"mashedpotatoes\"",
        "description": " ※prefab ID: mashedpotatoes\n ※Name: Creamy Potato Purée\n ※prefab Version: DST-632551 "
    },
    "prefab:mashedpotatoes(ReverseSearch)": {
        "prefix": "p+Creamy Potato Purée",
        "body": "\"mashedpotatoes\"",
        "description": " ※prefab ID: mashedpotatoes\n ※Name: Creamy Potato Purée\n ※prefab Version: DST-632551 "
    },
    "prefab:tentacle_pillar_hole(ID Complete)": {
        "prefix": "p+tentacle_pillar_hole",
        "body": "\"tentacle_pillar_hole\"",
        "description": " ※prefab ID: tentacle_pillar_hole\n ※Name: Big Slimy Pit\n ※prefab Version: DST-632551 "
    },
    "prefab:tentacle_pillar_hole(ReverseSearch)": {
        "prefix": "p+Big Slimy Pit",
        "body": "\"tentacle_pillar_hole\"",
        "description": " ※prefab ID: tentacle_pillar_hole\n ※Name: Big Slimy Pit\n ※prefab Version: DST-632551 "
    },
    "prefab:winter_ornamentboss(ID Complete)": {
        "prefix": "p+winter_ornamentboss",
        "body": "\"winter_ornamentboss\"",
        "description": " ※prefab ID: winter_ornamentboss\n ※Name: Magnificent Adornment\n ※prefab Version: DST-632551 "
    },
    "prefab:winter_ornamentboss(ReverseSearch)": {
        "prefix": "p+Magnificent Adornment",
        "body": "\"winter_ornamentboss\"",
        "description": " ※prefab ID: winter_ornamentboss\n ※Name: Magnificent Adornment\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_bearger_mutated(ID Complete)": {
        "prefix": "p+chesspiece_bearger_mutated",
        "body": "\"chesspiece_bearger_mutated\"",
        "description": " ※prefab ID: chesspiece_bearger_mutated\n ※Name: Armored Bearger Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_bearger_mutated(ReverseSearch)": {
        "prefix": "p+Armored Bearger Figure",
        "body": "\"chesspiece_bearger_mutated\"",
        "description": " ※prefab ID: chesspiece_bearger_mutated\n ※Name: Armored Bearger Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_beequeen_builder(ID Complete)": {
        "prefix": "p+chesspiece_beequeen_builder",
        "body": "\"chesspiece_beequeen_builder\"",
        "description": " ※prefab ID: chesspiece_beequeen_builder\n ※Name: Bee Queen Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_beequeen_builder(ReverseSearch)": {
        "prefix": "p+Bee Queen Figure",
        "body": "\"chesspiece_beequeen_builder\"",
        "description": " ※prefab ID: chesspiece_beequeen_builder\n ※Name: Bee Queen Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_meteor(ID Complete)": {
        "prefix": "p+lavaarena_meteor",
        "body": "\"lavaarena_meteor\"",
        "description": " ※prefab ID: lavaarena_meteor\n ※Name: Meteor\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_meteor(ReverseSearch)": {
        "prefix": "p+Meteor",
        "body": "\"lavaarena_meteor\"",
        "description": " ※prefab ID: lavaarena_meteor\n ※Name: Meteor\n ※prefab Version: DST-632551 "
    },
    "prefab:townportal(ID Complete)": {
        "prefix": "p+townportal",
        "body": "\"townportal\"",
        "description": " ※prefab ID: townportal\n ※Name: The Lazy Deserter\n ※Recipe: \n\t+ 1 x: Orange Moonlens/orangemooneye\n\t+ 1 x: Desert Stone/townportaltalisman\n\t+ 3 x: Cut Stone/cutstone\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:townportal(ReverseSearch)": {
        "prefix": "p+The Lazy Deserter",
        "body": "\"townportal\"",
        "description": " ※prefab ID: townportal\n ※Name: The Lazy Deserter\n ※Recipe: \n\t+ 1 x: Orange Moonlens/orangemooneye\n\t+ 1 x: Desert Stone/townportaltalisman\n\t+ 3 x: Cut Stone/cutstone\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:boatrace_seastack_monkey(ID Complete)": {
        "prefix": "p+boatrace_seastack_monkey",
        "body": "\"boatrace_seastack_monkey\"",
        "description": " ※prefab ID: boatrace_seastack_monkey\n ※Name: Thorny Buoy\n ※prefab Version: DST-632551 "
    },
    "prefab:boatrace_seastack_monkey(ReverseSearch)": {
        "prefix": "p+Thorny Buoy",
        "body": "\"boatrace_seastack_monkey\"",
        "description": " ※prefab ID: boatrace_seastack_monkey\n ※Name: Thorny Buoy\n ※prefab Version: DST-632551 "
    },
    "prefab:yotb_beefalo_doll_nature(ID Complete)": {
        "prefix": "p+yotb_beefalo_doll_nature",
        "body": "\"yotb_beefalo_doll_nature\"",
        "description": " ※prefab ID: yotb_beefalo_doll_nature\n ※Name: Flowery Beefalo Doll\n ※prefab Version: DST-632551 "
    },
    "prefab:yotb_beefalo_doll_nature(ReverseSearch)": {
        "prefix": "p+Flowery Beefalo Doll",
        "body": "\"yotb_beefalo_doll_nature\"",
        "description": " ※prefab ID: yotb_beefalo_doll_nature\n ※Name: Flowery Beefalo Doll\n ※prefab Version: DST-632551 "
    },
    "prefab:ceviche(ID Complete)": {
        "prefix": "p+ceviche",
        "body": "\"ceviche\"",
        "description": " ※prefab ID: ceviche\n ※Name: Ceviche\n ※prefab Version: DST-632551 "
    },
    "prefab:ceviche(ReverseSearch)": {
        "prefix": "p+Ceviche",
        "body": "\"ceviche\"",
        "description": " ※prefab ID: ceviche\n ※Name: Ceviche\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_minotaur(ID Complete)": {
        "prefix": "p+chesspiece_minotaur",
        "body": "\"chesspiece_minotaur\"",
        "description": " ※prefab ID: chesspiece_minotaur\n ※Name: Ancient Guardian Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_minotaur(ReverseSearch)": {
        "prefix": "p+Ancient Guardian Figure",
        "body": "\"chesspiece_minotaur\"",
        "description": " ※prefab ID: chesspiece_minotaur\n ※Name: Ancient Guardian Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:sisturn(ID Complete)": {
        "prefix": "p+sisturn",
        "body": "\"sisturn\"",
        "description": " ※prefab ID: sisturn\n ※Name: Sisturn\n ※Recipe: \n\t+ 3 x: Cut Stone/cutstone\n\t+ 3 x: Boards/boards\n\t+ 1 x: Ashes/ash\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:sisturn(ReverseSearch)": {
        "prefix": "p+Sisturn",
        "body": "\"sisturn\"",
        "description": " ※prefab ID: sisturn\n ※Name: Sisturn\n ※Recipe: \n\t+ 3 x: Cut Stone/cutstone\n\t+ 3 x: Boards/boards\n\t+ 1 x: Ashes/ash\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:ruinsrelic_vase(ID Complete)": {
        "prefix": "p+ruinsrelic_vase",
        "body": "\"ruinsrelic_vase\"",
        "description": " ※prefab ID: ruinsrelic_vase\n ※Name: Replica Relic Vase\n ※Recipe: \n\t+ 2 x: Cut Stone/cutstone\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:ruinsrelic_vase(ReverseSearch)": {
        "prefix": "p+Replica Relic Vase",
        "body": "\"ruinsrelic_vase\"",
        "description": " ※prefab ID: ruinsrelic_vase\n ※Name: Replica Relic Vase\n ※Recipe: \n\t+ 2 x: Cut Stone/cutstone\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:wobster_den(ID Complete)": {
        "prefix": "p+wobster_den",
        "body": "\"wobster_den\"",
        "description": " ※prefab ID: wobster_den\n ※Name: Wobster Mound\n ※prefab Version: DST-632551 "
    },
    "prefab:wobster_den(ReverseSearch)": {
        "prefix": "p+Wobster Mound",
        "body": "\"wobster_den\"",
        "description": " ※prefab ID: wobster_den\n ※Name: Wobster Mound\n ※prefab Version: DST-632551 "
    },
    "prefab:charlie_lecturn(ID Complete)": {
        "prefix": "p+charlie_lecturn",
        "body": "\"charlie_lecturn\"",
        "description": " ※prefab ID: charlie_lecturn\n ※Name: Playbill\n ※prefab Version: DST-632551 "
    },
    "prefab:charlie_lecturn(ReverseSearch)": {
        "prefix": "p+Playbill",
        "body": "\"charlie_lecturn\"",
        "description": " ※prefab ID: charlie_lecturn\n ※Name: Playbill\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_3(ID Complete)": {
        "prefix": "p+trinket_3",
        "body": "\"trinket_3\"",
        "description": " ※prefab ID: trinket_3\n ※Name: Gord's Knot\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_3(ReverseSearch)": {
        "prefix": "p+Gord's Knot",
        "body": "\"trinket_3\"",
        "description": " ※prefab ID: trinket_3\n ※Name: Gord's Knot\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_32(ID Complete)": {
        "prefix": "p+trinket_32",
        "body": "\"trinket_32\"",
        "description": " ※prefab ID: trinket_32\n ※Name: Cubic Zirconia Ball\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_32(ReverseSearch)": {
        "prefix": "p+Cubic Zirconia Ball",
        "body": "\"trinket_32\"",
        "description": " ※prefab ID: trinket_32\n ※Name: Cubic Zirconia Ball\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivaldecor_eggride4(ID Complete)": {
        "prefix": "p+carnivaldecor_eggride4",
        "body": "\"carnivaldecor_eggride4\"",
        "description": " ※prefab ID: carnivaldecor_eggride4\n ※Name: Mini Tower Drop\n ※Recipe: \n\t+ 1 x: Mini Tower Drop Kit/carnivaldecor_eggride4_kit\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:carnivaldecor_eggride4(ReverseSearch)": {
        "prefix": "p+Mini Tower Drop",
        "body": "\"carnivaldecor_eggride4\"",
        "description": " ※prefab ID: carnivaldecor_eggride4\n ※Name: Mini Tower Drop\n ※Recipe: \n\t+ 1 x: Mini Tower Drop Kit/carnivaldecor_eggride4_kit\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:shell_cluster(ID Complete)": {
        "prefix": "p+shell_cluster",
        "body": "\"shell_cluster\"",
        "description": " ※prefab ID: shell_cluster\n ※Name: Shell Cluster\n ※prefab Version: DST-632551 "
    },
    "prefab:shell_cluster(ReverseSearch)": {
        "prefix": "p+Shell Cluster",
        "body": "\"shell_cluster\"",
        "description": " ※prefab ID: shell_cluster\n ※Name: Shell Cluster\n ※prefab Version: DST-632551 "
    },
    "prefab:punchingbag(ID Complete)": {
        "prefix": "p+punchingbag",
        "body": "\"punchingbag\"",
        "description": " ※prefab ID: punchingbag\n ※Name: Punching Bag\n ※Recipe: \n\t+ 3 x: Cut Grass/cutgrass\n\t+ 1 x: Boards/boards\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:punchingbag(ReverseSearch)": {
        "prefix": "p+Punching Bag",
        "body": "\"punchingbag\"",
        "description": " ※prefab ID: punchingbag\n ※Name: Punching Bag\n ※Recipe: \n\t+ 3 x: Cut Grass/cutgrass\n\t+ 1 x: Boards/boards\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:ruinsrelic_chipbowl(ID Complete)": {
        "prefix": "p+ruinsrelic_chipbowl",
        "body": "\"ruinsrelic_chipbowl\"",
        "description": " ※prefab ID: ruinsrelic_chipbowl\n ※Name: Replica Relic Dish\n ※Recipe: \n\t+ 1 x: Cut Stone/cutstone\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:ruinsrelic_chipbowl(ReverseSearch)": {
        "prefix": "p+Replica Relic Dish",
        "body": "\"ruinsrelic_chipbowl\"",
        "description": " ※prefab ID: ruinsrelic_chipbowl\n ※Name: Replica Relic Dish\n ※Recipe: \n\t+ 1 x: Cut Stone/cutstone\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_armormedium(ID Complete)": {
        "prefix": "p+lavaarena_armormedium",
        "body": "\"lavaarena_armormedium\"",
        "description": " ※prefab ID: lavaarena_armormedium\n ※Name: Wood Armor\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_armormedium(ReverseSearch)": {
        "prefix": "p+Wood Armor",
        "body": "\"lavaarena_armormedium\"",
        "description": " ※prefab ID: lavaarena_armormedium\n ※Name: Wood Armor\n ※prefab Version: DST-632551 "
    },
    "prefab:lucky_goldnugget(ID Complete)": {
        "prefix": "p+lucky_goldnugget",
        "body": "\"lucky_goldnugget\"",
        "description": " ※prefab ID: lucky_goldnugget\n ※Name: Lucky Gold Nugget\n ※prefab Version: DST-632551 "
    },
    "prefab:lucky_goldnugget(ReverseSearch)": {
        "prefix": "p+Lucky Gold Nugget",
        "body": "\"lucky_goldnugget\"",
        "description": " ※prefab ID: lucky_goldnugget\n ※Name: Lucky Gold Nugget\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_seedpacket_2(ID Complete)": {
        "prefix": "p+quagmire_seedpacket_2",
        "body": "\"quagmire_seedpacket_2\"",
        "description": " ※prefab ID: quagmire_seedpacket_2\n ※Name: Packet of Fluffy Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_seedpacket_2(ReverseSearch)": {
        "prefix": "p+Packet of Fluffy Seeds",
        "body": "\"quagmire_seedpacket_2\"",
        "description": " ※prefab ID: quagmire_seedpacket_2\n ※Name: Packet of Fluffy Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:garlic(ID Complete)": {
        "prefix": "p+garlic",
        "body": "\"garlic\"",
        "description": " ※prefab ID: garlic\n ※Name: Garlic\n ※prefab Version: DST-632551 "
    },
    "prefab:garlic(ReverseSearch)": {
        "prefix": "p+Garlic",
        "body": "\"garlic\"",
        "description": " ※prefab ID: garlic\n ※Name: Garlic\n ※prefab Version: DST-632551 "
    },
    "prefab:sewing_tape(ID Complete)": {
        "prefix": "p+sewing_tape",
        "body": "\"sewing_tape\"",
        "description": " ※prefab ID: sewing_tape\n ※Name: Trusty Tape\n ※Recipe: \n\t+ 1 x: Silk/silk\n\t+ 3 x: Cut Grass/cutgrass\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:sewing_tape(ReverseSearch)": {
        "prefix": "p+Trusty Tape",
        "body": "\"sewing_tape\"",
        "description": " ※prefab ID: sewing_tape\n ※Name: Trusty Tape\n ※Recipe: \n\t+ 1 x: Silk/silk\n\t+ 3 x: Cut Grass/cutgrass\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:moon_fissure_plugged(ID Complete)": {
        "prefix": "p+moon_fissure_plugged",
        "body": "\"moon_fissure_plugged\"",
        "description": " ※prefab ID: moon_fissure_plugged\n ※Name: Plugged Fissure\n ※prefab Version: DST-632551 "
    },
    "prefab:moon_fissure_plugged(ReverseSearch)": {
        "prefix": "p+Plugged Fissure",
        "body": "\"moon_fissure_plugged\"",
        "description": " ※prefab ID: moon_fissure_plugged\n ※Name: Plugged Fissure\n ※prefab Version: DST-632551 "
    },
    "prefab:mosquitomermsalve(ID Complete)": {
        "prefix": "p+mosquitomermsalve",
        "body": "\"mosquitomermsalve\"",
        "description": " ※prefab ID: mosquitomermsalve\n ※Name: Blood Shot\n ※Recipe: \n\t+ 2 x: Mosquito Sack/mosquitosack\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:mosquitomermsalve(ReverseSearch)": {
        "prefix": "p+Blood Shot",
        "body": "\"mosquitomermsalve\"",
        "description": " ※prefab ID: mosquitomermsalve\n ※Name: Blood Shot\n ※Recipe: \n\t+ 2 x: Mosquito Sack/mosquitosack\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:steeringwheel_item(ID Complete)": {
        "prefix": "p+steeringwheel_item",
        "body": "\"steeringwheel_item\"",
        "description": " ※prefab ID: steeringwheel_item\n ※Name: Steering Wheel Kit\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 1 x: Rope/rope\n ※Required Tech: \n\t+ LV.1 : Seafaring/SEAFARING\n ※prefab Version: DST-632551 "
    },
    "prefab:steeringwheel_item(ReverseSearch)": {
        "prefix": "p+Steering Wheel Kit",
        "body": "\"steeringwheel_item\"",
        "description": " ※prefab ID: steeringwheel_item\n ※Name: Steering Wheel Kit\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 1 x: Rope/rope\n ※Required Tech: \n\t+ LV.1 : Seafaring/SEAFARING\n ※prefab Version: DST-632551 "
    },
    "prefab:chum_blueprint(ID Complete)": {
        "prefix": "p+chum_blueprint",
        "body": "\"chum_blueprint\"",
        "description": " ※prefab ID: chum_blueprint\n ※Name: Fish Food Blueprint\n ※prefab Version: DST-632551 "
    },
    "prefab:chum_blueprint(ReverseSearch)": {
        "prefix": "p+Fish Food Blueprint",
        "body": "\"chum_blueprint\"",
        "description": " ※prefab ID: chum_blueprint\n ※Name: Fish Food Blueprint\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_rook(ID Complete)": {
        "prefix": "p+chesspiece_rook",
        "body": "\"chesspiece_rook\"",
        "description": " ※prefab ID: chesspiece_rook\n ※Name: Rook Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_rook(ReverseSearch)": {
        "prefix": "p+Rook Figure",
        "body": "\"chesspiece_rook\"",
        "description": " ※prefab ID: chesspiece_rook\n ※Name: Rook Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_small_6_inv(ID Complete)": {
        "prefix": "p+oceanfish_small_6_inv",
        "body": "\"oceanfish_small_6_inv\"",
        "description": " ※prefab ID: oceanfish_small_6_inv\n ※Name: Fallounder\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_small_6_inv(ReverseSearch)": {
        "prefix": "p+Fallounder",
        "body": "\"oceanfish_small_6_inv\"",
        "description": " ※prefab ID: oceanfish_small_6_inv\n ※Name: Fallounder\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_047(ID Complete)": {
        "prefix": "p+quagmire_food_047",
        "body": "\"quagmire_food_047\"",
        "description": " ※prefab ID: quagmire_food_047\n ※Name: Bagel and Fish\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_047(ReverseSearch)": {
        "prefix": "p+Bagel and Fish",
        "body": "\"quagmire_food_047\"",
        "description": " ※prefab ID: quagmire_food_047\n ※Name: Bagel and Fish\n ※prefab Version: DST-632551 "
    },
    "prefab:bootleg(ID Complete)": {
        "prefix": "p+bootleg",
        "body": "\"bootleg\"",
        "description": " ※prefab ID: bootleg\n ※Name: Bootleg Getaway\n ※prefab Version: DST-632551 "
    },
    "prefab:bootleg(ReverseSearch)": {
        "prefix": "p+Bootleg Getaway",
        "body": "\"bootleg\"",
        "description": " ※prefab ID: bootleg\n ※Name: Bootleg Getaway\n ※prefab Version: DST-632551 "
    },
    "prefab:gingerbreadwarg(ID Complete)": {
        "prefix": "p+gingerbreadwarg",
        "body": "\"gingerbreadwarg\"",
        "description": " ※prefab ID: gingerbreadwarg\n ※Name: Gingerbread Varg\n ※prefab Version: DST-632551 "
    },
    "prefab:gingerbreadwarg(ReverseSearch)": {
        "prefix": "p+Gingerbread Varg",
        "body": "\"gingerbreadwarg\"",
        "description": " ※prefab ID: gingerbreadwarg\n ※Name: Gingerbread Varg\n ※prefab Version: DST-632551 "
    },
    "prefab:barnaclepita(ID Complete)": {
        "prefix": "p+barnaclepita",
        "body": "\"barnaclepita\"",
        "description": " ※prefab ID: barnaclepita\n ※Name: Barnacle Pita\n ※prefab Version: DST-632551 "
    },
    "prefab:barnaclepita(ReverseSearch)": {
        "prefix": "p+Barnacle Pita",
        "body": "\"barnaclepita\"",
        "description": " ※prefab ID: barnaclepita\n ※Name: Barnacle Pita\n ※prefab Version: DST-632551 "
    },
    "prefab:yotb_post(ID Complete)": {
        "prefix": "p+yotb_post",
        "body": "\"yotb_post\"",
        "description": " ※prefab ID: yotb_post\n ※Name: Beefalo Stage\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 1 x: Gold Nugget/goldnugget\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:yotb_post(ReverseSearch)": {
        "prefix": "p+Beefalo Stage",
        "body": "\"yotb_post\"",
        "description": " ※prefab ID: yotb_post\n ※Name: Beefalo Stage\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 1 x: Gold Nugget/goldnugget\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:barnaclestuffedfishhead(ID Complete)": {
        "prefix": "p+barnaclestuffedfishhead",
        "body": "\"barnaclestuffedfishhead\"",
        "description": " ※prefab ID: barnaclestuffedfishhead\n ※Name: Stuffed Fish Heads\n ※prefab Version: DST-632551 "
    },
    "prefab:barnaclestuffedfishhead(ReverseSearch)": {
        "prefix": "p+Stuffed Fish Heads",
        "body": "\"barnaclestuffedfishhead\"",
        "description": " ※prefab ID: barnaclestuffedfishhead\n ※Name: Stuffed Fish Heads\n ※prefab Version: DST-632551 "
    },
    "prefab:fossil_stalker(ID Complete)": {
        "prefix": "p+fossil_stalker",
        "body": "\"fossil_stalker\"",
        "description": " ※prefab ID: fossil_stalker\n ※Name: Odd Skeleton\n ※prefab Version: DST-632551 "
    },
    "prefab:fossil_stalker(ReverseSearch)": {
        "prefix": "p+Odd Skeleton",
        "body": "\"fossil_stalker\"",
        "description": " ※prefab ID: fossil_stalker\n ※Name: Odd Skeleton\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_44(ID Complete)": {
        "prefix": "p+trinket_44",
        "body": "\"trinket_44\"",
        "description": " ※prefab ID: trinket_44\n ※Name: Broken Terrarium\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_44(ReverseSearch)": {
        "prefix": "p+Broken Terrarium",
        "body": "\"trinket_44\"",
        "description": " ※prefab ID: trinket_44\n ※Name: Broken Terrarium\n ※prefab Version: DST-632551 "
    },
    "prefab:trap_starfish(ID Complete)": {
        "prefix": "p+trap_starfish",
        "body": "\"trap_starfish\"",
        "description": " ※prefab ID: trap_starfish\n ※Name: Anenemy\n ※prefab Version: DST-632551 "
    },
    "prefab:trap_starfish(ReverseSearch)": {
        "prefix": "p+Anenemy",
        "body": "\"trap_starfish\"",
        "description": " ※prefab ID: trap_starfish\n ※Name: Anenemy\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_sapbucket(ID Complete)": {
        "prefix": "p+quagmire_sapbucket",
        "body": "\"quagmire_sapbucket\"",
        "description": " ※prefab ID: quagmire_sapbucket\n ※Name: Tree Tapping Kit\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_sapbucket(ReverseSearch)": {
        "prefix": "p+Tree Tapping Kit",
        "body": "\"quagmire_sapbucket\"",
        "description": " ※prefab ID: quagmire_sapbucket\n ※Name: Tree Tapping Kit\n ※prefab Version: DST-632551 "
    },
    "prefab:honey(ID Complete)": {
        "prefix": "p+honey",
        "body": "\"honey\"",
        "description": " ※prefab ID: honey\n ※Name: Honey\n ※prefab Version: DST-632551 "
    },
    "prefab:honey(ReverseSearch)": {
        "prefix": "p+Honey",
        "body": "\"honey\"",
        "description": " ※prefab ID: honey\n ※Name: Honey\n ※prefab Version: DST-632551 "
    },
    "prefab:shadowheart_infused(ID Complete)": {
        "prefix": "p+shadowheart_infused",
        "body": "\"shadowheart_infused\"",
        "description": " ※prefab ID: shadowheart_infused\n ※Name: Possessed Shadow Atrium\n ※prefab Version: DST-632551 "
    },
    "prefab:shadowheart_infused(ReverseSearch)": {
        "prefix": "p+Possessed Shadow Atrium",
        "body": "\"shadowheart_infused\"",
        "description": " ※prefab ID: shadowheart_infused\n ※Name: Possessed Shadow Atrium\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishingbobber_none(ID Complete)": {
        "prefix": "p+oceanfishingbobber_none",
        "body": "\"oceanfishingbobber_none\"",
        "description": " ※prefab ID: oceanfishingbobber_none\n ※Name: Fish Hook\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishingbobber_none(ReverseSearch)": {
        "prefix": "p+Fish Hook",
        "body": "\"oceanfishingbobber_none\"",
        "description": " ※prefab ID: oceanfishingbobber_none\n ※Name: Fish Hook\n ※prefab Version: DST-632551 "
    },
    "prefab:beequeenhivegrown(ID Complete)": {
        "prefix": "p+beequeenhivegrown",
        "body": "\"beequeenhivegrown\"",
        "description": " ※prefab ID: beequeenhivegrown\n ※Name: Gigantic Beehive\n ※prefab Version: DST-632551 "
    },
    "prefab:beequeenhivegrown(ReverseSearch)": {
        "prefix": "p+Gigantic Beehive",
        "body": "\"beequeenhivegrown\"",
        "description": " ※prefab ID: beequeenhivegrown\n ※Name: Gigantic Beehive\n ※prefab Version: DST-632551 "
    },
    "prefab:batnose(ID Complete)": {
        "prefix": "p+batnose",
        "body": "\"batnose\"",
        "description": " ※prefab ID: batnose\n ※Name: Naked Nostrils\n ※prefab Version: DST-632551 "
    },
    "prefab:batnose(ReverseSearch)": {
        "prefix": "p+Naked Nostrils",
        "body": "\"batnose\"",
        "description": " ※prefab ID: batnose\n ※Name: Naked Nostrils\n ※prefab Version: DST-632551 "
    },
    "prefab:diviningrodbase(ID Complete)": {
        "prefix": "p+diviningrodbase",
        "body": "\"diviningrodbase\"",
        "description": " ※prefab ID: diviningrodbase\n ※Name: Divining Rod Holder\n ※prefab Version: DST-632551 "
    },
    "prefab:diviningrodbase(ReverseSearch)": {
        "prefix": "p+Divining Rod Holder",
        "body": "\"diviningrodbase\"",
        "description": " ※prefab ID: diviningrodbase\n ※Name: Divining Rod Holder\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishingbobber_ball(ID Complete)": {
        "prefix": "p+oceanfishingbobber_ball",
        "body": "\"oceanfishingbobber_ball\"",
        "description": " ※prefab ID: oceanfishingbobber_ball\n ※Name: Wooden Ball Bobber\n ※Recipe: \n\t+ 1 x: Log/log\n ※Required Tech: \n\t+ LV.1 : Fishing/FISHING\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishingbobber_ball(ReverseSearch)": {
        "prefix": "p+Wooden Ball Bobber",
        "body": "\"oceanfishingbobber_ball\"",
        "description": " ※prefab ID: oceanfishingbobber_ball\n ※Name: Wooden Ball Bobber\n ※Recipe: \n\t+ 1 x: Log/log\n ※Required Tech: \n\t+ LV.1 : Fishing/FISHING\n ※prefab Version: DST-632551 "
    },
    "prefab:horn(ID Complete)": {
        "prefix": "p+horn",
        "body": "\"horn\"",
        "description": " ※prefab ID: horn\n ※Name: Beefalo Horn\n ※prefab Version: DST-632551 "
    },
    "prefab:horn(ReverseSearch)": {
        "prefix": "p+Beefalo Horn",
        "body": "\"horn\"",
        "description": " ※prefab ID: horn\n ※Name: Beefalo Horn\n ※prefab Version: DST-632551 "
    },
    "prefab:pocketwatch_heal(ID Complete)": {
        "prefix": "p+pocketwatch_heal",
        "body": "\"pocketwatch_heal\"",
        "description": " ※prefab ID: pocketwatch_heal\n ※Name: Ageless Watch\n ※Recipe: \n\t+ 1 x: Time Pieces/pocketwatch_parts\n\t+ 2 x: Marble/marble\n\t+ 1 x: Red Gem/redgem\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:pocketwatch_heal(ReverseSearch)": {
        "prefix": "p+Ageless Watch",
        "body": "\"pocketwatch_heal\"",
        "description": " ※prefab ID: pocketwatch_heal\n ※Name: Ageless Watch\n ※Recipe: \n\t+ 1 x: Time Pieces/pocketwatch_parts\n\t+ 2 x: Marble/marble\n\t+ 1 x: Red Gem/redgem\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:blowdart_yellow(ID Complete)": {
        "prefix": "p+blowdart_yellow",
        "body": "\"blowdart_yellow\"",
        "description": " ※prefab ID: blowdart_yellow\n ※Name: Electric Dart\n ※Recipe: \n\t+ 2 x: Cut Reeds/cutreeds\n\t+ 1 x: Gold Nugget/goldnugget\n\t+ 1 x: Saffron Feather/feather_canary\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:blowdart_yellow(ReverseSearch)": {
        "prefix": "p+Electric Dart",
        "body": "\"blowdart_yellow\"",
        "description": " ※prefab ID: blowdart_yellow\n ※Name: Electric Dart\n ※Recipe: \n\t+ 2 x: Cut Reeds/cutreeds\n\t+ 1 x: Gold Nugget/goldnugget\n\t+ 1 x: Saffron Feather/feather_canary\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:archive_centipede_husk(ID Complete)": {
        "prefix": "p+archive_centipede_husk",
        "body": "\"archive_centipede_husk\"",
        "description": " ※prefab ID: archive_centipede_husk\n ※Name: Sentrypede Husk\n ※prefab Version: DST-632551 "
    },
    "prefab:archive_centipede_husk(ReverseSearch)": {
        "prefix": "p+Sentrypede Husk",
        "body": "\"archive_centipede_husk\"",
        "description": " ※prefab ID: archive_centipede_husk\n ※Name: Sentrypede Husk\n ※prefab Version: DST-632551 "
    },
    "prefab:dustmoth(ID Complete)": {
        "prefix": "p+dustmoth",
        "body": "\"dustmoth\"",
        "description": " ※prefab ID: dustmoth\n ※Name: Dust Moth\n ※prefab Version: DST-632551 "
    },
    "prefab:dustmoth(ReverseSearch)": {
        "prefix": "p+Dust Moth",
        "body": "\"dustmoth\"",
        "description": " ※prefab ID: dustmoth\n ※Name: Dust Moth\n ※prefab Version: DST-632551 "
    },
    "prefab:halloweenpotion_health_large(ID Complete)": {
        "prefix": "p+halloweenpotion_health_large",
        "body": "\"halloweenpotion_health_large\"",
        "description": " ※prefab ID: halloweenpotion_health_large\n ※Name: Canteen of Sanguine Mixture\n ※prefab Version: DST-632551 "
    },
    "prefab:halloweenpotion_health_large(ReverseSearch)": {
        "prefix": "p+Canteen of Sanguine Mixture",
        "body": "\"halloweenpotion_health_large\"",
        "description": " ※prefab ID: halloweenpotion_health_large\n ※Name: Canteen of Sanguine Mixture\n ※prefab Version: DST-632551 "
    },
    "prefab:nightmare_timepiece(ID Complete)": {
        "prefix": "p+nightmare_timepiece",
        "body": "\"nightmare_timepiece\"",
        "description": " ※prefab ID: nightmare_timepiece\n ※Name: Thulecite Medallion\n ※Recipe: \n\t+ 2 x: Thulecite/thulecite\n\t+ 2 x: Nightmare Fuel/nightmarefuel\n ※Required Tech: \n\t+ LV.2 : Ancient/ANCIENT\n ※prefab Version: DST-632551 "
    },
    "prefab:nightmare_timepiece(ReverseSearch)": {
        "prefix": "p+Thulecite Medallion",
        "body": "\"nightmare_timepiece\"",
        "description": " ※prefab ID: nightmare_timepiece\n ※Name: Thulecite Medallion\n ※Recipe: \n\t+ 2 x: Thulecite/thulecite\n\t+ 2 x: Nightmare Fuel/nightmarefuel\n ※Required Tech: \n\t+ LV.2 : Ancient/ANCIENT\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_40(ID Complete)": {
        "prefix": "p+trinket_40",
        "body": "\"trinket_40\"",
        "description": " ※prefab ID: trinket_40\n ※Name: Snail Scale\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_40(ReverseSearch)": {
        "prefix": "p+Snail Scale",
        "body": "\"trinket_40\"",
        "description": " ※prefab ID: trinket_40\n ※Name: Snail Scale\n ※prefab Version: DST-632551 "
    },
    "prefab:halloweencandy_5(ID Complete)": {
        "prefix": "p+halloweencandy_5",
        "body": "\"halloweencandy_5\"",
        "description": " ※prefab ID: halloweencandy_5\n ※Name: Catcoon Candy\n ※prefab Version: DST-632551 "
    },
    "prefab:halloweencandy_5(ReverseSearch)": {
        "prefix": "p+Catcoon Candy",
        "body": "\"halloweencandy_5\"",
        "description": " ※prefab ID: halloweencandy_5\n ※Name: Catcoon Candy\n ※prefab Version: DST-632551 "
    },
    "prefab:ghostlyelixir_speed(ID Complete)": {
        "prefix": "p+ghostlyelixir_speed",
        "body": "\"ghostlyelixir_speed\"",
        "description": " ※prefab ID: ghostlyelixir_speed\n ※Name: Vigor Mortis\n ※Recipe: \n\t+ 1 x: Honey/honey\n\t+ 1 x: Mourning Glory/ghostflower\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:ghostlyelixir_speed(ReverseSearch)": {
        "prefix": "p+Vigor Mortis",
        "body": "\"ghostlyelixir_speed\"",
        "description": " ※prefab ID: ghostlyelixir_speed\n ※Name: Vigor Mortis\n ※Recipe: \n\t+ 1 x: Honey/honey\n\t+ 1 x: Mourning Glory/ghostflower\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:turf_fungus_red(ID Complete)": {
        "prefix": "p+turf_fungus_red",
        "body": "\"turf_fungus_red\"",
        "description": " ※prefab ID: turf_fungus_red\n ※Name: Fungal Turf\n ※Recipe: \n\t+ 1 x: Lichen/cutlichen\n\t+ 1 x: Red Spore/spore_medium\n ※Required Tech: \n\t+ LV.2 : Landscaping/TURFCRAFTING\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_fungus_red(ReverseSearch)": {
        "prefix": "p+Fungal Turf",
        "body": "\"turf_fungus_red\"",
        "description": " ※prefab ID: turf_fungus_red\n ※Name: Fungal Turf\n ※Recipe: \n\t+ 1 x: Lichen/cutlichen\n\t+ 1 x: Red Spore/spore_medium\n ※Required Tech: \n\t+ LV.2 : Landscaping/TURFCRAFTING\n ※prefab Version: DST-632551 "
    },
    "prefab:archive_cookpot(ID Complete)": {
        "prefix": "p+archive_cookpot",
        "body": "\"archive_cookpot\"",
        "description": " ※prefab ID: archive_cookpot\n ※Name: Ancient Kiln\n ※prefab Version: DST-632551 "
    },
    "prefab:archive_cookpot(ReverseSearch)": {
        "prefix": "p+Ancient Kiln",
        "body": "\"archive_cookpot\"",
        "description": " ※prefab ID: archive_cookpot\n ※Name: Ancient Kiln\n ※prefab Version: DST-632551 "
    },
    "prefab:oldager_component(ID Complete)": {
        "prefix": "p+oldager_component",
        "body": "\"oldager_component\"",
        "description": " ※prefab ID: oldager_component\n ※Name: the passage of time\n ※prefab Version: DST-632551 "
    },
    "prefab:oldager_component(ReverseSearch)": {
        "prefix": "p+the passage of time",
        "body": "\"oldager_component\"",
        "description": " ※prefab ID: oldager_component\n ※Name: the passage of time\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_medium_7_inv(ID Complete)": {
        "prefix": "p+oceanfish_medium_7_inv",
        "body": "\"oceanfish_medium_7_inv\"",
        "description": " ※prefab ID: oceanfish_medium_7_inv\n ※Name: Golden Koi\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_medium_7_inv(ReverseSearch)": {
        "prefix": "p+Golden Koi",
        "body": "\"oceanfish_medium_7_inv\"",
        "description": " ※prefab ID: oceanfish_medium_7_inv\n ※Name: Golden Koi\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_hornucopia_builder(ID Complete)": {
        "prefix": "p+chesspiece_hornucopia_builder",
        "body": "\"chesspiece_hornucopia_builder\"",
        "description": " ※prefab ID: chesspiece_hornucopia_builder\n ※Name: Carved Hornucopia\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.1 : Sculptures/SCULPTING\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_hornucopia_builder(ReverseSearch)": {
        "prefix": "p+Carved Hornucopia",
        "body": "\"chesspiece_hornucopia_builder\"",
        "description": " ※prefab ID: chesspiece_hornucopia_builder\n ※Name: Carved Hornucopia\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.1 : Sculptures/SCULPTING\n ※prefab Version: DST-632551 "
    },
    "prefab:monkeypillar(ID Complete)": {
        "prefix": "p+monkeypillar",
        "body": "\"monkeypillar\"",
        "description": " ※prefab ID: monkeypillar\n ※Name: Monkey Bar\n ※prefab Version: DST-632551 "
    },
    "prefab:monkeypillar(ReverseSearch)": {
        "prefix": "p+Monkey Bar",
        "body": "\"monkeypillar\"",
        "description": " ※prefab ID: monkeypillar\n ※Name: Monkey Bar\n ※prefab Version: DST-632551 "
    },
    "prefab:shenanigans(ID Complete)": {
        "prefix": "p+shenanigans",
        "body": "\"shenanigans\"",
        "description": " ※prefab ID: shenanigans\n ※Name: Shenanigans\n ※prefab Version: DST-632551 "
    },
    "prefab:shenanigans(ReverseSearch)": {
        "prefix": "p+Shenanigans",
        "body": "\"shenanigans\"",
        "description": " ※prefab ID: shenanigans\n ※Name: Shenanigans\n ※prefab Version: DST-632551 "
    },
    "prefab:eel_cooked(ID Complete)": {
        "prefix": "p+eel_cooked",
        "body": "\"eel_cooked\"",
        "description": " ※prefab ID: eel_cooked\n ※Name: Cooked Eel\n ※prefab Version: DST-632551 "
    },
    "prefab:eel_cooked(ReverseSearch)": {
        "prefix": "p+Cooked Eel",
        "body": "\"eel_cooked\"",
        "description": " ※prefab ID: eel_cooked\n ※Name: Cooked Eel\n ※prefab Version: DST-632551 "
    },
    "prefab:golden_farm_hoe(ID Complete)": {
        "prefix": "p+golden_farm_hoe",
        "body": "\"golden_farm_hoe\"",
        "description": " ※prefab ID: golden_farm_hoe\n ※Name: Splendid Garden Hoe\n ※Recipe: \n\t+ 4 x: Twigs/twigs\n\t+ 2 x: Gold Nugget/goldnugget\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:golden_farm_hoe(ReverseSearch)": {
        "prefix": "p+Splendid Garden Hoe",
        "body": "\"golden_farm_hoe\"",
        "description": " ※prefab ID: golden_farm_hoe\n ※Name: Splendid Garden Hoe\n ※Recipe: \n\t+ 4 x: Twigs/twigs\n\t+ 2 x: Gold Nugget/goldnugget\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:plantregistryhat(ID Complete)": {
        "prefix": "p+plantregistryhat",
        "body": "\"plantregistryhat\"",
        "description": " ※prefab ID: plantregistryhat\n ※Name: Gardeneer Hat\n ※Recipe: \n\t+ 1 x: Bucket-o-poop/fertilizer\n\t+ 3 x: Seeds/seeds\n\t+ 1 x: Electrical Doodad/transistor\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:plantregistryhat(ReverseSearch)": {
        "prefix": "p+Gardeneer Hat",
        "body": "\"plantregistryhat\"",
        "description": " ※prefab ID: plantregistryhat\n ※Name: Gardeneer Hat\n ※Recipe: \n\t+ 1 x: Bucket-o-poop/fertilizer\n\t+ 3 x: Seeds/seeds\n\t+ 1 x: Electrical Doodad/transistor\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:fish(ID Complete)": {
        "prefix": "p+fish",
        "body": "\"fish\"",
        "description": " ※prefab ID: fish\n ※Name: Fish\n ※prefab Version: DST-632551 "
    },
    "prefab:fish(ReverseSearch)": {
        "prefix": "p+Fish",
        "body": "\"fish\"",
        "description": " ※prefab ID: fish\n ※Name: Fish\n ※prefab Version: DST-632551 "
    },
    "prefab:twinofterror1(ID Complete)": {
        "prefix": "p+twinofterror1",
        "body": "\"twinofterror1\"",
        "description": " ※prefab ID: twinofterror1\n ※Name: Retinazor\n ※prefab Version: DST-632551 "
    },
    "prefab:twinofterror1(ReverseSearch)": {
        "prefix": "p+Retinazor",
        "body": "\"twinofterror1\"",
        "description": " ※prefab ID: twinofterror1\n ※Name: Retinazor\n ※prefab Version: DST-632551 "
    },
    "prefab:atrium_light(ID Complete)": {
        "prefix": "p+atrium_light",
        "body": "\"atrium_light\"",
        "description": " ※prefab ID: atrium_light\n ※Name: Ancient Beacon\n ※prefab Version: DST-632551 "
    },
    "prefab:atrium_light(ReverseSearch)": {
        "prefix": "p+Ancient Beacon",
        "body": "\"atrium_light\"",
        "description": " ※prefab ID: atrium_light\n ※Name: Ancient Beacon\n ※prefab Version: DST-632551 "
    },
    "prefab:sharkboi_icespike(ID Complete)": {
        "prefix": "p+sharkboi_icespike",
        "body": "\"sharkboi_icespike\"",
        "description": " ※prefab ID: sharkboi_icespike\n ※Name: Ice\n ※prefab Version: DST-632551 "
    },
    "prefab:sharkboi_icespike(ReverseSearch)": {
        "prefix": "p+Ice",
        "body": "\"sharkboi_icespike\"",
        "description": " ※prefab ID: sharkboi_icespike\n ※Name: Ice\n ※prefab Version: DST-632551 "
    },
    "prefab:tentacle_pillar(ID Complete)": {
        "prefix": "p+tentacle_pillar",
        "body": "\"tentacle_pillar\"",
        "description": " ※prefab ID: tentacle_pillar\n ※Name: Big Tentacle\n ※prefab Version: DST-632551 "
    },
    "prefab:tentacle_pillar(ReverseSearch)": {
        "prefix": "p+Big Tentacle",
        "body": "\"tentacle_pillar\"",
        "description": " ※prefab ID: tentacle_pillar\n ※Name: Big Tentacle\n ※prefab Version: DST-632551 "
    },
    "prefab:record_creepyforest(ID Complete)": {
        "prefix": "p+record_creepyforest",
        "body": "\"record_creepyforest\"",
        "description": " ※prefab ID: record_creepyforest\n ※Name: Creepy Forest\n ※prefab Version: DST-632551 "
    },
    "prefab:record_creepyforest(ReverseSearch)": {
        "prefix": "p+Creepy Forest",
        "body": "\"record_creepyforest\"",
        "description": " ※prefab ID: record_creepyforest\n ※Name: Creepy Forest\n ※prefab Version: DST-632551 "
    },
    "prefab:boat_bumper_kelp(ID Complete)": {
        "prefix": "p+boat_bumper_kelp",
        "body": "\"boat_bumper_kelp\"",
        "description": " ※prefab ID: boat_bumper_kelp\n ※Name: Kelp Bumper\n ※Recipe: \n\t+ 3 x: Kelp Fronds/kelp\n\t+ 3 x: Cut Grass/cutgrass\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:boat_bumper_kelp(ReverseSearch)": {
        "prefix": "p+Kelp Bumper",
        "body": "\"boat_bumper_kelp\"",
        "description": " ※prefab ID: boat_bumper_kelp\n ※Name: Kelp Bumper\n ※Recipe: \n\t+ 3 x: Kelp Fronds/kelp\n\t+ 3 x: Cut Grass/cutgrass\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_040(ID Complete)": {
        "prefix": "p+quagmire_food_040",
        "body": "\"quagmire_food_040\"",
        "description": " ※prefab ID: quagmire_food_040\n ※Name: Poached Fish\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_040(ReverseSearch)": {
        "prefix": "p+Poached Fish",
        "body": "\"quagmire_food_040\"",
        "description": " ※prefab ID: quagmire_food_040\n ※Name: Poached Fish\n ※prefab Version: DST-632551 "
    },
    "prefab:boomerang(ID Complete)": {
        "prefix": "p+boomerang",
        "body": "\"boomerang\"",
        "description": " ※prefab ID: boomerang\n ※Name: Boomerang\n ※Recipe: \n\t+ 1 x: Boards/boards\n\t+ 1 x: Silk/silk\n\t+ 1 x: Charcoal/charcoal\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:boomerang(ReverseSearch)": {
        "prefix": "p+Boomerang",
        "body": "\"boomerang\"",
        "description": " ※prefab ID: boomerang\n ※Name: Boomerang\n ※Recipe: \n\t+ 1 x: Boards/boards\n\t+ 1 x: Silk/silk\n\t+ 1 x: Charcoal/charcoal\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:yotb_beefalo_doll_formal(ID Complete)": {
        "prefix": "p+yotb_beefalo_doll_formal",
        "body": "\"yotb_beefalo_doll_formal\"",
        "description": " ※prefab ID: yotb_beefalo_doll_formal\n ※Name: Formal Beefalo Doll\n ※prefab Version: DST-632551 "
    },
    "prefab:yotb_beefalo_doll_formal(ReverseSearch)": {
        "prefix": "p+Formal Beefalo Doll",
        "body": "\"yotb_beefalo_doll_formal\"",
        "description": " ※prefab ID: yotb_beefalo_doll_formal\n ※Name: Formal Beefalo Doll\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_rubble_cathedral(ID Complete)": {
        "prefix": "p+quagmire_rubble_cathedral",
        "body": "\"quagmire_rubble_cathedral\"",
        "description": " ※prefab ID: quagmire_rubble_cathedral\n ※Name: Dilapidated Cathedral\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_rubble_cathedral(ReverseSearch)": {
        "prefix": "p+Dilapidated Cathedral",
        "body": "\"quagmire_rubble_cathedral\"",
        "description": " ※prefab ID: quagmire_rubble_cathedral\n ※Name: Dilapidated Cathedral\n ※prefab Version: DST-632551 "
    },
    "prefab:beefalo_buddy_name(ID Complete)": {
        "prefix": "p+beefalo_buddy_name",
        "body": "\"beefalo_buddy_name\"",
        "description": " ※prefab ID: beefalo_buddy_name\n ※Name: {buddy}'s Beefalo\n ※prefab Version: DST-632551 "
    },
    "prefab:beefalo_buddy_name(ReverseSearch)": {
        "prefix": "p+{buddy}'s Beefalo",
        "body": "\"beefalo_buddy_name\"",
        "description": " ※prefab ID: beefalo_buddy_name\n ※Name: {buddy}'s Beefalo\n ※prefab Version: DST-632551 "
    },
    "prefab:stalagmite_tall(ID Complete)": {
        "prefix": "p+stalagmite_tall",
        "body": "\"stalagmite_tall\"",
        "description": " ※prefab ID: stalagmite_tall\n ※Name: Stalagmite\n ※prefab Version: DST-632551 "
    },
    "prefab:stalagmite_tall(ReverseSearch)": {
        "prefix": "p+Stalagmite",
        "body": "\"stalagmite_tall\"",
        "description": " ※prefab ID: stalagmite_tall\n ※Name: Stalagmite\n ※prefab Version: DST-632551 "
    },
    "prefab:farm_plant_durian(ID Complete)": {
        "prefix": "p+farm_plant_durian",
        "body": "\"farm_plant_durian\"",
        "description": " ※prefab ID: farm_plant_durian\n ※Name: Durian Vine\n ※prefab Version: DST-632551 "
    },
    "prefab:farm_plant_durian(ReverseSearch)": {
        "prefix": "p+Durian Vine",
        "body": "\"farm_plant_durian\"",
        "description": " ※prefab ID: farm_plant_durian\n ※Name: Durian Vine\n ※prefab Version: DST-632551 "
    },
    "prefab:atrium_statue(ID Complete)": {
        "prefix": "p+atrium_statue",
        "body": "\"atrium_statue\"",
        "description": " ※prefab ID: atrium_statue\n ※Name: Ancient Statue\n ※prefab Version: DST-632551 "
    },
    "prefab:atrium_statue(ReverseSearch)": {
        "prefix": "p+Ancient Statue",
        "body": "\"atrium_statue\"",
        "description": " ※prefab ID: atrium_statue\n ※Name: Ancient Statue\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_medium_1_inv(ID Complete)": {
        "prefix": "p+oceanfish_medium_1_inv",
        "body": "\"oceanfish_medium_1_inv\"",
        "description": " ※prefab ID: oceanfish_medium_1_inv\n ※Name: Mudfish\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_medium_1_inv(ReverseSearch)": {
        "prefix": "p+Mudfish",
        "body": "\"oceanfish_medium_1_inv\"",
        "description": " ※prefab ID: oceanfish_medium_1_inv\n ※Name: Mudfish\n ※prefab Version: DST-632551 "
    },
    "prefab:boaron(ID Complete)": {
        "prefix": "p+boaron",
        "body": "\"boaron\"",
        "description": " ※prefab ID: boaron\n ※Name: Pit Pig\n ※prefab Version: DST-632551 "
    },
    "prefab:boaron(ReverseSearch)": {
        "prefix": "p+Pit Pig",
        "body": "\"boaron\"",
        "description": " ※prefab ID: boaron\n ※Name: Pit Pig\n ※prefab Version: DST-632551 "
    },
    "prefab:gift(ID Complete)": {
        "prefix": "p+gift",
        "body": "\"gift\"",
        "description": " ※prefab ID: gift\n ※Name: Gift\n ※prefab Version: DST-632551 "
    },
    "prefab:gift(ReverseSearch)": {
        "prefix": "p+Gift",
        "body": "\"gift\"",
        "description": " ※prefab ID: gift\n ※Name: Gift\n ※prefab Version: DST-632551 "
    },
    "prefab:merm_armory_upgraded(ID Complete)": {
        "prefix": "p+merm_armory_upgraded",
        "body": "\"merm_armory_upgraded\"",
        "description": " ※prefab ID: merm_armory_upgraded\n ※Name: Superior Armermry\n ※Recipe: \n\t+ 4 x: Boards/boards\n\t+ 1 x: Tentacle Spots/tentaclespots\n\t+ 5 x: Log/log\n\t+ 5 x: Cut Grass/cutgrass\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:merm_armory_upgraded(ReverseSearch)": {
        "prefix": "p+Superior Armermry",
        "body": "\"merm_armory_upgraded\"",
        "description": " ※prefab ID: merm_armory_upgraded\n ※Name: Superior Armermry\n ※Recipe: \n\t+ 4 x: Boards/boards\n\t+ 1 x: Tentacle Spots/tentaclespots\n\t+ 5 x: Log/log\n\t+ 5 x: Cut Grass/cutgrass\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:alterguardian_contained(ID Complete)": {
        "prefix": "p+alterguardian_contained",
        "body": "\"alterguardian_contained\"",
        "description": " ※prefab ID: alterguardian_contained\n ※Name: Lunar Essence Extractor\n ※prefab Version: DST-632551 "
    },
    "prefab:alterguardian_contained(ReverseSearch)": {
        "prefix": "p+Lunar Essence Extractor",
        "body": "\"alterguardian_contained\"",
        "description": " ※prefab ID: alterguardian_contained\n ※Name: Lunar Essence Extractor\n ※prefab Version: DST-632551 "
    },
    "prefab:boarrior(ID Complete)": {
        "prefix": "p+boarrior",
        "body": "\"boarrior\"",
        "description": " ※prefab ID: boarrior\n ※Name: Grand Forge Boarrior\n ※prefab Version: DST-632551 "
    },
    "prefab:boarrior(ReverseSearch)": {
        "prefix": "p+Grand Forge Boarrior",
        "body": "\"boarrior\"",
        "description": " ※prefab ID: boarrior\n ※Name: Grand Forge Boarrior\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_seedpacket_mix(ID Complete)": {
        "prefix": "p+quagmire_seedpacket_mix",
        "body": "\"quagmire_seedpacket_mix\"",
        "description": " ※prefab ID: quagmire_seedpacket_mix\n ※Name: Packet of Mixed Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_seedpacket_mix(ReverseSearch)": {
        "prefix": "p+Packet of Mixed Seeds",
        "body": "\"quagmire_seedpacket_mix\"",
        "description": " ※prefab ID: quagmire_seedpacket_mix\n ※Name: Packet of Mixed Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:alterguardian_phase2spike(ID Complete)": {
        "prefix": "p+alterguardian_phase2spike",
        "body": "\"alterguardian_phase2spike\"",
        "description": " ※prefab ID: alterguardian_phase2spike\n ※Name: Moonglass Spike\n ※prefab Version: DST-632551 "
    },
    "prefab:alterguardian_phase2spike(ReverseSearch)": {
        "prefix": "p+Moonglass Spike",
        "body": "\"alterguardian_phase2spike\"",
        "description": " ※prefab ID: alterguardian_phase2spike\n ※Name: Moonglass Spike\n ※prefab Version: DST-632551 "
    },
    "prefab:boat_bumper_yotd(ID Complete)": {
        "prefix": "p+boat_bumper_yotd",
        "body": "\"boat_bumper_yotd\"",
        "description": " ※prefab ID: boat_bumper_yotd\n ※Name: Fanged Bumper\n ※Recipe: \n\t+ 1 x: Rope/rope\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:boat_bumper_yotd(ReverseSearch)": {
        "prefix": "p+Fanged Bumper",
        "body": "\"boat_bumper_yotd\"",
        "description": " ※prefab ID: boat_bumper_yotd\n ※Name: Fanged Bumper\n ※Recipe: \n\t+ 1 x: Rope/rope\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:yotb_stage_item(ID Complete)": {
        "prefix": "p+yotb_stage_item",
        "body": "\"yotb_stage_item\"",
        "description": " ※prefab ID: yotb_stage_item\n ※Name: Judge's Booth\n ※Recipe: \n\t+ 4 x: Boards/boards\n\t+ 2 x: Beefalo Wool/beefalowool\n\t+ 2 x: Gold Nugget/goldnugget\n ※Required Tech: \n\t+ LV.3 : /BEEFOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:yotb_stage_item(ReverseSearch)": {
        "prefix": "p+Judge's Booth",
        "body": "\"yotb_stage_item\"",
        "description": " ※prefab ID: yotb_stage_item\n ※Name: Judge's Booth\n ※Recipe: \n\t+ 4 x: Boards/boards\n\t+ 2 x: Beefalo Wool/beefalowool\n\t+ 2 x: Gold Nugget/goldnugget\n ※Required Tech: \n\t+ LV.3 : /BEEFOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:little_walrus(ID Complete)": {
        "prefix": "p+little_walrus",
        "body": "\"little_walrus\"",
        "description": " ※prefab ID: little_walrus\n ※Name: Wee MacTusk\n ※prefab Version: DST-632551 "
    },
    "prefab:little_walrus(ReverseSearch)": {
        "prefix": "p+Wee MacTusk",
        "body": "\"little_walrus\"",
        "description": " ※prefab ID: little_walrus\n ※Name: Wee MacTusk\n ※prefab Version: DST-632551 "
    },
    "prefab:bird_mutant(ID Complete)": {
        "prefix": "p+bird_mutant",
        "body": "\"bird_mutant\"",
        "description": " ※prefab ID: bird_mutant\n ※Name: Moonblind Crow\n ※prefab Version: DST-632551 "
    },
    "prefab:bird_mutant(ReverseSearch)": {
        "prefix": "p+Moonblind Crow",
        "body": "\"bird_mutant\"",
        "description": " ※prefab ID: bird_mutant\n ※Name: Moonblind Crow\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_warg_mutated(ID Complete)": {
        "prefix": "p+chesspiece_warg_mutated",
        "body": "\"chesspiece_warg_mutated\"",
        "description": " ※prefab ID: chesspiece_warg_mutated\n ※Name: Possessed Varg Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_warg_mutated(ReverseSearch)": {
        "prefix": "p+Possessed Varg Figure",
        "body": "\"chesspiece_warg_mutated\"",
        "description": " ※prefab ID: chesspiece_warg_mutated\n ※Name: Possessed Varg Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:halloween_experiment_volatile(ID Complete)": {
        "prefix": "p+halloween_experiment_volatile",
        "body": "\"halloween_experiment_volatile\"",
        "description": " ※prefab ID: halloween_experiment_volatile\n ※Name: Sulfuric Experiment\n ※Recipe: \n\t+ 1 x: Rotten Egg/rottenegg\n\t+ 1 x: Charcoal/charcoal\n ※Required Tech: \n\t+ LV.1 : Mad Science/MADSCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:halloween_experiment_volatile(ReverseSearch)": {
        "prefix": "p+Sulfuric Experiment",
        "body": "\"halloween_experiment_volatile\"",
        "description": " ※prefab ID: halloween_experiment_volatile\n ※Name: Sulfuric Experiment\n ※Recipe: \n\t+ 1 x: Rotten Egg/rottenegg\n\t+ 1 x: Charcoal/charcoal\n ※Required Tech: \n\t+ LV.1 : Mad Science/MADSCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:watermelon_seeds(ID Complete)": {
        "prefix": "p+watermelon_seeds",
        "body": "\"watermelon_seeds\"",
        "description": " ※prefab ID: watermelon_seeds\n ※Name: Square Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:watermelon_seeds(ReverseSearch)": {
        "prefix": "p+Square Seeds",
        "body": "\"watermelon_seeds\"",
        "description": " ※prefab ID: watermelon_seeds\n ※Name: Square Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:resurrectionstone(ID Complete)": {
        "prefix": "p+resurrectionstone",
        "body": "\"resurrectionstone\"",
        "description": " ※prefab ID: resurrectionstone\n ※Name: Touch Stone\n ※prefab Version: DST-632551 "
    },
    "prefab:resurrectionstone(ReverseSearch)": {
        "prefix": "p+Touch Stone",
        "body": "\"resurrectionstone\"",
        "description": " ※prefab ID: resurrectionstone\n ※Name: Touch Stone\n ※prefab Version: DST-632551 "
    },
    "prefab:fruitdragon(ID Complete)": {
        "prefix": "p+fruitdragon",
        "body": "\"fruitdragon\"",
        "description": " ※prefab ID: fruitdragon\n ※Name: Saladmander\n ※prefab Version: DST-632551 "
    },
    "prefab:fruitdragon(ReverseSearch)": {
        "prefix": "p+Saladmander",
        "body": "\"fruitdragon\"",
        "description": " ※prefab ID: fruitdragon\n ※Name: Saladmander\n ※prefab Version: DST-632551 "
    },
    "prefab:wintercooking_lutefisk(ID Complete)": {
        "prefix": "p+wintercooking_lutefisk",
        "body": "\"wintercooking_lutefisk\"",
        "description": " ※prefab ID: wintercooking_lutefisk\n ※Name: Lutefisk\n ※Recipe: \n\t+ 1 x: Holiday Cheer/wintersfeastfuel\n\t+ 1 x: Spoiled Fish/spoiled_fish\n\t+ 1 x: Driftwood Piece/driftwood_log\n ※Required Tech: \n\t+ LV.1 : Feast/WINTERSFEASTCOOKING\n ※prefab Version: DST-632551 "
    },
    "prefab:wintercooking_lutefisk(ReverseSearch)": {
        "prefix": "p+Lutefisk",
        "body": "\"wintercooking_lutefisk\"",
        "description": " ※prefab ID: wintercooking_lutefisk\n ※Name: Lutefisk\n ※Recipe: \n\t+ 1 x: Holiday Cheer/wintersfeastfuel\n\t+ 1 x: Spoiled Fish/spoiled_fish\n\t+ 1 x: Driftwood Piece/driftwood_log\n ※Required Tech: \n\t+ LV.1 : Feast/WINTERSFEASTCOOKING\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_27(ID Complete)": {
        "prefix": "p+trinket_27",
        "body": "\"trinket_27\"",
        "description": " ※prefab ID: trinket_27\n ※Name: Wire Hanger\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_27(ReverseSearch)": {
        "prefix": "p+Wire Hanger",
        "body": "\"trinket_27\"",
        "description": " ※prefab ID: trinket_27\n ※Name: Wire Hanger\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_ruinsbrick_glow(ID Complete)": {
        "prefix": "p+turf_ruinsbrick_glow",
        "body": "\"turf_ruinsbrick_glow\"",
        "description": " ※prefab ID: turf_ruinsbrick_glow\n ※Name: Imitation Ancient Flooring\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_ruinsbrick_glow(ReverseSearch)": {
        "prefix": "p+Imitation Ancient Flooring",
        "body": "\"turf_ruinsbrick_glow\"",
        "description": " ※prefab ID: turf_ruinsbrick_glow\n ※Name: Imitation Ancient Flooring\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:winona_teleport_pad_item(ID Complete)": {
        "prefix": "p+winona_teleport_pad_item",
        "body": "\"winona_teleport_pad_item\"",
        "description": " ※prefab ID: winona_teleport_pad_item\n ※Name: Teletransport Station\n ※Recipe: \n\t+ 6 x: Trusty Tape/sewing_tape\n\t+ 6 x: Electrical Doodad/transistor\n\t+ 3 x: Boards/boards\n\t+ 1 x: Gizmo/winona_machineparts_2\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:winona_teleport_pad_item(ReverseSearch)": {
        "prefix": "p+Teletransport Station",
        "body": "\"winona_teleport_pad_item\"",
        "description": " ※prefab ID: winona_teleport_pad_item\n ※Name: Teletransport Station\n ※Recipe: \n\t+ 6 x: Trusty Tape/sewing_tape\n\t+ 6 x: Electrical Doodad/transistor\n\t+ 3 x: Boards/boards\n\t+ 1 x: Gizmo/winona_machineparts_2\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:wagstaff_tool_1_layman(ID Complete)": {
        "prefix": "p+wagstaff_tool_1_layman",
        "body": "\"wagstaff_tool_1_layman\"",
        "description": " ※prefab ID: wagstaff_tool_1_layman\n ※Name: Odd Tool\n ※prefab Version: DST-632551 "
    },
    "prefab:wagstaff_tool_1_layman(ReverseSearch)": {
        "prefix": "p+Odd Tool",
        "body": "\"wagstaff_tool_1_layman\"",
        "description": " ※prefab ID: wagstaff_tool_1_layman\n ※Name: Odd Tool\n ※prefab Version: DST-632551 "
    },
    "prefab:seacocoon(ID Complete)": {
        "prefix": "p+seacocoon",
        "body": "\"seacocoon\"",
        "description": " ※prefab ID: seacocoon\n ※Name: Sea Cocoon\n ※prefab Version: DST-632551 "
    },
    "prefab:seacocoon(ReverseSearch)": {
        "prefix": "p+Sea Cocoon",
        "body": "\"seacocoon\"",
        "description": " ※prefab ID: seacocoon\n ※Name: Sea Cocoon\n ※prefab Version: DST-632551 "
    },
    "prefab:lightflier(ID Complete)": {
        "prefix": "p+lightflier",
        "body": "\"lightflier\"",
        "description": " ※prefab ID: lightflier\n ※Name: Bulbous Lightbug\n ※prefab Version: DST-632551 "
    },
    "prefab:lightflier(ReverseSearch)": {
        "prefix": "p+Bulbous Lightbug",
        "body": "\"lightflier\"",
        "description": " ※prefab ID: lightflier\n ※Name: Bulbous Lightbug\n ※prefab Version: DST-632551 "
    },
    "prefab:moonstorm_glass_defused(ID Complete)": {
        "prefix": "p+moonstorm_glass_defused",
        "body": "\"moonstorm_glass_defused\"",
        "description": " ※prefab ID: moonstorm_glass_defused\n ※Name: Glassy Rock\n ※prefab Version: DST-632551 "
    },
    "prefab:moonstorm_glass_defused(ReverseSearch)": {
        "prefix": "p+Glassy Rock",
        "body": "\"moonstorm_glass_defused\"",
        "description": " ※prefab ID: moonstorm_glass_defused\n ※Name: Glassy Rock\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_beefalo(ID Complete)": {
        "prefix": "p+quagmire_beefalo",
        "body": "\"quagmire_beefalo\"",
        "description": " ※prefab ID: quagmire_beefalo\n ※Name: Old Beefalo\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_beefalo(ReverseSearch)": {
        "prefix": "p+Old Beefalo",
        "body": "\"quagmire_beefalo\"",
        "description": " ※prefab ID: quagmire_beefalo\n ※Name: Old Beefalo\n ※prefab Version: DST-632551 "
    },
    "prefab:book_birds(ID Complete)": {
        "prefix": "p+book_birds",
        "body": "\"book_birds\"",
        "description": " ※prefab ID: book_birds\n ※Name: Birds of the World\n ※Recipe: \n\t+ 2 x: Papyrus/papyrus\n\t+ 2 x: Egg/bird_egg\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:book_birds(ReverseSearch)": {
        "prefix": "p+Birds of the World",
        "body": "\"book_birds\"",
        "description": " ※prefab ID: book_birds\n ※Name: Birds of the World\n ※Recipe: \n\t+ 2 x: Papyrus/papyrus\n\t+ 2 x: Egg/bird_egg\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:moonstorm_static_item(ID Complete)": {
        "prefix": "p+moonstorm_static_item",
        "body": "\"moonstorm_static_item\"",
        "description": " ※prefab ID: moonstorm_static_item\n ※Name: Restrained Static\n ※prefab Version: DST-632551 "
    },
    "prefab:moonstorm_static_item(ReverseSearch)": {
        "prefix": "p+Restrained Static",
        "body": "\"moonstorm_static_item\"",
        "description": " ※prefab ID: moonstorm_static_item\n ※Name: Restrained Static\n ※prefab Version: DST-632551 "
    },
    "prefab:moonstorm_goggleshat(ID Complete)": {
        "prefix": "p+moonstorm_goggleshat",
        "body": "\"moonstorm_goggleshat\"",
        "description": " ※prefab ID: moonstorm_goggleshat\n ※Name: Astroggles\n ※Recipe: \n\t+ 2 x: Moon Shard/moonglass\n\t+ 1 x: Potato/potato\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:moonstorm_goggleshat(ReverseSearch)": {
        "prefix": "p+Astroggles",
        "body": "\"moonstorm_goggleshat\"",
        "description": " ※prefab ID: moonstorm_goggleshat\n ※Name: Astroggles\n ※Recipe: \n\t+ 2 x: Moon Shard/moonglass\n\t+ 1 x: Potato/potato\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_pot_hanger_item(ID Complete)": {
        "prefix": "p+quagmire_pot_hanger_item",
        "body": "\"quagmire_pot_hanger_item\"",
        "description": " ※prefab ID: quagmire_pot_hanger_item\n ※Name: Pot Hanger\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_pot_hanger_item(ReverseSearch)": {
        "prefix": "p+Pot Hanger",
        "body": "\"quagmire_pot_hanger_item\"",
        "description": " ※prefab ID: quagmire_pot_hanger_item\n ※Name: Pot Hanger\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_beefalo_sketch(ID Complete)": {
        "prefix": "p+chesspiece_beefalo_sketch",
        "body": "\"chesspiece_beefalo_sketch\"",
        "description": " ※prefab ID: chesspiece_beefalo_sketch\n ※Name: Beefalo Figure Sketch\n ※Recipe: \n\t+ 8 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /BEEFOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_beefalo_sketch(ReverseSearch)": {
        "prefix": "p+Beefalo Figure Sketch",
        "body": "\"chesspiece_beefalo_sketch\"",
        "description": " ※prefab ID: chesspiece_beefalo_sketch\n ※Name: Beefalo Figure Sketch\n ※Recipe: \n\t+ 8 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /BEEFOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:moon_device(ID Complete)": {
        "prefix": "p+moon_device",
        "body": "\"moon_device\"",
        "description": " ※prefab ID: moon_device\n ※Name: Lunar Siphonator\n ※prefab Version: DST-632551 "
    },
    "prefab:moon_device(ReverseSearch)": {
        "prefix": "p+Lunar Siphonator",
        "body": "\"moon_device\"",
        "description": " ※prefab ID: moon_device\n ※Name: Lunar Siphonator\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_sharkboi_builder(ID Complete)": {
        "prefix": "p+chesspiece_sharkboi_builder",
        "body": "\"chesspiece_sharkboi_builder\"",
        "description": " ※prefab ID: chesspiece_sharkboi_builder\n ※Name: Frostjaw Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_sharkboi_builder(ReverseSearch)": {
        "prefix": "p+Frostjaw Figure",
        "body": "\"chesspiece_sharkboi_builder\"",
        "description": " ※prefab ID: chesspiece_sharkboi_builder\n ※Name: Frostjaw Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_battlestandard(ID Complete)": {
        "prefix": "p+lavaarena_battlestandard",
        "body": "\"lavaarena_battlestandard\"",
        "description": " ※prefab ID: lavaarena_battlestandard\n ※Name: Battle Standard\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_battlestandard(ReverseSearch)": {
        "prefix": "p+Battle Standard",
        "body": "\"lavaarena_battlestandard\"",
        "description": " ※prefab ID: lavaarena_battlestandard\n ※Name: Battle Standard\n ※prefab Version: DST-632551 "
    },
    "prefab:winter_ornamentpearl(ID Complete)": {
        "prefix": "p+winter_ornamentpearl",
        "body": "\"winter_ornamentpearl\"",
        "description": " ※prefab ID: winter_ornamentpearl\n ※Name: Sentimental Adornment\n ※prefab Version: DST-632551 "
    },
    "prefab:winter_ornamentpearl(ReverseSearch)": {
        "prefix": "p+Sentimental Adornment",
        "body": "\"winter_ornamentpearl\"",
        "description": " ※prefab ID: winter_ornamentpearl\n ※Name: Sentimental Adornment\n ※prefab Version: DST-632551 "
    },
    "prefab:watertree_root(ID Complete)": {
        "prefix": "p+watertree_root",
        "body": "\"watertree_root\"",
        "description": " ※prefab ID: watertree_root\n ※Name: Great Tree Root\n ※prefab Version: DST-632551 "
    },
    "prefab:watertree_root(ReverseSearch)": {
        "prefix": "p+Great Tree Root",
        "body": "\"watertree_root\"",
        "description": " ※prefab ID: watertree_root\n ※Name: Great Tree Root\n ※prefab Version: DST-632551 "
    },
    "prefab:moon_altar_glass(ID Complete)": {
        "prefix": "p+moon_altar_glass",
        "body": "\"moon_altar_glass\"",
        "description": " ※prefab ID: moon_altar_glass\n ※Name: Celestial Altar Base\n ※prefab Version: DST-632551 "
    },
    "prefab:moon_altar_glass(ReverseSearch)": {
        "prefix": "p+Celestial Altar Base",
        "body": "\"moon_altar_glass\"",
        "description": " ※prefab ID: moon_altar_glass\n ※Name: Celestial Altar Base\n ※prefab Version: DST-632551 "
    },
    "prefab:resurrectionstatue(ID Complete)": {
        "prefix": "p+resurrectionstatue",
        "body": "\"resurrectionstatue\"",
        "description": " ※prefab ID: resurrectionstatue\n ※Name: Meat Effigy\n ※Recipe: \n\t+ 4 x: Boards/boards\n\t+ 4 x: Beard Hair/beardhair\n ※Required Tech: \n\t+ LV.2 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:resurrectionstatue(ReverseSearch)": {
        "prefix": "p+Meat Effigy",
        "body": "\"resurrectionstatue\"",
        "description": " ※prefab ID: resurrectionstatue\n ※Name: Meat Effigy\n ※Recipe: \n\t+ 4 x: Boards/boards\n\t+ 4 x: Beard Hair/beardhair\n ※Required Tech: \n\t+ LV.2 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:mushroombomb_dark(ID Complete)": {
        "prefix": "p+mushroombomb_dark",
        "body": "\"mushroombomb_dark\"",
        "description": " ※prefab ID: mushroombomb_dark\n ※Name: Misery Boomshroom\n ※prefab Version: DST-632551 "
    },
    "prefab:mushroombomb_dark(ReverseSearch)": {
        "prefix": "p+Misery Boomshroom",
        "body": "\"mushroombomb_dark\"",
        "description": " ※prefab ID: mushroombomb_dark\n ※Name: Misery Boomshroom\n ※prefab Version: DST-632551 "
    },
    "prefab:lunarthrall_plant_vine_end(ID Complete)": {
        "prefix": "p+lunarthrall_plant_vine_end",
        "body": "\"lunarthrall_plant_vine_end\"",
        "description": " ※prefab ID: lunarthrall_plant_vine_end\n ※Name: Tunneling Vine\n ※prefab Version: DST-632551 "
    },
    "prefab:lunarthrall_plant_vine_end(ReverseSearch)": {
        "prefix": "p+Tunneling Vine",
        "body": "\"lunarthrall_plant_vine_end\"",
        "description": " ※prefab ID: lunarthrall_plant_vine_end\n ※Name: Tunneling Vine\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanvine_cocoon(ID Complete)": {
        "prefix": "p+oceanvine_cocoon",
        "body": "\"oceanvine_cocoon\"",
        "description": " ※prefab ID: oceanvine_cocoon\n ※Name: Sea Strider Nest\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanvine_cocoon(ReverseSearch)": {
        "prefix": "p+Sea Strider Nest",
        "body": "\"oceanvine_cocoon\"",
        "description": " ※prefab ID: oceanvine_cocoon\n ※Name: Sea Strider Nest\n ※prefab Version: DST-632551 "
    },
    "prefab:moon_altar_rock_glass(ID Complete)": {
        "prefix": "p+moon_altar_rock_glass",
        "body": "\"moon_altar_rock_glass\"",
        "description": " ※prefab ID: moon_altar_rock_glass\n ※Name: Inviting Formation\n ※prefab Version: DST-632551 "
    },
    "prefab:moon_altar_rock_glass(ReverseSearch)": {
        "prefix": "p+Inviting Formation",
        "body": "\"moon_altar_rock_glass\"",
        "description": " ※prefab ID: moon_altar_rock_glass\n ※Name: Inviting Formation\n ※prefab Version: DST-632551 "
    },
    "prefab:healingstaff(ID Complete)": {
        "prefix": "p+healingstaff",
        "body": "\"healingstaff\"",
        "description": " ※prefab ID: healingstaff\n ※Name: Living Staff\n ※prefab Version: DST-632551 "
    },
    "prefab:healingstaff(ReverseSearch)": {
        "prefix": "p+Living Staff",
        "body": "\"healingstaff\"",
        "description": " ※prefab ID: healingstaff\n ※Name: Living Staff\n ※prefab Version: DST-632551 "
    },
    "prefab:spiderqueen(ID Complete)": {
        "prefix": "p+spiderqueen",
        "body": "\"spiderqueen\"",
        "description": " ※prefab ID: spiderqueen\n ※Name: Spider Queen\n ※prefab Version: DST-632551 "
    },
    "prefab:spiderqueen(ReverseSearch)": {
        "prefix": "p+Spider Queen",
        "body": "\"spiderqueen\"",
        "description": " ※prefab ID: spiderqueen\n ※Name: Spider Queen\n ※prefab Version: DST-632551 "
    },
    "prefab:wx78module_cold(ID Complete)": {
        "prefix": "p+wx78module_cold",
        "body": "\"wx78module_cold\"",
        "description": " ※prefab ID: wx78module_cold\n ※Name: Refrigerant Circuit\n ※Recipe: \n\t+ 4 x: Bio Data/scandata\n\t+ 1 x: Blue Gem/bluegem\n ※Required Tech: \n\t+ LV.1 : Circuitry/ROBOTMODULECRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:wx78module_cold(ReverseSearch)": {
        "prefix": "p+Refrigerant Circuit",
        "body": "\"wx78module_cold\"",
        "description": " ※prefab ID: wx78module_cold\n ※Name: Refrigerant Circuit\n ※Recipe: \n\t+ 4 x: Bio Data/scandata\n\t+ 1 x: Blue Gem/bluegem\n ※Required Tech: \n\t+ LV.1 : Circuitry/ROBOTMODULECRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:bigshadowtentacle(ID Complete)": {
        "prefix": "p+bigshadowtentacle",
        "body": "\"bigshadowtentacle\"",
        "description": " ※prefab ID: bigshadowtentacle\n ※Name: Guardian Shadow Tentacle\n ※prefab Version: DST-632551 "
    },
    "prefab:bigshadowtentacle(ReverseSearch)": {
        "prefix": "p+Guardian Shadow Tentacle",
        "body": "\"bigshadowtentacle\"",
        "description": " ※prefab ID: bigshadowtentacle\n ※Name: Guardian Shadow Tentacle\n ※prefab Version: DST-632551 "
    },
    "prefab:berries_cooked(ID Complete)": {
        "prefix": "p+berries_cooked",
        "body": "\"berries_cooked\"",
        "description": " ※prefab ID: berries_cooked\n ※Name: Roasted Berries\n ※prefab Version: DST-632551 "
    },
    "prefab:berries_cooked(ReverseSearch)": {
        "prefix": "p+Roasted Berries",
        "body": "\"berries_cooked\"",
        "description": " ※prefab ID: berries_cooked\n ※Name: Roasted Berries\n ※prefab Version: DST-632551 "
    },
    "prefab:fish_cooked(ID Complete)": {
        "prefix": "p+fish_cooked",
        "body": "\"fish_cooked\"",
        "description": " ※prefab ID: fish_cooked\n ※Name: Cooked Fish\n ※prefab Version: DST-632551 "
    },
    "prefab:fish_cooked(ReverseSearch)": {
        "prefix": "p+Cooked Fish",
        "body": "\"fish_cooked\"",
        "description": " ※prefab ID: fish_cooked\n ※Name: Cooked Fish\n ※prefab Version: DST-632551 "
    },
    "prefab:frozenbananadaiquiri(ID Complete)": {
        "prefix": "p+frozenbananadaiquiri",
        "body": "\"frozenbananadaiquiri\"",
        "description": " ※prefab ID: frozenbananadaiquiri\n ※Name: Frozen Banana Daiquiri\n ※prefab Version: DST-632551 "
    },
    "prefab:frozenbananadaiquiri(ReverseSearch)": {
        "prefix": "p+Frozen Banana Daiquiri",
        "body": "\"frozenbananadaiquiri\"",
        "description": " ※prefab ID: frozenbananadaiquiri\n ※Name: Frozen Banana Daiquiri\n ※prefab Version: DST-632551 "
    },
    "prefab:iceberg_melted(ID Complete)": {
        "prefix": "p+iceberg_melted",
        "body": "\"iceberg_melted\"",
        "description": " ※prefab ID: iceberg_melted\n ※Name: Melted Iceberg\n ※prefab Version: DST-632551 "
    },
    "prefab:iceberg_melted(ReverseSearch)": {
        "prefix": "p+Melted Iceberg",
        "body": "\"iceberg_melted\"",
        "description": " ※prefab ID: iceberg_melted\n ※Name: Melted Iceberg\n ※prefab Version: DST-632551 "
    },
    "prefab:terrariumchest(ID Complete)": {
        "prefix": "p+terrariumchest",
        "body": "\"terrariumchest\"",
        "description": " ※prefab ID: terrariumchest\n ※Name: Conspicuous Chest\n ※Recipe: \n\t+ 3 x: Boards/boards\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:terrariumchest(ReverseSearch)": {
        "prefix": "p+Conspicuous Chest",
        "body": "\"terrariumchest\"",
        "description": " ※prefab ID: terrariumchest\n ※Name: Conspicuous Chest\n ※Recipe: \n\t+ 3 x: Boards/boards\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:critter_eyeofterror_builder(ID Complete)": {
        "prefix": "p+critter_eyeofterror_builder",
        "body": "\"critter_eyeofterror_builder\"",
        "description": " ※prefab ID: critter_eyeofterror_builder\n ※Name: Friendly Peeper\n ※Recipe: \n\t+ 1 x: Milky Whites/milkywhites\n\t+ 1 x: Bacon and Eggs/baconeggs\n ※Required Tech: \n\t+ LV.1 : Critters/ORPHANAGE\n ※prefab Version: DST-632551 "
    },
    "prefab:critter_eyeofterror_builder(ReverseSearch)": {
        "prefix": "p+Friendly Peeper",
        "body": "\"critter_eyeofterror_builder\"",
        "description": " ※prefab ID: critter_eyeofterror_builder\n ※Name: Friendly Peeper\n ※Recipe: \n\t+ 1 x: Milky Whites/milkywhites\n\t+ 1 x: Bacon and Eggs/baconeggs\n ※Required Tech: \n\t+ LV.1 : Critters/ORPHANAGE\n ※prefab Version: DST-632551 "
    },
    "prefab:pigking(ID Complete)": {
        "prefix": "p+pigking",
        "body": "\"pigking\"",
        "description": " ※prefab ID: pigking\n ※Name: Pig King\n ※prefab Version: DST-632551 "
    },
    "prefab:pigking(ReverseSearch)": {
        "prefix": "p+Pig King",
        "body": "\"pigking\"",
        "description": " ※prefab ID: pigking\n ※Name: Pig King\n ※prefab Version: DST-632551 "
    },
    "prefab:cotl_trinket(ID Complete)": {
        "prefix": "p+cotl_trinket",
        "body": "\"cotl_trinket\"",
        "description": " ※prefab ID: cotl_trinket\n ※Name: Red Crown\n ※prefab Version: DST-632551 "
    },
    "prefab:cotl_trinket(ReverseSearch)": {
        "prefix": "p+Red Crown",
        "body": "\"cotl_trinket\"",
        "description": " ※prefab ID: cotl_trinket\n ※Name: Red Crown\n ※prefab Version: DST-632551 "
    },
    "prefab:slingshotammo_poop(ID Complete)": {
        "prefix": "p+slingshotammo_poop",
        "body": "\"slingshotammo_poop\"",
        "description": " ※prefab ID: slingshotammo_poop\n ※Name: Poop Pellets\n ※Recipe: \n\t+ 1 x: Manure/poop\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:slingshotammo_poop(ReverseSearch)": {
        "prefix": "p+Poop Pellets",
        "body": "\"slingshotammo_poop\"",
        "description": " ※prefab ID: slingshotammo_poop\n ※Name: Poop Pellets\n ※Recipe: \n\t+ 1 x: Manure/poop\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:dumbbell_marble(ID Complete)": {
        "prefix": "p+dumbbell_marble",
        "body": "\"dumbbell_marble\"",
        "description": " ※prefab ID: dumbbell_marble\n ※Name: Marbell\n ※Recipe: \n\t+ 4 x: Marble/marble\n\t+ 1 x: Twigs/twigs\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:dumbbell_marble(ReverseSearch)": {
        "prefix": "p+Marbell",
        "body": "\"dumbbell_marble\"",
        "description": " ※prefab ID: dumbbell_marble\n ※Name: Marbell\n ※Recipe: \n\t+ 4 x: Marble/marble\n\t+ 1 x: Twigs/twigs\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:bookstation(ID Complete)": {
        "prefix": "p+bookstation",
        "body": "\"bookstation\"",
        "description": " ※prefab ID: bookstation\n ※Name: Bookcase\n ※Recipe: \n\t+ 2 x: Living Log/livinglog\n\t+ 4 x: Papyrus/papyrus\n\t+ 1 x: Feather Pencil/featherpencil\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:bookstation(ReverseSearch)": {
        "prefix": "p+Bookcase",
        "body": "\"bookstation\"",
        "description": " ※prefab ID: bookstation\n ※Name: Bookcase\n ※Recipe: \n\t+ 2 x: Living Log/livinglog\n\t+ 4 x: Papyrus/papyrus\n\t+ 1 x: Feather Pencil/featherpencil\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:lost_toy_18(ID Complete)": {
        "prefix": "p+lost_toy_18",
        "body": "\"lost_toy_18\"",
        "description": " ※prefab ID: lost_toy_18\n ※Name: Treasured Toy Trojan Horse\n ※prefab Version: DST-632551 "
    },
    "prefab:lost_toy_18(ReverseSearch)": {
        "prefix": "p+Treasured Toy Trojan Horse",
        "body": "\"lost_toy_18\"",
        "description": " ※prefab ID: lost_toy_18\n ※Name: Treasured Toy Trojan Horse\n ※prefab Version: DST-632551 "
    },
    "prefab:klaussackkey(ID Complete)": {
        "prefix": "p+klaussackkey",
        "body": "\"klaussackkey\"",
        "description": " ※prefab ID: klaussackkey\n ※Name: Stag Antler\n ※prefab Version: DST-632551 "
    },
    "prefab:klaussackkey(ReverseSearch)": {
        "prefix": "p+Stag Antler",
        "body": "\"klaussackkey\"",
        "description": " ※prefab ID: klaussackkey\n ※Name: Stag Antler\n ※prefab Version: DST-632551 "
    },
    "prefab:perdshrine(ID Complete)": {
        "prefix": "p+perdshrine",
        "body": "\"perdshrine\"",
        "description": " ※prefab ID: perdshrine\n ※Name: Gobbler Shrine\n ※Recipe: \n\t+ 4 x: Gold Nugget/goldnugget\n\t+ 2 x: Boards/boards\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:perdshrine(ReverseSearch)": {
        "prefix": "p+Gobbler Shrine",
        "body": "\"perdshrine\"",
        "description": " ※prefab ID: perdshrine\n ※Name: Gobbler Shrine\n ※Recipe: \n\t+ 4 x: Gold Nugget/goldnugget\n\t+ 2 x: Boards/boards\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:perd(ID Complete)": {
        "prefix": "p+perd",
        "body": "\"perd\"",
        "description": " ※prefab ID: perd\n ※Name: Gobbler\n ※prefab Version: DST-632551 "
    },
    "prefab:perd(ReverseSearch)": {
        "prefix": "p+Gobbler",
        "body": "\"perd\"",
        "description": " ※prefab ID: perd\n ※Name: Gobbler\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_medium_3_inv(ID Complete)": {
        "prefix": "p+oceanfish_medium_3_inv",
        "body": "\"oceanfish_medium_3_inv\"",
        "description": " ※prefab ID: oceanfish_medium_3_inv\n ※Name: Dandy Lionfish\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_medium_3_inv(ReverseSearch)": {
        "prefix": "p+Dandy Lionfish",
        "body": "\"oceanfish_medium_3_inv\"",
        "description": " ※prefab ID: oceanfish_medium_3_inv\n ※Name: Dandy Lionfish\n ※prefab Version: DST-632551 "
    },
    "prefab:wx78module_heat(ID Complete)": {
        "prefix": "p+wx78module_heat",
        "body": "\"wx78module_heat\"",
        "description": " ※prefab ID: wx78module_heat\n ※Name: Thermal Circuit\n ※Recipe: \n\t+ 4 x: Bio Data/scandata\n\t+ 1 x: Red Gem/redgem\n ※Required Tech: \n\t+ LV.1 : Circuitry/ROBOTMODULECRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:wx78module_heat(ReverseSearch)": {
        "prefix": "p+Thermal Circuit",
        "body": "\"wx78module_heat\"",
        "description": " ※prefab ID: wx78module_heat\n ※Name: Thermal Circuit\n ※Recipe: \n\t+ 4 x: Bio Data/scandata\n\t+ 1 x: Red Gem/redgem\n ※Required Tech: \n\t+ LV.1 : Circuitry/ROBOTMODULECRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:dug_grass(ID Complete)": {
        "prefix": "p+dug_grass",
        "body": "\"dug_grass\"",
        "description": " ※prefab ID: dug_grass\n ※Name: Grass Tuft\n ※prefab Version: DST-632551 "
    },
    "prefab:dug_grass(ReverseSearch)": {
        "prefix": "p+Grass Tuft",
        "body": "\"dug_grass\"",
        "description": " ※prefab ID: dug_grass\n ※Name: Grass Tuft\n ※prefab Version: DST-632551 "
    },
    "prefab:tallbirdegg(ID Complete)": {
        "prefix": "p+tallbirdegg",
        "body": "\"tallbirdegg\"",
        "description": " ※prefab ID: tallbirdegg\n ※Name: Tallbird Egg\n ※prefab Version: DST-632551 "
    },
    "prefab:tallbirdegg(ReverseSearch)": {
        "prefix": "p+Tallbird Egg",
        "body": "\"tallbirdegg\"",
        "description": " ※prefab ID: tallbirdegg\n ※Name: Tallbird Egg\n ※prefab Version: DST-632551 "
    },
    "prefab:spore_moon(ID Complete)": {
        "prefix": "p+spore_moon",
        "body": "\"spore_moon\"",
        "description": " ※prefab ID: spore_moon\n ※Name: Lunar Spore\n ※prefab Version: DST-632551 "
    },
    "prefab:spore_moon(ReverseSearch)": {
        "prefix": "p+Lunar Spore",
        "body": "\"spore_moon\"",
        "description": " ※prefab ID: spore_moon\n ※Name: Lunar Spore\n ※prefab Version: DST-632551 "
    },
    "prefab:winona_recipescanner(ID Complete)": {
        "prefix": "p+winona_recipescanner",
        "body": "\"winona_recipescanner\"",
        "description": " ※prefab ID: winona_recipescanner\n ※Name: Calibrated Perceiver\n ※prefab Version: DST-632551 "
    },
    "prefab:winona_recipescanner(ReverseSearch)": {
        "prefix": "p+Calibrated Perceiver",
        "body": "\"winona_recipescanner\"",
        "description": " ※prefab ID: winona_recipescanner\n ※Name: Calibrated Perceiver\n ※prefab Version: DST-632551 "
    },
    "prefab:wx78module_light(ID Complete)": {
        "prefix": "p+wx78module_light",
        "body": "\"wx78module_light\"",
        "description": " ※prefab ID: wx78module_light\n ※Name: Illumination Circuit\n ※Recipe: \n\t+ 6 x: Bio Data/scandata\n\t+ 1 x: Light Bulb/lightbulb\n ※Required Tech: \n\t+ LV.1 : Circuitry/ROBOTMODULECRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:wx78module_light(ReverseSearch)": {
        "prefix": "p+Illumination Circuit",
        "body": "\"wx78module_light\"",
        "description": " ※prefab ID: wx78module_light\n ※Name: Illumination Circuit\n ※Recipe: \n\t+ 6 x: Bio Data/scandata\n\t+ 1 x: Light Bulb/lightbulb\n ※Required Tech: \n\t+ LV.1 : Circuitry/ROBOTMODULECRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:claywarg(ID Complete)": {
        "prefix": "p+claywarg",
        "body": "\"claywarg\"",
        "description": " ※prefab ID: claywarg\n ※Name: Clay Varg\n ※prefab Version: DST-632551 "
    },
    "prefab:claywarg(ReverseSearch)": {
        "prefix": "p+Clay Varg",
        "body": "\"claywarg\"",
        "description": " ※prefab ID: claywarg\n ※Name: Clay Varg\n ※prefab Version: DST-632551 "
    },
    "prefab:eyebrellahat(ID Complete)": {
        "prefix": "p+eyebrellahat",
        "body": "\"eyebrellahat\"",
        "description": " ※prefab ID: eyebrellahat\n ※Name: Eyebrella\n ※Recipe: \n\t+ 1 x: Deerclops Eyeball/deerclops_eyeball\n\t+ 15 x: Twigs/twigs\n\t+ 4 x: Bone Shards/boneshard\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:eyebrellahat(ReverseSearch)": {
        "prefix": "p+Eyebrella",
        "body": "\"eyebrellahat\"",
        "description": " ※prefab ID: eyebrellahat\n ※Name: Eyebrella\n ※Recipe: \n\t+ 1 x: Deerclops Eyeball/deerclops_eyeball\n\t+ 15 x: Twigs/twigs\n\t+ 4 x: Bone Shards/boneshard\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:carrot_oversized_rotten(ID Complete)": {
        "prefix": "p+carrot_oversized_rotten",
        "body": "\"carrot_oversized_rotten\"",
        "description": " ※prefab ID: carrot_oversized_rotten\n ※Name: Giant Rotting Carrots\n ※prefab Version: DST-632551 "
    },
    "prefab:carrot_oversized_rotten(ReverseSearch)": {
        "prefix": "p+Giant Rotting Carrots",
        "body": "\"carrot_oversized_rotten\"",
        "description": " ※prefab ID: carrot_oversized_rotten\n ※Name: Giant Rotting Carrots\n ※prefab Version: DST-632551 "
    },
    "prefab:wx78module_maxhunger(ID Complete)": {
        "prefix": "p+wx78module_maxhunger",
        "body": "\"wx78module_maxhunger\"",
        "description": " ※prefab ID: wx78module_maxhunger\n ※Name: Super-Gastrogain Circuit\n ※Recipe: \n\t+ 3 x: Bio Data/scandata\n\t+ 1 x: Slurper Pelt/slurper_pelt\n\t+ 1 x: Gastrogain Circuit/wx78module_maxhunger1\n ※Required Tech: \n\t+ LV.1 : Circuitry/ROBOTMODULECRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:wx78module_maxhunger(ReverseSearch)": {
        "prefix": "p+Super-Gastrogain Circuit",
        "body": "\"wx78module_maxhunger\"",
        "description": " ※prefab ID: wx78module_maxhunger\n ※Name: Super-Gastrogain Circuit\n ※Recipe: \n\t+ 3 x: Bio Data/scandata\n\t+ 1 x: Slurper Pelt/slurper_pelt\n\t+ 1 x: Gastrogain Circuit/wx78module_maxhunger1\n ※Required Tech: \n\t+ LV.1 : Circuitry/ROBOTMODULECRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:houndcorpse(ID Complete)": {
        "prefix": "p+houndcorpse",
        "body": "\"houndcorpse\"",
        "description": " ※prefab ID: houndcorpse\n ※Name: Hound\n ※prefab Version: DST-632551 "
    },
    "prefab:houndcorpse(ReverseSearch)": {
        "prefix": "p+Hound",
        "body": "\"houndcorpse\"",
        "description": " ※prefab ID: houndcorpse\n ※Name: Hound\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_sap(ID Complete)": {
        "prefix": "p+quagmire_sap",
        "body": "\"quagmire_sap\"",
        "description": " ※prefab ID: quagmire_sap\n ※Name: Sap\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_sap(ReverseSearch)": {
        "prefix": "p+Sap",
        "body": "\"quagmire_sap\"",
        "description": " ※prefab ID: quagmire_sap\n ※Name: Sap\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_mushroomstump(ID Complete)": {
        "prefix": "p+quagmire_mushroomstump",
        "body": "\"quagmire_mushroomstump\"",
        "description": " ※prefab ID: quagmire_mushroomstump\n ※Name: Mushroom\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_mushroomstump(ReverseSearch)": {
        "prefix": "p+Mushroom",
        "body": "\"quagmire_mushroomstump\"",
        "description": " ※prefab ID: quagmire_mushroomstump\n ※Name: Mushroom\n ※prefab Version: DST-632551 "
    },
    "prefab:wx78module_maxhealth2(ID Complete)": {
        "prefix": "p+wx78module_maxhealth2",
        "body": "\"wx78module_maxhealth2\"",
        "description": " ※prefab ID: wx78module_maxhealth2\n ※Name: Super-Hardy Circuit\n ※Recipe: \n\t+ 4 x: Bio Data/scandata\n\t+ 2 x: Spider Gland/spidergland\n\t+ 1 x: Hardy Circuit/wx78module_maxhealth\n ※Required Tech: \n\t+ LV.1 : Circuitry/ROBOTMODULECRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:wx78module_maxhealth2(ReverseSearch)": {
        "prefix": "p+Super-Hardy Circuit",
        "body": "\"wx78module_maxhealth2\"",
        "description": " ※prefab ID: wx78module_maxhealth2\n ※Name: Super-Hardy Circuit\n ※Recipe: \n\t+ 4 x: Bio Data/scandata\n\t+ 2 x: Spider Gland/spidergland\n\t+ 1 x: Hardy Circuit/wx78module_maxhealth\n ※Required Tech: \n\t+ LV.1 : Circuitry/ROBOTMODULECRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:wintercooking_tamales(ID Complete)": {
        "prefix": "p+wintercooking_tamales",
        "body": "\"wintercooking_tamales\"",
        "description": " ※prefab ID: wintercooking_tamales\n ※Name: Tamales\n ※Recipe: \n\t+ 1 x: Holiday Cheer/wintersfeastfuel\n\t+ 2 x: Stinger/stinger\n ※Required Tech: \n\t+ LV.1 : Feast/WINTERSFEASTCOOKING\n ※prefab Version: DST-632551 "
    },
    "prefab:wintercooking_tamales(ReverseSearch)": {
        "prefix": "p+Tamales",
        "body": "\"wintercooking_tamales\"",
        "description": " ※prefab ID: wintercooking_tamales\n ※Name: Tamales\n ※Recipe: \n\t+ 1 x: Holiday Cheer/wintersfeastfuel\n\t+ 2 x: Stinger/stinger\n ※Required Tech: \n\t+ LV.1 : Feast/WINTERSFEASTCOOKING\n ※prefab Version: DST-632551 "
    },
    "prefab:mighty_gym(ID Complete)": {
        "prefix": "p+mighty_gym",
        "body": "\"mighty_gym\"",
        "description": " ※prefab ID: mighty_gym\n ※Name: Mighty Gym\n ※Recipe: \n\t+ 4 x: Boards/boards\n\t+ 2 x: Cut Stone/cutstone\n\t+ 3 x: Rope/rope\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:mighty_gym(ReverseSearch)": {
        "prefix": "p+Mighty Gym",
        "body": "\"mighty_gym\"",
        "description": " ※prefab ID: mighty_gym\n ※Name: Mighty Gym\n ※Recipe: \n\t+ 4 x: Boards/boards\n\t+ 2 x: Cut Stone/cutstone\n\t+ 3 x: Rope/rope\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:orangegem(ID Complete)": {
        "prefix": "p+orangegem",
        "body": "\"orangegem\"",
        "description": " ※prefab ID: orangegem\n ※Name: Orange Gem\n ※prefab Version: DST-632551 "
    },
    "prefab:orangegem(ReverseSearch)": {
        "prefix": "p+Orange Gem",
        "body": "\"orangegem\"",
        "description": " ※prefab ID: orangegem\n ※Name: Orange Gem\n ※prefab Version: DST-632551 "
    },
    "prefab:mask_queenhat(ID Complete)": {
        "prefix": "p+mask_queenhat",
        "body": "\"mask_queenhat\"",
        "description": " ※prefab ID: mask_queenhat\n ※Name: Queen Mask\n ※prefab Version: DST-632551 "
    },
    "prefab:mask_queenhat(ReverseSearch)": {
        "prefix": "p+Queen Mask",
        "body": "\"mask_queenhat\"",
        "description": " ※prefab ID: mask_queenhat\n ※Name: Queen Mask\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_foliage_cooked(ID Complete)": {
        "prefix": "p+quagmire_foliage_cooked",
        "body": "\"quagmire_foliage_cooked\"",
        "description": " ※prefab ID: quagmire_foliage_cooked\n ※Name: Cooked Foliage\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_foliage_cooked(ReverseSearch)": {
        "prefix": "p+Cooked Foliage",
        "body": "\"quagmire_foliage_cooked\"",
        "description": " ※prefab ID: quagmire_foliage_cooked\n ※Name: Cooked Foliage\n ※prefab Version: DST-632551 "
    },
    "prefab:fence_rotator(ID Complete)": {
        "prefix": "p+fence_rotator",
        "body": "\"fence_rotator\"",
        "description": " ※prefab ID: fence_rotator\n ※Name: Fencing Sword\n ※Recipe: \n\t+ 1 x: Spear/spear\n\t+ 2 x: Flint/flint\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:fence_rotator(ReverseSearch)": {
        "prefix": "p+Fencing Sword",
        "body": "\"fence_rotator\"",
        "description": " ※prefab ID: fence_rotator\n ※Name: Fencing Sword\n ※Recipe: \n\t+ 1 x: Spear/spear\n\t+ 2 x: Flint/flint\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_swampig_house_rubble(ID Complete)": {
        "prefix": "p+quagmire_swampig_house_rubble",
        "body": "\"quagmire_swampig_house_rubble\"",
        "description": " ※prefab ID: quagmire_swampig_house_rubble\n ※Name: House Rubble\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_swampig_house_rubble(ReverseSearch)": {
        "prefix": "p+House Rubble",
        "body": "\"quagmire_swampig_house_rubble\"",
        "description": " ※prefab ID: quagmire_swampig_house_rubble\n ※Name: House Rubble\n ※prefab Version: DST-632551 "
    },
    "prefab:beefalofeed(ID Complete)": {
        "prefix": "p+beefalofeed",
        "body": "\"beefalofeed\"",
        "description": " ※prefab ID: beefalofeed\n ※Name: Steamed Twigs\n ※prefab Version: DST-632551 "
    },
    "prefab:beefalofeed(ReverseSearch)": {
        "prefix": "p+Steamed Twigs",
        "body": "\"beefalofeed\"",
        "description": " ※prefab ID: beefalofeed\n ※Name: Steamed Twigs\n ※prefab Version: DST-632551 "
    },
    "prefab:nightsword(ID Complete)": {
        "prefix": "p+nightsword",
        "body": "\"nightsword\"",
        "description": " ※prefab ID: nightsword\n ※Name: Dark Sword\n ※Recipe: \n\t+ 5 x: Nightmare Fuel/nightmarefuel\n\t+ 1 x: Living Log/livinglog\n ※Required Tech: \n\t+ LV.3 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:nightsword(ReverseSearch)": {
        "prefix": "p+Dark Sword",
        "body": "\"nightsword\"",
        "description": " ※prefab ID: nightsword\n ※Name: Dark Sword\n ※Recipe: \n\t+ 5 x: Nightmare Fuel/nightmarefuel\n\t+ 1 x: Living Log/livinglog\n ※Required Tech: \n\t+ LV.3 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_026(ID Complete)": {
        "prefix": "p+quagmire_food_026",
        "body": "\"quagmire_food_026\"",
        "description": " ※prefab ID: quagmire_food_026\n ※Name: Tomato Soup\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_026(ReverseSearch)": {
        "prefix": "p+Tomato Soup",
        "body": "\"quagmire_food_026\"",
        "description": " ※prefab ID: quagmire_food_026\n ※Name: Tomato Soup\n ※prefab Version: DST-632551 "
    },
    "prefab:moonrockidol(ID Complete)": {
        "prefix": "p+moonrockidol",
        "body": "\"moonrockidol\"",
        "description": " ※prefab ID: moonrockidol\n ※Name: Moon Rock Idol\n ※Recipe: \n\t+ 1 x: Moon Rock/moonrocknugget\n\t+ 1 x: Purple Gem/purplegem\n ※Required Tech: \n\t+ LV.1 : Celestial/CELESTIAL\n ※prefab Version: DST-632551 "
    },
    "prefab:moonrockidol(ReverseSearch)": {
        "prefix": "p+Moon Rock Idol",
        "body": "\"moonrockidol\"",
        "description": " ※prefab ID: moonrockidol\n ※Name: Moon Rock Idol\n ※Recipe: \n\t+ 1 x: Moon Rock/moonrocknugget\n\t+ 1 x: Purple Gem/purplegem\n ※Required Tech: \n\t+ LV.1 : Celestial/CELESTIAL\n ※prefab Version: DST-632551 "
    },
    "prefab:halloween_ornament_1(ID Complete)": {
        "prefix": "p+halloween_ornament_1",
        "body": "\"halloween_ornament_1\"",
        "description": " ※prefab ID: halloween_ornament_1\n ※Name: Ghost Decoration\n ※prefab Version: DST-632551 "
    },
    "prefab:halloween_ornament_1(ReverseSearch)": {
        "prefix": "p+Ghost Decoration",
        "body": "\"halloween_ornament_1\"",
        "description": " ※prefab ID: halloween_ornament_1\n ※Name: Ghost Decoration\n ※prefab Version: DST-632551 "
    },
    "prefab:boat_magnet_beacon(ID Complete)": {
        "prefix": "p+boat_magnet_beacon",
        "body": "\"boat_magnet_beacon\"",
        "description": " ※prefab ID: boat_magnet_beacon\n ※Name: Nautopilot Beacon\n ※Recipe: \n\t+ 2 x: Cut Stone/cutstone\n\t+ 1 x: Electrical Doodad/transistor\n\t+ 1 x: Frazzled Wires/trinket_6\n ※Required Tech: \n\t+ LV.1 : Seafaring/SEAFARING\n ※prefab Version: DST-632551 "
    },
    "prefab:boat_magnet_beacon(ReverseSearch)": {
        "prefix": "p+Nautopilot Beacon",
        "body": "\"boat_magnet_beacon\"",
        "description": " ※prefab ID: boat_magnet_beacon\n ※Name: Nautopilot Beacon\n ※Recipe: \n\t+ 2 x: Cut Stone/cutstone\n\t+ 1 x: Electrical Doodad/transistor\n\t+ 1 x: Frazzled Wires/trinket_6\n ※Required Tech: \n\t+ LV.1 : Seafaring/SEAFARING\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_31(ID Complete)": {
        "prefix": "p+trinket_31",
        "body": "\"trinket_31\"",
        "description": " ※prefab ID: trinket_31\n ※Name: Black Knight\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_31(ReverseSearch)": {
        "prefix": "p+Black Knight",
        "body": "\"trinket_31\"",
        "description": " ※prefab ID: trinket_31\n ※Name: Black Knight\n ※prefab Version: DST-632551 "
    },
    "prefab:rubble(ID Complete)": {
        "prefix": "p+rubble",
        "body": "\"rubble\"",
        "description": " ※prefab ID: rubble\n ※Name: Rubble\n ※prefab Version: DST-632551 "
    },
    "prefab:rubble(ReverseSearch)": {
        "prefix": "p+Rubble",
        "body": "\"rubble\"",
        "description": " ※prefab ID: rubble\n ※Name: Rubble\n ※prefab Version: DST-632551 "
    },
    "prefab:charcoal(ID Complete)": {
        "prefix": "p+charcoal",
        "body": "\"charcoal\"",
        "description": " ※prefab ID: charcoal\n ※Name: Charcoal\n ※prefab Version: DST-632551 "
    },
    "prefab:charcoal(ReverseSearch)": {
        "prefix": "p+Charcoal",
        "body": "\"charcoal\"",
        "description": " ※prefab ID: charcoal\n ※Name: Charcoal\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_clayhound_builder(ID Complete)": {
        "prefix": "p+chesspiece_clayhound_builder",
        "body": "\"chesspiece_clayhound_builder\"",
        "description": " ※prefab ID: chesspiece_clayhound_builder\n ※Name: Hound Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_clayhound_builder(ReverseSearch)": {
        "prefix": "p+Hound Figure",
        "body": "\"chesspiece_clayhound_builder\"",
        "description": " ※prefab ID: chesspiece_clayhound_builder\n ※Name: Hound Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:crow(ID Complete)": {
        "prefix": "p+crow",
        "body": "\"crow\"",
        "description": " ※prefab ID: crow\n ※Name: Crow\n ※prefab Version: DST-632551 "
    },
    "prefab:crow(ReverseSearch)": {
        "prefix": "p+Crow",
        "body": "\"crow\"",
        "description": " ※prefab ID: crow\n ※Name: Crow\n ※prefab Version: DST-632551 "
    },
    "prefab:redgem(ID Complete)": {
        "prefix": "p+redgem",
        "body": "\"redgem\"",
        "description": " ※prefab ID: redgem\n ※Name: Red Gem\n ※prefab Version: DST-632551 "
    },
    "prefab:redgem(ReverseSearch)": {
        "prefix": "p+Red Gem",
        "body": "\"redgem\"",
        "description": " ※prefab ID: redgem\n ※Name: Red Gem\n ※prefab Version: DST-632551 "
    },
    "prefab:eggplant_oversized_rotten(ID Complete)": {
        "prefix": "p+eggplant_oversized_rotten",
        "body": "\"eggplant_oversized_rotten\"",
        "description": " ※prefab ID: eggplant_oversized_rotten\n ※Name: Giant Rotting Eggplant\n ※prefab Version: DST-632551 "
    },
    "prefab:eggplant_oversized_rotten(ReverseSearch)": {
        "prefix": "p+Giant Rotting Eggplant",
        "body": "\"eggplant_oversized_rotten\"",
        "description": " ※prefab ID: eggplant_oversized_rotten\n ※Name: Giant Rotting Eggplant\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_beequeen(ID Complete)": {
        "prefix": "p+chesspiece_beequeen",
        "body": "\"chesspiece_beequeen\"",
        "description": " ※prefab ID: chesspiece_beequeen\n ※Name: Bee Queen Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_beequeen(ReverseSearch)": {
        "prefix": "p+Bee Queen Figure",
        "body": "\"chesspiece_beequeen\"",
        "description": " ※prefab ID: chesspiece_beequeen\n ※Name: Bee Queen Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:ruins_cavein_obstacle(ID Complete)": {
        "prefix": "p+ruins_cavein_obstacle",
        "body": "\"ruins_cavein_obstacle\"",
        "description": " ※prefab ID: ruins_cavein_obstacle\n ※Name: Blocky Ruins\n ※prefab Version: DST-632551 "
    },
    "prefab:ruins_cavein_obstacle(ReverseSearch)": {
        "prefix": "p+Blocky Ruins",
        "body": "\"ruins_cavein_obstacle\"",
        "description": " ※prefab ID: ruins_cavein_obstacle\n ※Name: Blocky Ruins\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_smallmeat(ID Complete)": {
        "prefix": "p+quagmire_smallmeat",
        "body": "\"quagmire_smallmeat\"",
        "description": " ※prefab ID: quagmire_smallmeat\n ※Name: Meat Scraps\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_smallmeat(ReverseSearch)": {
        "prefix": "p+Meat Scraps",
        "body": "\"quagmire_smallmeat\"",
        "description": " ※prefab ID: quagmire_smallmeat\n ※Name: Meat Scraps\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_deerclops(ID Complete)": {
        "prefix": "p+chesspiece_deerclops",
        "body": "\"chesspiece_deerclops\"",
        "description": " ※prefab ID: chesspiece_deerclops\n ※Name: Deerclops Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_deerclops(ReverseSearch)": {
        "prefix": "p+Deerclops Figure",
        "body": "\"chesspiece_deerclops\"",
        "description": " ※prefab ID: chesspiece_deerclops\n ※Name: Deerclops Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:sapling(ID Complete)": {
        "prefix": "p+sapling",
        "body": "\"sapling\"",
        "description": " ※prefab ID: sapling\n ※Name: Sapling\n ※prefab Version: DST-632551 "
    },
    "prefab:sapling(ReverseSearch)": {
        "prefix": "p+Sapling",
        "body": "\"sapling\"",
        "description": " ※prefab ID: sapling\n ※Name: Sapling\n ※prefab Version: DST-632551 "
    },
    "prefab:eggplant_seeds(ID Complete)": {
        "prefix": "p+eggplant_seeds",
        "body": "\"eggplant_seeds\"",
        "description": " ※prefab ID: eggplant_seeds\n ※Name: Swirly Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:eggplant_seeds(ReverseSearch)": {
        "prefix": "p+Swirly Seeds",
        "body": "\"eggplant_seeds\"",
        "description": " ※prefab ID: eggplant_seeds\n ※Name: Swirly Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:walter(ID Complete)": {
        "prefix": "p+walter",
        "body": "\"walter\"",
        "description": " ※prefab ID: walter\n ※Name: Walter\n ※prefab Version: DST-632551 "
    },
    "prefab:walter(ReverseSearch)": {
        "prefix": "p+Walter",
        "body": "\"walter\"",
        "description": " ※prefab ID: walter\n ※Name: Walter\n ※prefab Version: DST-632551 "
    },
    "prefab:earmuffshat(ID Complete)": {
        "prefix": "p+earmuffshat",
        "body": "\"earmuffshat\"",
        "description": " ※prefab ID: earmuffshat\n ※Name: Rabbit Earmuffs\n ※Recipe: \n\t+ 2 x: Rabbit/rabbit\n\t+ 1 x: Twigs/twigs\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:earmuffshat(ReverseSearch)": {
        "prefix": "p+Rabbit Earmuffs",
        "body": "\"earmuffshat\"",
        "description": " ※prefab ID: earmuffshat\n ※Name: Rabbit Earmuffs\n ※Recipe: \n\t+ 2 x: Rabbit/rabbit\n\t+ 1 x: Twigs/twigs\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:sanityrock(ID Complete)": {
        "prefix": "p+sanityrock",
        "body": "\"sanityrock\"",
        "description": " ※prefab ID: sanityrock\n ※Name: Obelisk\n ※prefab Version: DST-632551 "
    },
    "prefab:sanityrock(ReverseSearch)": {
        "prefix": "p+Obelisk",
        "body": "\"sanityrock\"",
        "description": " ※prefab ID: sanityrock\n ※Name: Obelisk\n ※prefab Version: DST-632551 "
    },
    "prefab:wagstaff_tool_2_layman(ID Complete)": {
        "prefix": "p+wagstaff_tool_2_layman",
        "body": "\"wagstaff_tool_2_layman\"",
        "description": " ※prefab ID: wagstaff_tool_2_layman\n ※Name: Weird Tool\n ※prefab Version: DST-632551 "
    },
    "prefab:wagstaff_tool_2_layman(ReverseSearch)": {
        "prefix": "p+Weird Tool",
        "body": "\"wagstaff_tool_2_layman\"",
        "description": " ※prefab ID: wagstaff_tool_2_layman\n ※Name: Weird Tool\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_42(ID Complete)": {
        "prefix": "p+trinket_42",
        "body": "\"trinket_42\"",
        "description": " ※prefab ID: trinket_42\n ※Name: Toy Cobra\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_42(ReverseSearch)": {
        "prefix": "p+Toy Cobra",
        "body": "\"trinket_42\"",
        "description": " ※prefab ID: trinket_42\n ※Name: Toy Cobra\n ※prefab Version: DST-632551 "
    },
    "prefab:seeds(ID Complete)": {
        "prefix": "p+seeds",
        "body": "\"seeds\"",
        "description": " ※prefab ID: seeds\n ※Name: Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:seeds(ReverseSearch)": {
        "prefix": "p+Seeds",
        "body": "\"seeds\"",
        "description": " ※prefab ID: seeds\n ※Name: Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:boat_rotator(ID Complete)": {
        "prefix": "p+boat_rotator",
        "body": "\"boat_rotator\"",
        "description": " ※prefab ID: boat_rotator\n ※Name: Rudder\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 1 x: Rope/rope\n\t+ 1 x: Gears/gears\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:boat_rotator(ReverseSearch)": {
        "prefix": "p+Rudder",
        "body": "\"boat_rotator\"",
        "description": " ※prefab ID: boat_rotator\n ※Name: Rudder\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 1 x: Rope/rope\n\t+ 1 x: Gears/gears\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:shadow_forge_kit(ID Complete)": {
        "prefix": "p+shadow_forge_kit",
        "body": "\"shadow_forge_kit\"",
        "description": " ※prefab ID: shadow_forge_kit\n ※Name: Shadowcraft Plinth Kit\n ※Recipe: \n\t+ 5 x: Nightmare Fuel/nightmarefuel\n\t+ 2 x: Dreadstone/dreadstone\n\t+ 1 x: Pure Horror/horrorfuel\n ※Required Tech: \n\t+ LV.4 : Ancient/ANCIENT\n ※prefab Version: DST-632551 "
    },
    "prefab:shadow_forge_kit(ReverseSearch)": {
        "prefix": "p+Shadowcraft Plinth Kit",
        "body": "\"shadow_forge_kit\"",
        "description": " ※prefab ID: shadow_forge_kit\n ※Name: Shadowcraft Plinth Kit\n ※Recipe: \n\t+ 5 x: Nightmare Fuel/nightmarefuel\n\t+ 2 x: Dreadstone/dreadstone\n\t+ 1 x: Pure Horror/horrorfuel\n ※Required Tech: \n\t+ LV.4 : Ancient/ANCIENT\n ※prefab Version: DST-632551 "
    },
    "prefab:diviningrod(ID Complete)": {
        "prefix": "p+diviningrod",
        "body": "\"diviningrod\"",
        "description": " ※prefab ID: diviningrod\n ※Name: Divining Rod\n ※prefab Version: DST-632551 "
    },
    "prefab:diviningrod(ReverseSearch)": {
        "prefix": "p+Divining Rod",
        "body": "\"diviningrod\"",
        "description": " ※prefab ID: diviningrod\n ※Name: Divining Rod\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_small_7_inv(ID Complete)": {
        "prefix": "p+oceanfish_small_7_inv",
        "body": "\"oceanfish_small_7_inv\"",
        "description": " ※prefab ID: oceanfish_small_7_inv\n ※Name: Bloomfin Tuna\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_small_7_inv(ReverseSearch)": {
        "prefix": "p+Bloomfin Tuna",
        "body": "\"oceanfish_small_7_inv\"",
        "description": " ※prefab ID: oceanfish_small_7_inv\n ※Name: Bloomfin Tuna\n ※prefab Version: DST-632551 "
    },
    "prefab:polly_rogershat(ID Complete)": {
        "prefix": "p+polly_rogershat",
        "body": "\"polly_rogershat\"",
        "description": " ※prefab ID: polly_rogershat\n ※Name: Polly Roger's Hat\n ※Recipe: \n\t+ 1 x: Captain's Tricorn/monkey_mediumhat\n\t+ 1 x: Saffron Feather/feather_canary\n\t+ 1 x: Black Flag/blackflag\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:polly_rogershat(ReverseSearch)": {
        "prefix": "p+Polly Roger's Hat",
        "body": "\"polly_rogershat\"",
        "description": " ※prefab ID: polly_rogershat\n ※Name: Polly Roger's Hat\n ※Recipe: \n\t+ 1 x: Captain's Tricorn/monkey_mediumhat\n\t+ 1 x: Saffron Feather/feather_canary\n\t+ 1 x: Black Flag/blackflag\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:beefalowool(ID Complete)": {
        "prefix": "p+beefalowool",
        "body": "\"beefalowool\"",
        "description": " ※prefab ID: beefalowool\n ※Name: Beefalo Wool\n ※prefab Version: DST-632551 "
    },
    "prefab:beefalowool(ReverseSearch)": {
        "prefix": "p+Beefalo Wool",
        "body": "\"beefalowool\"",
        "description": " ※prefab ID: beefalowool\n ※Name: Beefalo Wool\n ※prefab Version: DST-632551 "
    },
    "prefab:telebase(ID Complete)": {
        "prefix": "p+telebase",
        "body": "\"telebase\"",
        "description": " ※prefab ID: telebase\n ※Name: Telelocator Focus\n ※Recipe: \n\t+ 4 x: Nightmare Fuel/nightmarefuel\n\t+ 4 x: Living Log/livinglog\n\t+ 8 x: Gold Nugget/goldnugget\n ※Required Tech: \n\t+ LV.3 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:telebase(ReverseSearch)": {
        "prefix": "p+Telelocator Focus",
        "body": "\"telebase\"",
        "description": " ※prefab ID: telebase\n ※Name: Telelocator Focus\n ※Recipe: \n\t+ 4 x: Nightmare Fuel/nightmarefuel\n\t+ 4 x: Living Log/livinglog\n\t+ 8 x: Gold Nugget/goldnugget\n ※Required Tech: \n\t+ LV.3 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:turtillus(ID Complete)": {
        "prefix": "p+turtillus",
        "body": "\"turtillus\"",
        "description": " ※prefab ID: turtillus\n ※Name: Snortoise\n ※prefab Version: DST-632551 "
    },
    "prefab:turtillus(ReverseSearch)": {
        "prefix": "p+Snortoise",
        "body": "\"turtillus\"",
        "description": " ※prefab ID: turtillus\n ※Name: Snortoise\n ※prefab Version: DST-632551 "
    },
    "prefab:wortox(ID Complete)": {
        "prefix": "p+wortox",
        "body": "\"wortox\"",
        "description": " ※prefab ID: wortox\n ※Name: Wortox\n ※prefab Version: DST-632551 "
    },
    "prefab:wortox(ReverseSearch)": {
        "prefix": "p+Wortox",
        "body": "\"wortox\"",
        "description": " ※prefab ID: wortox\n ※Name: Wortox\n ※prefab Version: DST-632551 "
    },
    "prefab:pirate_stash(ID Complete)": {
        "prefix": "p+pirate_stash",
        "body": "\"pirate_stash\"",
        "description": " ※prefab ID: pirate_stash\n ※Name: X\n ※prefab Version: DST-632551 "
    },
    "prefab:pirate_stash(ReverseSearch)": {
        "prefix": "p+X",
        "body": "\"pirate_stash\"",
        "description": " ※prefab ID: pirate_stash\n ※Name: X\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_sugarwoodtree(ID Complete)": {
        "prefix": "p+quagmire_sugarwoodtree",
        "body": "\"quagmire_sugarwoodtree\"",
        "description": " ※prefab ID: quagmire_sugarwoodtree\n ※Name: Sugarwood Tree\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_sugarwoodtree(ReverseSearch)": {
        "prefix": "p+Sugarwood Tree",
        "body": "\"quagmire_sugarwoodtree\"",
        "description": " ※prefab ID: quagmire_sugarwoodtree\n ※Name: Sugarwood Tree\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_eyeofterror_builder(ID Complete)": {
        "prefix": "p+chesspiece_eyeofterror_builder",
        "body": "\"chesspiece_eyeofterror_builder\"",
        "description": " ※prefab ID: chesspiece_eyeofterror_builder\n ※Name: Eye Of Terror Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_eyeofterror_builder(ReverseSearch)": {
        "prefix": "p+Eye Of Terror Figure",
        "body": "\"chesspiece_eyeofterror_builder\"",
        "description": " ※prefab ID: chesspiece_eyeofterror_builder\n ※Name: Eye Of Terror Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:mooseegg1(ID Complete)": {
        "prefix": "p+mooseegg1",
        "body": "\"mooseegg1\"",
        "description": " ※prefab ID: mooseegg1\n ※Name: Moose Egg\n ※prefab Version: DST-632551 "
    },
    "prefab:mooseegg1(ReverseSearch)": {
        "prefix": "p+Moose Egg",
        "body": "\"mooseegg1\"",
        "description": " ※prefab ID: mooseegg1\n ※Name: Moose Egg\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_bearger_mutated_sketch(ID Complete)": {
        "prefix": "p+chesspiece_bearger_mutated_sketch",
        "body": "\"chesspiece_bearger_mutated_sketch\"",
        "description": " ※prefab ID: chesspiece_bearger_mutated_sketch\n ※Name: Armored Bearger Figure Sketch\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_bearger_mutated_sketch(ReverseSearch)": {
        "prefix": "p+Armored Bearger Figure Sketch",
        "body": "\"chesspiece_bearger_mutated_sketch\"",
        "description": " ※prefab ID: chesspiece_bearger_mutated_sketch\n ※Name: Armored Bearger Figure Sketch\n ※prefab Version: DST-632551 "
    },
    "prefab:walrushat(ID Complete)": {
        "prefix": "p+walrushat",
        "body": "\"walrushat\"",
        "description": " ※prefab ID: walrushat\n ※Name: Tam o' Shanter\n ※prefab Version: DST-632551 "
    },
    "prefab:walrushat(ReverseSearch)": {
        "prefix": "p+Tam o' Shanter",
        "body": "\"walrushat\"",
        "description": " ※prefab ID: walrushat\n ※Name: Tam o' Shanter\n ※prefab Version: DST-632551 "
    },
    "prefab:spore_tall(ID Complete)": {
        "prefix": "p+spore_tall",
        "body": "\"spore_tall\"",
        "description": " ※prefab ID: spore_tall\n ※Name: Blue Spore\n ※prefab Version: DST-632551 "
    },
    "prefab:spore_tall(ReverseSearch)": {
        "prefix": "p+Blue Spore",
        "body": "\"spore_tall\"",
        "description": " ※prefab ID: spore_tall\n ※Name: Blue Spore\n ※prefab Version: DST-632551 "
    },
    "prefab:carrat_planted(ID Complete)": {
        "prefix": "p+carrat_planted",
        "body": "\"carrat_planted\"",
        "description": " ※prefab ID: carrat_planted\n ※Name: Carrot\n ※prefab Version: DST-632551 "
    },
    "prefab:carrat_planted(ReverseSearch)": {
        "prefix": "p+Carrot",
        "body": "\"carrat_planted\"",
        "description": " ※prefab ID: carrat_planted\n ※Name: Carrot\n ※prefab Version: DST-632551 "
    },
    "prefab:grotto_pool_small(ID Complete)": {
        "prefix": "p+grotto_pool_small",
        "body": "\"grotto_pool_small\"",
        "description": " ※prefab ID: grotto_pool_small\n ※Name: Small Vitreoasis\n ※prefab Version: DST-632551 "
    },
    "prefab:grotto_pool_small(ReverseSearch)": {
        "prefix": "p+Small Vitreoasis",
        "body": "\"grotto_pool_small\"",
        "description": " ※prefab ID: grotto_pool_small\n ※Name: Small Vitreoasis\n ※prefab Version: DST-632551 "
    },
    "prefab:halloween_ornament_3(ID Complete)": {
        "prefix": "p+halloween_ornament_3",
        "body": "\"halloween_ornament_3\"",
        "description": " ※prefab ID: halloween_ornament_3\n ※Name: Spider Decoration\n ※prefab Version: DST-632551 "
    },
    "prefab:halloween_ornament_3(ReverseSearch)": {
        "prefix": "p+Spider Decoration",
        "body": "\"halloween_ornament_3\"",
        "description": " ※prefab ID: halloween_ornament_3\n ※Name: Spider Decoration\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivaldecor_banner(ID Complete)": {
        "prefix": "p+carnivaldecor_banner",
        "body": "\"carnivaldecor_banner\"",
        "description": " ※prefab ID: carnivaldecor_banner\n ※Name: Light Catcher\n ※Recipe: \n\t+ 1 x: Light Catcher Kit/carnivaldecor_banner_kit\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:carnivaldecor_banner(ReverseSearch)": {
        "prefix": "p+Light Catcher",
        "body": "\"carnivaldecor_banner\"",
        "description": " ※prefab ID: carnivaldecor_banner\n ※Name: Light Catcher\n ※Recipe: \n\t+ 1 x: Light Catcher Kit/carnivaldecor_banner_kit\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:mask_dollhat(ID Complete)": {
        "prefix": "p+mask_dollhat",
        "body": "\"mask_dollhat\"",
        "description": " ※prefab ID: mask_dollhat\n ※Name: Doll Mask\n ※prefab Version: DST-632551 "
    },
    "prefab:mask_dollhat(ReverseSearch)": {
        "prefix": "p+Doll Mask",
        "body": "\"mask_dollhat\"",
        "description": " ※prefab ID: mask_dollhat\n ※Name: Doll Mask\n ※prefab Version: DST-632551 "
    },
    "prefab:hermit_bundle_shells(ID Complete)": {
        "prefix": "p+hermit_bundle_shells",
        "body": "\"hermit_bundle_shells\"",
        "description": " ※prefab ID: hermit_bundle_shells\n ※Name: Shell Bell Bundle\n ※prefab Version: DST-632551 "
    },
    "prefab:hermit_bundle_shells(ReverseSearch)": {
        "prefix": "p+Shell Bell Bundle",
        "body": "\"hermit_bundle_shells\"",
        "description": " ※prefab ID: hermit_bundle_shells\n ※Name: Shell Bell Bundle\n ※prefab Version: DST-632551 "
    },
    "prefab:rhinodrill(ID Complete)": {
        "prefix": "p+rhinodrill",
        "body": "\"rhinodrill\"",
        "description": " ※prefab ID: rhinodrill\n ※Name: Rhinocebro Snapback\n ※prefab Version: DST-632551 "
    },
    "prefab:rhinodrill(ReverseSearch)": {
        "prefix": "p+Rhinocebro Snapback",
        "body": "\"rhinodrill\"",
        "description": " ※prefab ID: rhinodrill\n ※Name: Rhinocebro Snapback\n ※prefab Version: DST-632551 "
    },
    "prefab:greenstaff(ID Complete)": {
        "prefix": "p+greenstaff",
        "body": "\"greenstaff\"",
        "description": " ※prefab ID: greenstaff\n ※Name: Deconstruction Staff\n ※Recipe: \n\t+ 4 x: Nightmare Fuel/nightmarefuel\n\t+ 2 x: Living Log/livinglog\n\t+ 2 x: Green Gem/greengem\n ※Required Tech: \n\t+ LV.2 : Ancient/ANCIENT\n ※prefab Version: DST-632551 "
    },
    "prefab:greenstaff(ReverseSearch)": {
        "prefix": "p+Deconstruction Staff",
        "body": "\"greenstaff\"",
        "description": " ※prefab ID: greenstaff\n ※Name: Deconstruction Staff\n ※Recipe: \n\t+ 4 x: Nightmare Fuel/nightmarefuel\n\t+ 2 x: Living Log/livinglog\n\t+ 2 x: Green Gem/greengem\n ※Required Tech: \n\t+ LV.2 : Ancient/ANCIENT\n ※prefab Version: DST-632551 "
    },
    "prefab:bullkelp_root(ID Complete)": {
        "prefix": "p+bullkelp_root",
        "body": "\"bullkelp_root\"",
        "description": " ※prefab ID: bullkelp_root\n ※Name: Bull Kelp Stalk\n ※prefab Version: DST-632551 "
    },
    "prefab:bullkelp_root(ReverseSearch)": {
        "prefix": "p+Bull Kelp Stalk",
        "body": "\"bullkelp_root\"",
        "description": " ※prefab ID: bullkelp_root\n ※Name: Bull Kelp Stalk\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_coin2(ID Complete)": {
        "prefix": "p+quagmire_coin2",
        "body": "\"quagmire_coin2\"",
        "description": " ※prefab ID: quagmire_coin2\n ※Name: Sapphire Medallion\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_coin2(ReverseSearch)": {
        "prefix": "p+Sapphire Medallion",
        "body": "\"quagmire_coin2\"",
        "description": " ※prefab ID: quagmire_coin2\n ※Name: Sapphire Medallion\n ※prefab Version: DST-632551 "
    },
    "prefab:playbill_the_doll(ID Complete)": {
        "prefix": "p+playbill_the_doll",
        "body": "\"playbill_the_doll\"",
        "description": " ※prefab ID: playbill_the_doll\n ※Name: The Enchanted Doll A Stage Play\n ※prefab Version: DST-632551 "
    },
    "prefab:playbill_the_doll(ReverseSearch)": {
        "prefix": "p+The Enchanted Doll A Stage Play",
        "body": "\"playbill_the_doll\"",
        "description": " ※prefab ID: playbill_the_doll\n ※Name: The Enchanted Doll A Stage Play\n ※prefab Version: DST-632551 "
    },
    "prefab:yotr_fightring_bell(ID Complete)": {
        "prefix": "p+yotr_fightring_bell",
        "body": "\"yotr_fightring_bell\"",
        "description": " ※prefab ID: yotr_fightring_bell\n ※Name: Pillow Fight Bell\n ※prefab Version: DST-632551 "
    },
    "prefab:yotr_fightring_bell(ReverseSearch)": {
        "prefix": "p+Pillow Fight Bell",
        "body": "\"yotr_fightring_bell\"",
        "description": " ※prefab ID: yotr_fightring_bell\n ※Name: Pillow Fight Bell\n ※prefab Version: DST-632551 "
    },
    "prefab:singingshell_octave4(ID Complete)": {
        "prefix": "p+singingshell_octave4",
        "body": "\"singingshell_octave4\"",
        "description": " ※prefab ID: singingshell_octave4\n ※Name: Alto Shell Bell\n ※prefab Version: DST-632551 "
    },
    "prefab:singingshell_octave4(ReverseSearch)": {
        "prefix": "p+Alto Shell Bell",
        "body": "\"singingshell_octave4\"",
        "description": " ※prefab ID: singingshell_octave4\n ※Name: Alto Shell Bell\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_014(ID Complete)": {
        "prefix": "p+quagmire_food_014",
        "body": "\"quagmire_food_014\"",
        "description": " ※prefab ID: quagmire_food_014\n ※Name: Roast Vegetables\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_014(ReverseSearch)": {
        "prefix": "p+Roast Vegetables",
        "body": "\"quagmire_food_014\"",
        "description": " ※prefab ID: quagmire_food_014\n ※Name: Roast Vegetables\n ※prefab Version: DST-632551 "
    },
    "prefab:yotr_decor_1_item(ID Complete)": {
        "prefix": "p+yotr_decor_1_item",
        "body": "\"yotr_decor_1_item\"",
        "description": " ※prefab ID: yotr_decor_1_item\n ※Name: Short Rabbit Lamp\n ※Recipe: \n\t+ 5 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /RABBITOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:yotr_decor_1_item(ReverseSearch)": {
        "prefix": "p+Short Rabbit Lamp",
        "body": "\"yotr_decor_1_item\"",
        "description": " ※prefab ID: yotr_decor_1_item\n ※Name: Short Rabbit Lamp\n ※Recipe: \n\t+ 5 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /RABBITOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:mask_dollrepairedhat(ID Complete)": {
        "prefix": "p+mask_dollrepairedhat",
        "body": "\"mask_dollrepairedhat\"",
        "description": " ※prefab ID: mask_dollrepairedhat\n ※Name: Shattered Doll Mask\n ※prefab Version: DST-632551 "
    },
    "prefab:mask_dollrepairedhat(ReverseSearch)": {
        "prefix": "p+Shattered Doll Mask",
        "body": "\"mask_dollrepairedhat\"",
        "description": " ※prefab ID: mask_dollrepairedhat\n ※Name: Shattered Doll Mask\n ※prefab Version: DST-632551 "
    },
    "prefab:hermit_pearl(ID Complete)": {
        "prefix": "p+hermit_pearl",
        "body": "\"hermit_pearl\"",
        "description": " ※prefab ID: hermit_pearl\n ※Name: Pearl's Pearl\n ※prefab Version: DST-632551 "
    },
    "prefab:hermit_pearl(ReverseSearch)": {
        "prefix": "p+Pearl's Pearl",
        "body": "\"hermit_pearl\"",
        "description": " ※prefab ID: hermit_pearl\n ※Name: Pearl's Pearl\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishinglure_spinner_yellow(ID Complete)": {
        "prefix": "p+oceanfishinglure_spinner_yellow",
        "body": "\"oceanfishinglure_spinner_yellow\"",
        "description": " ※prefab ID: oceanfishinglure_spinner_yellow\n ※Name: not used\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishinglure_spinner_yellow(ReverseSearch)": {
        "prefix": "p+not used",
        "body": "\"oceanfishinglure_spinner_yellow\"",
        "description": " ※prefab ID: oceanfishinglure_spinner_yellow\n ※Name: not used\n ※prefab Version: DST-632551 "
    },
    "prefab:daywalker_pillar(ID Complete)": {
        "prefix": "p+daywalker_pillar",
        "body": "\"daywalker_pillar\"",
        "description": " ※prefab ID: daywalker_pillar\n ※Name: Cracked Pillar\n ※prefab Version: DST-632551 "
    },
    "prefab:daywalker_pillar(ReverseSearch)": {
        "prefix": "p+Cracked Pillar",
        "body": "\"daywalker_pillar\"",
        "description": " ※prefab ID: daywalker_pillar\n ※Name: Cracked Pillar\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_063(ID Complete)": {
        "prefix": "p+quagmire_food_063",
        "body": "\"quagmire_food_063\"",
        "description": " ※prefab ID: quagmire_food_063\n ※Name: Crab Roll\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_063(ReverseSearch)": {
        "prefix": "p+Crab Roll",
        "body": "\"quagmire_food_063\"",
        "description": " ※prefab ID: quagmire_food_063\n ※Name: Crab Roll\n ※prefab Version: DST-632551 "
    },
    "prefab:lantern(ID Complete)": {
        "prefix": "p+lantern",
        "body": "\"lantern\"",
        "description": " ※prefab ID: lantern\n ※Name: Lantern\n ※Recipe: \n\t+ 3 x: Twigs/twigs\n\t+ 2 x: Rope/rope\n\t+ 2 x: Light Bulb/lightbulb\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:lantern(ReverseSearch)": {
        "prefix": "p+Lantern",
        "body": "\"lantern\"",
        "description": " ※prefab ID: lantern\n ※Name: Lantern\n ※Recipe: \n\t+ 3 x: Twigs/twigs\n\t+ 2 x: Rope/rope\n\t+ 2 x: Light Bulb/lightbulb\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_065(ID Complete)": {
        "prefix": "p+quagmire_food_065",
        "body": "\"quagmire_food_065\"",
        "description": " ※prefab ID: quagmire_food_065\n ※Name: Crab Ravioli\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_065(ReverseSearch)": {
        "prefix": "p+Crab Ravioli",
        "body": "\"quagmire_food_065\"",
        "description": " ※prefab ID: quagmire_food_065\n ※Name: Crab Ravioli\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_051(ID Complete)": {
        "prefix": "p+quagmire_food_051",
        "body": "\"quagmire_food_051\"",
        "description": " ※prefab ID: quagmire_food_051\n ※Name: Manicotti\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_051(ReverseSearch)": {
        "prefix": "p+Manicotti",
        "body": "\"quagmire_food_051\"",
        "description": " ※prefab ID: quagmire_food_051\n ※Name: Manicotti\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_008(ID Complete)": {
        "prefix": "p+quagmire_food_008",
        "body": "\"quagmire_food_008\"",
        "description": " ※prefab ID: quagmire_food_008\n ※Name: Potato Soup\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_008(ReverseSearch)": {
        "prefix": "p+Potato Soup",
        "body": "\"quagmire_food_008\"",
        "description": " ※prefab ID: quagmire_food_008\n ※Name: Potato Soup\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_rubble_roof(ID Complete)": {
        "prefix": "p+quagmire_rubble_roof",
        "body": "\"quagmire_rubble_roof\"",
        "description": " ※prefab ID: quagmire_rubble_roof\n ※Name: Dilapidated Roof\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_rubble_roof(ReverseSearch)": {
        "prefix": "p+Dilapidated Roof",
        "body": "\"quagmire_rubble_roof\"",
        "description": " ※prefab ID: quagmire_rubble_roof\n ※Name: Dilapidated Roof\n ※prefab Version: DST-632551 "
    },
    "prefab:oceantreenut(ID Complete)": {
        "prefix": "p+oceantreenut",
        "body": "\"oceantreenut\"",
        "description": " ※prefab ID: oceantreenut\n ※Name: Knobbly Tree Nut\n ※prefab Version: DST-632551 "
    },
    "prefab:oceantreenut(ReverseSearch)": {
        "prefix": "p+Knobbly Tree Nut",
        "body": "\"oceantreenut\"",
        "description": " ※prefab ID: oceantreenut\n ※Name: Knobbly Tree Nut\n ※prefab Version: DST-632551 "
    },
    "prefab:known_watermelon_seeds(ID Complete)": {
        "prefix": "p+known_watermelon_seeds",
        "body": "\"known_watermelon_seeds\"",
        "description": " ※prefab ID: known_watermelon_seeds\n ※Name: Watermelon Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:known_watermelon_seeds(ReverseSearch)": {
        "prefix": "p+Watermelon Seeds",
        "body": "\"known_watermelon_seeds\"",
        "description": " ※prefab ID: known_watermelon_seeds\n ※Name: Watermelon Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:deerclops(ID Complete)": {
        "prefix": "p+deerclops",
        "body": "\"deerclops\"",
        "description": " ※prefab ID: deerclops\n ※Name: Deerclops\n ※prefab Version: DST-632551 "
    },
    "prefab:deerclops(ReverseSearch)": {
        "prefix": "p+Deerclops",
        "body": "\"deerclops\"",
        "description": " ※prefab ID: deerclops\n ※Name: Deerclops\n ※prefab Version: DST-632551 "
    },
    "prefab:walterhat(ID Complete)": {
        "prefix": "p+walterhat",
        "body": "\"walterhat\"",
        "description": " ※prefab ID: walterhat\n ※Name: Pinetree Pioneer Hat\n ※Recipe: \n\t+ 4 x: Silk/silk\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:walterhat(ReverseSearch)": {
        "prefix": "p+Pinetree Pioneer Hat",
        "body": "\"walterhat\"",
        "description": " ※prefab ID: walterhat\n ※Name: Pinetree Pioneer Hat\n ※Recipe: \n\t+ 4 x: Silk/silk\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:dragonfruit_oversized_rotten(ID Complete)": {
        "prefix": "p+dragonfruit_oversized_rotten",
        "body": "\"dragonfruit_oversized_rotten\"",
        "description": " ※prefab ID: dragonfruit_oversized_rotten\n ※Name: Giant Rotting Dragon Fruit\n ※prefab Version: DST-632551 "
    },
    "prefab:dragonfruit_oversized_rotten(ReverseSearch)": {
        "prefix": "p+Giant Rotting Dragon Fruit",
        "body": "\"dragonfruit_oversized_rotten\"",
        "description": " ※prefab ID: dragonfruit_oversized_rotten\n ※Name: Giant Rotting Dragon Fruit\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_035(ID Complete)": {
        "prefix": "p+quagmire_food_035",
        "body": "\"quagmire_food_035\"",
        "description": " ※prefab ID: quagmire_food_035\n ※Name: Mushroom Burger\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_035(ReverseSearch)": {
        "prefix": "p+Mushroom Burger",
        "body": "\"quagmire_food_035\"",
        "description": " ※prefab ID: quagmire_food_035\n ※Name: Mushroom Burger\n ※prefab Version: DST-632551 "
    },
    "prefab:monkey(ID Complete)": {
        "prefix": "p+monkey",
        "body": "\"monkey\"",
        "description": " ※prefab ID: monkey\n ※Name: Splumonkey\n ※prefab Version: DST-632551 "
    },
    "prefab:monkey(ReverseSearch)": {
        "prefix": "p+Splumonkey",
        "body": "\"monkey\"",
        "description": " ※prefab ID: monkey\n ※Name: Splumonkey\n ※prefab Version: DST-632551 "
    },
    "prefab:pickaxe_lunarplant(ID Complete)": {
        "prefix": "p+pickaxe_lunarplant",
        "body": "\"pickaxe_lunarplant\"",
        "description": " ※prefab ID: pickaxe_lunarplant\n ※Name: Brightshade Smasher\n ※Recipe: \n\t+ 1 x: Pure Brilliance/purebrilliance\n\t+ 2 x: Brightshade Husk/lunarplant_husk\n ※Required Tech: \n\t+ LV.2 : Brightsmithy/LUNARFORGING\n ※prefab Version: DST-632551 "
    },
    "prefab:pickaxe_lunarplant(ReverseSearch)": {
        "prefix": "p+Brightshade Smasher",
        "body": "\"pickaxe_lunarplant\"",
        "description": " ※prefab ID: pickaxe_lunarplant\n ※Name: Brightshade Smasher\n ※Recipe: \n\t+ 1 x: Pure Brilliance/purebrilliance\n\t+ 2 x: Brightshade Husk/lunarplant_husk\n ※Required Tech: \n\t+ LV.2 : Brightsmithy/LUNARFORGING\n ※prefab Version: DST-632551 "
    },
    "prefab:singingshell_octave3(ID Complete)": {
        "prefix": "p+singingshell_octave3",
        "body": "\"singingshell_octave3\"",
        "description": " ※prefab ID: singingshell_octave3\n ※Name: Baritone Shell Bell\n ※prefab Version: DST-632551 "
    },
    "prefab:singingshell_octave3(ReverseSearch)": {
        "prefix": "p+Baritone Shell Bell",
        "body": "\"singingshell_octave3\"",
        "description": " ※prefab ID: singingshell_octave3\n ※Name: Baritone Shell Bell\n ※prefab Version: DST-632551 "
    },
    "prefab:beefalo(ID Complete)": {
        "prefix": "p+beefalo",
        "body": "\"beefalo\"",
        "description": " ※prefab ID: beefalo\n ※Name: Beefalo\n ※prefab Version: DST-632551 "
    },
    "prefab:beefalo(ReverseSearch)": {
        "prefix": "p+Beefalo",
        "body": "\"beefalo\"",
        "description": " ※prefab ID: beefalo\n ※Name: Beefalo\n ※prefab Version: DST-632551 "
    },
    "prefab:punchingbag_shadow(ID Complete)": {
        "prefix": "p+punchingbag_shadow",
        "body": "\"punchingbag_shadow\"",
        "description": " ※prefab ID: punchingbag_shadow\n ※Name: Shadow Boxer\n ※Recipe: \n\t+ 3 x: Cut Grass/cutgrass\n\t+ 1 x: Boards/boards\n\t+ 1 x: Pure Horror/horrorfuel\n ※Required Tech: \n\t+ LV.2 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:punchingbag_shadow(ReverseSearch)": {
        "prefix": "p+Shadow Boxer",
        "body": "\"punchingbag_shadow\"",
        "description": " ※prefab ID: punchingbag_shadow\n ※Name: Shadow Boxer\n ※Recipe: \n\t+ 3 x: Cut Grass/cutgrass\n\t+ 1 x: Boards/boards\n\t+ 1 x: Pure Horror/horrorfuel\n ※Required Tech: \n\t+ LV.2 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:seastack(ID Complete)": {
        "prefix": "p+seastack",
        "body": "\"seastack\"",
        "description": " ※prefab ID: seastack\n ※Name: Sea Stack\n ※prefab Version: DST-632551 "
    },
    "prefab:seastack(ReverseSearch)": {
        "prefix": "p+Sea Stack",
        "body": "\"seastack\"",
        "description": " ※prefab ID: seastack\n ※Name: Sea Stack\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_041(ID Complete)": {
        "prefix": "p+quagmire_food_041",
        "body": "\"quagmire_food_041\"",
        "description": " ※prefab ID: quagmire_food_041\n ※Name: Shepherd's Pie\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_041(ReverseSearch)": {
        "prefix": "p+Shepherd's Pie",
        "body": "\"quagmire_food_041\"",
        "description": " ※prefab ID: quagmire_food_041\n ※Name: Shepherd's Pie\n ※prefab Version: DST-632551 "
    },
    "prefab:gnarwail(ID Complete)": {
        "prefix": "p+gnarwail",
        "body": "\"gnarwail\"",
        "description": " ※prefab ID: gnarwail\n ※Name: Gnarwail\n ※prefab Version: DST-632551 "
    },
    "prefab:gnarwail(ReverseSearch)": {
        "prefix": "p+Gnarwail",
        "body": "\"gnarwail\"",
        "description": " ※prefab ID: gnarwail\n ※Name: Gnarwail\n ※prefab Version: DST-632551 "
    },
    "prefab:voidcloth(ID Complete)": {
        "prefix": "p+voidcloth",
        "body": "\"voidcloth\"",
        "description": " ※prefab ID: voidcloth\n ※Name: Dark Tatters\n ※prefab Version: DST-632551 "
    },
    "prefab:voidcloth(ReverseSearch)": {
        "prefix": "p+Dark Tatters",
        "body": "\"voidcloth\"",
        "description": " ※prefab ID: voidcloth\n ※Name: Dark Tatters\n ※prefab Version: DST-632551 "
    },
    "prefab:fruitflyfruit(ID Complete)": {
        "prefix": "p+fruitflyfruit",
        "body": "\"fruitflyfruit\"",
        "description": " ※prefab ID: fruitflyfruit\n ※Name: Friendly Fruit Fly Fruit\n ※prefab Version: DST-632551 "
    },
    "prefab:fruitflyfruit(ReverseSearch)": {
        "prefix": "p+Friendly Fruit Fly Fruit",
        "body": "\"fruitflyfruit\"",
        "description": " ※prefab ID: fruitflyfruit\n ※Name: Friendly Fruit Fly Fruit\n ※prefab Version: DST-632551 "
    },
    "prefab:carpentry_blade_moonglass(ID Complete)": {
        "prefix": "p+carpentry_blade_moonglass",
        "body": "\"carpentry_blade_moonglass\"",
        "description": " ※prefab ID: carpentry_blade_moonglass\n ※Name: Moon Glass Saw Blade\n ※Recipe: \n\t+ 6 x: Moon Shard/moonglass\n\t+ 1 x: Moon Moth/moonbutterfly\n ※Required Tech: \n\t+ LV.3 : Celestial/CELESTIAL\n ※prefab Version: DST-632551 "
    },
    "prefab:carpentry_blade_moonglass(ReverseSearch)": {
        "prefix": "p+Moon Glass Saw Blade",
        "body": "\"carpentry_blade_moonglass\"",
        "description": " ※prefab ID: carpentry_blade_moonglass\n ※Name: Moon Glass Saw Blade\n ※Recipe: \n\t+ 6 x: Moon Shard/moonglass\n\t+ 1 x: Moon Moth/moonbutterfly\n ※Required Tech: \n\t+ LV.3 : Celestial/CELESTIAL\n ※prefab Version: DST-632551 "
    },
    "prefab:goldnugget(ID Complete)": {
        "prefix": "p+goldnugget",
        "body": "\"goldnugget\"",
        "description": " ※prefab ID: goldnugget\n ※Name: Gold Nugget\n ※prefab Version: DST-632551 "
    },
    "prefab:goldnugget(ReverseSearch)": {
        "prefix": "p+Gold Nugget",
        "body": "\"goldnugget\"",
        "description": " ※prefab ID: goldnugget\n ※Name: Gold Nugget\n ※prefab Version: DST-632551 "
    },
    "prefab:beefalotreat(ID Complete)": {
        "prefix": "p+beefalotreat",
        "body": "\"beefalotreat\"",
        "description": " ※prefab ID: beefalotreat\n ※Name: Beefalo Treats\n ※prefab Version: DST-632551 "
    },
    "prefab:beefalotreat(ReverseSearch)": {
        "prefix": "p+Beefalo Treats",
        "body": "\"beefalotreat\"",
        "description": " ※prefab ID: beefalotreat\n ※Name: Beefalo Treats\n ※prefab Version: DST-632551 "
    },
    "prefab:shadowthrall_mouth(ID Complete)": {
        "prefix": "p+shadowthrall_mouth",
        "body": "\"shadowthrall_mouth\"",
        "description": " ※prefab ID: shadowthrall_mouth\n ※Name: Ink Blight\n ※prefab Version: DST-632551 "
    },
    "prefab:shadowthrall_mouth(ReverseSearch)": {
        "prefix": "p+Ink Blight",
        "body": "\"shadowthrall_mouth\"",
        "description": " ※prefab ID: shadowthrall_mouth\n ※Name: Ink Blight\n ※prefab Version: DST-632551 "
    },
    "prefab:crop(ID Complete)": {
        "prefix": "p+crop",
        "body": "\"crop\"",
        "description": " ※prefab ID: crop\n ※Name: Crop\n ※prefab Version: DST-632551 "
    },
    "prefab:crop(ReverseSearch)": {
        "prefix": "p+Crop",
        "body": "\"crop\"",
        "description": " ※prefab ID: crop\n ※Name: Crop\n ※prefab Version: DST-632551 "
    },
    "prefab:rock_moon_shell(ID Complete)": {
        "prefix": "p+rock_moon_shell",
        "body": "\"rock_moon_shell\"",
        "description": " ※prefab ID: rock_moon_shell\n ※Name: Suspicious Boulder\n ※prefab Version: DST-632551 "
    },
    "prefab:rock_moon_shell(ReverseSearch)": {
        "prefix": "p+Suspicious Boulder",
        "body": "\"rock_moon_shell\"",
        "description": " ※prefab ID: rock_moon_shell\n ※Name: Suspicious Boulder\n ※prefab Version: DST-632551 "
    },
    "prefab:beef_bell(ID Complete)": {
        "prefix": "p+beef_bell",
        "body": "\"beef_bell\"",
        "description": " ※prefab ID: beef_bell\n ※Name: Beefalo Bell\n ※Recipe: \n\t+ 3 x: Gold Nugget/goldnugget\n\t+ 1 x: Flint/flint\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:beef_bell(ReverseSearch)": {
        "prefix": "p+Beefalo Bell",
        "body": "\"beef_bell\"",
        "description": " ※prefab ID: beef_bell\n ※Name: Beefalo Bell\n ※Recipe: \n\t+ 3 x: Gold Nugget/goldnugget\n\t+ 1 x: Flint/flint\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:mushroom_farm(ID Complete)": {
        "prefix": "p+mushroom_farm",
        "body": "\"mushroom_farm\"",
        "description": " ※prefab ID: mushroom_farm\n ※Name: Mushroom Planter\n ※Recipe: \n\t+ 8 x: Rot/spoiled_food\n\t+ 5 x: Manure/poop\n\t+ 2 x: Living Log/livinglog\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:mushroom_farm(ReverseSearch)": {
        "prefix": "p+Mushroom Planter",
        "body": "\"mushroom_farm\"",
        "description": " ※prefab ID: mushroom_farm\n ※Name: Mushroom Planter\n ※Recipe: \n\t+ 8 x: Rot/spoiled_food\n\t+ 5 x: Manure/poop\n\t+ 2 x: Living Log/livinglog\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_medium_8_inv(ID Complete)": {
        "prefix": "p+oceanfish_medium_8_inv",
        "body": "\"oceanfish_medium_8_inv\"",
        "description": " ※prefab ID: oceanfish_medium_8_inv\n ※Name: Ice Bream\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_medium_8_inv(ReverseSearch)": {
        "prefix": "p+Ice Bream",
        "body": "\"oceanfish_medium_8_inv\"",
        "description": " ※prefab ID: oceanfish_medium_8_inv\n ※Name: Ice Bream\n ※prefab Version: DST-632551 "
    },
    "prefab:spider_spitter(ID Complete)": {
        "prefix": "p+spider_spitter",
        "body": "\"spider_spitter\"",
        "description": " ※prefab ID: spider_spitter\n ※Name: Spitter\n ※prefab Version: DST-632551 "
    },
    "prefab:spider_spitter(ReverseSearch)": {
        "prefix": "p+Spitter",
        "body": "\"spider_spitter\"",
        "description": " ※prefab ID: spider_spitter\n ※Name: Spitter\n ※prefab Version: DST-632551 "
    },
    "prefab:lunarthrall_plant(ID Complete)": {
        "prefix": "p+lunarthrall_plant",
        "body": "\"lunarthrall_plant\"",
        "description": " ※prefab ID: lunarthrall_plant\n ※Name: Deadly Brightshade\n ※prefab Version: DST-632551 "
    },
    "prefab:lunarthrall_plant(ReverseSearch)": {
        "prefix": "p+Deadly Brightshade",
        "body": "\"lunarthrall_plant\"",
        "description": " ※prefab ID: lunarthrall_plant\n ※Name: Deadly Brightshade\n ※prefab Version: DST-632551 "
    },
    "prefab:portablespicer_item(ID Complete)": {
        "prefix": "p+portablespicer_item",
        "body": "\"portablespicer_item\"",
        "description": " ※prefab ID: portablespicer_item\n ※Name: Portable Seasoning Station\n ※Recipe: \n\t+ 2 x: Gold Nugget/goldnugget\n\t+ 3 x: Cut Stone/cutstone\n\t+ 6 x: Twigs/twigs\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:portablespicer_item(ReverseSearch)": {
        "prefix": "p+Portable Seasoning Station",
        "body": "\"portablespicer_item\"",
        "description": " ※prefab ID: portablespicer_item\n ※Name: Portable Seasoning Station\n ※Recipe: \n\t+ 2 x: Gold Nugget/goldnugget\n\t+ 3 x: Cut Stone/cutstone\n\t+ 6 x: Twigs/twigs\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:mutatedbearger(ID Complete)": {
        "prefix": "p+mutatedbearger",
        "body": "\"mutatedbearger\"",
        "description": " ※prefab ID: mutatedbearger\n ※Name: Armored Bearger\n ※prefab Version: DST-632551 "
    },
    "prefab:mutatedbearger(ReverseSearch)": {
        "prefix": "p+Armored Bearger",
        "body": "\"mutatedbearger\"",
        "description": " ※prefab ID: mutatedbearger\n ※Name: Armored Bearger\n ※prefab Version: DST-632551 "
    },
    "prefab:critter_eyeofterror(ID Complete)": {
        "prefix": "p+critter_eyeofterror",
        "body": "\"critter_eyeofterror\"",
        "description": " ※prefab ID: critter_eyeofterror\n ※Name: Friendly Peeper\n ※prefab Version: DST-632551 "
    },
    "prefab:critter_eyeofterror(ReverseSearch)": {
        "prefix": "p+Friendly Peeper",
        "body": "\"critter_eyeofterror\"",
        "description": " ※prefab ID: critter_eyeofterror\n ※Name: Friendly Peeper\n ※prefab Version: DST-632551 "
    },
    "prefab:yotc_carrat_race_finish(ID Complete)": {
        "prefix": "p+yotc_carrat_race_finish",
        "body": "\"yotc_carrat_race_finish\"",
        "description": " ※prefab ID: yotc_carrat_race_finish\n ※Name: Finish Line\n ※Recipe: \n\t+ 1 x: Gold Nugget/goldnugget\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:yotc_carrat_race_finish(ReverseSearch)": {
        "prefix": "p+Finish Line",
        "body": "\"yotc_carrat_race_finish\"",
        "description": " ※prefab ID: yotc_carrat_race_finish\n ※Name: Finish Line\n ※Recipe: \n\t+ 1 x: Gold Nugget/goldnugget\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:deerclopseyeball_sentryward(ID Complete)": {
        "prefix": "p+deerclopseyeball_sentryward",
        "body": "\"deerclopseyeball_sentryward\"",
        "description": " ※prefab ID: deerclopseyeball_sentryward\n ※Name: Ice Crystaleyezer\n ※Recipe: \n\t+ 1 x: Spark Ark/security_pulse_cage_full\n\t+ 8 x: Moon Shard/moonglass\n\t+ 5 x: Pure Brilliance/purebrilliance\n\t+ 3 x: Moon Rock/moonrocknugget\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:deerclopseyeball_sentryward(ReverseSearch)": {
        "prefix": "p+Ice Crystaleyezer",
        "body": "\"deerclopseyeball_sentryward\"",
        "description": " ※prefab ID: deerclopseyeball_sentryward\n ※Name: Ice Crystaleyezer\n ※Recipe: \n\t+ 1 x: Spark Ark/security_pulse_cage_full\n\t+ 8 x: Moon Shard/moonglass\n\t+ 5 x: Pure Brilliance/purebrilliance\n\t+ 3 x: Moon Rock/moonrocknugget\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:compostwrap(ID Complete)": {
        "prefix": "p+compostwrap",
        "body": "\"compostwrap\"",
        "description": " ※prefab ID: compostwrap\n ※Name: Compost Wrap\n ※Recipe: \n\t+ 5 x: Manure/poop\n\t+ 2 x: Rot/spoiled_food\n\t+ 1 x: Nitre/nitre\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:compostwrap(ReverseSearch)": {
        "prefix": "p+Compost Wrap",
        "body": "\"compostwrap\"",
        "description": " ※prefab ID: compostwrap\n ※Name: Compost Wrap\n ※Recipe: \n\t+ 5 x: Manure/poop\n\t+ 2 x: Rot/spoiled_food\n\t+ 1 x: Nitre/nitre\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:mushroomsprout(ID Complete)": {
        "prefix": "p+mushroomsprout",
        "body": "\"mushroomsprout\"",
        "description": " ※prefab ID: mushroomsprout\n ※Name: Sporecap\n ※prefab Version: DST-632551 "
    },
    "prefab:mushroomsprout(ReverseSearch)": {
        "prefix": "p+Sporecap",
        "body": "\"mushroomsprout\"",
        "description": " ※prefab ID: mushroomsprout\n ※Name: Sporecap\n ※prefab Version: DST-632551 "
    },
    "prefab:robin(ID Complete)": {
        "prefix": "p+robin",
        "body": "\"robin\"",
        "description": " ※prefab ID: robin\n ※Name: Redbird\n ※prefab Version: DST-632551 "
    },
    "prefab:robin(ReverseSearch)": {
        "prefix": "p+Redbird",
        "body": "\"robin\"",
        "description": " ※prefab ID: robin\n ※Name: Redbird\n ※prefab Version: DST-632551 "
    },
    "prefab:ancienttree_nightvision_sapling_item(ID Complete)": {
        "prefix": "p+ancienttree_nightvision_sapling_item",
        "body": "\"ancienttree_nightvision_sapling_item\"",
        "description": " ※prefab ID: ancienttree_nightvision_sapling_item\n ※Name: Gloomthorn Sapling\n ※prefab Version: DST-632551 "
    },
    "prefab:ancienttree_nightvision_sapling_item(ReverseSearch)": {
        "prefix": "p+Gloomthorn Sapling",
        "body": "\"ancienttree_nightvision_sapling_item\"",
        "description": " ※prefab ID: ancienttree_nightvision_sapling_item\n ※Name: Gloomthorn Sapling\n ※prefab Version: DST-632551 "
    },
    "prefab:shadow_forge(ID Complete)": {
        "prefix": "p+shadow_forge",
        "body": "\"shadow_forge\"",
        "description": " ※prefab ID: shadow_forge\n ※Name: Shadowcraft Plinth\n ※Recipe: \n\t+ 5 x: Nightmare Fuel/nightmarefuel\n\t+ 2 x: Dreadstone/dreadstone\n\t+ 1 x: Pure Horror/horrorfuel\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:shadow_forge(ReverseSearch)": {
        "prefix": "p+Shadowcraft Plinth",
        "body": "\"shadow_forge\"",
        "description": " ※prefab ID: shadow_forge\n ※Name: Shadowcraft Plinth\n ※Recipe: \n\t+ 5 x: Nightmare Fuel/nightmarefuel\n\t+ 2 x: Dreadstone/dreadstone\n\t+ 1 x: Pure Horror/horrorfuel\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:wx78module_movespeed(ID Complete)": {
        "prefix": "p+wx78module_movespeed",
        "body": "\"wx78module_movespeed\"",
        "description": " ※prefab ID: wx78module_movespeed\n ※Name: Acceleration Circuit\n ※Recipe: \n\t+ 2 x: Bio Data/scandata\n\t+ 1 x: Rabbit/rabbit\n ※Required Tech: \n\t+ LV.1 : Circuitry/ROBOTMODULECRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:wx78module_movespeed(ReverseSearch)": {
        "prefix": "p+Acceleration Circuit",
        "body": "\"wx78module_movespeed\"",
        "description": " ※prefab ID: wx78module_movespeed\n ※Name: Acceleration Circuit\n ※Recipe: \n\t+ 2 x: Bio Data/scandata\n\t+ 1 x: Rabbit/rabbit\n ※Required Tech: \n\t+ LV.1 : Circuitry/ROBOTMODULECRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:archive_centipede(ID Complete)": {
        "prefix": "p+archive_centipede",
        "body": "\"archive_centipede\"",
        "description": " ※prefab ID: archive_centipede\n ※Name: Ancient Sentrypede\n ※prefab Version: DST-632551 "
    },
    "prefab:archive_centipede(ReverseSearch)": {
        "prefix": "p+Ancient Sentrypede",
        "body": "\"archive_centipede\"",
        "description": " ※prefab ID: archive_centipede\n ※Name: Ancient Sentrypede\n ※prefab Version: DST-632551 "
    },
    "prefab:purplegem(ID Complete)": {
        "prefix": "p+purplegem",
        "body": "\"purplegem\"",
        "description": " ※prefab ID: purplegem\n ※Name: Purple Gem\n ※Recipe: \n\t+ 1 x: Red Gem/redgem\n\t+ 1 x: Blue Gem/bluegem\n ※Required Tech: \n\t+ LV.2 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:purplegem(ReverseSearch)": {
        "prefix": "p+Purple Gem",
        "body": "\"purplegem\"",
        "description": " ※prefab ID: purplegem\n ※Name: Purple Gem\n ※Recipe: \n\t+ 1 x: Red Gem/redgem\n\t+ 1 x: Blue Gem/bluegem\n ※Required Tech: \n\t+ LV.2 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:wereitem_moose(ID Complete)": {
        "prefix": "p+wereitem_moose",
        "body": "\"wereitem_moose\"",
        "description": " ※prefab ID: wereitem_moose\n ※Name: Kitschy Moose Idol\n ※Recipe: \n\t+ 3 x: Monster Meat/monstermeat\n\t+ 2 x: Cut Grass/cutgrass\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:wereitem_moose(ReverseSearch)": {
        "prefix": "p+Kitschy Moose Idol",
        "body": "\"wereitem_moose\"",
        "description": " ※prefab ID: wereitem_moose\n ※Name: Kitschy Moose Idol\n ※Recipe: \n\t+ 3 x: Monster Meat/monstermeat\n\t+ 2 x: Cut Grass/cutgrass\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:wateringcan(ID Complete)": {
        "prefix": "p+wateringcan",
        "body": "\"wateringcan\"",
        "description": " ※prefab ID: wateringcan\n ※Name: Empty Watering Can\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 1 x: Rope/rope\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:wateringcan(ReverseSearch)": {
        "prefix": "p+Empty Watering Can",
        "body": "\"wateringcan\"",
        "description": " ※prefab ID: wateringcan\n ※Name: Empty Watering Can\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 1 x: Rope/rope\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:moonbutterflywings(ID Complete)": {
        "prefix": "p+moonbutterflywings",
        "body": "\"moonbutterflywings\"",
        "description": " ※prefab ID: moonbutterflywings\n ※Name: Moon Moth Wings\n ※prefab Version: DST-632551 "
    },
    "prefab:moonbutterflywings(ReverseSearch)": {
        "prefix": "p+Moon Moth Wings",
        "body": "\"moonbutterflywings\"",
        "description": " ※prefab ID: moonbutterflywings\n ※Name: Moon Moth Wings\n ※prefab Version: DST-632551 "
    },
    "prefab:decor_lamp(ID Complete)": {
        "prefix": "p+decor_lamp",
        "body": "\"decor_lamp\"",
        "description": " ※prefab ID: decor_lamp\n ※Name: Table Lamp\n ※Recipe: \n\t+ 2 x: Twigs/twigs\n\t+ 2 x: Cat Tail/coontail\n\t+ 2 x: Light Bulb/lightbulb\n ※Required Tech: \n\t+ LV.2 : Carpentry/CARPENTRY\n ※prefab Version: DST-632551 "
    },
    "prefab:decor_lamp(ReverseSearch)": {
        "prefix": "p+Table Lamp",
        "body": "\"decor_lamp\"",
        "description": " ※prefab ID: decor_lamp\n ※Name: Table Lamp\n ※Recipe: \n\t+ 2 x: Twigs/twigs\n\t+ 2 x: Cat Tail/coontail\n\t+ 2 x: Light Bulb/lightbulb\n ※Required Tech: \n\t+ LV.2 : Carpentry/CARPENTRY\n ※prefab Version: DST-632551 "
    },
    "prefab:carnival_gametoken_multiple(ID Complete)": {
        "prefix": "p+carnival_gametoken_multiple",
        "body": "\"carnival_gametoken_multiple\"",
        "description": " ※prefab ID: carnival_gametoken_multiple\n ※Name: 3 Cawnival Tokens\n ※Recipe: \n\t+ 1 x: Gold Nugget/goldnugget\n ※Required Tech: \n\t+ LV.3 : Cawnival Creation/CARNIVAL_HOSTSHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:carnival_gametoken_multiple(ReverseSearch)": {
        "prefix": "p+3 Cawnival Tokens",
        "body": "\"carnival_gametoken_multiple\"",
        "description": " ※prefab ID: carnival_gametoken_multiple\n ※Name: 3 Cawnival Tokens\n ※Recipe: \n\t+ 1 x: Gold Nugget/goldnugget\n ※Required Tech: \n\t+ LV.3 : Cawnival Creation/CARNIVAL_HOSTSHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:telestaff(ID Complete)": {
        "prefix": "p+telestaff",
        "body": "\"telestaff\"",
        "description": " ※prefab ID: telestaff\n ※Name: Telelocator Staff\n ※Recipe: \n\t+ 4 x: Nightmare Fuel/nightmarefuel\n\t+ 2 x: Living Log/livinglog\n\t+ 2 x: Purple Gem/purplegem\n ※Required Tech: \n\t+ LV.3 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:telestaff(ReverseSearch)": {
        "prefix": "p+Telelocator Staff",
        "body": "\"telestaff\"",
        "description": " ※prefab ID: telestaff\n ※Name: Telelocator Staff\n ※Recipe: \n\t+ 4 x: Nightmare Fuel/nightmarefuel\n\t+ 2 x: Living Log/livinglog\n\t+ 2 x: Purple Gem/purplegem\n ※Required Tech: \n\t+ LV.3 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:potato_cooked(ID Complete)": {
        "prefix": "p+potato_cooked",
        "body": "\"potato_cooked\"",
        "description": " ※prefab ID: potato_cooked\n ※Name: Roasted Potato\n ※prefab Version: DST-632551 "
    },
    "prefab:potato_cooked(ReverseSearch)": {
        "prefix": "p+Roasted Potato",
        "body": "\"potato_cooked\"",
        "description": " ※prefab ID: potato_cooked\n ※Name: Roasted Potato\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_031(ID Complete)": {
        "prefix": "p+quagmire_food_031",
        "body": "\"quagmire_food_031\"",
        "description": " ※prefab ID: quagmire_food_031\n ※Name: Bruschetta\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_031(ReverseSearch)": {
        "prefix": "p+Bruschetta",
        "body": "\"quagmire_food_031\"",
        "description": " ※prefab ID: quagmire_food_031\n ※Name: Bruschetta\n ※prefab Version: DST-632551 "
    },
    "prefab:decor_pictureframe_drawing(ID Complete)": {
        "prefix": "p+decor_pictureframe_drawing",
        "body": "\"decor_pictureframe_drawing\"",
        "description": " ※prefab ID: decor_pictureframe_drawing\n ※Name: Framed Drawing\n ※prefab Version: DST-632551 "
    },
    "prefab:decor_pictureframe_drawing(ReverseSearch)": {
        "prefix": "p+Framed Drawing",
        "body": "\"decor_pictureframe_drawing\"",
        "description": " ※prefab ID: decor_pictureframe_drawing\n ※Name: Framed Drawing\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_fungus_green(ID Complete)": {
        "prefix": "p+turf_fungus_green",
        "body": "\"turf_fungus_green\"",
        "description": " ※prefab ID: turf_fungus_green\n ※Name: Fungal Turf\n ※Recipe: \n\t+ 1 x: Lichen/cutlichen\n\t+ 1 x: Green Spore/spore_small\n ※Required Tech: \n\t+ LV.2 : Landscaping/TURFCRAFTING\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_fungus_green(ReverseSearch)": {
        "prefix": "p+Fungal Turf",
        "body": "\"turf_fungus_green\"",
        "description": " ※prefab ID: turf_fungus_green\n ※Name: Fungal Turf\n ※Recipe: \n\t+ 1 x: Lichen/cutlichen\n\t+ 1 x: Green Spore/spore_small\n ※Required Tech: \n\t+ LV.2 : Landscaping/TURFCRAFTING\n ※prefab Version: DST-632551 "
    },
    "prefab:mask_kinghat(ID Complete)": {
        "prefix": "p+mask_kinghat",
        "body": "\"mask_kinghat\"",
        "description": " ※prefab ID: mask_kinghat\n ※Name: King Mask\n ※prefab Version: DST-632551 "
    },
    "prefab:mask_kinghat(ReverseSearch)": {
        "prefix": "p+King Mask",
        "body": "\"mask_kinghat\"",
        "description": " ※prefab ID: mask_kinghat\n ※Name: King Mask\n ※prefab Version: DST-632551 "
    },
    "prefab:crawlingnightmare(ID Complete)": {
        "prefix": "p+crawlingnightmare",
        "body": "\"crawlingnightmare\"",
        "description": " ※prefab ID: crawlingnightmare\n ※Name: Crawling Nightmare\n ※prefab Version: DST-632551 "
    },
    "prefab:crawlingnightmare(ReverseSearch)": {
        "prefix": "p+Crawling Nightmare",
        "body": "\"crawlingnightmare\"",
        "description": " ※prefab ID: crawlingnightmare\n ※Name: Crawling Nightmare\n ※prefab Version: DST-632551 "
    },
    "prefab:decor_pictureframe_drawn(ID Complete)": {
        "prefix": "p+decor_pictureframe_drawn",
        "body": "\"decor_pictureframe_drawn\"",
        "description": " ※prefab ID: decor_pictureframe_drawn\n ※Name: {item} Drawing\n ※prefab Version: DST-632551 "
    },
    "prefab:decor_pictureframe_drawn(ReverseSearch)": {
        "prefix": "p+{item} Drawing",
        "body": "\"decor_pictureframe_drawn\"",
        "description": " ※prefab ID: decor_pictureframe_drawn\n ※Name: {item} Drawing\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_casseroledish_small(ID Complete)": {
        "prefix": "p+quagmire_casseroledish_small",
        "body": "\"quagmire_casseroledish_small\"",
        "description": " ※prefab ID: quagmire_casseroledish_small\n ※Name: Small Casserole Dish\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_casseroledish_small(ReverseSearch)": {
        "prefix": "p+Small Casserole Dish",
        "body": "\"quagmire_casseroledish_small\"",
        "description": " ※prefab ID: quagmire_casseroledish_small\n ※Name: Small Casserole Dish\n ※prefab Version: DST-632551 "
    },
    "prefab:spear_wathgrithr_lightning(ID Complete)": {
        "prefix": "p+spear_wathgrithr_lightning",
        "body": "\"spear_wathgrithr_lightning\"",
        "description": " ※prefab ID: spear_wathgrithr_lightning\n ※Name: Elding Spear\n ※Recipe: \n\t+ 2 x: Twigs/twigs\n\t+ 2 x: Volt Goat Horn/lightninggoathorn\n\t+ 1 x: Beefalo Wool/beefalowool\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:spear_wathgrithr_lightning(ReverseSearch)": {
        "prefix": "p+Elding Spear",
        "body": "\"spear_wathgrithr_lightning\"",
        "description": " ※prefab ID: spear_wathgrithr_lightning\n ※Name: Elding Spear\n ※Recipe: \n\t+ 2 x: Twigs/twigs\n\t+ 2 x: Volt Goat Horn/lightninggoathorn\n\t+ 1 x: Beefalo Wool/beefalowool\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:staff_tornado(ID Complete)": {
        "prefix": "p+staff_tornado",
        "body": "\"staff_tornado\"",
        "description": " ※prefab ID: staff_tornado\n ※Name: Weather Pain\n ※Recipe: \n\t+ 10 x: Down Feather/goose_feather\n\t+ 1 x: Volt Goat Horn/lightninggoathorn\n\t+ 1 x: Gears/gears\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:staff_tornado(ReverseSearch)": {
        "prefix": "p+Weather Pain",
        "body": "\"staff_tornado\"",
        "description": " ※prefab ID: staff_tornado\n ※Name: Weather Pain\n ※Recipe: \n\t+ 10 x: Down Feather/goose_feather\n\t+ 1 x: Volt Goat Horn/lightninggoathorn\n\t+ 1 x: Gears/gears\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:trunk_cooked(ID Complete)": {
        "prefix": "p+trunk_cooked",
        "body": "\"trunk_cooked\"",
        "description": " ※prefab ID: trunk_cooked\n ※Name: Koalefant Trunk Steak\n ※prefab Version: DST-632551 "
    },
    "prefab:trunk_cooked(ReverseSearch)": {
        "prefix": "p+Koalefant Trunk Steak",
        "body": "\"trunk_cooked\"",
        "description": " ※prefab ID: trunk_cooked\n ※Name: Koalefant Trunk Steak\n ※prefab Version: DST-632551 "
    },
    "prefab:boatrace_checkpoint_throwable_deploykit(ID Complete)": {
        "prefix": "p+boatrace_checkpoint_throwable_deploykit",
        "body": "\"boatrace_checkpoint_throwable_deploykit\"",
        "description": " ※prefab ID: boatrace_checkpoint_throwable_deploykit\n ※Name: Race Checkpoint Kit\n ※Recipe: \n\t+ 2 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /DRAGONOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:boatrace_checkpoint_throwable_deploykit(ReverseSearch)": {
        "prefix": "p+Race Checkpoint Kit",
        "body": "\"boatrace_checkpoint_throwable_deploykit\"",
        "description": " ※prefab ID: boatrace_checkpoint_throwable_deploykit\n ※Name: Race Checkpoint Kit\n ※Recipe: \n\t+ 2 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /DRAGONOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:boatrace_primemate(ID Complete)": {
        "prefix": "p+boatrace_primemate",
        "body": "\"boatrace_primemate\"",
        "description": " ※prefab ID: boatrace_primemate\n ※Name: Charlie's Racer\n ※prefab Version: DST-632551 "
    },
    "prefab:boatrace_primemate(ReverseSearch)": {
        "prefix": "p+Charlie's Racer",
        "body": "\"boatrace_primemate\"",
        "description": " ※prefab ID: boatrace_primemate\n ※Name: Charlie's Racer\n ※prefab Version: DST-632551 "
    },
    "prefab:armor_lunarplant(ID Complete)": {
        "prefix": "p+armor_lunarplant",
        "body": "\"armor_lunarplant\"",
        "description": " ※prefab ID: armor_lunarplant\n ※Name: Brightshade Armor\n ※Recipe: \n\t+ 4 x: Pure Brilliance/purebrilliance\n\t+ 4 x: Brightshade Husk/lunarplant_husk\n ※Required Tech: \n\t+ LV.2 : Brightsmithy/LUNARFORGING\n ※prefab Version: DST-632551 "
    },
    "prefab:armor_lunarplant(ReverseSearch)": {
        "prefix": "p+Brightshade Armor",
        "body": "\"armor_lunarplant\"",
        "description": " ※prefab ID: armor_lunarplant\n ※Name: Brightshade Armor\n ※Recipe: \n\t+ 4 x: Pure Brilliance/purebrilliance\n\t+ 4 x: Brightshade Husk/lunarplant_husk\n ※Required Tech: \n\t+ LV.2 : Brightsmithy/LUNARFORGING\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishinglure_spoon_yellow(ID Complete)": {
        "prefix": "p+oceanfishinglure_spoon_yellow",
        "body": "\"oceanfishinglure_spoon_yellow\"",
        "description": " ※prefab ID: oceanfishinglure_spoon_yellow\n ※Name: not used\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishinglure_spoon_yellow(ReverseSearch)": {
        "prefix": "p+not used",
        "body": "\"oceanfishinglure_spoon_yellow\"",
        "description": " ※prefab ID: oceanfishinglure_spoon_yellow\n ※Name: not used\n ※prefab Version: DST-632551 "
    },
    "prefab:mast_yotd(ID Complete)": {
        "prefix": "p+mast_yotd",
        "body": "\"mast_yotd\"",
        "description": " ※prefab ID: mast_yotd\n ※Name: Dragonfly Wing Mast\n ※prefab Version: DST-632551 "
    },
    "prefab:mast_yotd(ReverseSearch)": {
        "prefix": "p+Dragonfly Wing Mast",
        "body": "\"mast_yotd\"",
        "description": " ※prefab ID: mast_yotd\n ※Name: Dragonfly Wing Mast\n ※prefab Version: DST-632551 "
    },
    "prefab:candybag(ID Complete)": {
        "prefix": "p+candybag",
        "body": "\"candybag\"",
        "description": " ※prefab ID: candybag\n ※Name: Candy Bag\n ※Recipe: \n\t+ 6 x: Cut Grass/cutgrass\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:candybag(ReverseSearch)": {
        "prefix": "p+Candy Bag",
        "body": "\"candybag\"",
        "description": " ※prefab ID: candybag\n ※Name: Candy Bag\n ※Recipe: \n\t+ 6 x: Cut Grass/cutgrass\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_moon_sketch(ID Complete)": {
        "prefix": "p+chesspiece_moon_sketch",
        "body": "\"chesspiece_moon_sketch\"",
        "description": " ※prefab ID: chesspiece_moon_sketch\n ※Name: 'Moon' Figure Sketch\n ※Recipe: \n\t+ 1 x: Papyrus/papyrus\n ※Required Tech: \n\t+ LV.3 : Celestial/CELESTIAL\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_moon_sketch(ReverseSearch)": {
        "prefix": "p+'Moon' Figure Sketch",
        "body": "\"chesspiece_moon_sketch\"",
        "description": " ※prefab ID: chesspiece_moon_sketch\n ※Name: 'Moon' Figure Sketch\n ※Recipe: \n\t+ 1 x: Papyrus/papyrus\n ※Required Tech: \n\t+ LV.3 : Celestial/CELESTIAL\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_015(ID Complete)": {
        "prefix": "p+quagmire_food_015",
        "body": "\"quagmire_food_015\"",
        "description": " ※prefab ID: quagmire_food_015\n ※Name: Meatloaf\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_015(ReverseSearch)": {
        "prefix": "p+Meatloaf",
        "body": "\"quagmire_food_015\"",
        "description": " ※prefab ID: quagmire_food_015\n ※Name: Meatloaf\n ※prefab Version: DST-632551 "
    },
    "prefab:yotc_carrat_gym_direction(ID Complete)": {
        "prefix": "p+yotc_carrat_gym_direction",
        "body": "\"yotc_carrat_gym_direction\"",
        "description": " ※prefab ID: yotc_carrat_gym_direction\n ※Name: Navigation Gym\n ※Recipe: \n\t+ 4 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:yotc_carrat_gym_direction(ReverseSearch)": {
        "prefix": "p+Navigation Gym",
        "body": "\"yotc_carrat_gym_direction\"",
        "description": " ※prefab ID: yotc_carrat_gym_direction\n ※Name: Navigation Gym\n ※Recipe: \n\t+ 4 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:acorn_sapling(ID Complete)": {
        "prefix": "p+acorn_sapling",
        "body": "\"acorn_sapling\"",
        "description": " ※prefab ID: acorn_sapling\n ※Name: Birchnut Sapling\n ※prefab Version: DST-632551 "
    },
    "prefab:acorn_sapling(ReverseSearch)": {
        "prefix": "p+Birchnut Sapling",
        "body": "\"acorn_sapling\"",
        "description": " ※prefab ID: acorn_sapling\n ※Name: Birchnut Sapling\n ※prefab Version: DST-632551 "
    },
    "prefab:babybeefalo(ID Complete)": {
        "prefix": "p+babybeefalo",
        "body": "\"babybeefalo\"",
        "description": " ※prefab ID: babybeefalo\n ※Name: Baby Beefalo\n ※prefab Version: DST-632551 "
    },
    "prefab:babybeefalo(ReverseSearch)": {
        "prefix": "p+Baby Beefalo",
        "body": "\"babybeefalo\"",
        "description": " ※prefab ID: babybeefalo\n ※Name: Baby Beefalo\n ※prefab Version: DST-632551 "
    },
    "prefab:scraphat(ID Complete)": {
        "prefix": "p+scraphat",
        "body": "\"scraphat\"",
        "description": " ※prefab ID: scraphat\n ※Name: Scrappy Chapauldron\n ※Recipe: \n\t+ 3 x: Scrap/wagpunk_bits\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:scraphat(ReverseSearch)": {
        "prefix": "p+Scrappy Chapauldron",
        "body": "\"scraphat\"",
        "description": " ※prefab ID: scraphat\n ※Name: Scrappy Chapauldron\n ※Recipe: \n\t+ 3 x: Scrap/wagpunk_bits\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_salt_rack(ID Complete)": {
        "prefix": "p+quagmire_salt_rack",
        "body": "\"quagmire_salt_rack\"",
        "description": " ※prefab ID: quagmire_salt_rack\n ※Name: Salt Rack\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_salt_rack(ReverseSearch)": {
        "prefix": "p+Salt Rack",
        "body": "\"quagmire_salt_rack\"",
        "description": " ※prefab ID: quagmire_salt_rack\n ※Name: Salt Rack\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_ruinstiles(ID Complete)": {
        "prefix": "p+turf_ruinstiles",
        "body": "\"turf_ruinstiles\"",
        "description": " ※prefab ID: turf_ruinstiles\n ※Name: Ancient Tilework\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n\t+ 1 x: Nightmare Fuel/nightmarefuel\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_ruinstiles(ReverseSearch)": {
        "prefix": "p+Ancient Tilework",
        "body": "\"turf_ruinstiles\"",
        "description": " ※prefab ID: turf_ruinstiles\n ※Name: Ancient Tilework\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n\t+ 1 x: Nightmare Fuel/nightmarefuel\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:worm_plant(ID Complete)": {
        "prefix": "p+worm_plant",
        "body": "\"worm_plant\"",
        "description": " ※prefab ID: worm_plant\n ※Name: Mysterious Plant\n ※prefab Version: DST-632551 "
    },
    "prefab:worm_plant(ReverseSearch)": {
        "prefix": "p+Mysterious Plant",
        "body": "\"worm_plant\"",
        "description": " ※prefab ID: worm_plant\n ※Name: Mysterious Plant\n ※prefab Version: DST-632551 "
    },
    "prefab:walkingplank_ancient(ID Complete)": {
        "prefix": "p+walkingplank_ancient",
        "body": "\"walkingplank_ancient\"",
        "description": " ※prefab ID: walkingplank_ancient\n ※Name: Archaic Plank\n ※prefab Version: DST-632551 "
    },
    "prefab:walkingplank_ancient(ReverseSearch)": {
        "prefix": "p+Archaic Plank",
        "body": "\"walkingplank_ancient\"",
        "description": " ※prefab ID: walkingplank_ancient\n ※Name: Archaic Plank\n ※prefab Version: DST-632551 "
    },
    "prefab:monstermeat_dried(ID Complete)": {
        "prefix": "p+monstermeat_dried",
        "body": "\"monstermeat_dried\"",
        "description": " ※prefab ID: monstermeat_dried\n ※Name: Monster Jerky\n ※prefab Version: DST-632551 "
    },
    "prefab:monstermeat_dried(ReverseSearch)": {
        "prefix": "p+Monster Jerky",
        "body": "\"monstermeat_dried\"",
        "description": " ※prefab ID: monstermeat_dried\n ※Name: Monster Jerky\n ※prefab Version: DST-632551 "
    },
    "prefab:wagstaff_tool_1(ID Complete)": {
        "prefix": "p+wagstaff_tool_1",
        "body": "\"wagstaff_tool_1\"",
        "description": " ※prefab ID: wagstaff_tool_1\n ※Name: Reticulating Buffer\n ※prefab Version: DST-632551 "
    },
    "prefab:wagstaff_tool_1(ReverseSearch)": {
        "prefix": "p+Reticulating Buffer",
        "body": "\"wagstaff_tool_1\"",
        "description": " ※prefab ID: wagstaff_tool_1\n ※Name: Reticulating Buffer\n ※prefab Version: DST-632551 "
    },
    "prefab:ancienttree_gem_sapling(ID Complete)": {
        "prefix": "p+ancienttree_gem_sapling",
        "body": "\"ancienttree_gem_sapling\"",
        "description": " ※prefab ID: ancienttree_gem_sapling\n ※Name: Young Sproutrock\n ※prefab Version: DST-632551 "
    },
    "prefab:ancienttree_gem_sapling(ReverseSearch)": {
        "prefix": "p+Young Sproutrock",
        "body": "\"ancienttree_gem_sapling\"",
        "description": " ※prefab ID: ancienttree_gem_sapling\n ※Name: Young Sproutrock\n ※prefab Version: DST-632551 "
    },
    "prefab:ancientfruit_gem(ID Complete)": {
        "prefix": "p+ancientfruit_gem",
        "body": "\"ancientfruit_gem\"",
        "description": " ※prefab ID: ancientfruit_gem\n ※Name: Geode Fruit\n ※prefab Version: DST-632551 "
    },
    "prefab:ancientfruit_gem(ReverseSearch)": {
        "prefix": "p+Geode Fruit",
        "body": "\"ancientfruit_gem\"",
        "description": " ※prefab ID: ancientfruit_gem\n ※Name: Geode Fruit\n ※prefab Version: DST-632551 "
    },
    "prefab:yotb_beefalo_doll_robot(ID Complete)": {
        "prefix": "p+yotb_beefalo_doll_robot",
        "body": "\"yotb_beefalo_doll_robot\"",
        "description": " ※prefab ID: yotb_beefalo_doll_robot\n ※Name: Ironclad Beefalo Doll\n ※prefab Version: DST-632551 "
    },
    "prefab:yotb_beefalo_doll_robot(ReverseSearch)": {
        "prefix": "p+Ironclad Beefalo Doll",
        "body": "\"yotb_beefalo_doll_robot\"",
        "description": " ※prefab ID: yotb_beefalo_doll_robot\n ※Name: Ironclad Beefalo Doll\n ※prefab Version: DST-632551 "
    },
    "prefab:ancientfruit_nightvision_cooked(ID Complete)": {
        "prefix": "p+ancientfruit_nightvision_cooked",
        "body": "\"ancientfruit_nightvision_cooked\"",
        "description": " ※prefab ID: ancientfruit_nightvision_cooked\n ※Name: Cooked Nightberry\n ※prefab Version: DST-632551 "
    },
    "prefab:ancientfruit_nightvision_cooked(ReverseSearch)": {
        "prefix": "p+Cooked Nightberry",
        "body": "\"ancientfruit_nightvision_cooked\"",
        "description": " ※prefab ID: ancientfruit_nightvision_cooked\n ※Name: Cooked Nightberry\n ※prefab Version: DST-632551 "
    },
    "prefab:halloweencandy_11(ID Complete)": {
        "prefix": "p+halloweencandy_11",
        "body": "\"halloweencandy_11\"",
        "description": " ※prefab ID: halloweencandy_11\n ※Name: Choco Pigs\n ※prefab Version: DST-632551 "
    },
    "prefab:halloweencandy_11(ReverseSearch)": {
        "prefix": "p+Choco Pigs",
        "body": "\"halloweencandy_11\"",
        "description": " ※prefab ID: halloweencandy_11\n ※Name: Choco Pigs\n ※prefab Version: DST-632551 "
    },
    "prefab:yotd_anchor_item(ID Complete)": {
        "prefix": "p+yotd_anchor_item",
        "body": "\"yotd_anchor_item\"",
        "description": " ※prefab ID: yotd_anchor_item\n ※Name: Claw Anchor Kit\n ※Recipe: \n\t+ 1 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /DRAGONOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:yotd_anchor_item(ReverseSearch)": {
        "prefix": "p+Claw Anchor Kit",
        "body": "\"yotd_anchor_item\"",
        "description": " ※prefab ID: yotd_anchor_item\n ※Name: Claw Anchor Kit\n ※Recipe: \n\t+ 1 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /DRAGONOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:blowdart_lava(ID Complete)": {
        "prefix": "p+blowdart_lava",
        "body": "\"blowdart_lava\"",
        "description": " ※prefab ID: blowdart_lava\n ※Name: Darts\n ※prefab Version: DST-632551 "
    },
    "prefab:blowdart_lava(ReverseSearch)": {
        "prefix": "p+Darts",
        "body": "\"blowdart_lava\"",
        "description": " ※prefab ID: blowdart_lava\n ※Name: Darts\n ※prefab Version: DST-632551 "
    },
    "prefab:tentacle(ID Complete)": {
        "prefix": "p+tentacle",
        "body": "\"tentacle\"",
        "description": " ※prefab ID: tentacle\n ※Name: Tentacle\n ※prefab Version: DST-632551 "
    },
    "prefab:tentacle(ReverseSearch)": {
        "prefix": "p+Tentacle",
        "body": "\"tentacle\"",
        "description": " ※prefab ID: tentacle\n ※Name: Tentacle\n ※prefab Version: DST-632551 "
    },
    "prefab:saltlick_improved(ID Complete)": {
        "prefix": "p+saltlick_improved",
        "body": "\"saltlick_improved\"",
        "description": " ※prefab ID: saltlick_improved\n ※Name: Gourmet Salt Lick\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 6 x: Salt Crystals/saltrock\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:saltlick_improved(ReverseSearch)": {
        "prefix": "p+Gourmet Salt Lick",
        "body": "\"saltlick_improved\"",
        "description": " ※prefab ID: saltlick_improved\n ※Name: Gourmet Salt Lick\n ※Recipe: \n\t+ 2 x: Boards/boards\n\t+ 6 x: Salt Crystals/saltrock\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:yot_catcoonshrine(ID Complete)": {
        "prefix": "p+yot_catcoonshrine",
        "body": "\"yot_catcoonshrine\"",
        "description": " ※prefab ID: yot_catcoonshrine\n ※Name: Catcoon Shrine\n ※Recipe: \n\t+ 4 x: Gold Nugget/goldnugget\n\t+ 2 x: Boards/boards\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:yot_catcoonshrine(ReverseSearch)": {
        "prefix": "p+Catcoon Shrine",
        "body": "\"yot_catcoonshrine\"",
        "description": " ※prefab ID: yot_catcoonshrine\n ※Name: Catcoon Shrine\n ※Recipe: \n\t+ 4 x: Gold Nugget/goldnugget\n\t+ 2 x: Boards/boards\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:blue_cap_cooked(ID Complete)": {
        "prefix": "p+blue_cap_cooked",
        "body": "\"blue_cap_cooked\"",
        "description": " ※prefab ID: blue_cap_cooked\n ※Name: Cooked Blue Cap\n ※prefab Version: DST-632551 "
    },
    "prefab:blue_cap_cooked(ReverseSearch)": {
        "prefix": "p+Cooked Blue Cap",
        "body": "\"blue_cap_cooked\"",
        "description": " ※prefab ID: blue_cap_cooked\n ※Name: Cooked Blue Cap\n ※prefab Version: DST-632551 "
    },
    "prefab:miniboatlantern(ID Complete)": {
        "prefix": "p+miniboatlantern",
        "body": "\"miniboatlantern\"",
        "description": " ※prefab ID: miniboatlantern\n ※Name: Floating Lantern\n ※Recipe: \n\t+ 3 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.1 : Offerings/PERDOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:miniboatlantern(ReverseSearch)": {
        "prefix": "p+Floating Lantern",
        "body": "\"miniboatlantern\"",
        "description": " ※prefab ID: miniboatlantern\n ※Name: Floating Lantern\n ※Recipe: \n\t+ 3 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.1 : Offerings/PERDOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:red_cap(ID Complete)": {
        "prefix": "p+red_cap",
        "body": "\"red_cap\"",
        "description": " ※prefab ID: red_cap\n ※Name: Red Cap\n ※prefab Version: DST-632551 "
    },
    "prefab:red_cap(ReverseSearch)": {
        "prefix": "p+Red Cap",
        "body": "\"red_cap\"",
        "description": " ※prefab ID: red_cap\n ※Name: Red Cap\n ※prefab Version: DST-632551 "
    },
    "prefab:sweettea(ID Complete)": {
        "prefix": "p+sweettea",
        "body": "\"sweettea\"",
        "description": " ※prefab ID: sweettea\n ※Name: Soothing Tea\n ※prefab Version: DST-632551 "
    },
    "prefab:sweettea(ReverseSearch)": {
        "prefix": "p+Soothing Tea",
        "body": "\"sweettea\"",
        "description": " ※prefab ID: sweettea\n ※Name: Soothing Tea\n ※prefab Version: DST-632551 "
    },
    "prefab:miniflare(ID Complete)": {
        "prefix": "p+miniflare",
        "body": "\"miniflare\"",
        "description": " ※prefab ID: miniflare\n ※Name: Flare\n ※Recipe: \n\t+ 1 x: Twigs/twigs\n\t+ 1 x: Cut Grass/cutgrass\n\t+ 1 x: Nitre/nitre\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:miniflare(ReverseSearch)": {
        "prefix": "p+Flare",
        "body": "\"miniflare\"",
        "description": " ※prefab ID: miniflare\n ※Name: Flare\n ※Recipe: \n\t+ 1 x: Twigs/twigs\n\t+ 1 x: Cut Grass/cutgrass\n\t+ 1 x: Nitre/nitre\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:mandrake_planted(ID Complete)": {
        "prefix": "p+mandrake_planted",
        "body": "\"mandrake_planted\"",
        "description": " ※prefab ID: mandrake_planted\n ※Name: Mandrake\n ※prefab Version: DST-632551 "
    },
    "prefab:mandrake_planted(ReverseSearch)": {
        "prefix": "p+Mandrake",
        "body": "\"mandrake_planted\"",
        "description": " ※prefab ID: mandrake_planted\n ※Name: Mandrake\n ※prefab Version: DST-632551 "
    },
    "prefab:succulent_plant(ID Complete)": {
        "prefix": "p+succulent_plant",
        "body": "\"succulent_plant\"",
        "description": " ※prefab ID: succulent_plant\n ※Name: Succulent\n ※prefab Version: DST-632551 "
    },
    "prefab:succulent_plant(ReverseSearch)": {
        "prefix": "p+Succulent",
        "body": "\"succulent_plant\"",
        "description": " ※prefab ID: succulent_plant\n ※Name: Succulent\n ※prefab Version: DST-632551 "
    },
    "prefab:frogfishbowl(ID Complete)": {
        "prefix": "p+frogfishbowl",
        "body": "\"frogfishbowl\"",
        "description": " ※prefab ID: frogfishbowl\n ※Name: Fish Cordon Bleu\n ※prefab Version: DST-632551 "
    },
    "prefab:frogfishbowl(ReverseSearch)": {
        "prefix": "p+Fish Cordon Bleu",
        "body": "\"frogfishbowl\"",
        "description": " ※prefab ID: frogfishbowl\n ※Name: Fish Cordon Bleu\n ※prefab Version: DST-632551 "
    },
    "prefab:hawaiianshirt(ID Complete)": {
        "prefix": "p+hawaiianshirt",
        "body": "\"hawaiianshirt\"",
        "description": " ※prefab ID: hawaiianshirt\n ※Name: Floral Shirt\n ※Recipe: \n\t+ 3 x: Papyrus/papyrus\n\t+ 3 x: Silk/silk\n\t+ 5 x: Cactus Flower/cactus_flower\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:hawaiianshirt(ReverseSearch)": {
        "prefix": "p+Floral Shirt",
        "body": "\"hawaiianshirt\"",
        "description": " ※prefab ID: hawaiianshirt\n ※Name: Floral Shirt\n ※Recipe: \n\t+ 3 x: Papyrus/papyrus\n\t+ 3 x: Silk/silk\n\t+ 5 x: Cactus Flower/cactus_flower\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_minotaur_builder(ID Complete)": {
        "prefix": "p+chesspiece_minotaur_builder",
        "body": "\"chesspiece_minotaur_builder\"",
        "description": " ※prefab ID: chesspiece_minotaur_builder\n ※Name: Ancient Guardian Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_minotaur_builder(ReverseSearch)": {
        "prefix": "p+Ancient Guardian Figure",
        "body": "\"chesspiece_minotaur_builder\"",
        "description": " ※prefab ID: chesspiece_minotaur_builder\n ※Name: Ancient Guardian Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:nutrientsgoggleshat(ID Complete)": {
        "prefix": "p+nutrientsgoggleshat",
        "body": "\"nutrientsgoggleshat\"",
        "description": " ※prefab ID: nutrientsgoggleshat\n ※Name: Premier Gardeneer Hat\n ※Recipe: \n\t+ 1 x: Gardeneer Hat/plantregistryhat\n\t+ 4 x: Thulecite Fragments/thulecite_pieces\n\t+ 1 x: Purple Gem/purplegem\n ※Required Tech: \n\t+ LV.2 : Ancient/ANCIENT\n ※prefab Version: DST-632551 "
    },
    "prefab:nutrientsgoggleshat(ReverseSearch)": {
        "prefix": "p+Premier Gardeneer Hat",
        "body": "\"nutrientsgoggleshat\"",
        "description": " ※prefab ID: nutrientsgoggleshat\n ※Name: Premier Gardeneer Hat\n ※Recipe: \n\t+ 1 x: Gardeneer Hat/plantregistryhat\n\t+ 4 x: Thulecite Fragments/thulecite_pieces\n\t+ 1 x: Purple Gem/purplegem\n ※Required Tech: \n\t+ LV.2 : Ancient/ANCIENT\n ※prefab Version: DST-632551 "
    },
    "prefab:tumbleweed(ID Complete)": {
        "prefix": "p+tumbleweed",
        "body": "\"tumbleweed\"",
        "description": " ※prefab ID: tumbleweed\n ※Name: Tumbleweed\n ※prefab Version: DST-632551 "
    },
    "prefab:tumbleweed(ReverseSearch)": {
        "prefix": "p+Tumbleweed",
        "body": "\"tumbleweed\"",
        "description": " ※prefab ID: tumbleweed\n ※Name: Tumbleweed\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_068(ID Complete)": {
        "prefix": "p+quagmire_food_068",
        "body": "\"quagmire_food_068\"",
        "description": " ※prefab ID: quagmire_food_068\n ※Name: Trifle\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_068(ReverseSearch)": {
        "prefix": "p+Trifle",
        "body": "\"quagmire_food_068\"",
        "description": " ※prefab ID: quagmire_food_068\n ※Name: Trifle\n ※prefab Version: DST-632551 "
    },
    "prefab:boat_bumper_kelp_kit(ID Complete)": {
        "prefix": "p+boat_bumper_kelp_kit",
        "body": "\"boat_bumper_kelp_kit\"",
        "description": " ※prefab ID: boat_bumper_kelp_kit\n ※Name: Kelp Bumper Kit\n ※Recipe: \n\t+ 3 x: Kelp Fronds/kelp\n\t+ 3 x: Cut Grass/cutgrass\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:boat_bumper_kelp_kit(ReverseSearch)": {
        "prefix": "p+Kelp Bumper Kit",
        "body": "\"boat_bumper_kelp_kit\"",
        "description": " ※prefab ID: boat_bumper_kelp_kit\n ※Name: Kelp Bumper Kit\n ※Recipe: \n\t+ 3 x: Kelp Fronds/kelp\n\t+ 3 x: Cut Grass/cutgrass\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:barnacle(ID Complete)": {
        "prefix": "p+barnacle",
        "body": "\"barnacle\"",
        "description": " ※prefab ID: barnacle\n ※Name: Barnacles\n ※prefab Version: DST-632551 "
    },
    "prefab:barnacle(ReverseSearch)": {
        "prefix": "p+Barnacles",
        "body": "\"barnacle\"",
        "description": " ※prefab ID: barnacle\n ※Name: Barnacles\n ※prefab Version: DST-632551 "
    },
    "prefab:gelblob_storage(ID Complete)": {
        "prefix": "p+gelblob_storage",
        "body": "\"gelblob_storage\"",
        "description": " ※prefab ID: gelblob_storage\n ※Name: Icker Preserve\n ※Recipe: \n\t+ 5 x: Dreadstone/dreadstone\n\t+ 4 x: Nightmare Fuel/nightmarefuel\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:gelblob_storage(ReverseSearch)": {
        "prefix": "p+Icker Preserve",
        "body": "\"gelblob_storage\"",
        "description": " ※prefab ID: gelblob_storage\n ※Name: Icker Preserve\n ※Recipe: \n\t+ 5 x: Dreadstone/dreadstone\n\t+ 4 x: Nightmare Fuel/nightmarefuel\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:townportaltalisman(ID Complete)": {
        "prefix": "p+townportaltalisman",
        "body": "\"townportaltalisman\"",
        "description": " ※prefab ID: townportaltalisman\n ※Name: Desert Stone\n ※prefab Version: DST-632551 "
    },
    "prefab:townportaltalisman(ReverseSearch)": {
        "prefix": "p+Desert Stone",
        "body": "\"townportaltalisman\"",
        "description": " ※prefab ID: townportaltalisman\n ※Name: Desert Stone\n ※prefab Version: DST-632551 "
    },
    "prefab:sandblock(ID Complete)": {
        "prefix": "p+sandblock",
        "body": "\"sandblock\"",
        "description": " ※prefab ID: sandblock\n ※Name: Sand Castle\n ※prefab Version: DST-632551 "
    },
    "prefab:sandblock(ReverseSearch)": {
        "prefix": "p+Sand Castle",
        "body": "\"sandblock\"",
        "description": " ※prefab ID: sandblock\n ※Name: Sand Castle\n ※prefab Version: DST-632551 "
    },
    "prefab:pigelite1(ID Complete)": {
        "prefix": "p+pigelite1",
        "body": "\"pigelite1\"",
        "description": " ※prefab ID: pigelite1\n ※Name: Wade\n ※prefab Version: DST-632551 "
    },
    "prefab:pigelite1(ReverseSearch)": {
        "prefix": "p+Wade",
        "body": "\"pigelite1\"",
        "description": " ※prefab ID: pigelite1\n ※Name: Wade\n ※prefab Version: DST-632551 "
    },
    "prefab:farm_plant_asparagus(ID Complete)": {
        "prefix": "p+farm_plant_asparagus",
        "body": "\"farm_plant_asparagus\"",
        "description": " ※prefab ID: farm_plant_asparagus\n ※Name: Asparagus Fern\n ※prefab Version: DST-632551 "
    },
    "prefab:farm_plant_asparagus(ReverseSearch)": {
        "prefix": "p+Asparagus Fern",
        "body": "\"farm_plant_asparagus\"",
        "description": " ※prefab ID: farm_plant_asparagus\n ※Name: Asparagus Fern\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_lightdamagerhat(ID Complete)": {
        "prefix": "p+lavaarena_lightdamagerhat",
        "body": "\"lavaarena_lightdamagerhat\"",
        "description": " ※prefab ID: lavaarena_lightdamagerhat\n ※Name: Barbed Helm\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_lightdamagerhat(ReverseSearch)": {
        "prefix": "p+Barbed Helm",
        "body": "\"lavaarena_lightdamagerhat\"",
        "description": " ※prefab ID: lavaarena_lightdamagerhat\n ※Name: Barbed Helm\n ※prefab Version: DST-632551 "
    },
    "prefab:wetpouch(ID Complete)": {
        "prefix": "p+wetpouch",
        "body": "\"wetpouch\"",
        "description": " ※prefab ID: wetpouch\n ※Name: Crumpled Package\n ※prefab Version: DST-632551 "
    },
    "prefab:wetpouch(ReverseSearch)": {
        "prefix": "p+Crumpled Package",
        "body": "\"wetpouch\"",
        "description": " ※prefab ID: wetpouch\n ※Name: Crumpled Package\n ※prefab Version: DST-632551 "
    },
    "prefab:mushtree_medium(ID Complete)": {
        "prefix": "p+mushtree_medium",
        "body": "\"mushtree_medium\"",
        "description": " ※prefab ID: mushtree_medium\n ※Name: Red Mushtree\n ※prefab Version: DST-632551 "
    },
    "prefab:mushtree_medium(ReverseSearch)": {
        "prefix": "p+Red Mushtree",
        "body": "\"mushtree_medium\"",
        "description": " ※prefab ID: mushtree_medium\n ※Name: Red Mushtree\n ※prefab Version: DST-632551 "
    },
    "prefab:feather_robin_winter(ID Complete)": {
        "prefix": "p+feather_robin_winter",
        "body": "\"feather_robin_winter\"",
        "description": " ※prefab ID: feather_robin_winter\n ※Name: Azure Feather\n ※prefab Version: DST-632551 "
    },
    "prefab:feather_robin_winter(ReverseSearch)": {
        "prefix": "p+Azure Feather",
        "body": "\"feather_robin_winter\"",
        "description": " ※prefab ID: feather_robin_winter\n ※Name: Azure Feather\n ※prefab Version: DST-632551 "
    },
    "prefab:spore_medium(ID Complete)": {
        "prefix": "p+spore_medium",
        "body": "\"spore_medium\"",
        "description": " ※prefab ID: spore_medium\n ※Name: Red Spore\n ※prefab Version: DST-632551 "
    },
    "prefab:spore_medium(ReverseSearch)": {
        "prefix": "p+Red Spore",
        "body": "\"spore_medium\"",
        "description": " ※prefab ID: spore_medium\n ※Name: Red Spore\n ※prefab Version: DST-632551 "
    },
    "prefab:armorslurper(ID Complete)": {
        "prefix": "p+armorslurper",
        "body": "\"armorslurper\"",
        "description": " ※prefab ID: armorslurper\n ※Name: Belt of Hunger\n ※Recipe: \n\t+ 6 x: Slurper Pelt/slurper_pelt\n\t+ 2 x: Rope/rope\n\t+ 2 x: Nightmare Fuel/nightmarefuel\n ※Required Tech: \n\t+ LV.3 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:armorslurper(ReverseSearch)": {
        "prefix": "p+Belt of Hunger",
        "body": "\"armorslurper\"",
        "description": " ※prefab ID: armorslurper\n ※Name: Belt of Hunger\n ※Recipe: \n\t+ 6 x: Slurper Pelt/slurper_pelt\n\t+ 2 x: Rope/rope\n\t+ 2 x: Nightmare Fuel/nightmarefuel\n ※Required Tech: \n\t+ LV.3 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:lost_toy_1(ID Complete)": {
        "prefix": "p+lost_toy_1",
        "body": "\"lost_toy_1\"",
        "description": " ※prefab ID: lost_toy_1\n ※Name: Lost Marbles\n ※prefab Version: DST-632551 "
    },
    "prefab:lost_toy_1(ReverseSearch)": {
        "prefix": "p+Lost Marbles",
        "body": "\"lost_toy_1\"",
        "description": " ※prefab ID: lost_toy_1\n ※Name: Lost Marbles\n ※prefab Version: DST-632551 "
    },
    "prefab:dug_bananabush(ID Complete)": {
        "prefix": "p+dug_bananabush",
        "body": "\"dug_bananabush\"",
        "description": " ※prefab ID: dug_bananabush\n ※Name: Banana Bush\n ※prefab Version: DST-632551 "
    },
    "prefab:dug_bananabush(ReverseSearch)": {
        "prefix": "p+Banana Bush",
        "body": "\"dug_bananabush\"",
        "description": " ※prefab ID: dug_bananabush\n ※Name: Banana Bush\n ※prefab Version: DST-632551 "
    },
    "prefab:palmcone_sapling(ID Complete)": {
        "prefix": "p+palmcone_sapling",
        "body": "\"palmcone_sapling\"",
        "description": " ※prefab ID: palmcone_sapling\n ※Name: Palmcone Sapling\n ※prefab Version: DST-632551 "
    },
    "prefab:palmcone_sapling(ReverseSearch)": {
        "prefix": "p+Palmcone Sapling",
        "body": "\"palmcone_sapling\"",
        "description": " ※prefab ID: palmcone_sapling\n ※Name: Palmcone Sapling\n ※prefab Version: DST-632551 "
    },
    "prefab:voidclothhat(ID Complete)": {
        "prefix": "p+voidclothhat",
        "body": "\"voidclothhat\"",
        "description": " ※prefab ID: voidclothhat\n ※Name: Void Cowl\n ※Recipe: \n\t+ 4 x: Pure Horror/horrorfuel\n\t+ 2 x: Dark Tatters/voidcloth\n ※Required Tech: \n\t+ LV.2 : Shadowcraft/SHADOWFORGING\n ※prefab Version: DST-632551 "
    },
    "prefab:voidclothhat(ReverseSearch)": {
        "prefix": "p+Void Cowl",
        "body": "\"voidclothhat\"",
        "description": " ※prefab ID: voidclothhat\n ※Name: Void Cowl\n ※Recipe: \n\t+ 4 x: Pure Horror/horrorfuel\n\t+ 2 x: Dark Tatters/voidcloth\n ※Required Tech: \n\t+ LV.2 : Shadowcraft/SHADOWFORGING\n ※prefab Version: DST-632551 "
    },
    "prefab:hotspring(ID Complete)": {
        "prefix": "p+hotspring",
        "body": "\"hotspring\"",
        "description": " ※prefab ID: hotspring\n ※Name: Hot Spring\n ※prefab Version: DST-632551 "
    },
    "prefab:hotspring(ReverseSearch)": {
        "prefix": "p+Hot Spring",
        "body": "\"hotspring\"",
        "description": " ※prefab ID: hotspring\n ※Name: Hot Spring\n ※prefab Version: DST-632551 "
    },
    "prefab:guacamole(ID Complete)": {
        "prefix": "p+guacamole",
        "body": "\"guacamole\"",
        "description": " ※prefab ID: guacamole\n ※Name: Guacamole\n ※prefab Version: DST-632551 "
    },
    "prefab:guacamole(ReverseSearch)": {
        "prefix": "p+Guacamole",
        "body": "\"guacamole\"",
        "description": " ※prefab ID: guacamole\n ※Name: Guacamole\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_mermhouse(ID Complete)": {
        "prefix": "p+quagmire_mermhouse",
        "body": "\"quagmire_mermhouse\"",
        "description": " ※prefab ID: quagmire_mermhouse\n ※Name: Rundown House\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_mermhouse(ReverseSearch)": {
        "prefix": "p+Rundown House",
        "body": "\"quagmire_mermhouse\"",
        "description": " ※prefab ID: quagmire_mermhouse\n ※Name: Rundown House\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_butterfly(ID Complete)": {
        "prefix": "p+chesspiece_butterfly",
        "body": "\"chesspiece_butterfly\"",
        "description": " ※prefab ID: chesspiece_butterfly\n ※Name: Moon Moth Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_butterfly(ReverseSearch)": {
        "prefix": "p+Moon Moth Figure",
        "body": "\"chesspiece_butterfly\"",
        "description": " ※prefab ID: chesspiece_butterfly\n ※Name: Moon Moth Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:battlesong_fireresistance(ID Complete)": {
        "prefix": "p+battlesong_fireresistance",
        "body": "\"battlesong_fireresistance\"",
        "description": " ※prefab ID: battlesong_fireresistance\n ※Name: Fireproof Falsetto\n ※Recipe: \n\t+ 1 x: Papyrus/papyrus\n\t+ 1 x: Feather Pencil/featherpencil\n\t+ 1 x: Spittlefish/oceanfish_small_9_inv\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:battlesong_fireresistance(ReverseSearch)": {
        "prefix": "p+Fireproof Falsetto",
        "body": "\"battlesong_fireresistance\"",
        "description": " ※prefab ID: battlesong_fireresistance\n ※Name: Fireproof Falsetto\n ※Recipe: \n\t+ 1 x: Papyrus/papyrus\n\t+ 1 x: Feather Pencil/featherpencil\n\t+ 1 x: Spittlefish/oceanfish_small_9_inv\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:wx78module_music(ID Complete)": {
        "prefix": "p+wx78module_music",
        "body": "\"wx78module_music\"",
        "description": " ※prefab ID: wx78module_music\n ※Name: Chorusbox Circuit\n ※Recipe: \n\t+ 4 x: Bio Data/scandata\n\t+ 1 x: Baritone Shell Bell/singingshell_octave3\n ※Required Tech: \n\t+ LV.1 : Circuitry/ROBOTMODULECRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:wx78module_music(ReverseSearch)": {
        "prefix": "p+Chorusbox Circuit",
        "body": "\"wx78module_music\"",
        "description": " ※prefab ID: wx78module_music\n ※Name: Chorusbox Circuit\n ※Recipe: \n\t+ 4 x: Bio Data/scandata\n\t+ 1 x: Baritone Shell Bell/singingshell_octave3\n ※Required Tech: \n\t+ LV.1 : Circuitry/ROBOTMODULECRAFT\n ※prefab Version: DST-632551 "
    },
    "prefab:amulet(ID Complete)": {
        "prefix": "p+amulet",
        "body": "\"amulet\"",
        "description": " ※prefab ID: amulet\n ※Name: Life Giving Amulet\n ※Recipe: \n\t+ 3 x: Gold Nugget/goldnugget\n\t+ 2 x: Nightmare Fuel/nightmarefuel\n\t+ 1 x: Red Gem/redgem\n ※Required Tech: \n\t+ LV.2 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:amulet(ReverseSearch)": {
        "prefix": "p+Life Giving Amulet",
        "body": "\"amulet\"",
        "description": " ※prefab ID: amulet\n ※Name: Life Giving Amulet\n ※Recipe: \n\t+ 3 x: Gold Nugget/goldnugget\n\t+ 2 x: Nightmare Fuel/nightmarefuel\n\t+ 1 x: Red Gem/redgem\n ※Required Tech: \n\t+ LV.2 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:bearger(ID Complete)": {
        "prefix": "p+bearger",
        "body": "\"bearger\"",
        "description": " ※prefab ID: bearger\n ※Name: Bearger\n ※prefab Version: DST-632551 "
    },
    "prefab:bearger(ReverseSearch)": {
        "prefix": "p+Bearger",
        "body": "\"bearger\"",
        "description": " ※prefab ID: bearger\n ※Name: Bearger\n ※prefab Version: DST-632551 "
    },
    "prefab:garlic_oversized_rotten(ID Complete)": {
        "prefix": "p+garlic_oversized_rotten",
        "body": "\"garlic_oversized_rotten\"",
        "description": " ※prefab ID: garlic_oversized_rotten\n ※Name: Giant Rotting Garlic\n ※prefab Version: DST-632551 "
    },
    "prefab:garlic_oversized_rotten(ReverseSearch)": {
        "prefix": "p+Giant Rotting Garlic",
        "body": "\"garlic_oversized_rotten\"",
        "description": " ※prefab ID: garlic_oversized_rotten\n ※Name: Giant Rotting Garlic\n ※prefab Version: DST-632551 "
    },
    "prefab:book_fossil(ID Complete)": {
        "prefix": "p+book_fossil",
        "body": "\"book_fossil\"",
        "description": " ※prefab ID: book_fossil\n ※Name: Petrifying Tome\n ※prefab Version: DST-632551 "
    },
    "prefab:book_fossil(ReverseSearch)": {
        "prefix": "p+Petrifying Tome",
        "body": "\"book_fossil\"",
        "description": " ※prefab ID: book_fossil\n ※Name: Petrifying Tome\n ※prefab Version: DST-632551 "
    },
    "prefab:winona_catapult(ID Complete)": {
        "prefix": "p+winona_catapult",
        "body": "\"winona_catapult\"",
        "description": " ※prefab ID: winona_catapult\n ※Name: Winona's Catapult\n ※Recipe: \n\t+ 1 x: Trusty Tape/sewing_tape\n\t+ 3 x: Twigs/twigs\n\t+ 15 x: Rocks/rocks\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:winona_catapult(ReverseSearch)": {
        "prefix": "p+Winona's Catapult",
        "body": "\"winona_catapult\"",
        "description": " ※prefab ID: winona_catapult\n ※Name: Winona's Catapult\n ※Recipe: \n\t+ 1 x: Trusty Tape/sewing_tape\n\t+ 3 x: Twigs/twigs\n\t+ 15 x: Rocks/rocks\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:antchovies(ID Complete)": {
        "prefix": "p+antchovies",
        "body": "\"antchovies\"",
        "description": " ※prefab ID: antchovies\n ※Name: Ant-Chovy\n ※prefab Version: DST-632551 "
    },
    "prefab:antchovies(ReverseSearch)": {
        "prefix": "p+Ant-Chovy",
        "body": "\"antchovies\"",
        "description": " ※prefab ID: antchovies\n ※Name: Ant-Chovy\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_crowndamagerhat(ID Complete)": {
        "prefix": "p+lavaarena_crowndamagerhat",
        "body": "\"lavaarena_crowndamagerhat\"",
        "description": " ※prefab ID: lavaarena_crowndamagerhat\n ※Name: Resplendent Nox Helm\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_crowndamagerhat(ReverseSearch)": {
        "prefix": "p+Resplendent Nox Helm",
        "body": "\"lavaarena_crowndamagerhat\"",
        "description": " ※prefab ID: lavaarena_crowndamagerhat\n ※Name: Resplendent Nox Helm\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishingbobber_robin(ID Complete)": {
        "prefix": "p+oceanfishingbobber_robin",
        "body": "\"oceanfishingbobber_robin\"",
        "description": " ※prefab ID: oceanfishingbobber_robin\n ※Name: Crimson Quill Float\n ※Recipe: \n\t+ 1 x: Crimson Feather/feather_robin\n ※Required Tech: \n\t+ LV.1 : Fishing/FISHING\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishingbobber_robin(ReverseSearch)": {
        "prefix": "p+Crimson Quill Float",
        "body": "\"oceanfishingbobber_robin\"",
        "description": " ※prefab ID: oceanfishingbobber_robin\n ※Name: Crimson Quill Float\n ※Recipe: \n\t+ 1 x: Crimson Feather/feather_robin\n ※Required Tech: \n\t+ LV.1 : Fishing/FISHING\n ※prefab Version: DST-632551 "
    },
    "prefab:darkness(ID Complete)": {
        "prefix": "p+darkness",
        "body": "\"darkness\"",
        "description": " ※prefab ID: darkness\n ※Name: Darkness\n ※prefab Version: DST-632551 "
    },
    "prefab:darkness(ReverseSearch)": {
        "prefix": "p+Darkness",
        "body": "\"darkness\"",
        "description": " ※prefab ID: darkness\n ※Name: Darkness\n ※prefab Version: DST-632551 "
    },
    "prefab:tallbirdegg_cooked(ID Complete)": {
        "prefix": "p+tallbirdegg_cooked",
        "body": "\"tallbirdegg_cooked\"",
        "description": " ※prefab ID: tallbirdegg_cooked\n ※Name: Fried Tallbird Egg\n ※prefab Version: DST-632551 "
    },
    "prefab:tallbirdegg_cooked(ReverseSearch)": {
        "prefix": "p+Fried Tallbird Egg",
        "body": "\"tallbirdegg_cooked\"",
        "description": " ※prefab ID: tallbirdegg_cooked\n ※Name: Fried Tallbird Egg\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_kitcoon_builder(ID Complete)": {
        "prefix": "p+chesspiece_kitcoon_builder",
        "body": "\"chesspiece_kitcoon_builder\"",
        "description": " ※prefab ID: chesspiece_kitcoon_builder\n ※Name: Kitcoon Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_kitcoon_builder(ReverseSearch)": {
        "prefix": "p+Kitcoon Figure",
        "body": "\"chesspiece_kitcoon_builder\"",
        "description": " ※prefab ID: chesspiece_kitcoon_builder\n ※Name: Kitcoon Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:lava_pond_rock(ID Complete)": {
        "prefix": "p+lava_pond_rock",
        "body": "\"lava_pond_rock\"",
        "description": " ※prefab ID: lava_pond_rock\n ※Name: Rock\n ※prefab Version: DST-632551 "
    },
    "prefab:lava_pond_rock(ReverseSearch)": {
        "prefix": "p+Rock",
        "body": "\"lava_pond_rock\"",
        "description": " ※prefab ID: lava_pond_rock\n ※Name: Rock\n ※prefab Version: DST-632551 "
    },
    "prefab:carrot_planted(ID Complete)": {
        "prefix": "p+carrot_planted",
        "body": "\"carrot_planted\"",
        "description": " ※prefab ID: carrot_planted\n ※Name: Carrot\n ※prefab Version: DST-632551 "
    },
    "prefab:carrot_planted(ReverseSearch)": {
        "prefix": "p+Carrot",
        "body": "\"carrot_planted\"",
        "description": " ※prefab ID: carrot_planted\n ※Name: Carrot\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_1(ID Complete)": {
        "prefix": "p+trinket_1",
        "body": "\"trinket_1\"",
        "description": " ※prefab ID: trinket_1\n ※Name: Melty Marbles\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_1(ReverseSearch)": {
        "prefix": "p+Melty Marbles",
        "body": "\"trinket_1\"",
        "description": " ※prefab ID: trinket_1\n ※Name: Melty Marbles\n ※prefab Version: DST-632551 "
    },
    "prefab:kitcoon_deciduous(ID Complete)": {
        "prefix": "p+kitcoon_deciduous",
        "body": "\"kitcoon_deciduous\"",
        "description": " ※prefab ID: kitcoon_deciduous\n ※Name: Kitcoon\n ※prefab Version: DST-632551 "
    },
    "prefab:kitcoon_deciduous(ReverseSearch)": {
        "prefix": "p+Kitcoon",
        "body": "\"kitcoon_deciduous\"",
        "description": " ※prefab ID: kitcoon_deciduous\n ※Name: Kitcoon\n ※prefab Version: DST-632551 "
    },
    "prefab:moon_altar_idol(ID Complete)": {
        "prefix": "p+moon_altar_idol",
        "body": "\"moon_altar_idol\"",
        "description": " ※prefab ID: moon_altar_idol\n ※Name: Celestial Altar Idol\n ※prefab Version: DST-632551 "
    },
    "prefab:moon_altar_idol(ReverseSearch)": {
        "prefix": "p+Celestial Altar Idol",
        "body": "\"moon_altar_idol\"",
        "description": " ※prefab ID: moon_altar_idol\n ※Name: Celestial Altar Idol\n ※prefab Version: DST-632551 "
    },
    "prefab:rope(ID Complete)": {
        "prefix": "p+rope",
        "body": "\"rope\"",
        "description": " ※prefab ID: rope\n ※Name: Rope\n ※Recipe: \n\t+ 3 x: Cut Grass/cutgrass\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:rope(ReverseSearch)": {
        "prefix": "p+Rope",
        "body": "\"rope\"",
        "description": " ※prefab ID: rope\n ※Name: Rope\n ※Recipe: \n\t+ 3 x: Cut Grass/cutgrass\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:yotc_seedpacket(ID Complete)": {
        "prefix": "p+yotc_seedpacket",
        "body": "\"yotc_seedpacket\"",
        "description": " ※prefab ID: yotc_seedpacket\n ※Name: Packet of Seeds\n ※Recipe: \n\t+ 2 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /CARRATOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:yotc_seedpacket(ReverseSearch)": {
        "prefix": "p+Packet of Seeds",
        "body": "\"yotc_seedpacket\"",
        "description": " ※prefab ID: yotc_seedpacket\n ※Name: Packet of Seeds\n ※Recipe: \n\t+ 2 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /CARRATOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:refined_dust(ID Complete)": {
        "prefix": "p+refined_dust",
        "body": "\"refined_dust\"",
        "description": " ※prefab ID: refined_dust\n ※Name: Collected Dust\n ※Recipe: \n\t+ 1 x: Salt Crystals/saltrock\n\t+ 2 x: Rocks/rocks\n\t+ 1 x: Nitre/nitre\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:refined_dust(ReverseSearch)": {
        "prefix": "p+Collected Dust",
        "body": "\"refined_dust\"",
        "description": " ※prefab ID: refined_dust\n ※Name: Collected Dust\n ※Recipe: \n\t+ 1 x: Salt Crystals/saltrock\n\t+ 2 x: Rocks/rocks\n\t+ 1 x: Nitre/nitre\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:pepper_oversized(ID Complete)": {
        "prefix": "p+pepper_oversized",
        "body": "\"pepper_oversized\"",
        "description": " ※prefab ID: pepper_oversized\n ※Name: Giant Pepper\n ※prefab Version: DST-632551 "
    },
    "prefab:pepper_oversized(ReverseSearch)": {
        "prefix": "p+Giant Pepper",
        "body": "\"pepper_oversized\"",
        "description": " ※prefab ID: pepper_oversized\n ※Name: Giant Pepper\n ※prefab Version: DST-632551 "
    },
    "prefab:yotc_carrat_race_checkpoint(ID Complete)": {
        "prefix": "p+yotc_carrat_race_checkpoint",
        "body": "\"yotc_carrat_race_checkpoint\"",
        "description": " ※prefab ID: yotc_carrat_race_checkpoint\n ※Name: Checkpoint\n ※Recipe: \n\t+ 1 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:yotc_carrat_race_checkpoint(ReverseSearch)": {
        "prefix": "p+Checkpoint",
        "body": "\"yotc_carrat_race_checkpoint\"",
        "description": " ※prefab ID: yotc_carrat_race_checkpoint\n ※Name: Checkpoint\n ※Recipe: \n\t+ 1 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:gazpacho(ID Complete)": {
        "prefix": "p+gazpacho",
        "body": "\"gazpacho\"",
        "description": " ※prefab ID: gazpacho\n ※Name: Asparagazpacho\n ※prefab Version: DST-632551 "
    },
    "prefab:gazpacho(ReverseSearch)": {
        "prefix": "p+Asparagazpacho",
        "body": "\"gazpacho\"",
        "description": " ※prefab ID: gazpacho\n ※Name: Asparagazpacho\n ※prefab Version: DST-632551 "
    },
    "prefab:wintercooking_festivefish(ID Complete)": {
        "prefix": "p+wintercooking_festivefish",
        "body": "\"wintercooking_festivefish\"",
        "description": " ※prefab ID: wintercooking_festivefish\n ※Name: Festive Fish Dish\n ※Recipe: \n\t+ 1 x: Holiday Cheer/wintersfeastfuel\n\t+ 1 x: Spoiled Fish Morsel/spoiled_fish_small\n\t+ 1 x: Petals/petals\n ※Required Tech: \n\t+ LV.1 : Feast/WINTERSFEASTCOOKING\n ※prefab Version: DST-632551 "
    },
    "prefab:wintercooking_festivefish(ReverseSearch)": {
        "prefix": "p+Festive Fish Dish",
        "body": "\"wintercooking_festivefish\"",
        "description": " ※prefab ID: wintercooking_festivefish\n ※Name: Festive Fish Dish\n ※Recipe: \n\t+ 1 x: Holiday Cheer/wintersfeastfuel\n\t+ 1 x: Spoiled Fish Morsel/spoiled_fish_small\n\t+ 1 x: Petals/petals\n ※Required Tech: \n\t+ LV.1 : Feast/WINTERSFEASTCOOKING\n ※prefab Version: DST-632551 "
    },
    "prefab:mermhouse_crafted(ID Complete)": {
        "prefix": "p+mermhouse_crafted",
        "body": "\"mermhouse_crafted\"",
        "description": " ※prefab ID: mermhouse_crafted\n ※Name: Craftsmerm House\n ※Recipe: \n\t+ 4 x: Boards/boards\n\t+ 3 x: Cut Reeds/cutreeds\n\t+ 2 x: Freshwater Fish/pondfish\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:mermhouse_crafted(ReverseSearch)": {
        "prefix": "p+Craftsmerm House",
        "body": "\"mermhouse_crafted\"",
        "description": " ※prefab ID: mermhouse_crafted\n ※Name: Craftsmerm House\n ※Recipe: \n\t+ 4 x: Boards/boards\n\t+ 3 x: Cut Reeds/cutreeds\n\t+ 2 x: Freshwater Fish/pondfish\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:torch(ID Complete)": {
        "prefix": "p+torch",
        "body": "\"torch\"",
        "description": " ※prefab ID: torch\n ※Name: Torch\n ※Recipe: \n\t+ 2 x: Cut Grass/cutgrass\n\t+ 2 x: Twigs/twigs\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:torch(ReverseSearch)": {
        "prefix": "p+Torch",
        "body": "\"torch\"",
        "description": " ※prefab ID: torch\n ※Name: Torch\n ※Recipe: \n\t+ 2 x: Cut Grass/cutgrass\n\t+ 2 x: Twigs/twigs\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:wagstaff_tool_5_layman(ID Complete)": {
        "prefix": "p+wagstaff_tool_5_layman",
        "body": "\"wagstaff_tool_5_layman\"",
        "description": " ※prefab ID: wagstaff_tool_5_layman\n ※Name: Bizarre Tool\n ※prefab Version: DST-632551 "
    },
    "prefab:wagstaff_tool_5_layman(ReverseSearch)": {
        "prefix": "p+Bizarre Tool",
        "body": "\"wagstaff_tool_5_layman\"",
        "description": " ※prefab ID: wagstaff_tool_5_layman\n ※Name: Bizarre Tool\n ※prefab Version: DST-632551 "
    },
    "prefab:watermelon_oversized_rotten(ID Complete)": {
        "prefix": "p+watermelon_oversized_rotten",
        "body": "\"watermelon_oversized_rotten\"",
        "description": " ※prefab ID: watermelon_oversized_rotten\n ※Name: Giant Rotting Watermelon\n ※prefab Version: DST-632551 "
    },
    "prefab:watermelon_oversized_rotten(ReverseSearch)": {
        "prefix": "p+Giant Rotting Watermelon",
        "body": "\"watermelon_oversized_rotten\"",
        "description": " ※prefab ID: watermelon_oversized_rotten\n ※Name: Giant Rotting Watermelon\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_41(ID Complete)": {
        "prefix": "p+trinket_41",
        "body": "\"trinket_41\"",
        "description": " ※prefab ID: trinket_41\n ※Name: Goop Canister\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_41(ReverseSearch)": {
        "prefix": "p+Goop Canister",
        "body": "\"trinket_41\"",
        "description": " ※prefab ID: trinket_41\n ※Name: Goop Canister\n ※prefab Version: DST-632551 "
    },
    "prefab:lunar_forge(ID Complete)": {
        "prefix": "p+lunar_forge",
        "body": "\"lunar_forge\"",
        "description": " ※prefab ID: lunar_forge\n ※Name: Brightsmithy\n ※Recipe: \n\t+ 5 x: Moon Rock/moonrocknugget\n\t+ 5 x: Moon Shard/moonglass\n\t+ 1 x: Pure Brilliance/purebrilliance\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:lunar_forge(ReverseSearch)": {
        "prefix": "p+Brightsmithy",
        "body": "\"lunar_forge\"",
        "description": " ※prefab ID: lunar_forge\n ※Name: Brightsmithy\n ※Recipe: \n\t+ 5 x: Moon Rock/moonrocknugget\n\t+ 5 x: Moon Shard/moonglass\n\t+ 1 x: Pure Brilliance/purebrilliance\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:researchlab3(ID Complete)": {
        "prefix": "p+researchlab3",
        "body": "\"researchlab3\"",
        "description": " ※prefab ID: researchlab3\n ※Name: Shadow Manipulator\n ※Recipe: \n\t+ 3 x: Living Log/livinglog\n\t+ 1 x: Purple Gem/purplegem\n\t+ 7 x: Nightmare Fuel/nightmarefuel\n ※Required Tech: \n\t+ LV.2 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:researchlab3(ReverseSearch)": {
        "prefix": "p+Shadow Manipulator",
        "body": "\"researchlab3\"",
        "description": " ※prefab ID: researchlab3\n ※Name: Shadow Manipulator\n ※Recipe: \n\t+ 3 x: Living Log/livinglog\n\t+ 1 x: Purple Gem/purplegem\n\t+ 7 x: Nightmare Fuel/nightmarefuel\n ※Required Tech: \n\t+ LV.2 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:maxwell(ID Complete)": {
        "prefix": "p+maxwell",
        "body": "\"maxwell\"",
        "description": " ※prefab ID: maxwell\n ※Name: Maxwell\n ※prefab Version: DST-632551 "
    },
    "prefab:maxwell(ReverseSearch)": {
        "prefix": "p+Maxwell",
        "body": "\"maxwell\"",
        "description": " ※prefab ID: maxwell\n ※Name: Maxwell\n ※prefab Version: DST-632551 "
    },
    "prefab:mushroom_light2(ID Complete)": {
        "prefix": "p+mushroom_light2",
        "body": "\"mushroom_light2\"",
        "description": " ※prefab ID: mushroom_light2\n ※Name: Glowcap\n ※Recipe: \n\t+ 1 x: Shroom Skin/shroom_skin\n\t+ 1 x: Bucket-o-poop/fertilizer\n\t+ 1 x: Boards/boards\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:mushroom_light2(ReverseSearch)": {
        "prefix": "p+Glowcap",
        "body": "\"mushroom_light2\"",
        "description": " ※prefab ID: mushroom_light2\n ※Name: Glowcap\n ※Recipe: \n\t+ 1 x: Shroom Skin/shroom_skin\n\t+ 1 x: Bucket-o-poop/fertilizer\n\t+ 1 x: Boards/boards\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:kitcoon_grass(ID Complete)": {
        "prefix": "p+kitcoon_grass",
        "body": "\"kitcoon_grass\"",
        "description": " ※prefab ID: kitcoon_grass\n ※Name: Kitcoon\n ※prefab Version: DST-632551 "
    },
    "prefab:kitcoon_grass(ReverseSearch)": {
        "prefix": "p+Kitcoon",
        "body": "\"kitcoon_grass\"",
        "description": " ※prefab ID: kitcoon_grass\n ※Name: Kitcoon\n ※prefab Version: DST-632551 "
    },
    "prefab:spider_moon(ID Complete)": {
        "prefix": "p+spider_moon",
        "body": "\"spider_moon\"",
        "description": " ※prefab ID: spider_moon\n ※Name: Shattered Spider\n ※prefab Version: DST-632551 "
    },
    "prefab:spider_moon(ReverseSearch)": {
        "prefix": "p+Shattered Spider",
        "body": "\"spider_moon\"",
        "description": " ※prefab ID: spider_moon\n ※Name: Shattered Spider\n ※prefab Version: DST-632551 "
    },
    "prefab:balloonvest(ID Complete)": {
        "prefix": "p+balloonvest",
        "body": "\"balloonvest\"",
        "description": " ※prefab ID: balloonvest\n ※Name: Inflatable Vest\n ※Recipe: \n\t+ 0 x: Pile o' Balloons/balloons_empty\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:balloonvest(ReverseSearch)": {
        "prefix": "p+Inflatable Vest",
        "body": "\"balloonvest\"",
        "description": " ※prefab ID: balloonvest\n ※Name: Inflatable Vest\n ※Recipe: \n\t+ 0 x: Pile o' Balloons/balloons_empty\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:charlie_npc(ID Complete)": {
        "prefix": "p+charlie_npc",
        "body": "\"charlie_npc\"",
        "description": " ※prefab ID: charlie_npc\n ※Name: Charlie\n ※prefab Version: DST-632551 "
    },
    "prefab:charlie_npc(ReverseSearch)": {
        "prefix": "p+Charlie",
        "body": "\"charlie_npc\"",
        "description": " ※prefab ID: charlie_npc\n ※Name: Charlie\n ※prefab Version: DST-632551 "
    },
    "prefab:flowersalad(ID Complete)": {
        "prefix": "p+flowersalad",
        "body": "\"flowersalad\"",
        "description": " ※prefab ID: flowersalad\n ※Name: Flower Salad\n ※prefab Version: DST-632551 "
    },
    "prefab:flowersalad(ReverseSearch)": {
        "prefix": "p+Flower Salad",
        "body": "\"flowersalad\"",
        "description": " ※prefab ID: flowersalad\n ※Name: Flower Salad\n ※prefab Version: DST-632551 "
    },
    "prefab:cutstone(ID Complete)": {
        "prefix": "p+cutstone",
        "body": "\"cutstone\"",
        "description": " ※prefab ID: cutstone\n ※Name: Cut Stone\n ※Recipe: \n\t+ 3 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:cutstone(ReverseSearch)": {
        "prefix": "p+Cut Stone",
        "body": "\"cutstone\"",
        "description": " ※prefab ID: cutstone\n ※Name: Cut Stone\n ※Recipe: \n\t+ 3 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:kitcoondecor1_kit(ID Complete)": {
        "prefix": "p+kitcoondecor1_kit",
        "body": "\"kitcoondecor1_kit\"",
        "description": " ※prefab ID: kitcoondecor1_kit\n ※Name: Gobbler Wobbler Kit\n ※Recipe: \n\t+ 12 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /CATCOONOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:kitcoondecor1_kit(ReverseSearch)": {
        "prefix": "p+Gobbler Wobbler Kit",
        "body": "\"kitcoondecor1_kit\"",
        "description": " ※prefab ID: kitcoondecor1_kit\n ※Name: Gobbler Wobbler Kit\n ※Recipe: \n\t+ 12 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /CATCOONOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:boat_item(ID Complete)": {
        "prefix": "p+boat_item",
        "body": "\"boat_item\"",
        "description": " ※prefab ID: boat_item\n ※Name: Boat Kit\n ※Recipe: \n\t+ 4 x: Boards/boards\n ※Required Tech: \n\t+ LV.1 : Seafaring/SEAFARING\n ※prefab Version: DST-632551 "
    },
    "prefab:boat_item(ReverseSearch)": {
        "prefix": "p+Boat Kit",
        "body": "\"boat_item\"",
        "description": " ※prefab ID: boat_item\n ※Name: Boat Kit\n ※Recipe: \n\t+ 4 x: Boards/boards\n ※Required Tech: \n\t+ LV.1 : Seafaring/SEAFARING\n ※prefab Version: DST-632551 "
    },
    "prefab:waxwell(ID Complete)": {
        "prefix": "p+waxwell",
        "body": "\"waxwell\"",
        "description": " ※prefab ID: waxwell\n ※Name: Maxwell\n ※prefab Version: DST-632551 "
    },
    "prefab:waxwell(ReverseSearch)": {
        "prefix": "p+Maxwell",
        "body": "\"waxwell\"",
        "description": " ※prefab ID: waxwell\n ※Name: Maxwell\n ※prefab Version: DST-632551 "
    },
    "prefab:whip(ID Complete)": {
        "prefix": "p+whip",
        "body": "\"whip\"",
        "description": " ※prefab ID: whip\n ※Name: Tail o' Three Cats\n ※Recipe: \n\t+ 3 x: Cat Tail/coontail\n\t+ 1 x: Tentacle Spots/tentaclespots\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:whip(ReverseSearch)": {
        "prefix": "p+Tail o' Three Cats",
        "body": "\"whip\"",
        "description": " ※prefab ID: whip\n ※Name: Tail o' Three Cats\n ※Recipe: \n\t+ 3 x: Cat Tail/coontail\n\t+ 1 x: Tentacle Spots/tentaclespots\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:flower_withered(ID Complete)": {
        "prefix": "p+flower_withered",
        "body": "\"flower_withered\"",
        "description": " ※prefab ID: flower_withered\n ※Name: Withered Flower\n ※prefab Version: DST-632551 "
    },
    "prefab:flower_withered(ReverseSearch)": {
        "prefix": "p+Withered Flower",
        "body": "\"flower_withered\"",
        "description": " ※prefab ID: flower_withered\n ※Name: Withered Flower\n ※prefab Version: DST-632551 "
    },
    "prefab:bigfoot(ID Complete)": {
        "prefix": "p+bigfoot",
        "body": "\"bigfoot\"",
        "description": " ※prefab ID: bigfoot\n ※Name: Biiigfoot\n ※prefab Version: DST-632551 "
    },
    "prefab:bigfoot(ReverseSearch)": {
        "prefix": "p+Biiigfoot",
        "body": "\"bigfoot\"",
        "description": " ※prefab ID: bigfoot\n ※Name: Biiigfoot\n ※prefab Version: DST-632551 "
    },
    "prefab:alterguardian_phase2(ID Complete)": {
        "prefix": "p+alterguardian_phase2",
        "body": "\"alterguardian_phase2\"",
        "description": " ※prefab ID: alterguardian_phase2\n ※Name: Celestial Champion\n ※prefab Version: DST-632551 "
    },
    "prefab:alterguardian_phase2(ReverseSearch)": {
        "prefix": "p+Celestial Champion",
        "body": "\"alterguardian_phase2\"",
        "description": " ※prefab ID: alterguardian_phase2\n ※Name: Celestial Champion\n ※prefab Version: DST-632551 "
    },
    "prefab:dragonbodyhat(ID Complete)": {
        "prefix": "p+dragonbodyhat",
        "body": "\"dragonbodyhat\"",
        "description": " ※prefab ID: dragonbodyhat\n ※Name: Lucky Beast Body\n ※Recipe: \n\t+ 8 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.1 : Offerings/PERDOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:dragonbodyhat(ReverseSearch)": {
        "prefix": "p+Lucky Beast Body",
        "body": "\"dragonbodyhat\"",
        "description": " ※prefab ID: dragonbodyhat\n ※Name: Lucky Beast Body\n ※Recipe: \n\t+ 8 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.1 : Offerings/PERDOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:waterplant_planter(ID Complete)": {
        "prefix": "p+waterplant_planter",
        "body": "\"waterplant_planter\"",
        "description": " ※prefab ID: waterplant_planter\n ※Name: Sea Sprout Starter\n ※prefab Version: DST-632551 "
    },
    "prefab:waterplant_planter(ReverseSearch)": {
        "prefix": "p+Sea Sprout Starter",
        "body": "\"waterplant_planter\"",
        "description": " ※prefab ID: waterplant_planter\n ※Name: Sea Sprout Starter\n ※prefab Version: DST-632551 "
    },
    "prefab:costume_queen_body(ID Complete)": {
        "prefix": "p+costume_queen_body",
        "body": "\"costume_queen_body\"",
        "description": " ※prefab ID: costume_queen_body\n ※Name: Queen Costume\n ※prefab Version: DST-632551 "
    },
    "prefab:costume_queen_body(ReverseSearch)": {
        "prefix": "p+Queen Costume",
        "body": "\"costume_queen_body\"",
        "description": " ※prefab ID: costume_queen_body\n ※Name: Queen Costume\n ※prefab Version: DST-632551 "
    },
    "prefab:inspectaclesbox(ID Complete)": {
        "prefix": "p+inspectaclesbox",
        "body": "\"inspectaclesbox\"",
        "description": " ※prefab ID: inspectaclesbox\n ※Name: Cachebox\n ※prefab Version: DST-632551 "
    },
    "prefab:inspectaclesbox(ReverseSearch)": {
        "prefix": "p+Cachebox",
        "body": "\"inspectaclesbox\"",
        "description": " ※prefab ID: inspectaclesbox\n ※Name: Cachebox\n ※prefab Version: DST-632551 "
    },
    "prefab:pigguard(ID Complete)": {
        "prefix": "p+pigguard",
        "body": "\"pigguard\"",
        "description": " ※prefab ID: pigguard\n ※Name: Guard Pig\n ※prefab Version: DST-632551 "
    },
    "prefab:pigguard(ReverseSearch)": {
        "prefix": "p+Guard Pig",
        "body": "\"pigguard\"",
        "description": " ※prefab ID: pigguard\n ※Name: Guard Pig\n ※prefab Version: DST-632551 "
    },
    "prefab:pocketwatch_dismantler(ID Complete)": {
        "prefix": "p+pocketwatch_dismantler",
        "body": "\"pocketwatch_dismantler\"",
        "description": " ※prefab ID: pocketwatch_dismantler\n ※Name: Clockmaker's Tools\n ※Recipe: \n\t+ 1 x: Gold Nugget/goldnugget\n\t+ 1 x: Flint/flint\n\t+ 3 x: Twigs/twigs\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:pocketwatch_dismantler(ReverseSearch)": {
        "prefix": "p+Clockmaker's Tools",
        "body": "\"pocketwatch_dismantler\"",
        "description": " ※prefab ID: pocketwatch_dismantler\n ※Name: Clockmaker's Tools\n ※Recipe: \n\t+ 1 x: Gold Nugget/goldnugget\n\t+ 1 x: Flint/flint\n\t+ 3 x: Twigs/twigs\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:rabbit(ID Complete)": {
        "prefix": "p+rabbit",
        "body": "\"rabbit\"",
        "description": " ※prefab ID: rabbit\n ※Name: Rabbit\n ※prefab Version: DST-632551 "
    },
    "prefab:rabbit(ReverseSearch)": {
        "prefix": "p+Rabbit",
        "body": "\"rabbit\"",
        "description": " ※prefab ID: rabbit\n ※Name: Rabbit\n ※prefab Version: DST-632551 "
    },
    "prefab:spear_lance(ID Complete)": {
        "prefix": "p+spear_lance",
        "body": "\"spear_lance\"",
        "description": " ※prefab ID: spear_lance\n ※Name: Spiral Spear\n ※prefab Version: DST-632551 "
    },
    "prefab:spear_lance(ReverseSearch)": {
        "prefix": "p+Spiral Spear",
        "body": "\"spear_lance\"",
        "description": " ※prefab ID: spear_lance\n ※Name: Spiral Spear\n ※prefab Version: DST-632551 "
    },
    "prefab:waterballoon(ID Complete)": {
        "prefix": "p+waterballoon",
        "body": "\"waterballoon\"",
        "description": " ※prefab ID: waterballoon\n ※Name: Waterballoon\n ※Recipe: \n\t+ 2 x: Mosquito Sack/mosquitosack\n\t+ 1 x: Ice/ice\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:waterballoon(ReverseSearch)": {
        "prefix": "p+Waterballoon",
        "body": "\"waterballoon\"",
        "description": " ※prefab ID: waterballoon\n ※Name: Waterballoon\n ※Recipe: \n\t+ 2 x: Mosquito Sack/mosquitosack\n\t+ 1 x: Ice/ice\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:yotp_food2(ID Complete)": {
        "prefix": "p+yotp_food2",
        "body": "\"yotp_food2\"",
        "description": " ※prefab ID: yotp_food2\n ※Name: Eight Treasure Mud Pie\n ※Recipe: \n\t+ 1 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /PIGOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:yotp_food2(ReverseSearch)": {
        "prefix": "p+Eight Treasure Mud Pie",
        "body": "\"yotp_food2\"",
        "description": " ※prefab ID: yotp_food2\n ※Name: Eight Treasure Mud Pie\n ※Recipe: \n\t+ 1 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /PIGOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:waxwelljournal(ID Complete)": {
        "prefix": "p+waxwelljournal",
        "body": "\"waxwelljournal\"",
        "description": " ※prefab ID: waxwelljournal\n ※Name: Codex Umbra\n ※Recipe: \n\t+ 2 x: Papyrus/papyrus\n\t+ 2 x: Nightmare Fuel/nightmarefuel\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:waxwelljournal(ReverseSearch)": {
        "prefix": "p+Codex Umbra",
        "body": "\"waxwelljournal\"",
        "description": " ※prefab ID: waxwelljournal\n ※Name: Codex Umbra\n ※Recipe: \n\t+ 2 x: Papyrus/papyrus\n\t+ 2 x: Nightmare Fuel/nightmarefuel\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:bullkelp_plant(ID Complete)": {
        "prefix": "p+bullkelp_plant",
        "body": "\"bullkelp_plant\"",
        "description": " ※prefab ID: bullkelp_plant\n ※Name: Bull Kelp\n ※prefab Version: DST-632551 "
    },
    "prefab:bullkelp_plant(ReverseSearch)": {
        "prefix": "p+Bull Kelp",
        "body": "\"bullkelp_plant\"",
        "description": " ※prefab ID: bullkelp_plant\n ※Name: Bull Kelp\n ※prefab Version: DST-632551 "
    },
    "prefab:yotc_carrat_scale(ID Complete)": {
        "prefix": "p+yotc_carrat_scale",
        "body": "\"yotc_carrat_scale\"",
        "description": " ※prefab ID: yotc_carrat_scale\n ※Name: Carrat Scale\n ※Recipe: \n\t+ 1 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:yotc_carrat_scale(ReverseSearch)": {
        "prefix": "p+Carrat Scale",
        "body": "\"yotc_carrat_scale\"",
        "description": " ※prefab ID: yotc_carrat_scale\n ※Name: Carrat Scale\n ※Recipe: \n\t+ 1 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:multiplayer_portal_moonrock_constr_plans(ID Complete)": {
        "prefix": "p+multiplayer_portal_moonrock_constr_plans",
        "body": "\"multiplayer_portal_moonrock_constr_plans\"",
        "description": " ※prefab ID: multiplayer_portal_moonrock_constr_plans\n ※Name: Portal Paraphernalia\n ※Recipe: \n\t+ 1 x: Boards/boards\n\t+ 1 x: Rope/rope\n ※Required Tech: \n\t+ LV.1 : Celestial/CELESTIAL\n ※prefab Version: DST-632551 "
    },
    "prefab:multiplayer_portal_moonrock_constr_plans(ReverseSearch)": {
        "prefix": "p+Portal Paraphernalia",
        "body": "\"multiplayer_portal_moonrock_constr_plans\"",
        "description": " ※prefab ID: multiplayer_portal_moonrock_constr_plans\n ※Name: Portal Paraphernalia\n ※Recipe: \n\t+ 1 x: Boards/boards\n\t+ 1 x: Rope/rope\n ※Required Tech: \n\t+ LV.1 : Celestial/CELESTIAL\n ※prefab Version: DST-632551 "
    },
    "prefab:yotr_food2(ID Complete)": {
        "prefix": "p+yotr_food2",
        "body": "\"yotr_food2\"",
        "description": " ※prefab ID: yotr_food2\n ※Name: Moon Cake\n ※Recipe: \n\t+ 5 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /RABBITOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:yotr_food2(ReverseSearch)": {
        "prefix": "p+Moon Cake",
        "body": "\"yotr_food2\"",
        "description": " ※prefab ID: yotr_food2\n ※Name: Moon Cake\n ※Recipe: \n\t+ 5 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /RABBITOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_26(ID Complete)": {
        "prefix": "p+trinket_26",
        "body": "\"trinket_26\"",
        "description": " ※prefab ID: trinket_26\n ※Name: Potato Cup\n ※prefab Version: DST-632551 "
    },
    "prefab:trinket_26(ReverseSearch)": {
        "prefix": "p+Potato Cup",
        "body": "\"trinket_26\"",
        "description": " ※prefab ID: trinket_26\n ※Name: Potato Cup\n ※prefab Version: DST-632551 "
    },
    "prefab:potato_oversized_rotten(ID Complete)": {
        "prefix": "p+potato_oversized_rotten",
        "body": "\"potato_oversized_rotten\"",
        "description": " ※prefab ID: potato_oversized_rotten\n ※Name: Giant Rotting Potato\n ※prefab Version: DST-632551 "
    },
    "prefab:potato_oversized_rotten(ReverseSearch)": {
        "prefix": "p+Giant Rotting Potato",
        "body": "\"potato_oversized_rotten\"",
        "description": " ※prefab ID: potato_oversized_rotten\n ※Name: Giant Rotting Potato\n ※prefab Version: DST-632551 "
    },
    "prefab:wagpunkhat(ID Complete)": {
        "prefix": "p+wagpunkhat",
        "body": "\"wagpunkhat\"",
        "description": " ※prefab ID: wagpunkhat\n ※Name: W.A.R.B.I.S. Head Gear\n ※Recipe: \n\t+ 8 x: Scrap/wagpunk_bits\n\t+ 3 x: Electrical Doodad/transistor\n\t+ 1 x: Enlightened Shard/alterguardianhatshard\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:wagpunkhat(ReverseSearch)": {
        "prefix": "p+W.A.R.B.I.S. Head Gear",
        "body": "\"wagpunkhat\"",
        "description": " ※prefab ID: wagpunkhat\n ※Name: W.A.R.B.I.S. Head Gear\n ※Recipe: \n\t+ 8 x: Scrap/wagpunk_bits\n\t+ 3 x: Electrical Doodad/transistor\n\t+ 1 x: Enlightened Shard/alterguardianhatshard\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:fast_farmplot(ID Complete)": {
        "prefix": "p+fast_farmplot",
        "body": "\"fast_farmplot\"",
        "description": " ※prefab ID: fast_farmplot\n ※Name: Improved Farm\n ※Recipe: \n\t+ 10 x: Cut Grass/cutgrass\n\t+ 6 x: Manure/poop\n\t+ 4 x: Rocks/rocks\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:fast_farmplot(ReverseSearch)": {
        "prefix": "p+Improved Farm",
        "body": "\"fast_farmplot\"",
        "description": " ※prefab ID: fast_farmplot\n ※Name: Improved Farm\n ※Recipe: \n\t+ 10 x: Cut Grass/cutgrass\n\t+ 6 x: Manure/poop\n\t+ 4 x: Rocks/rocks\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:winter_ornament_boss_pearl(ID Complete)": {
        "prefix": "p+winter_ornament_boss_pearl",
        "body": "\"winter_ornament_boss_pearl\"",
        "description": " ※prefab ID: winter_ornament_boss_pearl\n ※Name: Sentimental Adornment\n ※prefab Version: DST-632551 "
    },
    "prefab:winter_ornament_boss_pearl(ReverseSearch)": {
        "prefix": "p+Sentimental Adornment",
        "body": "\"winter_ornament_boss_pearl\"",
        "description": " ※prefab ID: winter_ornament_boss_pearl\n ※Name: Sentimental Adornment\n ※prefab Version: DST-632551 "
    },
    "prefab:default(ID Complete)": {
        "prefix": "p+default",
        "body": "\"default\"",
        "description": " ※prefab ID: default\n ※Name: INVENTORY ITEM\n ※prefab Version: DST-632551 "
    },
    "prefab:default(ReverseSearch)": {
        "prefix": "p+INVENTORY ITEM",
        "body": "\"default\"",
        "description": " ※prefab ID: default\n ※Name: INVENTORY ITEM\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_healingflowerhat(ID Complete)": {
        "prefix": "p+lavaarena_healingflowerhat",
        "body": "\"lavaarena_healingflowerhat\"",
        "description": " ※prefab ID: lavaarena_healingflowerhat\n ※Name: Flower Headband\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_healingflowerhat(ReverseSearch)": {
        "prefix": "p+Flower Headband",
        "body": "\"lavaarena_healingflowerhat\"",
        "description": " ※prefab ID: lavaarena_healingflowerhat\n ※Name: Flower Headband\n ※prefab Version: DST-632551 "
    },
    "prefab:lightninggoathorn(ID Complete)": {
        "prefix": "p+lightninggoathorn",
        "body": "\"lightninggoathorn\"",
        "description": " ※prefab ID: lightninggoathorn\n ※Name: Volt Goat Horn\n ※prefab Version: DST-632551 "
    },
    "prefab:lightninggoathorn(ReverseSearch)": {
        "prefix": "p+Volt Goat Horn",
        "body": "\"lightninggoathorn\"",
        "description": " ※prefab ID: lightninggoathorn\n ※Name: Volt Goat Horn\n ※prefab Version: DST-632551 "
    },
    "prefab:blowdart_pipe(ID Complete)": {
        "prefix": "p+blowdart_pipe",
        "body": "\"blowdart_pipe\"",
        "description": " ※prefab ID: blowdart_pipe\n ※Name: Blow Dart\n ※Recipe: \n\t+ 2 x: Cut Reeds/cutreeds\n\t+ 1 x: Hound's Tooth/houndstooth\n\t+ 1 x: Azure Feather/feather_robin_winter\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:blowdart_pipe(ReverseSearch)": {
        "prefix": "p+Blow Dart",
        "body": "\"blowdart_pipe\"",
        "description": " ※prefab ID: blowdart_pipe\n ※Name: Blow Dart\n ※Recipe: \n\t+ 2 x: Cut Reeds/cutreeds\n\t+ 1 x: Hound's Tooth/houndstooth\n\t+ 1 x: Azure Feather/feather_robin_winter\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:jellybean(ID Complete)": {
        "prefix": "p+jellybean",
        "body": "\"jellybean\"",
        "description": " ※prefab ID: jellybean\n ※Name: Jellybeans\n ※prefab Version: DST-632551 "
    },
    "prefab:jellybean(ReverseSearch)": {
        "prefix": "p+Jellybeans",
        "body": "\"jellybean\"",
        "description": " ※prefab ID: jellybean\n ※Name: Jellybeans\n ※prefab Version: DST-632551 "
    },
    "prefab:halloweenpotion_moon(ID Complete)": {
        "prefix": "p+halloweenpotion_moon",
        "body": "\"halloweenpotion_moon\"",
        "description": " ※prefab ID: halloweenpotion_moon\n ※Name: Steeped Lunar Essence\n ※prefab Version: DST-632551 "
    },
    "prefab:halloweenpotion_moon(ReverseSearch)": {
        "prefix": "p+Steeped Lunar Essence",
        "body": "\"halloweenpotion_moon\"",
        "description": " ※prefab ID: halloweenpotion_moon\n ※Name: Steeped Lunar Essence\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_knight(ID Complete)": {
        "prefix": "p+chesspiece_knight",
        "body": "\"chesspiece_knight\"",
        "description": " ※prefab ID: chesspiece_knight\n ※Name: Knight Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_knight(ReverseSearch)": {
        "prefix": "p+Knight Figure",
        "body": "\"chesspiece_knight\"",
        "description": " ※prefab ID: chesspiece_knight\n ※Name: Knight Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:reviver(ID Complete)": {
        "prefix": "p+reviver",
        "body": "\"reviver\"",
        "description": " ※prefab ID: reviver\n ※Name: Telltale Heart\n ※Recipe: \n\t+ 3 x: Cut Grass/cutgrass\n\t+ 1 x: Spider Gland/spidergland\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:reviver(ReverseSearch)": {
        "prefix": "p+Telltale Heart",
        "body": "\"reviver\"",
        "description": " ※prefab ID: reviver\n ※Name: Telltale Heart\n ※Recipe: \n\t+ 3 x: Cut Grass/cutgrass\n\t+ 1 x: Spider Gland/spidergland\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_parkspike(ID Complete)": {
        "prefix": "p+quagmire_parkspike",
        "body": "\"quagmire_parkspike\"",
        "description": " ※prefab ID: quagmire_parkspike\n ※Name: Iron Fence\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_parkspike(ReverseSearch)": {
        "prefix": "p+Iron Fence",
        "body": "\"quagmire_parkspike\"",
        "description": " ※prefab ID: quagmire_parkspike\n ※Name: Iron Fence\n ※prefab Version: DST-632551 "
    },
    "prefab:berrysauce(ID Complete)": {
        "prefix": "p+berrysauce",
        "body": "\"berrysauce\"",
        "description": " ※prefab ID: berrysauce\n ※Name: Merry Berrysauce\n ※prefab Version: DST-632551 "
    },
    "prefab:berrysauce(ReverseSearch)": {
        "prefix": "p+Merry Berrysauce",
        "body": "\"berrysauce\"",
        "description": " ※prefab ID: berrysauce\n ※Name: Merry Berrysauce\n ※prefab Version: DST-632551 "
    },
    "prefab:wall_hay_item(ID Complete)": {
        "prefix": "p+wall_hay_item",
        "body": "\"wall_hay_item\"",
        "description": " ※prefab ID: wall_hay_item\n ※Name: Hay Wall\n ※Recipe: \n\t+ 4 x: Cut Grass/cutgrass\n\t+ 2 x: Twigs/twigs\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:wall_hay_item(ReverseSearch)": {
        "prefix": "p+Hay Wall",
        "body": "\"wall_hay_item\"",
        "description": " ※prefab ID: wall_hay_item\n ※Name: Hay Wall\n ※Recipe: \n\t+ 4 x: Cut Grass/cutgrass\n\t+ 2 x: Twigs/twigs\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_forest(ID Complete)": {
        "prefix": "p+turf_forest",
        "body": "\"turf_forest\"",
        "description": " ※prefab ID: turf_forest\n ※Name: Forest Turf\n ※Recipe: \n\t+ 1 x: Twigs/twigs\n\t+ 1 x: Pine Cone/pinecone\n ※Required Tech: \n\t+ LV.2 : Landscaping/TURFCRAFTING\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_forest(ReverseSearch)": {
        "prefix": "p+Forest Turf",
        "body": "\"turf_forest\"",
        "description": " ※prefab ID: turf_forest\n ※Name: Forest Turf\n ※Recipe: \n\t+ 1 x: Twigs/twigs\n\t+ 1 x: Pine Cone/pinecone\n ※Required Tech: \n\t+ LV.2 : Landscaping/TURFCRAFTING\n ※prefab Version: DST-632551 "
    },
    "prefab:wx78_scanner_item(ID Complete)": {
        "prefix": "p+wx78_scanner_item",
        "body": "\"wx78_scanner_item\"",
        "description": " ※prefab ID: wx78_scanner_item\n ※Name: Bio Scanalyzer\n ※Recipe: \n\t+ 1 x: Electrical Doodad/transistor\n\t+ 1 x: Silk/silk\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:wx78_scanner_item(ReverseSearch)": {
        "prefix": "p+Bio Scanalyzer",
        "body": "\"wx78_scanner_item\"",
        "description": " ※prefab ID: wx78_scanner_item\n ※Name: Bio Scanalyzer\n ※Recipe: \n\t+ 1 x: Electrical Doodad/transistor\n\t+ 1 x: Silk/silk\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:berries_juicy(ID Complete)": {
        "prefix": "p+berries_juicy",
        "body": "\"berries_juicy\"",
        "description": " ※prefab ID: berries_juicy\n ※Name: Juicy Berries\n ※prefab Version: DST-632551 "
    },
    "prefab:berries_juicy(ReverseSearch)": {
        "prefix": "p+Juicy Berries",
        "body": "\"berries_juicy\"",
        "description": " ※prefab ID: berries_juicy\n ※Name: Juicy Berries\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_safe_locked(ID Complete)": {
        "prefix": "p+quagmire_safe_locked",
        "body": "\"quagmire_safe_locked\"",
        "description": " ※prefab ID: quagmire_safe_locked\n ※Name: Locked Safe\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_safe_locked(ReverseSearch)": {
        "prefix": "p+Locked Safe",
        "body": "\"quagmire_safe_locked\"",
        "description": " ※prefab ID: quagmire_safe_locked\n ※Name: Locked Safe\n ※prefab Version: DST-632551 "
    },
    "prefab:pigshrine(ID Complete)": {
        "prefix": "p+pigshrine",
        "body": "\"pigshrine\"",
        "description": " ※prefab ID: pigshrine\n ※Name: Pig Shrine\n ※Recipe: \n\t+ 4 x: Gold Nugget/goldnugget\n\t+ 2 x: Boards/boards\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:pigshrine(ReverseSearch)": {
        "prefix": "p+Pig Shrine",
        "body": "\"pigshrine\"",
        "description": " ※prefab ID: pigshrine\n ※Name: Pig Shrine\n ※Recipe: \n\t+ 4 x: Gold Nugget/goldnugget\n\t+ 2 x: Boards/boards\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:goldenshovel(ID Complete)": {
        "prefix": "p+goldenshovel",
        "body": "\"goldenshovel\"",
        "description": " ※prefab ID: goldenshovel\n ※Name: Regal Shovel\n ※Recipe: \n\t+ 4 x: Twigs/twigs\n\t+ 2 x: Gold Nugget/goldnugget\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:goldenshovel(ReverseSearch)": {
        "prefix": "p+Regal Shovel",
        "body": "\"goldenshovel\"",
        "description": " ※prefab ID: goldenshovel\n ※Name: Regal Shovel\n ※Recipe: \n\t+ 4 x: Twigs/twigs\n\t+ 2 x: Gold Nugget/goldnugget\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:mastupgrade_lightningrod_item(ID Complete)": {
        "prefix": "p+mastupgrade_lightningrod_item",
        "body": "\"mastupgrade_lightningrod_item\"",
        "description": " ※prefab ID: mastupgrade_lightningrod_item\n ※Name: Lightning Conductor\n ※Recipe: \n\t+ 5 x: Gold Nugget/goldnugget\n ※Required Tech: \n\t+ LV.1 : Seafaring/SEAFARING\n ※prefab Version: DST-632551 "
    },
    "prefab:mastupgrade_lightningrod_item(ReverseSearch)": {
        "prefix": "p+Lightning Conductor",
        "body": "\"mastupgrade_lightningrod_item\"",
        "description": " ※prefab ID: mastupgrade_lightningrod_item\n ※Name: Lightning Conductor\n ※Recipe: \n\t+ 5 x: Gold Nugget/goldnugget\n ※Required Tech: \n\t+ LV.1 : Seafaring/SEAFARING\n ※prefab Version: DST-632551 "
    },
    "prefab:warglet(ID Complete)": {
        "prefix": "p+warglet",
        "body": "\"warglet\"",
        "description": " ※prefab ID: warglet\n ※Name: Varglet\n ※prefab Version: DST-632551 "
    },
    "prefab:warglet(ReverseSearch)": {
        "prefix": "p+Varglet",
        "body": "\"warglet\"",
        "description": " ※prefab ID: warglet\n ※Name: Varglet\n ※prefab Version: DST-632551 "
    },
    "prefab:succulent_picked(ID Complete)": {
        "prefix": "p+succulent_picked",
        "body": "\"succulent_picked\"",
        "description": " ※prefab ID: succulent_picked\n ※Name: Succulent\n ※prefab Version: DST-632551 "
    },
    "prefab:succulent_picked(ReverseSearch)": {
        "prefix": "p+Succulent",
        "body": "\"succulent_picked\"",
        "description": " ※prefab ID: succulent_picked\n ※Name: Succulent\n ※prefab Version: DST-632551 "
    },
    "prefab:bugnet(ID Complete)": {
        "prefix": "p+bugnet",
        "body": "\"bugnet\"",
        "description": " ※prefab ID: bugnet\n ※Name: Bug Net\n ※Recipe: \n\t+ 4 x: Twigs/twigs\n\t+ 2 x: Silk/silk\n\t+ 1 x: Rope/rope\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:bugnet(ReverseSearch)": {
        "prefix": "p+Bug Net",
        "body": "\"bugnet\"",
        "description": " ※prefab ID: bugnet\n ※Name: Bug Net\n ※Recipe: \n\t+ 4 x: Twigs/twigs\n\t+ 2 x: Silk/silk\n\t+ 1 x: Rope/rope\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:robin_winter(ID Complete)": {
        "prefix": "p+robin_winter",
        "body": "\"robin_winter\"",
        "description": " ※prefab ID: robin_winter\n ※Name: Snowbird\n ※prefab Version: DST-632551 "
    },
    "prefab:robin_winter(ReverseSearch)": {
        "prefix": "p+Snowbird",
        "body": "\"robin_winter\"",
        "description": " ※prefab ID: robin_winter\n ※Name: Snowbird\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_daywalker(ID Complete)": {
        "prefix": "p+chesspiece_daywalker",
        "body": "\"chesspiece_daywalker\"",
        "description": " ※prefab ID: chesspiece_daywalker\n ※Name: Nightmare Werepig Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_daywalker(ReverseSearch)": {
        "prefix": "p+Nightmare Werepig Figure",
        "body": "\"chesspiece_daywalker\"",
        "description": " ※prefab ID: chesspiece_daywalker\n ※Name: Nightmare Werepig Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishinglure_spinner_white(ID Complete)": {
        "prefix": "p+oceanfishinglure_spinner_white",
        "body": "\"oceanfishinglure_spinner_white\"",
        "description": " ※prefab ID: oceanfishinglure_spinner_white\n ※Name: not used\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishinglure_spinner_white(ReverseSearch)": {
        "prefix": "p+not used",
        "body": "\"oceanfishinglure_spinner_white\"",
        "description": " ※prefab ID: oceanfishinglure_spinner_white\n ※Name: not used\n ※prefab Version: DST-632551 "
    },
    "prefab:rook(ID Complete)": {
        "prefix": "p+rook",
        "body": "\"rook\"",
        "description": " ※prefab ID: rook\n ※Name: Clockwork Rook\n ※prefab Version: DST-632551 "
    },
    "prefab:rook(ReverseSearch)": {
        "prefix": "p+Clockwork Rook",
        "body": "\"rook\"",
        "description": " ※prefab ID: rook\n ※Name: Clockwork Rook\n ※prefab Version: DST-632551 "
    },
    "prefab:shadow_bishop(ID Complete)": {
        "prefix": "p+shadow_bishop",
        "body": "\"shadow_bishop\"",
        "description": " ※prefab ID: shadow_bishop\n ※Name: Shadow Bishop\n ※prefab Version: DST-632551 "
    },
    "prefab:shadow_bishop(ReverseSearch)": {
        "prefix": "p+Shadow Bishop",
        "body": "\"shadow_bishop\"",
        "description": " ※prefab ID: shadow_bishop\n ※Name: Shadow Bishop\n ※prefab Version: DST-632551 "
    },
    "prefab:spice_sugar_food(ID Complete)": {
        "prefix": "p+spice_sugar_food",
        "body": "\"spice_sugar_food\"",
        "description": " ※prefab ID: spice_sugar_food\n ※Name: Sweet {food}\n ※prefab Version: DST-632551 "
    },
    "prefab:spice_sugar_food(ReverseSearch)": {
        "prefix": "p+Sweet {food}",
        "body": "\"spice_sugar_food\"",
        "description": " ※prefab ID: spice_sugar_food\n ※Name: Sweet {food}\n ※prefab Version: DST-632551 "
    },
    "prefab:campfire(ID Complete)": {
        "prefix": "p+campfire",
        "body": "\"campfire\"",
        "description": " ※prefab ID: campfire\n ※Name: Campfire\n ※Recipe: \n\t+ 3 x: Cut Grass/cutgrass\n\t+ 2 x: Log/log\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:campfire(ReverseSearch)": {
        "prefix": "p+Campfire",
        "body": "\"campfire\"",
        "description": " ※prefab ID: campfire\n ※Name: Campfire\n ※Recipe: \n\t+ 3 x: Cut Grass/cutgrass\n\t+ 2 x: Log/log\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:kitcoon_forest(ID Complete)": {
        "prefix": "p+kitcoon_forest",
        "body": "\"kitcoon_forest\"",
        "description": " ※prefab ID: kitcoon_forest\n ※Name: Kitcoon\n ※prefab Version: DST-632551 "
    },
    "prefab:kitcoon_forest(ReverseSearch)": {
        "prefix": "p+Kitcoon",
        "body": "\"kitcoon_forest\"",
        "description": " ※prefab ID: kitcoon_forest\n ※Name: Kitcoon\n ※prefab Version: DST-632551 "
    },
    "prefab:tacklesketch_scrapbook(ID Complete)": {
        "prefix": "p+tacklesketch_scrapbook",
        "body": "\"tacklesketch_scrapbook\"",
        "description": " ※prefab ID: tacklesketch_scrapbook\n ※Name: Advert\n ※prefab Version: DST-632551 "
    },
    "prefab:tacklesketch_scrapbook(ReverseSearch)": {
        "prefix": "p+Advert",
        "body": "\"tacklesketch_scrapbook\"",
        "description": " ※prefab ID: tacklesketch_scrapbook\n ※Name: Advert\n ※prefab Version: DST-632551 "
    },
    "prefab:ruinshat(ID Complete)": {
        "prefix": "p+ruinshat",
        "body": "\"ruinshat\"",
        "description": " ※prefab ID: ruinshat\n ※Name: Thulecite Crown\n ※Recipe: \n\t+ 4 x: Thulecite/thulecite\n\t+ 4 x: Nightmare Fuel/nightmarefuel\n ※Required Tech: \n\t+ LV.4 : Ancient/ANCIENT\n ※prefab Version: DST-632551 "
    },
    "prefab:ruinshat(ReverseSearch)": {
        "prefix": "p+Thulecite Crown",
        "body": "\"ruinshat\"",
        "description": " ※prefab ID: ruinshat\n ※Name: Thulecite Crown\n ※Recipe: \n\t+ 4 x: Thulecite/thulecite\n\t+ 4 x: Nightmare Fuel/nightmarefuel\n ※Required Tech: \n\t+ LV.4 : Ancient/ANCIENT\n ※prefab Version: DST-632551 "
    },
    "prefab:stageusher(ID Complete)": {
        "prefix": "p+stageusher",
        "body": "\"stageusher\"",
        "description": " ※prefab ID: stageusher\n ※Name: Prickly Stagehand\n ※prefab Version: DST-632551 "
    },
    "prefab:stageusher(ReverseSearch)": {
        "prefix": "p+Prickly Stagehand",
        "body": "\"stageusher\"",
        "description": " ※prefab ID: stageusher\n ※Name: Prickly Stagehand\n ※prefab Version: DST-632551 "
    },
    "prefab:diviningrodstart(ID Complete)": {
        "prefix": "p+diviningrodstart",
        "body": "\"diviningrodstart\"",
        "description": " ※prefab ID: diviningrodstart\n ※Name: Divining Rod Holder\n ※prefab Version: DST-632551 "
    },
    "prefab:diviningrodstart(ReverseSearch)": {
        "prefix": "p+Divining Rod Holder",
        "body": "\"diviningrodstart\"",
        "description": " ※prefab ID: diviningrodstart\n ※Name: Divining Rod Holder\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_058(ID Complete)": {
        "prefix": "p+quagmire_food_058",
        "body": "\"quagmire_food_058\"",
        "description": " ※prefab ID: quagmire_food_058\n ※Name: Pot Roast\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_058(ReverseSearch)": {
        "prefix": "p+Pot Roast",
        "body": "\"quagmire_food_058\"",
        "description": " ※prefab ID: quagmire_food_058\n ※Name: Pot Roast\n ※prefab Version: DST-632551 "
    },
    "prefab:slurper(ID Complete)": {
        "prefix": "p+slurper",
        "body": "\"slurper\"",
        "description": " ※prefab ID: slurper\n ※Name: Slurper\n ※prefab Version: DST-632551 "
    },
    "prefab:slurper(ReverseSearch)": {
        "prefix": "p+Slurper",
        "body": "\"slurper\"",
        "description": " ※prefab ID: slurper\n ※Name: Slurper\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_armor_hppetmastery(ID Complete)": {
        "prefix": "p+lavaarena_armor_hppetmastery",
        "body": "\"lavaarena_armor_hppetmastery\"",
        "description": " ※prefab ID: lavaarena_armor_hppetmastery\n ※Name: Whispering Grand Armor\n ※prefab Version: DST-632551 "
    },
    "prefab:lavaarena_armor_hppetmastery(ReverseSearch)": {
        "prefix": "p+Whispering Grand Armor",
        "body": "\"lavaarena_armor_hppetmastery\"",
        "description": " ※prefab ID: lavaarena_armor_hppetmastery\n ※Name: Whispering Grand Armor\n ※prefab Version: DST-632551 "
    },
    "prefab:canary(ID Complete)": {
        "prefix": "p+canary",
        "body": "\"canary\"",
        "description": " ※prefab ID: canary\n ※Name: Canary\n ※prefab Version: DST-632551 "
    },
    "prefab:canary(ReverseSearch)": {
        "prefix": "p+Canary",
        "body": "\"canary\"",
        "description": " ※prefab ID: canary\n ※Name: Canary\n ※prefab Version: DST-632551 "
    },
    "prefab:meatysalad(ID Complete)": {
        "prefix": "p+meatysalad",
        "body": "\"meatysalad\"",
        "description": " ※prefab ID: meatysalad\n ※Name: Beefy Greens\n ※prefab Version: DST-632551 "
    },
    "prefab:meatysalad(ReverseSearch)": {
        "prefix": "p+Beefy Greens",
        "body": "\"meatysalad\"",
        "description": " ※prefab ID: meatysalad\n ※Name: Beefy Greens\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishinglure_spinner_orange(ID Complete)": {
        "prefix": "p+oceanfishinglure_spinner_orange",
        "body": "\"oceanfishinglure_spinner_orange\"",
        "description": " ※prefab ID: oceanfishinglure_spinner_orange\n ※Name: not used\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishinglure_spinner_orange(ReverseSearch)": {
        "prefix": "p+not used",
        "body": "\"oceanfishinglure_spinner_orange\"",
        "description": " ※prefab ID: oceanfishinglure_spinner_orange\n ※Name: not used\n ※prefab Version: DST-632551 "
    },
    "prefab:bernie_inactive(ID Complete)": {
        "prefix": "p+bernie_inactive",
        "body": "\"bernie_inactive\"",
        "description": " ※prefab ID: bernie_inactive\n ※Name: Bernie\n ※Recipe: \n\t+ 2 x: Beard Hair/beardhair\n\t+ 2 x: Beefalo Wool/beefalowool\n\t+ 2 x: Silk/silk\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:bernie_inactive(ReverseSearch)": {
        "prefix": "p+Bernie",
        "body": "\"bernie_inactive\"",
        "description": " ※prefab ID: bernie_inactive\n ※Name: Bernie\n ※Recipe: \n\t+ 2 x: Beard Hair/beardhair\n\t+ 2 x: Beefalo Wool/beefalowool\n\t+ 2 x: Silk/silk\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:moon_altar_rock_idol(ID Complete)": {
        "prefix": "p+moon_altar_rock_idol",
        "body": "\"moon_altar_rock_idol\"",
        "description": " ※prefab ID: moon_altar_rock_idol\n ※Name: Inviting Formation\n ※prefab Version: DST-632551 "
    },
    "prefab:moon_altar_rock_idol(ReverseSearch)": {
        "prefix": "p+Inviting Formation",
        "body": "\"moon_altar_rock_idol\"",
        "description": " ※prefab ID: moon_altar_rock_idol\n ※Name: Inviting Formation\n ※prefab Version: DST-632551 "
    },
    "prefab:potato(ID Complete)": {
        "prefix": "p+potato",
        "body": "\"potato\"",
        "description": " ※prefab ID: potato\n ※Name: Potato\n ※prefab Version: DST-632551 "
    },
    "prefab:potato(ReverseSearch)": {
        "prefix": "p+Potato",
        "body": "\"potato\"",
        "description": " ※prefab ID: potato\n ※Name: Potato\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_sharkboi_sketch(ID Complete)": {
        "prefix": "p+chesspiece_sharkboi_sketch",
        "body": "\"chesspiece_sharkboi_sketch\"",
        "description": " ※prefab ID: chesspiece_sharkboi_sketch\n ※Name: Frostjaw Figure Sketch\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_sharkboi_sketch(ReverseSearch)": {
        "prefix": "p+Frostjaw Figure Sketch",
        "body": "\"chesspiece_sharkboi_sketch\"",
        "description": " ※prefab ID: chesspiece_sharkboi_sketch\n ※Name: Frostjaw Figure Sketch\n ※prefab Version: DST-632551 "
    },
    "prefab:pocketwatch_portal_exit(ID Complete)": {
        "prefix": "p+pocketwatch_portal_exit",
        "body": "\"pocketwatch_portal_exit\"",
        "description": " ※prefab ID: pocketwatch_portal_exit\n ※Name: Time Rift\n ※prefab Version: DST-632551 "
    },
    "prefab:pocketwatch_portal_exit(ReverseSearch)": {
        "prefix": "p+Time Rift",
        "body": "\"pocketwatch_portal_exit\"",
        "description": " ※prefab ID: pocketwatch_portal_exit\n ※Name: Time Rift\n ※prefab Version: DST-632551 "
    },
    "prefab:monstertartare(ID Complete)": {
        "prefix": "p+monstertartare",
        "body": "\"monstertartare\"",
        "description": " ※prefab ID: monstertartare\n ※Name: Monster Tartare\n ※prefab Version: DST-632551 "
    },
    "prefab:monstertartare(ReverseSearch)": {
        "prefix": "p+Monster Tartare",
        "body": "\"monstertartare\"",
        "description": " ※prefab ID: monstertartare\n ※Name: Monster Tartare\n ※prefab Version: DST-632551 "
    },
    "prefab:dragonfruit(ID Complete)": {
        "prefix": "p+dragonfruit",
        "body": "\"dragonfruit\"",
        "description": " ※prefab ID: dragonfruit\n ※Name: Dragon Fruit\n ※prefab Version: DST-632551 "
    },
    "prefab:dragonfruit(ReverseSearch)": {
        "prefix": "p+Dragon Fruit",
        "body": "\"dragonfruit\"",
        "description": " ※prefab ID: dragonfruit\n ※Name: Dragon Fruit\n ※prefab Version: DST-632551 "
    },
    "prefab:dragonfruit_seeds(ID Complete)": {
        "prefix": "p+dragonfruit_seeds",
        "body": "\"dragonfruit_seeds\"",
        "description": " ※prefab ID: dragonfruit_seeds\n ※Name: Bulbous Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:dragonfruit_seeds(ReverseSearch)": {
        "prefix": "p+Bulbous Seeds",
        "body": "\"dragonfruit_seeds\"",
        "description": " ※prefab ID: dragonfruit_seeds\n ※Name: Bulbous Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_yotd_builder(ID Complete)": {
        "prefix": "p+chesspiece_yotd_builder",
        "body": "\"chesspiece_yotd_builder\"",
        "description": " ※prefab ID: chesspiece_yotd_builder\n ※Name: Start Tower Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_yotd_builder(ReverseSearch)": {
        "prefix": "p+Start Tower Figure",
        "body": "\"chesspiece_yotd_builder\"",
        "description": " ※prefab ID: chesspiece_yotd_builder\n ※Name: Start Tower Figure\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_sap_spoiled(ID Complete)": {
        "prefix": "p+quagmire_sap_spoiled",
        "body": "\"quagmire_sap_spoiled\"",
        "description": " ※prefab ID: quagmire_sap_spoiled\n ※Name: Ruined Sap\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_sap_spoiled(ReverseSearch)": {
        "prefix": "p+Ruined Sap",
        "body": "\"quagmire_sap_spoiled\"",
        "description": " ※prefab ID: quagmire_sap_spoiled\n ※Name: Ruined Sap\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_goatmum(ID Complete)": {
        "prefix": "p+quagmire_goatmum",
        "body": "\"quagmire_goatmum\"",
        "description": " ※prefab ID: quagmire_goatmum\n ※Name: Mumsy\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_goatmum(ReverseSearch)": {
        "prefix": "p+Mumsy",
        "body": "\"quagmire_goatmum\"",
        "description": " ※prefab ID: quagmire_goatmum\n ※Name: Mumsy\n ※prefab Version: DST-632551 "
    },
    "prefab:tallbirdnest(ID Complete)": {
        "prefix": "p+tallbirdnest",
        "body": "\"tallbirdnest\"",
        "description": " ※prefab ID: tallbirdnest\n ※Name: Tallbird Nest\n ※prefab Version: DST-632551 "
    },
    "prefab:tallbirdnest(ReverseSearch)": {
        "prefix": "p+Tallbird Nest",
        "body": "\"tallbirdnest\"",
        "description": " ※prefab ID: tallbirdnest\n ※Name: Tallbird Nest\n ※prefab Version: DST-632551 "
    },
    "prefab:arrowsign_post(ID Complete)": {
        "prefix": "p+arrowsign_post",
        "body": "\"arrowsign_post\"",
        "description": " ※prefab ID: arrowsign_post\n ※Name: Directional Sign\n ※Recipe: \n\t+ 1 x: Boards/boards\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:arrowsign_post(ReverseSearch)": {
        "prefix": "p+Directional Sign",
        "body": "\"arrowsign_post\"",
        "description": " ※prefab ID: arrowsign_post\n ※Name: Directional Sign\n ※Recipe: \n\t+ 1 x: Boards/boards\n ※Required Tech: \n\t+ LV.1 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:mushtree_tall_webbed(ID Complete)": {
        "prefix": "p+mushtree_tall_webbed",
        "body": "\"mushtree_tall_webbed\"",
        "description": " ※prefab ID: mushtree_tall_webbed\n ※Name: Webbed Blue Mushtree\n ※prefab Version: DST-632551 "
    },
    "prefab:mushtree_tall_webbed(ReverseSearch)": {
        "prefix": "p+Webbed Blue Mushtree",
        "body": "\"mushtree_tall_webbed\"",
        "description": " ※prefab ID: mushtree_tall_webbed\n ※Name: Webbed Blue Mushtree\n ※prefab Version: DST-632551 "
    },
    "prefab:pirate_flag_pole(ID Complete)": {
        "prefix": "p+pirate_flag_pole",
        "body": "\"pirate_flag_pole\"",
        "description": " ※prefab ID: pirate_flag_pole\n ※Name: Moon Quay Pirate Banner\n ※Recipe: \n\t+ 1 x: Black Flag/blackflag\n\t+ 2 x: Log/log\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:pirate_flag_pole(ReverseSearch)": {
        "prefix": "p+Moon Quay Pirate Banner",
        "body": "\"pirate_flag_pole\"",
        "description": " ※prefab ID: pirate_flag_pole\n ※Name: Moon Quay Pirate Banner\n ※Recipe: \n\t+ 1 x: Black Flag/blackflag\n\t+ 2 x: Log/log\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:bell(ID Complete)": {
        "prefix": "p+bell",
        "body": "\"bell\"",
        "description": " ※prefab ID: bell\n ※Name: Old Bell\n ※prefab Version: DST-632551 "
    },
    "prefab:bell(ReverseSearch)": {
        "prefix": "p+Old Bell",
        "body": "\"bell\"",
        "description": " ※prefab ID: bell\n ※Name: Old Bell\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalgame_shooting_button(ID Complete)": {
        "prefix": "p+carnivalgame_shooting_button",
        "body": "\"carnivalgame_shooting_button\"",
        "description": " ※prefab ID: carnivalgame_shooting_button\n ※Name: Button\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalgame_shooting_button(ReverseSearch)": {
        "prefix": "p+Button",
        "body": "\"carnivalgame_shooting_button\"",
        "description": " ※prefab ID: carnivalgame_shooting_button\n ※Name: Button\n ※prefab Version: DST-632551 "
    },
    "prefab:deciduoustree(ID Complete)": {
        "prefix": "p+deciduoustree",
        "body": "\"deciduoustree\"",
        "description": " ※prefab ID: deciduoustree\n ※Name: Birchnut Tree\n ※prefab Version: DST-632551 "
    },
    "prefab:deciduoustree(ReverseSearch)": {
        "prefix": "p+Birchnut Tree",
        "body": "\"deciduoustree\"",
        "description": " ※prefab ID: deciduoustree\n ※Name: Birchnut Tree\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_park_urn(ID Complete)": {
        "prefix": "p+quagmire_park_urn",
        "body": "\"quagmire_park_urn\"",
        "description": " ※prefab ID: quagmire_park_urn\n ※Name: Urn\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_park_urn(ReverseSearch)": {
        "prefix": "p+Urn",
        "body": "\"quagmire_park_urn\"",
        "description": " ※prefab ID: quagmire_park_urn\n ※Name: Urn\n ※prefab Version: DST-632551 "
    },
    "prefab:formal_blueprint(ID Complete)": {
        "prefix": "p+formal_blueprint",
        "body": "\"formal_blueprint\"",
        "description": " ※prefab ID: formal_blueprint\n ※Name: Formal Costume Pattern\n ※prefab Version: DST-632551 "
    },
    "prefab:formal_blueprint(ReverseSearch)": {
        "prefix": "p+Formal Costume Pattern",
        "body": "\"formal_blueprint\"",
        "description": " ※prefab ID: formal_blueprint\n ※Name: Formal Costume Pattern\n ※prefab Version: DST-632551 "
    },
    "prefab:mosquito(ID Complete)": {
        "prefix": "p+mosquito",
        "body": "\"mosquito\"",
        "description": " ※prefab ID: mosquito\n ※Name: Mosquito\n ※prefab Version: DST-632551 "
    },
    "prefab:mosquito(ReverseSearch)": {
        "prefix": "p+Mosquito",
        "body": "\"mosquito\"",
        "description": " ※prefab ID: mosquito\n ※Name: Mosquito\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_medium_9_inv(ID Complete)": {
        "prefix": "p+oceanfish_medium_9_inv",
        "body": "\"oceanfish_medium_9_inv\"",
        "description": " ※prefab ID: oceanfish_medium_9_inv\n ※Name: Sweetish Fish\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_medium_9_inv(ReverseSearch)": {
        "prefix": "p+Sweetish Fish",
        "body": "\"oceanfish_medium_9_inv\"",
        "description": " ※prefab ID: oceanfish_medium_9_inv\n ※Name: Sweetish Fish\n ※prefab Version: DST-632551 "
    },
    "prefab:wall_ruins(ID Complete)": {
        "prefix": "p+wall_ruins",
        "body": "\"wall_ruins\"",
        "description": " ※prefab ID: wall_ruins\n ※Name: Thulecite Wall\n ※prefab Version: DST-632551 "
    },
    "prefab:wall_ruins(ReverseSearch)": {
        "prefix": "p+Thulecite Wall",
        "body": "\"wall_ruins\"",
        "description": " ※prefab ID: wall_ruins\n ※Name: Thulecite Wall\n ※prefab Version: DST-632551 "
    },
    "prefab:carnival_prizebooth(ID Complete)": {
        "prefix": "p+carnival_prizebooth",
        "body": "\"carnival_prizebooth\"",
        "description": " ※prefab ID: carnival_prizebooth\n ※Name: Prize Booth\n ※Recipe: \n\t+ 1 x: Prize Booth Kit/carnival_prizebooth_kit\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:carnival_prizebooth(ReverseSearch)": {
        "prefix": "p+Prize Booth",
        "body": "\"carnival_prizebooth\"",
        "description": " ※prefab ID: carnival_prizebooth\n ※Name: Prize Booth\n ※Recipe: \n\t+ 1 x: Prize Booth Kit/carnival_prizebooth_kit\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:stuffing(ID Complete)": {
        "prefix": "p+stuffing",
        "body": "\"stuffing\"",
        "description": " ※prefab ID: stuffing\n ※Name: Stuffing\n ※prefab Version: DST-632551 "
    },
    "prefab:stuffing(ReverseSearch)": {
        "prefix": "p+Stuffing",
        "body": "\"stuffing\"",
        "description": " ※prefab ID: stuffing\n ※Name: Stuffing\n ※prefab Version: DST-632551 "
    },
    "prefab:pocketwatch_recall(ID Complete)": {
        "prefix": "p+pocketwatch_recall",
        "body": "\"pocketwatch_recall\"",
        "description": " ※prefab ID: pocketwatch_recall\n ※Name: Backtrek Watch\n ※Recipe: \n\t+ 2 x: Time Pieces/pocketwatch_parts\n\t+ 2 x: Gold Nugget/goldnugget\n\t+ 1 x: Walrus Tusk/walrus_tusk\n ※Required Tech: \n\t+ LV.2 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:pocketwatch_recall(ReverseSearch)": {
        "prefix": "p+Backtrek Watch",
        "body": "\"pocketwatch_recall\"",
        "description": " ※prefab ID: pocketwatch_recall\n ※Name: Backtrek Watch\n ※Recipe: \n\t+ 2 x: Time Pieces/pocketwatch_parts\n\t+ 2 x: Gold Nugget/goldnugget\n\t+ 1 x: Walrus Tusk/walrus_tusk\n ※Required Tech: \n\t+ LV.2 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:decrease_health(ID Complete)": {
        "prefix": "p+decrease_health",
        "body": "\"decrease_health\"",
        "description": " ※prefab ID: decrease_health\n ※Name: Health\n ※prefab Version: DST-632551 "
    },
    "prefab:decrease_health(ReverseSearch)": {
        "prefix": "p+Health",
        "body": "\"decrease_health\"",
        "description": " ※prefab ID: decrease_health\n ※Name: Health\n ※prefab Version: DST-632551 "
    },
    "prefab:messagebottle(ID Complete)": {
        "prefix": "p+messagebottle",
        "body": "\"messagebottle\"",
        "description": " ※prefab ID: messagebottle\n ※Name: Message in a Bottle\n ※prefab Version: DST-632551 "
    },
    "prefab:messagebottle(ReverseSearch)": {
        "prefix": "p+Message in a Bottle",
        "body": "\"messagebottle\"",
        "description": " ※prefab ID: messagebottle\n ※Name: Message in a Bottle\n ※prefab Version: DST-632551 "
    },
    "prefab:cave_entrance_open_cave(ID Complete)": {
        "prefix": "p+cave_entrance_open_cave",
        "body": "\"cave_entrance_open_cave\"",
        "description": " ※prefab ID: cave_entrance_open_cave\n ※Name: Deeper\n ※prefab Version: DST-632551 "
    },
    "prefab:cave_entrance_open_cave(ReverseSearch)": {
        "prefix": "p+Deeper",
        "body": "\"cave_entrance_open_cave\"",
        "description": " ※prefab ID: cave_entrance_open_cave\n ※Name: Deeper\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishinglure_hermit_rain(ID Complete)": {
        "prefix": "p+oceanfishinglure_hermit_rain",
        "body": "\"oceanfishinglure_hermit_rain\"",
        "description": " ※prefab ID: oceanfishinglure_hermit_rain\n ※Name: Rainy Day Lure\n ※Recipe: \n\t+ 1 x: Cookie Cutter Shell/cookiecuttershell\n\t+ 1 x: Mosquito Sack/mosquitosack\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfishinglure_hermit_rain(ReverseSearch)": {
        "prefix": "p+Rainy Day Lure",
        "body": "\"oceanfishinglure_hermit_rain\"",
        "description": " ※prefab ID: oceanfishinglure_hermit_rain\n ※Name: Rainy Day Lure\n ※Recipe: \n\t+ 1 x: Cookie Cutter Shell/cookiecuttershell\n\t+ 1 x: Mosquito Sack/mosquitosack\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalcannon_streamer_kit(ID Complete)": {
        "prefix": "p+carnivalcannon_streamer_kit",
        "body": "\"carnivalcannon_streamer_kit\"",
        "description": " ※prefab ID: carnivalcannon_streamer_kit\n ※Name: Streamer Cannon Kit\n ※Recipe: \n\t+ 18 x: Prize Tickets/carnival_prizeticket\n ※Required Tech: \n\t+ LV.1 : Trinket Trove/CARNIVAL_PRIZESHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalcannon_streamer_kit(ReverseSearch)": {
        "prefix": "p+Streamer Cannon Kit",
        "body": "\"carnivalcannon_streamer_kit\"",
        "description": " ※prefab ID: carnivalcannon_streamer_kit\n ※Name: Streamer Cannon Kit\n ※Recipe: \n\t+ 18 x: Prize Tickets/carnival_prizeticket\n ※Required Tech: \n\t+ LV.1 : Trinket Trove/CARNIVAL_PRIZESHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_grill_small_item(ID Complete)": {
        "prefix": "p+quagmire_grill_small_item",
        "body": "\"quagmire_grill_small_item\"",
        "description": " ※prefab ID: quagmire_grill_small_item\n ※Name: Small Grill\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_grill_small_item(ReverseSearch)": {
        "prefix": "p+Small Grill",
        "body": "\"quagmire_grill_small_item\"",
        "description": " ※prefab ID: quagmire_grill_small_item\n ※Name: Small Grill\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_deerclops_mutated(ID Complete)": {
        "prefix": "p+chesspiece_deerclops_mutated",
        "body": "\"chesspiece_deerclops_mutated\"",
        "description": " ※prefab ID: chesspiece_deerclops_mutated\n ※Name: Crystal Deerclops Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_deerclops_mutated(ReverseSearch)": {
        "prefix": "p+Crystal Deerclops Figure",
        "body": "\"chesspiece_deerclops_mutated\"",
        "description": " ※prefab ID: chesspiece_deerclops_mutated\n ※Name: Crystal Deerclops Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_savanna(ID Complete)": {
        "prefix": "p+turf_savanna",
        "body": "\"turf_savanna\"",
        "description": " ※prefab ID: turf_savanna\n ※Name: Savanna Turf\n ※Recipe: \n\t+ 1 x: Cut Grass/cutgrass\n\t+ 1 x: Manure/poop\n ※Required Tech: \n\t+ LV.2 : Landscaping/TURFCRAFTING\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_savanna(ReverseSearch)": {
        "prefix": "p+Savanna Turf",
        "body": "\"turf_savanna\"",
        "description": " ※prefab ID: turf_savanna\n ※Name: Savanna Turf\n ※Recipe: \n\t+ 1 x: Cut Grass/cutgrass\n\t+ 1 x: Manure/poop\n ※Required Tech: \n\t+ LV.2 : Landscaping/TURFCRAFTING\n ※prefab Version: DST-632551 "
    },
    "prefab:messagebottleempty(ID Complete)": {
        "prefix": "p+messagebottleempty",
        "body": "\"messagebottleempty\"",
        "description": " ※prefab ID: messagebottleempty\n ※Name: Empty Bottle\n ※prefab Version: DST-632551 "
    },
    "prefab:messagebottleempty(ReverseSearch)": {
        "prefix": "p+Empty Bottle",
        "body": "\"messagebottleempty\"",
        "description": " ※prefab ID: messagebottleempty\n ※Name: Empty Bottle\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_bearger(ID Complete)": {
        "prefix": "p+chesspiece_bearger",
        "body": "\"chesspiece_bearger\"",
        "description": " ※prefab ID: chesspiece_bearger\n ※Name: Bearger Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_bearger(ReverseSearch)": {
        "prefix": "p+Bearger Figure",
        "body": "\"chesspiece_bearger\"",
        "description": " ※prefab ID: chesspiece_bearger\n ※Name: Bearger Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:dragonboat_body(ID Complete)": {
        "prefix": "p+dragonboat_body",
        "body": "\"dragonboat_body\"",
        "description": " ※prefab ID: dragonboat_body\n ※Name: Dragonfly Boat\n ※prefab Version: DST-632551 "
    },
    "prefab:dragonboat_body(ReverseSearch)": {
        "prefix": "p+Dragonfly Boat",
        "body": "\"dragonboat_body\"",
        "description": " ※prefab ID: dragonboat_body\n ※Name: Dragonfly Boat\n ※prefab Version: DST-632551 "
    },
    "prefab:cookedmeat(ID Complete)": {
        "prefix": "p+cookedmeat",
        "body": "\"cookedmeat\"",
        "description": " ※prefab ID: cookedmeat\n ※Name: Cooked Meat\n ※prefab Version: DST-632551 "
    },
    "prefab:cookedmeat(ReverseSearch)": {
        "prefix": "p+Cooked Meat",
        "body": "\"cookedmeat\"",
        "description": " ※prefab ID: cookedmeat\n ※Name: Cooked Meat\n ※prefab Version: DST-632551 "
    },
    "prefab:twiggytree(ID Complete)": {
        "prefix": "p+twiggytree",
        "body": "\"twiggytree\"",
        "description": " ※prefab ID: twiggytree\n ※Name: Twiggy Tree\n ※prefab Version: DST-632551 "
    },
    "prefab:twiggytree(ReverseSearch)": {
        "prefix": "p+Twiggy Tree",
        "body": "\"twiggytree\"",
        "description": " ※prefab ID: twiggytree\n ※Name: Twiggy Tree\n ※prefab Version: DST-632551 "
    },
    "prefab:known_onion_seeds(ID Complete)": {
        "prefix": "p+known_onion_seeds",
        "body": "\"known_onion_seeds\"",
        "description": " ※prefab ID: known_onion_seeds\n ※Name: Onion Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:known_onion_seeds(ReverseSearch)": {
        "prefix": "p+Onion Seeds",
        "body": "\"known_onion_seeds\"",
        "description": " ※prefab ID: known_onion_seeds\n ※Name: Onion Seeds\n ※prefab Version: DST-632551 "
    },
    "prefab:kitcoon_savanna(ID Complete)": {
        "prefix": "p+kitcoon_savanna",
        "body": "\"kitcoon_savanna\"",
        "description": " ※prefab ID: kitcoon_savanna\n ※Name: Kitcoon\n ※prefab Version: DST-632551 "
    },
    "prefab:kitcoon_savanna(ReverseSearch)": {
        "prefix": "p+Kitcoon",
        "body": "\"kitcoon_savanna\"",
        "description": " ※prefab ID: kitcoon_savanna\n ※Name: Kitcoon\n ※prefab Version: DST-632551 "
    },
    "prefab:pepper(ID Complete)": {
        "prefix": "p+pepper",
        "body": "\"pepper\"",
        "description": " ※prefab ID: pepper\n ※Name: Pepper\n ※prefab Version: DST-632551 "
    },
    "prefab:pepper(ReverseSearch)": {
        "prefix": "p+Pepper",
        "body": "\"pepper\"",
        "description": " ※prefab ID: pepper\n ※Name: Pepper\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_bowl_silver(ID Complete)": {
        "prefix": "p+quagmire_bowl_silver",
        "body": "\"quagmire_bowl_silver\"",
        "description": " ※prefab ID: quagmire_bowl_silver\n ※Name: Silver Bowl\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_bowl_silver(ReverseSearch)": {
        "prefix": "p+Silver Bowl",
        "body": "\"quagmire_bowl_silver\"",
        "description": " ※prefab ID: quagmire_bowl_silver\n ※Name: Silver Bowl\n ※prefab Version: DST-632551 "
    },
    "prefab:silk(ID Complete)": {
        "prefix": "p+silk",
        "body": "\"silk\"",
        "description": " ※prefab ID: silk\n ※Name: Silk\n ※prefab Version: DST-632551 "
    },
    "prefab:silk(ReverseSearch)": {
        "prefix": "p+Silk",
        "body": "\"silk\"",
        "description": " ※prefab ID: silk\n ※Name: Silk\n ※prefab Version: DST-632551 "
    },
    "prefab:boat_ancient_container(ID Complete)": {
        "prefix": "p+boat_ancient_container",
        "body": "\"boat_ancient_container\"",
        "description": " ※prefab ID: boat_ancient_container\n ※Name: Cargo Hold\n ※prefab Version: DST-632551 "
    },
    "prefab:boat_ancient_container(ReverseSearch)": {
        "prefix": "p+Cargo Hold",
        "body": "\"boat_ancient_container\"",
        "description": " ※prefab ID: boat_ancient_container\n ※Name: Cargo Hold\n ※prefab Version: DST-632551 "
    },
    "prefab:beemine_maxwell(ID Complete)": {
        "prefix": "p+beemine_maxwell",
        "body": "\"beemine_maxwell\"",
        "description": " ※prefab ID: beemine_maxwell\n ※Name: Maxwell's Mosquito Trap\n ※prefab Version: DST-632551 "
    },
    "prefab:beemine_maxwell(ReverseSearch)": {
        "prefix": "p+Maxwell's Mosquito Trap",
        "body": "\"beemine_maxwell\"",
        "description": " ※prefab ID: beemine_maxwell\n ※Name: Maxwell's Mosquito Trap\n ※prefab Version: DST-632551 "
    },
    "prefab:cave_entrance_ruins(ID Complete)": {
        "prefix": "p+cave_entrance_ruins",
        "body": "\"cave_entrance_ruins\"",
        "description": " ※prefab ID: cave_entrance_ruins\n ※Name: Plugged Hole\n ※prefab Version: DST-632551 "
    },
    "prefab:cave_entrance_ruins(ReverseSearch)": {
        "prefix": "p+Plugged Hole",
        "body": "\"cave_entrance_ruins\"",
        "description": " ※prefab ID: cave_entrance_ruins\n ※Name: Plugged Hole\n ※prefab Version: DST-632551 "
    },
    "prefab:boatrace_spectator_dragonling(ID Complete)": {
        "prefix": "p+boatrace_spectator_dragonling",
        "body": "\"boatrace_spectator_dragonling\"",
        "description": " ※prefab ID: boatrace_spectator_dragonling\n ※Name: Broodling Spectator\n ※prefab Version: DST-632551 "
    },
    "prefab:boatrace_spectator_dragonling(ReverseSearch)": {
        "prefix": "p+Broodling Spectator",
        "body": "\"boatrace_spectator_dragonling\"",
        "description": " ※prefab ID: boatrace_spectator_dragonling\n ※Name: Broodling Spectator\n ※prefab Version: DST-632551 "
    },
    "prefab:critter_lamb_builder(ID Complete)": {
        "prefix": "p+critter_lamb_builder",
        "body": "\"critter_lamb_builder\"",
        "description": " ※prefab ID: critter_lamb_builder\n ※Name: Ewelet\n ※Recipe: \n\t+ 1 x: Steel Wool/steelwool\n\t+ 1 x: Guacamole/guacamole\n ※Required Tech: \n\t+ LV.1 : Critters/ORPHANAGE\n ※prefab Version: DST-632551 "
    },
    "prefab:critter_lamb_builder(ReverseSearch)": {
        "prefix": "p+Ewelet",
        "body": "\"critter_lamb_builder\"",
        "description": " ※prefab ID: critter_lamb_builder\n ※Name: Ewelet\n ※Recipe: \n\t+ 1 x: Steel Wool/steelwool\n\t+ 1 x: Guacamole/guacamole\n ※Required Tech: \n\t+ LV.1 : Critters/ORPHANAGE\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_warg_mutated_sketch(ID Complete)": {
        "prefix": "p+chesspiece_warg_mutated_sketch",
        "body": "\"chesspiece_warg_mutated_sketch\"",
        "description": " ※prefab ID: chesspiece_warg_mutated_sketch\n ※Name: Possessed Varg Figure Sketch\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_warg_mutated_sketch(ReverseSearch)": {
        "prefix": "p+Possessed Varg Figure Sketch",
        "body": "\"chesspiece_warg_mutated_sketch\"",
        "description": " ※prefab ID: chesspiece_warg_mutated_sketch\n ※Name: Possessed Varg Figure Sketch\n ※prefab Version: DST-632551 "
    },
    "prefab:thurible(ID Complete)": {
        "prefix": "p+thurible",
        "body": "\"thurible\"",
        "description": " ※prefab ID: thurible\n ※Name: Shadow Thurible\n ※Recipe: \n\t+ 2 x: Cut Stone/cutstone\n\t+ 6 x: Nightmare Fuel/nightmarefuel\n\t+ 1 x: Ashes/ash\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:thurible(ReverseSearch)": {
        "prefix": "p+Shadow Thurible",
        "body": "\"thurible\"",
        "description": " ※prefab ID: thurible\n ※Name: Shadow Thurible\n ※Recipe: \n\t+ 2 x: Cut Stone/cutstone\n\t+ 6 x: Nightmare Fuel/nightmarefuel\n\t+ 1 x: Ashes/ash\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:waterplant_bomb(ID Complete)": {
        "prefix": "p+waterplant_bomb",
        "body": "\"waterplant_bomb\"",
        "description": " ※prefab ID: waterplant_bomb\n ※Name: Seedshell\n ※prefab Version: DST-632551 "
    },
    "prefab:waterplant_bomb(ReverseSearch)": {
        "prefix": "p+Seedshell",
        "body": "\"waterplant_bomb\"",
        "description": " ※prefab ID: waterplant_bomb\n ※Name: Seedshell\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_yotd_sketch(ID Complete)": {
        "prefix": "p+chesspiece_yotd_sketch",
        "body": "\"chesspiece_yotd_sketch\"",
        "description": " ※prefab ID: chesspiece_yotd_sketch\n ※Name: Start Tower Figure Sketch\n ※Recipe: \n\t+ 8 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /DRAGONOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_yotd_sketch(ReverseSearch)": {
        "prefix": "p+Start Tower Figure Sketch",
        "body": "\"chesspiece_yotd_sketch\"",
        "description": " ※prefab ID: chesspiece_yotd_sketch\n ※Name: Start Tower Figure Sketch\n ※Recipe: \n\t+ 8 x: Lucky Gold Nugget/lucky_goldnugget\n ※Required Tech: \n\t+ LV.3 : /DRAGONOFFERING\n ※prefab Version: DST-632551 "
    },
    "prefab:pumpkinpie(ID Complete)": {
        "prefix": "p+pumpkinpie",
        "body": "\"pumpkinpie\"",
        "description": " ※prefab ID: pumpkinpie\n ※Name: Pumpkin Pie\n ※prefab Version: DST-632551 "
    },
    "prefab:pumpkinpie(ReverseSearch)": {
        "prefix": "p+Pumpkin Pie",
        "body": "\"pumpkinpie\"",
        "description": " ※prefab ID: pumpkinpie\n ※Name: Pumpkin Pie\n ※prefab Version: DST-632551 "
    },
    "prefab:blowdart_lava2(ID Complete)": {
        "prefix": "p+blowdart_lava2",
        "body": "\"blowdart_lava2\"",
        "description": " ※prefab ID: blowdart_lava2\n ※Name: Molten Darts\n ※prefab Version: DST-632551 "
    },
    "prefab:blowdart_lava2(ReverseSearch)": {
        "prefix": "p+Molten Darts",
        "body": "\"blowdart_lava2\"",
        "description": " ※prefab ID: blowdart_lava2\n ※Name: Molten Darts\n ※prefab Version: DST-632551 "
    },
    "prefab:gravestone(ID Complete)": {
        "prefix": "p+gravestone",
        "body": "\"gravestone\"",
        "description": " ※prefab ID: gravestone\n ※Name: Headstone\n ※prefab Version: DST-632551 "
    },
    "prefab:gravestone(ReverseSearch)": {
        "prefix": "p+Headstone",
        "body": "\"gravestone\"",
        "description": " ※prefab ID: gravestone\n ※Name: Headstone\n ※prefab Version: DST-632551 "
    },
    "prefab:wobster_sheller(ID Complete)": {
        "prefix": "p+wobster_sheller",
        "body": "\"wobster_sheller\"",
        "description": " ※prefab ID: wobster_sheller\n ※Name: Wobster\n ※prefab Version: DST-632551 "
    },
    "prefab:wobster_sheller(ReverseSearch)": {
        "prefix": "p+Wobster",
        "body": "\"wobster_sheller\"",
        "description": " ※prefab ID: wobster_sheller\n ※Name: Wobster\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivaldecor_plant_kit(ID Complete)": {
        "prefix": "p+carnivaldecor_plant_kit",
        "body": "\"carnivaldecor_plant_kit\"",
        "description": " ※prefab ID: carnivaldecor_plant_kit\n ※Name: Miniature Tree Kit\n ※Recipe: \n\t+ 24 x: Prize Tickets/carnival_prizeticket\n ※Required Tech: \n\t+ LV.1 : Trinket Trove/CARNIVAL_PRIZESHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivaldecor_plant_kit(ReverseSearch)": {
        "prefix": "p+Miniature Tree Kit",
        "body": "\"carnivaldecor_plant_kit\"",
        "description": " ※prefab ID: carnivaldecor_plant_kit\n ※Name: Miniature Tree Kit\n ※Recipe: \n\t+ 24 x: Prize Tickets/carnival_prizeticket\n ※Required Tech: \n\t+ LV.1 : Trinket Trove/CARNIVAL_PRIZESHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:tamales(ID Complete)": {
        "prefix": "p+tamales",
        "body": "\"tamales\"",
        "description": " ※prefab ID: tamales\n ※Name: Tamales\n ※prefab Version: DST-632551 "
    },
    "prefab:tamales(ReverseSearch)": {
        "prefix": "p+Tamales",
        "body": "\"tamales\"",
        "description": " ※prefab ID: tamales\n ※Name: Tamales\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_034(ID Complete)": {
        "prefix": "p+quagmire_food_034",
        "body": "\"quagmire_food_034\"",
        "description": " ※prefab ID: quagmire_food_034\n ※Name: Fish Burger\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_034(ReverseSearch)": {
        "prefix": "p+Fish Burger",
        "body": "\"quagmire_food_034\"",
        "description": " ※prefab ID: quagmire_food_034\n ※Name: Fish Burger\n ※prefab Version: DST-632551 "
    },
    "prefab:dumbbell_redgem(ID Complete)": {
        "prefix": "p+dumbbell_redgem",
        "body": "\"dumbbell_redgem\"",
        "description": " ※prefab ID: dumbbell_redgem\n ※Name: Firebell\n ※Recipe: \n\t+ 2 x: Thulecite/thulecite\n\t+ 1 x: Red Gem/redgem\n\t+ 1 x: Twigs/twigs\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:dumbbell_redgem(ReverseSearch)": {
        "prefix": "p+Firebell",
        "body": "\"dumbbell_redgem\"",
        "description": " ※prefab ID: dumbbell_redgem\n ※Name: Firebell\n ※Recipe: \n\t+ 2 x: Thulecite/thulecite\n\t+ 1 x: Red Gem/redgem\n\t+ 1 x: Twigs/twigs\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:cave_entrance(ID Complete)": {
        "prefix": "p+cave_entrance",
        "body": "\"cave_entrance\"",
        "description": " ※prefab ID: cave_entrance\n ※Name: Plugged Sinkhole\n ※prefab Version: DST-632551 "
    },
    "prefab:cave_entrance(ReverseSearch)": {
        "prefix": "p+Plugged Sinkhole",
        "body": "\"cave_entrance\"",
        "description": " ※prefab ID: cave_entrance\n ※Name: Plugged Sinkhole\n ※prefab Version: DST-632551 "
    },
    "prefab:beehive(ID Complete)": {
        "prefix": "p+beehive",
        "body": "\"beehive\"",
        "description": " ※prefab ID: beehive\n ※Name: Beehive\n ※prefab Version: DST-632551 "
    },
    "prefab:beehive(ReverseSearch)": {
        "prefix": "p+Beehive",
        "body": "\"beehive\"",
        "description": " ※prefab ID: beehive\n ※Name: Beehive\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_formal(ID Complete)": {
        "prefix": "p+chesspiece_formal",
        "body": "\"chesspiece_formal\"",
        "description": " ※prefab ID: chesspiece_formal\n ※Name: Kingly Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_formal(ReverseSearch)": {
        "prefix": "p+Kingly Figure",
        "body": "\"chesspiece_formal\"",
        "description": " ※prefab ID: chesspiece_formal\n ※Name: Kingly Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivaldecor_eggride3_kit(ID Complete)": {
        "prefix": "p+carnivaldecor_eggride3_kit",
        "body": "\"carnivaldecor_eggride3_kit\"",
        "description": " ※prefab ID: carnivaldecor_eggride3_kit\n ※Name: Mini Pendulum Ride Kit\n ※Recipe: \n\t+ 36 x: Prize Tickets/carnival_prizeticket\n ※Required Tech: \n\t+ LV.1 : Trinket Trove/CARNIVAL_PRIZESHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivaldecor_eggride3_kit(ReverseSearch)": {
        "prefix": "p+Mini Pendulum Ride Kit",
        "body": "\"carnivaldecor_eggride3_kit\"",
        "description": " ※prefab ID: carnivaldecor_eggride3_kit\n ※Name: Mini Pendulum Ride Kit\n ※Recipe: \n\t+ 36 x: Prize Tickets/carnival_prizeticket\n ※Required Tech: \n\t+ LV.1 : Trinket Trove/CARNIVAL_PRIZESHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:salsa(ID Complete)": {
        "prefix": "p+salsa",
        "body": "\"salsa\"",
        "description": " ※prefab ID: salsa\n ※Name: Salsa Fresca\n ※prefab Version: DST-632551 "
    },
    "prefab:salsa(ReverseSearch)": {
        "prefix": "p+Salsa Fresca",
        "body": "\"salsa\"",
        "description": " ※prefab ID: salsa\n ※Name: Salsa Fresca\n ※prefab Version: DST-632551 "
    },
    "prefab:statueharp(ID Complete)": {
        "prefix": "p+statueharp",
        "body": "\"statueharp\"",
        "description": " ※prefab ID: statueharp\n ※Name: Harp Statue\n ※prefab Version: DST-632551 "
    },
    "prefab:statueharp(ReverseSearch)": {
        "prefix": "p+Harp Statue",
        "body": "\"statueharp\"",
        "description": " ※prefab ID: statueharp\n ※Name: Harp Statue\n ※prefab Version: DST-632551 "
    },
    "prefab:treasurechest_trap(ID Complete)": {
        "prefix": "p+treasurechest_trap",
        "body": "\"treasurechest_trap\"",
        "description": " ※prefab ID: treasurechest_trap\n ※Name: Treasure Chest\n ※prefab Version: DST-632551 "
    },
    "prefab:treasurechest_trap(ReverseSearch)": {
        "prefix": "p+Treasure Chest",
        "body": "\"treasurechest_trap\"",
        "description": " ※prefab ID: treasurechest_trap\n ※Name: Treasure Chest\n ※prefab Version: DST-632551 "
    },
    "prefab:hedgehound(ID Complete)": {
        "prefix": "p+hedgehound",
        "body": "\"hedgehound\"",
        "description": " ※prefab ID: hedgehound\n ※Name: Briar Wolf\n ※prefab Version: DST-632551 "
    },
    "prefab:hedgehound(ReverseSearch)": {
        "prefix": "p+Briar Wolf",
        "body": "\"hedgehound\"",
        "description": " ※prefab ID: hedgehound\n ※Name: Briar Wolf\n ※prefab Version: DST-632551 "
    },
    "prefab:carnival_prizeticket(ID Complete)": {
        "prefix": "p+carnival_prizeticket",
        "body": "\"carnival_prizeticket\"",
        "description": " ※prefab ID: carnival_prizeticket\n ※Name: Prize Tickets\n ※prefab Version: DST-632551 "
    },
    "prefab:carnival_prizeticket(ReverseSearch)": {
        "prefix": "p+Prize Tickets",
        "body": "\"carnival_prizeticket\"",
        "description": " ※prefab ID: carnival_prizeticket\n ※Name: Prize Tickets\n ※prefab Version: DST-632551 "
    },
    "prefab:spice_sugar(ID Complete)": {
        "prefix": "p+spice_sugar",
        "body": "\"spice_sugar\"",
        "description": " ※prefab ID: spice_sugar\n ※Name: Honey Crystals\n ※Recipe: \n\t+ 3 x: Honey/honey\n ※Required Tech: \n\t+ LV.1 : Seasonings/FOODPROCESSING\n ※prefab Version: DST-632551 "
    },
    "prefab:spice_sugar(ReverseSearch)": {
        "prefix": "p+Honey Crystals",
        "body": "\"spice_sugar\"",
        "description": " ※prefab ID: spice_sugar\n ※Name: Honey Crystals\n ※Recipe: \n\t+ 3 x: Honey/honey\n ※Required Tech: \n\t+ LV.1 : Seasonings/FOODPROCESSING\n ※prefab Version: DST-632551 "
    },
    "prefab:berrybush2(ID Complete)": {
        "prefix": "p+berrybush2",
        "body": "\"berrybush2\"",
        "description": " ※prefab ID: berrybush2\n ※Name: Berry Bush\n ※prefab Version: DST-632551 "
    },
    "prefab:berrybush2(ReverseSearch)": {
        "prefix": "p+Berry Bush",
        "body": "\"berrybush2\"",
        "description": " ※prefab ID: berrybush2\n ※Name: Berry Bush\n ※prefab Version: DST-632551 "
    },
    "prefab:farm_plant_corn(ID Complete)": {
        "prefix": "p+farm_plant_corn",
        "body": "\"farm_plant_corn\"",
        "description": " ※prefab ID: farm_plant_corn\n ※Name: Corn Stalk\n ※prefab Version: DST-632551 "
    },
    "prefab:farm_plant_corn(ReverseSearch)": {
        "prefix": "p+Corn Stalk",
        "body": "\"farm_plant_corn\"",
        "description": " ※prefab ID: farm_plant_corn\n ※Name: Corn Stalk\n ※prefab Version: DST-632551 "
    },
    "prefab:durian_seeds(ID Complete)": {
        "prefix": "p+durian_seeds",
        "body": "\"durian_seeds\"",
        "description": " ※prefab ID: durian_seeds\n ※Name: Brittle Seed Pods\n ※prefab Version: DST-632551 "
    },
    "prefab:durian_seeds(ReverseSearch)": {
        "prefix": "p+Brittle Seed Pods",
        "body": "\"durian_seeds\"",
        "description": " ※prefab ID: durian_seeds\n ※Name: Brittle Seed Pods\n ※prefab Version: DST-632551 "
    },
    "prefab:inspectaclesbox2(ID Complete)": {
        "prefix": "p+inspectaclesbox2",
        "body": "\"inspectaclesbox2\"",
        "description": " ※prefab ID: inspectaclesbox2\n ※Name: Advanced Cachebox\n ※prefab Version: DST-632551 "
    },
    "prefab:inspectaclesbox2(ReverseSearch)": {
        "prefix": "p+Advanced Cachebox",
        "body": "\"inspectaclesbox2\"",
        "description": " ※prefab ID: inspectaclesbox2\n ※Name: Advanced Cachebox\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalcannon_confetti_kit(ID Complete)": {
        "prefix": "p+carnivalcannon_confetti_kit",
        "body": "\"carnivalcannon_confetti_kit\"",
        "description": " ※prefab ID: carnivalcannon_confetti_kit\n ※Name: Confetti Cannon Kit\n ※Recipe: \n\t+ 18 x: Prize Tickets/carnival_prizeticket\n ※Required Tech: \n\t+ LV.1 : Trinket Trove/CARNIVAL_PRIZESHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivalcannon_confetti_kit(ReverseSearch)": {
        "prefix": "p+Confetti Cannon Kit",
        "body": "\"carnivalcannon_confetti_kit\"",
        "description": " ※prefab ID: carnivalcannon_confetti_kit\n ※Name: Confetti Cannon Kit\n ※Recipe: \n\t+ 18 x: Prize Tickets/carnival_prizeticket\n ※Required Tech: \n\t+ LV.1 : Trinket Trove/CARNIVAL_PRIZESHOP\n ※prefab Version: DST-632551 "
    },
    "prefab:wathgrithr(ID Complete)": {
        "prefix": "p+wathgrithr",
        "body": "\"wathgrithr\"",
        "description": " ※prefab ID: wathgrithr\n ※Name: Wigfrid\n ※prefab Version: DST-632551 "
    },
    "prefab:wathgrithr(ReverseSearch)": {
        "prefix": "p+Wigfrid",
        "body": "\"wathgrithr\"",
        "description": " ※prefab ID: wathgrithr\n ※Name: Wigfrid\n ※prefab Version: DST-632551 "
    },
    "prefab:wargshrine(ID Complete)": {
        "prefix": "p+wargshrine",
        "body": "\"wargshrine\"",
        "description": " ※prefab ID: wargshrine\n ※Name: Varg Shrine\n ※Recipe: \n\t+ 4 x: Gold Nugget/goldnugget\n\t+ 2 x: Boards/boards\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:wargshrine(ReverseSearch)": {
        "prefix": "p+Varg Shrine",
        "body": "\"wargshrine\"",
        "description": " ※prefab ID: wargshrine\n ※Name: Varg Shrine\n ※Recipe: \n\t+ 4 x: Gold Nugget/goldnugget\n\t+ 2 x: Boards/boards\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:critter_puppy_builder(ID Complete)": {
        "prefix": "p+critter_puppy_builder",
        "body": "\"critter_puppy_builder\"",
        "description": " ※prefab ID: critter_puppy_builder\n ※Name: Vargling\n ※Recipe: \n\t+ 1 x: Hound's Tooth/houndstooth\n\t+ 1 x: Monster Lasagna/monsterlasagna\n ※Required Tech: \n\t+ LV.1 : Critters/ORPHANAGE\n ※prefab Version: DST-632551 "
    },
    "prefab:critter_puppy_builder(ReverseSearch)": {
        "prefix": "p+Vargling",
        "body": "\"critter_puppy_builder\"",
        "description": " ※prefab ID: critter_puppy_builder\n ※Name: Vargling\n ※Recipe: \n\t+ 1 x: Hound's Tooth/houndstooth\n\t+ 1 x: Monster Lasagna/monsterlasagna\n ※Required Tech: \n\t+ LV.1 : Critters/ORPHANAGE\n ※prefab Version: DST-632551 "
    },
    "prefab:carpentry_station(ID Complete)": {
        "prefix": "p+carpentry_station",
        "body": "\"carpentry_station\"",
        "description": " ※prefab ID: carpentry_station\n ※Name: Sawhorse\n ※Recipe: \n\t+ 4 x: Boards/boards\n\t+ 4 x: Flint/flint\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:carpentry_station(ReverseSearch)": {
        "prefix": "p+Sawhorse",
        "body": "\"carpentry_station\"",
        "description": " ※prefab ID: carpentry_station\n ※Name: Sawhorse\n ※Recipe: \n\t+ 4 x: Boards/boards\n\t+ 4 x: Flint/flint\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:lobsterbisque(ID Complete)": {
        "prefix": "p+lobsterbisque",
        "body": "\"lobsterbisque\"",
        "description": " ※prefab ID: lobsterbisque\n ※Name: Lobster Bisque\n ※prefab Version: DST-632551 "
    },
    "prefab:lobsterbisque(ReverseSearch)": {
        "prefix": "p+Lobster Bisque",
        "body": "\"lobsterbisque\"",
        "description": " ※prefab ID: lobsterbisque\n ※Name: Lobster Bisque\n ※prefab Version: DST-632551 "
    },
    "prefab:worm_boss(ID Complete)": {
        "prefix": "p+worm_boss",
        "body": "\"worm_boss\"",
        "description": " ※prefab ID: worm_boss\n ※Name: Great Depths Worm\n ※prefab Version: DST-632551 "
    },
    "prefab:worm_boss(ReverseSearch)": {
        "prefix": "p+Great Depths Worm",
        "body": "\"worm_boss\"",
        "description": " ※prefab ID: worm_boss\n ※Name: Great Depths Worm\n ※prefab Version: DST-632551 "
    },
    "prefab:kitcoon_yot(ID Complete)": {
        "prefix": "p+kitcoon_yot",
        "body": "\"kitcoon_yot\"",
        "description": " ※prefab ID: kitcoon_yot\n ※Name: Kitcoon\n ※prefab Version: DST-632551 "
    },
    "prefab:kitcoon_yot(ReverseSearch)": {
        "prefix": "p+Kitcoon",
        "body": "\"kitcoon_yot\"",
        "description": " ※prefab ID: kitcoon_yot\n ※Name: Kitcoon\n ※prefab Version: DST-632551 "
    },
    "prefab:emberlight(ID Complete)": {
        "prefix": "p+emberlight",
        "body": "\"emberlight\"",
        "description": " ※prefab ID: emberlight\n ※Name: Fire Ball\n ※prefab Version: DST-632551 "
    },
    "prefab:emberlight(ReverseSearch)": {
        "prefix": "p+Fire Ball",
        "body": "\"emberlight\"",
        "description": " ※prefab ID: emberlight\n ※Name: Fire Ball\n ※prefab Version: DST-632551 "
    },
    "prefab:plant_normal(ID Complete)": {
        "prefix": "p+plant_normal",
        "body": "\"plant_normal\"",
        "description": " ※prefab ID: plant_normal\n ※Name: Crop\n ※prefab Version: DST-632551 "
    },
    "prefab:plant_normal(ReverseSearch)": {
        "prefix": "p+Crop",
        "body": "\"plant_normal\"",
        "description": " ※prefab ID: plant_normal\n ※Name: Crop\n ※prefab Version: DST-632551 "
    },
    "prefab:cutstone_bunch(ID Complete)": {
        "prefix": "p+cutstone_bunch",
        "body": "\"cutstone_bunch\"",
        "description": " ※prefab ID: cutstone_bunch\n ※Name: Bunch o' Stone\n ※Recipe: \n\t+ 15 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.3 : Carpentry/CARPENTRY\n ※prefab Version: DST-632551 "
    },
    "prefab:cutstone_bunch(ReverseSearch)": {
        "prefix": "p+Bunch o' Stone",
        "body": "\"cutstone_bunch\"",
        "description": " ※prefab ID: cutstone_bunch\n ※Name: Bunch o' Stone\n ※Recipe: \n\t+ 15 x: Rocks/rocks\n ※Required Tech: \n\t+ LV.3 : Carpentry/CARPENTRY\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_pebblecrab(ID Complete)": {
        "prefix": "p+quagmire_pebblecrab",
        "body": "\"quagmire_pebblecrab\"",
        "description": " ※prefab ID: quagmire_pebblecrab\n ※Name: Pebble Crab\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_pebblecrab(ReverseSearch)": {
        "prefix": "p+Pebble Crab",
        "body": "\"quagmire_pebblecrab\"",
        "description": " ※prefab ID: quagmire_pebblecrab\n ※Name: Pebble Crab\n ※prefab Version: DST-632551 "
    },
    "prefab:multiplayer_portal_moonrock(ID Complete)": {
        "prefix": "p+multiplayer_portal_moonrock",
        "body": "\"multiplayer_portal_moonrock\"",
        "description": " ※prefab ID: multiplayer_portal_moonrock\n ※Name: Celestial Portal\n ※prefab Version: DST-632551 "
    },
    "prefab:multiplayer_portal_moonrock(ReverseSearch)": {
        "prefix": "p+Celestial Portal",
        "body": "\"multiplayer_portal_moonrock\"",
        "description": " ※prefab ID: multiplayer_portal_moonrock\n ※Name: Celestial Portal\n ※prefab Version: DST-632551 "
    },
    "prefab:mermarmorhat(ID Complete)": {
        "prefix": "p+mermarmorhat",
        "body": "\"mermarmorhat\"",
        "description": " ※prefab ID: mermarmorhat\n ※Name: Swamp Brawler Helmet\n ※Recipe: \n\t+ 1 x: Log/log\n\t+ 1 x: Cut Grass/cutgrass\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:mermarmorhat(ReverseSearch)": {
        "prefix": "p+Swamp Brawler Helmet",
        "body": "\"mermarmorhat\"",
        "description": " ※prefab ID: mermarmorhat\n ※Name: Swamp Brawler Helmet\n ※Recipe: \n\t+ 1 x: Log/log\n\t+ 1 x: Cut Grass/cutgrass\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:wobster_sheller_dead_cooked(ID Complete)": {
        "prefix": "p+wobster_sheller_dead_cooked",
        "body": "\"wobster_sheller_dead_cooked\"",
        "description": " ※prefab ID: wobster_sheller_dead_cooked\n ※Name: Delicious Wobster\n ※prefab Version: DST-632551 "
    },
    "prefab:wobster_sheller_dead_cooked(ReverseSearch)": {
        "prefix": "p+Delicious Wobster",
        "body": "\"wobster_sheller_dead_cooked\"",
        "description": " ※prefab ID: wobster_sheller_dead_cooked\n ※Name: Delicious Wobster\n ※prefab Version: DST-632551 "
    },
    "prefab:wood_stool(ID Complete)": {
        "prefix": "p+wood_stool",
        "body": "\"wood_stool\"",
        "description": " ※prefab ID: wood_stool\n ※Name: Wooden Stool\n ※Recipe: \n\t+ 1 x: Boards/boards\n ※Required Tech: \n\t+ LV.2 : Carpentry/CARPENTRY\n ※prefab Version: DST-632551 "
    },
    "prefab:wood_stool(ReverseSearch)": {
        "prefix": "p+Wooden Stool",
        "body": "\"wood_stool\"",
        "description": " ※prefab ID: wood_stool\n ※Name: Wooden Stool\n ※Recipe: \n\t+ 1 x: Boards/boards\n ※Required Tech: \n\t+ LV.2 : Carpentry/CARPENTRY\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_016(ID Complete)": {
        "prefix": "p+quagmire_food_016",
        "body": "\"quagmire_food_016\"",
        "description": " ※prefab ID: quagmire_food_016\n ※Name: Carrot Soup\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_food_016(ReverseSearch)": {
        "prefix": "p+Carrot Soup",
        "body": "\"quagmire_food_016\"",
        "description": " ※prefab ID: quagmire_food_016\n ※Name: Carrot Soup\n ※prefab Version: DST-632551 "
    },
    "prefab:grassgekko(ID Complete)": {
        "prefix": "p+grassgekko",
        "body": "\"grassgekko\"",
        "description": " ※prefab ID: grassgekko\n ※Name: Grass Gekko\n ※prefab Version: DST-632551 "
    },
    "prefab:grassgekko(ReverseSearch)": {
        "prefix": "p+Grass Gekko",
        "body": "\"grassgekko\"",
        "description": " ※prefab ID: grassgekko\n ※Name: Grass Gekko\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_shellbeach(ID Complete)": {
        "prefix": "p+turf_shellbeach",
        "body": "\"turf_shellbeach\"",
        "description": " ※prefab ID: turf_shellbeach\n ※Name: Shell Beach Turf\n ※Recipe: \n\t+ 1 x: Rocks/rocks\n\t+ 1 x: Broken Shell/slurtle_shellpieces\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_shellbeach(ReverseSearch)": {
        "prefix": "p+Shell Beach Turf",
        "body": "\"turf_shellbeach\"",
        "description": " ※prefab ID: turf_shellbeach\n ※Name: Shell Beach Turf\n ※Recipe: \n\t+ 1 x: Rocks/rocks\n\t+ 1 x: Broken Shell/slurtle_shellpieces\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:trails(ID Complete)": {
        "prefix": "p+trails",
        "body": "\"trails\"",
        "description": " ※prefab ID: trails\n ※Name: Boarilla\n ※prefab Version: DST-632551 "
    },
    "prefab:trails(ReverseSearch)": {
        "prefix": "p+Boarilla",
        "body": "\"trails\"",
        "description": " ※prefab ID: trails\n ※Name: Boarilla\n ※prefab Version: DST-632551 "
    },
    "prefab:moon_cap_cooked(ID Complete)": {
        "prefix": "p+moon_cap_cooked",
        "body": "\"moon_cap_cooked\"",
        "description": " ※prefab ID: moon_cap_cooked\n ※Name: Cooked Moon Shroom\n ※prefab Version: DST-632551 "
    },
    "prefab:moon_cap_cooked(ReverseSearch)": {
        "prefix": "p+Cooked Moon Shroom",
        "body": "\"moon_cap_cooked\"",
        "description": " ※prefab ID: moon_cap_cooked\n ※Name: Cooked Moon Shroom\n ※prefab Version: DST-632551 "
    },
    "prefab:ruinsnightmare(ID Complete)": {
        "prefix": "p+ruinsnightmare",
        "body": "\"ruinsnightmare\"",
        "description": " ※prefab ID: ruinsnightmare\n ※Name: Lurking Nightmare\n ※prefab Version: DST-632551 "
    },
    "prefab:ruinsnightmare(ReverseSearch)": {
        "prefix": "p+Lurking Nightmare",
        "body": "\"ruinsnightmare\"",
        "description": " ※prefab ID: ruinsnightmare\n ※Name: Lurking Nightmare\n ※prefab Version: DST-632551 "
    },
    "prefab:wx78_moduleremover(ID Complete)": {
        "prefix": "p+wx78_moduleremover",
        "body": "\"wx78_moduleremover\"",
        "description": " ※prefab ID: wx78_moduleremover\n ※Name: Circuit Extractor\n ※Recipe: \n\t+ 2 x: Twigs/twigs\n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:wx78_moduleremover(ReverseSearch)": {
        "prefix": "p+Circuit Extractor",
        "body": "\"wx78_moduleremover\"",
        "description": " ※prefab ID: wx78_moduleremover\n ※Name: Circuit Extractor\n ※Recipe: \n\t+ 2 x: Twigs/twigs\n\t+ 2 x: Rocks/rocks\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:battlesong_lunaraligned(ID Complete)": {
        "prefix": "p+battlesong_lunaraligned",
        "body": "\"battlesong_lunaraligned\"",
        "description": " ※prefab ID: battlesong_lunaraligned\n ※Name: Enlightened Lullaby\n ※Recipe: \n\t+ 1 x: Papyrus/papyrus\n\t+ 1 x: Feather Pencil/featherpencil\n\t+ 3 x: Pure Brilliance/purebrilliance\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:battlesong_lunaraligned(ReverseSearch)": {
        "prefix": "p+Enlightened Lullaby",
        "body": "\"battlesong_lunaraligned\"",
        "description": " ※prefab ID: battlesong_lunaraligned\n ※Name: Enlightened Lullaby\n ※Recipe: \n\t+ 1 x: Papyrus/papyrus\n\t+ 1 x: Feather Pencil/featherpencil\n\t+ 3 x: Pure Brilliance/purebrilliance\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:shroom_skin(ID Complete)": {
        "prefix": "p+shroom_skin",
        "body": "\"shroom_skin\"",
        "description": " ※prefab ID: shroom_skin\n ※Name: Shroom Skin\n ※prefab Version: DST-632551 "
    },
    "prefab:shroom_skin(ReverseSearch)": {
        "prefix": "p+Shroom Skin",
        "body": "\"shroom_skin\"",
        "description": " ※prefab ID: shroom_skin\n ※Name: Shroom Skin\n ※prefab Version: DST-632551 "
    },
    "prefab:beefalo_groomer(ID Complete)": {
        "prefix": "p+beefalo_groomer",
        "body": "\"beefalo_groomer\"",
        "description": " ※prefab ID: beefalo_groomer\n ※Name: Beefalo Grooming Station\n ※Recipe: \n\t+ 4 x: Boards/boards\n\t+ 2 x: Beefalo Wool/beefalowool\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:beefalo_groomer(ReverseSearch)": {
        "prefix": "p+Beefalo Grooming Station",
        "body": "\"beefalo_groomer\"",
        "description": " ※prefab ID: beefalo_groomer\n ※Name: Beefalo Grooming Station\n ※Recipe: \n\t+ 4 x: Boards/boards\n\t+ 2 x: Beefalo Wool/beefalowool\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:pumpkincookie(ID Complete)": {
        "prefix": "p+pumpkincookie",
        "body": "\"pumpkincookie\"",
        "description": " ※prefab ID: pumpkincookie\n ※Name: Pumpkin Cookies\n ※prefab Version: DST-632551 "
    },
    "prefab:pumpkincookie(ReverseSearch)": {
        "prefix": "p+Pumpkin Cookies",
        "body": "\"pumpkincookie\"",
        "description": " ※prefab ID: pumpkincookie\n ※Name: Pumpkin Cookies\n ※prefab Version: DST-632551 "
    },
    "prefab:mast_malbatross_item(ID Complete)": {
        "prefix": "p+mast_malbatross_item",
        "body": "\"mast_malbatross_item\"",
        "description": " ※prefab ID: mast_malbatross_item\n ※Name: Winged Sail Kit\n ※Recipe: \n\t+ 3 x: Driftwood Piece/driftwood_log\n\t+ 3 x: Rope/rope\n\t+ 4 x: Feathery Canvas/malbatross_feathered_weave\n ※Required Tech: \n\t+ LV.1 : Seafaring/SEAFARING\n ※prefab Version: DST-632551 "
    },
    "prefab:mast_malbatross_item(ReverseSearch)": {
        "prefix": "p+Winged Sail Kit",
        "body": "\"mast_malbatross_item\"",
        "description": " ※prefab ID: mast_malbatross_item\n ※Name: Winged Sail Kit\n ※Recipe: \n\t+ 3 x: Driftwood Piece/driftwood_log\n\t+ 3 x: Rope/rope\n\t+ 4 x: Feathery Canvas/malbatross_feathered_weave\n ※Required Tech: \n\t+ LV.1 : Seafaring/SEAFARING\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_antlion(ID Complete)": {
        "prefix": "p+chesspiece_antlion",
        "body": "\"chesspiece_antlion\"",
        "description": " ※prefab ID: chesspiece_antlion\n ※Name: Antlion Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:chesspiece_antlion(ReverseSearch)": {
        "prefix": "p+Antlion Figure",
        "body": "\"chesspiece_antlion\"",
        "description": " ※prefab ID: chesspiece_antlion\n ※Name: Antlion Figure\n ※prefab Version: DST-632551 "
    },
    "prefab:world(ID Complete)": {
        "prefix": "p+world",
        "body": "\"world\"",
        "description": " ※prefab ID: world\n ※Name: The World\n ※prefab Version: DST-632551 "
    },
    "prefab:world(ReverseSearch)": {
        "prefix": "p+The World",
        "body": "\"world\"",
        "description": " ※prefab ID: world\n ※Name: The World\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_small_7(ID Complete)": {
        "prefix": "p+oceanfish_small_7",
        "body": "\"oceanfish_small_7\"",
        "description": " ※prefab ID: oceanfish_small_7\n ※Name: Bloomfin Tuna\n ※prefab Version: DST-632551 "
    },
    "prefab:oceanfish_small_7(ReverseSearch)": {
        "prefix": "p+Bloomfin Tuna",
        "body": "\"oceanfish_small_7\"",
        "description": " ※prefab ID: oceanfish_small_7\n ※Name: Bloomfin Tuna\n ※prefab Version: DST-632551 "
    },
    "prefab:dug_berrybush_juicy(ID Complete)": {
        "prefix": "p+dug_berrybush_juicy",
        "body": "\"dug_berrybush_juicy\"",
        "description": " ※prefab ID: dug_berrybush_juicy\n ※Name: Juicy Berry Bush\n ※prefab Version: DST-632551 "
    },
    "prefab:dug_berrybush_juicy(ReverseSearch)": {
        "prefix": "p+Juicy Berry Bush",
        "body": "\"dug_berrybush_juicy\"",
        "description": " ※prefab ID: dug_berrybush_juicy\n ※Name: Juicy Berry Bush\n ※prefab Version: DST-632551 "
    },
    "prefab:walkingplank_yotd(ID Complete)": {
        "prefix": "p+walkingplank_yotd",
        "body": "\"walkingplank_yotd\"",
        "description": " ※prefab ID: walkingplank_yotd\n ※Name: Scaled Plank\n ※prefab Version: DST-632551 "
    },
    "prefab:walkingplank_yotd(ReverseSearch)": {
        "prefix": "p+Scaled Plank",
        "body": "\"walkingplank_yotd\"",
        "description": " ※prefab ID: walkingplank_yotd\n ※Name: Scaled Plank\n ※prefab Version: DST-632551 "
    },
    "prefab:moon_device_construction3(ID Complete)": {
        "prefix": "p+moon_device_construction3",
        "body": "\"moon_device_construction3\"",
        "description": " ※prefab ID: moon_device_construction3\n ※Name: Lunar Siphonator\n ※prefab Version: DST-632551 "
    },
    "prefab:moon_device_construction3(ReverseSearch)": {
        "prefix": "p+Lunar Siphonator",
        "body": "\"moon_device_construction3\"",
        "description": " ※prefab ID: moon_device_construction3\n ※Name: Lunar Siphonator\n ※prefab Version: DST-632551 "
    },
    "prefab:berries_juicy_cooked(ID Complete)": {
        "prefix": "p+berries_juicy_cooked",
        "body": "\"berries_juicy_cooked\"",
        "description": " ※prefab ID: berries_juicy_cooked\n ※Name: Roasted Juicy Berries\n ※prefab Version: DST-632551 "
    },
    "prefab:berries_juicy_cooked(ReverseSearch)": {
        "prefix": "p+Roasted Juicy Berries",
        "body": "\"berries_juicy_cooked\"",
        "description": " ※prefab ID: berries_juicy_cooked\n ※Name: Roasted Juicy Berries\n ※prefab Version: DST-632551 "
    },
    "prefab:shadow_beef_bell(ID Complete)": {
        "prefix": "p+shadow_beef_bell",
        "body": "\"shadow_beef_bell\"",
        "description": " ※prefab ID: shadow_beef_bell\n ※Name: Beefalo Gloom Bell\n ※Recipe: \n\t+ 1 x: Possessed Shadow Atrium/shadowheart_infused\n\t+ 5 x: Pure Horror/horrorfuel\n\t+ 4 x: Dreadstone/dreadstone\n\t+ 2 x: Dark Tatters/voidcloth\n ※Required Tech: \n\t+ LV.2 : Shadowcraft/SHADOWFORGING\n ※prefab Version: DST-632551 "
    },
    "prefab:shadow_beef_bell(ReverseSearch)": {
        "prefix": "p+Beefalo Gloom Bell",
        "body": "\"shadow_beef_bell\"",
        "description": " ※prefab ID: shadow_beef_bell\n ※Name: Beefalo Gloom Bell\n ※Recipe: \n\t+ 1 x: Possessed Shadow Atrium/shadowheart_infused\n\t+ 5 x: Pure Horror/horrorfuel\n\t+ 4 x: Dreadstone/dreadstone\n\t+ 2 x: Dark Tatters/voidcloth\n ※Required Tech: \n\t+ LV.2 : Shadowcraft/SHADOWFORGING\n ※prefab Version: DST-632551 "
    },
    "prefab:peghook_dot(ID Complete)": {
        "prefix": "p+peghook_dot",
        "body": "\"peghook_dot\"",
        "description": " ※prefab ID: peghook_dot\n ※Name: Scorpeon Acid\n ※prefab Version: DST-632551 "
    },
    "prefab:peghook_dot(ReverseSearch)": {
        "prefix": "p+Scorpeon Acid",
        "body": "\"peghook_dot\"",
        "description": " ※prefab ID: peghook_dot\n ※Name: Scorpeon Acid\n ※prefab Version: DST-632551 "
    },
    "prefab:steelwool(ID Complete)": {
        "prefix": "p+steelwool",
        "body": "\"steelwool\"",
        "description": " ※prefab ID: steelwool\n ※Name: Steel Wool\n ※prefab Version: DST-632551 "
    },
    "prefab:steelwool(ReverseSearch)": {
        "prefix": "p+Steel Wool",
        "body": "\"steelwool\"",
        "description": " ※prefab ID: steelwool\n ※Name: Steel Wool\n ※prefab Version: DST-632551 "
    },
    "prefab:spice_salt(ID Complete)": {
        "prefix": "p+spice_salt",
        "body": "\"spice_salt\"",
        "description": " ※prefab ID: spice_salt\n ※Name: Seasoning Salt\n ※Recipe: \n\t+ 3 x: Salt Crystals/saltrock\n ※Required Tech: \n\t+ LV.1 : Seasonings/FOODPROCESSING\n ※prefab Version: DST-632551 "
    },
    "prefab:spice_salt(ReverseSearch)": {
        "prefix": "p+Seasoning Salt",
        "body": "\"spice_salt\"",
        "description": " ※prefab ID: spice_salt\n ※Name: Seasoning Salt\n ※Recipe: \n\t+ 3 x: Salt Crystals/saltrock\n ※Required Tech: \n\t+ LV.1 : Seasonings/FOODPROCESSING\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_ruinstrim(ID Complete)": {
        "prefix": "p+turf_ruinstrim",
        "body": "\"turf_ruinstrim\"",
        "description": " ※prefab ID: turf_ruinstrim\n ※Name: Ancient Brickwork\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n\t+ 1 x: Nightmare Fuel/nightmarefuel\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:turf_ruinstrim(ReverseSearch)": {
        "prefix": "p+Ancient Brickwork",
        "body": "\"turf_ruinstrim\"",
        "description": " ※prefab ID: turf_ruinstrim\n ※Name: Ancient Brickwork\n ※Recipe: \n\t+ 2 x: Rocks/rocks\n\t+ 1 x: Nightmare Fuel/nightmarefuel\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:winter_food5(ID Complete)": {
        "prefix": "p+winter_food5",
        "body": "\"winter_food5\"",
        "description": " ※prefab ID: winter_food5\n ※Name: Chocolate Log Cake\n ※prefab Version: DST-632551 "
    },
    "prefab:winter_food5(ReverseSearch)": {
        "prefix": "p+Chocolate Log Cake",
        "body": "\"winter_food5\"",
        "description": " ※prefab ID: winter_food5\n ※Name: Chocolate Log Cake\n ※prefab Version: DST-632551 "
    },
    "prefab:trap_bramble(ID Complete)": {
        "prefix": "p+trap_bramble",
        "body": "\"trap_bramble\"",
        "description": " ※prefab ID: trap_bramble\n ※Name: Bramble Trap\n ※Recipe: \n\t+ 1 x: Living Log/livinglog\n\t+ 1 x: Stinger/stinger\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:trap_bramble(ReverseSearch)": {
        "prefix": "p+Bramble Trap",
        "body": "\"trap_bramble\"",
        "description": " ※prefab ID: trap_bramble\n ※Name: Bramble Trap\n ※Recipe: \n\t+ 1 x: Living Log/livinglog\n\t+ 1 x: Stinger/stinger\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:slingshotammo_thulecite(ID Complete)": {
        "prefix": "p+slingshotammo_thulecite",
        "body": "\"slingshotammo_thulecite\"",
        "description": " ※prefab ID: slingshotammo_thulecite\n ※Name: Cursed Rounds\n ※Recipe: \n\t+ 1 x: Thulecite Fragments/thulecite_pieces\n\t+ 1 x: Nightmare Fuel/nightmarefuel\n ※Required Tech: \n\t+ LV.2 : Ancient/ANCIENT\n ※prefab Version: DST-632551 "
    },
    "prefab:slingshotammo_thulecite(ReverseSearch)": {
        "prefix": "p+Cursed Rounds",
        "body": "\"slingshotammo_thulecite\"",
        "description": " ※prefab ID: slingshotammo_thulecite\n ※Name: Cursed Rounds\n ※Recipe: \n\t+ 1 x: Thulecite Fragments/thulecite_pieces\n\t+ 1 x: Nightmare Fuel/nightmarefuel\n ※Required Tech: \n\t+ LV.2 : Ancient/ANCIENT\n ※prefab Version: DST-632551 "
    },
    "prefab:spider(ID Complete)": {
        "prefix": "p+spider",
        "body": "\"spider\"",
        "description": " ※prefab ID: spider\n ※Name: Spider\n ※prefab Version: DST-632551 "
    },
    "prefab:spider(ReverseSearch)": {
        "prefix": "p+Spider",
        "body": "\"spider\"",
        "description": " ※prefab ID: spider\n ※Name: Spider\n ※prefab Version: DST-632551 "
    },
    "prefab:winona_storage_robot(ID Complete)": {
        "prefix": "p+winona_storage_robot",
        "body": "\"winona_storage_robot\"",
        "description": " ※prefab ID: winona_storage_robot\n ※Name: W.I.N.bot\n ※Recipe: \n\t+ 8 x: Scrap/wagpunk_bits\n\t+ 4 x: Electrical Doodad/transistor\n\t+ 3 x: Doohickey/winona_machineparts_1\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:winona_storage_robot(ReverseSearch)": {
        "prefix": "p+W.I.N.bot",
        "body": "\"winona_storage_robot\"",
        "description": " ※prefab ID: winona_storage_robot\n ※Name: W.I.N.bot\n ※Recipe: \n\t+ 8 x: Scrap/wagpunk_bits\n\t+ 4 x: Electrical Doodad/transistor\n\t+ 3 x: Doohickey/winona_machineparts_1\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:ruinsrelic_chair(ID Complete)": {
        "prefix": "p+ruinsrelic_chair",
        "body": "\"ruinsrelic_chair\"",
        "description": " ※prefab ID: ruinsrelic_chair\n ※Name: Replica Relic Chair\n ※Recipe: \n\t+ 1 x: Cut Stone/cutstone\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:ruinsrelic_chair(ReverseSearch)": {
        "prefix": "p+Replica Relic Chair",
        "body": "\"ruinsrelic_chair\"",
        "description": " ※prefab ID: ruinsrelic_chair\n ※Name: Replica Relic Chair\n ※Recipe: \n\t+ 1 x: Cut Stone/cutstone\n ※Required Tech: \n\t+ LV.10 : Science/SCIENCE\n\t+ LV.10 : Ancient/ANCIENT\n\t+ LV.10 : Magic/MAGIC\n ※prefab Version: DST-632551 "
    },
    "prefab:goldenpickaxe(ID Complete)": {
        "prefix": "p+goldenpickaxe",
        "body": "\"goldenpickaxe\"",
        "description": " ※prefab ID: goldenpickaxe\n ※Name: Opulent Pickaxe\n ※Recipe: \n\t+ 4 x: Twigs/twigs\n\t+ 2 x: Gold Nugget/goldnugget\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:goldenpickaxe(ReverseSearch)": {
        "prefix": "p+Opulent Pickaxe",
        "body": "\"goldenpickaxe\"",
        "description": " ※prefab ID: goldenpickaxe\n ※Name: Opulent Pickaxe\n ※Recipe: \n\t+ 4 x: Twigs/twigs\n\t+ 2 x: Gold Nugget/goldnugget\n ※Required Tech: \n\t+ LV.2 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:klaus_sack(ID Complete)": {
        "prefix": "p+klaus_sack",
        "body": "\"klaus_sack\"",
        "description": " ※prefab ID: klaus_sack\n ※Name: Loot Stash\n ※prefab Version: DST-632551 "
    },
    "prefab:klaus_sack(ReverseSearch)": {
        "prefix": "p+Loot Stash",
        "body": "\"klaus_sack\"",
        "description": " ※prefab ID: klaus_sack\n ※Name: Loot Stash\n ※prefab Version: DST-632551 "
    },
    "prefab:wurt_swampitem_lunar(ID Complete)": {
        "prefix": "p+wurt_swampitem_lunar",
        "body": "\"wurt_swampitem_lunar\"",
        "description": " ※prefab ID: wurt_swampitem_lunar\n ※Name: Brilliant Mudslinger\n ※Recipe: \n\t+ 1 x: Driftwood Piece/driftwood_log\n\t+ 1 x: Marsh Turf/turf_marsh\n\t+ 1 x: Pure Brilliance/purebrilliance\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:wurt_swampitem_lunar(ReverseSearch)": {
        "prefix": "p+Brilliant Mudslinger",
        "body": "\"wurt_swampitem_lunar\"",
        "description": " ※prefab ID: wurt_swampitem_lunar\n ※Name: Brilliant Mudslinger\n ※Recipe: \n\t+ 1 x: Driftwood Piece/driftwood_log\n\t+ 1 x: Marsh Turf/turf_marsh\n\t+ 1 x: Pure Brilliance/purebrilliance\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:froglegs_cooked(ID Complete)": {
        "prefix": "p+froglegs_cooked",
        "body": "\"froglegs_cooked\"",
        "description": " ※prefab ID: froglegs_cooked\n ※Name: Cooked Frog Legs\n ※prefab Version: DST-632551 "
    },
    "prefab:froglegs_cooked(ReverseSearch)": {
        "prefix": "p+Cooked Frog Legs",
        "body": "\"froglegs_cooked\"",
        "description": " ※prefab ID: froglegs_cooked\n ※Name: Cooked Frog Legs\n ※prefab Version: DST-632551 "
    },
    "prefab:book_tentacles(ID Complete)": {
        "prefix": "p+book_tentacles",
        "body": "\"book_tentacles\"",
        "description": " ※prefab ID: book_tentacles\n ※Name: On Tentacles\n ※Recipe: \n\t+ 2 x: Papyrus/papyrus\n\t+ 1 x: Tentacle Spots/tentaclespots\n ※Required Tech: \n\t+ LV.3 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:book_tentacles(ReverseSearch)": {
        "prefix": "p+On Tentacles",
        "body": "\"book_tentacles\"",
        "description": " ※prefab ID: book_tentacles\n ※Name: On Tentacles\n ※Recipe: \n\t+ 2 x: Papyrus/papyrus\n\t+ 1 x: Tentacle Spots/tentaclespots\n ※Required Tech: \n\t+ LV.3 : Science/SCIENCE\n ※prefab Version: DST-632551 "
    },
    "prefab:mosquitofertilizer(ID Complete)": {
        "prefix": "p+mosquitofertilizer",
        "body": "\"mosquitofertilizer\"",
        "description": " ※prefab ID: mosquitofertilizer\n ※Name: Fertilizzzer\n ※Recipe: \n\t+ 1 x: Mosquito Sack/mosquitosack\n\t+ 2 x: Nitre/nitre\n\t+ 1 x: Manure/poop\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:mosquitofertilizer(ReverseSearch)": {
        "prefix": "p+Fertilizzzer",
        "body": "\"mosquitofertilizer\"",
        "description": " ※prefab ID: mosquitofertilizer\n ※Name: Fertilizzzer\n ※Recipe: \n\t+ 1 x: Mosquito Sack/mosquitosack\n\t+ 2 x: Nitre/nitre\n\t+ 1 x: Manure/poop\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:petals_evil(ID Complete)": {
        "prefix": "p+petals_evil",
        "body": "\"petals_evil\"",
        "description": " ※prefab ID: petals_evil\n ※Name: Dark Petals\n ※prefab Version: DST-632551 "
    },
    "prefab:petals_evil(ReverseSearch)": {
        "prefix": "p+Dark Petals",
        "body": "\"petals_evil\"",
        "description": " ※prefab ID: petals_evil\n ※Name: Dark Petals\n ※prefab Version: DST-632551 "
    },
    "prefab:carnivaldecor_lamp(ID Complete)": {
        "prefix": "p+carnivaldecor_lamp",
        "body": "\"carnivaldecor_lamp\"",
        "description": " ※prefab ID: carnivaldecor_lamp\n ※Name: Midsummer Night Light\n ※Recipe: \n\t+ 1 x: Midsummer Night Light Kit/carnivaldecor_lamp_kit\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:carnivaldecor_lamp(ReverseSearch)": {
        "prefix": "p+Midsummer Night Light",
        "body": "\"carnivaldecor_lamp\"",
        "description": " ※prefab ID: carnivaldecor_lamp\n ※Name: Midsummer Night Light\n ※Recipe: \n\t+ 1 x: Midsummer Night Light Kit/carnivaldecor_lamp_kit\n ※Required Tech: \n ※prefab Version: DST-632551 "
    },
    "prefab:halloweenpotion_sanity_small(ID Complete)": {
        "prefix": "p+halloweenpotion_sanity_small",
        "body": "\"halloweenpotion_sanity_small\"",
        "description": " ※prefab ID: halloweenpotion_sanity_small\n ※Name: Dram of Psychic Fortitude\n ※prefab Version: DST-632551 "
    },
    "prefab:halloweenpotion_sanity_small(ReverseSearch)": {
        "prefix": "p+Dram of Psychic Fortitude",
        "body": "\"halloweenpotion_sanity_small\"",
        "description": " ※prefab ID: halloweenpotion_sanity_small\n ※Name: Dram of Psychic Fortitude\n ※prefab Version: DST-632551 "
    },
    "prefab:greengem(ID Complete)": {
        "prefix": "p+greengem",
        "body": "\"greengem\"",
        "description": " ※prefab ID: greengem\n ※Name: Green Gem\n ※prefab Version: DST-632551 "
    },
    "prefab:greengem(ReverseSearch)": {
        "prefix": "p+Green Gem",
        "body": "\"greengem\"",
        "description": " ※prefab ID: greengem\n ※Name: Green Gem\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_park_fountain(ID Complete)": {
        "prefix": "p+quagmire_park_fountain",
        "body": "\"quagmire_park_fountain\"",
        "description": " ※prefab ID: quagmire_park_fountain\n ※Name: Fountain\n ※prefab Version: DST-632551 "
    },
    "prefab:quagmire_park_fountain(ReverseSearch)": {
        "prefix": "p+Fountain",
        "body": "\"quagmire_park_fountain\"",
        "description": " ※prefab ID: quagmire_park_fountain\n ※Name: Fountain\n ※prefab Version: DST-632551 "
    },
    "prefab:winter_food2(ID Complete)": {
        "prefix": "p+winter_food2",
        "body": "\"winter_food2\"",
        "description": " ※prefab ID: winter_food2\n ※Name: Sugar Cookie\n ※prefab Version: DST-632551 "
    },
    "prefab:winter_food2(ReverseSearch)": {
        "prefix": "p+Sugar Cookie",
        "body": "\"winter_food2\"",
        "description": " ※prefab ID: winter_food2\n ※Name: Sugar Cookie\n ※prefab Version: DST-632551 "
    },
    "syntax.comment:param": {
        "prefix": "lan+param",
        "body": "---\\$param: (${1:param}) <${2:type}> [${3:desc}] {${4:others}}",
        "description": "regular comment"
    },
    "syntax.comment:return": {
        "prefix": "lan+return",
        "body": "---\\$return: <${1:type}> [${2:desc}]",
        "description": "regular comment"
    },
    "AnimState:GetSymbolHSB:获取通道HSB颜色空间值": {
        "prefix": "AnimState:GetSymbolHSB",
        "body": "AnimState:GetSymbolHSB(${1:symbol})",
        "description": " ※Params: \n   (symbol)<string>[通道名] \n ※Returns: <number>[色度(Hue, 0~1)] <number>[饱和度(Saturation, 0~1)] <number>[光度(Brightness, 0~2)] \n ※Description: 获取通道HSB颜色空间值\n ※Contributor: @"
    },
    "AnimState:SetFloatParams:UNKNOWN": {
        "prefix": "AnimState:SetFloatParams",
        "body": "AnimState:SetFloatParams(${1:param1},${2:param2},${3:param3})",
        "description": " ※Params: \n   (param1)<number>[] \n   (param2)<number>[] \n   (param3)<number>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "AnimState:GetMultColour:获取叠乘的颜色，返回r,g,b,a": {
        "prefix": "AnimState:GetMultColour",
        "body": "AnimState:GetMultColour()",
        "description": "\n ※Returns: <number>[红色通道(0~1)] <number>[绿色通道(0~1)] <number>[蓝色通道(0~1)] <number>[不透明度(0~1)] \n ※Description: 获取叠乘的颜色，返回r,g,b,a\n ※Contributor: @Runar"
    },
    "AnimState:SetClientsideBuildOverride:替换客户端显示的build": {
        "prefix": "AnimState:SetClientsideBuildOverride",
        "body": "AnimState:SetClientsideBuildOverride(${1:state},${2:build},${3:overridebuild})",
        "description": " ※Params: \n   (state)<string>[] \n   (build)<string>[] \n   (overridebuild)<string>[] \n ※Description: 替换客户端显示的build\n ※Contributor: @"
    },
    "AnimState:GetBankHash:UNKNOWN": {
        "prefix": "AnimState:GetBankHash",
        "body": "AnimState:GetBankHash()",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "AnimState:SetTime:设置当前动画从第几秒开始播放（秒）": {
        "prefix": "AnimState:SetTime",
        "body": "AnimState:SetTime(${1:time})",
        "description": " ※Params: \n   (time)<number>[时间(秒)] \n ※Description: 设置当前动画从第几秒开始播放（秒）\n ※Contributor: @Runar"
    },
    "AnimState:PushAnimation:推动画到播放列表里，与PlayAnimation不同的是，PlayAnimation执行后动画会立即执行，但PushAnimation执行后会等当前动画执行完，然后再播放Push的动画": {
        "prefix": "AnimState:PushAnimation",
        "body": "AnimState:PushAnimation(${1:animname},${2:loop})",
        "description": " ※Params: \n   (animname)<string>[] \n   (loop)<boolean|nil>[] \n ※Description: 推动画到播放列表里，与PlayAnimation不同的是，PlayAnimation执行后动画会立即执行，但PushAnimation执行后会等当前动画执行完，然后再播放Push的动画\n ※Contributor: @"
    },
    "AnimState:GetCurrentAnimationFrame:获取当前动画帧数": {
        "prefix": "AnimState:GetCurrentAnimationFrame",
        "body": "AnimState:GetCurrentAnimationFrame()",
        "description": "\n ※Returns: <number>[时间(帧)] \n ※Description: 获取当前动画帧数\n ※Contributor: @Runar"
    },
    "AnimState:AddOverrideBuild:添加新build": {
        "prefix": "AnimState:AddOverrideBuild",
        "body": "AnimState:AddOverrideBuild(${1:buildname})",
        "description": " ※Params: \n   (buildname)<string>[build名] \n ※Description: 添加新build\n ※Contributor: @Runar"
    },
    "AnimState:GetCurrentAnimationTime:获取当前动画播放的时间，GetCurrentAnimationLength获取的是动画的总长度，GetCurrentAnimationTime获取的是动画当前播放的时间（我猜的）": {
        "prefix": "AnimState:GetCurrentAnimationTime",
        "body": "AnimState:GetCurrentAnimationTime()",
        "description": "\n ※Returns: <number>[] \n ※Description: 获取当前动画播放的时间，GetCurrentAnimationLength获取的是动画的总长度，GetCurrentAnimationTime获取的是动画当前播放的时间（我猜的）\n ※Contributor: @"
    },
    "AnimState:SetMultColour:颜色叠乘，受原图颜色影响": {
        "prefix": "AnimState:SetMultColour",
        "body": "AnimState:SetMultColour(${1:r},${2:g},${3:b},${4:a})",
        "description": " ※Params: \n   (r)<number>[红色通道(0~1)] \n   (g)<number>[绿色通道(0~1)] \n   (b)<number>[蓝色通道(0~1)] \n   (a)<number>[不透明度(0~1)] \n ※Description: 颜色叠乘，受原图颜色影响\n ※Contributor: @Runar"
    },
    "AnimState:SetMultiSymbolExchange:把symbol1放到symbol2前": {
        "prefix": "AnimState:SetMultiSymbolExchange",
        "body": "AnimState:SetMultiSymbolExchange(${1:symbol1},${2:symbol2})",
        "description": " ※Params: \n   (symbol1)<string>[] \n   (symbol2)<string>[] \n ※Description: 把symbol1放到symbol2前\n ※Contributor: @"
    },
    "AnimState:GetSymbolOverride:获取覆盖通道名": {
        "prefix": "AnimState:GetSymbolOverride",
        "body": "AnimState:GetSymbolOverride(${1:symbol})",
        "description": " ※Params: \n   (symbol)<string>[通道名] \n ※Returns: <string>[覆盖通道名] \n ※Description: 获取覆盖通道名\n ※Contributor: @Runar"
    },
    "AnimState:SetErosionParams:UNKNOWN": {
        "prefix": "AnimState:SetErosionParams",
        "body": "AnimState:SetErosionParams(${1:param1},${2:param2},${3:param3})",
        "description": " ※Params: \n   (param1)<number>[] \n   (param2)<number>[] \n   (param3)<number>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "AnimState:SetSymbolAddColour:设置通道叠加颜色": {
        "prefix": "AnimState:SetSymbolAddColour",
        "body": "AnimState:SetSymbolAddColour(${1:symbol},${2:r},${3:g},${4:b},${5:a})",
        "description": " ※Params: \n   (symbol)<string>[通道名] \n   (r)<number>[红色通道(0~1)] \n   (g)<number>[绿色通道(0~1)] \n   (b)<number>[蓝色通道(0~1)] \n   (a)<number>[不透明度(0~1)] \n ※Description: 设置通道叠加颜色\n ※Contributor: @Runar"
    },
    "AnimState:SetFinalOffset:UNKNOWN": {
        "prefix": "AnimState:SetFinalOffset",
        "body": "AnimState:SetFinalOffset(${1:param})",
        "description": " ※Params: \n   (param)<number>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "AnimState:SetOrientation:设置动画的方向，参数从constants.lua里取ANIM_ORIENTATION": {
        "prefix": "AnimState:SetOrientation",
        "body": "AnimState:SetOrientation(${1:ANIM_ORIENTATION})",
        "description": " ※Params: \n   (ANIM_ORIENTATION)<number>[动画朝向] \n ※Description: 设置动画的方向，参数从constants.lua里取ANIM_ORIENTATION\n ※Contributor: @Runar"
    },
    "AnimState:SetDepthBias:UNKNOWN": {
        "prefix": "AnimState:SetDepthBias",
        "body": "AnimState:SetDepthBias()",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "AnimState:ClearSymbolBloom:清除通道泛光": {
        "prefix": "AnimState:ClearSymbolBloom",
        "body": "AnimState:ClearSymbolBloom(${1:symbol})",
        "description": " ※Params: \n   (symbol)<string>[通道名] \n ※Description: 清除通道泛光\n ※Contributor: @Runar"
    },
    "AnimState:ClearOverrideBuild:清除覆盖的build": {
        "prefix": "AnimState:ClearOverrideBuild",
        "body": "AnimState:ClearOverrideBuild()",
        "description": "\n ※Description: 清除覆盖的build\n ※Contributor: @Runar"
    },
    "AnimState:CompareSymbolBuilds:比较默认通道defaultsymbol是否是symbol通道，一般用来自定义idle动画": {
        "prefix": "AnimState:CompareSymbolBuilds",
        "body": "AnimState:CompareSymbolBuilds(${1:defaultsymbol},${2:symbol})",
        "description": " ※Params: \n   (defaultsymbol)<string>[通道名] \n   (symbol)<string>[通道名] \n ※Returns: <boolean>[] \n ※Description: 比较默认通道defaultsymbol是否是symbol通道，一般用来自定义idle动画\n ※Contributor: @"
    },
    "AnimState:Resume:恢复暂停的动画，无参": {
        "prefix": "AnimState:Resume",
        "body": "AnimState:Resume()",
        "description": "\n ※Description: 恢复暂停的动画，无参\n ※Contributor: @Runar"
    },
    "AnimState:SetPercent:动画播放百分比，固定帧，不会动（动画名，百分比）": {
        "prefix": "AnimState:SetPercent",
        "body": "AnimState:SetPercent(${1:animname},${2:percent})",
        "description": " ※Params: \n   (animname)<string>[] \n   (percent)<number>[] \n ※Description: 动画播放百分比，固定帧，不会动（动画名，百分比）\n ※Contributor: @"
    },
    "AnimState:AssignItemSkins:重新分配物品的外观": {
        "prefix": "AnimState:AssignItemSkins",
        "body": "AnimState:AssignItemSkins(${1:userid},${2:body},${3:hand},${4:legs},${5:feet})",
        "description": " ※Params: \n   (userid)<any>[] \n   (body)<any>[] \n   (hand)<any>[] \n   (legs)<any>[] \n   (feet)<any>[] \n ※Description: 重新分配物品的外观\n ※Contributor: @"
    },
    "AnimState:UsePointFiltering:UNKNOWN": {
        "prefix": "AnimState:UsePointFiltering",
        "body": "AnimState:UsePointFiltering(${1:bool})",
        "description": " ※Params: \n   (bool)<boolean>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "AnimState:ClearAllOverrideSymbols:清除所有覆盖通道": {
        "prefix": "AnimState:ClearAllOverrideSymbols",
        "body": "AnimState:ClearAllOverrideSymbols()",
        "description": "\n ※Description: 清除所有覆盖通道\n ※Contributor: @Runar"
    },
    "AnimState:GetSkinBuild:获取当前皮肤的build": {
        "prefix": "AnimState:GetSkinBuild",
        "body": "AnimState:GetSkinBuild()",
        "description": "\n ※Returns: <string>[皮肤当前的build] \n ※Description: 获取当前皮肤的build\n ※Contributor: @Runar"
    },
    "AnimState:ClearSymbolExchanges:清除所有覆盖通道": {
        "prefix": "AnimState:ClearSymbolExchanges",
        "body": "AnimState:ClearSymbolExchanges()",
        "description": "\n ※Description: 清除所有覆盖通道\n ※Contributor: @Runar"
    },
    "AnimState:ClearBloomEffectHandle:清除泛光效果句柄": {
        "prefix": "AnimState:ClearBloomEffectHandle",
        "body": "AnimState:ClearBloomEffectHandle()",
        "description": "\n ※Description: 清除泛光效果句柄\n ※Contributor: @Runar"
    },
    "AnimState:UseColourCube:UNKNOWN": {
        "prefix": "AnimState:UseColourCube",
        "body": "AnimState:UseColourCube(${1:bool})",
        "description": " ※Params: \n   (bool)<boolean>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "AnimState:GetBrightness:获取动画光度": {
        "prefix": "AnimState:GetBrightness",
        "body": "AnimState:GetBrightness()",
        "description": "\n ※Returns: <number>[光度(Brightness, 0~2)] \n ※Description: 获取动画光度\n ※Contributor: @Runar"
    },
    "AnimState:SetHighlightColour:设置高光色彩": {
        "prefix": "AnimState:SetHighlightColour",
        "body": "AnimState:SetHighlightColour(${1:r},${2:g},${3:b},${4:a})",
        "description": " ※Params: \n   (r)<number>[] \n   (g)<number>[] \n   (b)<number>[] \n   (a)<number>[] \n ※Description: 设置高光色彩\n ※Contributor: @"
    },
    "AnimState:ClearDefaultEffectHandle:清除默认效果句柄": {
        "prefix": "AnimState:ClearDefaultEffectHandle",
        "body": "AnimState:ClearDefaultEffectHandle()",
        "description": "\n ※Description: 清除默认效果句柄\n ※Contributor: @Runar"
    },
    "AnimState:SetSymbolHue:设置通道色度": {
        "prefix": "AnimState:SetSymbolHue",
        "body": "AnimState:SetSymbolHue(${1:symbol},${2:hue})",
        "description": " ※Params: \n   (symbol)<string>[通道名] \n   (hue)<number>[色度(0~1)] \n ※Description: 设置通道色度\n ※Contributor: @Runar"
    },
    "AnimState:SetWorldSpaceAmbientLightPos:UNKNOWN": {
        "prefix": "AnimState:SetWorldSpaceAmbientLightPos",
        "body": "AnimState:SetWorldSpaceAmbientLightPos(${1:x},${2:y},${3:z})",
        "description": " ※Params: \n   (x)<number>[] \n   (y)<number>[] \n   (z)<number>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "AnimState:SetSaturation:设置动画饱和度": {
        "prefix": "AnimState:SetSaturation",
        "body": "AnimState:SetSaturation(${1:saturation})",
        "description": " ※Params: \n   (saturation)<number>[饱和度(0~1)] \n ※Description: 设置动画饱和度\n ※Contributor: @Runar"
    },
    "AnimState:SetOceanBlendParams:UNKNOWN": {
        "prefix": "AnimState:SetOceanBlendParams",
        "body": "AnimState:SetOceanBlendParams(${1:num})",
        "description": " ※Params: \n   (num)<number>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "AnimState:GetSortOrder:UNKNOWN": {
        "prefix": "AnimState:GetSortOrder",
        "body": "AnimState:GetSortOrder()",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "AnimState:ShowSymbol:显示通道，与HideSymbol对应": {
        "prefix": "AnimState:ShowSymbol",
        "body": "AnimState:ShowSymbol(${1:symbol})",
        "description": " ※Params: \n   (symbol)<string>[通道名] \n ※Description: 显示通道，与HideSymbol对应\n ※Contributor: @Runar"
    },
    "AnimState:SetDefaultEffectHandle:设置默认效果句柄": {
        "prefix": "AnimState:SetDefaultEffectHandle",
        "body": "AnimState:SetDefaultEffectHandle(${1:path})",
        "description": " ※Params: \n   (path)<string>[相对根目录的完整路径] \n ※Description: 设置默认效果句柄\n ※Contributor: @Runar"
    },
    "AnimState:Show:显示图层(Layer)": {
        "prefix": "AnimState:Show",
        "body": "AnimState:Show(${1:layername})",
        "description": " ※Params: \n   (layername)<string>[图层名] \n ※Description: 显示图层(Layer)\n ※Contributor: @Runar"
    },
    "AnimState:SetSymbolSaturation:设置通道饱和度": {
        "prefix": "AnimState:SetSymbolSaturation",
        "body": "AnimState:SetSymbolSaturation(${1:symbol},${2:saturation})",
        "description": " ※Params: \n   (symbol)<string>[通道名] \n   (saturation)<number>[饱和度] \n ※Description: 设置通道饱和度\n ※Contributor: @Runar"
    },
    "AnimState:GetSymbolMultColour:获取通道叠乘的颜色，返回r,g,b,a": {
        "prefix": "AnimState:GetSymbolMultColour",
        "body": "AnimState:GetSymbolMultColour(${1:symbol})",
        "description": " ※Params: \n   (symbol)<string>[通道名] \n ※Returns: <number>[红色通道(0~1)] <number>[绿色通道(0~1)] <number>[蓝色通道(0~1)] <number>[不透明度(0~1)] \n ※Description: 获取通道叠乘的颜色，返回r,g,b,a\n ※Contributor: @Runar"
    },
    "AnimState:GetHue:获取动画色度(Hue)": {
        "prefix": "AnimState:GetHue",
        "body": "AnimState:GetHue()",
        "description": "\n ※Returns: <number>[色度(0~1)] \n ※Description: 获取动画色度(Hue)\n ※Contributor: @Runar"
    },
    "AnimState:GetCurrentAnimationNumFrames:获取当前动画的总帧数": {
        "prefix": "AnimState:GetCurrentAnimationNumFrames",
        "body": "AnimState:GetCurrentAnimationNumFrames()",
        "description": "\n ※Returns: <number>[总帧数] \n ※Description: 获取当前动画的总帧数\n ※Contributor: @lan"
    },
    "AnimState:GetHistoryData:UNKNOWN": {
        "prefix": "AnimState:GetHistoryData",
        "body": "AnimState:GetHistoryData()",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "AnimState:SetSymbolMultColour:设置通道叠乘颜色": {
        "prefix": "AnimState:SetSymbolMultColour",
        "body": "AnimState:SetSymbolMultColour(${1:symbol},${2:r},${3:g},${4:b},${5:a})",
        "description": " ※Params: \n   (symbol)<string>[通道名] \n   (r)<number>[红色通道(0~1)] \n   (g)<number>[绿色通道(0~1)] \n   (b)<number>[蓝色通道(0~1)] \n   (a)<number>[不透明度(0~1)] \n ※Description: 设置通道叠乘颜色\n ※Contributor: @Runar"
    },
    "AnimState:IsCurrentAnimation:当前动画是否为给出名动画": {
        "prefix": "AnimState:IsCurrentAnimation",
        "body": "AnimState:IsCurrentAnimation(${1:animname})",
        "description": " ※Params: \n   (animname)<string>[动画名] \n ※Returns: <boolean>[是否为该动画] \n ※Description: 当前动画是否为给出名动画\n ※Contributor: @Runar"
    },
    "AnimState:SetInheritsSortKey:UNKNOWN": {
        "prefix": "AnimState:SetInheritsSortKey",
        "body": "AnimState:SetInheritsSortKey(${1:bool})",
        "description": " ※Params: \n   (bool)<boolean>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "AnimState:SetSymbolLightOverride:UNKNOWN": {
        "prefix": "AnimState:SetSymbolLightOverride",
        "body": "AnimState:SetSymbolLightOverride(${1:symbol},${2:override})",
        "description": " ※Params: \n   (symbol)<string>[] \n   (override)<number>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "AnimState:OverrideSkinSymbol:覆盖皮肤通道，与OverrideSymbol用法一致": {
        "prefix": "AnimState:OverrideSkinSymbol",
        "body": "AnimState:OverrideSkinSymbol(${1:oldsymbol},${2:skin_build},${3:newsymbol})",
        "description": " ※Params: \n   (oldsymbol)<string>[通道名] \n   (skin_build)<string>[覆盖通道所在的build] \n   (newsymbol)<string>[覆盖通道] \n ※Description: 覆盖皮肤通道，与OverrideSymbol用法一致\n ※Contributor: @Runar"
    },
    "AnimState:SetBank:Spriter 里动画的父级节点的名字": {
        "prefix": "AnimState:SetBank",
        "body": "AnimState:SetBank(${1:name})",
        "description": " ※Params: \n   (name)<string>[动画父节点名] \n ※Description: Spriter 里动画的父级节点的名字\n ※Contributor: @Runar"
    },
    "AnimState:SetSymbolExchange:把通道2放到通道1前": {
        "prefix": "AnimState:SetSymbolExchange",
        "body": "AnimState:SetSymbolExchange(${1:symbol1},${2:symbol2})",
        "description": " ※Params: \n   (symbol1)<string>[通道1] \n   (symbol2)<string>[通道2] \n ※Description: 把通道2放到通道1前\n ※Contributor: @Runar"
    },
    "AnimState:SetSymbolBrightness:设置通道光度,0为亏曝,2为过曝": {
        "prefix": "AnimState:SetSymbolBrightness",
        "body": "AnimState:SetSymbolBrightness(${1:symbol},${2:brightness})",
        "description": " ※Params: \n   (symbol)<string>[通道名] \n   (brightness)<number>[光度(0~2)] \n ※Description: 设置通道光度,0为亏曝,2为过曝\n ※Contributor: @Runar"
    },
    "AnimState:SetUILightParams:UNKNOWN": {
        "prefix": "AnimState:SetUILightParams",
        "body": "AnimState:SetUILightParams(${1:param1},${2:param2},${3:param3},${4:param4})",
        "description": " ※Params: \n   (param1)<number>[] \n   (param2)<number>[] \n   (param3)<number>[] \n   (param4)<number>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "AnimState:SetSortWorldOffset:UNKNOWN": {
        "prefix": "AnimState:SetSortWorldOffset",
        "body": "AnimState:SetSortWorldOffset(${1:param1},${2:param2},${3:param3})",
        "description": " ※Params: \n   (param1)<number>[] \n   (param2)<number>[] \n   (param3)<number>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "AnimState:OverrideItemSkinSymbol:覆盖物品皮肤通道": {
        "prefix": "AnimState:OverrideItemSkinSymbol",
        "body": "AnimState:OverrideItemSkinSymbol(${1:oldsymbol},${2:skinbuild},${3:skinsymbol},${4:guid},${5:oldbuild})",
        "description": " ※Params: \n   (oldsymbol)<string>[通道名] \n   (skinbuild)<string>[皮肤build] \n   (skinsymbol)<string>[覆盖通道] \n   (guid)<number|nil>[inst.GUID] \n   (oldbuild)<string|nil>[原build] \n ※Description: 覆盖物品皮肤通道\n ※Contributor: @Runar"
    },
    "AnimState:OverrideMultColour:覆盖叠乘的颜色": {
        "prefix": "AnimState:OverrideMultColour",
        "body": "AnimState:OverrideMultColour(${1:r},${2:g},${3:b},${4:a})",
        "description": " ※Params: \n   (r)<number>[红色通道(0~1)] \n   (g)<number>[绿色通道(0~1)] \n   (b)<number>[蓝色通道(0~1)] \n   (a)<number>[不透明度(0~1)] \n ※Description: 覆盖叠乘的颜色\n ※Contributor: @Runar"
    },
    "AnimState:SetSortOrder:UNKNOWN": {
        "prefix": "AnimState:SetSortOrder",
        "body": "AnimState:SetSortOrder(${1:order})",
        "description": " ※Params: \n   (order)<number>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "AnimState:SetSkin:UNKNOWN": {
        "prefix": "AnimState:SetSkin",
        "body": "AnimState:SetSkin()",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "AnimState:GetInheritsSortKey:UNKNOWN": {
        "prefix": "AnimState:GetInheritsSortKey",
        "body": "AnimState:GetInheritsSortKey()",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "AnimState:FastForward:UNKNOWN": {
        "prefix": "AnimState:FastForward",
        "body": "AnimState:FastForward(${1:dt})",
        "description": " ※Params: \n   (dt)<number>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "AnimState:SetScale:贴图缩放": {
        "prefix": "AnimState:SetScale",
        "body": "AnimState:SetScale(${1:x},${2:y},${3:z})",
        "description": " ※Params: \n   (x)<number>[] \n   (y)<number>[] \n   (z)<number>[] \n ※Description: 贴图缩放\n ※Contributor: @"
    },
    "AnimState:OverrideShade:UNKNOWN": {
        "prefix": "AnimState:OverrideShade",
        "body": "AnimState:OverrideShade(${1:num})",
        "description": " ※Params: \n   (num)<number>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "AnimState:SetBankAndPlayAnimation:看名字能猜到是 SetBank()与PlayAnimation()两个方法的结合": {
        "prefix": "AnimState:SetBankAndPlayAnimation",
        "body": "AnimState:SetBankAndPlayAnimation(${1:bankname},${2:animname})",
        "description": " ※Params: \n   (bankname)<string>[动画父节点名] \n   (animname)<string>[动画名] \n ※Description: 看名字能猜到是 SetBank()与PlayAnimation()两个方法的结合\n ※Contributor: @Runar"
    },
    "AnimState:GetSaturation:获取动画饱和度": {
        "prefix": "AnimState:GetSaturation",
        "body": "AnimState:GetSaturation()",
        "description": "\n ※Returns: <number>[饱和度(Saturation, 0~1)] \n ※Description: 获取动画饱和度\n ※Contributor: @Runar"
    },
    "AnimState:SetSymbolBloom:UNKNOWN": {
        "prefix": "AnimState:SetSymbolBloom",
        "body": "AnimState:SetSymbolBloom(${1:name})",
        "description": " ※Params: \n   (name)<string>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "AnimState:SetRayTestOnBB:UNKNOWN": {
        "prefix": "AnimState:SetRayTestOnBB",
        "body": "AnimState:SetRayTestOnBB(${1:bool})",
        "description": " ※Params: \n   (bool)<boolean>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "AnimState:GetVisualBB:获取可视化边界": {
        "prefix": "AnimState:GetVisualBB",
        "body": "AnimState:GetVisualBB()",
        "description": "\n ※Returns: <number>[bbx1] <number>[bby1] <number>[bbx2] <number>[bby2] \n ※Description: 获取可视化边界\n ※Contributor: @lan (bbx1-bbx2)取绝对值是宽,y是高"
    },
    "AnimState:GetVisualBB:获取可视化边界+i": {
        "prefix": "AnimState:GetVisualBB+i",
        "body": "AnimState:\nlocal anim_w,anim_h = (function(ent)\n\tlocal bbx1,bby1,bbx2,bby2 = ent.AnimState:GetVisualBB()\n\treturn math.abs(bbx1-bbx2),math.abs(bby1-bby2)\nend)(${1:ent})",
        "description": "\n ※Returns: <number>[bbx1] <number>[bby1] <number>[bbx2] <number>[bby2] \n ※Description: 获取可视化边界\n ※Contributor: @lan (bbx1-bbx2)取绝对值是宽,y是高\n ※Inspiration Mode: 返回某实体的动画的宽高"
    },
    "AnimState:SetManualBB:UNKNOWN": {
        "prefix": "AnimState:SetManualBB",
        "body": "AnimState:SetManualBB()",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "AnimState:PlayAnimation:播放动画，animname：动画名，loop：是否循环播放，默认是 false": {
        "prefix": "AnimState:PlayAnimation",
        "body": "AnimState:PlayAnimation(${1:animname},${2:loop})",
        "description": " ※Params: \n   (animname)<string>[] \n   (loop)<boolean|nil>[] \n ※Description: 播放动画，animname：动画名，loop：是否循环播放，默认是 false\n ※Contributor: @"
    },
    "AnimState:SetLightOverride:UNKNOWN": {
        "prefix": "AnimState:SetLightOverride",
        "body": "AnimState:SetLightOverride(${1:num})",
        "description": " ※Params: \n   (num)<number>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "AnimState:SetLayer:UNKNOWN": {
        "prefix": "AnimState:SetLayer",
        "body": "AnimState:SetLayer(${1:const})",
        "description": " ※Params: \n   (const)<any>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "AnimState:SetHue:设置动画色度": {
        "prefix": "AnimState:SetHue",
        "body": "AnimState:SetHue(${1:hue})",
        "description": " ※Params: \n   (hue)<number>[色度(0~1)] \n ※Description: 设置动画色度\n ※Contributor: @Runar"
    },
    "AnimState:SetHaunted:让物品产生闪烁效果": {
        "prefix": "AnimState:SetHaunted",
        "body": "AnimState:SetHaunted(${1:bool})",
        "description": " ※Params: \n   (bool)<boolean>[] \n ※Description: 让物品产生闪烁效果\n ※Contributor: @"
    },
    "AnimState:SetHatOffset:UNKNOWN": {
        "prefix": "AnimState:SetHatOffset",
        "body": "AnimState:SetHatOffset(${1:param1},${2:param2})",
        "description": " ※Params: \n   (param1)<number>[] \n   (param2)<number>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "AnimState:GetAddColour:获取叠加的颜色，返回r,g,b,a": {
        "prefix": "AnimState:GetAddColour",
        "body": "AnimState:GetAddColour()",
        "description": "\n ※Returns: <number>[红色通道(0~1)] <number>[绿色通道(0~1)] <number>[蓝色通道(0~1)] <number>[不透明度(0~1)] \n ※Description: 获取叠加的颜色，返回r,g,b,a\n ※Contributor: @Runar"
    },
    "AnimState:AnimateWhilePaused:暂停时是否也播放动画": {
        "prefix": "AnimState:AnimateWhilePaused",
        "body": "AnimState:AnimateWhilePaused(${1:bool})",
        "description": " ※Params: \n   (bool)<boolean>[是否播放动画] \n ※Description: 暂停时是否也播放动画\n ※Contributor: @Runar"
    },
    "AnimState:SetClientSideBuildOverrideFlag:UNKNOWN": {
        "prefix": "AnimState:SetClientSideBuildOverrideFlag",
        "body": "AnimState:SetClientSideBuildOverrideFlag(${1:name},${2:flag})",
        "description": " ※Params: \n   (name)<string>[] \n   (flag)<boolean>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "AnimState:SetFrame:设置动画到第多少帧": {
        "prefix": "AnimState:SetFrame",
        "body": "AnimState:SetFrame(${1:frame})",
        "description": " ※Params: \n   (frame)<number>[第多少帧] \n ※Description: 设置动画到第多少帧\n ※Contributor: @lan"
    },
    "AnimState:GetCurrentFacing:获取当前动画的朝向，返回0，1，2，3，分别代表什么方向就需要进游戏测试了": {
        "prefix": "AnimState:GetCurrentFacing",
        "body": "AnimState:GetCurrentFacing()",
        "description": "\n ※Returns: <number>[朝向的值] \n ※Description: 获取当前动画的朝向，返回0，1，2，3，分别代表什么方向就需要进游戏测试了\n ※Contributor: @Runar"
    },
    "AnimState:SetDepthWriteEnabled:UNKNOWN": {
        "prefix": "AnimState:SetDepthWriteEnabled",
        "body": "AnimState:SetDepthWriteEnabled()",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "AnimState:MakeFacingDirty:UNKNOWN": {
        "prefix": "AnimState:MakeFacingDirty",
        "body": "AnimState:MakeFacingDirty()",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "AnimState:SetDepthTestEnabled:UNKNOWN": {
        "prefix": "AnimState:SetDepthTestEnabled",
        "body": "AnimState:SetDepthTestEnabled()",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "AnimState:SetDeltaTimeMultiplier:动画播放速度（速度倍数）": {
        "prefix": "AnimState:SetDeltaTimeMultiplier",
        "body": "AnimState:SetDeltaTimeMultiplier(${1:speed})",
        "description": " ※Params: \n   (speed)<number>[倍率] \n ※Description: 动画播放速度（速度倍数）\n ※Contributor: @Runar"
    },
    "AnimState:SetBuild:buildname 就是 scml 文件的名字": {
        "prefix": "AnimState:SetBuild",
        "body": "AnimState:SetBuild(${1:buildname})",
        "description": " ※Params: \n   (buildname)<string>[build名] \n ※Description: buildname 就是 scml 文件的名字\n ※Contributor: @Runar"
    },
    "AnimState:AnimDone:判断动画是否播放完": {
        "prefix": "AnimState:AnimDone",
        "body": "AnimState:AnimDone()",
        "description": "\n ※Returns: <boolean>[动画是否结束播放] \n ※Description: 判断动画是否播放完\n ※Contributor: @Runar"
    },
    "AnimState:SetBrightness:设置动画光度,0为亏曝,2为过曝": {
        "prefix": "AnimState:SetBrightness",
        "body": "AnimState:SetBrightness(${1:brightness})",
        "description": " ※Params: \n   (brightness)<number>[光度(0~2)] \n ※Description: 设置动画光度,0为亏曝,2为过曝\n ※Contributor: @Runar"
    },
    "AnimState:ClearOverrideSymbol:清除覆盖的通道": {
        "prefix": "AnimState:ClearOverrideSymbol",
        "body": "AnimState:ClearOverrideSymbol(${1:symbol})",
        "description": " ※Params: \n   (symbol)<string>[通道名] \n ※Description: 清除覆盖的通道\n ※Contributor: @Runar"
    },
    "AnimState:Pause:暂停动画，无参": {
        "prefix": "AnimState:Pause",
        "body": "AnimState:Pause()",
        "description": "\n ※Description: 暂停动画，无参\n ※Contributor: @Runar"
    },
    "AnimState:GetSymbolPosition:获取通道的位置坐标，四个参数，第一个是通道名，后面三个是x,y,z坐标的偏移量": {
        "prefix": "AnimState:GetSymbolPosition",
        "body": "AnimState:GetSymbolPosition(${1:symbol},${2:offset_x},${3:offset_y},${4:offset_z})",
        "description": " ※Params: \n   (symbol)<string>[通道名] \n   (offset_x)<number>[偏移量x] \n   (offset_y)<number>[偏移量y] \n   (offset_z)<number>[偏移量z] \n ※Description: 获取通道的位置坐标，四个参数，第一个是通道名，后面三个是x,y,z坐标的偏移量\n ※Contributor: @Runar"
    },
    "AnimState:SetBloomEffectHandle:设置泛光效果句柄": {
        "prefix": "AnimState:SetBloomEffectHandle",
        "body": "AnimState:SetBloomEffectHandle(${1:path})",
        "description": " ※Params: \n   (path)<string>[句柄文件相对根目录的完整路径] \n ※Description: 设置泛光效果句柄\n ※Contributor: @Runar"
    },
    "AnimState:GetCurrentAnimationLength:动画总长度，单位：秒，1 帧是 1/30 秒，0.33333 秒": {
        "prefix": "AnimState:GetCurrentAnimationLength",
        "body": "AnimState:GetCurrentAnimationLength()",
        "description": "\n ※Returns: <number>[时间(秒)] \n ※Description: 动画总长度，单位：秒，1 帧是 1/30 秒，0.33333 秒\n ※Contributor: @Runar"
    },
    "AnimState:OverrideSymbol:覆盖旧通道": {
        "prefix": "AnimState:OverrideSymbol",
        "body": "AnimState:OverrideSymbol(${1:oldsymbol},${2:newbuild},${3:newsymbol})",
        "description": " ※Params: \n   (oldsymbol)<string>[通道名] \n   (newbuild)<string>[覆盖通道所在的build] \n   (newsymbol)<string>[覆盖通道] \n ※Description: 覆盖旧通道\n ※Contributor: @Runar"
    },
    "AnimState:OverrideSaturation:UNKNOWN": {
        "prefix": "AnimState:OverrideSaturation",
        "body": "AnimState:OverrideSaturation()",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "AnimState:OverrideHue:UNKNOWN": {
        "prefix": "AnimState:OverrideHue",
        "body": "AnimState:OverrideHue()",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "AnimState:OverrideBrightness:UNKNOWN": {
        "prefix": "AnimState:OverrideBrightness",
        "body": "AnimState:OverrideBrightness()",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "AnimState:HideSymbol:隐藏通道": {
        "prefix": "AnimState:HideSymbol",
        "body": "AnimState:HideSymbol(${1:symbol})",
        "description": " ※Params: \n   (symbol)<string>[通道名] \n ※Description: 隐藏通道\n ※Contributor: @Runar"
    },
    "AnimState:BuildHasSymbol:当前build下是否有对应通道": {
        "prefix": "AnimState:BuildHasSymbol",
        "body": "AnimState:BuildHasSymbol(${1:symbol})",
        "description": " ※Params: \n   (symbol)<string>[通道名] \n ※Returns: <boolean>[是否有给定通道] \n ※Description: 当前build下是否有对应通道\n ※Contributor: @Runar"
    },
    "AnimState:IsSymbolOverridden:通道是否被覆盖": {
        "prefix": "AnimState:IsSymbolOverridden",
        "body": "AnimState:IsSymbolOverridden()",
        "description": "\n ※Returns: <boolean>[是否被覆盖] \n ※Description: 通道是否被覆盖\n ※Contributor: @Runar"
    },
    "AnimState:Hide:隐藏图层(Layer)": {
        "prefix": "AnimState:Hide",
        "body": "AnimState:Hide(${1:layername})",
        "description": " ※Params: \n   (layername)<string>[图层名] \n ※Description: 隐藏图层(Layer)\n ※Contributor: @Runar"
    },
    "AnimState:GetLayer:UNKNOWN": {
        "prefix": "AnimState:GetLayer",
        "body": "AnimState:GetLayer()",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "AnimState:GetSymbolAddColour:获取通道叠加的颜色，返回r,g,b,a": {
        "prefix": "AnimState:GetSymbolAddColour",
        "body": "AnimState:GetSymbolAddColour()",
        "description": "\n ※Returns: <number>[红色通道(0~1)] <number>[绿色通道(0~1)] <number>[蓝色通道(0~1)] <number>[不透明度(0~1)] \n ※Description: 获取通道叠加的颜色，返回r,g,b,a\n ※Contributor: @Runar"
    },
    "AnimState:GetCurrentBankName:": {
        "prefix": "AnimState:GetCurrentBankName",
        "body": "AnimState:GetCurrentBankName()",
        "description": "\n ※Description: \n ※Contributor: @lan 开发者注释:该方法在开发环境以外使用可能会出错"
    },
    "AnimState:SetAddColour:颜色叠加，几乎不受原图颜色影响，参数 0-1": {
        "prefix": "AnimState:SetAddColour",
        "body": "AnimState:SetAddColour(${1:r},${2:g},${3:b},${4:a})",
        "description": " ※Params: \n   (r)<number>[红色通道(0~1)] \n   (g)<number>[绿色通道(0~1)] \n   (b)<number>[蓝色通道(0~1)] \n   (a)<number>[不透明度(0~1)] \n ※Description: 颜色叠加，几乎不受原图颜色影响，参数 0-1\n ※Contributor: @Runar"
    },
    "AnimState:GetBuild:获取build名": {
        "prefix": "AnimState:GetBuild",
        "body": "AnimState:GetBuild()",
        "description": "\n ※Returns: <string>[build名] \n ※Description: 获取build名\n ※Contributor: @Runar"
    },
    "AnimState:UseHeadHatExchange:UNKNOWN": {
        "prefix": "AnimState:UseHeadHatExchange",
        "body": "AnimState:UseHeadHatExchange()",
        "description": "\n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "Physics:GetMotorVel:获取当前三个方向上的速度分量": {
        "prefix": "Physics:GetMotorVel",
        "body": "Physics:GetMotorVel()",
        "description": "\n ※Returns: <number>[v_x] <number>[v_y] <number>[v_z] \n ※Description: 获取当前三个方向上的速度分量\n ※Contributor: @lan"
    },
    "Physics:SetMotorVelOverride:物理运行覆盖": {
        "prefix": "Physics:SetMotorVelOverride",
        "body": "Physics:SetMotorVelOverride(${1:vx},${2:vy},${3:vz})",
        "description": " ※Params: \n   (vx)<number>[] \n   (vy)<number>[] \n   (vz)<number>[] \n ※Description: 物理运行覆盖\n ※Contributor: @lan"
    },
    "Physics:ClearMotorVelOverride:清除物理运行覆盖": {
        "prefix": "Physics:ClearMotorVelOverride",
        "body": "Physics:ClearMotorVelOverride()",
        "description": "\n ※Description: 清除物理运行覆盖\n ※Contributor: @lan"
    },
    "Physics:Stop:UNKNOWN": {
        "prefix": "Physics:Stop",
        "body": "Physics:Stop(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "Physics:GetRadius:获取物理碰撞范围": {
        "prefix": "Physics:GetRadius",
        "body": "Physics:GetRadius()",
        "description": "\n ※Description: 获取物理碰撞范围\n ※Contributor: @不知名笔记"
    },
    "Physics:SetFriction:设置摩擦": {
        "prefix": "Physics:SetFriction",
        "body": "Physics:SetFriction(${1:F})",
        "description": " ※Params: \n   (F)<number>[] \n ※Description: 设置摩擦\n ※Contributor: @lan"
    },
    "Physics:SetTriangleMesh:设置三角形网格": {
        "prefix": "Physics:SetTriangleMesh",
        "body": "Physics:SetTriangleMesh(${1:PLAYER_COLLISION_MESH})",
        "description": " ※Params: \n   (PLAYER_COLLISION_MESH)<>[] \n ※Description: 设置三角形网格\n ※Contributor: @不知名笔记"
    },
    "Physics:GetMotorSpeed:获取当前速度": {
        "prefix": "Physics:GetMotorSpeed",
        "body": "Physics:GetMotorSpeed()",
        "description": "\n ※Returns: <number>[] \n ※Description: 获取当前速度\n ※Contributor: @lan"
    },
    "Physics:ConstrainTo:将自己约束到目标实体身上": {
        "prefix": "Physics:ConstrainTo",
        "body": "Physics:ConstrainTo(${1:target.entity})",
        "description": " ※Params: \n   (target.entity)<>[] \n ※Description: 将自己约束到目标实体身上\n ※Contributor: @不知名笔记"
    },
    "Physics:SetVel:UNKNOWN": {
        "prefix": "Physics:SetVel",
        "body": "Physics:SetVel(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "Physics:GetCollisionMask:UNKNOWN": {
        "prefix": "Physics:GetCollisionMask",
        "body": "Physics:GetCollisionMask(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "Physics:ClearCollidesWith:UNKNOWN": {
        "prefix": "Physics:ClearCollidesWith",
        "body": "Physics:ClearCollidesWith(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "Physics:GetMass:获取质量": {
        "prefix": "Physics:GetMass",
        "body": "Physics:GetMass()",
        "description": "\n ※Description: 获取质量\n ※Contributor: @不知名笔记"
    },
    "Physics:ClearCollisionMask:清除冲突面": {
        "prefix": "Physics:ClearCollisionMask",
        "body": "Physics:ClearCollisionMask()",
        "description": "\n ※Description: 清除冲突面\n ※Contributor: @不知名笔记"
    },
    "Physics:CollidesWith:增加碰撞(不会被撞退)": {
        "prefix": "Physics:CollidesWith",
        "body": "Physics:Physics:CollidesWith(${1:COLLISION.OBSTACLES})",
        "description": " ※Params: \n   (COLLISION)<>[] \n ※Description: 增加碰撞(不会被撞退)\n ※Contributor: @lan"
    },
    "Physics:SetMotorVel:UNKNOWN": {
        "prefix": "Physics:SetMotorVel",
        "body": "Physics:SetMotorVel(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "Physics:SetSphere:物理范围": {
        "prefix": "Physics:SetSphere",
        "body": "Physics:SetSphere(${1:r})",
        "description": " ※Params: \n   (r)<number>[半径] \n ※Description: 物理范围\n ※Contributor: @lan 球体"
    },
    "Physics:IsPassable:UNKNOWN": {
        "prefix": "Physics:IsPassable",
        "body": "Physics:IsPassable(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "Physics:SetDamping:设置阻尼 对速度的衰弱": {
        "prefix": "Physics:SetDamping",
        "body": "Physics:SetDamping(${1:0})",
        "description": " ※Params: \n   (0)<number>[] \n ※Description: 设置阻尼 对速度的衰弱\n ※Contributor: @不知名笔记"
    },
    "Physics:GetVelocity:获取速度向量": {
        "prefix": "Physics:GetVelocity",
        "body": "Physics:GetVelocity()",
        "description": "\n ※Returns: <number>[vx] <number>[vy] <number>[vz] \n ※Description: 获取速度向量\n ※Contributor: @lan"
    },
    "Physics:IsActive:逻辑判断物理机是否处于工作状态": {
        "prefix": "Physics:IsActive",
        "body": "Physics:IsActive()",
        "description": "\n ※Description: 逻辑判断物理机是否处于工作状态\n ※Contributor: @lan"
    },
    "Physics:SetRestitution:设置恢复 落地反弹力 反作用力": {
        "prefix": "Physics:SetRestitution",
        "body": "Physics:SetRestitution(${1:.5})",
        "description": " ※Params: \n   (.5)<number>[] \n ※Description: 设置恢复 落地反弹力 反作用力\n ※Contributor: @不知名笔记"
    },
    "Physics:SetCollisionMask:UNKNOWN": {
        "prefix": "Physics:SetCollisionMask",
        "body": "Physics:SetCollisionMask(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "Physics:SetLocalCollisionMask:UNKNOWN": {
        "prefix": "Physics:SetLocalCollisionMask",
        "body": "Physics:SetLocalCollisionMask(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "Physics:GetCollisionGroup:UNKNOWN": {
        "prefix": "Physics:GetCollisionGroup",
        "body": "Physics:GetCollisionGroup(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "Physics:TeleportOffset:UNKNOWN": {
        "prefix": "Physics:TeleportOffset",
        "body": "Physics:TeleportOffset(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "Physics:Teleport:物理传送": {
        "prefix": "Physics:Teleport",
        "body": "Physics:Teleport(${1:x},${2:y},${3:z})",
        "description": " ※Params: \n   (x)<>[] \n   (y)<>[] \n   (z)<>[] \n ※Description: 物理传送\n ※Contributor: @lan"
    },
    "Physics:TEMPHACK_DisableSleepDeactivation:UNKNOWN": {
        "prefix": "Physics:TEMPHACK_DisableSleepDeactivation",
        "body": "Physics:TEMPHACK_DisableSleepDeactivation(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "Physics:SetTempMass0:UNKNOWN": {
        "prefix": "Physics:SetTempMass0",
        "body": "Physics:SetTempMass0(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "Physics:SetMass:自由落体速率 0为不掉落，默认1质量": {
        "prefix": "Physics:SetMass",
        "body": "Physics:SetMass(${1:0})",
        "description": " ※Params: \n   (0)<number>[] \n ※Description: 自由落体速率 0为不掉落，默认1质量\n ※Contributor: @不知名笔记"
    },
    "Physics:TeleportRespectingInterpolation:UNKNOWN": {
        "prefix": "Physics:TeleportRespectingInterpolation",
        "body": "Physics:TeleportRespectingInterpolation(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "Physics:SetCylinder:中空类型的物理性": {
        "prefix": "Physics:SetCylinder",
        "body": "Physics:SetCylinder(${1:radius},${2:3})",
        "description": " ※Params: \n   (radius)<number>[] \n   (3)<number>[] \n ※Description: 中空类型的物理性\n ※Contributor: @不知名笔记"
    },
    "Physics:ClearTransformationHistory:清除转换历史记录": {
        "prefix": "Physics:ClearTransformationHistory",
        "body": "Physics:ClearTransformationHistory()",
        "description": "\n ※Description: 清除转换历史记录\n ※Contributor: @不知名笔记"
    },
    "Physics:SetCapsule:物理碰撞体积 碰撞高度": {
        "prefix": "Physics:SetCapsule",
        "body": "Physics:SetCapsule(${1:rad},${2:1})",
        "description": " ※Params: \n   (rad)<number>[] \n   (1)<number>[] \n ※Description: 物理碰撞体积 碰撞高度\n ※Contributor: @不知名笔记"
    },
    "Physics:SetCollisionCallback:设置碰撞回调函数": {
        "prefix": "Physics:SetCollisionCallback",
        "body": "Physics:Physics:SetCollisionCallback(function(inst,other)\n\t$1\nend)\n",
        "description": " ※Params: \n   (fn)<function>[]\n      {Params:\n         (inst)<table>[碰撞者自己] \n         (other)<table>[被碰撞者]} \n ※Description: 设置碰撞回调函数\n ※Contributor: @不知名笔记"
    },
    "Physics:GetHeight:UNKNOWN": {
        "prefix": "Physics:GetHeight",
        "body": "Physics:GetHeight(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "Physics:SetCollisionGroup:设置碰撞组": {
        "prefix": "Physics:SetCollisionGroup",
        "body": "Physics:SetCollisionGroup(${1:COLLISION.ITEMS})",
        "description": " ※Params: \n   (COLLISION.ITEMS)<>[] \n ※Description: 设置碰撞组\n ※Contributor: @"
    },
    "Physics:SetDontRemoveOnSleep:休眠状态下物理碰撞依旧生效": {
        "prefix": "Physics:SetDontRemoveOnSleep",
        "body": "Physics:SetDontRemoveOnSleep(${1:true})",
        "description": " ※Params: \n   (true)<boolean>[] \n ※Description: 休眠状态下物理碰撞依旧生效\n ※Contributor: @lan"
    },
    "Physics:SetCollides:设置碰撞关闭 设定坐标后再开启碰撞": {
        "prefix": "Physics:SetCollides",
        "body": "Physics:SetCollides(${1:false})",
        "description": " ※Params: \n   (false)<boolean>[] \n ※Description: 设置碰撞关闭 设定坐标后再开启碰撞\n ※Contributor: @不知名笔记"
    },
    "Physics:ClearLocalCollisionMask:UNKNOWN": {
        "prefix": "Physics:ClearLocalCollisionMask",
        "body": "Physics:ClearLocalCollisionMask(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "Physics:CheckGridOffset:UNKNOWN": {
        "prefix": "Physics:CheckGridOffset",
        "body": "Physics:CheckGridOffset(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "Physics:GeoProbe:UNKNOWN": {
        "prefix": "Physics:GeoProbe",
        "body": "Physics:GeoProbe(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "Physics:SetActive:关闭所有物理性(物理碰撞机全面暂停)": {
        "prefix": "Physics:SetActive",
        "body": "Physics:SetActive(${1:false})",
        "description": " ※Params: \n   (false)<boolean>[] \n ※Description: 关闭所有物理性(物理碰撞机全面暂停)\n ※Contributor: @lan"
    },
    "SoundEmitter:KillAllSounds:关闭所有音乐": {
        "prefix": "SoundEmitter:KillAllSounds",
        "body": "SoundEmitter:KillAllSounds()",
        "description": "\n ※Description: 关闭所有音乐\n ※Contributor: @lan"
    },
    "SoundEmitter:SetParameter:UNKNOWN": {
        "prefix": "SoundEmitter:SetParameter",
        "body": "SoundEmitter:SetParameter(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "SoundEmitter:GetEntity:UNKNOWN": {
        "prefix": "SoundEmitter:GetEntity",
        "body": "SoundEmitter:GetEntity(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "SoundEmitter:SetMute:UNKNOWN": {
        "prefix": "SoundEmitter:SetMute",
        "body": "SoundEmitter:SetMute(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "SoundEmitter:PlaySoundWithParams:带参播放音效": {
        "prefix": "SoundEmitter:PlaySoundWithParams",
        "body": "SoundEmitter:PlaySoundWithParams(${1:path},${2:params})",
        "description": " ※Params: \n   (path)<string>[音效路径] \n   (params)<table>[{speed = 1, size = 1, intensity = 0.8, start = math.random()}] \n ※Description: 带参播放音效\n ※Contributor: @lan"
    },
    "SoundEmitter:KillSound:关闭指定音效": {
        "prefix": "SoundEmitter:KillSound",
        "body": "SoundEmitter:KillSound(${1:name})",
        "description": " ※Params: \n   (name)<string>[指定音效名] \n ※Description: 关闭指定音效\n ※Contributor: @lan"
    },
    "SoundEmitter:OverrideVolumeMultiplier:设置速率": {
        "prefix": "SoundEmitter:OverrideVolumeMultiplier",
        "body": "SoundEmitter:OverrideVolumeMultiplier(${1:param})",
        "description": " ※Params: \n   (param)<number>[] \n ※Description: 设置速率\n ※Contributor: @lan"
    },
    "SoundEmitter:PlayingSound:UNKNOWN": {
        "prefix": "SoundEmitter:PlayingSound",
        "body": "SoundEmitter:PlayingSound(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "SoundEmitter:SetVolume:设置音量": {
        "prefix": "SoundEmitter:SetVolume",
        "body": "SoundEmitter:SetVolume(${1:name},${2:volume})",
        "description": " ※Params: \n   (name)<string>[音效名] \n   (volume)<number>[音量] \n ※Description: 设置音量\n ※Contributor: @lan"
    },
    "SoundEmitter:PlaySound:播放音效": {
        "prefix": "SoundEmitter:PlaySound",
        "body": "SoundEmitter:PlaySound(${1:soundpath},${2:loopname},${3:volume})",
        "description": " ※Params: \n   (soundpath)<string>[路径] \n   (loopname)<string>[起一个音效名] \n   (volume)<number>[音量] \n ※Description: 播放音效\n ※Contributor: @"
    },
    "Transform:GetHistoryData:UNKNOWN": {
        "prefix": "Transform:GetHistoryData",
        "body": "Transform:GetHistoryData(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "Transform:GetScale:获取缩放比": {
        "prefix": "Transform:GetScale",
        "body": "Transform:GetScale()",
        "description": "\n ※Returns: <number>[x_scale] <number>[y_scale] <number>[z_scale] \n ※Description: 获取缩放比\n ※Contributor: @lan"
    },
    "Transform:SetPredictedEightFaced:UNKNOWN": {
        "prefix": "Transform:SetPredictedEightFaced",
        "body": "Transform:SetPredictedEightFaced(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "Transform:SetPredictedNoFaced:UNKNOWN": {
        "prefix": "Transform:SetPredictedNoFaced",
        "body": "Transform:SetPredictedNoFaced(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "Transform:SetTwoFaced:设置2面向": {
        "prefix": "Transform:SetTwoFaced",
        "body": "Transform:SetTwoFaced()",
        "description": "\n ※Description: 设置2面向\n ※Contributor: @lan"
    },
    "Transform:GetRotation:获取实体面向角度": {
        "prefix": "Transform:GetRotation",
        "body": "Transform:GetRotation()",
        "description": "\n ※Returns: <number>[角度制角度] \n ※Description: 获取实体面向角度\n ※Contributor: @lan 有正负 逆时针为正 0-180"
    },
    "Transform:GetFacingRotation:UNKNOWN": {
        "prefix": "Transform:GetFacingRotation",
        "body": "Transform:GetFacingRotation(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "Transform:SetRotation:设置旋转角度": {
        "prefix": "Transform:SetRotation",
        "body": "Transform:SetRotation(${1:angle})",
        "description": " ※Params: \n   (angle)<number>[角度制角度] \n ※Description: 设置旋转角度\n ※Contributor: @lan 有正负 逆时针为正 0-180"
    },
    "Transform:SetScale:按比例缩放": {
        "prefix": "Transform:SetScale",
        "body": "Transform:SetScale(${1:x_scale},${2:y_scale},${3:z_scale})",
        "description": " ※Params: \n   (x_scale)<number>[] \n   (y_scale)<number>[] \n   (z_scale)<number>[] \n ※Description: 按比例缩放\n ※Contributor: @lan"
    },
    "Transform:SetPredictedSixFaced:UNKNOWN": {
        "prefix": "Transform:SetPredictedSixFaced",
        "body": "Transform:SetPredictedSixFaced(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "Transform:ClearPredictedFacingModel:UNKNOWN": {
        "prefix": "Transform:ClearPredictedFacingModel",
        "body": "Transform:ClearPredictedFacingModel(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "Transform:GetFacing:UNKNOWN": {
        "prefix": "Transform:GetFacing",
        "body": "Transform:GetFacing(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "Transform:SetPredictedTwoFaced:UNKNOWN": {
        "prefix": "Transform:SetPredictedTwoFaced",
        "body": "Transform:SetPredictedTwoFaced(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "Transform:GetLocalPosition:UNKNOWN": {
        "prefix": "Transform:GetLocalPosition",
        "body": "Transform:GetLocalPosition(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "Transform:SetSixFaced:设置6面向": {
        "prefix": "Transform:SetSixFaced",
        "body": "Transform:SetSixFaced()",
        "description": "\n ※Description: 设置6面向\n ※Contributor: @lan"
    },
    "Transform:OffsetPosition:UNKNOWN": {
        "prefix": "Transform:OffsetPosition",
        "body": "Transform:OffsetPosition(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "Transform:UpdateTransform:UNKNOWN": {
        "prefix": "Transform:UpdateTransform",
        "body": "Transform:UpdateTransform(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "Transform:SetPredictedFourFaced:UNKNOWN": {
        "prefix": "Transform:SetPredictedFourFaced",
        "body": "Transform:SetPredictedFourFaced(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "Transform:SetPosition:设置实体坐标": {
        "prefix": "Transform:SetPosition",
        "body": "Transform:SetPosition(${1:x},${2:y},${3:z})",
        "description": " ※Params: \n   (x)<number>[] \n   (y)<number>[] \n   (z)<number>[] \n ※Description: 设置实体坐标\n ※Contributor: @lan"
    },
    "Transform:GetWorldPosition:获取实体的世界坐标": {
        "prefix": "Transform:GetWorldPosition",
        "body": "Transform:GetWorldPosition()",
        "description": "\n ※Returns: <number>[x] <number>[y] <number>[z] \n ※Description: 获取实体的世界坐标\n ※Contributor: @lan"
    },
    "Transform:LoadRotation:UNKNOWN": {
        "prefix": "Transform:LoadRotation",
        "body": "Transform:LoadRotation(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "Transform:SetNoFaced:设置无面向": {
        "prefix": "Transform:SetNoFaced",
        "body": "Transform:SetNoFaced()",
        "description": "\n ※Description: 设置无面向\n ※Contributor: @lan"
    },
    "Transform:SetFourFaced:设置4面向": {
        "prefix": "Transform:SetFourFaced",
        "body": "Transform:SetFourFaced()",
        "description": "\n ※Description: 设置4面向\n ※Contributor: @lan"
    },
    "Transform:SetIsOnPlatform:UNKNOWN": {
        "prefix": "Transform:SetIsOnPlatform",
        "body": "Transform:SetIsOnPlatform(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "Transform:SetInterpolateRotation:UNKNOWN": {
        "prefix": "Transform:SetInterpolateRotation",
        "body": "Transform:SetInterpolateRotation(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "Transform:SetEightFaced:设置8面向": {
        "prefix": "Transform:SetEightFaced",
        "body": "Transform:SetEightFaced()",
        "description": "\n ※Description: 设置8面向\n ※Contributor: @lan"
    },
    "Transform:SetFromProxy:UNKNOWN": {
        "prefix": "Transform:SetFromProxy",
        "body": "Transform:SetFromProxy(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "Transform:GetPredictionPosition:UNKNOWN": {
        "prefix": "Transform:GetPredictionPosition",
        "body": "Transform:GetPredictionPosition(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: UNKNOWN\n ※Contributor: @"
    },
    "tag:birdblocker": {
        "prefix": "tag+birdblocker",
        "body": "\"birdblocker\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:trapdamage:陷阱伤害": {
        "prefix": "tag+trapdamage",
        "body": "\"trapdamage\"",
        "description": " ※Name: 陷阱伤害\n ※Class: 物品 | Inventory Item\n ※Description: 有伤害的物品或装备，发现于荆棘甲反伤特效（这是个有伤害的实体）\n ※Contributor: \n "
    },
    "tag:ChaseAndRam": {
        "prefix": "tag+ChaseAndRam",
        "body": "\"ChaseAndRam\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:paired": {
        "prefix": "tag+paired",
        "body": "\"paired\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:accepts_oceanfishingtackle": {
        "prefix": "tag+accepts_oceanfishingtackle",
        "body": "\"accepts_oceanfishingtackle\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:domesticated": {
        "prefix": "tag+domesticated",
        "body": "\"domesticated\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:cooker": {
        "prefix": "tag+cooker",
        "body": "\"cooker\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:moon_altar_link": {
        "prefix": "tag+moon_altar_link",
        "body": "\"moon_altar_link\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:pre-preparedfood": {
        "prefix": "tag+pre-preparedfood",
        "body": "\"pre-preparedfood\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:healthrepairable": {
        "prefix": "tag+healthrepairable",
        "body": "\"healthrepairable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:fossil": {
        "prefix": "tag+fossil",
        "body": "\"fossil\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:snotbomb": {
        "prefix": "tag+snotbomb",
        "body": "\"snotbomb\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:daywalkerspawningground": {
        "prefix": "tag+daywalkerspawningground",
        "body": "\"daywalkerspawningground\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:carnivaldecor_ranker": {
        "prefix": "tag+carnivaldecor_ranker",
        "body": "\"carnivaldecor_ranker\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:burnt:": {
        "prefix": "tag+burnt",
        "body": "\"burnt\"",
        "description": " ※Name: \n ※Class: 建筑 | Structure\n ※Description: 被烧毁的建筑物\n ※Contributor: \n "
    },
    "tag:rocklight": {
        "prefix": "tag+rocklight",
        "body": "\"rocklight\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:catfood": {
        "prefix": "tag+catfood",
        "body": "\"catfood\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:allow_casting": {
        "prefix": "tag+allow_casting",
        "body": "\"allow_casting\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:soulless": {
        "prefix": "tag+soulless",
        "body": "\"soulless\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:kitcoonfollowtoy": {
        "prefix": "tag+kitcoonfollowtoy",
        "body": "\"kitcoonfollowtoy\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:diviningrod": {
        "prefix": "tag+diviningrod",
        "body": "\"diviningrod\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:portabletent": {
        "prefix": "tag+portabletent",
        "body": "\"portabletent\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:lighter": {
        "prefix": "tag+lighter",
        "body": "\"lighter\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:deerclops_eyeball": {
        "prefix": "tag+deerclops_eyeball",
        "body": "\"deerclops_eyeball\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:moonglass": {
        "prefix": "tag+moonglass",
        "body": "\"moonglass\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:untrappable": {
        "prefix": "tag+untrappable",
        "body": "\"untrappable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:carnivalgame_canfeed": {
        "prefix": "tag+carnivalgame_canfeed",
        "body": "\"carnivalgame_canfeed\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:bat": {
        "prefix": "tag+bat",
        "body": "\"bat\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:ghostfriend_notsummoned": {
        "prefix": "tag+ghostfriend_notsummoned",
        "body": "\"ghostfriend_notsummoned\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:pond": {
        "prefix": "tag+pond",
        "body": "\"pond\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:fruitfly": {
        "prefix": "tag+fruitfly",
        "body": "\"fruitfly\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:archive_chandelier": {
        "prefix": "tag+archive_chandelier",
        "body": "\"archive_chandelier\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:sickness": {
        "prefix": "tag+sickness",
        "body": "\"sickness\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:squid": {
        "prefix": "tag+squid",
        "body": "\"squid\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:walkableperipheral": {
        "prefix": "tag+walkableperipheral",
        "body": "\"walkableperipheral\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:carnivalhostsummon": {
        "prefix": "tag+carnivalhostsummon",
        "body": "\"carnivalhostsummon\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:hermitpearl": {
        "prefix": "tag+hermitpearl",
        "body": "\"hermitpearl\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:compostingbin_accepts_items": {
        "prefix": "tag+compostingbin_accepts_items",
        "body": "\"compostingbin_accepts_items\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:switchtoho": {
        "prefix": "tag+switchtoho",
        "body": "\"switchtoho\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:playerlight": {
        "prefix": "tag+playerlight",
        "body": "\"playerlight\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:cooldown": {
        "prefix": "tag+cooldown",
        "body": "\"cooldown\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:batteryuser": {
        "prefix": "tag+batteryuser",
        "body": "\"batteryuser\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:canrepeatcast": {
        "prefix": "tag+canrepeatcast",
        "body": "\"canrepeatcast\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:magicalbird": {
        "prefix": "tag+magicalbird",
        "body": "\"magicalbird\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:saltlicker": {
        "prefix": "tag+saltlicker",
        "body": "\"saltlicker\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:scarytoprey": {
        "prefix": "tag+scarytoprey",
        "body": "\"scarytoprey\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:junk_pile": {
        "prefix": "tag+junk_pile",
        "body": "\"junk_pile\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:equipmentmodel": {
        "prefix": "tag+equipmentmodel",
        "body": "\"equipmentmodel\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:abigail:疑似NPC": {
        "prefix": "tag+abigail",
        "body": "\"abigail\"",
        "description": " ※Name: 疑似NPC\n ※Class: 实体 | Prefab\n ※Description: \n ※Contributor: \n "
    },
    "tag:fillable_showoceanaction": {
        "prefix": "tag+fillable_showoceanaction",
        "body": "\"fillable_showoceanaction\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:backpack": {
        "prefix": "tag+backpack",
        "body": "\"backpack\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:whip_crack_imune": {
        "prefix": "tag+whip_crack_imune",
        "body": "\"whip_crack_imune\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:wolfgang_overbuff_4": {
        "prefix": "tag+wolfgang_overbuff_4",
        "body": "\"wolfgang_overbuff_4\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:ediblefish_meat": {
        "prefix": "tag+ediblefish_meat",
        "body": "\"ediblefish_meat\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:fertilizerresearchable": {
        "prefix": "tag+fertilizerresearchable",
        "body": "\"fertilizerresearchable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:canbetrapped": {
        "prefix": "tag+canbetrapped",
        "body": "\"canbetrapped\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:deploykititem": {
        "prefix": "tag+deploykititem",
        "body": "\"deploykititem\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:buried": {
        "prefix": "tag+buried",
        "body": "\"buried\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:spotlight": {
        "prefix": "tag+spotlight",
        "body": "\"spotlight\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:rangedlighter": {
        "prefix": "tag+rangedlighter",
        "body": "\"rangedlighter\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:nonpotatable": {
        "prefix": "tag+nonpotatable",
        "body": "\"nonpotatable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:rawmeat": {
        "prefix": "tag+rawmeat",
        "body": "\"rawmeat\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:_writeable": {
        "prefix": "tag+_writeable",
        "body": "\"_writeable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:health_as_oldage": {
        "prefix": "tag+health_as_oldage",
        "body": "\"health_as_oldage\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:bernieowner": {
        "prefix": "tag+bernieowner",
        "body": "\"bernieowner\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:chester_eyebone": {
        "prefix": "tag+chester_eyebone",
        "body": "\"chester_eyebone\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:chop_attack": {
        "prefix": "tag+chop_attack",
        "body": "\"chop_attack\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:diseaseable": {
        "prefix": "tag+diseaseable",
        "body": "\"diseaseable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:emergency": {
        "prefix": "tag+emergency",
        "body": "\"emergency\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:rebuildconstructionsite": {
        "prefix": "tag+rebuildconstructionsite",
        "body": "\"rebuildconstructionsite\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:mastercookware": {
        "prefix": "tag+mastercookware",
        "body": "\"mastercookware\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:boat": {
        "prefix": "tag+boat",
        "body": "\"boat\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:houndmound": {
        "prefix": "tag+houndmound",
        "body": "\"houndmound\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:premine": {
        "prefix": "tag+premine",
        "body": "\"premine\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:stalkerbloom": {
        "prefix": "tag+stalkerbloom",
        "body": "\"stalkerbloom\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:noquickpick": {
        "prefix": "tag+noquickpick",
        "body": "\"noquickpick\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:has_no_prize": {
        "prefix": "tag+has_no_prize",
        "body": "\"has_no_prize\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:shark": {
        "prefix": "tag+shark",
        "body": "\"shark\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:can_offset_sort_pos": {
        "prefix": "tag+can_offset_sort_pos",
        "body": "\"can_offset_sort_pos\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:donecooking": {
        "prefix": "tag+donecooking",
        "body": "\"donecooking\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:deployedfarmplant:种子": {
        "prefix": "tag+deployedfarmplant",
        "body": "\"deployedfarmplant\"",
        "description": " ※Name: 种子\n ※Class: 物品 | Inventory Item\n ※Description: 种子标签\n ※Contributor: \n "
    },
    "tag:coaching": {
        "prefix": "tag+coaching",
        "body": "\"coaching\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:antlion": {
        "prefix": "tag+antlion",
        "body": "\"antlion\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:wallbuilder": {
        "prefix": "tag+wallbuilder",
        "body": "\"wallbuilder\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:saddleable": {
        "prefix": "tag+saddleable",
        "body": "\"saddleable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:honeyed": {
        "prefix": "tag+honeyed",
        "body": "\"honeyed\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:noepicmusic": {
        "prefix": "tag+noepicmusic",
        "body": "\"noepicmusic\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:bearger_blocker": {
        "prefix": "tag+bearger_blocker",
        "body": "\"bearger_blocker\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:ancienttree": {
        "prefix": "tag+ancienttree",
        "body": "\"ancienttree\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:gem": {
        "prefix": "tag+gem",
        "body": "\"gem\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:abigail_flower": {
        "prefix": "tag+abigail_flower",
        "body": "\"abigail_flower\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:mermdisguise": {
        "prefix": "tag+mermdisguise",
        "body": "\"mermdisguise\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:mushroom_farm": {
        "prefix": "tag+mushroom_farm",
        "body": "\"mushroom_farm\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:crystal": {
        "prefix": "tag+crystal",
        "body": "\"crystal\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:buzzard": {
        "prefix": "tag+buzzard",
        "body": "\"buzzard\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:nopunch": {
        "prefix": "tag+nopunch",
        "body": "\"nopunch\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:prototyper": {
        "prefix": "tag+prototyper",
        "body": "\"prototyper\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:inuse": {
        "prefix": "tag+inuse",
        "body": "\"inuse\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:firemelt": {
        "prefix": "tag+firemelt",
        "body": "\"firemelt\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:minimap": {
        "prefix": "tag+minimap",
        "body": "\"minimap\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:fur": {
        "prefix": "tag+fur",
        "body": "\"fur\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:bee": {
        "prefix": "tag+bee",
        "body": "\"bee\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:charlie_npc": {
        "prefix": "tag+charlie_npc",
        "body": "\"charlie_npc\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:moonbase": {
        "prefix": "tag+moonbase",
        "body": "\"moonbase\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:walrus": {
        "prefix": "tag+walrus",
        "body": "\"walrus\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:cookiecutter": {
        "prefix": "tag+cookiecutter",
        "body": "\"cookiecutter\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:hasemergencymode": {
        "prefix": "tag+hasemergencymode",
        "body": "\"hasemergencymode\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:expertchef:": {
        "prefix": "tag+expertchef",
        "body": "\"expertchef\"",
        "description": " ※Name: \n ※Class: 角色 | Character\n ※Description: 烹饪专家 在火上烤熟东西只花一半时间（0.5s）\n ※Contributor: \n "
    },
    "tag:marble": {
        "prefix": "tag+marble",
        "body": "\"marble\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:unwrappable": {
        "prefix": "tag+unwrappable",
        "body": "\"unwrappable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:nosteal": {
        "prefix": "tag+nosteal",
        "body": "\"nosteal\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:faced_chair": {
        "prefix": "tag+faced_chair",
        "body": "\"faced_chair\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:invincible": {
        "prefix": "tag+invincible",
        "body": "\"invincible\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:souleater": {
        "prefix": "tag+souleater",
        "body": "\"souleater\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:boatcannon": {
        "prefix": "tag+boatcannon",
        "body": "\"boatcannon\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:trophyscale": {
        "prefix": "tag+trophyscale",
        "body": "\"trophyscale\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:battlespear": {
        "prefix": "tag+battlespear",
        "body": "\"battlespear\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:fridge": {
        "prefix": "tag+fridge",
        "body": "\"fridge\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:quagmire_altar": {
        "prefix": "tag+quagmire_altar",
        "body": "\"quagmire_altar\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:readyforfeast": {
        "prefix": "tag+readyforfeast",
        "body": "\"readyforfeast\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:stump": {
        "prefix": "tag+stump",
        "body": "\"stump\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:yotc_racestart": {
        "prefix": "tag+yotc_racestart",
        "body": "\"yotc_racestart\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:quickpick": {
        "prefix": "tag+quickpick",
        "body": "\"quickpick\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:confetti_buff": {
        "prefix": "tag+confetti_buff",
        "body": "\"confetti_buff\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:cointosscast": {
        "prefix": "tag+cointosscast",
        "body": "\"cointosscast\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:goggles:": {
        "prefix": "tag+goggles",
        "body": "\"goggles\"",
        "description": " ※Name: \n ※Class: 物品 | Inventory Item\n ※Description: 护目镜效果，免疫沙尘暴、月亮风暴、黑暗瘴气的减速和视野降低\n ※Contributor: \n "
    },
    "tag:oceanfishing_lure": {
        "prefix": "tag+oceanfishing_lure",
        "body": "\"oceanfishing_lure\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:birdfeather": {
        "prefix": "tag+birdfeather",
        "body": "\"birdfeather\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:silviculture": {
        "prefix": "tag+silviculture",
        "body": "\"silviculture\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:enabled": {
        "prefix": "tag+enabled",
        "body": "\"enabled\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:israndomseed": {
        "prefix": "tag+israndomseed",
        "body": "\"israndomseed\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:self_fertilizable": {
        "prefix": "tag+self_fertilizable",
        "body": "\"self_fertilizable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:wateringcan": {
        "prefix": "tag+wateringcan",
        "body": "\"wateringcan\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:takeshelfitem": {
        "prefix": "tag+takeshelfitem",
        "body": "\"takeshelfitem\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:quagmire_farmhand": {
        "prefix": "tag+quagmire_farmhand",
        "body": "\"quagmire_farmhand\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:teenbird": {
        "prefix": "tag+teenbird",
        "body": "\"teenbird\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:scrapmonolevision": {
        "prefix": "tag+scrapmonolevision",
        "body": "\"scrapmonolevision\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:batdestination": {
        "prefix": "tag+batdestination",
        "body": "\"batdestination\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:quakedebris": {
        "prefix": "tag+quakedebris",
        "body": "\"quakedebris\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:selfstacker": {
        "prefix": "tag+selfstacker",
        "body": "\"selfstacker\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:statue": {
        "prefix": "tag+statue",
        "body": "\"statue\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:unsafefood": {
        "prefix": "tag+unsafefood",
        "body": "\"unsafefood\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:channeled": {
        "prefix": "tag+channeled",
        "body": "\"channeled\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:debuffable": {
        "prefix": "tag+debuffable",
        "body": "\"debuffable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:treeseed": {
        "prefix": "tag+treeseed",
        "body": "\"treeseed\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:deerantler": {
        "prefix": "tag+deerantler",
        "body": "\"deerantler\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:charged": {
        "prefix": "tag+charged",
        "body": "\"charged\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:knight": {
        "prefix": "tag+knight",
        "body": "\"knight\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:flotsam": {
        "prefix": "tag+flotsam",
        "body": "\"flotsam\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:alignwall": {
        "prefix": "tag+alignwall",
        "body": "\"alignwall\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:madsciencelab": {
        "prefix": "tag+madsciencelab",
        "body": "\"madsciencelab\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:wagstafftool": {
        "prefix": "tag+wagstafftool",
        "body": "\"wagstafftool\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:bananabush": {
        "prefix": "tag+bananabush",
        "body": "\"bananabush\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:peck_attack": {
        "prefix": "tag+peck_attack",
        "body": "\"peck_attack\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:ghostlyelixir": {
        "prefix": "tag+ghostlyelixir",
        "body": "\"ghostlyelixir\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:cursed": {
        "prefix": "tag+cursed",
        "body": "\"cursed\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:portableitem": {
        "prefix": "tag+portableitem",
        "body": "\"portableitem\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:wolfgang_coach": {
        "prefix": "tag+wolfgang_coach",
        "body": "\"wolfgang_coach\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:noattack": {
        "prefix": "tag+noattack",
        "body": "\"noattack\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:fertilizable": {
        "prefix": "tag+fertilizable",
        "body": "\"fertilizable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:battleborn_repairable": {
        "prefix": "tag+battleborn_repairable",
        "body": "\"battleborn_repairable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:guard": {
        "prefix": "tag+guard",
        "body": "\"guard\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:magicweapon": {
        "prefix": "tag+magicweapon",
        "body": "\"magicweapon\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:archive_switch": {
        "prefix": "tag+archive_switch",
        "body": "\"archive_switch\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:useabletargeteditem_inventorydisable": {
        "prefix": "tag+useabletargeteditem_inventorydisable",
        "body": "\"useabletargeteditem_inventorydisable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:playermonster": {
        "prefix": "tag+playermonster",
        "body": "\"playermonster\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:battlestandard": {
        "prefix": "tag+battlestandard",
        "body": "\"battlestandard\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:moon_device": {
        "prefix": "tag+moon_device",
        "body": "\"moon_device\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:bookbuilder": {
        "prefix": "tag+bookbuilder",
        "body": "\"bookbuilder\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:battlehelm": {
        "prefix": "tag+battlehelm",
        "body": "\"battlehelm\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:antlion_sinkhole": {
        "prefix": "tag+antlion_sinkhole",
        "body": "\"antlion_sinkhole\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:farm_debris": {
        "prefix": "tag+farm_debris",
        "body": "\"farm_debris\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:waxedplant": {
        "prefix": "tag+waxedplant",
        "body": "\"waxedplant\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:sporecloud": {
        "prefix": "tag+sporecloud",
        "body": "\"sporecloud\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:turnedoff": {
        "prefix": "tag+turnedoff",
        "body": "\"turnedoff\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:mermguard": {
        "prefix": "tag+mermguard",
        "body": "\"mermguard\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:quagmire_stewer": {
        "prefix": "tag+quagmire_stewer",
        "body": "\"quagmire_stewer\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:carnivallamp": {
        "prefix": "tag+carnivallamp",
        "body": "\"carnivallamp\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:lunarminion": {
        "prefix": "tag+lunarminion",
        "body": "\"lunarminion\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:quagmire_stewable": {
        "prefix": "tag+quagmire_stewable",
        "body": "\"quagmire_stewable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:winchtarget": {
        "prefix": "tag+winchtarget",
        "body": "\"winchtarget\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:veggie": {
        "prefix": "tag+veggie",
        "body": "\"veggie\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:archive_lockbox": {
        "prefix": "tag+archive_lockbox",
        "body": "\"archive_lockbox\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:CLASSIFIED": {
        "prefix": "tag+CLASSIFIED",
        "body": "\"CLASSIFIED\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:archive_centipede": {
        "prefix": "tag+archive_centipede",
        "body": "\"archive_centipede\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:renewable": {
        "prefix": "tag+renewable",
        "body": "\"renewable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:_sheltered": {
        "prefix": "tag+_sheltered",
        "body": "\"_sheltered\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:gym": {
        "prefix": "tag+gym",
        "body": "\"gym\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:edible_VEGGIE:": {
        "prefix": "tag+edible_VEGGIE",
        "body": "\"edible_VEGGIE\"",
        "description": " ※Name: \n ※Class: 物品 | Inventory Item\n ※Description: 蔬菜标签，还有其他同类型的标签 'edible_'..xxx\n ※Contributor: \n "
    },
    "tag:globalmapicon": {
        "prefix": "tag+globalmapicon",
        "body": "\"globalmapicon\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:lightningblocker": {
        "prefix": "tag+lightningblocker",
        "body": "\"lightningblocker\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:sugarwoodtree": {
        "prefix": "tag+sugarwoodtree",
        "body": "\"sugarwoodtree\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:basicengineer": {
        "prefix": "tag+basicengineer",
        "body": "\"basicengineer\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:hungrybuilder": {
        "prefix": "tag+hungrybuilder",
        "body": "\"hungrybuilder\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:campfire": {
        "prefix": "tag+campfire",
        "body": "\"campfire\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:oceanfishing_bobber": {
        "prefix": "tag+oceanfishing_bobber",
        "body": "\"oceanfishing_bobber\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:forcefield": {
        "prefix": "tag+forcefield",
        "body": "\"forcefield\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:beaverchewable": {
        "prefix": "tag+beaverchewable",
        "body": "\"beaverchewable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:quagmire_casseroledish": {
        "prefix": "tag+quagmire_casseroledish",
        "body": "\"quagmire_casseroledish\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:activatable_forcenopickup": {
        "prefix": "tag+activatable_forcenopickup",
        "body": "\"activatable_forcenopickup\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:lightrays": {
        "prefix": "tag+lightrays",
        "body": "\"lightrays\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:has_beard": {
        "prefix": "tag+has_beard",
        "body": "\"has_beard\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:_hunger": {
        "prefix": "tag+_hunger",
        "body": "\"_hunger\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:shadecanopysmall": {
        "prefix": "tag+shadecanopysmall",
        "body": "\"shadecanopysmall\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:smolder": {
        "prefix": "tag+smolder",
        "body": "\"smolder\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:debugnoattack": {
        "prefix": "tag+debugnoattack",
        "body": "\"debugnoattack\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:heavyarmor": {
        "prefix": "tag+heavyarmor",
        "body": "\"heavyarmor\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:cannotmurder": {
        "prefix": "tag+cannotmurder",
        "body": "\"cannotmurder\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:handyperson:手巧的人": {
        "prefix": "tag+handyperson",
        "body": "\"handyperson\"",
        "description": " ※Name: 手巧的人\n ※Class: 角色 | Character\n ※Description: 有这个就可以搓胶布? 猜的\n ※Contributor: lan\n "
    },
    "tag:object": {
        "prefix": "tag+object",
        "body": "\"object\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:lunarhailprotection": {
        "prefix": "tag+lunarhailprotection",
        "body": "\"lunarhailprotection\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:engineeringbatterypowered": {
        "prefix": "tag+engineeringbatterypowered",
        "body": "\"engineeringbatterypowered\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:daywalker_pillar": {
        "prefix": "tag+daywalker_pillar",
        "body": "\"daywalker_pillar\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:fastpicker": {
        "prefix": "tag+fastpicker",
        "body": "\"fastpicker\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:spicedfood": {
        "prefix": "tag+spicedfood",
        "body": "\"spicedfood\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:readytocook": {
        "prefix": "tag+readytocook",
        "body": "\"readytocook\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:waterproofer": {
        "prefix": "tag+waterproofer",
        "body": "\"waterproofer\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:notreadyforharvest": {
        "prefix": "tag+notreadyforharvest",
        "body": "\"notreadyforharvest\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:cattoy": {
        "prefix": "tag+cattoy",
        "body": "\"cattoy\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:decortable": {
        "prefix": "tag+decortable",
        "body": "\"decortable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:archive_orchestrina_main": {
        "prefix": "tag+archive_orchestrina_main",
        "body": "\"archive_orchestrina_main\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:teleporter": {
        "prefix": "tag+teleporter",
        "body": "\"teleporter\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:quagmire_saltable": {
        "prefix": "tag+quagmire_saltable",
        "body": "\"quagmire_saltable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:aoeblowdart_long": {
        "prefix": "tag+aoeblowdart_long",
        "body": "\"aoeblowdart_long\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:watersource": {
        "prefix": "tag+watersource",
        "body": "\"watersource\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:merm_npc": {
        "prefix": "tag+merm_npc",
        "body": "\"merm_npc\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:spiderden": {
        "prefix": "tag+spiderden",
        "body": "\"spiderden\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:readytosew": {
        "prefix": "tag+readytosew",
        "body": "\"readytosew\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:oceanfishable": {
        "prefix": "tag+oceanfishable",
        "body": "\"oceanfishable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:firefuellight": {
        "prefix": "tag+firefuellight",
        "body": "\"firefuellight\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:quake_on_charge": {
        "prefix": "tag+quake_on_charge",
        "body": "\"quake_on_charge\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:shadow_item:": {
        "prefix": "tag+shadow_item",
        "body": "\"shadow_item\"",
        "description": " ※Name: \n ※Class: 物品 | Inventory Item\n ※Description: 暗影装备。旺达可对其增伤，老麦和旺达可减免其降san效果。会被大月灵仇恨\n ※Contributor: \n "
    },
    "tag:ghostfriend_summoned": {
        "prefix": "tag+ghostfriend_summoned",
        "body": "\"ghostfriend_summoned\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:carnivaldecor": {
        "prefix": "tag+carnivaldecor",
        "body": "\"carnivaldecor\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:lunarthrall_plant_end": {
        "prefix": "tag+lunarthrall_plant_end",
        "body": "\"lunarthrall_plant_end\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:clockmaker": {
        "prefix": "tag+clockmaker",
        "body": "\"clockmaker\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:walkableplatform": {
        "prefix": "tag+walkableplatform",
        "body": "\"walkableplatform\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:scrapbook_page": {
        "prefix": "tag+scrapbook_page",
        "body": "\"scrapbook_page\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:saltbox_valid": {
        "prefix": "tag+saltbox_valid",
        "body": "\"saltbox_valid\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:okayforarena": {
        "prefix": "tag+okayforarena",
        "body": "\"okayforarena\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:repairer": {
        "prefix": "tag+repairer",
        "body": "\"repairer\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:farmplantfastpicker": {
        "prefix": "tag+farmplantfastpicker",
        "body": "\"farmplantfastpicker\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:wormholetrackericon": {
        "prefix": "tag+wormholetrackericon",
        "body": "\"wormholetrackericon\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:NPC_workable": {
        "prefix": "tag+NPC_workable",
        "body": "\"NPC_workable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:trawler_fish_escaped": {
        "prefix": "tag+trawler_fish_escaped",
        "body": "\"trawler_fish_escaped\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:lava": {
        "prefix": "tag+lava",
        "body": "\"lava\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:potion": {
        "prefix": "tag+potion",
        "body": "\"potion\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:fire_mastery_1": {
        "prefix": "tag+fire_mastery_1",
        "body": "\"fire_mastery_1\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:brushable": {
        "prefix": "tag+brushable",
        "body": "\"brushable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:beefaloshrine": {
        "prefix": "tag+beefaloshrine",
        "body": "\"beefaloshrine\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:deployedplant": {
        "prefix": "tag+deployedplant",
        "body": "\"deployedplant\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:noabandon": {
        "prefix": "tag+noabandon",
        "body": "\"noabandon\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:ruins": {
        "prefix": "tag+ruins",
        "body": "\"ruins\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:crabking_claw": {
        "prefix": "tag+crabking_claw",
        "body": "\"crabking_claw\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:corpse": {
        "prefix": "tag+corpse",
        "body": "\"corpse\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:marker_found": {
        "prefix": "tag+marker_found",
        "body": "\"marker_found\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:LA_mob": {
        "prefix": "tag+LA_mob",
        "body": "\"LA_mob\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:flare_summoned": {
        "prefix": "tag+flare_summoned",
        "body": "\"flare_summoned\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:power_point": {
        "prefix": "tag+power_point",
        "body": "\"power_point\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:monster": {
        "prefix": "tag+monster",
        "body": "\"monster\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:event_trigger": {
        "prefix": "tag+event_trigger",
        "body": "\"event_trigger\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:quagmire_fasthands": {
        "prefix": "tag+quagmire_fasthands",
        "body": "\"quagmire_fasthands\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:boat_accessory": {
        "prefix": "tag+boat_accessory",
        "body": "\"boat_accessory\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:playbill_lecturn": {
        "prefix": "tag+playbill_lecturn",
        "body": "\"playbill_lecturn\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:bird": {
        "prefix": "tag+bird",
        "body": "\"bird\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:shadowlevel": {
        "prefix": "tag+shadowlevel",
        "body": "\"shadowlevel\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:fedbyall": {
        "prefix": "tag+fedbyall",
        "body": "\"fedbyall\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:bathbomb": {
        "prefix": "tag+bathbomb",
        "body": "\"bathbomb\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:bedazzled": {
        "prefix": "tag+bedazzled",
        "body": "\"bedazzled\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:ghostlyelixirable": {
        "prefix": "tag+ghostlyelixirable",
        "body": "\"ghostlyelixirable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:carnival_plaza": {
        "prefix": "tag+carnival_plaza",
        "body": "\"carnival_plaza\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:candry": {
        "prefix": "tag+candry",
        "body": "\"candry\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:mushroom": {
        "prefix": "tag+mushroom",
        "body": "\"mushroom\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:scientist": {
        "prefix": "tag+scientist",
        "body": "\"scientist\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:prey:猎物？": {
        "prefix": "tag+prey",
        "body": "\"prey\"",
        "description": " ※Name: 猎物？\n ※Class: 实体 | Prefab\n ※Description: 发现于女武神获取灵感值的排除标签\n ※Contributor: \n "
    },
    "tag:race_on": {
        "prefix": "tag+race_on",
        "body": "\"race_on\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:pickable_rummage_str": {
        "prefix": "tag+pickable_rummage_str",
        "body": "\"pickable_rummage_str\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:bearger": {
        "prefix": "tag+bearger",
        "body": "\"bearger\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:eyeturret": {
        "prefix": "tag+eyeturret",
        "body": "\"eyeturret\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:bell": {
        "prefix": "tag+bell",
        "body": "\"bell\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:wildfirepriority": {
        "prefix": "tag+wildfirepriority",
        "body": "\"wildfirepriority\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:gargoyle": {
        "prefix": "tag+gargoyle",
        "body": "\"gargoyle\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:_named": {
        "prefix": "tag+_named",
        "body": "\"_named\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:ice_crack_fx": {
        "prefix": "tag+ice_crack_fx",
        "body": "\"ice_crack_fx\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:pillow": {
        "prefix": "tag+pillow",
        "body": "\"pillow\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:controlled_burner": {
        "prefix": "tag+controlled_burner",
        "body": "\"controlled_burner\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:band": {
        "prefix": "tag+band",
        "body": "\"band\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:limited_sitting": {
        "prefix": "tag+limited_sitting",
        "body": "\"limited_sitting\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:deciduoustree": {
        "prefix": "tag+deciduoustree",
        "body": "\"deciduoustree\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:harvestable": {
        "prefix": "tag+harvestable",
        "body": "\"harvestable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:houndfriend": {
        "prefix": "tag+houndfriend",
        "body": "\"houndfriend\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:icebox_valid": {
        "prefix": "tag+icebox_valid",
        "body": "\"icebox_valid\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:firepen": {
        "prefix": "tag+firepen",
        "body": "\"firepen\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:beefalo_doll": {
        "prefix": "tag+beefalo_doll",
        "body": "\"beefalo_doll\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:crab": {
        "prefix": "tag+crab",
        "body": "\"crab\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:nolight": {
        "prefix": "tag+nolight",
        "body": "\"nolight\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:stageactingprop": {
        "prefix": "tag+stageactingprop",
        "body": "\"stageactingprop\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:keep_equip_toss": {
        "prefix": "tag+keep_equip_toss",
        "body": "\"keep_equip_toss\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:aoeweapon_lunge": {
        "prefix": "tag+aoeweapon_lunge",
        "body": "\"aoeweapon_lunge\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:battleshield": {
        "prefix": "tag+battleshield",
        "body": "\"battleshield\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:castonlocomotorspvp": {
        "prefix": "tag+castonlocomotorspvp",
        "body": "\"castonlocomotorspvp\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:hitcher": {
        "prefix": "tag+hitcher",
        "body": "\"hitcher\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:birchnutdrake": {
        "prefix": "tag+birchnutdrake",
        "body": "\"birchnutdrake\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:king": {
        "prefix": "tag+king",
        "body": "\"king\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:nightmaretracker": {
        "prefix": "tag+nightmaretracker",
        "body": "\"nightmaretracker\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:dreadstone": {
        "prefix": "tag+dreadstone",
        "body": "\"dreadstone\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:_combat": {
        "prefix": "tag+_combat",
        "body": "\"_combat\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:yotc_racecheckpoint": {
        "prefix": "tag+yotc_racecheckpoint",
        "body": "\"yotc_racecheckpoint\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:fishschoolspawnblocker": {
        "prefix": "tag+fishschoolspawnblocker",
        "body": "\"fishschoolspawnblocker\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:NPCcanaggro": {
        "prefix": "tag+NPCcanaggro",
        "body": "\"NPCcanaggro\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:cursed_inventory_item": {
        "prefix": "tag+cursed_inventory_item",
        "body": "\"cursed_inventory_item\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:shadowminion:疑似暗影仆从": {
        "prefix": "tag+shadowminion",
        "body": "\"shadowminion\"",
        "description": " ※Name: 疑似暗影仆从\n ※Class: 实体 | Prefab\n ※Description: \n ※Contributor: \n "
    },
    "tag:trap_vines": {
        "prefix": "tag+trap_vines",
        "body": "\"trap_vines\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:applied_curse": {
        "prefix": "tag+applied_curse",
        "body": "\"applied_curse\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:hibernation": {
        "prefix": "tag+hibernation",
        "body": "\"hibernation\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:glommerflower": {
        "prefix": "tag+glommerflower",
        "body": "\"glommerflower\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:shadowsubmissive": {
        "prefix": "tag+shadowsubmissive",
        "body": "\"shadowsubmissive\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:spawnprotection": {
        "prefix": "tag+spawnprotection",
        "body": "\"spawnprotection\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:otter": {
        "prefix": "tag+otter",
        "body": "\"otter\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:oversized_veggie:": {
        "prefix": "tag+oversized_veggie",
        "body": "\"oversized_veggie\"",
        "description": " ※Name: \n ※Class: 实体 | Prefab\n ※Description: 超大的蔬菜\n ※Contributor: \n "
    },
    "tag:resonator_socket": {
        "prefix": "tag+resonator_socket",
        "body": "\"resonator_socket\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:moonportal": {
        "prefix": "tag+moonportal",
        "body": "\"moonportal\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:AIboat": {
        "prefix": "tag+AIboat",
        "body": "\"AIboat\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:fishmeat": {
        "prefix": "tag+fishmeat",
        "body": "\"fishmeat\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:toughworker": {
        "prefix": "tag+toughworker",
        "body": "\"toughworker\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:friendlyfruitfly": {
        "prefix": "tag+friendlyfruitfly",
        "body": "\"friendlyfruitfly\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:INLIMBO:": {
        "prefix": "tag+INLIMBO",
        "body": "\"INLIMBO\"",
        "description": " ※Name: \n ※Class: 物品 | Inventory Item\n ※Description: 在库存中的物品 （FindEntity时建议筛掉这个标签的物品）\n ※Contributor: lan\n "
    },
    "tag:allergictobees:": {
        "prefix": "tag+allergictobees",
        "body": "\"allergictobees\"",
        "description": " ※Name: \n ※Class: 角色 | Character\n ※Description: 对蜜蜂过敏，受到带有蜜蜂标签的生物攻击额外受到10点伤害\n ※Contributor: \n "
    },
    "tag:groggy": {
        "prefix": "tag+groggy",
        "body": "\"groggy\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:bodypillow": {
        "prefix": "tag+bodypillow",
        "body": "\"bodypillow\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:inspectacleshatuser": {
        "prefix": "tag+inspectacleshatuser",
        "body": "\"inspectacleshatuser\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:shadowlure": {
        "prefix": "tag+shadowlure",
        "body": "\"shadowlure\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:catchable": {
        "prefix": "tag+catchable",
        "body": "\"catchable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:prechop": {
        "prefix": "tag+prechop",
        "body": "\"prechop\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:rocky": {
        "prefix": "tag+rocky",
        "body": "\"rocky\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:boatbuilder": {
        "prefix": "tag+boatbuilder",
        "body": "\"boatbuilder\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:hangingvine": {
        "prefix": "tag+hangingvine",
        "body": "\"hangingvine\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:guitar": {
        "prefix": "tag+guitar",
        "body": "\"guitar\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:asleep": {
        "prefix": "tag+asleep",
        "body": "\"asleep\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:grabbable": {
        "prefix": "tag+grabbable",
        "body": "\"grabbable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:blocker": {
        "prefix": "tag+blocker",
        "body": "\"blocker\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:simplebook": {
        "prefix": "tag+simplebook",
        "body": "\"simplebook\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:sketch": {
        "prefix": "tag+sketch",
        "body": "\"sketch\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:whistle": {
        "prefix": "tag+whistle",
        "body": "\"whistle\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:nointerpolate": {
        "prefix": "tag+nointerpolate",
        "body": "\"nointerpolate\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:door": {
        "prefix": "tag+door",
        "body": "\"door\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:usingmagiciantool_wasequipped": {
        "prefix": "tag+usingmagiciantool_wasequipped",
        "body": "\"usingmagiciantool_wasequipped\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:pigshrine": {
        "prefix": "tag+pigshrine",
        "body": "\"pigshrine\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:lightningtarget": {
        "prefix": "tag+lightningtarget",
        "body": "\"lightningtarget\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:fx": {
        "prefix": "tag+fx",
        "body": "\"fx\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:bird_mutant": {
        "prefix": "tag+bird_mutant",
        "body": "\"bird_mutant\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:baby": {
        "prefix": "tag+baby",
        "body": "\"baby\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:cannotuse": {
        "prefix": "tag+cannotuse",
        "body": "\"cannotuse\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:burnableignorefuel": {
        "prefix": "tag+burnableignorefuel",
        "body": "\"burnableignorefuel\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:cannontower": {
        "prefix": "tag+cannontower",
        "body": "\"cannontower\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:monkeyqueen": {
        "prefix": "tag+monkeyqueen",
        "body": "\"monkeyqueen\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:UI": {
        "prefix": "tag+UI",
        "body": "\"UI\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:lunar_aligned": {
        "prefix": "tag+lunar_aligned",
        "body": "\"lunar_aligned\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:leif": {
        "prefix": "tag+leif",
        "body": "\"leif\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:teleportato": {
        "prefix": "tag+teleportato",
        "body": "\"teleportato\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:dangerouscooker": {
        "prefix": "tag+dangerouscooker",
        "body": "\"dangerouscooker\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:character": {
        "prefix": "tag+character",
        "body": "\"character\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:canary": {
        "prefix": "tag+canary",
        "body": "\"canary\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:canbeslaughtered": {
        "prefix": "tag+canbeslaughtered",
        "body": "\"canbeslaughtered\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:shadowthrall": {
        "prefix": "tag+shadowthrall",
        "body": "\"shadowthrall\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:merm_builder": {
        "prefix": "tag+merm_builder",
        "body": "\"merm_builder\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:fruitflyfruit": {
        "prefix": "tag+fruitflyfruit",
        "body": "\"fruitflyfruit\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:migrator": {
        "prefix": "tag+migrator",
        "body": "\"migrator\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:dryable": {
        "prefix": "tag+dryable",
        "body": "\"dryable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:interactable": {
        "prefix": "tag+interactable",
        "body": "\"interactable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:sign": {
        "prefix": "tag+sign",
        "body": "\"sign\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:mushroomsprout": {
        "prefix": "tag+mushroomsprout",
        "body": "\"mushroomsprout\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:mermonly": {
        "prefix": "tag+mermonly",
        "body": "\"mermonly\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:anchor_transitioning": {
        "prefix": "tag+anchor_transitioning",
        "body": "\"anchor_transitioning\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:moonstorm_static": {
        "prefix": "tag+moonstorm_static",
        "body": "\"moonstorm_static\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:trap_bramble": {
        "prefix": "tag+trap_bramble",
        "body": "\"trap_bramble\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:woodcutter": {
        "prefix": "tag+woodcutter",
        "body": "\"woodcutter\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:beard_sack_1": {
        "prefix": "tag+beard_sack_1",
        "body": "\"beard_sack_1\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:extinguisher": {
        "prefix": "tag+extinguisher",
        "body": "\"extinguisher\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:trawler_lowered": {
        "prefix": "tag+trawler_lowered",
        "body": "\"trawler_lowered\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:engineeringbatteryuser": {
        "prefix": "tag+engineeringbatteryuser",
        "body": "\"engineeringbatteryuser\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:anchor_raised": {
        "prefix": "tag+anchor_raised",
        "body": "\"anchor_raised\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:nightvision": {
        "prefix": "tag+nightvision",
        "body": "\"nightvision\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:wereness": {
        "prefix": "tag+wereness",
        "body": "\"wereness\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:quagmire_potmaster": {
        "prefix": "tag+quagmire_potmaster",
        "body": "\"quagmire_potmaster\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:firestaff": {
        "prefix": "tag+firestaff",
        "body": "\"firestaff\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:__combat": {
        "prefix": "tag+__combat",
        "body": "\"__combat\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:electricdamageimmune": {
        "prefix": "tag+electricdamageimmune",
        "body": "\"electricdamageimmune\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:bush": {
        "prefix": "tag+bush",
        "body": "\"bush\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:nocool": {
        "prefix": "tag+nocool",
        "body": "\"nocool\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:strongstomach": {
        "prefix": "tag+strongstomach",
        "body": "\"strongstomach\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:occupied": {
        "prefix": "tag+occupied",
        "body": "\"occupied\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:sailraised": {
        "prefix": "tag+sailraised",
        "body": "\"sailraised\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:domesticatable": {
        "prefix": "tag+domesticatable",
        "body": "\"domesticatable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:nowormholesanityloss:": {
        "prefix": "tag+nowormholesanityloss",
        "body": "\"nowormholesanityloss\"",
        "description": " ※Name: \n ※Class: 角色 | Character\n ※Description: 穿越虫洞不会掉san\n ※Contributor: \n "
    },
    "tag:farm_plant_killjoy:": {
        "prefix": "tag+farm_plant_killjoy",
        "body": "\"farm_plant_killjoy\"",
        "description": " ※Name: \n ※Class: 实体 | Prefab\n ※Description: 腐败植物\n ※Contributor: \n "
    },
    "tag:shadow_fire": {
        "prefix": "tag+shadow_fire",
        "body": "\"shadow_fire\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:wolfgang_overbuff_2": {
        "prefix": "tag+wolfgang_overbuff_2",
        "body": "\"wolfgang_overbuff_2\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:oceanfishinghookable": {
        "prefix": "tag+oceanfishinghookable",
        "body": "\"oceanfishinghookable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:drop_inventory_onmurder": {
        "prefix": "tag+drop_inventory_onmurder",
        "body": "\"drop_inventory_onmurder\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:pocketwatchcaster": {
        "prefix": "tag+pocketwatchcaster",
        "body": "\"pocketwatchcaster\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:boatmagnetbeacon": {
        "prefix": "tag+boatmagnetbeacon",
        "body": "\"boatmagnetbeacon\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:offering_pot": {
        "prefix": "tag+offering_pot",
        "body": "\"offering_pot\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:herd": {
        "prefix": "tag+herd",
        "body": "\"herd\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:compass": {
        "prefix": "tag+compass",
        "body": "\"compass\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:sewingmachine": {
        "prefix": "tag+sewingmachine",
        "body": "\"sewingmachine\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:charge_barrier": {
        "prefix": "tag+charge_barrier",
        "body": "\"charge_barrier\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:rechargeable": {
        "prefix": "tag+rechargeable",
        "body": "\"rechargeable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:bigbernie": {
        "prefix": "tag+bigbernie",
        "body": "\"bigbernie\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:nightmare": {
        "prefix": "tag+nightmare",
        "body": "\"nightmare\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:NOCLICK:": {
        "prefix": "tag+NOCLICK",
        "body": "\"NOCLICK\"",
        "description": " ※Name: \n ※Class: 特效 | Fx\n ※Description: 不可被点击，常用于特效\n ※Contributor: \n "
    },
    "tag:hermitcrab_lure_marker": {
        "prefix": "tag+hermitcrab_lure_marker",
        "body": "\"hermitcrab_lure_marker\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:spoiled": {
        "prefix": "tag+spoiled",
        "body": "\"spoiled\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:trader": {
        "prefix": "tag+trader",
        "body": "\"trader\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:pickable:": {
        "prefix": "tag+pickable",
        "body": "\"pickable\"",
        "description": " ※Name: \n ※Class: 通用 | Universal\n ※Description: 可采集的\n ※Contributor: \n "
    },
    "tag:aspiring_bookworm": {
        "prefix": "tag+aspiring_bookworm",
        "body": "\"aspiring_bookworm\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:moonsparkchargeable": {
        "prefix": "tag+moonsparkchargeable",
        "body": "\"moonsparkchargeable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:whip": {
        "prefix": "tag+whip",
        "body": "\"whip\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:oceanvine": {
        "prefix": "tag+oceanvine",
        "body": "\"oceanvine\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:activatable_forceright": {
        "prefix": "tag+activatable_forceright",
        "body": "\"activatable_forceright\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:dockjammer": {
        "prefix": "tag+dockjammer",
        "body": "\"dockjammer\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:blowpipe": {
        "prefix": "tag+blowpipe",
        "body": "\"blowpipe\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:oceanshoalspawner": {
        "prefix": "tag+oceanshoalspawner",
        "body": "\"oceanshoalspawner\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:__health": {
        "prefix": "tag+__health",
        "body": "\"__health\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:channeling": {
        "prefix": "tag+channeling",
        "body": "\"channeling\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:cattoyairborne": {
        "prefix": "tag+cattoyairborne",
        "body": "\"cattoyairborne\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:shadow:影子": {
        "prefix": "tag+shadow",
        "body": "\"shadow\"",
        "description": " ※Name: 影子\n ※Class: 生物 | Mobs\n ※Description: 影子生物。区别于暗影生物和梦魇生物。注意这三个类别有所重合但不等同！\n ※Contributor: \n "
    },
    "tag:open_top_hat": {
        "prefix": "tag+open_top_hat",
        "body": "\"open_top_hat\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:fishingrod": {
        "prefix": "tag+fishingrod",
        "body": "\"fishingrod\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:steeringboat": {
        "prefix": "tag+steeringboat",
        "body": "\"steeringboat\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:deerspawningground": {
        "prefix": "tag+deerspawningground",
        "body": "\"deerspawningground\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:preparedfood": {
        "prefix": "tag+preparedfood",
        "body": "\"preparedfood\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:wall:墙": {
        "prefix": "tag+wall",
        "body": "\"wall\"",
        "description": " ※Name: 墙\n ※Class: 建筑 | Structure\n ※Description: 属于墙体\n ※Contributor: \n "
    },
    "tag:hedgespawner": {
        "prefix": "tag+hedgespawner",
        "body": "\"hedgespawner\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:boat_health_buffer": {
        "prefix": "tag+boat_health_buffer",
        "body": "\"boat_health_buffer\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:hostile": {
        "prefix": "tag+hostile",
        "body": "\"hostile\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:nobundling": {
        "prefix": "tag+nobundling",
        "body": "\"nobundling\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:catcoonshrine": {
        "prefix": "tag+catcoonshrine",
        "body": "\"catcoonshrine\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:absorbpoison": {
        "prefix": "tag+absorbpoison",
        "body": "\"absorbpoison\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:lordfruitflytrigger": {
        "prefix": "tag+lordfruitflytrigger",
        "body": "\"lordfruitflytrigger\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:nomusic": {
        "prefix": "tag+nomusic",
        "body": "\"nomusic\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:boatrace_proximitybeacon": {
        "prefix": "tag+boatrace_proximitybeacon",
        "body": "\"boatrace_proximitybeacon\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:canlight": {
        "prefix": "tag+canlight",
        "body": "\"canlight\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:malbatross": {
        "prefix": "tag+malbatross",
        "body": "\"malbatross\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:stunnedbybomb": {
        "prefix": "tag+stunnedbybomb",
        "body": "\"stunnedbybomb\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:playerghost": {
        "prefix": "tag+playerghost",
        "body": "\"playerghost\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:tentacle_pillar": {
        "prefix": "tag+tentacle_pillar",
        "body": "\"tentacle_pillar\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:boatbumper": {
        "prefix": "tag+boatbumper",
        "body": "\"boatbumper\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:hide": {
        "prefix": "tag+hide",
        "body": "\"hide\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:junk_pile_big": {
        "prefix": "tag+junk_pile_big",
        "body": "\"junk_pile_big\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:shadowhand": {
        "prefix": "tag+shadowhand",
        "body": "\"shadowhand\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:yotb_contestenabled": {
        "prefix": "tag+yotb_contestenabled",
        "body": "\"yotb_contestenabled\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:pebblemaker:": {
        "prefix": "tag+pebblemaker",
        "body": "\"pebblemaker\"",
        "description": " ※Name: \n ※Class: 角色 | Character\n ※Description: 可以制作沃尔特弹弓子弹\n ※Contributor: \n "
    },
    "tag:angry_when_rowed": {
        "prefix": "tag+angry_when_rowed",
        "body": "\"angry_when_rowed\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:shadowcreature": {
        "prefix": "tag+shadowcreature",
        "body": "\"shadowcreature\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:prehammer": {
        "prefix": "tag+prehammer",
        "body": "\"prehammer\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:remotecontrol": {
        "prefix": "tag+remotecontrol",
        "body": "\"remotecontrol\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:grassgekko": {
        "prefix": "tag+grassgekko",
        "body": "\"grassgekko\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:plantresearchable": {
        "prefix": "tag+plantresearchable",
        "body": "\"plantresearchable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:oceanfish": {
        "prefix": "tag+oceanfish",
        "body": "\"oceanfish\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:hutch_fishbowl": {
        "prefix": "tag+hutch_fishbowl",
        "body": "\"hutch_fishbowl\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:balloonomancer": {
        "prefix": "tag+balloonomancer",
        "body": "\"balloonomancer\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:lifedrainable": {
        "prefix": "tag+lifedrainable",
        "body": "\"lifedrainable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:crabking_spawner": {
        "prefix": "tag+crabking_spawner",
        "body": "\"crabking_spawner\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:eyeofterror": {
        "prefix": "tag+eyeofterror",
        "body": "\"eyeofterror\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:recall_unmarked": {
        "prefix": "tag+recall_unmarked",
        "body": "\"recall_unmarked\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:MONKEY_CURSE_3": {
        "prefix": "tag+MONKEY_CURSE_3",
        "body": "\"MONKEY_CURSE_3\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:canbestartled": {
        "prefix": "tag+canbestartled",
        "body": "\"canbestartled\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:spiderwhisperer": {
        "prefix": "tag+spiderwhisperer",
        "body": "\"spiderwhisperer\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:carnival_prizebooth": {
        "prefix": "tag+carnival_prizebooth",
        "body": "\"carnival_prizebooth\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:turnedon": {
        "prefix": "tag+turnedon",
        "body": "\"turnedon\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:inventoryitemholder_give": {
        "prefix": "tag+inventoryitemholder_give",
        "body": "\"inventoryitemholder_give\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:chest": {
        "prefix": "tag+chest",
        "body": "\"chest\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:inherentshadowdominance": {
        "prefix": "tag+inherentshadowdominance",
        "body": "\"inherentshadowdominance\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:blowdart": {
        "prefix": "tag+blowdart",
        "body": "\"blowdart\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:_sanity": {
        "prefix": "tag+_sanity",
        "body": "\"_sanity\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:lureplant_bait": {
        "prefix": "tag+lureplant_bait",
        "body": "\"lureplant_bait\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:quagmire_wildplant": {
        "prefix": "tag+quagmire_wildplant",
        "body": "\"quagmire_wildplant\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:cutgrass": {
        "prefix": "tag+cutgrass",
        "body": "\"cutgrass\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:noplayertarget": {
        "prefix": "tag+noplayertarget",
        "body": "\"noplayertarget\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:tool": {
        "prefix": "tag+tool",
        "body": "\"tool\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:pickable_harvest_str": {
        "prefix": "tag+pickable_harvest_str",
        "body": "\"pickable_harvest_str\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:shadow_aligned": {
        "prefix": "tag+shadow_aligned",
        "body": "\"shadow_aligned\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:infertile": {
        "prefix": "tag+infertile",
        "body": "\"infertile\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:inspectaclesvision": {
        "prefix": "tag+inspectaclesvision",
        "body": "\"inspectaclesvision\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:is_rowing": {
        "prefix": "tag+is_rowing",
        "body": "\"is_rowing\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:overcooked": {
        "prefix": "tag+overcooked",
        "body": "\"overcooked\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:fishing_idle": {
        "prefix": "tag+fishing_idle",
        "body": "\"fishing_idle\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:lichen": {
        "prefix": "tag+lichen",
        "body": "\"lichen\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:blowpipeammo": {
        "prefix": "tag+blowpipeammo",
        "body": "\"blowpipeammo\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:spoiler": {
        "prefix": "tag+spoiler",
        "body": "\"spoiler\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:horn": {
        "prefix": "tag+horn",
        "body": "\"horn\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:blueflame": {
        "prefix": "tag+blueflame",
        "body": "\"blueflame\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:moon_tree": {
        "prefix": "tag+moon_tree",
        "body": "\"moon_tree\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:noember": {
        "prefix": "tag+noember",
        "body": "\"noember\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:widget": {
        "prefix": "tag+widget",
        "body": "\"widget\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:engineering": {
        "prefix": "tag+engineering",
        "body": "\"engineering\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:fastbuilder:快速制作": {
        "prefix": "tag+fastbuilder",
        "body": "\"fastbuilder\"",
        "description": " ※Name: 快速制作\n ※Class: 角色 | Character\n ※Description: 有这个就可以快速制作和建造\n ※Contributor: lan\n "
    },
    "tag:boatcannon_ammo": {
        "prefix": "tag+boatcannon_ammo",
        "body": "\"boatcannon_ammo\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:NOBLOCK:": {
        "prefix": "tag+NOBLOCK",
        "body": "\"NOBLOCK\"",
        "description": " ※Name: \n ※Class: 特效 | Fx\n ※Description: 不占三维空间（不影响建筑物摆放和种植），常用于特效\n ※Contributor: \n "
    },
    "tag:tappable": {
        "prefix": "tag+tappable",
        "body": "\"tappable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:elemental": {
        "prefix": "tag+elemental",
        "body": "\"elemental\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:complexprojectile_showoceanaction": {
        "prefix": "tag+complexprojectile_showoceanaction",
        "body": "\"complexprojectile_showoceanaction\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:deer_fire_circle": {
        "prefix": "tag+deer_fire_circle",
        "body": "\"deer_fire_circle\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:insomniac": {
        "prefix": "tag+insomniac",
        "body": "\"insomniac\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:fence": {
        "prefix": "tag+fence",
        "body": "\"fence\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:finiteusesrepairable": {
        "prefix": "tag+finiteusesrepairable",
        "body": "\"finiteusesrepairable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:shadowdominance": {
        "prefix": "tag+shadowdominance",
        "body": "\"shadowdominance\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:carnivalgame_herding_station": {
        "prefix": "tag+carnivalgame_herding_station",
        "body": "\"carnivalgame_herding_station\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:snuffed": {
        "prefix": "tag+snuffed",
        "body": "\"snuffed\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:aoeweapon_leap": {
        "prefix": "tag+aoeweapon_leap",
        "body": "\"aoeweapon_leap\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:weed_forgetmelots_respawner": {
        "prefix": "tag+weed_forgetmelots_respawner",
        "body": "\"weed_forgetmelots_respawner\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:confetti_cloud": {
        "prefix": "tag+confetti_cloud",
        "body": "\"confetti_cloud\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:broken": {
        "prefix": "tag+broken",
        "body": "\"broken\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:gestalt_possessable": {
        "prefix": "tag+gestalt_possessable",
        "body": "\"gestalt_possessable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:stargate": {
        "prefix": "tag+stargate",
        "body": "\"stargate\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:critter": {
        "prefix": "tag+critter",
        "body": "\"critter\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:stage": {
        "prefix": "tag+stage",
        "body": "\"stage\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:penguin_egg": {
        "prefix": "tag+penguin_egg",
        "body": "\"penguin_egg\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:boat_repaired_patch": {
        "prefix": "tag+boat_repaired_patch",
        "body": "\"boat_repaired_patch\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:maxwell": {
        "prefix": "tag+maxwell",
        "body": "\"maxwell\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:junk": {
        "prefix": "tag+junk",
        "body": "\"junk\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:heavy": {
        "prefix": "tag+heavy",
        "body": "\"heavy\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:allow_action_on_impassable": {
        "prefix": "tag+allow_action_on_impassable",
        "body": "\"allow_action_on_impassable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:battery": {
        "prefix": "tag+battery",
        "body": "\"battery\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:minotaur": {
        "prefix": "tag+minotaur",
        "body": "\"minotaur\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:standingactivation": {
        "prefix": "tag+standingactivation",
        "body": "\"standingactivation\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:stageusher": {
        "prefix": "tag+stageusher",
        "body": "\"stageusher\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:entityproxy": {
        "prefix": "tag+entityproxy",
        "body": "\"entityproxy\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:anchor_lowered": {
        "prefix": "tag+anchor_lowered",
        "body": "\"anchor_lowered\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:writeable": {
        "prefix": "tag+writeable",
        "body": "\"writeable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:crabking_icewall": {
        "prefix": "tag+crabking_icewall",
        "body": "\"crabking_icewall\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:plantkin:": {
        "prefix": "tag+plantkin",
        "body": "\"plantkin\"",
        "description": " ※Name: \n ※Class: 通用 | Universal\n ※Description: 不会被杂草困住\n ※Contributor: \n "
    },
    "tag:shelter": {
        "prefix": "tag+shelter",
        "body": "\"shelter\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:dirtpile": {
        "prefix": "tag+dirtpile",
        "body": "\"dirtpile\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:bone": {
        "prefix": "tag+bone",
        "body": "\"bone\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:heatresistant": {
        "prefix": "tag+heatresistant",
        "body": "\"heatresistant\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:groundtile": {
        "prefix": "tag+groundtile",
        "body": "\"groundtile\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:mermbuffcast": {
        "prefix": "tag+mermbuffcast",
        "body": "\"mermbuffcast\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:flower": {
        "prefix": "tag+flower",
        "body": "\"flower\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:walking": {
        "prefix": "tag+walking",
        "body": "\"walking\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:trap": {
        "prefix": "tag+trap",
        "body": "\"trap\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:hide_percentage:": {
        "prefix": "tag+hide_percentage",
        "body": "\"hide_percentage\"",
        "description": " ※Name: \n ※Class: 物品 | Inventory Item\n ※Description: 隐藏物品的耐久度显示\n ※Contributor: \n "
    },
    "tag:quagmire_foodie": {
        "prefix": "tag+quagmire_foodie",
        "body": "\"quagmire_foodie\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:decoratable": {
        "prefix": "tag+decoratable",
        "body": "\"decoratable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:hound_summoner": {
        "prefix": "tag+hound_summoner",
        "body": "\"hound_summoner\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:pyromaniac": {
        "prefix": "tag+pyromaniac",
        "body": "\"pyromaniac\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:usesdepleted": {
        "prefix": "tag+usesdepleted",
        "body": "\"usesdepleted\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:action_pulls_up_map": {
        "prefix": "tag+action_pulls_up_map",
        "body": "\"action_pulls_up_map\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:alltrader": {
        "prefix": "tag+alltrader",
        "body": "\"alltrader\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:birchnutroot": {
        "prefix": "tag+birchnutroot",
        "body": "\"birchnutroot\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:gnarwail": {
        "prefix": "tag+gnarwail",
        "body": "\"gnarwail\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:yotb_stage": {
        "prefix": "tag+yotb_stage",
        "body": "\"yotb_stage\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:possessable_axe": {
        "prefix": "tag+possessable_axe",
        "body": "\"possessable_axe\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:book": {
        "prefix": "tag+book",
        "body": "\"book\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:bearded": {
        "prefix": "tag+bearded",
        "body": "\"bearded\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:dried": {
        "prefix": "tag+dried",
        "body": "\"dried\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:pet_hound": {
        "prefix": "tag+pet_hound",
        "body": "\"pet_hound\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:beebox": {
        "prefix": "tag+beebox",
        "body": "\"beebox\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:maprevealer": {
        "prefix": "tag+maprevealer",
        "body": "\"maprevealer\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:antlion_sinkhole_blocker": {
        "prefix": "tag+antlion_sinkhole_blocker",
        "body": "\"antlion_sinkhole_blocker\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:_rider": {
        "prefix": "tag+_rider",
        "body": "\"_rider\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:toolpunch": {
        "prefix": "tag+toolpunch",
        "body": "\"toolpunch\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:saddled": {
        "prefix": "tag+saddled",
        "body": "\"saddled\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:junkmob": {
        "prefix": "tag+junkmob",
        "body": "\"junkmob\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:inuse_targeted": {
        "prefix": "tag+inuse_targeted",
        "body": "\"inuse_targeted\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:carnivalcannon": {
        "prefix": "tag+carnivalcannon",
        "body": "\"carnivalcannon\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:meltable": {
        "prefix": "tag+meltable",
        "body": "\"meltable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:saltbox": {
        "prefix": "tag+saltbox",
        "body": "\"saltbox\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:flying": {
        "prefix": "tag+flying",
        "body": "\"flying\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:groundtargetblocker": {
        "prefix": "tag+groundtargetblocker",
        "body": "\"groundtargetblocker\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:nocrafting": {
        "prefix": "tag+nocrafting",
        "body": "\"nocrafting\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:winter_tree": {
        "prefix": "tag+winter_tree",
        "body": "\"winter_tree\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:rangedweapon": {
        "prefix": "tag+rangedweapon",
        "body": "\"rangedweapon\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:FX": {
        "prefix": "tag+FX",
        "body": "\"FX\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:soulstealer": {
        "prefix": "tag+soulstealer",
        "body": "\"soulstealer\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:quagmire_replater": {
        "prefix": "tag+quagmire_replater",
        "body": "\"quagmire_replater\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:crabking_spellgenerator": {
        "prefix": "tag+crabking_spellgenerator",
        "body": "\"crabking_spellgenerator\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:bedazzleable": {
        "prefix": "tag+bedazzleable",
        "body": "\"bedazzleable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:peacefulmount": {
        "prefix": "tag+peacefulmount",
        "body": "\"peacefulmount\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:scarecrow": {
        "prefix": "tag+scarecrow",
        "body": "\"scarecrow\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:koalefant": {
        "prefix": "tag+koalefant",
        "body": "\"koalefant\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:oceantrawler": {
        "prefix": "tag+oceantrawler",
        "body": "\"oceantrawler\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:dragonfly": {
        "prefix": "tag+dragonfly",
        "body": "\"dragonfly\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:perdshrine": {
        "prefix": "tag+perdshrine",
        "body": "\"perdshrine\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:highfriendlevel": {
        "prefix": "tag+highfriendlevel",
        "body": "\"highfriendlevel\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:cancycle": {
        "prefix": "tag+cancycle",
        "body": "\"cancycle\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:irreplaceable": {
        "prefix": "tag+irreplaceable",
        "body": "\"irreplaceable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:boat_leak": {
        "prefix": "tag+boat_leak",
        "body": "\"boat_leak\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:deerclops": {
        "prefix": "tag+deerclops",
        "body": "\"deerclops\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:firefrenzy": {
        "prefix": "tag+firefrenzy",
        "body": "\"firefrenzy\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:cannotheal": {
        "prefix": "tag+cannotheal",
        "body": "\"cannotheal\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:animal": {
        "prefix": "tag+animal",
        "body": "\"animal\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:penguin": {
        "prefix": "tag+penguin",
        "body": "\"penguin\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:partiallyhooked": {
        "prefix": "tag+partiallyhooked",
        "body": "\"partiallyhooked\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:deployable": {
        "prefix": "tag+deployable",
        "body": "\"deployable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:ignorewalkableplatformdrowning": {
        "prefix": "tag+ignorewalkableplatformdrowning",
        "body": "\"ignorewalkableplatformdrowning\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:kelp": {
        "prefix": "tag+kelp",
        "body": "\"kelp\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:intense": {
        "prefix": "tag+intense",
        "body": "\"intense\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:moonaltarlinktarget": {
        "prefix": "tag+moonaltarlinktarget",
        "body": "\"moonaltarlinktarget\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:lavaarena_bloom": {
        "prefix": "tag+lavaarena_bloom",
        "body": "\"lavaarena_bloom\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:racer": {
        "prefix": "tag+racer",
        "body": "\"racer\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:furnituredecor": {
        "prefix": "tag+furnituredecor",
        "body": "\"furnituredecor\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:carnivalgame_target": {
        "prefix": "tag+carnivalgame_target",
        "body": "\"carnivalgame_target\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:jab": {
        "prefix": "tag+jab",
        "body": "\"jab\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:drop_inventory_onpickup": {
        "prefix": "tag+drop_inventory_onpickup",
        "body": "\"drop_inventory_onpickup\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:shadowheart": {
        "prefix": "tag+shadowheart",
        "body": "\"shadowheart\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:willow_ember": {
        "prefix": "tag+willow_ember",
        "body": "\"willow_ember\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:catapult": {
        "prefix": "tag+catapult",
        "body": "\"catapult\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:boatrace_proximitychecker": {
        "prefix": "tag+boatrace_proximitychecker",
        "body": "\"boatrace_proximitychecker\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:slipperyfeettarget": {
        "prefix": "tag+slipperyfeettarget",
        "body": "\"slipperyfeettarget\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:brightmare_guard": {
        "prefix": "tag+brightmare_guard",
        "body": "\"brightmare_guard\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:telebase": {
        "prefix": "tag+telebase",
        "body": "\"telebase\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:directionsign": {
        "prefix": "tag+directionsign",
        "body": "\"directionsign\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:acidrainmmune:": {
        "prefix": "tag+acidrainmmune",
        "body": "\"acidrainmmune\"",
        "description": " ※Name: \n ※Class: 通用 | Universal\n ※Description: 无视酸雨带来的负面影响\n ※Contributor: \n "
    },
    "tag:__constructionsite": {
        "prefix": "tag+__constructionsite",
        "body": "\"__constructionsite\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:barren": {
        "prefix": "tag+barren",
        "body": "\"barren\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:gemsocket": {
        "prefix": "tag+gemsocket",
        "body": "\"gemsocket\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:deer_ice_circle": {
        "prefix": "tag+deer_ice_circle",
        "body": "\"deer_ice_circle\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:engineeringbattery": {
        "prefix": "tag+engineeringbattery",
        "body": "\"engineeringbattery\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:brightmare": {
        "prefix": "tag+brightmare",
        "body": "\"brightmare\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:brightmare_gestalt": {
        "prefix": "tag+brightmare_gestalt",
        "body": "\"brightmare_gestalt\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:fertile": {
        "prefix": "tag+fertile",
        "body": "\"fertile\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:tent": {
        "prefix": "tag+tent",
        "body": "\"tent\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:ember_master": {
        "prefix": "tag+ember_master",
        "body": "\"ember_master\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:mermprince": {
        "prefix": "tag+mermprince",
        "body": "\"mermprince\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:fossilizable": {
        "prefix": "tag+fossilizable",
        "body": "\"fossilizable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:detailedplanthappiness": {
        "prefix": "tag+detailedplanthappiness",
        "body": "\"detailedplanthappiness\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:mech": {
        "prefix": "tag+mech",
        "body": "\"mech\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:boatleak": {
        "prefix": "tag+boatleak",
        "body": "\"boatleak\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:waxable": {
        "prefix": "tag+waxable",
        "body": "\"waxable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:outofreach": {
        "prefix": "tag+outofreach",
        "body": "\"outofreach\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:mossling": {
        "prefix": "tag+mossling",
        "body": "\"mossling\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:quagmire_cookwaretrader": {
        "prefix": "tag+quagmire_cookwaretrader",
        "body": "\"quagmire_cookwaretrader\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:repairconstructionsite": {
        "prefix": "tag+repairconstructionsite",
        "body": "\"repairconstructionsite\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:pollen": {
        "prefix": "tag+pollen",
        "body": "\"pollen\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:carratshrine": {
        "prefix": "tag+carratshrine",
        "body": "\"carratshrine\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:stalker": {
        "prefix": "tag+stalker",
        "body": "\"stalker\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:nightmarecreature": {
        "prefix": "tag+nightmarecreature",
        "body": "\"nightmarecreature\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:maxwellnottalking": {
        "prefix": "tag+maxwellnottalking",
        "body": "\"maxwellnottalking\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:groomer": {
        "prefix": "tag+groomer",
        "body": "\"groomer\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:boulder": {
        "prefix": "tag+boulder",
        "body": "\"boulder\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:tree": {
        "prefix": "tag+tree",
        "body": "\"tree\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:bundle": {
        "prefix": "tag+bundle",
        "body": "\"bundle\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:baitstealer": {
        "prefix": "tag+baitstealer",
        "body": "\"baitstealer\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:smallcreature": {
        "prefix": "tag+smallcreature",
        "body": "\"smallcreature\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:markable": {
        "prefix": "tag+markable",
        "body": "\"markable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:crumbs": {
        "prefix": "tag+crumbs",
        "body": "\"crumbs\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:HasCarrat": {
        "prefix": "tag+HasCarrat",
        "body": "\"HasCarrat\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:drawable": {
        "prefix": "tag+drawable",
        "body": "\"drawable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:papereraser": {
        "prefix": "tag+papereraser",
        "body": "\"papereraser\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:tallbird": {
        "prefix": "tag+tallbird",
        "body": "\"tallbird\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:grave": {
        "prefix": "tag+grave",
        "body": "\"grave\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:shadowchesspiece": {
        "prefix": "tag+shadowchesspiece",
        "body": "\"shadowchesspiece\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:compassbearer": {
        "prefix": "tag+compassbearer",
        "body": "\"compassbearer\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:haunted": {
        "prefix": "tag+haunted",
        "body": "\"haunted\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:inspectable": {
        "prefix": "tag+inspectable",
        "body": "\"inspectable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:hedge_hound_bush": {
        "prefix": "tag+hedge_hound_bush",
        "body": "\"hedge_hound_bush\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:epic": {
        "prefix": "tag+epic",
        "body": "\"epic\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:worm": {
        "prefix": "tag+worm",
        "body": "\"worm\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:spice": {
        "prefix": "tag+spice",
        "body": "\"spice\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:grassgator": {
        "prefix": "tag+grassgator",
        "body": "\"grassgator\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:wintersfeasttable": {
        "prefix": "tag+wintersfeasttable",
        "body": "\"wintersfeasttable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:lightflier_home": {
        "prefix": "tag+lightflier_home",
        "body": "\"lightflier_home\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:klaussacklock": {
        "prefix": "tag+klaussacklock",
        "body": "\"klaussacklock\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:acting": {
        "prefix": "tag+acting",
        "body": "\"acting\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:girl": {
        "prefix": "tag+girl",
        "body": "\"girl\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:spider_whistle": {
        "prefix": "tag+spider_whistle",
        "body": "\"spider_whistle\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:personal_possession": {
        "prefix": "tag+personal_possession",
        "body": "\"personal_possession\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:coach_whistle": {
        "prefix": "tag+coach_whistle",
        "body": "\"coach_whistle\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:oceanfishable_creature": {
        "prefix": "tag+oceanfishable_creature",
        "body": "\"oceanfishable_creature\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:fish": {
        "prefix": "tag+fish",
        "body": "\"fish\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:pocketwatch": {
        "prefix": "tag+pocketwatch",
        "body": "\"pocketwatch\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:parryweapon": {
        "prefix": "tag+parryweapon",
        "body": "\"parryweapon\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:small_livestock": {
        "prefix": "tag+small_livestock",
        "body": "\"small_livestock\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:lunarplant": {
        "prefix": "tag+lunarplant",
        "body": "\"lunarplant\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:farmplantstress": {
        "prefix": "tag+farmplantstress",
        "body": "\"farmplantstress\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:crabking_ally": {
        "prefix": "tag+crabking_ally",
        "body": "\"crabking_ally\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:ignoretalking": {
        "prefix": "tag+ignoretalking",
        "body": "\"ignoretalking\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:fireimmune": {
        "prefix": "tag+fireimmune",
        "body": "\"fireimmune\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:oceanfishing_catchable": {
        "prefix": "tag+oceanfishing_catchable",
        "body": "\"oceanfishing_catchable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:shadowrift_portal": {
        "prefix": "tag+shadowrift_portal",
        "body": "\"shadowrift_portal\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:hasstrongman": {
        "prefix": "tag+hasstrongman",
        "body": "\"hasstrongman\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:scarytooceanprey": {
        "prefix": "tag+scarytooceanprey",
        "body": "\"scarytooceanprey\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:bernie_reviver": {
        "prefix": "tag+bernie_reviver",
        "body": "\"bernie_reviver\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:blinkfocus": {
        "prefix": "tag+blinkfocus",
        "body": "\"blinkfocus\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:fishable": {
        "prefix": "tag+fishable",
        "body": "\"fishable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:yotr_token": {
        "prefix": "tag+yotr_token",
        "body": "\"yotr_token\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:yotr_arena": {
        "prefix": "tag+yotr_arena",
        "body": "\"yotr_arena\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:yotc_racefinishline": {
        "prefix": "tag+yotc_racefinishline",
        "body": "\"yotc_racefinishline\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:yotb_post": {
        "prefix": "tag+yotb_post",
        "body": "\"yotb_post\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:yotb_pattern_fragment": {
        "prefix": "tag+yotb_pattern_fragment",
        "body": "\"yotb_pattern_fragment\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:halloweenmoonmutable": {
        "prefix": "tag+halloweenmoonmutable",
        "body": "\"halloweenmoonmutable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:structure:结构": {
        "prefix": "tag+structure",
        "body": "\"structure\"",
        "description": " ※Name: 结构\n ※Class: 建筑 | Structure\n ※Description: 属于建筑\n ※Contributor: \n "
    },
    "tag:yotb_conteststartable": {
        "prefix": "tag+yotb_conteststartable",
        "body": "\"yotb_conteststartable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:wormwood_plant_fx": {
        "prefix": "tag+wormwood_plant_fx",
        "body": "\"wormwood_plant_fx\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:wormwood_pet": {
        "prefix": "tag+wormwood_pet",
        "body": "\"wormwood_pet\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:groundonlymachine": {
        "prefix": "tag+groundonlymachine",
        "body": "\"groundonlymachine\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:stale": {
        "prefix": "tag+stale",
        "body": "\"stale\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:webbed": {
        "prefix": "tag+webbed",
        "body": "\"webbed\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:workrepairable": {
        "prefix": "tag+workrepairable",
        "body": "\"workrepairable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:wooden": {
        "prefix": "tag+wooden",
        "body": "\"wooden\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:wood": {
        "prefix": "tag+wood",
        "body": "\"wood\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:superjump": {
        "prefix": "tag+superjump",
        "body": "\"superjump\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:wonkey": {
        "prefix": "tag+wonkey",
        "body": "\"wonkey\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:wolfgang_overbuff_5": {
        "prefix": "tag+wolfgang_overbuff_5",
        "body": "\"wolfgang_overbuff_5\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:wolfgang_overbuff_3": {
        "prefix": "tag+wolfgang_overbuff_3",
        "body": "\"wolfgang_overbuff_3\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:cavedweller": {
        "prefix": "tag+cavedweller",
        "body": "\"cavedweller\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:buzzardspawner": {
        "prefix": "tag+buzzardspawner",
        "body": "\"buzzardspawner\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:wolfgang_overbuff_1": {
        "prefix": "tag+wolfgang_overbuff_1",
        "body": "\"wolfgang_overbuff_1\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:throw_line": {
        "prefix": "tag+throw_line",
        "body": "\"throw_line\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:kitcoonden": {
        "prefix": "tag+kitcoonden",
        "body": "\"kitcoonden\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:weakvine": {
        "prefix": "tag+weakvine",
        "body": "\"weakvine\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:withered": {
        "prefix": "tag+withered",
        "body": "\"withered\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:witherable": {
        "prefix": "tag+witherable",
        "body": "\"witherable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:thorny": {
        "prefix": "tag+thorny",
        "body": "\"thorny\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:wintersfeastcookedfood": {
        "prefix": "tag+wintersfeastcookedfood",
        "body": "\"wintersfeastcookedfood\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:winter_treestand": {
        "prefix": "tag+winter_treestand",
        "body": "\"winter_treestand\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:winter_ornament": {
        "prefix": "tag+winter_ornament",
        "body": "\"winter_ornament\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:ignoremouseover": {
        "prefix": "tag+ignoremouseover",
        "body": "\"ignoremouseover\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:lureplant": {
        "prefix": "tag+lureplant",
        "body": "\"lureplant\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:decor": {
        "prefix": "tag+decor",
        "body": "\"decor\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:pillar_atrium": {
        "prefix": "tag+pillar_atrium",
        "body": "\"pillar_atrium\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:willow_shadow_flame": {
        "prefix": "tag+willow_shadow_flame",
        "body": "\"willow_shadow_flame\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:wildfireprotected": {
        "prefix": "tag+wildfireprotected",
        "body": "\"wildfireprotected\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:rabbit": {
        "prefix": "tag+rabbit",
        "body": "\"rabbit\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:gnarwail_horn": {
        "prefix": "tag+gnarwail_horn",
        "body": "\"gnarwail_horn\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:wet": {
        "prefix": "tag+wet",
        "body": "\"wet\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:liftingdumbbell": {
        "prefix": "tag+liftingdumbbell",
        "body": "\"liftingdumbbell\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:wereplayer": {
        "prefix": "tag+wereplayer",
        "body": "\"wereplayer\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:acidrainimmune": {
        "prefix": "tag+acidrainimmune",
        "body": "\"acidrainimmune\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:cloth": {
        "prefix": "tag+cloth",
        "body": "\"cloth\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:chess_moonevent": {
        "prefix": "tag+chess_moonevent",
        "body": "\"chess_moonevent\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:pocketwatch_castfrominventory": {
        "prefix": "tag+pocketwatch_castfrominventory",
        "body": "\"pocketwatch_castfrominventory\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:werepig": {
        "prefix": "tag+werepig",
        "body": "\"werepig\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:SnowCovered": {
        "prefix": "tag+SnowCovered",
        "body": "\"SnowCovered\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:MONKEY_CURSE_1": {
        "prefix": "tag+MONKEY_CURSE_1",
        "body": "\"MONKEY_CURSE_1\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:lightninggoat": {
        "prefix": "tag+lightninggoat",
        "body": "\"lightninggoat\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:frog": {
        "prefix": "tag+frog",
        "body": "\"frog\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:weremoosecombo": {
        "prefix": "tag+weremoosecombo",
        "body": "\"weremoosecombo\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:tentacle_pillar_arm": {
        "prefix": "tag+tentacle_pillar_arm",
        "body": "\"tentacle_pillar_arm\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:werehuman": {
        "prefix": "tag+werehuman",
        "body": "\"werehuman\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:weighable_fish": {
        "prefix": "tag+weighable_fish",
        "body": "\"weighable_fish\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:dappereffects": {
        "prefix": "tag+dappereffects",
        "body": "\"dappereffects\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:cocoon_home": {
        "prefix": "tag+cocoon_home",
        "body": "\"cocoon_home\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:weighable_OVERSIZEDVEGGIES": {
        "prefix": "tag+weighable_OVERSIZEDVEGGIES",
        "body": "\"weighable_OVERSIZEDVEGGIES\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:noteleport": {
        "prefix": "tag+noteleport",
        "body": "\"noteleport\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:boat_patch": {
        "prefix": "tag+boat_patch",
        "body": "\"boat_patch\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:weedplantstress": {
        "prefix": "tag+weedplantstress",
        "body": "\"weedplantstress\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:show_broken_ui": {
        "prefix": "tag+show_broken_ui",
        "body": "\"show_broken_ui\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:weed:": {
        "prefix": "tag+weed",
        "body": "\"weed\"",
        "description": " ※Name: \n ※Class: 实体 | Prefab\n ※Description: 杂草\n ※Contributor: \n "
    },
    "tag:webbable": {
        "prefix": "tag+webbable",
        "body": "\"webbable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:mermking": {
        "prefix": "tag+mermking",
        "body": "\"mermking\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:dogrider_only": {
        "prefix": "tag+dogrider_only",
        "body": "\"dogrider_only\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:weapon": {
        "prefix": "tag+weapon",
        "body": "\"weapon\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:birchnut": {
        "prefix": "tag+birchnut",
        "body": "\"birchnut\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:can_build_moon_device": {
        "prefix": "tag+can_build_moon_device",
        "body": "\"can_build_moon_device\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:waxspray": {
        "prefix": "tag+waxspray",
        "body": "\"waxspray\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:beehive": {
        "prefix": "tag+beehive",
        "body": "\"beehive\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:inventoryitemholder_take": {
        "prefix": "tag+inventoryitemholder_take",
        "body": "\"inventoryitemholder_take\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:flute": {
        "prefix": "tag+flute",
        "body": "\"flute\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:cancatch": {
        "prefix": "tag+cancatch",
        "body": "\"cancatch\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:wave": {
        "prefix": "tag+wave",
        "body": "\"wave\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:waterplant": {
        "prefix": "tag+waterplant",
        "body": "\"waterplant\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:storyteller:": {
        "prefix": "tag+storyteller",
        "body": "\"storyteller\"",
        "description": " ※Name: \n ※Class: 角色 | Character\n ※Description: 能讲故事\n ※Contributor: \n "
    },
    "tag:wargshrine": {
        "prefix": "tag+wargshrine",
        "body": "\"wargshrine\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:gnawing": {
        "prefix": "tag+gnawing",
        "body": "\"gnawing\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:warg": {
        "prefix": "tag+warg",
        "body": "\"warg\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:wardrobe": {
        "prefix": "tag+wardrobe",
        "body": "\"wardrobe\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:walkingplank": {
        "prefix": "tag+walkingplank",
        "body": "\"walkingplank\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:wagstaff_npc": {
        "prefix": "tag+wagstaff_npc",
        "body": "\"wagstaff_npc\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:turfhat": {
        "prefix": "tag+turfhat",
        "body": "\"turfhat\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:wagstaff_machine": {
        "prefix": "tag+wagstaff_machine",
        "body": "\"wagstaff_machine\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:wagstaff_detector": {
        "prefix": "tag+wagstaff_detector",
        "body": "\"wagstaff_detector\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:umbrella": {
        "prefix": "tag+umbrella",
        "body": "\"umbrella\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:fertilizer": {
        "prefix": "tag+fertilizer",
        "body": "\"fertilizer\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:cookable": {
        "prefix": "tag+cookable",
        "body": "\"cookable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:hassleeper": {
        "prefix": "tag+hassleeper",
        "body": "\"hassleeper\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:rotatableobject": {
        "prefix": "tag+rotatableobject",
        "body": "\"rotatableobject\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:smalloceancreature": {
        "prefix": "tag+smalloceancreature",
        "body": "\"smalloceancreature\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:bramble_resistant": {
        "prefix": "tag+bramble_resistant",
        "body": "\"bramble_resistant\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:sharp": {
        "prefix": "tag+sharp",
        "body": "\"sharp\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:_moisture": {
        "prefix": "tag+_moisture",
        "body": "\"_moisture\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:fresh": {
        "prefix": "tag+fresh",
        "body": "\"fresh\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:locomotor": {
        "prefix": "tag+locomotor",
        "body": "\"locomotor\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:NPC_contestant": {
        "prefix": "tag+NPC_contestant",
        "body": "\"NPC_contestant\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:heatrock": {
        "prefix": "tag+heatrock",
        "body": "\"heatrock\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:vase": {
        "prefix": "tag+vase",
        "body": "\"vase\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:valkyrie": {
        "prefix": "tag+valkyrie",
        "body": "\"valkyrie\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:usingmagiciantool": {
        "prefix": "tag+usingmagiciantool",
        "body": "\"usingmagiciantool\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:usesvegetarianequipment": {
        "prefix": "tag+usesvegetarianequipment",
        "body": "\"usesvegetarianequipment\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:gestaltprotection": {
        "prefix": "tag+gestaltprotection",
        "body": "\"gestaltprotection\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:usedeployspacingasoffset": {
        "prefix": "tag+usedeployspacingasoffset",
        "body": "\"usedeployspacingasoffset\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:palmconetree": {
        "prefix": "tag+palmconetree",
        "body": "\"palmconetree\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:upgrademoduleowner": {
        "prefix": "tag+upgrademoduleowner",
        "body": "\"upgrademoduleowner\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:pickable_search_str": {
        "prefix": "tag+pickable_search_str",
        "body": "\"pickable_search_str\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:use_channel_longaction": {
        "prefix": "tag+use_channel_longaction",
        "body": "\"use_channel_longaction\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:petrifiable": {
        "prefix": "tag+petrifiable",
        "body": "\"petrifiable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:unlockable": {
        "prefix": "tag+unlockable",
        "body": "\"unlockable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:soul": {
        "prefix": "tag+soul",
        "body": "\"soul\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:uncomfortable_chair": {
        "prefix": "tag+uncomfortable_chair",
        "body": "\"uncomfortable_chair\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:pinned": {
        "prefix": "tag+pinned",
        "body": "\"pinned\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:log": {
        "prefix": "tag+log",
        "body": "\"log\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:frozen": {
        "prefix": "tag+frozen",
        "body": "\"frozen\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:twigs": {
        "prefix": "tag+twigs",
        "body": "\"twigs\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:trophyscale_oversizedveggies": {
        "prefix": "tag+trophyscale_oversizedveggies",
        "body": "\"trophyscale_oversizedveggies\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:dustmothfood": {
        "prefix": "tag+dustmothfood",
        "body": "\"dustmothfood\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:trophyscale_fish": {
        "prefix": "tag+trophyscale_fish",
        "body": "\"trophyscale_fish\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:trophycanbetaken": {
        "prefix": "tag+trophycanbetaken",
        "body": "\"trophycanbetaken\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:trapsprung": {
        "prefix": "tag+trapsprung",
        "body": "\"trapsprung\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:farmplantidentifier": {
        "prefix": "tag+farmplantidentifier",
        "body": "\"farmplantidentifier\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:can_use_heavy": {
        "prefix": "tag+can_use_heavy",
        "body": "\"can_use_heavy\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:recipescanner": {
        "prefix": "tag+recipescanner",
        "body": "\"recipescanner\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:beefalo_groomer": {
        "prefix": "tag+beefalo_groomer",
        "body": "\"beefalo_groomer\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:trader_just_show": {
        "prefix": "tag+trader_just_show",
        "body": "\"trader_just_show\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:markable_proxy": {
        "prefix": "tag+markable_proxy",
        "body": "\"markable_proxy\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:HASHEATER": {
        "prefix": "tag+HASHEATER",
        "body": "\"HASHEATER\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:lowered_ground": {
        "prefix": "tag+lowered_ground",
        "body": "\"lowered_ground\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:icewall": {
        "prefix": "tag+icewall",
        "body": "\"icewall\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:track": {
        "prefix": "tag+track",
        "body": "\"track\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:scrapbook_data": {
        "prefix": "tag+scrapbook_data",
        "body": "\"scrapbook_data\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:townportaltalisman": {
        "prefix": "tag+townportaltalisman",
        "body": "\"townportaltalisman\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:fillable": {
        "prefix": "tag+fillable",
        "body": "\"fillable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:vasedecoration": {
        "prefix": "tag+vasedecoration",
        "body": "\"vasedecoration\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:tile_deploy": {
        "prefix": "tag+tile_deploy",
        "body": "\"tile_deploy\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:ticoon": {
        "prefix": "tag+ticoon",
        "body": "\"ticoon\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:lunarplant_target": {
        "prefix": "tag+lunarplant_target",
        "body": "\"lunarplant_target\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:placer": {
        "prefix": "tag+placer",
        "body": "\"placer\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:quickcast": {
        "prefix": "tag+quickcast",
        "body": "\"quickcast\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:thrown": {
        "prefix": "tag+thrown",
        "body": "\"thrown\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:woby": {
        "prefix": "tag+woby",
        "body": "\"woby\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:butterfly": {
        "prefix": "tag+butterfly",
        "body": "\"butterfly\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:playermerm": {
        "prefix": "tag+playermerm",
        "body": "\"playermerm\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:wintersfeastfood": {
        "prefix": "tag+wintersfeastfood",
        "body": "\"wintersfeastfood\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:terraformblocker": {
        "prefix": "tag+terraformblocker",
        "body": "\"terraformblocker\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:moonbeast": {
        "prefix": "tag+moonbeast",
        "body": "\"moonbeast\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:wereitem": {
        "prefix": "tag+wereitem",
        "body": "\"wereitem\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:shield": {
        "prefix": "tag+shield",
        "body": "\"shield\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:hammer": {
        "prefix": "tag+hammer",
        "body": "\"hammer\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:tendable_farmplant:": {
        "prefix": "tag+tendable_farmplant",
        "body": "\"tendable_farmplant\"",
        "description": " ※Name: \n ※Class: 实体 | Prefab\n ※Description: \n ※Contributor: \n "
    },
    "tag:deer": {
        "prefix": "tag+deer",
        "body": "\"deer\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:teleportato_part": {
        "prefix": "tag+teleportato_part",
        "body": "\"teleportato_part\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:teamleader": {
        "prefix": "tag+teamleader",
        "body": "\"teamleader\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:wormholetracker": {
        "prefix": "tag+wormholetracker",
        "body": "\"wormholetracker\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:grass": {
        "prefix": "tag+grass",
        "body": "\"grass\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:tacklestation": {
        "prefix": "tag+tacklestation",
        "body": "\"tacklestation\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:succulent": {
        "prefix": "tag+succulent",
        "body": "\"succulent\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:heal_fertilize": {
        "prefix": "tag+heal_fertilize",
        "body": "\"heal_fertilize\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:tacklesketch": {
        "prefix": "tag+tacklesketch",
        "body": "\"tacklesketch\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:berrythief": {
        "prefix": "tag+berrythief",
        "body": "\"berrythief\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:strongman": {
        "prefix": "tag+strongman",
        "body": "\"strongman\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:stronggrip:": {
        "prefix": "tag+stronggrip",
        "body": "\"stronggrip\"",
        "description": " ※Name: \n ※Class: 物品 | Inventory Item\n ※Description: 防止手部装备因潮湿、吼叫、击飞而脱手。溺水后不丢失库存中的物品\n ※Contributor: \n "
    },
    "tag:lightbattery": {
        "prefix": "tag+lightbattery",
        "body": "\"lightbattery\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:offerconstructionsite": {
        "prefix": "tag+offerconstructionsite",
        "body": "\"offerconstructionsite\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:dressable": {
        "prefix": "tag+dressable",
        "body": "\"dressable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:shadow_pillar": {
        "prefix": "tag+shadow_pillar",
        "body": "\"shadow_pillar\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:storytellingprop": {
        "prefix": "tag+storytellingprop",
        "body": "\"storytellingprop\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:murderable": {
        "prefix": "tag+murderable",
        "body": "\"murderable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:loaded": {
        "prefix": "tag+loaded",
        "body": "\"loaded\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:activeprojectile": {
        "prefix": "tag+activeprojectile",
        "body": "\"activeprojectile\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:stewer": {
        "prefix": "tag+stewer",
        "body": "\"stewer\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:caveindebris": {
        "prefix": "tag+caveindebris",
        "body": "\"caveindebris\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:moonglass_piece": {
        "prefix": "tag+moonglass_piece",
        "body": "\"moonglass_piece\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:stalkerminion": {
        "prefix": "tag+stalkerminion",
        "body": "\"stalkerminion\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:wormhole": {
        "prefix": "tag+wormhole",
        "body": "\"wormhole\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:tallbirdegg": {
        "prefix": "tag+tallbirdegg",
        "body": "\"tallbirdegg\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:spore": {
        "prefix": "tag+spore",
        "body": "\"spore\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:catcoon": {
        "prefix": "tag+catcoon",
        "body": "\"catcoon\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:spoiled_fish": {
        "prefix": "tag+spoiled_fish",
        "body": "\"spoiled_fish\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:spiderqueen": {
        "prefix": "tag+spiderqueen",
        "body": "\"spiderqueen\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:moonstorm_spark": {
        "prefix": "tag+moonstorm_spark",
        "body": "\"moonstorm_spark\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:spidermutator": {
        "prefix": "tag+spidermutator",
        "body": "\"spidermutator\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:spiderdisguise": {
        "prefix": "tag+spiderdisguise",
        "body": "\"spiderdisguise\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:fence_rotator": {
        "prefix": "tag+fence_rotator",
        "body": "\"fence_rotator\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:moistureimmunity": {
        "prefix": "tag+moistureimmunity",
        "body": "\"moistureimmunity\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:spidercocoon": {
        "prefix": "tag+spidercocoon",
        "body": "\"spidercocoon\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:molebathill": {
        "prefix": "tag+molebathill",
        "body": "\"molebathill\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:spider": {
        "prefix": "tag+spider",
        "body": "\"spider\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:spicer": {
        "prefix": "tag+spicer",
        "body": "\"spicer\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:special_action_toss": {
        "prefix": "tag+special_action_toss",
        "body": "\"special_action_toss\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:raindome": {
        "prefix": "tag+raindome",
        "body": "\"raindome\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:needssewing": {
        "prefix": "tag+needssewing",
        "body": "\"needssewing\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:closeinspector": {
        "prefix": "tag+closeinspector",
        "body": "\"closeinspector\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:spawnlight": {
        "prefix": "tag+spawnlight",
        "body": "\"spawnlight\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:fishinghook": {
        "prefix": "tag+fishinghook",
        "body": "\"fishinghook\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:magician": {
        "prefix": "tag+magician",
        "body": "\"magician\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:spat": {
        "prefix": "tag+spat",
        "body": "\"spat\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:fruitflyspawner": {
        "prefix": "tag+fruitflyspawner",
        "body": "\"fruitflyspawner\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:underwater_salvageable": {
        "prefix": "tag+underwater_salvageable",
        "body": "\"underwater_salvageable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:soil:耕地": {
        "prefix": "tag+soil",
        "body": "\"soil\"",
        "description": " ※Name: 耕地\n ※Class: 实体 | Prefab\n ※Description: 是放置种子的土堆，同时具有NOCLICK标签，代表被压实的土堆，此时无法种种子\n ※Contributor: \n "
    },
    "tag:bait": {
        "prefix": "tag+bait",
        "body": "\"bait\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:chess": {
        "prefix": "tag+chess",
        "body": "\"chess\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:smashable": {
        "prefix": "tag+smashable",
        "body": "\"smashable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:veryquickcast": {
        "prefix": "tag+veryquickcast",
        "body": "\"veryquickcast\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:deergemresistance": {
        "prefix": "tag+deergemresistance",
        "body": "\"deergemresistance\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:smallbird": {
        "prefix": "tag+smallbird",
        "body": "\"smallbird\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:small": {
        "prefix": "tag+small",
        "body": "\"small\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:on_walkable_plank": {
        "prefix": "tag+on_walkable_plank",
        "body": "\"on_walkable_plank\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:lamp": {
        "prefix": "tag+lamp",
        "body": "\"lamp\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:slurper": {
        "prefix": "tag+slurper",
        "body": "\"slurper\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:slowfertilize": {
        "prefix": "tag+slowfertilize",
        "body": "\"slowfertilize\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:has_aggressive_follower": {
        "prefix": "tag+has_aggressive_follower",
        "body": "\"has_aggressive_follower\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:slowbuilder": {
        "prefix": "tag+slowbuilder",
        "body": "\"slowbuilder\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:slingshotammo": {
        "prefix": "tag+slingshotammo",
        "body": "\"slingshotammo\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:reviving": {
        "prefix": "tag+reviving",
        "body": "\"reviving\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:slingshot_sharpshooter:": {
        "prefix": "tag+slingshot_sharpshooter",
        "body": "\"slingshot_sharpshooter\"",
        "description": " ※Name: \n ※Class: 角色 | Character\n ※Description: 能使用弹弓\n ※Contributor: \n "
    },
    "tag:slingshot": {
        "prefix": "tag+slingshot",
        "body": "\"slingshot\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:give_dolongaction": {
        "prefix": "tag+give_dolongaction",
        "body": "\"give_dolongaction\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:sleeper": {
        "prefix": "tag+sleeper",
        "body": "\"sleeper\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:sitting_on_chair": {
        "prefix": "tag+sitting_on_chair",
        "body": "\"sitting_on_chair\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:sinkhole": {
        "prefix": "tag+sinkhole",
        "body": "\"sinkhole\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:propweapon": {
        "prefix": "tag+propweapon",
        "body": "\"propweapon\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:chum": {
        "prefix": "tag+chum",
        "body": "\"chum\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:eyeplant": {
        "prefix": "tag+eyeplant",
        "body": "\"eyeplant\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:singingshell": {
        "prefix": "tag+singingshell",
        "body": "\"singingshell\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:show_spoiled": {
        "prefix": "tag+show_spoiled",
        "body": "\"show_spoiled\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:show_spoilage": {
        "prefix": "tag+show_spoilage",
        "body": "\"show_spoilage\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:tentacle": {
        "prefix": "tag+tentacle",
        "body": "\"tentacle\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:ghostkid": {
        "prefix": "tag+ghostkid",
        "body": "\"ghostkid\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:bird_mutant_spitter": {
        "prefix": "tag+bird_mutant_spitter",
        "body": "\"bird_mutant_spitter\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:fogrevealer": {
        "prefix": "tag+fogrevealer",
        "body": "\"fogrevealer\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:toadstool": {
        "prefix": "tag+toadstool",
        "body": "\"toadstool\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:lunarhaildebris": {
        "prefix": "tag+lunarhaildebris",
        "body": "\"lunarhaildebris\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:shard_recieved": {
        "prefix": "tag+shard_recieved",
        "body": "\"shard_recieved\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:client_forward_action_target": {
        "prefix": "tag+client_forward_action_target",
        "body": "\"client_forward_action_target\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:ashes": {
        "prefix": "tag+ashes",
        "body": "\"ashes\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:lightflier": {
        "prefix": "tag+lightflier",
        "body": "\"lightflier\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:quagmire_replatable": {
        "prefix": "tag+quagmire_replatable",
        "body": "\"quagmire_replatable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:shadowmagic": {
        "prefix": "tag+shadowmagic",
        "body": "\"shadowmagic\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:shadow_forge": {
        "prefix": "tag+shadow_forge",
        "body": "\"shadow_forge\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:chessfriend": {
        "prefix": "tag+chessfriend",
        "body": "\"chessfriend\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:glommer": {
        "prefix": "tag+glommer",
        "body": "\"glommer\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:lifting": {
        "prefix": "tag+lifting",
        "body": "\"lifting\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:farm_plant_defender": {
        "prefix": "tag+farm_plant_defender",
        "body": "\"farm_plant_defender\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:reader": {
        "prefix": "tag+reader",
        "body": "\"reader\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:cozy_bunnyman": {
        "prefix": "tag+cozy_bunnyman",
        "body": "\"cozy_bunnyman\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:crazy:": {
        "prefix": "tag+crazy",
        "body": "\"crazy\"",
        "description": " ※Name: \n ※Class: 生物 | Mobs\n ※Description: 拥有此标签的生物可攻击暗影生物\n ※Contributor: \n "
    },
    "tag:seastack": {
        "prefix": "tag+seastack",
        "body": "\"seastack\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:sculpture": {
        "prefix": "tag+sculpture",
        "body": "\"sculpture\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:scrapbook_note": {
        "prefix": "tag+scrapbook_note",
        "body": "\"scrapbook_note\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:player_lunar_aligned": {
        "prefix": "tag+player_lunar_aligned",
        "body": "\"player_lunar_aligned\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:sanityaura": {
        "prefix": "tag+sanityaura",
        "body": "\"sanityaura\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:sanity": {
        "prefix": "tag+sanity",
        "body": "\"sanity\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:foodpreserver": {
        "prefix": "tag+foodpreserver",
        "body": "\"foodpreserver\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:saltpond": {
        "prefix": "tag+saltpond",
        "body": "\"saltpond\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:saltlick": {
        "prefix": "tag+saltlick",
        "body": "\"saltlick\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:saillowered": {
        "prefix": "tag+saillowered",
        "body": "\"saillowered\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:brightmareboss": {
        "prefix": "tag+brightmareboss",
        "body": "\"brightmareboss\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:sail_transitioning": {
        "prefix": "tag+sail_transitioning",
        "body": "\"sail_transitioning\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:rotten": {
        "prefix": "tag+rotten",
        "body": "\"rotten\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:halloween_ornament": {
        "prefix": "tag+halloween_ornament",
        "body": "\"halloween_ornament\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:WORM_DANGER": {
        "prefix": "tag+WORM_DANGER",
        "body": "\"WORM_DANGER\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:roseglassesvision": {
        "prefix": "tag+roseglassesvision",
        "body": "\"roseglassesvision\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:is_leaking": {
        "prefix": "tag+is_leaking",
        "body": "\"is_leaking\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:rooted": {
        "prefix": "tag+rooted",
        "body": "\"rooted\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:rook": {
        "prefix": "tag+rook",
        "body": "\"rook\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:altar": {
        "prefix": "tag+altar",
        "body": "\"altar\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:catcoonden": {
        "prefix": "tag+catcoonden",
        "body": "\"catcoonden\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:formationleader": {
        "prefix": "tag+formationleader",
        "body": "\"formationleader\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:is_furling": {
        "prefix": "tag+is_furling",
        "body": "\"is_furling\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:rodbase": {
        "prefix": "tag+rodbase",
        "body": "\"rodbase\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:rocks": {
        "prefix": "tag+rocks",
        "body": "\"rocks\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:hermitcrab_marker_fishing": {
        "prefix": "tag+hermitcrab_marker_fishing",
        "body": "\"hermitcrab_marker_fishing\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:bathbombable": {
        "prefix": "tag+bathbombable",
        "body": "\"bathbombable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:retaliates": {
        "prefix": "tag+retaliates",
        "body": "\"retaliates\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:resurrector": {
        "prefix": "tag+resurrector",
        "body": "\"resurrector\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:reloaditem_ammo": {
        "prefix": "tag+reloaditem_ammo",
        "body": "\"reloaditem_ammo\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:regrowth_blocker": {
        "prefix": "tag+regrowth_blocker",
        "body": "\"regrowth_blocker\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:regal": {
        "prefix": "tag+regal",
        "body": "\"regal\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:recordplayer": {
        "prefix": "tag+recordplayer",
        "body": "\"recordplayer\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:rechargeable_bonus": {
        "prefix": "tag+rechargeable_bonus",
        "body": "\"rechargeable_bonus\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:eatsrawmeat": {
        "prefix": "tag+eatsrawmeat",
        "body": "\"eatsrawmeat\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:readyforharvest": {
        "prefix": "tag+readyforharvest",
        "body": "\"readyforharvest\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:shadecanopy": {
        "prefix": "tag+shadecanopy",
        "body": "\"shadecanopy\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:planted": {
        "prefix": "tag+planted",
        "body": "\"planted\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:rainimmunity": {
        "prefix": "tag+rainimmunity",
        "body": "\"rainimmunity\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:play_in_progress": {
        "prefix": "tag+play_in_progress",
        "body": "\"play_in_progress\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:whackable": {
        "prefix": "tag+whackable",
        "body": "\"whackable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:fossilspike": {
        "prefix": "tag+fossilspike",
        "body": "\"fossilspike\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:questing": {
        "prefix": "tag+questing",
        "body": "\"questing\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:questcomplete": {
        "prefix": "tag+questcomplete",
        "body": "\"questcomplete\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:quake_blocker": {
        "prefix": "tag+quake_blocker",
        "body": "\"quake_blocker\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:dull": {
        "prefix": "tag+dull",
        "body": "\"dull\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:shadowtrail": {
        "prefix": "tag+shadowtrail",
        "body": "\"shadowtrail\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:quagmire_pot": {
        "prefix": "tag+quagmire_pot",
        "body": "\"quagmire_pot\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:quagmire_ovenmaster": {
        "prefix": "tag+quagmire_ovenmaster",
        "body": "\"quagmire_ovenmaster\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:channelable": {
        "prefix": "tag+channelable",
        "body": "\"channelable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:quagmire_grillmaster": {
        "prefix": "tag+quagmire_grillmaster",
        "body": "\"quagmire_grillmaster\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:beard_sack_2": {
        "prefix": "tag+beard_sack_2",
        "body": "\"beard_sack_2\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:explosive": {
        "prefix": "tag+explosive",
        "body": "\"explosive\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:quagmire_coin": {
        "prefix": "tag+quagmire_coin",
        "body": "\"quagmire_coin\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:usedeploystring": {
        "prefix": "tag+usedeploystring",
        "body": "\"usedeploystring\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:quagmire_butcher": {
        "prefix": "tag+quagmire_butcher",
        "body": "\"quagmire_butcher\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:pyroweapon": {
        "prefix": "tag+pyroweapon",
        "body": "\"pyroweapon\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:purehorror": {
        "prefix": "tag+purehorror",
        "body": "\"purehorror\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:ignoresspoilage": {
        "prefix": "tag+ignoresspoilage",
        "body": "\"ignoresspoilage\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:badfood": {
        "prefix": "tag+badfood",
        "body": "\"badfood\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:purebrilliance": {
        "prefix": "tag+purebrilliance",
        "body": "\"purebrilliance\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:moontrader": {
        "prefix": "tag+moontrader",
        "body": "\"moontrader\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:alchemist": {
        "prefix": "tag+alchemist",
        "body": "\"alchemist\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:moon_altar_astral_marker": {
        "prefix": "tag+moon_altar_astral_marker",
        "body": "\"moon_altar_astral_marker\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:singingshelltrigger": {
        "prefix": "tag+singingshelltrigger",
        "body": "\"singingshelltrigger\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:masterchef:": {
        "prefix": "tag+masterchef",
        "body": "\"masterchef\"",
        "description": " ※Name: \n ※Class: 角色 | Character\n ※Description: 主厨标签 能够使用便携锅，能够制作大厨料理\n ※Contributor: \n "
    },
    "tag:drying": {
        "prefix": "tag+drying",
        "body": "\"drying\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:professionalchef:": {
        "prefix": "tag+professionalchef",
        "body": "\"professionalchef\"",
        "description": " ※Name: \n ※Class: 角色 | Character\n ※Description: 能够使用调味锅，能够制作调料\n ※Contributor: \n "
    },
    "tag:predig": {
        "prefix": "tag+predig",
        "body": "\"predig\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:mine_not_reusable": {
        "prefix": "tag+mine_not_reusable",
        "body": "\"mine_not_reusable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:pocketdimension_container": {
        "prefix": "tag+pocketdimension_container",
        "body": "\"pocketdimension_container\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:portablestorage": {
        "prefix": "tag+portablestorage",
        "body": "\"portablestorage\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:portableengineer": {
        "prefix": "tag+portableengineer",
        "body": "\"portableengineer\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:pondfish": {
        "prefix": "tag+pondfish",
        "body": "\"pondfish\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:pollinator": {
        "prefix": "tag+pollinator",
        "body": "\"pollinator\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:polite": {
        "prefix": "tag+polite",
        "body": "\"polite\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:pointy": {
        "prefix": "tag+pointy",
        "body": "\"pointy\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:moon_spore_protection": {
        "prefix": "tag+moon_spore_protection",
        "body": "\"moon_spore_protection\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:hutch": {
        "prefix": "tag+hutch",
        "body": "\"hutch\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:playerskeleton": {
        "prefix": "tag+playerskeleton",
        "body": "\"playerskeleton\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:playerowned": {
        "prefix": "tag+playerowned",
        "body": "\"playerowned\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:player_shadow_aligned": {
        "prefix": "tag+player_shadow_aligned",
        "body": "\"player_shadow_aligned\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:mermthrone": {
        "prefix": "tag+mermthrone",
        "body": "\"mermthrone\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:scarytocookiecutters": {
        "prefix": "tag+scarytocookiecutters",
        "body": "\"scarytocookiecutters\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:chester": {
        "prefix": "tag+chester",
        "body": "\"chester\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:lunarthrall_plant_segment": {
        "prefix": "tag+lunarthrall_plant_segment",
        "body": "\"lunarthrall_plant_segment\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:player": {
        "prefix": "tag+player",
        "body": "\"player\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:plantinspector": {
        "prefix": "tag+plantinspector",
        "body": "\"plantinspector\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:plantedsoil": {
        "prefix": "tag+plantedsoil",
        "body": "\"plantedsoil\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:planted_seed": {
        "prefix": "tag+planted_seed",
        "body": "\"planted_seed\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:plant": {
        "prefix": "tag+plant",
        "body": "\"plant\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:plank_extended": {
        "prefix": "tag+plank_extended",
        "body": "\"plank_extended\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:pirate": {
        "prefix": "tag+pirate",
        "body": "\"pirate\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:pinetreepioneer": {
        "prefix": "tag+pinetreepioneer",
        "body": "\"pinetreepioneer\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:pigelite": {
        "prefix": "tag+pigelite",
        "body": "\"pigelite\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:pig_house": {
        "prefix": "tag+pig_house",
        "body": "\"pig_house\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:cage": {
        "prefix": "tag+cage",
        "body": "\"cage\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:bookcabinet_item": {
        "prefix": "tag+bookcabinet_item",
        "body": "\"bookcabinet_item\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:__follower": {
        "prefix": "tag+__follower",
        "body": "\"__follower\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:pig": {
        "prefix": "tag+pig",
        "body": "\"pig\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:master_crewman": {
        "prefix": "tag+master_crewman",
        "body": "\"master_crewman\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:perd": {
        "prefix": "tag+perd",
        "body": "\"perd\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:beebeacon": {
        "prefix": "tag+beebeacon",
        "body": "\"beebeacon\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:overriderowaction": {
        "prefix": "tag+overriderowaction",
        "body": "\"overriderowaction\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:oceanwhirlportal": {
        "prefix": "tag+oceanwhirlportal",
        "body": "\"oceanwhirlportal\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:oceanfishingfocus": {
        "prefix": "tag+oceanfishingfocus",
        "body": "\"oceanfishingfocus\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:nutrientsvision": {
        "prefix": "tag+nutrientsvision",
        "body": "\"nutrientsvision\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:stageactor": {
        "prefix": "tag+stageactor",
        "body": "\"stageactor\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:notdrawable": {
        "prefix": "tag+notdrawable",
        "body": "\"notdrawable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:notaunt": {
        "prefix": "tag+notaunt",
        "body": "\"notaunt\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:daylight": {
        "prefix": "tag+daylight",
        "body": "\"daylight\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:notarget": {
        "prefix": "tag+notarget",
        "body": "\"notarget\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:dumbbell": {
        "prefix": "tag+dumbbell",
        "body": "\"dumbbell\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:nospoiledfood": {
        "prefix": "tag+nospoiledfood",
        "body": "\"nospoiledfood\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:mime": {
        "prefix": "tag+mime",
        "body": "\"mime\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:giftmachine": {
        "prefix": "tag+giftmachine",
        "body": "\"giftmachine\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:dogrider": {
        "prefix": "tag+dogrider",
        "body": "\"dogrider\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:noauradamage": {
        "prefix": "tag+noauradamage",
        "body": "\"noauradamage\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:no_hideandseek": {
        "prefix": "tag+no_hideandseek",
        "body": "\"no_hideandseek\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:no_force_grow": {
        "prefix": "tag+no_force_grow",
        "body": "\"no_force_grow\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:mustforceattack": {
        "prefix": "tag+mustforceattack",
        "body": "\"mustforceattack\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:needswaxspray": {
        "prefix": "tag+needswaxspray",
        "body": "\"needswaxspray\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:near_kitcoonden": {
        "prefix": "tag+near_kitcoonden",
        "body": "\"near_kitcoonden\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:nomagic": {
        "prefix": "tag+nomagic",
        "body": "\"nomagic\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:storagerobot": {
        "prefix": "tag+storagerobot",
        "body": "\"storagerobot\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:channelingfan": {
        "prefix": "tag+channelingfan",
        "body": "\"channelingfan\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:multiplayer_portal": {
        "prefix": "tag+multiplayer_portal",
        "body": "\"multiplayer_portal\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:mufflehat": {
        "prefix": "tag+mufflehat",
        "body": "\"mufflehat\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:insect": {
        "prefix": "tag+insect",
        "body": "\"insect\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:mosquitomusk": {
        "prefix": "tag+mosquitomusk",
        "body": "\"mosquitomusk\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:moonmushroom": {
        "prefix": "tag+moonmushroom",
        "body": "\"moonmushroom\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:moose": {
        "prefix": "tag+moose",
        "body": "\"moose\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:hitched": {
        "prefix": "tag+hitched",
        "body": "\"hitched\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:punch": {
        "prefix": "tag+punch",
        "body": "\"punch\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:moonstorm_glass": {
        "prefix": "tag+moonstorm_glass",
        "body": "\"moonstorm_glass\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:moonportalkey": {
        "prefix": "tag+moonportalkey",
        "body": "\"moonportalkey\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:archive_waypoint": {
        "prefix": "tag+archive_waypoint",
        "body": "\"archive_waypoint\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:appraiser": {
        "prefix": "tag+appraiser",
        "body": "\"appraiser\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:MONKEY_CURSE_2": {
        "prefix": "tag+MONKEY_CURSE_2",
        "body": "\"MONKEY_CURSE_2\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:installations": {
        "prefix": "tag+installations",
        "body": "\"installations\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:mosquito": {
        "prefix": "tag+mosquito",
        "body": "\"mosquito\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:steeringwheel": {
        "prefix": "tag+steeringwheel",
        "body": "\"steeringwheel\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:freezable": {
        "prefix": "tag+freezable",
        "body": "\"freezable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:moon_altar_marker": {
        "prefix": "tag+moon_altar_marker",
        "body": "\"moon_altar_marker\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:pump": {
        "prefix": "tag+pump",
        "body": "\"pump\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:monstermeat": {
        "prefix": "tag+monstermeat",
        "body": "\"monstermeat\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:monkey_token": {
        "prefix": "tag+monkey_token",
        "body": "\"monkey_token\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:monkey": {
        "prefix": "tag+monkey",
        "body": "\"monkey\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:beequeen": {
        "prefix": "tag+beequeen",
        "body": "\"beequeen\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:mole": {
        "prefix": "tag+mole",
        "body": "\"mole\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:minion": {
        "prefix": "tag+minion",
        "body": "\"minion\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:minigameitem": {
        "prefix": "tag+minigameitem",
        "body": "\"minigameitem\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:minigame_participator": {
        "prefix": "tag+minigame_participator",
        "body": "\"minigame_participator\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:minesprung": {
        "prefix": "tag+minesprung",
        "body": "\"minesprung\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:mineactive": {
        "prefix": "tag+mineactive",
        "body": "\"mineactive\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:mine": {
        "prefix": "tag+mine",
        "body": "\"mine\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:companion:随从": {
        "prefix": "tag+companion",
        "body": "\"companion\"",
        "description": " ※Name: 随从\n ※Class: 实体 | Prefab\n ※Description: 正在玩家雇佣的生物、切斯特和哈奇\n ※Contributor: \n "
    },
    "tag:mightiness_normal": {
        "prefix": "tag+mightiness_normal",
        "body": "\"mightiness_normal\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:crewmember": {
        "prefix": "tag+crewmember",
        "body": "\"crewmember\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:healerbuffs": {
        "prefix": "tag+healerbuffs",
        "body": "\"healerbuffs\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:miasmaimmune:": {
        "prefix": "tag+miasmaimmune",
        "body": "\"miasmaimmune\"",
        "description": " ※Name: \n ※Class: 物品 | Inventory Item\n ※Description: 免疫黑暗瘴气的掉血效果（不免疫减速和视野降低）\n ※Contributor: \n "
    },
    "tag:miasma": {
        "prefix": "tag+miasma",
        "body": "\"miasma\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:metal": {
        "prefix": "tag+metal",
        "body": "\"metal\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:mermfluent": {
        "prefix": "tag+mermfluent",
        "body": "\"mermfluent\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:mermarmorupgradedhat": {
        "prefix": "tag+mermarmorupgradedhat",
        "body": "\"mermarmorupgradedhat\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:mermarmorhat": {
        "prefix": "tag+mermarmorhat",
        "body": "\"mermarmorhat\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:merm_soil_blocker": {
        "prefix": "tag+merm_soil_blocker",
        "body": "\"merm_soil_blocker\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:merm": {
        "prefix": "tag+merm",
        "body": "\"merm\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:meleeweapon": {
        "prefix": "tag+meleeweapon",
        "body": "\"meleeweapon\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:meat_carcass": {
        "prefix": "tag+meat_carcass",
        "body": "\"meat_carcass\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:meat": {
        "prefix": "tag+meat",
        "body": "\"meat\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:projectile": {
        "prefix": "tag+projectile",
        "body": "\"projectile\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:phonograph_record": {
        "prefix": "tag+phonograph_record",
        "body": "\"phonograph_record\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:dustable": {
        "prefix": "tag+dustable",
        "body": "\"dustable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:mast": {
        "prefix": "tag+mast",
        "body": "\"mast\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:mapspotrevealer": {
        "prefix": "tag+mapspotrevealer",
        "body": "\"mapspotrevealer\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:manrabbit": {
        "prefix": "tag+manrabbit",
        "body": "\"manrabbit\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:hive": {
        "prefix": "tag+hive",
        "body": "\"hive\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:magicgrowth": {
        "prefix": "tag+magicgrowth",
        "body": "\"magicgrowth\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:winch_ready": {
        "prefix": "tag+winch_ready",
        "body": "\"winch_ready\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:lunarthrall_plant": {
        "prefix": "tag+lunarthrall_plant",
        "body": "\"lunarthrall_plant\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:lunarrift_portal": {
        "prefix": "tag+lunarrift_portal",
        "body": "\"lunarrift_portal\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:lunar_forge": {
        "prefix": "tag+lunar_forge",
        "body": "\"lunar_forge\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:lordfruitfly": {
        "prefix": "tag+lordfruitfly",
        "body": "\"lordfruitfly\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:stone": {
        "prefix": "tag+stone",
        "body": "\"stone\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:limited_chair": {
        "prefix": "tag+limited_chair",
        "body": "\"limited_chair\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:likewateroffducksback": {
        "prefix": "tag+likewateroffducksback",
        "body": "\"likewateroffducksback\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:lightningrod": {
        "prefix": "tag+lightningrod",
        "body": "\"lightningrod\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:lightcontainer": {
        "prefix": "tag+lightcontainer",
        "body": "\"lightcontainer\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:light": {
        "prefix": "tag+light",
        "body": "\"light\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:lavae": {
        "prefix": "tag+lavae",
        "body": "\"lavae\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:lavaarena_fossilizedebris": {
        "prefix": "tag+lavaarena_fossilizedebris",
        "body": "\"lavaarena_fossilizedebris\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:battlesinger": {
        "prefix": "tag+battlesinger",
        "body": "\"battlesinger\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:largecreature": {
        "prefix": "tag+largecreature",
        "body": "\"largecreature\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:knockbackdelayinteraction": {
        "prefix": "tag+knockbackdelayinteraction",
        "body": "\"knockbackdelayinteraction\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:klaussackkey": {
        "prefix": "tag+klaussackkey",
        "body": "\"klaussackkey\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:kitcoon": {
        "prefix": "tag+kitcoon",
        "body": "\"kitcoon\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:jostlepick": {
        "prefix": "tag+jostlepick",
        "body": "\"jostlepick\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:isdead": {
        "prefix": "tag+isdead",
        "body": "\"isdead\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:is_row_failing": {
        "prefix": "tag+is_row_failing",
        "body": "\"is_row_failing\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:is_heaving": {
        "prefix": "tag+is_heaving",
        "body": "\"is_heaving\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:grower": {
        "prefix": "tag+grower",
        "body": "\"grower\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:inactive": {
        "prefix": "tag+inactive",
        "body": "\"inactive\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:ignorewalkableplatforms": {
        "prefix": "tag+ignorewalkableplatforms",
        "body": "\"ignorewalkableplatforms\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:hasfurnituredecoritem": {
        "prefix": "tag+hasfurnituredecoritem",
        "body": "\"hasfurnituredecoritem\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:hound": {
        "prefix": "tag+hound",
        "body": "\"hound\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:bishop": {
        "prefix": "tag+bishop",
        "body": "\"bishop\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:efficient_sleeper:": {
        "prefix": "tag+efficient_sleeper",
        "body": "\"efficient_sleeper\"",
        "description": " ※Name: \n ※Class: 角色 | Character\n ※Description: 高效睡眠 睡觉消耗饥饿值减半\n ※Contributor: \n "
    },
    "tag:magiciantool": {
        "prefix": "tag+magiciantool",
        "body": "\"magiciantool\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:hitcher_locked": {
        "prefix": "tag+hitcher_locked",
        "body": "\"hitcher_locked\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:rideable": {
        "prefix": "tag+rideable",
        "body": "\"rideable\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:hermitcrab_marker": {
        "prefix": "tag+hermitcrab_marker",
        "body": "\"hermitcrab_marker\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:herdmember": {
        "prefix": "tag+herdmember",
        "body": "\"herdmember\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:_health": {
        "prefix": "tag+_health",
        "body": "\"_health\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:swimming": {
        "prefix": "tag+swimming",
        "body": "\"swimming\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:hat": {
        "prefix": "tag+hat",
        "body": "\"hat\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:battlesong": {
        "prefix": "tag+battlesong",
        "body": "\"battlesong\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:exposure": {
        "prefix": "tag+exposure",
        "body": "\"exposure\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:virtualocean": {
        "prefix": "tag+virtualocean",
        "body": "\"virtualocean\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:groundhole": {
        "prefix": "tag+groundhole",
        "body": "\"groundhole\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:has_prize": {
        "prefix": "tag+has_prize",
        "body": "\"has_prize\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:ingym": {
        "prefix": "tag+ingym",
        "body": "\"ingym\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:halloweencandy": {
        "prefix": "tag+halloweencandy",
        "body": "\"halloweencandy\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:handfed": {
        "prefix": "tag+handfed",
        "body": "\"handfed\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:beard_sack_3": {
        "prefix": "tag+beard_sack_3",
        "body": "\"beard_sack_3\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:dualsoul": {
        "prefix": "tag+dualsoul",
        "body": "\"dualsoul\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:tape": {
        "prefix": "tag+tape",
        "body": "\"tape\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:grotto_war_wall": {
        "prefix": "tag+grotto_war_wall",
        "body": "\"grotto_war_wall\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:notraptrigger": {
        "prefix": "tag+notraptrigger",
        "body": "\"notraptrigger\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:good_sleep_aid": {
        "prefix": "tag+good_sleep_aid",
        "body": "\"good_sleep_aid\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:carnivalgame_part": {
        "prefix": "tag+carnivalgame_part",
        "body": "\"carnivalgame_part\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:shell": {
        "prefix": "tag+shell",
        "body": "\"shell\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:ghost": {
        "prefix": "tag+ghost",
        "body": "\"ghost\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:quagmire_cheapskate": {
        "prefix": "tag+quagmire_cheapskate",
        "body": "\"quagmire_cheapskate\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:DECOR:": {
        "prefix": "tag+DECOR",
        "body": "\"DECOR\"",
        "description": " ※Name: \n ※Class: 通用 | Universal\n ※Description: 有这个标签的物品说明它是个装饰物\n ※Contributor: \n "
    },
    "tag:gestaltnoloot": {
        "prefix": "tag+gestaltnoloot",
        "body": "\"gestaltnoloot\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:cansit": {
        "prefix": "tag+cansit",
        "body": "\"cansit\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:furnituredecortaker": {
        "prefix": "tag+furnituredecortaker",
        "body": "\"furnituredecortaker\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:fulllighter": {
        "prefix": "tag+fulllighter",
        "body": "\"fulllighter\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:fullfertile": {
        "prefix": "tag+fullfertile",
        "body": "\"fullfertile\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:fueldepleted": {
        "prefix": "tag+fueldepleted",
        "body": "\"fueldepleted\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:fruitdragon": {
        "prefix": "tag+fruitdragon",
        "body": "\"fruitdragon\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:_builder": {
        "prefix": "tag+_builder",
        "body": "\"_builder\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:quickactivation": {
        "prefix": "tag+quickactivation",
        "body": "\"quickactivation\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:floaterobject": {
        "prefix": "tag+floaterobject",
        "body": "\"floaterobject\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:ammoloaded": {
        "prefix": "tag+ammoloaded",
        "body": "\"ammoloaded\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:critterlab": {
        "prefix": "tag+critterlab",
        "body": "\"critterlab\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:fire": {
        "prefix": "tag+fire",
        "body": "\"fire\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:townportal": {
        "prefix": "tag+townportal",
        "body": "\"townportal\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:farm_plant": {
        "prefix": "tag+farm_plant",
        "body": "\"farm_plant\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:fan": {
        "prefix": "tag+fan",
        "body": "\"fan\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:evergreens": {
        "prefix": "tag+evergreens",
        "body": "\"evergreens\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:elixirbrewer": {
        "prefix": "tag+elixirbrewer",
        "body": "\"elixirbrewer\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:quagmire_shopper": {
        "prefix": "tag+quagmire_shopper",
        "body": "\"quagmire_shopper\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:groundspike": {
        "prefix": "tag+groundspike",
        "body": "\"groundspike\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:donotautopick": {
        "prefix": "tag+donotautopick",
        "body": "\"donotautopick\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:mushtree": {
        "prefix": "tag+mushtree",
        "body": "\"mushtree\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:diseased": {
        "prefix": "tag+diseased",
        "body": "\"diseased\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:smallmeat": {
        "prefix": "tag+smallmeat",
        "body": "\"smallmeat\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:firefly": {
        "prefix": "tag+firefly",
        "body": "\"firefly\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:security_powerpoint": {
        "prefix": "tag+security_powerpoint",
        "body": "\"security_powerpoint\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:crabking": {
        "prefix": "tag+crabking",
        "body": "\"crabking\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:crab_mob_knight": {
        "prefix": "tag+crab_mob_knight",
        "body": "\"crab_mob_knight\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:crab_mob": {
        "prefix": "tag+crab_mob",
        "body": "\"crab_mob\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:constructionsite": {
        "prefix": "tag+constructionsite",
        "body": "\"constructionsite\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:ghostlyfriend": {
        "prefix": "tag+ghostlyfriend",
        "body": "\"ghostlyfriend\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:canbait": {
        "prefix": "tag+canbait",
        "body": "\"canbait\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:boatracecheckpoint": {
        "prefix": "tag+boatracecheckpoint",
        "body": "\"boatracecheckpoint\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:boatmagnet": {
        "prefix": "tag+boatmagnet",
        "body": "\"boatmagnet\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:molebait": {
        "prefix": "tag+molebait",
        "body": "\"molebait\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:beefalo": {
        "prefix": "tag+beefalo",
        "body": "\"beefalo\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:beaverness": {
        "prefix": "tag+beaverness",
        "body": "\"beaverness\"",
        "description": " ※Description: UNKNOWN\n ※Contributor: \n "
    },
    "tag:balloon:气球": {
        "prefix": "tag+balloon",
        "body": "\"balloon\"",
        "description": " ※Name: 气球\n ※Class: 物品 | Inventory Item\n ※Description: 维斯的气球\n ※Contributor: \n "
    },
    "math.acos:计算反余弦值。": {
        "prefix": "math.acos",
        "body": "math.acos(${1:x})",
        "description": " ※Params: \n   (x)<number>[数值] \n ※Returns: <number>[反余弦值] \n ※Description: 计算反余弦值。\n ※Contributor: @lan"
    },
    "math.atan:计算反正切值。": {
        "prefix": "math.atan",
        "body": "math.atan(${1:x})",
        "description": " ※Params: \n   (x)<number>[数值] \n ※Returns: <number>[反正切值] \n ※Description: 计算反正切值。\n ※Contributor: @lan"
    },
    "math.pi:圆周率 π 的值。": {
        "prefix": "math.pi",
        "body": "math.pi()",
        "description": "\n ※Returns: <number>[圆周率 π 的值] \n ※Description: 圆周率 π 的值。\n ※Contributor: @lan"
    },
    "math.clamp:将数值限制在指定的范围内。(非标准库)": {
        "prefix": "math.clamp",
        "body": "math.clamp(${1:value},${2:minValue},${3:maxValue})",
        "description": " ※Params: \n   (value)<number>[待限制的数值] \n   (minValue)<number>[最小值] \n   (maxValue)<number>[最大值] \n ※Returns: <number>[限制后的数值] \n ※Description: 将数值限制在指定的范围内。(非标准库)\n ※Contributor: @lan"
    },
    "math.randomseed:设置随机数种子。": {
        "prefix": "math.randomseed",
        "body": "math.randomseed(${1:s})",
        "description": " ※Params: \n   (s)<number>[种子值] \n ※Description: 设置随机数种子。\n ※Contributor: @lan"
    },
    "math.huge:返回最大的浮点数。": {
        "prefix": "math.huge",
        "body": "math.huge()",
        "description": "\n ※Returns: <number>[最大的浮点数] \n ※Description: 返回最大的浮点数。\n ※Contributor: @lan"
    },
    "math.range:在指定区间生成一个数组": {
        "prefix": "math.range",
        "body": "math.range(${1:start},${2:stop},${3:step})",
        "description": " ※Params: \n   (start)<number>[起始值] \n   (stop)<number>[终点值] \n   (step)<number>[步长(不填为1)] \n ※Returns: <table>[返回一个数组] \n ※Description: 在指定区间生成一个数组\n ※Contributor: @lan"
    },
    "math.tan:计算给定角度的正切值。": {
        "prefix": "math.tan",
        "body": "math.tan(${1:x})",
        "description": " ※Params: \n   (x)<number>[角度（弧度制）] \n ※Returns: <number>[正切值] \n ※Description: 计算给定角度的正切值。\n ※Contributor: @lan"
    },
    "math.tanh:计算双曲正切值。": {
        "prefix": "math.tanh",
        "body": "math.tanh(${1:x})",
        "description": " ※Params: \n   (x)<number>[数值] \n ※Returns: <number>[双曲正切值] \n ※Description: 计算双曲正切值。\n ※Contributor: @lan"
    },
    "math.ceil:向上取整。": {
        "prefix": "math.ceil",
        "body": "math.ceil(${1:x})",
        "description": " ※Params: \n   (x)<number>[数值] \n ※Returns: <number>[向上取整后的结果] \n ※Description: 向上取整。\n ※Contributor: @lan"
    },
    "math.ldexp:计算 x * 2^n 的值。": {
        "prefix": "math.ldexp",
        "body": "math.ldexp(${1:x},${2:n})",
        "description": " ※Params: \n   (x)<number>[基数] \n   (n)<number>[指数] \n ※Returns: <number>[x * 2^n 的结果] \n ※Description: 计算 x * 2^n 的值。\n ※Contributor: @lan"
    },
    "math.mod:计算两数相除的余数。": {
        "prefix": "math.mod",
        "body": "math.mod(${1:x},${2:y})",
        "description": " ※Params: \n   (x)<number>[被除数] \n   (y)<number>[除数] \n ※Returns: <number>[余数] \n ※Description: 计算两数相除的余数。\n ※Contributor: @lan"
    },
    "math.sinh:计算双曲正弦值。": {
        "prefix": "math.sinh",
        "body": "math.sinh(${1:x})",
        "description": " ※Params: \n   (x)<number>[数值] \n ※Returns: <number>[双曲正弦值] \n ※Description: 计算双曲正弦值。\n ※Contributor: @lan"
    },
    "math.exp:计算 e 的指数。": {
        "prefix": "math.exp",
        "body": "math.exp(${1:x})",
        "description": " ※Params: \n   (x)<number>[指数] \n ※Returns: <number>[e 的指数] \n ※Description: 计算 e 的指数。\n ※Contributor: @lan"
    },
    "math.inf:1/0(非标准库)": {
        "prefix": "math.inf",
        "body": "math.inf()",
        "description": "\n ※Description: 1/0(非标准库)\n ※Contributor: @lan"
    },
    "math.sqrt:计算平方根。": {
        "prefix": "math.sqrt",
        "body": "math.sqrt(${1:x})",
        "description": " ※Params: \n   (x)<number>[数值] \n ※Returns: <number>[平方根] \n ※Description: 计算平方根。\n ※Contributor: @lan"
    },
    "math.random:生成随机数。": {
        "prefix": "math.random",
        "body": "math.random(${1:m},${2:n})",
        "description": " ※Params: \n   (m)<number>[最小值（可选）] \n   (n)<number>[最大值（可选）] \n ※Returns: <number>[随机数] \n ※Description: 生成随机数。\n ※Contributor: @lan"
    },
    "math.modf:分离数值的整数部分和小数部分。": {
        "prefix": "math.modf",
        "body": "math.modf(${1:x})",
        "description": " ※Params: \n   (x)<number>[数值] \n ※Returns: <number>[整数部分] <number>[小数部分] \n ※Description: 分离数值的整数部分和小数部分。\n ※Contributor: @lan"
    },
    "math.log10:计算以 10 为底的对数。": {
        "prefix": "math.log10",
        "body": "math.log10(${1:x})",
        "description": " ※Params: \n   (x)<number>[数值] \n ※Returns: <number>[以 10 为底的对数] \n ※Description: 计算以 10 为底的对数。\n ※Contributor: @lan"
    },
    "math.sin:计算给定角度的正弦值。": {
        "prefix": "math.sin",
        "body": "math.sin(${1:x})",
        "description": " ※Params: \n   (x)<number>[角度（弧度制）] \n ※Returns: <number>[正弦值] \n ※Description: 计算给定角度的正弦值。\n ※Contributor: @lan"
    },
    "math.frexp:将数字表示为 x * 2^n 的形式，返回 x 和 n。": {
        "prefix": "math.frexp",
        "body": "math.frexp(${1:x})",
        "description": " ※Params: \n   (x)<number>[要分解的浮点数] \n ※Returns: <number>[范围在 [0.5, 1) 之间的浮点数] <integer>[指数部分] \n ※Description: 将数字表示为 x * 2^n 的形式，返回 x 和 n。\n ※Contributor: @lan"
    },
    "math.abs:计算绝对值。": {
        "prefix": "math.abs",
        "body": "math.abs(${1:x})",
        "description": " ※Params: \n   (x)<number>[数值] \n ※Returns: <number>[绝对值] \n ※Description: 计算绝对值。\n ※Contributor: @lan"
    },
    "math.atan2:计算给定坐标 (x, y) 的反正切值。": {
        "prefix": "math.atan2",
        "body": "math.atan2(${1:y},${2:x})",
        "description": " ※Params: \n   (y)<number>[y 坐标] \n   (x)<number>[x 坐标] \n ※Returns: <number>[反正切值] \n ※Description: 计算给定坐标 (x, y) 的反正切值。\n ※Contributor: @lan"
    },
    "math.cos:计算给定角度的余弦值。": {
        "prefix": "math.cos",
        "body": "math.cos(${1:x})",
        "description": " ※Params: \n   (x)<number>[角度（弧度制）] \n ※Returns: <number>[余弦值] \n ※Description: 计算给定角度的余弦值。\n ※Contributor: @lan"
    },
    "math.pow:计算 x 的 y 次方。": {
        "prefix": "math.pow",
        "body": "math.pow(${1:x},${2:y})",
        "description": " ※Params: \n   (x)<number>[基数] \n   (y)<number>[指数] \n ※Returns: <number>[x 的 y 次方] \n ※Description: 计算 x 的 y 次方。\n ※Contributor: @lan"
    },
    "math.min:计算最小值。": {
        "prefix": "math.min",
        "body": "math.min(${1:x},${2:y})",
        "description": " ※Params: \n   (x)<number>[数值] \n   (y)<number>[数值] \n ※Returns: <number>[最小值] \n ※Description: 计算最小值。\n ※Contributor: @lan"
    },
    "math.deg:将弧度转换为角度。": {
        "prefix": "math.deg",
        "body": "math.deg(${1:x})",
        "description": " ※Params: \n   (x)<number>[弧度] \n ※Returns: <number>[角度] \n ※Description: 将弧度转换为角度。\n ※Contributor: @lan"
    },
    "math.fmod:计算两数相除的浮点余数。": {
        "prefix": "math.fmod",
        "body": "math.fmod(${1:x},${2:y})",
        "description": " ※Params: \n   (x)<number>[被除数] \n   (y)<number>[除数] \n ※Returns: <number>[浮点余数] \n ※Description: 计算两数相除的浮点余数。\n ※Contributor: @lan"
    },
    "math.floor:向下取整。": {
        "prefix": "math.floor",
        "body": "math.floor(${1:x})",
        "description": " ※Params: \n   (x)<number>[数值] \n ※Returns: <number>[向下取整后的结果] \n ※Description: 向下取整。\n ※Contributor: @lan"
    },
    "math.diff:返回两个数的差值的绝对值(非标准库)": {
        "prefix": "math.diff",
        "body": "math.diff(${1:a},${2:b})",
        "description": " ※Params: \n   (a)<number>[] \n   (b)<number>[] \n ※Returns: <number>[差值的绝对值] \n ※Description: 返回两个数的差值的绝对值(非标准库)\n ※Contributor: @lan"
    },
    "math.cosh:计算双曲余弦值。": {
        "prefix": "math.cosh",
        "body": "math.cosh(${1:x})",
        "description": " ※Params: \n   (x)<number>[数值] \n ※Returns: <number>[双曲余弦值] \n ※Description: 计算双曲余弦值。\n ※Contributor: @lan"
    },
    "math.rad:将角度转换为弧度。": {
        "prefix": "math.rad",
        "body": "math.rad(${1:x})",
        "description": " ※Params: \n   (x)<number>[角度] \n ※Returns: <number>[弧度] \n ※Description: 将角度转换为弧度。\n ※Contributor: @lan"
    },
    "math.asin:计算反正弦值。": {
        "prefix": "math.asin",
        "body": "math.asin(${1:x})",
        "description": " ※Params: \n   (x)<number>[数值] \n ※Returns: <number>[反正弦值] \n ※Description: 计算反正弦值。\n ※Contributor: @lan"
    },
    "math.max:计算最大值。": {
        "prefix": "math.max",
        "body": "math.max(${1:x},${2:y})",
        "description": " ※Params: \n   (x)<number>[数值] \n   (y)<number>[数值] \n ※Returns: <number>[最大值] \n ※Description: 计算最大值。\n ※Contributor: @lan"
    },
    "math.log:计算自然对数。": {
        "prefix": "math.log",
        "body": "math.log(${1:x},${2:base})",
        "description": " ※Params: \n   (x)<number>[数值] \n   (base)<number>[底数（可选，默认为 e）] \n ※Returns: <number>[自然对数或以 base 为底的对数] \n ※Description: 计算自然对数。\n ※Contributor: @lan"
    },
    "table.insert:在表中插入元素": {
        "prefix": "table.insert",
        "body": "table.insert(${1:t},${2:value})",
        "description": " ※Params: \n   (t)<table>[要插入元素的表] \n   (value)<any>[要插入的值] \n ※Description: 在表中插入元素\n ※Contributor: @lan"
    },
    "table.setfield:设置嵌套字段的值(非标准库)": {
        "prefix": "table.setfield",
        "body": "table.setfield(${1:t},${2:key},${3:value})",
        "description": " ※Params: \n   (t)<table>[要设置字段的表] \n   (key)<string>[一个点分隔的字符串，表示要设置的字段路径] \n   (value)<any>[要设置的字段值] \n ※Description: 设置嵌套字段的值(非标准库)\n ※Contributor: @lan 可以处理一些特殊情况，如在数组的末尾添加元素或创建嵌套表 "
    },
    "table.reverse:反转数组表中的元素(非标准库)": {
        "prefix": "table.reverse",
        "body": "table.reverse(${1:t})",
        "description": " ※Params: \n   (t)<table>[要反转的表] \n ※Returns: <table>[反转后的表] \n ※Description: 反转数组表中的元素(非标准库)\n ※Contributor: @lan"
    },
    "table.findfield:在表中查找字段(非标准库)": {
        "prefix": "table.findfield",
        "body": "table.findfield(${1:Table},${2:Name})",
        "description": " ※Params: \n   (Table)<table>[要查找字段的表] \n   (Name)<any>[要查找的字段名称] \n ※Returns: <string>[字段路径] \n ※Description: 在表中查找字段(非标准库)\n ※Contributor: @lan"
    },
    "table.concat:将表中元素按分隔符连接成一个字符串(非标准库)": {
        "prefix": "table.concat",
        "body": "table.concat(${1:t},${2:sep})",
        "description": " ※Params: \n   (t)<table>[要连接的字符串表] \n   (sep)<string>[分隔符（可选）] \n ※Returns: <string>[连接后的字符串] \n ※Description: 将表中元素按分隔符连接成一个字符串(非标准库)\n ※Contributor: @lan"
    },
    "table.keysareidentical:检查两个表的键是否相同(非标准库)": {
        "prefix": "table.keysareidentical",
        "body": "table.keysareidentical(${1:t1},${2:t2})",
        "description": " ※Params: \n   (t1)<table>[要比较的第一个表] \n   (t2)<table>[要比较的第二个表] \n ※Returns: <boolean>[如果键相同则返回true，否则返回false] \n ※Description: 检查两个表的键是否相同(非标准库)\n ※Contributor: @lan"
    },
    "table.reverselookup:通过值找键(非标准库)": {
        "prefix": "table.reverselookup",
        "body": "table.reverselookup(${1:t},${2:value})",
        "description": " ※Params: \n   (t)<table>[要查找的表] \n   (value)<any>[要查找的值] \n ※Returns: <any>[对应的键，如果找不到则返回nil] \n ※Description: 通过值找键(非标准库)\n ※Contributor: @lan 如果表中有多个相同的值，这个函数只会返回第一个找到的键。"
    },
    "table.remove:移除表中的一个元素": {
        "prefix": "table.remove",
        "body": "table.remove(${1:t},${2:index})",
        "description": " ※Params: \n   (t)<table>[要移除元素的表] \n   (index)<number>[要移除元素的索引] \n ※Description: 移除表中的一个元素\n ※Contributor: @lan"
    },
    "table.containskey:检查表是否包含某个键(非标准库)": {
        "prefix": "table.containskey",
        "body": "table.containskey(${1:t},${2:key})",
        "description": " ※Params: \n   (t)<table>[要检查的表] \n   (key)<any>[要检查的键] \n ※Returns: <boolean>[如果包含键则返回true，否则返回false] \n ※Description: 检查表是否包含某个键(非标准库)\n ※Contributor: @lan"
    },
    "table.getkeys:获取表中所有的键(非标准库)": {
        "prefix": "table.getkeys",
        "body": "table.getkeys(${1:t})",
        "description": " ※Params: \n   (t)<table>[要获取键的表] \n ※Returns: <table>[包含所有键的表] \n ※Description: 获取表中所有的键(非标准库)\n ※Contributor: @lan"
    },
    "table.inspect:返回表的字符串表示，用于调试(非标准库)": {
        "prefix": "table.inspect",
        "body": "table.inspect(${1:t})",
        "description": " ※Params: \n   (t)<table>[要检查的表] \n ※Returns: <string>[表的字符串表示] \n ※Description: 返回表的字符串表示，用于调试(非标准库)\n ※Contributor: @lan 不是很好用,如果你表写的乱七八糟的,就更别用了"
    },
    "table.sort:排序": {
        "prefix": "table.sort",
        "body": "table.sort(${1:tbl})",
        "description": " ※Params: \n   (tbl)<table>[要排序的表] \n ※Description: 排序\n ※Contributor: @lan"
    },
    "table.foreach:": {
        "prefix": "table.foreach",
        "body": "table.foreach(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: \n ※Contributor: @"
    },
    "table.foreachi:": {
        "prefix": "table.foreachi",
        "body": "table.foreachi(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: \n ※Contributor: @"
    },
    "table.getn:获取作为数组时表的长度(非标准库)": {
        "prefix": "table.getn",
        "body": "table.getn(${1:t})",
        "description": " ※Params: \n   (t)<table>[要获取长度的表] \n ※Returns: <number>[表的长度] \n ※Description: 获取作为数组时表的长度(非标准库)\n ※Contributor: @lan"
    },
    "table.removearrayvalue:从数组中移除一个值(非标准库)": {
        "prefix": "table.removearrayvalue",
        "body": "table.removearrayvalue(${1:t},${2:value})",
        "description": " ※Params: \n   (t)<table>[数组表] \n   (value)<any>[要移除的值] \n ※Description: 从数组中移除一个值(非标准库)\n ※Contributor: @lan"
    },
    "table.maxn:获取表中最大的索引值(非标准库)": {
        "prefix": "table.maxn",
        "body": "table.maxn(${1:t})",
        "description": " ※Params: \n   (t)<table>[要查找最大索引的表] \n ※Returns: <number>[表中最大的索引值] \n ※Description: 获取表中最大的索引值(非标准库)\n ※Contributor: @lan"
    },
    "table.contains:检查表是否包含某个值(非标准库)": {
        "prefix": "table.contains",
        "body": "table.contains(${1:t},${2:value})",
        "description": " ※Params: \n   (t)<table>[要检查的表] \n   (value)<any>[要检查的值] \n ※Returns: <boolean>[如果包含值则返回true，否则返回false] \n ※Description: 检查表是否包含某个值(非标准库)\n ※Contributor: @lan"
    },
    "table.setn:": {
        "prefix": "table.setn",
        "body": "table.setn(${1:})",
        "description": " ※Params: \n   ()<>[] \n ※Description: \n ※Contributor: @lan"
    },
    "table.invert:反转表中的键和值(非标准库)": {
        "prefix": "table.invert",
        "body": "table.invert(${1:t})",
        "description": " ※Params: \n   (t)<table>[要反转的表] \n ※Returns: <table>[键值反转后的表] \n ※Description: 反转表中的键和值(非标准库)\n ※Contributor: @lan"
    },
    "table.removetablevalue:移除表中的一个值(非标准库)": {
        "prefix": "table.removetablevalue",
        "body": "table.removetablevalue(${1:t},${2:value})",
        "description": " ※Params: \n   (t)<table>[要移除值的表] \n   (value)<any>[要移除的值] \n ※Returns: <any>[返回被移除的值] \n ※Description: 移除表中的一个值(非标准库)\n ※Contributor: @lan 如果表中有多个相同的值，它只会移除第一个找到的值"
    },
    "table.findpath:在嵌套的表中查找某个键的路径(非标准库)": {
        "prefix": "table.findpath",
        "body": "table.findpath(${1:Table},${2:Names})",
        "description": " ※Params: \n   (Table)<table>[要搜索的嵌套表] \n   (Names)<any>[要查找的键名] \n ※Returns: <string>[键名的路径，如果找不到则返回nil] \n ※Description: 在嵌套的表中查找某个键的路径(非标准库)\n ※Contributor: @lan"
    },
    "table.count:计算表中元素的数量(非标准库)": {
        "prefix": "table.count",
        "body": "table.count(${1:t})",
        "description": " ※Params: \n   (t)<table>[要计数的表] \n ※Returns: <number>[表中元素的数量] \n ※Description: 计算表中元素的数量(非标准库)\n ※Contributor: @lan"
    },
    "table.getfield:通过字符串路径访问表中的嵌套字段(非标准库)": {
        "prefix": "table.getfield",
        "body": "table.getfield(${1:Table},${2:Name})",
        "description": " ※Params: \n   (Table)<table>[要获取字段的表] \n   (Name)<string>[要获取的字段名 例如我想获取Table.a.b.c，那么这里就是a.b.c] \n ※Returns: <any>[字段值] \n ※Description: 通过字符串路径访问表中的嵌套字段(非标准库)\n ※Contributor: @lan"
    },
    "table.typecheckedgetfield:安全地获取嵌套字段的值(非标准库)": {
        "prefix": "table.typecheckedgetfield",
        "body": "table.typecheckedgetfield(${1:Table},${2:Type},${3:...})",
        "description": " ※Params: \n   (Table)<table>[要获取字段的表] \n   (Type)<string>[要获取的类型] \n   (...)<any>[嵌套的字段名 例如我想获取Table.a.b.c，那么这里就是a,b,c] \n ※Returns: <any>[字段值，如果类型不匹配则返回nil] \n ※Description: 安全地获取嵌套字段的值(非标准库)\n ※Contributor: @lan 安全地获取嵌套字段的值，并在获取过程中进行类型检查"
    },
    "Component:components.recipestockpile": {
        "prefix": "components.recipestockpile",
        "body": "components.recipestockpile",
        "description": ""
    },
    "Component:components.cursable": {
        "prefix": "components.cursable",
        "body": "components.cursable",
        "description": ""
    },
    "Component:components.knownlocations": {
        "prefix": "components.knownlocations",
        "body": "components.knownlocations",
        "description": ""
    },
    "Component:components.ruinsshadelingspawner": {
        "prefix": "components.ruinsshadelingspawner",
        "body": "components.ruinsshadelingspawner",
        "description": ""
    },
    "Component:components.smotherer": {
        "prefix": "components.smotherer",
        "body": "components.smotherer",
        "description": ""
    },
    "Component:components.weather": {
        "prefix": "components.weather",
        "body": "components.weather",
        "description": ""
    },
    "Component:components.firedetector": {
        "prefix": "components.firedetector",
        "body": "components.firedetector",
        "description": ""
    },
    "Component:components.channelable": {
        "prefix": "components.channelable",
        "body": "components.channelable",
        "description": ""
    },
    "Component:components.fishingrod_replica": {
        "prefix": "components.fishingrod_replica",
        "body": "components.fishingrod_replica",
        "description": ""
    },
    "Component:components.hounded": {
        "prefix": "components.hounded",
        "body": "components.hounded",
        "description": ""
    },
    "Component:components.diseaseable": {
        "prefix": "components.diseaseable",
        "body": "components.diseaseable",
        "description": ""
    },
    "Component:components.boatcrew": {
        "prefix": "components.boatcrew",
        "body": "components.boatcrew",
        "description": ""
    },
    "Component:components.workmultiplier": {
        "prefix": "components.workmultiplier",
        "body": "components.workmultiplier",
        "description": ""
    },
    "Component:components.talker": {
        "prefix": "components.talker",
        "body": "components.talker",
        "description": ""
    },
    "Component:components.inspectable": {
        "prefix": "components.inspectable",
        "body": "components.inspectable",
        "description": ""
    },
    "Component:components.shard_autosaver": {
        "prefix": "components.shard_autosaver",
        "body": "components.shard_autosaver",
        "description": ""
    },
    "Component:components.planardamage": {
        "prefix": "components.planardamage",
        "body": "components.planardamage",
        "description": ""
    },
    "Component:components.skilltreeupdater": {
        "prefix": "components.skilltreeupdater",
        "body": "components.skilltreeupdater",
        "description": ""
    },
    "Component:components.sinkholespawner": {
        "prefix": "components.sinkholespawner",
        "body": "components.sinkholespawner",
        "description": ""
    },
    "Component:components.catcher": {
        "prefix": "components.catcher",
        "body": "components.catcher",
        "description": ""
    },
    "Component:components.stageactor": {
        "prefix": "components.stageactor",
        "body": "components.stageactor",
        "description": ""
    },
    "Component:components.roseinspectable": {
        "prefix": "components.roseinspectable",
        "body": "components.roseinspectable",
        "description": ""
    },
    "Component:components.rainimmunity": {
        "prefix": "components.rainimmunity",
        "body": "components.rainimmunity",
        "description": ""
    },
    "Component:components.lock": {
        "prefix": "components.lock",
        "body": "components.lock",
        "description": ""
    },
    "Component:components.klaussackloot": {
        "prefix": "components.klaussackloot",
        "body": "components.klaussackloot",
        "description": ""
    },
    "Component:components.appraisable": {
        "prefix": "components.appraisable",
        "body": "components.appraisable",
        "description": ""
    },
    "Component:components.carefulwalker": {
        "prefix": "components.carefulwalker",
        "body": "components.carefulwalker",
        "description": ""
    },
    "Component:components.heavyobstacleusetarget": {
        "prefix": "components.heavyobstacleusetarget",
        "body": "components.heavyobstacleusetarget",
        "description": ""
    },
    "Component:components.worldtemperature": {
        "prefix": "components.worldtemperature",
        "body": "components.worldtemperature",
        "description": ""
    },
    "Component:components.friendlevels": {
        "prefix": "components.friendlevels",
        "body": "components.friendlevels",
        "description": ""
    },
    "Component:components.boatdrifter": {
        "prefix": "components.boatdrifter",
        "body": "components.boatdrifter",
        "description": ""
    },
    "Component:components.grower": {
        "prefix": "components.grower",
        "body": "components.grower",
        "description": ""
    },
    "Component:components.petleash": {
        "prefix": "components.petleash",
        "body": "components.petleash",
        "description": ""
    },
    "Component:components.shadowsubmissive": {
        "prefix": "components.shadowsubmissive",
        "body": "components.shadowsubmissive",
        "description": ""
    },
    "Component:components.boatrotator": {
        "prefix": "components.boatrotator",
        "body": "components.boatrotator",
        "description": ""
    },
    "Component:components.aoespell": {
        "prefix": "components.aoespell",
        "body": "components.aoespell",
        "description": ""
    },
    "Component:components.sheltered": {
        "prefix": "components.sheltered",
        "body": "components.sheltered",
        "description": ""
    },
    "Component:components.mapspotrevealer": {
        "prefix": "components.mapspotrevealer",
        "body": "components.mapspotrevealer",
        "description": ""
    },
    "Component:components.distancefade": {
        "prefix": "components.distancefade",
        "body": "components.distancefade",
        "description": ""
    },
    "Component:components.healer": {
        "prefix": "components.healer",
        "body": "components.healer",
        "description": ""
    },
    "Component:components.grabbable": {
        "prefix": "components.grabbable",
        "body": "components.grabbable",
        "description": ""
    },
    "Component:components.winch": {
        "prefix": "components.winch",
        "body": "components.winch",
        "description": ""
    },
    "Component:components.worldoverseer": {
        "prefix": "components.worldoverseer",
        "body": "components.worldoverseer",
        "description": ""
    },
    "Component:components.skinner": {
        "prefix": "components.skinner",
        "body": "components.skinner",
        "description": ""
    },
    "Component:components.forcecompostable": {
        "prefix": "components.forcecompostable",
        "body": "components.forcecompostable",
        "description": ""
    },
    "Component:components.desolationspawner": {
        "prefix": "components.desolationspawner",
        "body": "components.desolationspawner",
        "description": ""
    },
    "Component:components.cookbookupdater": {
        "prefix": "components.cookbookupdater",
        "body": "components.cookbookupdater",
        "description": ""
    },
    "Component:components.shard_sinkholes": {
        "prefix": "components.shard_sinkholes",
        "body": "components.shard_sinkholes",
        "description": ""
    },
    "Component:components.markable": {
        "prefix": "components.markable",
        "body": "components.markable",
        "description": ""
    },
    "Component:components.summoningitem": {
        "prefix": "components.summoningitem",
        "body": "components.summoningitem",
        "description": ""
    },
    "Component:components.kitcoonden": {
        "prefix": "components.kitcoonden",
        "body": "components.kitcoonden",
        "description": ""
    },
    "Component:components.wateryprotection": {
        "prefix": "components.wateryprotection",
        "body": "components.wateryprotection",
        "description": ""
    },
    "Component:components.quagmire_hangriness": {
        "prefix": "components.quagmire_hangriness",
        "body": "components.quagmire_hangriness",
        "description": ""
    },
    "Component:components.clock": {
        "prefix": "components.clock",
        "body": "components.clock",
        "description": ""
    },
    "Component:components.charliecutscene": {
        "prefix": "components.charliecutscene",
        "body": "components.charliecutscene",
        "description": ""
    },
    "Component:components.followerherder": {
        "prefix": "components.followerherder",
        "body": "components.followerherder",
        "description": ""
    },
    "Component:components.boatring": {
        "prefix": "components.boatring",
        "body": "components.boatring",
        "description": ""
    },
    "Component:components.possessedaxe": {
        "prefix": "components.possessedaxe",
        "body": "components.possessedaxe",
        "description": ""
    },
    "Component:components.entitytracker": {
        "prefix": "components.entitytracker",
        "body": "components.entitytracker",
        "description": ""
    },
    "Component:components.attunable": {
        "prefix": "components.attunable",
        "body": "components.attunable",
        "description": ""
    },
    "Component:components.fishschool": {
        "prefix": "components.fishschool",
        "body": "components.fishschool",
        "description": ""
    },
    "Component:components.nutrients_visual_manager": {
        "prefix": "components.nutrients_visual_manager",
        "body": "components.nutrients_visual_manager",
        "description": ""
    },
    "Component:components.closeinspector": {
        "prefix": "components.closeinspector",
        "body": "components.closeinspector",
        "description": ""
    },
    "Component:components.preserver": {
        "prefix": "components.preserver",
        "body": "components.preserver",
        "description": ""
    },
    "Component:components.temperatureoverrider": {
        "prefix": "components.temperatureoverrider",
        "body": "components.temperatureoverrider",
        "description": ""
    },
    "Component:components.lunarthrall_plantspawner": {
        "prefix": "components.lunarthrall_plantspawner",
        "body": "components.lunarthrall_plantspawner",
        "description": ""
    },
    "Component:components.cookable可以烤的": {
        "prefix": "components.cookable",
        "body": "components.cookable",
        "description": "可以烤的"
    },
    "Component:components.singingshellmanager": {
        "prefix": "components.singingshellmanager",
        "body": "components.singingshellmanager",
        "description": ""
    },
    "Component:components.cookiecutterdrill": {
        "prefix": "components.cookiecutterdrill",
        "body": "components.cookiecutterdrill",
        "description": ""
    },
    "Component:components.playercontroller": {
        "prefix": "components.playercontroller",
        "body": "components.playercontroller",
        "description": ""
    },
    "Component:components.prototyper": {
        "prefix": "components.prototyper",
        "body": "components.prototyper",
        "description": ""
    },
    "Component:components.oceanfishingtackle": {
        "prefix": "components.oceanfishingtackle",
        "body": "components.oceanfishingtackle",
        "description": ""
    },
    "Component:components.fertilizable": {
        "prefix": "components.fertilizable",
        "body": "components.fertilizable",
        "description": ""
    },
    "Component:components.lighter": {
        "prefix": "components.lighter",
        "body": "components.lighter",
        "description": ""
    },
    "Component:components.moontrader": {
        "prefix": "components.moontrader",
        "body": "components.moontrader",
        "description": ""
    },
    "Component:components.furnituredecor": {
        "prefix": "components.furnituredecor",
        "body": "components.furnituredecor",
        "description": ""
    },
    "Component:components.deployhelper": {
        "prefix": "components.deployhelper",
        "body": "components.deployhelper",
        "description": ""
    },
    "Component:components.pocketwatch_dismantler": {
        "prefix": "components.pocketwatch_dismantler",
        "body": "components.pocketwatch_dismantler",
        "description": ""
    },
    "Component:components.equippable_replica": {
        "prefix": "components.equippable_replica",
        "body": "components.equippable_replica",
        "description": ""
    },
    "Component:components.erasablepaper": {
        "prefix": "components.erasablepaper",
        "body": "components.erasablepaper",
        "description": ""
    },
    "Component:components.witherable": {
        "prefix": "components.witherable",
        "body": "components.witherable",
        "description": ""
    },
    "Component:components.moonstorms": {
        "prefix": "components.moonstorms",
        "body": "components.moonstorms",
        "description": ""
    },
    "Component:components.positionalwarp": {
        "prefix": "components.positionalwarp",
        "body": "components.positionalwarp",
        "description": ""
    },
    "Component:components.wardrobe": {
        "prefix": "components.wardrobe",
        "body": "components.wardrobe",
        "description": ""
    },
    "Component:components.explosiveresist": {
        "prefix": "components.explosiveresist",
        "body": "components.explosiveresist",
        "description": ""
    },
    "Component:components.ocean": {
        "prefix": "components.ocean",
        "body": "components.ocean",
        "description": ""
    },
    "Component:components.minigame": {
        "prefix": "components.minigame",
        "body": "components.minigame",
        "description": ""
    },
    "Component:components.acidinfusible": {
        "prefix": "components.acidinfusible",
        "body": "components.acidinfusible",
        "description": ""
    },
    "Component:components.nis": {
        "prefix": "components.nis",
        "body": "components.nis",
        "description": ""
    },
    "Component:components.trap": {
        "prefix": "components.trap",
        "body": "components.trap",
        "description": ""
    },
    "Component:components.forestdaywalkerspawner": {
        "prefix": "components.forestdaywalkerspawner",
        "body": "components.forestdaywalkerspawner",
        "description": ""
    },
    "Component:components.fillable": {
        "prefix": "components.fillable",
        "body": "components.fillable",
        "description": ""
    },
    "Component:components.burnable": {
        "prefix": "components.burnable",
        "body": "components.burnable",
        "description": ""
    },
    "Component:components.migrationpetowner": {
        "prefix": "components.migrationpetowner",
        "body": "components.migrationpetowner",
        "description": ""
    },
    "Component:components.lavaarenamusic": {
        "prefix": "components.lavaarenamusic",
        "body": "components.lavaarenamusic",
        "description": ""
    },
    "Component:components.distancetracker": {
        "prefix": "components.distancetracker",
        "body": "components.distancetracker",
        "description": ""
    },
    "Component:components.builder": {
        "prefix": "components.builder",
        "body": "components.builder",
        "description": ""
    },
    "Component:components.retrofitforestmap_anr": {
        "prefix": "components.retrofitforestmap_anr",
        "body": "components.retrofitforestmap_anr",
        "description": ""
    },
    "Component:components.equippable": {
        "prefix": "components.equippable",
        "body": "components.equippable",
        "description": ""
    },
    "Component:components.boatcannonuser": {
        "prefix": "components.boatcannonuser",
        "body": "components.boatcannonuser",
        "description": ""
    },
    "Component:components.treasuremarked": {
        "prefix": "components.treasuremarked",
        "body": "components.treasuremarked",
        "description": ""
    },
    "Component:components.farmsoildrinker": {
        "prefix": "components.farmsoildrinker",
        "body": "components.farmsoildrinker",
        "description": ""
    },
    "Component:components.rider": {
        "prefix": "components.rider",
        "body": "components.rider",
        "description": ""
    },
    "Component:components.drawable": {
        "prefix": "components.drawable",
        "body": "components.drawable",
        "description": ""
    },
    "Component:components.highlightchild": {
        "prefix": "components.highlightchild",
        "body": "components.highlightchild",
        "description": ""
    },
    "Component:components.penguinspawner": {
        "prefix": "components.penguinspawner",
        "body": "components.penguinspawner",
        "description": ""
    },
    "Component:components.beard": {
        "prefix": "components.beard",
        "body": "components.beard",
        "description": ""
    },
    "Component:components.schoolspawner": {
        "prefix": "components.schoolspawner",
        "body": "components.schoolspawner",
        "description": ""
    },
    "Component:components.seamlessplayerswapper": {
        "prefix": "components.seamlessplayerswapper",
        "body": "components.seamlessplayerswapper",
        "description": ""
    },
    "Component:components.unsaddler": {
        "prefix": "components.unsaddler",
        "body": "components.unsaddler",
        "description": ""
    },
    "Component:components.dryer": {
        "prefix": "components.dryer",
        "body": "components.dryer",
        "description": ""
    },
    "Component:components.riftspawner": {
        "prefix": "components.riftspawner",
        "body": "components.riftspawner",
        "description": ""
    },
    "Component:components.playerinspectable": {
        "prefix": "components.playerinspectable",
        "body": "components.playerinspectable",
        "description": ""
    },
    "Component:components.carnivalgamefeedable": {
        "prefix": "components.carnivalgamefeedable",
        "body": "components.carnivalgamefeedable",
        "description": ""
    },
    "Component:components.area_trigger": {
        "prefix": "components.area_trigger",
        "body": "components.area_trigger",
        "description": ""
    },
    "Component:components.named_replica": {
        "prefix": "components.named_replica",
        "body": "components.named_replica",
        "description": ""
    },
    "Component:components.vase": {
        "prefix": "components.vase",
        "body": "components.vase",
        "description": ""
    },
    "Component:components.raindome": {
        "prefix": "components.raindome",
        "body": "components.raindome",
        "description": ""
    },
    "Component:components.savedrotation": {
        "prefix": "components.savedrotation",
        "body": "components.savedrotation",
        "description": ""
    },
    "Component:components.healthtrigger": {
        "prefix": "components.healthtrigger",
        "body": "components.healthtrigger",
        "description": ""
    },
    "Component:components.insulator": {
        "prefix": "components.insulator",
        "body": "components.insulator",
        "description": ""
    },
    "Component:components.pinnable": {
        "prefix": "components.pinnable",
        "body": "components.pinnable",
        "description": ""
    },
    "Component:components.colourcube": {
        "prefix": "components.colourcube",
        "body": "components.colourcube",
        "description": ""
    },
    "Component:components.steeringwheel": {
        "prefix": "components.steeringwheel",
        "body": "components.steeringwheel",
        "description": ""
    },
    "Component:components.batspawner": {
        "prefix": "components.batspawner",
        "body": "components.batspawner",
        "description": ""
    },
    "Component:components.storytellingprop": {
        "prefix": "components.storytellingprop",
        "body": "components.storytellingprop",
        "description": ""
    },
    "Component:components.sleepingbaguser": {
        "prefix": "components.sleepingbaguser",
        "body": "components.sleepingbaguser",
        "description": ""
    },
    "Component:components.focalpoint": {
        "prefix": "components.focalpoint",
        "body": "components.focalpoint",
        "description": ""
    },
    "Component:components.armor": {
        "prefix": "components.armor",
        "body": "components.armor",
        "description": ""
    },
    "Component:components.writeable_replica": {
        "prefix": "components.writeable_replica",
        "body": "components.writeable_replica",
        "description": ""
    },
    "Component:components.combat": {
        "prefix": "components.combat",
        "body": "components.combat",
        "description": ""
    },
    "Component:components.moosespawner": {
        "prefix": "components.moosespawner",
        "body": "components.moosespawner",
        "description": ""
    },
    "Component:components.raindomewatcher": {
        "prefix": "components.raindomewatcher",
        "body": "components.raindomewatcher",
        "description": ""
    },
    "Component:components.amphibiouscreature": {
        "prefix": "components.amphibiouscreature",
        "body": "components.amphibiouscreature",
        "description": ""
    },
    "Component:components.shatterfx": {
        "prefix": "components.shatterfx",
        "body": "components.shatterfx",
        "description": ""
    },
    "Component:components.balloonmaker": {
        "prefix": "components.balloonmaker",
        "body": "components.balloonmaker",
        "description": ""
    },
    "Component:components.oceanfishingrod": {
        "prefix": "components.oceanfishingrod",
        "body": "components.oceanfishingrod",
        "description": ""
    },
    "Component:components.crop": {
        "prefix": "components.crop",
        "body": "components.crop",
        "description": ""
    },
    "Component:components.carnivalgameitem": {
        "prefix": "components.carnivalgameitem",
        "body": "components.carnivalgameitem",
        "description": ""
    },
    "Component:components.fertilizerresearchable": {
        "prefix": "components.fertilizerresearchable",
        "body": "components.fertilizerresearchable",
        "description": ""
    },
    "Component:components.healthsyncer": {
        "prefix": "components.healthsyncer",
        "body": "components.healthsyncer",
        "description": ""
    },
    "Component:components.fencerotator": {
        "prefix": "components.fencerotator",
        "body": "components.fencerotator",
        "description": ""
    },
    "Component:components.beaverness": {
        "prefix": "components.beaverness",
        "body": "components.beaverness",
        "description": ""
    },
    "Component:components.autosaver": {
        "prefix": "components.autosaver",
        "body": "components.autosaver",
        "description": ""
    },
    "Component:components.inkable": {
        "prefix": "components.inkable",
        "body": "components.inkable",
        "description": ""
    },
    "Component:components.oceanfishinghook": {
        "prefix": "components.oceanfishinghook",
        "body": "components.oceanfishinghook",
        "description": ""
    },
    "Component:components.farmtiller": {
        "prefix": "components.farmtiller",
        "body": "components.farmtiller",
        "description": ""
    },
    "Component:components.boatphysics": {
        "prefix": "components.boatphysics",
        "body": "components.boatphysics",
        "description": ""
    },
    "Component:components.batteryuser": {
        "prefix": "components.batteryuser",
        "body": "components.batteryuser",
        "description": ""
    },
    "Component:components.mine": {
        "prefix": "components.mine",
        "body": "components.mine",
        "description": ""
    },
    "Component:components.rampingspawner": {
        "prefix": "components.rampingspawner",
        "body": "components.rampingspawner",
        "description": ""
    },
    "Component:components.firefx": {
        "prefix": "components.firefx",
        "body": "components.firefx",
        "description": ""
    },
    "Component:components.discoverable": {
        "prefix": "components.discoverable",
        "body": "components.discoverable",
        "description": ""
    },
    "Component:components.upgrader": {
        "prefix": "components.upgrader",
        "body": "components.upgrader",
        "description": ""
    },
    "Component:components.custombuildmanager": {
        "prefix": "components.custombuildmanager",
        "body": "components.custombuildmanager",
        "description": ""
    },
    "Component:components.sharkboimanager": {
        "prefix": "components.sharkboimanager",
        "body": "components.sharkboimanager",
        "description": ""
    },
    "Component:components.groomer": {
        "prefix": "components.groomer",
        "body": "components.groomer",
        "description": ""
    },
    "Component:components.canopylightrays": {
        "prefix": "components.canopylightrays",
        "body": "components.canopylightrays",
        "description": ""
    },
    "Component:components.weighable": {
        "prefix": "components.weighable",
        "body": "components.weighable",
        "description": ""
    },
    "Component:components.shard_worldreset": {
        "prefix": "components.shard_worldreset",
        "body": "components.shard_worldreset",
        "description": ""
    },
    "Component:components.colourtweener": {
        "prefix": "components.colourtweener",
        "body": "components.colourtweener",
        "description": ""
    },
    "Component:components.aura": {
        "prefix": "components.aura",
        "body": "components.aura",
        "description": ""
    },
    "Component:components.tacklesketch": {
        "prefix": "components.tacklesketch",
        "body": "components.tacklesketch",
        "description": ""
    },
    "Component:components.container容器": {
        "prefix": "components.container",
        "body": "components.container",
        "description": "容器"
    },
    "Component:components.bundlemaker": {
        "prefix": "components.bundlemaker",
        "body": "components.bundlemaker",
        "description": ""
    },
    "Component:components.ghostlyelixirable": {
        "prefix": "components.ghostlyelixirable",
        "body": "components.ghostlyelixirable",
        "description": ""
    },
    "Component:components.yotc_racestats": {
        "prefix": "components.yotc_racestats",
        "body": "components.yotc_racestats",
        "description": ""
    },
    "Component:components.trader": {
        "prefix": "components.trader",
        "body": "components.trader",
        "description": ""
    },
    "Component:components.soul": {
        "prefix": "components.soul",
        "body": "components.soul",
        "description": ""
    },
    "Component:components.itemweigher": {
        "prefix": "components.itemweigher",
        "body": "components.itemweigher",
        "description": ""
    },
    "Component:components.frograin": {
        "prefix": "components.frograin",
        "body": "components.frograin",
        "description": ""
    },
    "Component:components.blowinwind": {
        "prefix": "components.blowinwind",
        "body": "components.blowinwind",
        "description": ""
    },
    "Component:components.amorphous": {
        "prefix": "components.amorphous",
        "body": "components.amorphous",
        "description": ""
    },
    "Component:components.container_replica": {
        "prefix": "components.container_replica",
        "body": "components.container_replica",
        "description": ""
    },
    "Component:components.spell": {
        "prefix": "components.spell",
        "body": "components.spell",
        "description": ""
    },
    "Component:components.activatable": {
        "prefix": "components.activatable",
        "body": "components.activatable",
        "description": ""
    },
    "Component:components.plantable": {
        "prefix": "components.plantable",
        "body": "components.plantable",
        "description": ""
    },
    "Component:components.unwrappable": {
        "prefix": "components.unwrappable",
        "body": "components.unwrappable",
        "description": ""
    },
    "Component:components.aoeweapon_lunge": {
        "prefix": "components.aoeweapon_lunge",
        "body": "components.aoeweapon_lunge",
        "description": ""
    },
    "Component:components.butterflyspawner": {
        "prefix": "components.butterflyspawner",
        "body": "components.butterflyspawner",
        "description": ""
    },
    "Component:components.wavemanager": {
        "prefix": "components.wavemanager",
        "body": "components.wavemanager",
        "description": ""
    },
    "Component:components.planardefense": {
        "prefix": "components.planardefense",
        "body": "components.planardefense",
        "description": ""
    },
    "Component:components.channelcaster": {
        "prefix": "components.channelcaster",
        "body": "components.channelcaster",
        "description": ""
    },
    "Component:components.battleborn": {
        "prefix": "components.battleborn",
        "body": "components.battleborn",
        "description": ""
    },
    "Component:components.hideandseekhider": {
        "prefix": "components.hideandseekhider",
        "body": "components.hideandseekhider",
        "description": ""
    },
    "Component:components.writeable": {
        "prefix": "components.writeable",
        "body": "components.writeable",
        "description": ""
    },
    "Component:components.bloomness": {
        "prefix": "components.bloomness",
        "body": "components.bloomness",
        "description": ""
    },
    "Component:components.magiciantool": {
        "prefix": "components.magiciantool",
        "body": "components.magiciantool",
        "description": ""
    },
    "Component:components.stuckdetection": {
        "prefix": "components.stuckdetection",
        "body": "components.stuckdetection",
        "description": ""
    },
    "Component:components.slipperyfeet": {
        "prefix": "components.slipperyfeet",
        "body": "components.slipperyfeet",
        "description": ""
    },
    "Component:components.projectile": {
        "prefix": "components.projectile",
        "body": "components.projectile",
        "description": ""
    },
    "Component:components.stunnable": {
        "prefix": "components.stunnable",
        "body": "components.stunnable",
        "description": ""
    },
    "Component:components.questowner": {
        "prefix": "components.questowner",
        "body": "components.questowner",
        "description": ""
    },
    "Component:components.treegrowthsolution": {
        "prefix": "components.treegrowthsolution",
        "body": "components.treegrowthsolution",
        "description": ""
    },
    "Component:components.minigame_spectator": {
        "prefix": "components.minigame_spectator",
        "body": "components.minigame_spectator",
        "description": ""
    },
    "Component:components.circler": {
        "prefix": "components.circler",
        "body": "components.circler",
        "description": ""
    },
    "Component:components.groundshadowhandler": {
        "prefix": "components.groundshadowhandler",
        "body": "components.groundshadowhandler",
        "description": ""
    },
    "Component:components.stackable": {
        "prefix": "components.stackable",
        "body": "components.stackable",
        "description": ""
    },
    "Component:components.named": {
        "prefix": "components.named",
        "body": "components.named",
        "description": ""
    },
    "Component:components.bedazzlement": {
        "prefix": "components.bedazzlement",
        "body": "components.bedazzlement",
        "description": ""
    },
    "Component:components.shaveable": {
        "prefix": "components.shaveable",
        "body": "components.shaveable",
        "description": ""
    },
    "Component:components.shard_daywalkerspawner": {
        "prefix": "components.shard_daywalkerspawner",
        "body": "components.shard_daywalkerspawner",
        "description": ""
    },
    "Component:components.hitchable": {
        "prefix": "components.hitchable",
        "body": "components.hitchable",
        "description": ""
    },
    "Component:components.fishingrod": {
        "prefix": "components.fishingrod",
        "body": "components.fishingrod",
        "description": ""
    },
    "Component:components.hunger_replica": {
        "prefix": "components.hunger_replica",
        "body": "components.hunger_replica",
        "description": ""
    },
    "Component:components.moisture_replica": {
        "prefix": "components.moisture_replica",
        "body": "components.moisture_replica",
        "description": ""
    },
    "Component:components.hunter": {
        "prefix": "components.hunter",
        "body": "components.hunter",
        "description": ""
    },
    "Component:components.powerload": {
        "prefix": "components.powerload",
        "body": "components.powerload",
        "description": ""
    },
    "Component:components.mood": {
        "prefix": "components.mood",
        "body": "components.mood",
        "description": ""
    },
    "Component:components.age": {
        "prefix": "components.age",
        "body": "components.age",
        "description": ""
    },
    "Component:components.caveins": {
        "prefix": "components.caveins",
        "body": "components.caveins",
        "description": ""
    },
    "Component:components.upgrademoduleowner": {
        "prefix": "components.upgrademoduleowner",
        "body": "components.upgrademoduleowner",
        "description": ""
    },
    "Component:components.boattrail": {
        "prefix": "components.boattrail",
        "body": "components.boattrail",
        "description": ""
    },
    "Component:components.miasmawatcher": {
        "prefix": "components.miasmawatcher",
        "body": "components.miasmawatcher",
        "description": ""
    },
    "Component:components.despawnfader": {
        "prefix": "components.despawnfader",
        "body": "components.despawnfader",
        "description": ""
    },
    "Component:components.mermcandidate": {
        "prefix": "components.mermcandidate",
        "body": "components.mermcandidate",
        "description": ""
    },
    "Component:components.health_replica": {
        "prefix": "components.health_replica",
        "body": "components.health_replica",
        "description": ""
    },
    "Component:components.sharkboimanagerhelper": {
        "prefix": "components.sharkboimanagerhelper",
        "body": "components.sharkboimanagerhelper",
        "description": ""
    },
    "Component:components.staffsanity": {
        "prefix": "components.staffsanity",
        "body": "components.staffsanity",
        "description": ""
    },
    "Component:components.klaussacklock": {
        "prefix": "components.klaussacklock",
        "body": "components.klaussacklock",
        "description": ""
    },
    "Component:components.playerprox": {
        "prefix": "components.playerprox",
        "body": "components.playerprox",
        "description": ""
    },
    "Component:components.yotb_stager": {
        "prefix": "components.yotb_stager",
        "body": "components.yotb_stager",
        "description": ""
    },
    "Component:components.playbill_lecturn": {
        "prefix": "components.playbill_lecturn",
        "body": "components.playbill_lecturn",
        "description": ""
    },
    "Component:components.townportalregistry": {
        "prefix": "components.townportalregistry",
        "body": "components.townportalregistry",
        "description": ""
    },
    "Component:components.timer": {
        "prefix": "components.timer",
        "body": "components.timer",
        "description": ""
    },
    "Component:components.shadowdominance": {
        "prefix": "components.shadowdominance",
        "body": "components.shadowdominance",
        "description": ""
    },
    "Component:components.debuffable": {
        "prefix": "components.debuffable",
        "body": "components.debuffable",
        "description": ""
    },
    "Component:components.lordfruitflytrigger": {
        "prefix": "components.lordfruitflytrigger",
        "body": "components.lordfruitflytrigger",
        "description": ""
    },
    "Component:components.submersible": {
        "prefix": "components.submersible",
        "body": "components.submersible",
        "description": ""
    },
    "Component:components.oceanfishable": {
        "prefix": "components.oceanfishable",
        "body": "components.oceanfishable",
        "description": ""
    },
    "Component:components.inventory_replica": {
        "prefix": "components.inventory_replica",
        "body": "components.inventory_replica",
        "description": ""
    },
    "Component:components.farming_manager": {
        "prefix": "components.farming_manager",
        "body": "components.farming_manager",
        "description": ""
    },
    "Component:components.herdmember": {
        "prefix": "components.herdmember",
        "body": "components.herdmember",
        "description": ""
    },
    "Component:components.flotationdevice": {
        "prefix": "components.flotationdevice",
        "body": "components.flotationdevice",
        "description": ""
    },
    "Component:components.piratespawner": {
        "prefix": "components.piratespawner",
        "body": "components.piratespawner",
        "description": ""
    },
    "Component:components.slipperyfeettarget": {
        "prefix": "components.slipperyfeettarget",
        "body": "components.slipperyfeettarget",
        "description": ""
    },
    "Component:components.acidlevel": {
        "prefix": "components.acidlevel",
        "body": "components.acidlevel",
        "description": ""
    },
    "Component:components.shard_mermkingwatcher": {
        "prefix": "components.shard_mermkingwatcher",
        "body": "components.shard_mermkingwatcher",
        "description": ""
    },
    "Component:components.finiteuses": {
        "prefix": "components.finiteuses",
        "body": "components.finiteuses",
        "description": ""
    },
    "Component:components.deerclopsspawner": {
        "prefix": "components.deerclopsspawner",
        "body": "components.deerclopsspawner",
        "description": ""
    },
    "Component:components.deerherding": {
        "prefix": "components.deerherding",
        "body": "components.deerherding",
        "description": ""
    },
    "Component:components.malbatrossspawner": {
        "prefix": "components.malbatrossspawner",
        "body": "components.malbatrossspawner",
        "description": ""
    },
    "Component:components.maprecorder": {
        "prefix": "components.maprecorder",
        "body": "components.maprecorder",
        "description": ""
    },
    "Component:components.oceanthrowable": {
        "prefix": "components.oceanthrowable",
        "body": "components.oceanthrowable",
        "description": ""
    },
    "Component:components.coach": {
        "prefix": "components.coach",
        "body": "components.coach",
        "description": ""
    },
    "Component:components.boatrace_proximitychecker": {
        "prefix": "components.boatrace_proximitychecker",
        "body": "components.boatrace_proximitychecker",
        "description": ""
    },
    "Component:components.walkableplatformplayer": {
        "prefix": "components.walkableplatformplayer",
        "body": "components.walkableplatformplayer",
        "description": ""
    },
    "Component:components.uianim": {
        "prefix": "components.uianim",
        "body": "components.uianim",
        "description": ""
    },
    "Component:components.acidbatwavemanager": {
        "prefix": "components.acidbatwavemanager",
        "body": "components.acidbatwavemanager",
        "description": ""
    },
    "Component:components.dynamicmusic": {
        "prefix": "components.dynamicmusic",
        "body": "components.dynamicmusic",
        "description": ""
    },
    "Component:components.locomotor": {
        "prefix": "components.locomotor",
        "body": "components.locomotor",
        "description": ""
    },
    "Component:components.messagebottlemanager": {
        "prefix": "components.messagebottlemanager",
        "body": "components.messagebottlemanager",
        "description": ""
    },
    "Component:components.efficientuser": {
        "prefix": "components.efficientuser",
        "body": "components.efficientuser",
        "description": ""
    },
    "Component:components.oceanfishingrod_replica": {
        "prefix": "components.oceanfishingrod_replica",
        "body": "components.oceanfishingrod_replica",
        "description": ""
    },
    "Component:components.firebug": {
        "prefix": "components.firebug",
        "body": "components.firebug",
        "description": ""
    },
    "Component:components.aoeweapon_leap": {
        "prefix": "components.aoeweapon_leap",
        "body": "components.aoeweapon_leap",
        "description": ""
    },
    "Component:components.deerherdspawner": {
        "prefix": "components.deerherdspawner",
        "body": "components.deerherdspawner",
        "description": ""
    },
    "Component:components.freezefx": {
        "prefix": "components.freezefx",
        "body": "components.freezefx",
        "description": ""
    },
    "Component:components.bathbomb": {
        "prefix": "components.bathbomb",
        "body": "components.bathbomb",
        "description": ""
    },
    "Component:components.bathbombable": {
        "prefix": "components.bathbombable",
        "body": "components.bathbombable",
        "description": ""
    },
    "Component:components.constructionbuilder": {
        "prefix": "components.constructionbuilder",
        "body": "components.constructionbuilder",
        "description": ""
    },
    "Component:components.aoetargeting": {
        "prefix": "components.aoetargeting",
        "body": "components.aoetargeting",
        "description": ""
    },
    "Component:components.electricattacks": {
        "prefix": "components.electricattacks",
        "body": "components.electricattacks",
        "description": ""
    },
    "Component:components.grogginess": {
        "prefix": "components.grogginess",
        "body": "components.grogginess",
        "description": ""
    },
    "Component:components.lighttweener": {
        "prefix": "components.lighttweener",
        "body": "components.lighttweener",
        "description": ""
    },
    "Component:components.objectspawner": {
        "prefix": "components.objectspawner",
        "body": "components.objectspawner",
        "description": ""
    },
    "Component:components.lureplantspawner": {
        "prefix": "components.lureplantspawner",
        "body": "components.lureplantspawner",
        "description": ""
    },
    "Component:components.beefalometrics": {
        "prefix": "components.beefalometrics",
        "body": "components.beefalometrics",
        "description": ""
    },
    "Component:components.boattrailmover": {
        "prefix": "components.boattrailmover",
        "body": "components.boattrailmover",
        "description": ""
    },
    "Component:components.thief": {
        "prefix": "components.thief",
        "body": "components.thief",
        "description": ""
    },
    "Component:components.nightlightmanager": {
        "prefix": "components.nightlightmanager",
        "body": "components.nightlightmanager",
        "description": ""
    },
    "Component:components.quaker": {
        "prefix": "components.quaker",
        "body": "components.quaker",
        "description": ""
    },
    "Component:components.occupiable": {
        "prefix": "components.occupiable",
        "body": "components.occupiable",
        "description": ""
    },
    "Component:components.inventoryitem": {
        "prefix": "components.inventoryitem",
        "body": "components.inventoryitem",
        "description": ""
    },
    "Component:components.key": {
        "prefix": "components.key",
        "body": "components.key",
        "description": ""
    },
    "Component:components.bosstargeter": {
        "prefix": "components.bosstargeter",
        "body": "components.bosstargeter",
        "description": ""
    },
    "Component:components.areaaware": {
        "prefix": "components.areaaware",
        "body": "components.areaaware",
        "description": ""
    },
    "Component:components.wildfires": {
        "prefix": "components.wildfires",
        "body": "components.wildfires",
        "description": ""
    },
    "Component:components.strafer": {
        "prefix": "components.strafer",
        "body": "components.strafer",
        "description": ""
    },
    "Component:components.oldager": {
        "prefix": "components.oldager",
        "body": "components.oldager",
        "description": ""
    },
    "Component:components.colouradder": {
        "prefix": "components.colouradder",
        "body": "components.colouradder",
        "description": ""
    },
    "Component:components.epicscare": {
        "prefix": "components.epicscare",
        "body": "components.epicscare",
        "description": ""
    },
    "Component:components.sharklistener": {
        "prefix": "components.sharklistener",
        "body": "components.sharklistener",
        "description": ""
    },
    "Component:components.yotc_raceprizemanager": {
        "prefix": "components.yotc_raceprizemanager",
        "body": "components.yotc_raceprizemanager",
        "description": ""
    },
    "Component:components.emitter": {
        "prefix": "components.emitter",
        "body": "components.emitter",
        "description": ""
    },
    "Component:components.sanity_replica": {
        "prefix": "components.sanity_replica",
        "body": "components.sanity_replica",
        "description": ""
    },
    "Component:components.boatringdata": {
        "prefix": "components.boatringdata",
        "body": "components.boatringdata",
        "description": ""
    },
    "Component:components.inventoryitemholder": {
        "prefix": "components.inventoryitemholder",
        "body": "components.inventoryitemholder",
        "description": ""
    },
    "Component:components.cattoy": {
        "prefix": "components.cattoy",
        "body": "components.cattoy",
        "description": ""
    },
    "Component:components.yotc_racestart": {
        "prefix": "components.yotc_racestart",
        "body": "components.yotc_racestart",
        "description": ""
    },
    "Component:components.colouraddersync": {
        "prefix": "components.colouraddersync",
        "body": "components.colouraddersync",
        "description": ""
    },
    "Component:components.singingshelltrigger": {
        "prefix": "components.singingshelltrigger",
        "body": "components.singingshelltrigger",
        "description": ""
    },
    "Component:components.quagmire_recipebook": {
        "prefix": "components.quagmire_recipebook",
        "body": "components.quagmire_recipebook",
        "description": ""
    },
    "Component:components.brush": {
        "prefix": "components.brush",
        "body": "components.brush",
        "description": ""
    },
    "Component:components.lavaarenaeventstate": {
        "prefix": "components.lavaarenaeventstate",
        "body": "components.lavaarenaeventstate",
        "description": ""
    },
    "Component:components.stageactingprop": {
        "prefix": "components.stageactingprop",
        "body": "components.stageactingprop",
        "description": ""
    },
    "Component:components.foodmemory": {
        "prefix": "components.foodmemory",
        "body": "components.foodmemory",
        "description": ""
    },
    "Component:components.digester": {
        "prefix": "components.digester",
        "body": "components.digester",
        "description": ""
    },
    "Component:components.yotb_sewer": {
        "prefix": "components.yotb_sewer",
        "body": "components.yotb_sewer",
        "description": ""
    },
    "Component:components.shaver": {
        "prefix": "components.shaver",
        "body": "components.shaver",
        "description": ""
    },
    "Component:components.hideandseekhidingspot": {
        "prefix": "components.hideandseekhidingspot",
        "body": "components.hideandseekhidingspot",
        "description": ""
    },
    "Component:components.curseditem": {
        "prefix": "components.curseditem",
        "body": "components.curseditem",
        "description": ""
    },
    "Component:components.constructionbuilderuidata": {
        "prefix": "components.constructionbuilderuidata",
        "body": "components.constructionbuilderuidata",
        "description": ""
    },
    "Component:components.sewing": {
        "prefix": "components.sewing",
        "body": "components.sewing",
        "description": ""
    },
    "Component:components.grouptargeter": {
        "prefix": "components.grouptargeter",
        "body": "components.grouptargeter",
        "description": ""
    },
    "Component:components.attuner": {
        "prefix": "components.attuner",
        "body": "components.attuner",
        "description": ""
    },
    "Component:components.singinginspiration": {
        "prefix": "components.singinginspiration",
        "body": "components.singinginspiration",
        "description": ""
    },
    "Component:components.toadstoolspawner": {
        "prefix": "components.toadstoolspawner",
        "body": "components.toadstoolspawner",
        "description": ""
    },
    "Component:components.hudindicatorwatcher": {
        "prefix": "components.hudindicatorwatcher",
        "body": "components.hudindicatorwatcher",
        "description": ""
    },
    "Component:components.chessunlocks": {
        "prefix": "components.chessunlocks",
        "body": "components.chessunlocks",
        "description": ""
    },
    "Component:components.sandstorms": {
        "prefix": "components.sandstorms",
        "body": "components.sandstorms",
        "description": ""
    },
    "Component:components.freezable": {
        "prefix": "components.freezable",
        "body": "components.freezable",
        "description": ""
    },
    "Component:components.battery": {
        "prefix": "components.battery",
        "body": "components.battery",
        "description": ""
    },
    "Component:components.wax": {
        "prefix": "components.wax",
        "body": "components.wax",
        "description": ""
    },
    "Component:components.debugger": {
        "prefix": "components.debugger",
        "body": "components.debugger",
        "description": ""
    },
    "Component:components.ghostlyelixir": {
        "prefix": "components.ghostlyelixir",
        "body": "components.ghostlyelixir",
        "description": ""
    },
    "Component:components.container_proxy": {
        "prefix": "components.container_proxy",
        "body": "components.container_proxy",
        "description": ""
    },
    "Component:components.selfstacker": {
        "prefix": "components.selfstacker",
        "body": "components.selfstacker",
        "description": ""
    },
    "Component:components.plantresearchable": {
        "prefix": "components.plantresearchable",
        "body": "components.plantresearchable",
        "description": ""
    },
    "Component:components.saddler": {
        "prefix": "components.saddler",
        "body": "components.saddler",
        "description": ""
    },
    "Component:components.yotc_racecompetitor": {
        "prefix": "components.yotc_racecompetitor",
        "body": "components.yotc_racecompetitor",
        "description": ""
    },
    "Component:components.instrument": {
        "prefix": "components.instrument",
        "body": "components.instrument",
        "description": ""
    },
    "Component:components.plantregrowth": {
        "prefix": "components.plantregrowth",
        "body": "components.plantregrowth",
        "description": ""
    },
    "Component:components.carnivalevent": {
        "prefix": "components.carnivalevent",
        "body": "components.carnivalevent",
        "description": ""
    },
    "Component:components.yotb_skinunlocker": {
        "prefix": "components.yotb_skinunlocker",
        "body": "components.yotb_skinunlocker",
        "description": ""
    },
    "Component:components.worldwind": {
        "prefix": "components.worldwind",
        "body": "components.worldwind",
        "description": ""
    },
    "Component:components.worldvoter": {
        "prefix": "components.worldvoter",
        "body": "components.worldvoter",
        "description": ""
    },
    "Component:components.worldstate": {
        "prefix": "components.worldstate",
        "body": "components.worldstate",
        "description": ""
    },
    "Component:components.shard_players": {
        "prefix": "components.shard_players",
        "body": "components.shard_players",
        "description": ""
    },
    "Component:components.waterphysics": {
        "prefix": "components.waterphysics",
        "body": "components.waterphysics",
        "description": ""
    },
    "Component:components.carnivalhostsummon": {
        "prefix": "components.carnivalhostsummon",
        "body": "components.carnivalhostsummon",
        "description": ""
    },
    "Component:components.worldsettingstimer": {
        "prefix": "components.worldsettingstimer",
        "body": "components.worldsettingstimer",
        "description": ""
    },
    "Component:components.disappears": {
        "prefix": "components.disappears",
        "body": "components.disappears",
        "description": ""
    },
    "Component:components.archivemanager": {
        "prefix": "components.archivemanager",
        "body": "components.archivemanager",
        "description": ""
    },
    "Component:components.worldsettings": {
        "prefix": "components.worldsettings",
        "body": "components.worldsettings",
        "description": ""
    },
    "Component:components.worldreset": {
        "prefix": "components.worldreset",
        "body": "components.worldreset",
        "description": ""
    },
    "Component:components.worldmigrator": {
        "prefix": "components.worldmigrator",
        "body": "components.worldmigrator",
        "description": ""
    },
    "Component:components.mast": {
        "prefix": "components.mast",
        "body": "components.mast",
        "description": ""
    },
    "Component:components.machine": {
        "prefix": "components.machine",
        "body": "components.machine",
        "description": ""
    },
    "Component:components.moonstormlightningmanager": {
        "prefix": "components.moonstormlightningmanager",
        "body": "components.moonstormlightningmanager",
        "description": ""
    },
    "Component:components.dsp": {
        "prefix": "components.dsp",
        "body": "components.dsp",
        "description": ""
    },
    "Component:components.pointofinterest": {
        "prefix": "components.pointofinterest",
        "body": "components.pointofinterest",
        "description": ""
    },
    "Component:components.worldcharacterselectlobby": {
        "prefix": "components.worldcharacterselectlobby",
        "body": "components.worldcharacterselectlobby",
        "description": ""
    },
    "Component:components.worker": {
        "prefix": "components.worker",
        "body": "components.worker",
        "description": ""
    },
    "Component:components.workable": {
        "prefix": "components.workable",
        "body": "components.workable",
        "description": ""
    },
    "Component:components.birdspawner": {
        "prefix": "components.birdspawner",
        "body": "components.birdspawner",
        "description": ""
    },
    "Component:components.oceantrawler": {
        "prefix": "components.oceantrawler",
        "body": "components.oceantrawler",
        "description": ""
    },
    "Component:components.area_unlock": {
        "prefix": "components.area_unlock",
        "body": "components.area_unlock",
        "description": ""
    },
    "Component:components.winter_treeseed": {
        "prefix": "components.winter_treeseed",
        "body": "components.winter_treeseed",
        "description": ""
    },
    "Component:components.wisecracker": {
        "prefix": "components.wisecracker",
        "body": "components.wisecracker",
        "description": ""
    },
    "Component:components.hull": {
        "prefix": "components.hull",
        "body": "components.hull",
        "description": ""
    },
    "Component:components.simplemagicgrower": {
        "prefix": "components.simplemagicgrower",
        "body": "components.simplemagicgrower",
        "description": ""
    },
    "Component:components.skinner_beefalo": {
        "prefix": "components.skinner_beefalo",
        "body": "components.skinner_beefalo",
        "description": ""
    },
    "Component:components.winchtarget": {
        "prefix": "components.winchtarget",
        "body": "components.winchtarget",
        "description": ""
    },
    "Component:components.eater吃...的人": {
        "prefix": "components.eater",
        "body": "components.eater",
        "description": "吃...的人"
    },
    "Component:components.blinkstaff懒人法杖(橙色法杖)": {
        "prefix": "components.blinkstaff",
        "body": "components.blinkstaff",
        "description": "懒人法杖(橙色法杖)"
    },
    "Component:components.hudindicatable": {
        "prefix": "components.hudindicatable",
        "body": "components.hudindicatable",
        "description": ""
    },
    "Component:components.compostingbin": {
        "prefix": "components.compostingbin",
        "body": "components.compostingbin",
        "description": ""
    },
    "Component:components.deployable可移植的": {
        "prefix": "components.deployable",
        "body": "components.deployable",
        "description": "可移植的"
    },
    "Component:components.hatchable": {
        "prefix": "components.hatchable",
        "body": "components.hatchable",
        "description": ""
    },
    "Component:components.wintersfeasttable": {
        "prefix": "components.wintersfeasttable",
        "body": "components.wintersfeasttable",
        "description": ""
    },
    "Component:components.winonateleportpadmanager": {
        "prefix": "components.winonateleportpadmanager",
        "body": "components.winonateleportpadmanager",
        "description": ""
    },
    "Component:components.playbill": {
        "prefix": "components.playbill",
        "body": "components.playbill",
        "description": ""
    },
    "Component:components.birdattractor": {
        "prefix": "components.birdattractor",
        "body": "components.birdattractor",
        "description": ""
    },
    "Component:components.sheltered_replica": {
        "prefix": "components.sheltered_replica",
        "body": "components.sheltered_replica",
        "description": ""
    },
    "Component:components.spellcaster": {
        "prefix": "components.spellcaster",
        "body": "components.spellcaster",
        "description": ""
    },
    "Component:components.map": {
        "prefix": "components.map",
        "body": "components.map",
        "description": ""
    },
    "Component:components.feasts": {
        "prefix": "components.feasts",
        "body": "components.feasts",
        "description": ""
    },
    "Component:components.platformhopdelay": {
        "prefix": "components.platformhopdelay",
        "body": "components.platformhopdelay",
        "description": ""
    },
    "Component:components.klaussackkey": {
        "prefix": "components.klaussackkey",
        "body": "components.klaussackkey",
        "description": ""
    },
    "Component:components.weapon武器": {
        "prefix": "components.weapon",
        "body": "components.weapon",
        "description": "武器"
    },
    "Component:components.waxable": {
        "prefix": "components.waxable",
        "body": "components.waxable",
        "description": ""
    },
    "Component:components.watersource": {
        "prefix": "components.watersource",
        "body": "components.watersource",
        "description": ""
    },
    "Component:components.upgrademoduleremover": {
        "prefix": "components.upgrademoduleremover",
        "body": "components.upgrademoduleremover",
        "description": ""
    },
    "Component:components.waterproofer": {
        "prefix": "components.waterproofer",
        "body": "components.waterproofer",
        "description": ""
    },
    "Component:components.walkingplankuser": {
        "prefix": "components.walkingplankuser",
        "body": "components.walkingplankuser",
        "description": ""
    },
    "Component:components.walkingplank": {
        "prefix": "components.walkingplank",
        "body": "components.walkingplank",
        "description": ""
    },
    "Component:components.frostybreather": {
        "prefix": "components.frostybreather",
        "body": "components.frostybreather",
        "description": ""
    },
    "Component:components.quagmire_music": {
        "prefix": "components.quagmire_music",
        "body": "components.quagmire_music",
        "description": ""
    },
    "Component:components.walkableplatform": {
        "prefix": "components.walkableplatform",
        "body": "components.walkableplatform",
        "description": ""
    },
    "Component:components.wagpunk_manager": {
        "prefix": "components.wagpunk_manager",
        "body": "components.wagpunk_manager",
        "description": ""
    },
    "Component:components.vinebridgemanager": {
        "prefix": "components.vinebridgemanager",
        "body": "components.vinebridgemanager",
        "description": ""
    },
    "Component:components.upgrademodule": {
        "prefix": "components.upgrademodule",
        "body": "components.upgrademodule",
        "description": ""
    },
    "Component:components.shard_clock": {
        "prefix": "components.shard_clock",
        "body": "components.shard_clock",
        "description": ""
    },
    "Component:components.minigame_participator": {
        "prefix": "components.minigame_participator",
        "body": "components.minigame_participator",
        "description": ""
    },
    "Component:components.minionspawner": {
        "prefix": "components.minionspawner",
        "body": "components.minionspawner",
        "description": ""
    },
    "Component:components.sentientaxe": {
        "prefix": "components.sentientaxe",
        "body": "components.sentientaxe",
        "description": ""
    },
    "Component:components.useabletargeteditem": {
        "prefix": "components.useabletargeteditem",
        "body": "components.useabletargeteditem",
        "description": ""
    },
    "Component:components.useableitem": {
        "prefix": "components.useableitem",
        "body": "components.useableitem",
        "description": ""
    },
    "Component:components.vasedecoration": {
        "prefix": "components.vasedecoration",
        "body": "components.vasedecoration",
        "description": ""
    },
    "Component:components.upgradeable": {
        "prefix": "components.upgradeable",
        "body": "components.upgradeable",
        "description": ""
    },
    "Component:components.rider_replica": {
        "prefix": "components.rider_replica",
        "body": "components.rider_replica",
        "description": ""
    },
    "Component:components.updatelooper": {
        "prefix": "components.updatelooper",
        "body": "components.updatelooper",
        "description": ""
    },
    "Component:components.uniqueprefabids": {
        "prefix": "components.uniqueprefabids",
        "body": "components.uniqueprefabids",
        "description": ""
    },
    "Component:components.uniqueid": {
        "prefix": "components.uniqueid",
        "body": "components.uniqueid",
        "description": ""
    },
    "Component:components.skeletonsweeper": {
        "prefix": "components.skeletonsweeper",
        "body": "components.skeletonsweeper",
        "description": ""
    },
    "Component:components.health": {
        "prefix": "components.health",
        "body": "components.health",
        "description": ""
    },
    "Component:components.groundpounder": {
        "prefix": "components.groundpounder",
        "body": "components.groundpounder",
        "description": ""
    },
    "Component:components.trophyscale": {
        "prefix": "components.trophyscale",
        "body": "components.trophyscale",
        "description": ""
    },
    "Component:components.inventory": {
        "prefix": "components.inventory",
        "body": "components.inventory",
        "description": ""
    },
    "Component:components.tributable": {
        "prefix": "components.tributable",
        "body": "components.tributable",
        "description": ""
    },
    "Component:components.forgerepairable": {
        "prefix": "components.forgerepairable",
        "body": "components.forgerepairable",
        "description": ""
    },
    "Component:components.mightygym": {
        "prefix": "components.mightygym",
        "body": "components.mightygym",
        "description": ""
    },
    "Component:components.transparentonsanity": {
        "prefix": "components.transparentonsanity",
        "body": "components.transparentonsanity",
        "description": ""
    },
    "Component:components.transformer": {
        "prefix": "components.transformer",
        "body": "components.transformer",
        "description": ""
    },
    "Component:components.shadowcreaturespawner": {
        "prefix": "components.shadowcreaturespawner",
        "body": "components.shadowcreaturespawner",
        "description": ""
    },
    "Component:components.recallmark": {
        "prefix": "components.recallmark",
        "body": "components.recallmark",
        "description": ""
    },
    "Component:components.damagetyperesist": {
        "prefix": "components.damagetyperesist",
        "body": "components.damagetyperesist",
        "description": ""
    },
    "Component:components.tradable": {
        "prefix": "components.tradable",
        "body": "components.tradable",
        "description": ""
    },
    "Component:components.scenariorunner": {
        "prefix": "components.scenariorunner",
        "body": "components.scenariorunner",
        "description": ""
    },
    "Component:components.steeringwheeluser": {
        "prefix": "components.steeringwheeluser",
        "body": "components.steeringwheeluser",
        "description": ""
    },
    "Component:components.farmplantstress": {
        "prefix": "components.farmplantstress",
        "body": "components.farmplantstress",
        "description": ""
    },
    "Component:components.herd": {
        "prefix": "components.herd",
        "body": "components.herd",
        "description": ""
    },
    "Component:components.circuitnode": {
        "prefix": "components.circuitnode",
        "body": "components.circuitnode",
        "description": ""
    },
    "Component:components.resistance": {
        "prefix": "components.resistance",
        "body": "components.resistance",
        "description": ""
    },
    "Component:components.halloweenmoonmutable": {
        "prefix": "components.halloweenmoonmutable",
        "body": "components.halloweenmoonmutable",
        "description": ""
    },
    "Component:components.forestpetrification": {
        "prefix": "components.forestpetrification",
        "body": "components.forestpetrification",
        "description": ""
    },
    "Component:components.simplebook": {
        "prefix": "components.simplebook",
        "body": "components.simplebook",
        "description": ""
    },
    "Component:components.terraformer": {
        "prefix": "components.terraformer",
        "body": "components.terraformer",
        "description": ""
    },
    "Component:components.childspawner": {
        "prefix": "components.childspawner",
        "body": "components.childspawner",
        "description": ""
    },
    "Component:components.spidermutator": {
        "prefix": "components.spidermutator",
        "body": "components.spidermutator",
        "description": ""
    },
    "Component:components.dryable": {
        "prefix": "components.dryable",
        "body": "components.dryable",
        "description": ""
    },
    "Component:components.teleporter": {
        "prefix": "components.teleporter",
        "body": "components.teleporter",
        "description": ""
    },
    "Component:components.teleportedoverride": {
        "prefix": "components.teleportedoverride",
        "body": "components.teleportedoverride",
        "description": ""
    },
    "Component:components.teamleader": {
        "prefix": "components.teamleader",
        "body": "components.teamleader",
        "description": ""
    },
    "Component:components.boatdrag": {
        "prefix": "components.boatdrag",
        "body": "components.boatdrag",
        "description": ""
    },
    "Component:components.spellbookcooldowns": {
        "prefix": "components.spellbookcooldowns",
        "body": "components.spellbookcooldowns",
        "description": ""
    },
    "Component:components.teacher": {
        "prefix": "components.teacher",
        "body": "components.teacher",
        "description": ""
    },
    "Component:components.targettracker": {
        "prefix": "components.targettracker",
        "body": "components.targettracker",
        "description": ""
    },
    "Component:components.talkable": {
        "prefix": "components.talkable",
        "body": "components.talkable",
        "description": ""
    },
    "Component:components.retrofitcavemap_anr": {
        "prefix": "components.retrofitcavemap_anr",
        "body": "components.retrofitcavemap_anr",
        "description": ""
    },
    "Component:components.tackler": {
        "prefix": "components.tackler",
        "body": "components.tackler",
        "description": ""
    },
    "Component:components.bundler": {
        "prefix": "components.bundler",
        "body": "components.bundler",
        "description": ""
    },
    "Component:components.gym": {
        "prefix": "components.gym",
        "body": "components.gym",
        "description": ""
    },
    "Component:components.boatrace_proximitybeacon": {
        "prefix": "components.boatrace_proximitybeacon",
        "body": "components.boatrace_proximitybeacon",
        "description": ""
    },
    "Component:components.kitcoon": {
        "prefix": "components.kitcoon",
        "body": "components.kitcoon",
        "description": ""
    },
    "Component:components.symbolswapdata": {
        "prefix": "components.symbolswapdata",
        "body": "components.symbolswapdata",
        "description": ""
    },
    "Component:components.hallucinations": {
        "prefix": "components.hallucinations",
        "body": "components.hallucinations",
        "description": ""
    },
    "Component:components.strongman": {
        "prefix": "components.strongman",
        "body": "components.strongman",
        "description": ""
    },
    "Component:components.carnivaldecor": {
        "prefix": "components.carnivaldecor",
        "body": "components.carnivaldecor",
        "description": ""
    },
    "Component:components.stretcher": {
        "prefix": "components.stretcher",
        "body": "components.stretcher",
        "description": ""
    },
    "Component:components.grue": {
        "prefix": "components.grue",
        "body": "components.grue",
        "description": ""
    },
    "Component:components.storyteller": {
        "prefix": "components.storyteller",
        "body": "components.storyteller",
        "description": ""
    },
    "Component:components.furnituredecortaker": {
        "prefix": "components.furnituredecortaker",
        "body": "components.furnituredecortaker",
        "description": ""
    },
    "Component:components.stormwatcher": {
        "prefix": "components.stormwatcher",
        "body": "components.stormwatcher",
        "description": ""
    },
    "Component:components.boatai": {
        "prefix": "components.boatai",
        "body": "components.boatai",
        "description": ""
    },
    "Component:components.mermkingmanager": {
        "prefix": "components.mermkingmanager",
        "body": "components.mermkingmanager",
        "description": ""
    },
    "Component:components.explosive": {
        "prefix": "components.explosive",
        "body": "components.explosive",
        "description": ""
    },
    "Component:components.complexprojectile复杂投射物(抛物线)": {
        "prefix": "components.complexprojectile",
        "body": "components.complexprojectile",
        "description": "复杂投射物(抛物线)"
    },
    "Component:components.regrowthmanager": {
        "prefix": "components.regrowthmanager",
        "body": "components.regrowthmanager",
        "description": ""
    },
    "Component:components.wereeater": {
        "prefix": "components.wereeater",
        "body": "components.wereeater",
        "description": ""
    },
    "Component:components.hunger": {
        "prefix": "components.hunger",
        "body": "components.hunger",
        "description": ""
    },
    "Component:components.squadmember": {
        "prefix": "components.squadmember",
        "body": "components.squadmember",
        "description": ""
    },
    "Component:components.scaler": {
        "prefix": "components.scaler",
        "body": "components.scaler",
        "description": ""
    },
    "Component:components.highlight": {
        "prefix": "components.highlight",
        "body": "components.highlight",
        "description": ""
    },
    "Component:components.boatmagnet": {
        "prefix": "components.boatmagnet",
        "body": "components.boatmagnet",
        "description": ""
    },
    "Component:components.autoterraformer": {
        "prefix": "components.autoterraformer",
        "body": "components.autoterraformer",
        "description": ""
    },
    "Component:components.incrementalproducer": {
        "prefix": "components.incrementalproducer",
        "body": "components.incrementalproducer",
        "description": ""
    },
    "Component:components.spooked": {
        "prefix": "components.spooked",
        "body": "components.spooked",
        "description": ""
    },
    "Component:components.temperature": {
        "prefix": "components.temperature",
        "body": "components.temperature",
        "description": ""
    },
    "Component:components.teamattacker": {
        "prefix": "components.teamattacker",
        "body": "components.teamattacker",
        "description": ""
    },
    "Component:components.spellbook": {
        "prefix": "components.spellbook",
        "body": "components.spellbook",
        "description": ""
    },
    "Component:components.spectatorcorpse": {
        "prefix": "components.spectatorcorpse",
        "body": "components.spectatorcorpse",
        "description": ""
    },
    "Component:components.canopyshadows": {
        "prefix": "components.canopyshadows",
        "body": "components.canopyshadows",
        "description": ""
    },
    "Component:components.specialeventsetup": {
        "prefix": "components.specialeventsetup",
        "body": "components.specialeventsetup",
        "description": ""
    },
    "Component:components.spdamageutil": {
        "prefix": "components.spdamageutil",
        "body": "components.spdamageutil",
        "description": ""
    },
    "Component:components.beargerspawner": {
        "prefix": "components.beargerspawner",
        "body": "components.beargerspawner",
        "description": ""
    },
    "Component:components.spawnfader": {
        "prefix": "components.spawnfader",
        "body": "components.spawnfader",
        "description": ""
    },
    "Component:components.playerhearing": {
        "prefix": "components.playerhearing",
        "body": "components.playerhearing",
        "description": ""
    },
    "Component:components.follower_replica": {
        "prefix": "components.follower_replica",
        "body": "components.follower_replica",
        "description": ""
    },
    "Component:components.heavyobstaclephysics": {
        "prefix": "components.heavyobstaclephysics",
        "body": "components.heavyobstaclephysics",
        "description": ""
    },
    "Component:components.craftingstation": {
        "prefix": "components.craftingstation",
        "body": "components.craftingstation",
        "description": ""
    },
    "Component:components.groundcreep": {
        "prefix": "components.groundcreep",
        "body": "components.groundcreep",
        "description": ""
    },
    "Component:components.boatpatch": {
        "prefix": "components.boatpatch",
        "body": "components.boatpatch",
        "description": ""
    },
    "Component:components.sleepingbag": {
        "prefix": "components.sleepingbag",
        "body": "components.sleepingbag",
        "description": ""
    },
    "Component:components.maprevealer": {
        "prefix": "components.maprevealer",
        "body": "components.maprevealer",
        "description": ""
    },
    "Component:components.remoteteleporter": {
        "prefix": "components.remoteteleporter",
        "body": "components.remoteteleporter",
        "description": ""
    },
    "Component:components.sleeper": {
        "prefix": "components.sleeper",
        "body": "components.sleeper",
        "description": ""
    },
    "Component:components.wintertreegiftable": {
        "prefix": "components.wintertreegiftable",
        "body": "components.wintertreegiftable",
        "description": ""
    },
    "Component:components.fishingnet": {
        "prefix": "components.fishingnet",
        "body": "components.fishingnet",
        "description": ""
    },
    "Component:components.sizetweener": {
        "prefix": "components.sizetweener",
        "body": "components.sizetweener",
        "description": ""
    },
    "Component:components.repellent": {
        "prefix": "components.repellent",
        "body": "components.repellent",
        "description": ""
    },
    "Component:components.oceanicemanager": {
        "prefix": "components.oceanicemanager",
        "body": "components.oceanicemanager",
        "description": ""
    },
    "Component:components.moisture": {
        "prefix": "components.moisture",
        "body": "components.moisture",
        "description": ""
    },
    "Component:components.sisturnregistry": {
        "prefix": "components.sisturnregistry",
        "body": "components.sisturnregistry",
        "description": ""
    },
    "Component:components.searchable": {
        "prefix": "components.searchable",
        "body": "components.searchable",
        "description": ""
    },
    "Component:components.lightningblocker": {
        "prefix": "components.lightningblocker",
        "body": "components.lightningblocker",
        "description": ""
    },
    "Component:components.singable": {
        "prefix": "components.singable",
        "body": "components.singable",
        "description": ""
    },
    "Component:components.shop": {
        "prefix": "components.shop",
        "body": "components.shop",
        "description": ""
    },
    "Component:components.squidspawner": {
        "prefix": "components.squidspawner",
        "body": "components.squidspawner",
        "description": ""
    },
    "Component:components.hitcher": {
        "prefix": "components.hitcher",
        "body": "components.hitcher",
        "description": ""
    },
    "Component:components.pocketwatch": {
        "prefix": "components.pocketwatch",
        "body": "components.pocketwatch",
        "description": ""
    },
    "Component:components.fishable": {
        "prefix": "components.fishable",
        "body": "components.fishable",
        "description": ""
    },
    "Component:components.shelf": {
        "prefix": "components.shelf",
        "body": "components.shelf",
        "description": ""
    },
    "Component:components.shedder": {
        "prefix": "components.shedder",
        "body": "components.shedder",
        "description": ""
    },
    "Component:components.anchor": {
        "prefix": "components.anchor",
        "body": "components.anchor",
        "description": ""
    },
    "Component:components.shard_worldvoter": {
        "prefix": "components.shard_worldvoter",
        "body": "components.shard_worldvoter",
        "description": ""
    },
    "Component:components.hauntable": {
        "prefix": "components.hauntable",
        "body": "components.hauntable",
        "description": ""
    },
    "Component:components.playertargetindicator": {
        "prefix": "components.playertargetindicator",
        "body": "components.playertargetindicator",
        "description": ""
    },
    "Component:components.vanish_on_sleep": {
        "prefix": "components.vanish_on_sleep",
        "body": "components.vanish_on_sleep",
        "description": ""
    },
    "Component:components.playermetrics": {
        "prefix": "components.playermetrics",
        "body": "components.playermetrics",
        "description": ""
    },
    "Component:components.moonaltarlink": {
        "prefix": "components.moonaltarlink",
        "body": "components.moonaltarlink",
        "description": ""
    },
    "Component:components.boatleak": {
        "prefix": "components.boatleak",
        "body": "components.boatleak",
        "description": ""
    },
    "Component:components.shardstate": {
        "prefix": "components.shardstate",
        "body": "components.shardstate",
        "description": ""
    },
    "Component:components.crewmember": {
        "prefix": "components.crewmember",
        "body": "components.crewmember",
        "description": ""
    },
    "Component:components.farmplanttendable": {
        "prefix": "components.farmplanttendable",
        "body": "components.farmplanttendable",
        "description": ""
    },
    "Component:components.shadowthrallmanager": {
        "prefix": "components.shadowthrallmanager",
        "body": "components.shadowthrallmanager",
        "description": ""
    },
    "Component:components.shadowlevel": {
        "prefix": "components.shadowlevel",
        "body": "components.shadowlevel",
        "description": ""
    },
    "Component:components.playervoter": {
        "prefix": "components.playervoter",
        "body": "components.playervoter",
        "description": ""
    },
    "Component:components.cooker": {
        "prefix": "components.cooker",
        "body": "components.cooker",
        "description": ""
    },
    "Component:components.rechargeable": {
        "prefix": "components.rechargeable",
        "body": "components.rechargeable",
        "description": ""
    },
    "Component:components.constructionsite": {
        "prefix": "components.constructionsite",
        "body": "components.constructionsite",
        "description": ""
    },
    "Component:components.dockmanager": {
        "prefix": "components.dockmanager",
        "body": "components.dockmanager",
        "description": ""
    },
    "Component:components.setbonus": {
        "prefix": "components.setbonus",
        "body": "components.setbonus",
        "description": ""
    },
    "Component:components.reader": {
        "prefix": "components.reader",
        "body": "components.reader",
        "description": ""
    },
    "Component:components.damagetypebonus": {
        "prefix": "components.damagetypebonus",
        "body": "components.damagetypebonus",
        "description": ""
    },
    "Component:components.boatmagnetbeacon": {
        "prefix": "components.boatmagnetbeacon",
        "body": "components.boatmagnetbeacon",
        "description": ""
    },
    "Component:components.npc_talker": {
        "prefix": "components.npc_talker",
        "body": "components.npc_talker",
        "description": ""
    },
    "Component:components.yotd_raceprizemanager": {
        "prefix": "components.yotd_raceprizemanager",
        "body": "components.yotd_raceprizemanager",
        "description": ""
    },
    "Component:components.shadowhandspawner": {
        "prefix": "components.shadowhandspawner",
        "body": "components.shadowhandspawner",
        "description": ""
    },
    "Component:components.fuel是燃料": {
        "prefix": "components.fuel",
        "body": "components.fuel",
        "description": "是燃料"
    },
    "Component:components.scrapbookable": {
        "prefix": "components.scrapbookable",
        "body": "components.scrapbookable",
        "description": ""
    },
    "Component:components.savedscale": {
        "prefix": "components.savedscale",
        "body": "components.savedscale",
        "description": ""
    },
    "Component:components.playervision": {
        "prefix": "components.playervision",
        "body": "components.playervision",
        "description": ""
    },
    "Component:components.leader": {
        "prefix": "components.leader",
        "body": "components.leader",
        "description": ""
    },
    "Component:components.lunarhailmanager": {
        "prefix": "components.lunarhailmanager",
        "body": "components.lunarhailmanager",
        "description": ""
    },
    "Component:components.sanityaura": {
        "prefix": "components.sanityaura",
        "body": "components.sanityaura",
        "description": ""
    },
    "Component:components.perishable": {
        "prefix": "components.perishable",
        "body": "components.perishable",
        "description": ""
    },
    "Component:components.nightmareclock": {
        "prefix": "components.nightmareclock",
        "body": "components.nightmareclock",
        "description": ""
    },
    "Component:components.sandstormwatcher": {
        "prefix": "components.sandstormwatcher",
        "body": "components.sandstormwatcher",
        "description": ""
    },
    "Component:components.growable": {
        "prefix": "components.growable",
        "body": "components.growable",
        "description": ""
    },
    "Component:components.saltlicker": {
        "prefix": "components.saltlicker",
        "body": "components.saltlicker",
        "description": ""
    },
    "Component:components.roseinspectableuser": {
        "prefix": "components.roseinspectableuser",
        "body": "components.roseinspectableuser",
        "description": ""
    },
    "Component:components.oceancolor": {
        "prefix": "components.oceancolor",
        "body": "components.oceancolor",
        "description": ""
    },
    "Component:components.rideable": {
        "prefix": "components.rideable",
        "body": "components.rideable",
        "description": ""
    },
    "Component:components.revivablecorpse": {
        "prefix": "components.revivablecorpse",
        "body": "components.revivablecorpse",
        "description": ""
    },
    "Component:components.reticule": {
        "prefix": "components.reticule",
        "body": "components.reticule",
        "description": ""
    },
    "Component:components.channelcastable": {
        "prefix": "components.channelcastable",
        "body": "components.channelcastable",
        "description": ""
    },
    "Component:components.maxlightspawner": {
        "prefix": "components.maxlightspawner",
        "body": "components.maxlightspawner",
        "description": ""
    },
    "Component:components.tool": {
        "prefix": "components.tool",
        "body": "components.tool",
        "description": ""
    },
    "Component:components.researchpointconverter": {
        "prefix": "components.researchpointconverter",
        "body": "components.researchpointconverter",
        "description": ""
    },
    "Component:components.replayproxy": {
        "prefix": "components.replayproxy",
        "body": "components.replayproxy",
        "description": ""
    },
    "Component:components.repairer": {
        "prefix": "components.repairer",
        "body": "components.repairer",
        "description": ""
    },
    "Component:components.moistureimmunity": {
        "prefix": "components.moistureimmunity",
        "body": "components.moistureimmunity",
        "description": ""
    },
    "Component:components.repairable": {
        "prefix": "components.repairable",
        "body": "components.repairable",
        "description": ""
    },
    "Component:components.reloaditem": {
        "prefix": "components.reloaditem",
        "body": "components.reloaditem",
        "description": ""
    },
    "Component:components.formationleader": {
        "prefix": "components.formationleader",
        "body": "components.formationleader",
        "description": ""
    },
    "Component:components.daywalkerspawner": {
        "prefix": "components.daywalkerspawner",
        "body": "components.daywalkerspawner",
        "description": ""
    },
    "Component:components.recipescanner": {
        "prefix": "components.recipescanner",
        "body": "components.recipescanner",
        "description": ""
    },
    "Component:components.quagmire_recipeprices": {
        "prefix": "components.quagmire_recipeprices",
        "body": "components.quagmire_recipeprices",
        "description": ""
    },
    "Component:components.quagmire_map": {
        "prefix": "components.quagmire_map",
        "body": "components.quagmire_map",
        "description": ""
    },
    "Component:components.klaussackspawner": {
        "prefix": "components.klaussackspawner",
        "body": "components.klaussackspawner",
        "description": ""
    },
    "Component:components.prophider": {
        "prefix": "components.prophider",
        "body": "components.prophider",
        "description": ""
    },
    "Component:components.inventoryitem_replica": {
        "prefix": "components.inventoryitem_replica",
        "body": "components.inventoryitem_replica",
        "description": ""
    },
    "Component:components.magician": {
        "prefix": "components.magician",
        "body": "components.magician",
        "description": ""
    },
    "Component:components.preservative": {
        "prefix": "components.preservative",
        "body": "components.preservative",
        "description": ""
    },
    "Component:components.portablestructure": {
        "prefix": "components.portablestructure",
        "body": "components.portablestructure",
        "description": ""
    },
    "Component:components.poppable": {
        "prefix": "components.poppable",
        "body": "components.poppable",
        "description": ""
    },
    "Component:components.domesticatable": {
        "prefix": "components.domesticatable",
        "body": "components.domesticatable",
        "description": ""
    },
    "Component:components.farmplantable": {
        "prefix": "components.farmplantable",
        "body": "components.farmplantable",
        "description": ""
    },
    "Component:components.worlddeciduoustreeupdater": {
        "prefix": "components.worlddeciduoustreeupdater",
        "body": "components.worlddeciduoustreeupdater",
        "description": ""
    },
    "Component:components.maxhealer": {
        "prefix": "components.maxhealer",
        "body": "components.maxhealer",
        "description": ""
    },
    "Component:components.playerspawner": {
        "prefix": "components.playerspawner",
        "body": "components.playerspawner",
        "description": ""
    },
    "Component:components.playerlightningtarget": {
        "prefix": "components.playerlightningtarget",
        "body": "components.playerlightningtarget",
        "description": ""
    },
    "Component:components.spawner": {
        "prefix": "components.spawner",
        "body": "components.spawner",
        "description": ""
    },
    "Component:components.lunarriftmutationsmanager": {
        "prefix": "components.lunarriftmutationsmanager",
        "body": "components.lunarriftmutationsmanager",
        "description": ""
    },
    "Component:components.moonstormmanager": {
        "prefix": "components.moonstormmanager",
        "body": "components.moonstormmanager",
        "description": ""
    },
    "Component:components.playeractionpicker": {
        "prefix": "components.playeractionpicker",
        "body": "components.playeractionpicker",
        "description": ""
    },
    "Component:components.wereness": {
        "prefix": "components.wereness",
        "body": "components.wereness",
        "description": ""
    },
    "Component:components.grottowarmanager": {
        "prefix": "components.grottowarmanager",
        "body": "components.grottowarmanager",
        "description": ""
    },
    "Component:components.werebeast": {
        "prefix": "components.werebeast",
        "body": "components.werebeast",
        "description": ""
    },
    "Component:components.aoeweapon_base": {
        "prefix": "components.aoeweapon_base",
        "body": "components.aoeweapon_base",
        "description": ""
    },
    "Component:components.yotb_stagemanager": {
        "prefix": "components.yotb_stagemanager",
        "body": "components.yotb_stagemanager",
        "description": ""
    },
    "Component:components.plantregistryupdater": {
        "prefix": "components.plantregistryupdater",
        "body": "components.plantregistryupdater",
        "description": ""
    },
    "Component:components.forestresourcespawner": {
        "prefix": "components.forestresourcespawner",
        "body": "components.forestresourcespawner",
        "description": ""
    },
    "Component:components.planarentity": {
        "prefix": "components.planarentity",
        "body": "components.planarentity",
        "description": ""
    },
    "Component:components.boatcannon": {
        "prefix": "components.boatcannon",
        "body": "components.boatcannon",
        "description": ""
    },
    "Component:components.placer": {
        "prefix": "components.placer",
        "body": "components.placer",
        "description": ""
    },
    "Component:components.pickable": {
        "prefix": "components.pickable",
        "body": "components.pickable",
        "description": ""
    },
    "Component:components.bait": {
        "prefix": "components.bait",
        "body": "components.bait",
        "description": ""
    },
    "Component:components.petrifiable": {
        "prefix": "components.petrifiable",
        "body": "components.petrifiable",
        "description": ""
    },
    "Component:components.pethealthbar": {
        "prefix": "components.pethealthbar",
        "body": "components.pethealthbar",
        "description": ""
    },
    "Component:components.sanity": {
        "prefix": "components.sanity",
        "body": "components.sanity",
        "description": ""
    },
    "Component:components.incinerator": {
        "prefix": "components.incinerator",
        "body": "components.incinerator",
        "description": ""
    },
    "Component:components.expertsailor": {
        "prefix": "components.expertsailor",
        "body": "components.expertsailor",
        "description": ""
    },
    "Component:components.periodicspawner": {
        "prefix": "components.periodicspawner",
        "body": "components.periodicspawner",
        "description": ""
    },
    "Component:components.parryweapon": {
        "prefix": "components.parryweapon",
        "body": "components.parryweapon",
        "description": ""
    },
    "Component:components.grottowaterfallsoundcontroller": {
        "prefix": "components.grottowaterfallsoundcontroller",
        "body": "components.grottowaterfallsoundcontroller",
        "description": ""
    },
    "Component:components.papereraser": {
        "prefix": "components.papereraser",
        "body": "components.papereraser",
        "description": ""
    },
    "Component:components.rooted": {
        "prefix": "components.rooted",
        "body": "components.rooted",
        "description": ""
    },
    "Component:components.moonbeastspawner": {
        "prefix": "components.moonbeastspawner",
        "body": "components.moonbeastspawner",
        "description": ""
    },
    "Component:components.hideandseekgame": {
        "prefix": "components.hideandseekgame",
        "body": "components.hideandseekgame",
        "description": ""
    },
    "Component:components.oar": {
        "prefix": "components.oar",
        "body": "components.oar",
        "description": ""
    },
    "Component:components.drawingtool": {
        "prefix": "components.drawingtool",
        "body": "components.drawingtool",
        "description": ""
    },
    "Component:components.murderable": {
        "prefix": "components.murderable",
        "body": "components.murderable",
        "description": ""
    },
    "Component:components.boatracecrew": {
        "prefix": "components.boatracecrew",
        "body": "components.boatracecrew",
        "description": ""
    },
    "Component:components.moonstormwatcher": {
        "prefix": "components.moonstormwatcher",
        "body": "components.moonstormwatcher",
        "description": ""
    },
    "Component:components.worldmeteorshower": {
        "prefix": "components.worldmeteorshower",
        "body": "components.worldmeteorshower",
        "description": ""
    },
    "Component:components.houndedtarget": {
        "prefix": "components.houndedtarget",
        "body": "components.houndedtarget",
        "description": ""
    },
    "Component:components.cooldown": {
        "prefix": "components.cooldown",
        "body": "components.cooldown",
        "description": ""
    },
    "Component:components.fader": {
        "prefix": "components.fader",
        "body": "components.fader",
        "description": ""
    },
    "Component:components.moonrelic": {
        "prefix": "components.moonrelic",
        "body": "components.moonrelic",
        "description": ""
    },
    "Component:components.miasmamanager": {
        "prefix": "components.miasmamanager",
        "body": "components.miasmamanager",
        "description": ""
    },
    "Component:components.occupier": {
        "prefix": "components.occupier",
        "body": "components.occupier",
        "description": ""
    },
    "Component:components.inventoryitemmoisture": {
        "prefix": "components.inventoryitemmoisture",
        "body": "components.inventoryitemmoisture",
        "description": ""
    },
    "Component:components.damagereflect": {
        "prefix": "components.damagereflect",
        "body": "components.damagereflect",
        "description": ""
    },
    "Component:components.experiencecollector": {
        "prefix": "components.experiencecollector",
        "body": "components.experiencecollector",
        "description": ""
    },
    "Component:components.moonaltarlinktarget": {
        "prefix": "components.moonaltarlinktarget",
        "body": "components.moonaltarlinktarget",
        "description": ""
    },
    "Component:components.decay": {
        "prefix": "components.decay",
        "body": "components.decay",
        "description": ""
    },
    "Component:components.bloomer": {
        "prefix": "components.bloomer",
        "body": "components.bloomer",
        "description": ""
    },
    "Component:components.sittable": {
        "prefix": "components.sittable",
        "body": "components.sittable",
        "description": ""
    },
    "Component:components.mightydumbbell": {
        "prefix": "components.mightydumbbell",
        "body": "components.mightydumbbell",
        "description": ""
    },
    "Component:components.mightiness": {
        "prefix": "components.mightiness",
        "body": "components.mightiness",
        "description": ""
    },
    "Component:components.guardian": {
        "prefix": "components.guardian",
        "body": "components.guardian",
        "description": ""
    },
    "Component:components.meteorshower": {
        "prefix": "components.meteorshower",
        "body": "components.meteorshower",
        "description": ""
    },
    "Component:components.carnivalgameshooter": {
        "prefix": "components.carnivalgameshooter",
        "body": "components.carnivalgameshooter",
        "description": ""
    },
    "Component:components.harvestable": {
        "prefix": "components.harvestable",
        "body": "components.harvestable",
        "description": ""
    },
    "Component:components.dumbbelllifter": {
        "prefix": "components.dumbbelllifter",
        "body": "components.dumbbelllifter",
        "description": ""
    },
    "Component:components.markable_proxy": {
        "prefix": "components.markable_proxy",
        "body": "components.markable_proxy",
        "description": ""
    },
    "Component:components.maprevealable": {
        "prefix": "components.maprevealable",
        "body": "components.maprevealable",
        "description": ""
    },
    "Component:components.projectedeffects": {
        "prefix": "components.projectedeffects",
        "body": "components.projectedeffects",
        "description": ""
    },
    "Component:components.foodaffinity": {
        "prefix": "components.foodaffinity",
        "body": "components.foodaffinity",
        "description": ""
    },
    "Component:components.commander": {
        "prefix": "components.commander",
        "body": "components.commander",
        "description": ""
    },
    "Component:components.follower": {
        "prefix": "components.follower",
        "body": "components.follower",
        "description": ""
    },
    "Component:components.formationfollower": {
        "prefix": "components.formationfollower",
        "body": "components.formationfollower",
        "description": ""
    },
    "Component:components.playeravatardata": {
        "prefix": "components.playeravatardata",
        "body": "components.playeravatardata",
        "description": ""
    },
    "Component:components.lunarplant_tentacle_weapon": {
        "prefix": "components.lunarplant_tentacle_weapon",
        "body": "components.lunarplant_tentacle_weapon",
        "description": ""
    },
    "Component:components.lootdropper": {
        "prefix": "components.lootdropper",
        "body": "components.lootdropper",
        "description": ""
    },
    "Component:components.book": {
        "prefix": "components.book",
        "body": "components.book",
        "description": ""
    },
    "Component:components.lavaarenamobtracker": {
        "prefix": "components.lavaarenamobtracker",
        "body": "components.lavaarenamobtracker",
        "description": ""
    },
    "Component:components.crabkingspawner": {
        "prefix": "components.crabkingspawner",
        "body": "components.crabkingspawner",
        "description": ""
    },
    "Component:components.gingerbreadhunter": {
        "prefix": "components.gingerbreadhunter",
        "body": "components.gingerbreadhunter",
        "description": ""
    },
    "Component:components.kramped": {
        "prefix": "components.kramped",
        "body": "components.kramped",
        "description": ""
    },
    "Component:components.undertile": {
        "prefix": "components.undertile",
        "body": "components.undertile",
        "description": ""
    },
    "Component:components.propagator": {
        "prefix": "components.propagator",
        "body": "components.propagator",
        "description": ""
    },
    "Component:components.inspectaclesparticipant": {
        "prefix": "components.inspectaclesparticipant",
        "body": "components.inspectaclesparticipant",
        "description": ""
    },
    "Component:components.fuelmaster": {
        "prefix": "components.fuelmaster",
        "body": "components.fuelmaster",
        "description": ""
    },
    "Component:components.hullhealth": {
        "prefix": "components.hullhealth",
        "body": "components.hullhealth",
        "description": ""
    },
    "Component:components.hudindicatablemanager": {
        "prefix": "components.hudindicatablemanager",
        "body": "components.hudindicatablemanager",
        "description": ""
    },
    "Component:components.homeseeker": {
        "prefix": "components.homeseeker",
        "body": "components.homeseeker",
        "description": ""
    },
    "Component:components.hideout": {
        "prefix": "components.hideout",
        "body": "components.hideout",
        "description": ""
    },
    "Component:components.oasis": {
        "prefix": "components.oasis",
        "body": "components.oasis",
        "description": ""
    },
    "Component:components.hideandseeker": {
        "prefix": "components.hideandseeker",
        "body": "components.hideandseeker",
        "description": ""
    },
    "Component:components.souleater": {
        "prefix": "components.souleater",
        "body": "components.souleater",
        "description": ""
    },
    "Component:components.heater": {
        "prefix": "components.heater",
        "body": "components.heater",
        "description": ""
    },
    "Component:components.healthbar": {
        "prefix": "components.healthbar",
        "body": "components.healthbar",
        "description": ""
    },
    "Component:components.deciduoustreeupdater": {
        "prefix": "components.deciduoustreeupdater",
        "body": "components.deciduoustreeupdater",
        "description": ""
    },
    "Component:components.carnivaldecorranker": {
        "prefix": "components.carnivaldecorranker",
        "body": "components.carnivaldecorranker",
        "description": ""
    },
    "Component:components.unevenground": {
        "prefix": "components.unevenground",
        "body": "components.unevenground",
        "description": ""
    },
    "Component:components.shard_seasons": {
        "prefix": "components.shard_seasons",
        "body": "components.shard_seasons",
        "description": ""
    },
    "Component:components.maxwelltalker": {
        "prefix": "components.maxwelltalker",
        "body": "components.maxwelltalker",
        "description": ""
    },
    "Component:components.halloweenpotionmoon": {
        "prefix": "components.halloweenpotionmoon",
        "body": "components.halloweenpotionmoon",
        "description": ""
    },
    "Component:components.itemaffinity": {
        "prefix": "components.itemaffinity",
        "body": "components.itemaffinity",
        "description": ""
    },
    "Component:components.brushable": {
        "prefix": "components.brushable",
        "body": "components.brushable",
        "description": ""
    },
    "Component:components.builder_replica": {
        "prefix": "components.builder_replica",
        "body": "components.builder_replica",
        "description": ""
    },
    "Component:components.giftreceiver": {
        "prefix": "components.giftreceiver",
        "body": "components.giftreceiver",
        "description": ""
    },
    "Component:components.bedazzler": {
        "prefix": "components.bedazzler",
        "body": "components.bedazzler",
        "description": ""
    },
    "Component:components.ghostlybond": {
        "prefix": "components.ghostlybond",
        "body": "components.ghostlybond",
        "description": ""
    },
    "Component:components.fertilizer": {
        "prefix": "components.fertilizer",
        "body": "components.fertilizer",
        "description": ""
    },
    "Component:components.fueler": {
        "prefix": "components.fueler",
        "body": "components.fueler",
        "description": ""
    },
    "Component:components.fueled可被补充燃料的": {
        "prefix": "components.fueled",
        "body": "components.fueled",
        "description": "可被补充燃料的"
    },
    "Component:components.brightmarespawner": {
        "prefix": "components.brightmarespawner",
        "body": "components.brightmarespawner",
        "description": ""
    },
    "Component:components.combat_replica": {
        "prefix": "components.combat_replica",
        "body": "components.combat_replica",
        "description": ""
    },
    "Component:components.walkableplatformmanager": {
        "prefix": "components.walkableplatformmanager",
        "body": "components.walkableplatformmanager",
        "description": ""
    },
    "Component:components.forgerepair": {
        "prefix": "components.forgerepair",
        "body": "components.forgerepair",
        "description": ""
    },
    "Component:components.toggleableitem": {
        "prefix": "components.toggleableitem",
        "body": "components.toggleableitem",
        "description": ""
    },
    "Component:components.madsciencelab": {
        "prefix": "components.madsciencelab",
        "body": "components.madsciencelab",
        "description": ""
    },
    "Component:components.ambientsound": {
        "prefix": "components.ambientsound",
        "body": "components.ambientsound",
        "description": ""
    },
    "Component:components.flotsamgenerator": {
        "prefix": "components.flotsamgenerator",
        "body": "components.flotsamgenerator",
        "description": ""
    },
    "Component:components.floater": {
        "prefix": "components.floater",
        "body": "components.floater",
        "description": ""
    },
    "Component:components.fishingnetvisualizer": {
        "prefix": "components.fishingnetvisualizer",
        "body": "components.fishingnetvisualizer",
        "description": ""
    },
    "Component:components.ambientlighting": {
        "prefix": "components.ambientlighting",
        "body": "components.ambientlighting",
        "description": ""
    },
    "Component:components.touchstonetracker": {
        "prefix": "components.touchstonetracker",
        "body": "components.touchstonetracker",
        "description": ""
    },
    "Component:components.fan": {
        "prefix": "components.fan",
        "body": "components.fan",
        "description": ""
    },
    "Component:components.stackable_replica": {
        "prefix": "components.stackable_replica",
        "body": "components.stackable_replica",
        "description": ""
    },
    "Component:components.damagetracker": {
        "prefix": "components.damagetracker",
        "body": "components.damagetracker",
        "description": ""
    },
    "Component:components.edible可食用的": {
        "prefix": "components.edible",
        "body": "components.edible",
        "description": "可食用的"
    },
    "Component:components.drownable": {
        "prefix": "components.drownable",
        "body": "components.drownable",
        "description": ""
    },
    "Component:components.pollinator": {
        "prefix": "components.pollinator",
        "body": "components.pollinator",
        "description": ""
    },
    "Component:components.debuff": {
        "prefix": "components.debuff",
        "body": "components.debuff",
        "description": ""
    },
    "Component:components.dataanalyzer": {
        "prefix": "components.dataanalyzer",
        "body": "components.dataanalyzer",
        "description": ""
    },
    "Component:components.embarker": {
        "prefix": "components.embarker",
        "body": "components.embarker",
        "description": ""
    },
    "Component:components.cyclable": {
        "prefix": "components.cyclable",
        "body": "components.cyclable",
        "description": ""
    },
    "Component:components.crittertraits": {
        "prefix": "components.crittertraits",
        "body": "components.crittertraits",
        "description": ""
    },
    "Component:components.seasons": {
        "prefix": "components.seasons",
        "body": "components.seasons",
        "description": ""
    },
    "Component:components.constructionsite_replica": {
        "prefix": "components.constructionsite_replica",
        "body": "components.constructionsite_replica",
        "description": ""
    },
    "Component:components.constructionplans": {
        "prefix": "components.constructionplans",
        "body": "components.constructionplans",
        "description": ""
    },
    "Component:components.caveweather": {
        "prefix": "components.caveweather",
        "body": "components.caveweather",
        "description": ""
    },
    "Component:components.stewer": {
        "prefix": "components.stewer",
        "body": "components.stewer",
        "description": ""
    },
    "Component:recipestockpile": {
        "prefix": "recipestockpile",
        "body": "recipestockpile",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:cursable": {
        "prefix": "cursable",
        "body": "cursable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:knownlocations": {
        "prefix": "knownlocations",
        "body": "knownlocations",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:ruinsshadelingspawner": {
        "prefix": "ruinsshadelingspawner",
        "body": "ruinsshadelingspawner",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:smotherer": {
        "prefix": "smotherer",
        "body": "smotherer",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:weather": {
        "prefix": "weather",
        "body": "weather",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:firedetector": {
        "prefix": "firedetector",
        "body": "firedetector",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:channelable": {
        "prefix": "channelable",
        "body": "channelable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:fishingrod_replica": {
        "prefix": "fishingrod_replica",
        "body": "fishingrod_replica",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:hounded": {
        "prefix": "hounded",
        "body": "hounded",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:diseaseable": {
        "prefix": "diseaseable",
        "body": "diseaseable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:boatcrew": {
        "prefix": "boatcrew",
        "body": "boatcrew",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:workmultiplier": {
        "prefix": "workmultiplier",
        "body": "workmultiplier",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:talker": {
        "prefix": "talker",
        "body": "talker",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:inspectable": {
        "prefix": "inspectable",
        "body": "inspectable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:shard_autosaver": {
        "prefix": "shard_autosaver",
        "body": "shard_autosaver",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:planardamage": {
        "prefix": "planardamage",
        "body": "planardamage",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:skilltreeupdater": {
        "prefix": "skilltreeupdater",
        "body": "skilltreeupdater",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:sinkholespawner": {
        "prefix": "sinkholespawner",
        "body": "sinkholespawner",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:catcher": {
        "prefix": "catcher",
        "body": "catcher",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:stageactor": {
        "prefix": "stageactor",
        "body": "stageactor",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:roseinspectable": {
        "prefix": "roseinspectable",
        "body": "roseinspectable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:rainimmunity": {
        "prefix": "rainimmunity",
        "body": "rainimmunity",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:lock": {
        "prefix": "lock",
        "body": "lock",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:klaussackloot": {
        "prefix": "klaussackloot",
        "body": "klaussackloot",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:appraisable": {
        "prefix": "appraisable",
        "body": "appraisable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:carefulwalker": {
        "prefix": "carefulwalker",
        "body": "carefulwalker",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:heavyobstacleusetarget": {
        "prefix": "heavyobstacleusetarget",
        "body": "heavyobstacleusetarget",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:worldtemperature": {
        "prefix": "worldtemperature",
        "body": "worldtemperature",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:friendlevels": {
        "prefix": "friendlevels",
        "body": "friendlevels",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:boatdrifter": {
        "prefix": "boatdrifter",
        "body": "boatdrifter",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:grower": {
        "prefix": "grower",
        "body": "grower",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:petleash": {
        "prefix": "petleash",
        "body": "petleash",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:shadowsubmissive": {
        "prefix": "shadowsubmissive",
        "body": "shadowsubmissive",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:boatrotator": {
        "prefix": "boatrotator",
        "body": "boatrotator",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:aoespell": {
        "prefix": "aoespell",
        "body": "aoespell",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:sheltered": {
        "prefix": "sheltered",
        "body": "sheltered",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:mapspotrevealer": {
        "prefix": "mapspotrevealer",
        "body": "mapspotrevealer",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:distancefade": {
        "prefix": "distancefade",
        "body": "distancefade",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:healer": {
        "prefix": "healer",
        "body": "healer",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:grabbable": {
        "prefix": "grabbable",
        "body": "grabbable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:winch": {
        "prefix": "winch",
        "body": "winch",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:worldoverseer": {
        "prefix": "worldoverseer",
        "body": "worldoverseer",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:skinner": {
        "prefix": "skinner",
        "body": "skinner",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:forcecompostable": {
        "prefix": "forcecompostable",
        "body": "forcecompostable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:desolationspawner": {
        "prefix": "desolationspawner",
        "body": "desolationspawner",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:cookbookupdater": {
        "prefix": "cookbookupdater",
        "body": "cookbookupdater",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:shard_sinkholes": {
        "prefix": "shard_sinkholes",
        "body": "shard_sinkholes",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:markable": {
        "prefix": "markable",
        "body": "markable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:summoningitem": {
        "prefix": "summoningitem",
        "body": "summoningitem",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:kitcoonden": {
        "prefix": "kitcoonden",
        "body": "kitcoonden",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:wateryprotection": {
        "prefix": "wateryprotection",
        "body": "wateryprotection",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:quagmire_hangriness": {
        "prefix": "quagmire_hangriness",
        "body": "quagmire_hangriness",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:clock": {
        "prefix": "clock",
        "body": "clock",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:charliecutscene": {
        "prefix": "charliecutscene",
        "body": "charliecutscene",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:followerherder": {
        "prefix": "followerherder",
        "body": "followerherder",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:boatring": {
        "prefix": "boatring",
        "body": "boatring",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:possessedaxe": {
        "prefix": "possessedaxe",
        "body": "possessedaxe",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:entitytracker": {
        "prefix": "entitytracker",
        "body": "entitytracker",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:attunable": {
        "prefix": "attunable",
        "body": "attunable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:fishschool": {
        "prefix": "fishschool",
        "body": "fishschool",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:nutrients_visual_manager": {
        "prefix": "nutrients_visual_manager",
        "body": "nutrients_visual_manager",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:closeinspector": {
        "prefix": "closeinspector",
        "body": "closeinspector",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:preserver": {
        "prefix": "preserver",
        "body": "preserver",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:temperatureoverrider": {
        "prefix": "temperatureoverrider",
        "body": "temperatureoverrider",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:lunarthrall_plantspawner": {
        "prefix": "lunarthrall_plantspawner",
        "body": "lunarthrall_plantspawner",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:cookable": {
        "prefix": "cookable",
        "body": "cookable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:singingshellmanager": {
        "prefix": "singingshellmanager",
        "body": "singingshellmanager",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:cookiecutterdrill": {
        "prefix": "cookiecutterdrill",
        "body": "cookiecutterdrill",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:playercontroller": {
        "prefix": "playercontroller",
        "body": "playercontroller",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:prototyper": {
        "prefix": "prototyper",
        "body": "prototyper",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:oceanfishingtackle": {
        "prefix": "oceanfishingtackle",
        "body": "oceanfishingtackle",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:fertilizable": {
        "prefix": "fertilizable",
        "body": "fertilizable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:lighter": {
        "prefix": "lighter",
        "body": "lighter",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:moontrader": {
        "prefix": "moontrader",
        "body": "moontrader",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:furnituredecor": {
        "prefix": "furnituredecor",
        "body": "furnituredecor",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:deployhelper": {
        "prefix": "deployhelper",
        "body": "deployhelper",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:pocketwatch_dismantler": {
        "prefix": "pocketwatch_dismantler",
        "body": "pocketwatch_dismantler",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:equippable_replica": {
        "prefix": "equippable_replica",
        "body": "equippable_replica",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:erasablepaper": {
        "prefix": "erasablepaper",
        "body": "erasablepaper",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:witherable": {
        "prefix": "witherable",
        "body": "witherable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:moonstorms": {
        "prefix": "moonstorms",
        "body": "moonstorms",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:positionalwarp": {
        "prefix": "positionalwarp",
        "body": "positionalwarp",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:wardrobe": {
        "prefix": "wardrobe",
        "body": "wardrobe",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:explosiveresist": {
        "prefix": "explosiveresist",
        "body": "explosiveresist",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:ocean": {
        "prefix": "ocean",
        "body": "ocean",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:minigame": {
        "prefix": "minigame",
        "body": "minigame",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:acidinfusible": {
        "prefix": "acidinfusible",
        "body": "acidinfusible",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:nis": {
        "prefix": "nis",
        "body": "nis",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:trap": {
        "prefix": "trap",
        "body": "trap",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:forestdaywalkerspawner": {
        "prefix": "forestdaywalkerspawner",
        "body": "forestdaywalkerspawner",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:fillable": {
        "prefix": "fillable",
        "body": "fillable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:burnable": {
        "prefix": "burnable",
        "body": "burnable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:migrationpetowner": {
        "prefix": "migrationpetowner",
        "body": "migrationpetowner",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:lavaarenamusic": {
        "prefix": "lavaarenamusic",
        "body": "lavaarenamusic",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:distancetracker": {
        "prefix": "distancetracker",
        "body": "distancetracker",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:builder": {
        "prefix": "builder",
        "body": "builder",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:retrofitforestmap_anr": {
        "prefix": "retrofitforestmap_anr",
        "body": "retrofitforestmap_anr",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:equippable": {
        "prefix": "equippable",
        "body": "equippable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:boatcannonuser": {
        "prefix": "boatcannonuser",
        "body": "boatcannonuser",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:treasuremarked": {
        "prefix": "treasuremarked",
        "body": "treasuremarked",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:farmsoildrinker": {
        "prefix": "farmsoildrinker",
        "body": "farmsoildrinker",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:rider": {
        "prefix": "rider",
        "body": "rider",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:drawable": {
        "prefix": "drawable",
        "body": "drawable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:highlightchild": {
        "prefix": "highlightchild",
        "body": "highlightchild",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:penguinspawner": {
        "prefix": "penguinspawner",
        "body": "penguinspawner",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:beard": {
        "prefix": "beard",
        "body": "beard",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:schoolspawner": {
        "prefix": "schoolspawner",
        "body": "schoolspawner",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:seamlessplayerswapper": {
        "prefix": "seamlessplayerswapper",
        "body": "seamlessplayerswapper",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:unsaddler": {
        "prefix": "unsaddler",
        "body": "unsaddler",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:dryer": {
        "prefix": "dryer",
        "body": "dryer",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:riftspawner": {
        "prefix": "riftspawner",
        "body": "riftspawner",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:playerinspectable": {
        "prefix": "playerinspectable",
        "body": "playerinspectable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:carnivalgamefeedable": {
        "prefix": "carnivalgamefeedable",
        "body": "carnivalgamefeedable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:area_trigger": {
        "prefix": "area_trigger",
        "body": "area_trigger",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:named_replica": {
        "prefix": "named_replica",
        "body": "named_replica",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:vase": {
        "prefix": "vase",
        "body": "vase",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:raindome": {
        "prefix": "raindome",
        "body": "raindome",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:savedrotation": {
        "prefix": "savedrotation",
        "body": "savedrotation",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:healthtrigger": {
        "prefix": "healthtrigger",
        "body": "healthtrigger",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:insulator": {
        "prefix": "insulator",
        "body": "insulator",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:pinnable": {
        "prefix": "pinnable",
        "body": "pinnable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:colourcube": {
        "prefix": "colourcube",
        "body": "colourcube",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:steeringwheel": {
        "prefix": "steeringwheel",
        "body": "steeringwheel",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:batspawner": {
        "prefix": "batspawner",
        "body": "batspawner",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:storytellingprop": {
        "prefix": "storytellingprop",
        "body": "storytellingprop",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:sleepingbaguser": {
        "prefix": "sleepingbaguser",
        "body": "sleepingbaguser",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:focalpoint": {
        "prefix": "focalpoint",
        "body": "focalpoint",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:armor": {
        "prefix": "armor",
        "body": "armor",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:writeable_replica": {
        "prefix": "writeable_replica",
        "body": "writeable_replica",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:combat": {
        "prefix": "combat",
        "body": "combat",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:moosespawner": {
        "prefix": "moosespawner",
        "body": "moosespawner",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:raindomewatcher": {
        "prefix": "raindomewatcher",
        "body": "raindomewatcher",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:amphibiouscreature": {
        "prefix": "amphibiouscreature",
        "body": "amphibiouscreature",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:shatterfx": {
        "prefix": "shatterfx",
        "body": "shatterfx",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:balloonmaker": {
        "prefix": "balloonmaker",
        "body": "balloonmaker",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:oceanfishingrod": {
        "prefix": "oceanfishingrod",
        "body": "oceanfishingrod",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:crop": {
        "prefix": "crop",
        "body": "crop",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:carnivalgameitem": {
        "prefix": "carnivalgameitem",
        "body": "carnivalgameitem",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:fertilizerresearchable": {
        "prefix": "fertilizerresearchable",
        "body": "fertilizerresearchable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:healthsyncer": {
        "prefix": "healthsyncer",
        "body": "healthsyncer",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:fencerotator": {
        "prefix": "fencerotator",
        "body": "fencerotator",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:beaverness": {
        "prefix": "beaverness",
        "body": "beaverness",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:autosaver": {
        "prefix": "autosaver",
        "body": "autosaver",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:inkable": {
        "prefix": "inkable",
        "body": "inkable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:oceanfishinghook": {
        "prefix": "oceanfishinghook",
        "body": "oceanfishinghook",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:farmtiller": {
        "prefix": "farmtiller",
        "body": "farmtiller",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:boatphysics": {
        "prefix": "boatphysics",
        "body": "boatphysics",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:batteryuser": {
        "prefix": "batteryuser",
        "body": "batteryuser",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:mine": {
        "prefix": "mine",
        "body": "mine",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:rampingspawner": {
        "prefix": "rampingspawner",
        "body": "rampingspawner",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:firefx": {
        "prefix": "firefx",
        "body": "firefx",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:discoverable": {
        "prefix": "discoverable",
        "body": "discoverable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:upgrader": {
        "prefix": "upgrader",
        "body": "upgrader",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:custombuildmanager": {
        "prefix": "custombuildmanager",
        "body": "custombuildmanager",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:sharkboimanager": {
        "prefix": "sharkboimanager",
        "body": "sharkboimanager",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:groomer": {
        "prefix": "groomer",
        "body": "groomer",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:canopylightrays": {
        "prefix": "canopylightrays",
        "body": "canopylightrays",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:weighable": {
        "prefix": "weighable",
        "body": "weighable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:shard_worldreset": {
        "prefix": "shard_worldreset",
        "body": "shard_worldreset",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:colourtweener": {
        "prefix": "colourtweener",
        "body": "colourtweener",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:aura": {
        "prefix": "aura",
        "body": "aura",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:tacklesketch": {
        "prefix": "tacklesketch",
        "body": "tacklesketch",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:container": {
        "prefix": "container",
        "body": "container",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:bundlemaker": {
        "prefix": "bundlemaker",
        "body": "bundlemaker",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:ghostlyelixirable": {
        "prefix": "ghostlyelixirable",
        "body": "ghostlyelixirable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:yotc_racestats": {
        "prefix": "yotc_racestats",
        "body": "yotc_racestats",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:trader": {
        "prefix": "trader",
        "body": "trader",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:soul": {
        "prefix": "soul",
        "body": "soul",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:itemweigher": {
        "prefix": "itemweigher",
        "body": "itemweigher",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:frograin": {
        "prefix": "frograin",
        "body": "frograin",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:blowinwind": {
        "prefix": "blowinwind",
        "body": "blowinwind",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:amorphous": {
        "prefix": "amorphous",
        "body": "amorphous",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:container_replica": {
        "prefix": "container_replica",
        "body": "container_replica",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:spell": {
        "prefix": "spell",
        "body": "spell",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:activatable": {
        "prefix": "activatable",
        "body": "activatable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:plantable": {
        "prefix": "plantable",
        "body": "plantable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:unwrappable": {
        "prefix": "unwrappable",
        "body": "unwrappable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:aoeweapon_lunge": {
        "prefix": "aoeweapon_lunge",
        "body": "aoeweapon_lunge",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:butterflyspawner": {
        "prefix": "butterflyspawner",
        "body": "butterflyspawner",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:wavemanager": {
        "prefix": "wavemanager",
        "body": "wavemanager",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:planardefense": {
        "prefix": "planardefense",
        "body": "planardefense",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:channelcaster": {
        "prefix": "channelcaster",
        "body": "channelcaster",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:battleborn": {
        "prefix": "battleborn",
        "body": "battleborn",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:hideandseekhider": {
        "prefix": "hideandseekhider",
        "body": "hideandseekhider",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:writeable": {
        "prefix": "writeable",
        "body": "writeable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:bloomness": {
        "prefix": "bloomness",
        "body": "bloomness",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:magiciantool": {
        "prefix": "magiciantool",
        "body": "magiciantool",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:stuckdetection": {
        "prefix": "stuckdetection",
        "body": "stuckdetection",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:slipperyfeet": {
        "prefix": "slipperyfeet",
        "body": "slipperyfeet",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:projectile": {
        "prefix": "projectile",
        "body": "projectile",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:stunnable": {
        "prefix": "stunnable",
        "body": "stunnable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:questowner": {
        "prefix": "questowner",
        "body": "questowner",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:treegrowthsolution": {
        "prefix": "treegrowthsolution",
        "body": "treegrowthsolution",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:minigame_spectator": {
        "prefix": "minigame_spectator",
        "body": "minigame_spectator",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:circler": {
        "prefix": "circler",
        "body": "circler",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:groundshadowhandler": {
        "prefix": "groundshadowhandler",
        "body": "groundshadowhandler",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:stackable": {
        "prefix": "stackable",
        "body": "stackable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:named": {
        "prefix": "named",
        "body": "named",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:bedazzlement": {
        "prefix": "bedazzlement",
        "body": "bedazzlement",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:shaveable": {
        "prefix": "shaveable",
        "body": "shaveable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:shard_daywalkerspawner": {
        "prefix": "shard_daywalkerspawner",
        "body": "shard_daywalkerspawner",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:hitchable": {
        "prefix": "hitchable",
        "body": "hitchable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:fishingrod": {
        "prefix": "fishingrod",
        "body": "fishingrod",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:hunger_replica": {
        "prefix": "hunger_replica",
        "body": "hunger_replica",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:moisture_replica": {
        "prefix": "moisture_replica",
        "body": "moisture_replica",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:hunter": {
        "prefix": "hunter",
        "body": "hunter",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:powerload": {
        "prefix": "powerload",
        "body": "powerload",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:mood": {
        "prefix": "mood",
        "body": "mood",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:age": {
        "prefix": "age",
        "body": "age",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:caveins": {
        "prefix": "caveins",
        "body": "caveins",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:upgrademoduleowner": {
        "prefix": "upgrademoduleowner",
        "body": "upgrademoduleowner",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:boattrail": {
        "prefix": "boattrail",
        "body": "boattrail",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:miasmawatcher": {
        "prefix": "miasmawatcher",
        "body": "miasmawatcher",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:despawnfader": {
        "prefix": "despawnfader",
        "body": "despawnfader",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:mermcandidate": {
        "prefix": "mermcandidate",
        "body": "mermcandidate",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:health_replica": {
        "prefix": "health_replica",
        "body": "health_replica",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:sharkboimanagerhelper": {
        "prefix": "sharkboimanagerhelper",
        "body": "sharkboimanagerhelper",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:staffsanity": {
        "prefix": "staffsanity",
        "body": "staffsanity",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:klaussacklock": {
        "prefix": "klaussacklock",
        "body": "klaussacklock",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:playerprox": {
        "prefix": "playerprox",
        "body": "playerprox",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:yotb_stager": {
        "prefix": "yotb_stager",
        "body": "yotb_stager",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:playbill_lecturn": {
        "prefix": "playbill_lecturn",
        "body": "playbill_lecturn",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:townportalregistry": {
        "prefix": "townportalregistry",
        "body": "townportalregistry",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:timer": {
        "prefix": "timer",
        "body": "timer",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:shadowdominance": {
        "prefix": "shadowdominance",
        "body": "shadowdominance",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:debuffable": {
        "prefix": "debuffable",
        "body": "debuffable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:lordfruitflytrigger": {
        "prefix": "lordfruitflytrigger",
        "body": "lordfruitflytrigger",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:submersible": {
        "prefix": "submersible",
        "body": "submersible",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:oceanfishable": {
        "prefix": "oceanfishable",
        "body": "oceanfishable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:inventory_replica": {
        "prefix": "inventory_replica",
        "body": "inventory_replica",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:farming_manager": {
        "prefix": "farming_manager",
        "body": "farming_manager",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:herdmember": {
        "prefix": "herdmember",
        "body": "herdmember",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:flotationdevice": {
        "prefix": "flotationdevice",
        "body": "flotationdevice",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:piratespawner": {
        "prefix": "piratespawner",
        "body": "piratespawner",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:slipperyfeettarget": {
        "prefix": "slipperyfeettarget",
        "body": "slipperyfeettarget",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:acidlevel": {
        "prefix": "acidlevel",
        "body": "acidlevel",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:shard_mermkingwatcher": {
        "prefix": "shard_mermkingwatcher",
        "body": "shard_mermkingwatcher",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:finiteuses": {
        "prefix": "finiteuses",
        "body": "finiteuses",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:deerclopsspawner": {
        "prefix": "deerclopsspawner",
        "body": "deerclopsspawner",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:deerherding": {
        "prefix": "deerherding",
        "body": "deerherding",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:malbatrossspawner": {
        "prefix": "malbatrossspawner",
        "body": "malbatrossspawner",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:maprecorder": {
        "prefix": "maprecorder",
        "body": "maprecorder",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:oceanthrowable": {
        "prefix": "oceanthrowable",
        "body": "oceanthrowable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:coach": {
        "prefix": "coach",
        "body": "coach",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:boatrace_proximitychecker": {
        "prefix": "boatrace_proximitychecker",
        "body": "boatrace_proximitychecker",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:walkableplatformplayer": {
        "prefix": "walkableplatformplayer",
        "body": "walkableplatformplayer",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:uianim": {
        "prefix": "uianim",
        "body": "uianim",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:acidbatwavemanager": {
        "prefix": "acidbatwavemanager",
        "body": "acidbatwavemanager",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:dynamicmusic": {
        "prefix": "dynamicmusic",
        "body": "dynamicmusic",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:locomotor": {
        "prefix": "locomotor",
        "body": "locomotor",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:messagebottlemanager": {
        "prefix": "messagebottlemanager",
        "body": "messagebottlemanager",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:efficientuser": {
        "prefix": "efficientuser",
        "body": "efficientuser",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:oceanfishingrod_replica": {
        "prefix": "oceanfishingrod_replica",
        "body": "oceanfishingrod_replica",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:firebug": {
        "prefix": "firebug",
        "body": "firebug",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:aoeweapon_leap": {
        "prefix": "aoeweapon_leap",
        "body": "aoeweapon_leap",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:deerherdspawner": {
        "prefix": "deerherdspawner",
        "body": "deerherdspawner",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:freezefx": {
        "prefix": "freezefx",
        "body": "freezefx",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:bathbomb": {
        "prefix": "bathbomb",
        "body": "bathbomb",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:bathbombable": {
        "prefix": "bathbombable",
        "body": "bathbombable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:constructionbuilder": {
        "prefix": "constructionbuilder",
        "body": "constructionbuilder",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:aoetargeting": {
        "prefix": "aoetargeting",
        "body": "aoetargeting",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:electricattacks": {
        "prefix": "electricattacks",
        "body": "electricattacks",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:grogginess": {
        "prefix": "grogginess",
        "body": "grogginess",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:lighttweener": {
        "prefix": "lighttweener",
        "body": "lighttweener",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:objectspawner": {
        "prefix": "objectspawner",
        "body": "objectspawner",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:lureplantspawner": {
        "prefix": "lureplantspawner",
        "body": "lureplantspawner",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:beefalometrics": {
        "prefix": "beefalometrics",
        "body": "beefalometrics",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:boattrailmover": {
        "prefix": "boattrailmover",
        "body": "boattrailmover",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:thief": {
        "prefix": "thief",
        "body": "thief",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:nightlightmanager": {
        "prefix": "nightlightmanager",
        "body": "nightlightmanager",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:quaker": {
        "prefix": "quaker",
        "body": "quaker",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:occupiable": {
        "prefix": "occupiable",
        "body": "occupiable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:inventoryitem": {
        "prefix": "inventoryitem",
        "body": "inventoryitem",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:key": {
        "prefix": "key",
        "body": "key",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:bosstargeter": {
        "prefix": "bosstargeter",
        "body": "bosstargeter",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:areaaware": {
        "prefix": "areaaware",
        "body": "areaaware",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:wildfires": {
        "prefix": "wildfires",
        "body": "wildfires",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:strafer": {
        "prefix": "strafer",
        "body": "strafer",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:oldager": {
        "prefix": "oldager",
        "body": "oldager",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:colouradder": {
        "prefix": "colouradder",
        "body": "colouradder",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:epicscare": {
        "prefix": "epicscare",
        "body": "epicscare",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:sharklistener": {
        "prefix": "sharklistener",
        "body": "sharklistener",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:yotc_raceprizemanager": {
        "prefix": "yotc_raceprizemanager",
        "body": "yotc_raceprizemanager",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:emitter": {
        "prefix": "emitter",
        "body": "emitter",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:sanity_replica": {
        "prefix": "sanity_replica",
        "body": "sanity_replica",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:boatringdata": {
        "prefix": "boatringdata",
        "body": "boatringdata",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:inventoryitemholder": {
        "prefix": "inventoryitemholder",
        "body": "inventoryitemholder",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:cattoy": {
        "prefix": "cattoy",
        "body": "cattoy",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:yotc_racestart": {
        "prefix": "yotc_racestart",
        "body": "yotc_racestart",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:colouraddersync": {
        "prefix": "colouraddersync",
        "body": "colouraddersync",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:singingshelltrigger": {
        "prefix": "singingshelltrigger",
        "body": "singingshelltrigger",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:quagmire_recipebook": {
        "prefix": "quagmire_recipebook",
        "body": "quagmire_recipebook",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:brush": {
        "prefix": "brush",
        "body": "brush",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:lavaarenaeventstate": {
        "prefix": "lavaarenaeventstate",
        "body": "lavaarenaeventstate",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:stageactingprop": {
        "prefix": "stageactingprop",
        "body": "stageactingprop",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:foodmemory": {
        "prefix": "foodmemory",
        "body": "foodmemory",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:digester": {
        "prefix": "digester",
        "body": "digester",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:yotb_sewer": {
        "prefix": "yotb_sewer",
        "body": "yotb_sewer",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:shaver": {
        "prefix": "shaver",
        "body": "shaver",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:hideandseekhidingspot": {
        "prefix": "hideandseekhidingspot",
        "body": "hideandseekhidingspot",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:curseditem": {
        "prefix": "curseditem",
        "body": "curseditem",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:constructionbuilderuidata": {
        "prefix": "constructionbuilderuidata",
        "body": "constructionbuilderuidata",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:sewing": {
        "prefix": "sewing",
        "body": "sewing",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:grouptargeter": {
        "prefix": "grouptargeter",
        "body": "grouptargeter",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:attuner": {
        "prefix": "attuner",
        "body": "attuner",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:singinginspiration": {
        "prefix": "singinginspiration",
        "body": "singinginspiration",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:toadstoolspawner": {
        "prefix": "toadstoolspawner",
        "body": "toadstoolspawner",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:hudindicatorwatcher": {
        "prefix": "hudindicatorwatcher",
        "body": "hudindicatorwatcher",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:chessunlocks": {
        "prefix": "chessunlocks",
        "body": "chessunlocks",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:sandstorms": {
        "prefix": "sandstorms",
        "body": "sandstorms",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:freezable": {
        "prefix": "freezable",
        "body": "freezable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:battery": {
        "prefix": "battery",
        "body": "battery",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:wax": {
        "prefix": "wax",
        "body": "wax",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:debugger": {
        "prefix": "debugger",
        "body": "debugger",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:ghostlyelixir": {
        "prefix": "ghostlyelixir",
        "body": "ghostlyelixir",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:container_proxy": {
        "prefix": "container_proxy",
        "body": "container_proxy",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:selfstacker": {
        "prefix": "selfstacker",
        "body": "selfstacker",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:plantresearchable": {
        "prefix": "plantresearchable",
        "body": "plantresearchable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:saddler": {
        "prefix": "saddler",
        "body": "saddler",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:yotc_racecompetitor": {
        "prefix": "yotc_racecompetitor",
        "body": "yotc_racecompetitor",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:instrument": {
        "prefix": "instrument",
        "body": "instrument",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:plantregrowth": {
        "prefix": "plantregrowth",
        "body": "plantregrowth",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:carnivalevent": {
        "prefix": "carnivalevent",
        "body": "carnivalevent",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:yotb_skinunlocker": {
        "prefix": "yotb_skinunlocker",
        "body": "yotb_skinunlocker",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:worldwind": {
        "prefix": "worldwind",
        "body": "worldwind",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:worldvoter": {
        "prefix": "worldvoter",
        "body": "worldvoter",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:worldstate": {
        "prefix": "worldstate",
        "body": "worldstate",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:shard_players": {
        "prefix": "shard_players",
        "body": "shard_players",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:waterphysics": {
        "prefix": "waterphysics",
        "body": "waterphysics",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:carnivalhostsummon": {
        "prefix": "carnivalhostsummon",
        "body": "carnivalhostsummon",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:worldsettingstimer": {
        "prefix": "worldsettingstimer",
        "body": "worldsettingstimer",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:disappears": {
        "prefix": "disappears",
        "body": "disappears",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:archivemanager": {
        "prefix": "archivemanager",
        "body": "archivemanager",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:worldsettings": {
        "prefix": "worldsettings",
        "body": "worldsettings",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:worldreset": {
        "prefix": "worldreset",
        "body": "worldreset",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:worldmigrator": {
        "prefix": "worldmigrator",
        "body": "worldmigrator",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:mast": {
        "prefix": "mast",
        "body": "mast",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:machine": {
        "prefix": "machine",
        "body": "machine",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:moonstormlightningmanager": {
        "prefix": "moonstormlightningmanager",
        "body": "moonstormlightningmanager",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:dsp": {
        "prefix": "dsp",
        "body": "dsp",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:pointofinterest": {
        "prefix": "pointofinterest",
        "body": "pointofinterest",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:worldcharacterselectlobby": {
        "prefix": "worldcharacterselectlobby",
        "body": "worldcharacterselectlobby",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:worker": {
        "prefix": "worker",
        "body": "worker",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:workable": {
        "prefix": "workable",
        "body": "workable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:birdspawner": {
        "prefix": "birdspawner",
        "body": "birdspawner",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:oceantrawler": {
        "prefix": "oceantrawler",
        "body": "oceantrawler",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:area_unlock": {
        "prefix": "area_unlock",
        "body": "area_unlock",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:winter_treeseed": {
        "prefix": "winter_treeseed",
        "body": "winter_treeseed",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:wisecracker": {
        "prefix": "wisecracker",
        "body": "wisecracker",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:hull": {
        "prefix": "hull",
        "body": "hull",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:simplemagicgrower": {
        "prefix": "simplemagicgrower",
        "body": "simplemagicgrower",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:skinner_beefalo": {
        "prefix": "skinner_beefalo",
        "body": "skinner_beefalo",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:winchtarget": {
        "prefix": "winchtarget",
        "body": "winchtarget",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:eater": {
        "prefix": "eater",
        "body": "eater",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:blinkstaff": {
        "prefix": "blinkstaff",
        "body": "blinkstaff",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:hudindicatable": {
        "prefix": "hudindicatable",
        "body": "hudindicatable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:compostingbin": {
        "prefix": "compostingbin",
        "body": "compostingbin",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:deployable": {
        "prefix": "deployable",
        "body": "deployable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:hatchable": {
        "prefix": "hatchable",
        "body": "hatchable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:wintersfeasttable": {
        "prefix": "wintersfeasttable",
        "body": "wintersfeasttable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:winonateleportpadmanager": {
        "prefix": "winonateleportpadmanager",
        "body": "winonateleportpadmanager",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:playbill": {
        "prefix": "playbill",
        "body": "playbill",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:birdattractor": {
        "prefix": "birdattractor",
        "body": "birdattractor",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:sheltered_replica": {
        "prefix": "sheltered_replica",
        "body": "sheltered_replica",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:spellcaster": {
        "prefix": "spellcaster",
        "body": "spellcaster",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:map": {
        "prefix": "map",
        "body": "map",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:feasts": {
        "prefix": "feasts",
        "body": "feasts",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:platformhopdelay": {
        "prefix": "platformhopdelay",
        "body": "platformhopdelay",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:klaussackkey": {
        "prefix": "klaussackkey",
        "body": "klaussackkey",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:weapon": {
        "prefix": "weapon",
        "body": "weapon",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:waxable": {
        "prefix": "waxable",
        "body": "waxable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:watersource": {
        "prefix": "watersource",
        "body": "watersource",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:upgrademoduleremover": {
        "prefix": "upgrademoduleremover",
        "body": "upgrademoduleremover",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:waterproofer": {
        "prefix": "waterproofer",
        "body": "waterproofer",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:walkingplankuser": {
        "prefix": "walkingplankuser",
        "body": "walkingplankuser",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:walkingplank": {
        "prefix": "walkingplank",
        "body": "walkingplank",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:frostybreather": {
        "prefix": "frostybreather",
        "body": "frostybreather",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:quagmire_music": {
        "prefix": "quagmire_music",
        "body": "quagmire_music",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:walkableplatform": {
        "prefix": "walkableplatform",
        "body": "walkableplatform",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:wagpunk_manager": {
        "prefix": "wagpunk_manager",
        "body": "wagpunk_manager",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:vinebridgemanager": {
        "prefix": "vinebridgemanager",
        "body": "vinebridgemanager",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:upgrademodule": {
        "prefix": "upgrademodule",
        "body": "upgrademodule",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:shard_clock": {
        "prefix": "shard_clock",
        "body": "shard_clock",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:minigame_participator": {
        "prefix": "minigame_participator",
        "body": "minigame_participator",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:minionspawner": {
        "prefix": "minionspawner",
        "body": "minionspawner",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:sentientaxe": {
        "prefix": "sentientaxe",
        "body": "sentientaxe",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:useabletargeteditem": {
        "prefix": "useabletargeteditem",
        "body": "useabletargeteditem",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:useableitem": {
        "prefix": "useableitem",
        "body": "useableitem",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:vasedecoration": {
        "prefix": "vasedecoration",
        "body": "vasedecoration",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:upgradeable": {
        "prefix": "upgradeable",
        "body": "upgradeable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:rider_replica": {
        "prefix": "rider_replica",
        "body": "rider_replica",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:updatelooper": {
        "prefix": "updatelooper",
        "body": "updatelooper",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:uniqueprefabids": {
        "prefix": "uniqueprefabids",
        "body": "uniqueprefabids",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:uniqueid": {
        "prefix": "uniqueid",
        "body": "uniqueid",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:skeletonsweeper": {
        "prefix": "skeletonsweeper",
        "body": "skeletonsweeper",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:health": {
        "prefix": "health",
        "body": "health",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:groundpounder": {
        "prefix": "groundpounder",
        "body": "groundpounder",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:trophyscale": {
        "prefix": "trophyscale",
        "body": "trophyscale",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:inventory": {
        "prefix": "inventory",
        "body": "inventory",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:tributable": {
        "prefix": "tributable",
        "body": "tributable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:forgerepairable": {
        "prefix": "forgerepairable",
        "body": "forgerepairable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:mightygym": {
        "prefix": "mightygym",
        "body": "mightygym",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:transparentonsanity": {
        "prefix": "transparentonsanity",
        "body": "transparentonsanity",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:transformer": {
        "prefix": "transformer",
        "body": "transformer",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:shadowcreaturespawner": {
        "prefix": "shadowcreaturespawner",
        "body": "shadowcreaturespawner",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:recallmark": {
        "prefix": "recallmark",
        "body": "recallmark",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:damagetyperesist": {
        "prefix": "damagetyperesist",
        "body": "damagetyperesist",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:tradable": {
        "prefix": "tradable",
        "body": "tradable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:scenariorunner": {
        "prefix": "scenariorunner",
        "body": "scenariorunner",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:steeringwheeluser": {
        "prefix": "steeringwheeluser",
        "body": "steeringwheeluser",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:farmplantstress": {
        "prefix": "farmplantstress",
        "body": "farmplantstress",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:herd": {
        "prefix": "herd",
        "body": "herd",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:circuitnode": {
        "prefix": "circuitnode",
        "body": "circuitnode",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:resistance": {
        "prefix": "resistance",
        "body": "resistance",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:halloweenmoonmutable": {
        "prefix": "halloweenmoonmutable",
        "body": "halloweenmoonmutable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:forestpetrification": {
        "prefix": "forestpetrification",
        "body": "forestpetrification",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:simplebook": {
        "prefix": "simplebook",
        "body": "simplebook",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:terraformer": {
        "prefix": "terraformer",
        "body": "terraformer",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:childspawner": {
        "prefix": "childspawner",
        "body": "childspawner",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:spidermutator": {
        "prefix": "spidermutator",
        "body": "spidermutator",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:dryable": {
        "prefix": "dryable",
        "body": "dryable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:teleporter": {
        "prefix": "teleporter",
        "body": "teleporter",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:teleportedoverride": {
        "prefix": "teleportedoverride",
        "body": "teleportedoverride",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:teamleader": {
        "prefix": "teamleader",
        "body": "teamleader",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:boatdrag": {
        "prefix": "boatdrag",
        "body": "boatdrag",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:spellbookcooldowns": {
        "prefix": "spellbookcooldowns",
        "body": "spellbookcooldowns",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:teacher": {
        "prefix": "teacher",
        "body": "teacher",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:targettracker": {
        "prefix": "targettracker",
        "body": "targettracker",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:talkable": {
        "prefix": "talkable",
        "body": "talkable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:retrofitcavemap_anr": {
        "prefix": "retrofitcavemap_anr",
        "body": "retrofitcavemap_anr",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:tackler": {
        "prefix": "tackler",
        "body": "tackler",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:bundler": {
        "prefix": "bundler",
        "body": "bundler",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:gym": {
        "prefix": "gym",
        "body": "gym",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:boatrace_proximitybeacon": {
        "prefix": "boatrace_proximitybeacon",
        "body": "boatrace_proximitybeacon",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:kitcoon": {
        "prefix": "kitcoon",
        "body": "kitcoon",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:symbolswapdata": {
        "prefix": "symbolswapdata",
        "body": "symbolswapdata",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:hallucinations": {
        "prefix": "hallucinations",
        "body": "hallucinations",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:strongman": {
        "prefix": "strongman",
        "body": "strongman",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:carnivaldecor": {
        "prefix": "carnivaldecor",
        "body": "carnivaldecor",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:stretcher": {
        "prefix": "stretcher",
        "body": "stretcher",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:grue": {
        "prefix": "grue",
        "body": "grue",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:storyteller": {
        "prefix": "storyteller",
        "body": "storyteller",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:furnituredecortaker": {
        "prefix": "furnituredecortaker",
        "body": "furnituredecortaker",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:stormwatcher": {
        "prefix": "stormwatcher",
        "body": "stormwatcher",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:boatai": {
        "prefix": "boatai",
        "body": "boatai",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:mermkingmanager": {
        "prefix": "mermkingmanager",
        "body": "mermkingmanager",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:explosive": {
        "prefix": "explosive",
        "body": "explosive",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:complexprojectile": {
        "prefix": "complexprojectile",
        "body": "complexprojectile",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:regrowthmanager": {
        "prefix": "regrowthmanager",
        "body": "regrowthmanager",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:wereeater": {
        "prefix": "wereeater",
        "body": "wereeater",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:hunger": {
        "prefix": "hunger",
        "body": "hunger",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:squadmember": {
        "prefix": "squadmember",
        "body": "squadmember",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:scaler": {
        "prefix": "scaler",
        "body": "scaler",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:highlight": {
        "prefix": "highlight",
        "body": "highlight",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:boatmagnet": {
        "prefix": "boatmagnet",
        "body": "boatmagnet",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:autoterraformer": {
        "prefix": "autoterraformer",
        "body": "autoterraformer",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:incrementalproducer": {
        "prefix": "incrementalproducer",
        "body": "incrementalproducer",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:spooked": {
        "prefix": "spooked",
        "body": "spooked",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:temperature": {
        "prefix": "temperature",
        "body": "temperature",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:teamattacker": {
        "prefix": "teamattacker",
        "body": "teamattacker",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:spellbook": {
        "prefix": "spellbook",
        "body": "spellbook",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:spectatorcorpse": {
        "prefix": "spectatorcorpse",
        "body": "spectatorcorpse",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:canopyshadows": {
        "prefix": "canopyshadows",
        "body": "canopyshadows",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:specialeventsetup": {
        "prefix": "specialeventsetup",
        "body": "specialeventsetup",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:spdamageutil": {
        "prefix": "spdamageutil",
        "body": "spdamageutil",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:beargerspawner": {
        "prefix": "beargerspawner",
        "body": "beargerspawner",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:spawnfader": {
        "prefix": "spawnfader",
        "body": "spawnfader",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:playerhearing": {
        "prefix": "playerhearing",
        "body": "playerhearing",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:follower_replica": {
        "prefix": "follower_replica",
        "body": "follower_replica",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:heavyobstaclephysics": {
        "prefix": "heavyobstaclephysics",
        "body": "heavyobstaclephysics",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:craftingstation": {
        "prefix": "craftingstation",
        "body": "craftingstation",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:groundcreep": {
        "prefix": "groundcreep",
        "body": "groundcreep",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:boatpatch": {
        "prefix": "boatpatch",
        "body": "boatpatch",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:sleepingbag": {
        "prefix": "sleepingbag",
        "body": "sleepingbag",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:maprevealer": {
        "prefix": "maprevealer",
        "body": "maprevealer",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:remoteteleporter": {
        "prefix": "remoteteleporter",
        "body": "remoteteleporter",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:sleeper": {
        "prefix": "sleeper",
        "body": "sleeper",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:wintertreegiftable": {
        "prefix": "wintertreegiftable",
        "body": "wintertreegiftable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:fishingnet": {
        "prefix": "fishingnet",
        "body": "fishingnet",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:sizetweener": {
        "prefix": "sizetweener",
        "body": "sizetweener",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:repellent": {
        "prefix": "repellent",
        "body": "repellent",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:oceanicemanager": {
        "prefix": "oceanicemanager",
        "body": "oceanicemanager",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:moisture": {
        "prefix": "moisture",
        "body": "moisture",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:sisturnregistry": {
        "prefix": "sisturnregistry",
        "body": "sisturnregistry",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:searchable": {
        "prefix": "searchable",
        "body": "searchable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:lightningblocker": {
        "prefix": "lightningblocker",
        "body": "lightningblocker",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:singable": {
        "prefix": "singable",
        "body": "singable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:shop": {
        "prefix": "shop",
        "body": "shop",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:squidspawner": {
        "prefix": "squidspawner",
        "body": "squidspawner",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:hitcher": {
        "prefix": "hitcher",
        "body": "hitcher",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:pocketwatch": {
        "prefix": "pocketwatch",
        "body": "pocketwatch",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:fishable": {
        "prefix": "fishable",
        "body": "fishable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:shelf": {
        "prefix": "shelf",
        "body": "shelf",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:shedder": {
        "prefix": "shedder",
        "body": "shedder",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:anchor": {
        "prefix": "anchor",
        "body": "anchor",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:shard_worldvoter": {
        "prefix": "shard_worldvoter",
        "body": "shard_worldvoter",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:hauntable": {
        "prefix": "hauntable",
        "body": "hauntable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:playertargetindicator": {
        "prefix": "playertargetindicator",
        "body": "playertargetindicator",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:vanish_on_sleep": {
        "prefix": "vanish_on_sleep",
        "body": "vanish_on_sleep",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:playermetrics": {
        "prefix": "playermetrics",
        "body": "playermetrics",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:moonaltarlink": {
        "prefix": "moonaltarlink",
        "body": "moonaltarlink",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:boatleak": {
        "prefix": "boatleak",
        "body": "boatleak",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:shardstate": {
        "prefix": "shardstate",
        "body": "shardstate",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:crewmember": {
        "prefix": "crewmember",
        "body": "crewmember",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:farmplanttendable": {
        "prefix": "farmplanttendable",
        "body": "farmplanttendable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:shadowthrallmanager": {
        "prefix": "shadowthrallmanager",
        "body": "shadowthrallmanager",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:shadowlevel": {
        "prefix": "shadowlevel",
        "body": "shadowlevel",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:playervoter": {
        "prefix": "playervoter",
        "body": "playervoter",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:cooker": {
        "prefix": "cooker",
        "body": "cooker",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:rechargeable": {
        "prefix": "rechargeable",
        "body": "rechargeable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:constructionsite": {
        "prefix": "constructionsite",
        "body": "constructionsite",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:dockmanager": {
        "prefix": "dockmanager",
        "body": "dockmanager",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:setbonus": {
        "prefix": "setbonus",
        "body": "setbonus",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:reader": {
        "prefix": "reader",
        "body": "reader",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:damagetypebonus": {
        "prefix": "damagetypebonus",
        "body": "damagetypebonus",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:boatmagnetbeacon": {
        "prefix": "boatmagnetbeacon",
        "body": "boatmagnetbeacon",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:npc_talker": {
        "prefix": "npc_talker",
        "body": "npc_talker",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:yotd_raceprizemanager": {
        "prefix": "yotd_raceprizemanager",
        "body": "yotd_raceprizemanager",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:shadowhandspawner": {
        "prefix": "shadowhandspawner",
        "body": "shadowhandspawner",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:fuel": {
        "prefix": "fuel",
        "body": "fuel",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:scrapbookable": {
        "prefix": "scrapbookable",
        "body": "scrapbookable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:savedscale": {
        "prefix": "savedscale",
        "body": "savedscale",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:playervision": {
        "prefix": "playervision",
        "body": "playervision",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:leader": {
        "prefix": "leader",
        "body": "leader",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:lunarhailmanager": {
        "prefix": "lunarhailmanager",
        "body": "lunarhailmanager",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:sanityaura": {
        "prefix": "sanityaura",
        "body": "sanityaura",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:perishable": {
        "prefix": "perishable",
        "body": "perishable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:nightmareclock": {
        "prefix": "nightmareclock",
        "body": "nightmareclock",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:sandstormwatcher": {
        "prefix": "sandstormwatcher",
        "body": "sandstormwatcher",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:growable": {
        "prefix": "growable",
        "body": "growable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:saltlicker": {
        "prefix": "saltlicker",
        "body": "saltlicker",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:roseinspectableuser": {
        "prefix": "roseinspectableuser",
        "body": "roseinspectableuser",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:oceancolor": {
        "prefix": "oceancolor",
        "body": "oceancolor",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:rideable": {
        "prefix": "rideable",
        "body": "rideable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:revivablecorpse": {
        "prefix": "revivablecorpse",
        "body": "revivablecorpse",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:reticule": {
        "prefix": "reticule",
        "body": "reticule",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:channelcastable": {
        "prefix": "channelcastable",
        "body": "channelcastable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:maxlightspawner": {
        "prefix": "maxlightspawner",
        "body": "maxlightspawner",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:tool": {
        "prefix": "tool",
        "body": "tool",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:researchpointconverter": {
        "prefix": "researchpointconverter",
        "body": "researchpointconverter",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:replayproxy": {
        "prefix": "replayproxy",
        "body": "replayproxy",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:repairer": {
        "prefix": "repairer",
        "body": "repairer",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:moistureimmunity": {
        "prefix": "moistureimmunity",
        "body": "moistureimmunity",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:repairable": {
        "prefix": "repairable",
        "body": "repairable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:reloaditem": {
        "prefix": "reloaditem",
        "body": "reloaditem",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:formationleader": {
        "prefix": "formationleader",
        "body": "formationleader",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:daywalkerspawner": {
        "prefix": "daywalkerspawner",
        "body": "daywalkerspawner",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:recipescanner": {
        "prefix": "recipescanner",
        "body": "recipescanner",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:quagmire_recipeprices": {
        "prefix": "quagmire_recipeprices",
        "body": "quagmire_recipeprices",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:quagmire_map": {
        "prefix": "quagmire_map",
        "body": "quagmire_map",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:klaussackspawner": {
        "prefix": "klaussackspawner",
        "body": "klaussackspawner",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:prophider": {
        "prefix": "prophider",
        "body": "prophider",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:inventoryitem_replica": {
        "prefix": "inventoryitem_replica",
        "body": "inventoryitem_replica",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:magician": {
        "prefix": "magician",
        "body": "magician",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:preservative": {
        "prefix": "preservative",
        "body": "preservative",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:portablestructure": {
        "prefix": "portablestructure",
        "body": "portablestructure",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:poppable": {
        "prefix": "poppable",
        "body": "poppable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:domesticatable": {
        "prefix": "domesticatable",
        "body": "domesticatable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:farmplantable": {
        "prefix": "farmplantable",
        "body": "farmplantable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:worlddeciduoustreeupdater": {
        "prefix": "worlddeciduoustreeupdater",
        "body": "worlddeciduoustreeupdater",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:maxhealer": {
        "prefix": "maxhealer",
        "body": "maxhealer",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:playerspawner": {
        "prefix": "playerspawner",
        "body": "playerspawner",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:playerlightningtarget": {
        "prefix": "playerlightningtarget",
        "body": "playerlightningtarget",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:spawner": {
        "prefix": "spawner",
        "body": "spawner",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:lunarriftmutationsmanager": {
        "prefix": "lunarriftmutationsmanager",
        "body": "lunarriftmutationsmanager",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:moonstormmanager": {
        "prefix": "moonstormmanager",
        "body": "moonstormmanager",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:playeractionpicker": {
        "prefix": "playeractionpicker",
        "body": "playeractionpicker",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:wereness": {
        "prefix": "wereness",
        "body": "wereness",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:grottowarmanager": {
        "prefix": "grottowarmanager",
        "body": "grottowarmanager",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:werebeast": {
        "prefix": "werebeast",
        "body": "werebeast",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:aoeweapon_base": {
        "prefix": "aoeweapon_base",
        "body": "aoeweapon_base",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:yotb_stagemanager": {
        "prefix": "yotb_stagemanager",
        "body": "yotb_stagemanager",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:plantregistryupdater": {
        "prefix": "plantregistryupdater",
        "body": "plantregistryupdater",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:forestresourcespawner": {
        "prefix": "forestresourcespawner",
        "body": "forestresourcespawner",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:planarentity": {
        "prefix": "planarentity",
        "body": "planarentity",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:boatcannon": {
        "prefix": "boatcannon",
        "body": "boatcannon",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:placer": {
        "prefix": "placer",
        "body": "placer",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:pickable": {
        "prefix": "pickable",
        "body": "pickable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:bait": {
        "prefix": "bait",
        "body": "bait",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:petrifiable": {
        "prefix": "petrifiable",
        "body": "petrifiable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:pethealthbar": {
        "prefix": "pethealthbar",
        "body": "pethealthbar",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:sanity": {
        "prefix": "sanity",
        "body": "sanity",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:incinerator": {
        "prefix": "incinerator",
        "body": "incinerator",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:expertsailor": {
        "prefix": "expertsailor",
        "body": "expertsailor",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:periodicspawner": {
        "prefix": "periodicspawner",
        "body": "periodicspawner",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:parryweapon": {
        "prefix": "parryweapon",
        "body": "parryweapon",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:grottowaterfallsoundcontroller": {
        "prefix": "grottowaterfallsoundcontroller",
        "body": "grottowaterfallsoundcontroller",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:papereraser": {
        "prefix": "papereraser",
        "body": "papereraser",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:rooted": {
        "prefix": "rooted",
        "body": "rooted",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:moonbeastspawner": {
        "prefix": "moonbeastspawner",
        "body": "moonbeastspawner",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:hideandseekgame": {
        "prefix": "hideandseekgame",
        "body": "hideandseekgame",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:oar": {
        "prefix": "oar",
        "body": "oar",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:drawingtool": {
        "prefix": "drawingtool",
        "body": "drawingtool",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:murderable": {
        "prefix": "murderable",
        "body": "murderable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:boatracecrew": {
        "prefix": "boatracecrew",
        "body": "boatracecrew",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:moonstormwatcher": {
        "prefix": "moonstormwatcher",
        "body": "moonstormwatcher",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:worldmeteorshower": {
        "prefix": "worldmeteorshower",
        "body": "worldmeteorshower",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:houndedtarget": {
        "prefix": "houndedtarget",
        "body": "houndedtarget",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:cooldown": {
        "prefix": "cooldown",
        "body": "cooldown",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:fader": {
        "prefix": "fader",
        "body": "fader",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:moonrelic": {
        "prefix": "moonrelic",
        "body": "moonrelic",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:miasmamanager": {
        "prefix": "miasmamanager",
        "body": "miasmamanager",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:occupier": {
        "prefix": "occupier",
        "body": "occupier",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:inventoryitemmoisture": {
        "prefix": "inventoryitemmoisture",
        "body": "inventoryitemmoisture",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:damagereflect": {
        "prefix": "damagereflect",
        "body": "damagereflect",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:experiencecollector": {
        "prefix": "experiencecollector",
        "body": "experiencecollector",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:moonaltarlinktarget": {
        "prefix": "moonaltarlinktarget",
        "body": "moonaltarlinktarget",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:decay": {
        "prefix": "decay",
        "body": "decay",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:bloomer": {
        "prefix": "bloomer",
        "body": "bloomer",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:sittable": {
        "prefix": "sittable",
        "body": "sittable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:mightydumbbell": {
        "prefix": "mightydumbbell",
        "body": "mightydumbbell",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:mightiness": {
        "prefix": "mightiness",
        "body": "mightiness",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:guardian": {
        "prefix": "guardian",
        "body": "guardian",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:meteorshower": {
        "prefix": "meteorshower",
        "body": "meteorshower",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:carnivalgameshooter": {
        "prefix": "carnivalgameshooter",
        "body": "carnivalgameshooter",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:harvestable": {
        "prefix": "harvestable",
        "body": "harvestable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:dumbbelllifter": {
        "prefix": "dumbbelllifter",
        "body": "dumbbelllifter",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:markable_proxy": {
        "prefix": "markable_proxy",
        "body": "markable_proxy",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:maprevealable": {
        "prefix": "maprevealable",
        "body": "maprevealable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:projectedeffects": {
        "prefix": "projectedeffects",
        "body": "projectedeffects",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:foodaffinity": {
        "prefix": "foodaffinity",
        "body": "foodaffinity",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:commander": {
        "prefix": "commander",
        "body": "commander",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:follower": {
        "prefix": "follower",
        "body": "follower",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:formationfollower": {
        "prefix": "formationfollower",
        "body": "formationfollower",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:playeravatardata": {
        "prefix": "playeravatardata",
        "body": "playeravatardata",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:lunarplant_tentacle_weapon": {
        "prefix": "lunarplant_tentacle_weapon",
        "body": "lunarplant_tentacle_weapon",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:lootdropper": {
        "prefix": "lootdropper",
        "body": "lootdropper",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:book": {
        "prefix": "book",
        "body": "book",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:lavaarenamobtracker": {
        "prefix": "lavaarenamobtracker",
        "body": "lavaarenamobtracker",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:crabkingspawner": {
        "prefix": "crabkingspawner",
        "body": "crabkingspawner",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:gingerbreadhunter": {
        "prefix": "gingerbreadhunter",
        "body": "gingerbreadhunter",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:kramped": {
        "prefix": "kramped",
        "body": "kramped",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:undertile": {
        "prefix": "undertile",
        "body": "undertile",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:propagator": {
        "prefix": "propagator",
        "body": "propagator",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:inspectaclesparticipant": {
        "prefix": "inspectaclesparticipant",
        "body": "inspectaclesparticipant",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:fuelmaster": {
        "prefix": "fuelmaster",
        "body": "fuelmaster",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:hullhealth": {
        "prefix": "hullhealth",
        "body": "hullhealth",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:hudindicatablemanager": {
        "prefix": "hudindicatablemanager",
        "body": "hudindicatablemanager",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:homeseeker": {
        "prefix": "homeseeker",
        "body": "homeseeker",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:hideout": {
        "prefix": "hideout",
        "body": "hideout",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:oasis": {
        "prefix": "oasis",
        "body": "oasis",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:hideandseeker": {
        "prefix": "hideandseeker",
        "body": "hideandseeker",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:souleater": {
        "prefix": "souleater",
        "body": "souleater",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:heater": {
        "prefix": "heater",
        "body": "heater",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:healthbar": {
        "prefix": "healthbar",
        "body": "healthbar",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:deciduoustreeupdater": {
        "prefix": "deciduoustreeupdater",
        "body": "deciduoustreeupdater",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:carnivaldecorranker": {
        "prefix": "carnivaldecorranker",
        "body": "carnivaldecorranker",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:unevenground": {
        "prefix": "unevenground",
        "body": "unevenground",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:shard_seasons": {
        "prefix": "shard_seasons",
        "body": "shard_seasons",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:maxwelltalker": {
        "prefix": "maxwelltalker",
        "body": "maxwelltalker",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:halloweenpotionmoon": {
        "prefix": "halloweenpotionmoon",
        "body": "halloweenpotionmoon",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:itemaffinity": {
        "prefix": "itemaffinity",
        "body": "itemaffinity",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:brushable": {
        "prefix": "brushable",
        "body": "brushable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:builder_replica": {
        "prefix": "builder_replica",
        "body": "builder_replica",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:giftreceiver": {
        "prefix": "giftreceiver",
        "body": "giftreceiver",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:bedazzler": {
        "prefix": "bedazzler",
        "body": "bedazzler",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:ghostlybond": {
        "prefix": "ghostlybond",
        "body": "ghostlybond",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:fertilizer": {
        "prefix": "fertilizer",
        "body": "fertilizer",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:fueler": {
        "prefix": "fueler",
        "body": "fueler",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:fueled": {
        "prefix": "fueled",
        "body": "fueled",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:brightmarespawner": {
        "prefix": "brightmarespawner",
        "body": "brightmarespawner",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:combat_replica": {
        "prefix": "combat_replica",
        "body": "combat_replica",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:walkableplatformmanager": {
        "prefix": "walkableplatformmanager",
        "body": "walkableplatformmanager",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:forgerepair": {
        "prefix": "forgerepair",
        "body": "forgerepair",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:toggleableitem": {
        "prefix": "toggleableitem",
        "body": "toggleableitem",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:madsciencelab": {
        "prefix": "madsciencelab",
        "body": "madsciencelab",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:ambientsound": {
        "prefix": "ambientsound",
        "body": "ambientsound",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:flotsamgenerator": {
        "prefix": "flotsamgenerator",
        "body": "flotsamgenerator",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:floater": {
        "prefix": "floater",
        "body": "floater",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:fishingnetvisualizer": {
        "prefix": "fishingnetvisualizer",
        "body": "fishingnetvisualizer",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:ambientlighting": {
        "prefix": "ambientlighting",
        "body": "ambientlighting",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:touchstonetracker": {
        "prefix": "touchstonetracker",
        "body": "touchstonetracker",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:fan": {
        "prefix": "fan",
        "body": "fan",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:stackable_replica": {
        "prefix": "stackable_replica",
        "body": "stackable_replica",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:damagetracker": {
        "prefix": "damagetracker",
        "body": "damagetracker",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:edible": {
        "prefix": "edible",
        "body": "edible",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:drownable": {
        "prefix": "drownable",
        "body": "drownable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:pollinator": {
        "prefix": "pollinator",
        "body": "pollinator",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:debuff": {
        "prefix": "debuff",
        "body": "debuff",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:dataanalyzer": {
        "prefix": "dataanalyzer",
        "body": "dataanalyzer",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:embarker": {
        "prefix": "embarker",
        "body": "embarker",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:cyclable": {
        "prefix": "cyclable",
        "body": "cyclable",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:crittertraits": {
        "prefix": "crittertraits",
        "body": "crittertraits",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:seasons": {
        "prefix": "seasons",
        "body": "seasons",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:constructionsite_replica": {
        "prefix": "constructionsite_replica",
        "body": "constructionsite_replica",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:constructionplans": {
        "prefix": "constructionplans",
        "body": "constructionplans",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:caveweather": {
        "prefix": "caveweather",
        "body": "caveweather",
        "description": " ※Description: \n ※Contributor: "
    },
    "Component:stewer": {
        "prefix": "stewer",
        "body": "stewer",
        "description": " ※Description: \n ※Contributor: "
    },
    "var:components组件": {
        "prefix": "components",
        "body": "components",
        "description": " ※Description: 组件\n ※Contributor: lan"
    },
    "var:AnimState动画(系统组件)": {
        "prefix": "AnimState",
        "body": "AnimState",
        "description": " ※Description: 动画(系统组件)\n ※Contributor: lan"
    },
    "var:Transform体型(系统组件)": {
        "prefix": "Transform",
        "body": "Transform",
        "description": " ※Description: 体型(系统组件)\n ※Contributor: lan"
    },
    "var:Physics物理性(系统组件)": {
        "prefix": "Physics",
        "body": "Physics",
        "description": " ※Description: 物理性(系统组件)\n ※Contributor: lan"
    },
    "var:Light光源(系统组件)": {
        "prefix": "Light",
        "body": "Light",
        "description": " ※Description: 光源(系统组件)\n ※Contributor: lan"
    },
    "var:attacker攻击者": {
        "prefix": "attacker",
        "body": "attacker",
        "description": " ※Description: 攻击者\n ※Contributor: lan"
    },
    "var:target目标": {
        "prefix": "target",
        "body": "target",
        "description": " ※Description: 目标\n ※Contributor: lan"
    },
    "var:SoundEmitter声音发射器(系统组件)": {
        "prefix": "SoundEmitter",
        "body": "SoundEmitter",
        "description": " ※Description: 声音发射器(系统组件)\n ※Contributor: lan"
    },
    "var:MiniMap小地图(系统组件)": {
        "prefix": "MiniMap",
        "body": "MiniMap",
        "description": " ※Description: 小地图(系统组件)\n ※Contributor: lan"
    },
    "var:Network网络(系统组件)": {
        "prefix": "Network",
        "body": "Network",
        "description": " ※Description: 网络(系统组件)\n ※Contributor: lan"
    },
    "Word:id": {
        "prefix": "id",
        "body": "id",
        "description": " ※Description: "
    },
    "Word:API": {
        "prefix": "API",
        "body": "API",
        "description": " ※Description: "
    }
}